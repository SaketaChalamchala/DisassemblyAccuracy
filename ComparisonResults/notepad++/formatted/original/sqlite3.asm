_openDatabase PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _zOpen$[ebp], 0
mov	DWORD PTR _zErrMsg$[ebp], 0
mov	eax, DWORD PTR _ppDb$[ebp]
mov	DWORD PTR [eax], 0
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN27@openDataba
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN28@openDataba
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 7
mov	edx, 1
shl	edx, cl
and	edx, 70					
jne	SHORT $LN26@openDataba
push	123516					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN28@openDataba
cmp	DWORD PTR _sqlite3Config+4, 0
jne	SHORT $LN25@openDataba
mov	DWORD PTR _isThreadsafe$[ebp], 0
jmp	SHORT $LN24@openDataba
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 32768				
je	SHORT $LN23@openDataba
mov	DWORD PTR _isThreadsafe$[ebp], 0
jmp	SHORT $LN24@openDataba
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 65536				
je	SHORT $LN21@openDataba
mov	DWORD PTR _isThreadsafe$[ebp], 1
jmp	SHORT $LN24@openDataba
mov	edx, DWORD PTR _sqlite3Config+8
mov	DWORD PTR _isThreadsafe$[ebp], edx
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 262144				
je	SHORT $LN19@openDataba
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, -131073				
mov	DWORD PTR _flags$[ebp], ecx
jmp	SHORT $LN18@openDataba
cmp	DWORD PTR _sqlite3Config+220, 0
je	SHORT $LN18@openDataba
mov	edx, DWORD PTR _flags$[ebp]
or	edx, 131072				
mov	DWORD PTR _flags$[ebp], edx
mov	eax, DWORD PTR _flags$[ebp]
and	eax, -655129				
mov	DWORD PTR _flags$[ebp], eax
push	520					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
cmp	DWORD PTR _db$[ebp], 0
jne	SHORT $LN16@openDataba
jmp	$opendb_out$32
cmp	DWORD PTR _isThreadsafe$[ebp], 0
je	SHORT $LN15@openDataba
push	1
call	_sqlite3MutexAlloc
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN15@openDataba
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _db$[ebp], 0
jmp	$opendb_out$32
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+56], 255			
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+20], 2
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+76], -264537850		
mov	eax, DWORD PTR _db$[ebp]
add	eax, 448				
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+16], eax
push	44					
push	OFFSET _aHardLimit
mov	edx, DWORD PTR _db$[ebp]
add	edx, 88					
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+62], 1
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+66], -1
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _sqlite3Config+176
mov	DWORD PTR [edx+40], eax
mov	ecx, DWORD PTR _sqlite3Config+180
mov	DWORD PTR [edx+44], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+72], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
or	ecx, 9437264				
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _db$[ebp]
add	eax, 420				
push	eax
call	_sqlite3HashInit
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
add	ecx, 300				
push	ecx
call	_sqlite3HashInit
add	esp, 4
push	0
push	OFFSET _binCollFunc
push	0
push	1
push	OFFSET $SG121496
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_createCollation
add	esp, 24					
push	0
push	OFFSET _binCollFunc
push	0
push	3
push	OFFSET $SG121497
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_createCollation
add	esp, 24					
push	0
push	OFFSET _binCollFunc
push	0
push	2
push	OFFSET $SG121498
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_createCollation
add	esp, 24					
push	0
push	OFFSET _binCollFunc
push	1
push	1
push	OFFSET $SG121500
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_createCollation
add	esp, 24					
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN13@openDataba
jmp	$opendb_out$32
push	0
push	OFFSET $SG121502
push	1
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindCollSeq
add	esp, 16					
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+8], eax
push	0
push	OFFSET _nocaseCollatingFunc
push	0
push	1
push	OFFSET $SG121504
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_createCollation
add	esp, 24					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _flags$[ebp]
mov	DWORD PTR [eax+48], ecx
lea	edx, DWORD PTR _zErrMsg$[ebp]
push	edx
lea	eax, DWORD PTR _zOpen$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
lea	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
mov	ecx, DWORD PTR _zVfs$[ebp]
push	ecx
call	_sqlite3ParseUri
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@openDataba
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN11@openDataba
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
cmp	DWORD PTR _zErrMsg$[ebp], 0
je	SHORT $LN30@openDataba
mov	DWORD PTR tv200[ebp], OFFSET $SG121507
jmp	SHORT $LN31@openDataba
mov	DWORD PTR tv200[ebp], 0
mov	eax, DWORD PTR _zErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR tv200[ebp]
push	ecx
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 16					
mov	ecx, DWORD PTR _zErrMsg$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
jmp	$opendb_out$32
mov	edx, DWORD PTR _flags$[ebp]
or	edx, 256				
push	edx
push	0
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
lea	ecx, DWORD PTR [eax+ecx+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _zOpen$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3BtreeOpen
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@openDataba
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN9@openDataba
mov	DWORD PTR _rc$[ebp], 7
push	0
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 12					
jmp	$opendb_out$32
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaGet
add	esp, 8
mov	edx, 16					
imul	ecx, edx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [edx+16]
mov	DWORD PTR [edx+ecx+12], eax
push	0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SchemaGet
add	esp, 8
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [edx+16]
mov	DWORD PTR [edx+ecx+12], eax
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR [eax+ecx], OFFSET $SG121510
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	BYTE PTR [ecx+edx+8], 3
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [ecx+edx], OFFSET $SG121511
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	BYTE PTR [ecx+edx+8], 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+76], -1607883113		
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN8@openDataba
jmp	$opendb_out$32
push	0
push	0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3RegisterBuiltinFunctions
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_errcode
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@openDataba
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3AutoLoadExtensions
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_errcode
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@openDataba
jmp	SHORT $opendb_out$32
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@openDataba
push	0
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	eax, DWORD PTR _sqlite3Config+32
push	eax
mov	ecx, DWORD PTR _sqlite3Config+28
push	ecx
push	0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_setupLookaside
add	esp, 16					
push	1000					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_wal_autocheckpoint
add	esp, 8
mov	ecx, DWORD PTR _zOpen$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN4@openDataba
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_errcode
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN3@openDataba
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_close
add	esp, 4
mov	DWORD PTR _db$[ebp], 0
jmp	SHORT $LN2@openDataba
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@openDataba
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+76], 1266094736		
mov	ecx, DWORD PTR _ppDb$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
push	0
call	_sqlite3ApiExit
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_createCollation PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
movzx	ecx, BYTE PTR _enc$[ebp]
mov	DWORD PTR _enc2$[ebp], ecx
cmp	DWORD PTR _enc2$[ebp], 4
je	SHORT $LN12@createColl
cmp	DWORD PTR _enc2$[ebp], 8
jne	SHORT $LN13@createColl
mov	DWORD PTR _enc2$[ebp], 2
cmp	DWORD PTR _enc2$[ebp], 1
jl	SHORT $LN10@createColl
cmp	DWORD PTR _enc2$[ebp], 3
jle	SHORT $LN11@createColl
push	123094					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN14@createColl
push	0
mov	edx, DWORD PTR _zName$[ebp]
push	edx
movzx	eax, BYTE PTR _enc2$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
je	$LN9@createColl
mov	edx, DWORD PTR _pColl$[ebp]
cmp	DWORD PTR [edx+12], 0
je	$LN9@createColl
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+140], 0
je	SHORT $LN8@createColl
push	OFFSET $SG121304
push	5
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 12					
mov	eax, 5
jmp	$LN14@createColl
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExpirePreparedStatements
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_invalidateCachedKeyInfo
add	esp, 4
mov	ecx, DWORD PTR _pColl$[ebp]
movzx	edx, BYTE PTR [ecx+4]
and	edx, -9					
cmp	edx, DWORD PTR _enc2$[ebp]
jne	SHORT $LN9@createColl
mov	eax, DWORD PTR _nName$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
add	edx, 420				
push	edx
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _aColl$1[ebp], eax
mov	DWORD PTR _j$2[ebp], 0
jmp	SHORT $LN6@createColl
mov	eax, DWORD PTR _j$2[ebp]
add	eax, 1
mov	DWORD PTR _j$2[ebp], eax
cmp	DWORD PTR _j$2[ebp], 3
jge	SHORT $LN9@createColl
imul	ecx, DWORD PTR _j$2[ebp], 20
add	ecx, DWORD PTR _aColl$1[ebp]
mov	DWORD PTR _p$3[ebp], ecx
mov	edx, DWORD PTR _p$3[ebp]
movzx	eax, BYTE PTR [edx+4]
mov	ecx, DWORD PTR _pColl$[ebp]
movzx	edx, BYTE PTR [ecx+4]
cmp	eax, edx
jne	SHORT $LN3@createColl
mov	eax, DWORD PTR _p$3[ebp]
cmp	DWORD PTR [eax+16], 0
je	SHORT $LN2@createColl
mov	ecx, DWORD PTR _p$3[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _p$3[ebp]
mov	ecx, DWORD PTR [eax+16]
call	ecx
add	esp, 4
mov	edx, DWORD PTR _p$3[ebp]
mov	DWORD PTR [edx+12], 0
jmp	SHORT $LN5@createColl
push	1
mov	eax, DWORD PTR _zName$[ebp]
push	eax
movzx	ecx, BYTE PTR _enc2$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
jne	SHORT $LN1@createColl
mov	eax, 7
jmp	SHORT $LN14@createColl
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR _xCompare$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pColl$[ebp]
mov	eax, DWORD PTR _pCtx$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pColl$[ebp]
mov	edx, DWORD PTR _xDel$[ebp]
mov	DWORD PTR [ecx+16], edx
movzx	eax, BYTE PTR _enc$[ebp]
and	eax, 8
or	eax, DWORD PTR _enc2$[ebp]
mov	ecx, DWORD PTR _pColl$[ebp]
mov	BYTE PTR [ecx+4], al
push	0
push	0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_invalidateCachedKeyInfo PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _iDb$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$[ebp], ecx
jmp	SHORT $LN11@invalidate
mov	edx, DWORD PTR _iDb$[ebp]
add	edx, 1
mov	DWORD PTR _iDb$[ebp], edx
mov	eax, DWORD PTR _pDb$[ebp]
add	eax, 16					
mov	DWORD PTR _pDb$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _iDb$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	$LN12@invalidate
mov	eax, DWORD PTR _pDb$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN8@invalidate
jmp	SHORT $LN10@invalidate
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _k$[ebp], edx
jmp	SHORT $LN7@invalidate
mov	eax, DWORD PTR _k$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _k$[ebp], ecx
cmp	DWORD PTR _k$[ebp], 0
je	SHORT $LN5@invalidate
mov	edx, DWORD PTR _k$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pTab$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN4@invalidate
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN2@invalidate
mov	edx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [edx+40], 0
je	SHORT $LN1@invalidate
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	edx, DWORD PTR [ecx+12]
cmp	edx, DWORD PTR _db$[ebp]
jne	SHORT $LN1@invalidate
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
call	_sqlite3KeyInfoUnref
add	esp, 4
mov	edx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [edx+40], 0
jmp	SHORT $LN3@invalidate
jmp	SHORT $LN6@invalidate
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
jmp	$LN10@invalidate
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqliteDefaultBusyCallback PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _ptr$[ebp]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+484]
mov	DWORD PTR _timeout$[ebp], edx
cmp	DWORD PTR _count$[ebp], 12		
jge	SHORT $LN4@sqliteDefa
mov	eax, DWORD PTR _count$[ebp]
movzx	ecx, BYTE PTR ?delays@?1??sqliteDefaultBusyCallback@@9@9[eax]
mov	DWORD PTR _delay$[ebp], ecx
mov	edx, DWORD PTR _count$[ebp]
movzx	eax, BYTE PTR ?totals@?1??sqliteDefaultBusyCallback@@9@9[edx]
mov	DWORD PTR _prior$[ebp], eax
jmp	SHORT $LN3@sqliteDefa
mov	ecx, 1
imul	edx, ecx, 11
movzx	eax, BYTE PTR ?delays@?1??sqliteDefaultBusyCallback@@9@9[edx]
mov	DWORD PTR _delay$[ebp], eax
mov	ecx, 1
imul	edx, ecx, 11
movzx	eax, BYTE PTR ?totals@?1??sqliteDefaultBusyCallback@@9@9[edx]
mov	ecx, DWORD PTR _count$[ebp]
sub	ecx, 11					
imul	ecx, DWORD PTR _delay$[ebp]
add	eax, ecx
mov	DWORD PTR _prior$[ebp], eax
mov	edx, DWORD PTR _prior$[ebp]
add	edx, DWORD PTR _delay$[ebp]
cmp	edx, DWORD PTR _timeout$[ebp]
jle	SHORT $LN2@sqliteDefa
mov	eax, DWORD PTR _timeout$[ebp]
sub	eax, DWORD PTR _prior$[ebp]
mov	DWORD PTR _delay$[ebp], eax
cmp	DWORD PTR _delay$[ebp], 0
jg	SHORT $LN2@sqliteDefa
xor	eax, eax
jmp	SHORT $LN5@sqliteDefa
imul	ecx, DWORD PTR _delay$[ebp], 1000
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3OsSleep
add	esp, 8
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Close PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _db$[ebp], 0
jne	SHORT $LN3@sqlite3Clo
xor	eax, eax
jmp	$LN4@sqlite3Clo
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SafetyCheckSickOrOk
add	esp, 4
test	eax, eax
jne	SHORT $LN2@sqlite3Clo
push	121912					
call	_sqlite3MisuseError
add	esp, 4
jmp	SHORT $LN4@sqlite3Clo
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_disconnectAllVtab
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabRollback
add	esp, 4
cmp	DWORD PTR _forceZombie$[ebp], 0
jne	SHORT $LN1@sqlite3Clo
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_connectionIsBusy
add	esp, 4
test	eax, eax
je	SHORT $LN1@sqlite3Clo
push	OFFSET $SG120740
push	5
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, 5
jmp	SHORT $LN4@sqlite3Clo
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+76], 1691352191		
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3LeaveMutexAndCloseZombie
add	esp, 4
xor	eax, eax
pop	ebp
ret	0
ENDP
_connectionIsBusy PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN5@connection
mov	eax, 1
jmp	SHORT $LN6@connection
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN4@connection
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN2@connection
mov	ecx, DWORD PTR _j$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _pBt$1[ebp], ecx
cmp	DWORD PTR _pBt$1[ebp], 0
je	SHORT $LN1@connection
mov	edx, DWORD PTR _pBt$1[ebp]
push	edx
call	_sqlite3BtreeIsInBackup
add	esp, 4
test	eax, eax
je	SHORT $LN1@connection
mov	eax, 1
jmp	SHORT $LN6@connection
jmp	SHORT $LN3@connection
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_disconnectAllVtab PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@disconnect
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN6@disconnect
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
mov	DWORD PTR _pSchema$1[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
cmp	DWORD PTR [ecx+edx+12], 0
je	SHORT $LN5@disconnect
mov	edx, DWORD PTR _pSchema$1[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _p$3[ebp], eax
jmp	SHORT $LN4@disconnect
mov	ecx, DWORD PTR _p$3[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _p$3[ebp], edx
cmp	DWORD PTR _p$3[ebp], 0
je	SHORT $LN5@disconnect
mov	eax, DWORD PTR _p$3[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pTab$2[ebp], ecx
mov	edx, DWORD PTR _pTab$2[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN1@disconnect
mov	ecx, DWORD PTR _pTab$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VtabDisconnect
add	esp, 8
jmp	SHORT $LN3@disconnect
jmp	SHORT $LN7@disconnect
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VtabUnlockList
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_functionDestroy PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pDestructor$[ebp], ecx
cmp	DWORD PTR _pDestructor$[ebp], 0
je	SHORT $LN3@functionDe
mov	edx, DWORD PTR _pDestructor$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
mov	ecx, DWORD PTR _pDestructor$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pDestructor$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $LN3@functionDe
mov	eax, DWORD PTR _pDestructor$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pDestructor$[ebp]
mov	eax, DWORD PTR [edx+4]
call	eax
add	esp, 4
mov	ecx, DWORD PTR _pDestructor$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_nocaseCollatingFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _nKey1$[ebp]
cmp	eax, DWORD PTR _nKey2$[ebp]
jge	SHORT $LN4@nocaseColl
mov	ecx, DWORD PTR _nKey1$[ebp]
mov	DWORD PTR tv66[ebp], ecx
jmp	SHORT $LN5@nocaseColl
mov	edx, DWORD PTR _nKey2$[ebp]
mov	DWORD PTR tv66[ebp], edx
mov	eax, DWORD PTR tv66[ebp]
push	eax
mov	ecx, DWORD PTR _pKey2$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey1$[ebp]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
mov	DWORD PTR _r$[ebp], eax
cmp	DWORD PTR _r$[ebp], 0
jne	SHORT $LN1@nocaseColl
mov	eax, DWORD PTR _nKey1$[ebp]
sub	eax, DWORD PTR _nKey2$[ebp]
mov	DWORD PTR _r$[ebp], eax
mov	eax, DWORD PTR _r$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_binCollFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _nKey1$[ebp]
cmp	eax, DWORD PTR _nKey2$[ebp]
jge	SHORT $LN6@binCollFun
mov	ecx, DWORD PTR _nKey1$[ebp]
mov	DWORD PTR tv65[ebp], ecx
jmp	SHORT $LN7@binCollFun
mov	edx, DWORD PTR _nKey2$[ebp]
mov	DWORD PTR tv65[ebp], edx
mov	eax, DWORD PTR tv65[ebp]
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey2$[ebp]
push	edx
mov	eax, DWORD PTR _pKey1$[ebp]
push	eax
call	_memcmp
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@binCollFun
cmp	DWORD PTR _padFlag$[ebp], 0
je	SHORT $LN2@binCollFun
mov	ecx, DWORD PTR _nKey1$[ebp]
sub	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey1$[ebp]
add	edx, DWORD PTR _n$[ebp]
push	edx
call	_allSpaces
add	esp, 8
test	eax, eax
je	SHORT $LN2@binCollFun
mov	eax, DWORD PTR _nKey2$[ebp]
sub	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _pKey2$[ebp]
add	ecx, DWORD PTR _n$[ebp]
push	ecx
call	_allSpaces
add	esp, 8
test	eax, eax
je	SHORT $LN2@binCollFun
jmp	SHORT $LN3@binCollFun
mov	edx, DWORD PTR _nKey1$[ebp]
sub	edx, DWORD PTR _nKey2$[ebp]
mov	DWORD PTR _rc$[ebp], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_allSpaces PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _n$[ebp], 0
jle	SHORT $LN1@allSpaces
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _n$[ebp]
movsx	ecx, BYTE PTR [eax-1]
cmp	ecx, 32					
jne	SHORT $LN1@allSpaces
mov	edx, DWORD PTR _n$[ebp]
sub	edx, 1
mov	DWORD PTR _n$[ebp], edx
jmp	SHORT $LN2@allSpaces
cmp	DWORD PTR _n$[ebp], 0
jne	SHORT $LN5@allSpaces
mov	DWORD PTR tv72[ebp], 1
jmp	SHORT $LN6@allSpaces
mov	DWORD PTR tv72[ebp], 0
mov	eax, DWORD PTR tv72[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setupLookaside PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+244], 0
je	SHORT $LN15@setupLooka
mov	eax, 5
jmp	$LN16@setupLooka
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+243]
test	edx, edx
je	SHORT $LN14@setupLooka
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+268]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _sz$[ebp]
and	edx, -8					
mov	DWORD PTR _sz$[ebp], edx
cmp	DWORD PTR _sz$[ebp], 4
jg	SHORT $LN13@setupLooka
mov	DWORD PTR _sz$[ebp], 0
cmp	DWORD PTR _cnt$[ebp], 0
jge	SHORT $LN12@setupLooka
mov	DWORD PTR _cnt$[ebp], 0
cmp	DWORD PTR _sz$[ebp], 0
je	SHORT $LN10@setupLooka
cmp	DWORD PTR _cnt$[ebp], 0
jne	SHORT $LN11@setupLooka
mov	DWORD PTR _sz$[ebp], 0
mov	DWORD PTR _pStart$[ebp], 0
jmp	SHORT $LN9@setupLooka
cmp	DWORD PTR _pBuf$[ebp], 0
jne	SHORT $LN8@setupLooka
call	_sqlite3BeginBenignMalloc
mov	eax, DWORD PTR _sz$[ebp]
imul	eax, DWORD PTR _cnt$[ebp]
push	eax
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _pStart$[ebp], eax
call	_sqlite3EndBenignMalloc
cmp	DWORD PTR _pStart$[ebp], 0
je	SHORT $LN7@setupLooka
mov	ecx, DWORD PTR _pStart$[ebp]
push	ecx
call	_sqlite3MallocSize
add	esp, 4
cdq
idiv	DWORD PTR _sz$[ebp]
mov	DWORD PTR _cnt$[ebp], eax
jmp	SHORT $LN9@setupLooka
mov	edx, DWORD PTR _pBuf$[ebp]
mov	DWORD PTR _pStart$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pStart$[ebp]
mov	DWORD PTR [eax+268], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+264], 0
mov	eax, DWORD PTR _db$[ebp]
mov	cx, WORD PTR _sz$[ebp]
mov	WORD PTR [eax+240], cx
cmp	DWORD PTR _pStart$[ebp], 0
je	SHORT $LN5@setupLooka
mov	edx, DWORD PTR _pStart$[ebp]
mov	DWORD PTR _p$2[ebp], edx
mov	eax, DWORD PTR _cnt$[ebp]
sub	eax, 1
mov	DWORD PTR _i$1[ebp], eax
jmp	SHORT $LN4@setupLooka
mov	ecx, DWORD PTR _i$1[ebp]
sub	ecx, 1
mov	DWORD PTR _i$1[ebp], ecx
cmp	DWORD PTR _i$1[ebp], 0
jl	SHORT $LN2@setupLooka
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+264]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _p$2[ebp]
mov	DWORD PTR [edx+264], eax
mov	ecx, DWORD PTR _p$2[ebp]
add	ecx, DWORD PTR _sz$[ebp]
mov	DWORD PTR _p$2[ebp], ecx
jmp	SHORT $LN3@setupLooka
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _p$2[ebp]
mov	DWORD PTR [edx+272], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+242], 1
cmp	DWORD PTR _pBuf$[ebp], 0
jne	SHORT $LN18@setupLooka
mov	DWORD PTR tv132[ebp], 1
jmp	SHORT $LN19@setupLooka
mov	DWORD PTR tv132[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR tv132[ebp]
mov	BYTE PTR [edx+243], al
jmp	SHORT $LN1@setupLooka
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+268], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+272], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+242], 0
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+243], 0
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_keywordCode PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _n$[ebp], 2
jge	SHORT $LN5@keywordCod
mov	eax, 27					
jmp	$LN6@keywordCod
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
movzx	eax, BYTE PTR _sqlite3UpperToLower[eax]
shl	eax, 2
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _n$[ebp]
movzx	edx, BYTE PTR [ecx-1]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[edx]
imul	edx, ecx, 3
xor	eax, edx
xor	eax, DWORD PTR _n$[ebp]
cdq
mov	ecx, 127				
idiv	ecx
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _h$[ebp]
movzx	eax, BYTE PTR ?aHash@?1??keywordCode@@9@9[edx]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN4@keywordCod
mov	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR ?aNext@?1??keywordCode@@9@9[ecx]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN2@keywordCod
mov	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR ?aLen@?1??keywordCode@@9@9[eax]
cmp	ecx, DWORD PTR _n$[ebp]
jne	SHORT $LN1@keywordCod
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
movzx	edx, WORD PTR ?aOffset@?1??keywordCode@@9@9[ecx*2]
add	edx, OFFSET ?zText@?1??keywordCode@@9@9
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@keywordCod
mov	eax, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR ?aCode@?1??keywordCode@@9@9[eax]
jmp	SHORT $LN6@keywordCod
jmp	SHORT $LN3@keywordCod
mov	eax, 27					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yy_syntax_error PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pParse$[ebp], ecx
lea	edx, DWORD PTR _yyminor$[ebp]
push	edx
push	OFFSET $SG119915
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
mov	ecx, DWORD PTR _yypParser$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yy_reduce PROC
push	ebp
mov	ebp, esp
sub	esp, 232				
push	esi
push	edi
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _yypParser$[ebp]
mov	eax, DWORD PTR [edx]
shl	eax, 4
mov	ecx, DWORD PTR _yypParser$[ebp]
lea	edx, DWORD PTR [ecx+eax+12]
mov	DWORD PTR _yymsp$[ebp], edx
mov	eax, DWORD PTR _yyzerominor
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, DWORD PTR _yyzerominor+4
mov	DWORD PTR _yygotominor$[ebp+4], ecx
mov	edx, DWORD PTR _yyzerominor+8
mov	DWORD PTR _yygotominor$[ebp+8], edx
mov	eax, DWORD PTR _yyruleno$[ebp]
mov	DWORD PTR tv69[ebp], eax
mov	ecx, DWORD PTR tv69[ebp]
sub	ecx, 5
mov	DWORD PTR tv69[ebp], ecx
cmp	DWORD PTR tv69[ebp], 321		
ja	$LN328@yy_reduce
mov	edx, DWORD PTR tv69[ebp]
jmp	DWORD PTR $LN340@yy_reduce[edx*4]
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BeginParse
add	esp, 8
jmp	$LN328@yy_reduce
push	1
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginParse
add	esp, 8
jmp	$LN328@yy_reduce
push	2
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BeginParse
add	esp, 8
jmp	$LN328@yy_reduce
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FinishCoding
add	esp, 4
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BeginTransaction
add	esp, 8
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 7
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+2]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CommitTransaction
add	esp, 4
jmp	$LN328@yy_reduce
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3RollbackTransaction
add	esp, 4
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Savepoint
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	1
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Savepoint
add	esp, 12					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	2
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Savepoint
add	esp, 12					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
push	0
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3StartTable
add	esp, 28					
jmp	$LN328@yy_reduce
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	BYTE PTR [eax+242], 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	edx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _yygotominor$[ebp], ecx
mov	DWORD PTR _yygotominor$[ebp+4], edx
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 1
jmp	$LN328@yy_reduce
push	0
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3EndTable
add	esp, 20					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
push	0
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3EndTable
add	esp, 20					
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
jmp	$LN328@yy_reduce
mov	BYTE PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [edx+ecx+8], 5
jne	SHORT $LN291@yy_reduce
push	5
push	OFFSET $SG119548
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN291@yy_reduce
mov	BYTE PTR _yygotominor$[ebp], 32		
jmp	SHORT $LN290@yy_reduce
mov	BYTE PTR _yygotominor$[ebp], 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+8]
push	edx
push	OFFSET $SG119550
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [ecx+504]
sub	ecx, DWORD PTR [edx+eax+4]
mov	edx, DWORD PTR _pParse$[ebp]
add	ecx, DWORD PTR [edx+508]
mov	DWORD PTR _yygotominor$[ebp+4], ecx
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AddColumn
add	esp, 8
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	eax, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+324], 0
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	eax, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	DWORD PTR _yygotominor$[ebp+4], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AddColumnType
add	esp, 8
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	ecx, 16					
imul	eax, ecx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
sub	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp+4], edx
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -5
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, 16					
imul	eax, edx, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [edx+ecx+4]
mov	edx, DWORD PTR _yymsp$[ebp]
add	ecx, DWORD PTR [edx+eax+8]
mov	eax, 16					
imul	edx, eax, -5
mov	eax, DWORD PTR _yymsp$[ebp]
sub	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp+4], ecx
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	ecx, 16					
imul	ecx, ecx, -1
mov	esi, DWORD PTR _yymsp$[ebp]
mov	edi, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [esi+edx+4]
sub	edx, DWORD PTR [edi+ecx+4]
mov	ecx, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _yygotominor$[ebp+4], edx
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	eax, DWORD PTR [ecx+eax+8]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+320], edx
mov	DWORD PTR [ecx+324], eax
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AddDefaultValue
add	esp, 8
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AddDefaultValue
add	esp, 8
jmp	$LN328@yy_reduce
push	0
push	0
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	157					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _v$3[ebp], eax
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _v$3[ebp+4], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+12]
mov	DWORD PTR _v$3[ebp+8], eax
lea	ecx, DWORD PTR _v$3[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AddDefaultValue
add	esp, 8
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	97					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
lea	edx, DWORD PTR _v$1[ebp]
push	edx
call	_spanExpr
add	esp, 16					
lea	eax, DWORD PTR _v$1[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AddDefaultValue
add	esp, 8
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AddNotNull
add	esp, 8
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AddPrimaryKey
add	esp, 20					
jmp	$LN328@yy_reduce
push	0
push	0
push	0
push	0
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
push	0
push	0
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CreateIndex
add	esp, 40					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AddCheckConstraint
add	esp, 8
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CreateForeignKey
add	esp, 20					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3DeferForeignKey
add	esp, 8
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AddCollateType
add	esp, 8
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, 16					
imul	edx, ecx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+edx+8]
not	edx
mov	ecx, DWORD PTR _yymsp$[ebp]
and	edx, DWORD PTR [ecx+eax+4]
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
or	edx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], edx
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
mov	DWORD PTR _yygotominor$[ebp+4], 0
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
mov	DWORD PTR _yygotominor$[ebp+4], 255	
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
shl	edx, 8
mov	DWORD PTR _yygotominor$[ebp], edx
mov	DWORD PTR _yygotominor$[ebp+4], 65280	
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 7
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 8
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 9
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 6
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp+4], 0
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	edx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _yygotominor$[ebp], ecx
mov	DWORD PTR _yygotominor$[ebp+4], edx
jmp	$LN328@yy_reduce
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+324], 0
jmp	$LN328@yy_reduce
push	0
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AddPrimaryKey
add	esp, 20					
jmp	$LN328@yy_reduce
push	0
push	0
push	0
push	0
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
push	0
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CreateIndex
add	esp, 40					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AddCheckConstraint
add	esp, 8
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -6
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CreateForeignKey
add	esp, 20					
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3DeferForeignKey
add	esp, 8
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 10	
jmp	$LN328@yy_reduce
mov	BYTE PTR _yygotominor$[ebp], 10		
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	dl, BYTE PTR [ecx+eax+4]
mov	BYTE PTR _yygotominor$[ebp], dl
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 4
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 5
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3DropTable
add	esp, 16					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -6
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -7
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CreateView
add	esp, 28					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	1
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3DropTable
add	esp, 16					
jmp	$LN328@yy_reduce
mov	BYTE PTR _dest$4[ebp], 9
mov	BYTE PTR _dest$4[ebp+1], 0
mov	DWORD PTR _dest$4[ebp+4], 0
mov	DWORD PTR _dest$4[ebp+8], 0
mov	DWORD PTR _dest$4[ebp+12], 0
mov	DWORD PTR _dest$4[ebp+16], 0
lea	ecx, DWORD PTR _dest$4[ebp]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Select
add	esp, 12					
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _p$29[ebp], ecx
cmp	DWORD PTR _p$29[ebp], 0
je	$LN223@yy_reduce
mov	DWORD PTR _cnt$24[ebp], 0
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _p$29[ebp]
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR [ecx+68], eax
mov	ecx, DWORD PTR _p$29[ebp]
cmp	DWORD PTR [ecx+52], 0
je	SHORT $LN222@yy_reduce
mov	DWORD PTR _pNext$23[ebp], 0
mov	edx, DWORD PTR _p$29[ebp]
mov	DWORD PTR _pLoop$34[ebp], edx
jmp	SHORT $LN221@yy_reduce
mov	eax, DWORD PTR _pLoop$34[ebp]
mov	DWORD PTR _pNext$23[ebp], eax
mov	ecx, DWORD PTR _pLoop$34[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pLoop$34[ebp], edx
mov	eax, DWORD PTR _cnt$24[ebp]
add	eax, 1
mov	DWORD PTR _cnt$24[ebp], eax
cmp	DWORD PTR _pLoop$34[ebp], 0
je	SHORT $LN219@yy_reduce
mov	ecx, DWORD PTR _pLoop$34[ebp]
mov	edx, DWORD PTR _pNext$23[ebp]
mov	DWORD PTR [ecx+56], edx
mov	eax, DWORD PTR _pLoop$34[ebp]
movzx	ecx, WORD PTR [eax+6]
or	ecx, 4096				
mov	edx, DWORD PTR _pLoop$34[ebp]
mov	WORD PTR [edx+6], cx
jmp	SHORT $LN220@yy_reduce
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 4
shl	edx, 2
mov	eax, DWORD PTR [ecx+edx+88]
mov	DWORD PTR _mxSelect$21[ebp], eax
cmp	DWORD PTR _mxSelect$21[ebp], 0
je	SHORT $LN222@yy_reduce
mov	ecx, DWORD PTR _cnt$24[ebp]
cmp	ecx, DWORD PTR _mxSelect$21[ebp]
jle	SHORT $LN222@yy_reduce
push	OFFSET $SG119636
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	SHORT $LN217@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3WithDelete
add	esp, 8
mov	eax, DWORD PTR _p$29[ebp]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _pRhs$35[ebp], edx
cmp	DWORD PTR _pRhs$35[ebp], 0
je	SHORT $LN214@yy_reduce
mov	eax, DWORD PTR _pRhs$35[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN214@yy_reduce
mov	DWORD PTR _x$2[ebp+4], 0
push	0
push	0
mov	ecx, DWORD PTR _pRhs$35[ebp]
push	ecx
lea	edx, DWORD PTR _x$2[ebp]
push	edx
push	0
push	0
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SrcListAppendFromTerm
add	esp, 32					
mov	DWORD PTR _pFrom$12[ebp], eax
push	0
push	0
push	0
push	0
push	0
push	0
push	0
mov	ecx, DWORD PTR _pFrom$12[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _pRhs$35[ebp], eax
cmp	DWORD PTR _pRhs$35[ebp], 0
je	SHORT $LN213@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _pRhs$35[ebp]
mov	eax, DWORD PTR _yymsp$[ebp]
mov	cl, BYTE PTR [eax+ecx+4]
mov	BYTE PTR [edx+4], cl
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _pRhs$35[ebp]
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR [ecx+52], eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 116		
je	SHORT $LN212@yy_reduce
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+22], 1
jmp	SHORT $LN211@yy_reduce
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	edx, DWORD PTR _pRhs$35[ebp]
mov	DWORD PTR _yygotominor$[ebp], edx
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 116	
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+8]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -7
mov	ecx, DWORD PTR _yymsp$[ebp]
movzx	edx, WORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -5
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -6
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
push	0
push	0
push	128					
push	0
push	0
push	0
push	0
push	0
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
push	0
push	0
push	128					
push	0
push	0
push	0
push	0
push	0
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _pRight$28[ebp], eax
cmp	DWORD PTR _pRight$28[ebp], 0
je	SHORT $LN206@yy_reduce
mov	edx, DWORD PTR _pRight$28[ebp]
mov	BYTE PTR [edx+4], 116			
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _pRight$28[ebp]
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR [edx+52], ecx
mov	edx, DWORD PTR _pRight$28[ebp]
mov	DWORD PTR _yygotominor$[ebp], edx
jmp	SHORT $LN205@yy_reduce
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 1
mov	WORD PTR _yygotominor$[ebp], cx
jmp	$LN328@yy_reduce
xor	edx, edx
mov	WORD PTR _yygotominor$[ebp], dx
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+8], 0
jbe	SHORT $LN196@yy_reduce
push	1
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListSetName
add	esp, 16					
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListSetSpan
add	esp, 12					
jmp	$LN328@yy_reduce
push	0
push	116					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _p$13[ebp], eax
mov	eax, DWORD PTR _p$13[ebp]
push	eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
push	0
push	116					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pRight$7[ebp], eax
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
push	0
push	27					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pLeft$9[ebp], eax
push	0
mov	ecx, DWORD PTR _pRight$7[ebp]
push	ecx
mov	edx, DWORD PTR _pLeft$9[ebp]
push	edx
push	122					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pDot$16[ebp], eax
mov	ecx, DWORD PTR _pDot$16[ebp]
push	ecx
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp+4], 0
jmp	$LN328@yy_reduce
push	88					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_sqlite3SrcListShiftJoinType
add	esp, 4
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp], edx
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN189@yy_reduce
mov	eax, DWORD PTR _yygotominor$[ebp]
cmp	DWORD PTR [eax], 0
jle	SHORT $LN189@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
imul	eax, ecx, 80
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	esi, DWORD PTR _yymsp$[ebp]
mov	dl, BYTE PTR [esi+edx+4]
mov	BYTE PTR [ecx+eax+44], dl
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -5
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -6
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SrcListAppendFromTerm
add	esp, 32					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SrcListIndexedBy
add	esp, 12					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
push	0
mov	edx, 16					
imul	eax, edx, -6
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SrcListAppendFromTerm
add	esp, 32					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -6
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
jne	SHORT $LN184@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+8], 0
jne	SHORT $LN184@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
jne	SHORT $LN184@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
jne	SHORT $LN184@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
jmp	$LN183@yy_reduce
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
cmp	DWORD PTR [edx], 1
jne	$LN182@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
push	0
mov	eax, 16					
imul	ecx, eax, -6
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListAppendFromTerm
add	esp, 32					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN181@yy_reduce
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
imul	ecx, eax, 80
mov	edx, DWORD PTR _yygotominor$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _pNew$26[ebp], eax
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
add	ecx, 8
mov	DWORD PTR _pOld$33[ebp], ecx
mov	edx, DWORD PTR _pNew$26[ebp]
mov	eax, DWORD PTR _pOld$33[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pNew$26[ebp]
mov	eax, DWORD PTR _pOld$33[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pNew$26[ebp]
mov	eax, DWORD PTR _pOld$33[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _pOld$33[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pOld$33[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _pOld$33[ebp]
mov	DWORD PTR [ecx+20], 0
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SrcListDelete
add	esp, 8
jmp	$LN183@yy_reduce
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
call	_sqlite3SrcListShiftJoinType
add	esp, 4
push	0
push	0
push	512					
push	0
push	0
push	0
push	0
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _pSubquery$11[ebp], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pSubquery$11[ebp]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
push	0
mov	eax, 16					
imul	ecx, eax, -6
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListAppendFromTerm
add	esp, 32					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
mov	DWORD PTR _yygotominor$[ebp+4], 0
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SrcListAppend
add	esp, 16					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 1
jmp	$LN328@yy_reduce
push	0
push	0
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3JoinType
add	esp, 16					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
push	0
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3JoinType
add	esp, 16					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3JoinType
add	esp, 16					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
mov	DWORD PTR _yygotominor$[ebp+4], 1
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp], edx
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN159@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
imul	edx, eax, 24
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR [eax+4]
mov	esi, DWORD PTR _yymsp$[ebp]
mov	cl, BYTE PTR [esi+ecx+4]
mov	BYTE PTR [eax+edx+12], cl
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN157@yy_reduce
mov	ecx, DWORD PTR _yygotominor$[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN157@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, 24					
imul	edx, ecx, 0
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	ecx, DWORD PTR [ecx+4]
mov	esi, DWORD PTR _yymsp$[ebp]
mov	al, BYTE PTR [esi+eax+4]
mov	BYTE PTR [ecx+edx+12], al
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 1
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
mov	DWORD PTR _yygotominor$[ebp+4], 0
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
mov	DWORD PTR _yygotominor$[ebp+4], 0
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp+4], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp+4], ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp], edx
jmp	$LN328@yy_reduce
push	1
mov	eax, 16					
imul	ecx, eax, -5
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3WithPush
add	esp, 12					
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListIndexedBy
add	esp, 12					
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3DeleteFrom
add	esp, 12					
jmp	$LN328@yy_reduce
push	1
mov	edx, 16					
imul	eax, edx, -7
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3WithPush
add	esp, 12					
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SrcListIndexedBy
add	esp, 12					
push	OFFSET $SG119721
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListCheckLength
add	esp, 12					
mov	eax, 16					
imul	ecx, eax, -5
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Update
add	esp, 20					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
push	1
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _yygotominor$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListSetName
add	esp, 16					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
push	1
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListSetName
add	esp, 16					
jmp	$LN328@yy_reduce
push	1
mov	ecx, 16					
imul	edx, ecx, -5
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3WithPush
add	esp, 12					
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Insert
add	esp, 20					
jmp	$LN328@yy_reduce
push	1
mov	edx, 16					
imul	eax, edx, -6
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3WithPush
add	esp, 12					
mov	ecx, 16					
imul	edx, ecx, -5
mov	eax, DWORD PTR _yymsp$[ebp]
movzx	ecx, BYTE PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Insert
add	esp, 20					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	dl, BYTE PTR [ecx+eax+4]
mov	BYTE PTR _yygotominor$[ebp], dl
jmp	$LN328@yy_reduce
mov	BYTE PTR _yygotominor$[ebp], 5
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3IdListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3IdListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, DWORD PTR [ecx+8]
mov	DWORD PTR _yygotominor$[ebp+8], ecx
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
lea	edx, DWORD PTR _yygotominor$[ebp]
push	edx
call	_spanSet
add	esp, 12					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
movzx	ecx, BYTE PTR [eax+edx+2]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
lea	eax, DWORD PTR _yygotominor$[ebp]
push	eax
call	_spanExpr
add	esp, 16					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	27					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
lea	eax, DWORD PTR _yygotominor$[ebp]
push	eax
call	_spanExpr
add	esp, 16					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
push	0
push	27					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _temp1$10[ebp], eax
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
push	0
push	27					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _temp2$14[ebp], eax
push	0
mov	edx, DWORD PTR _temp2$14[ebp]
push	edx
mov	eax, DWORD PTR _temp1$10[ebp]
push	eax
push	122					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanSet
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
push	0
push	27					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _temp1$18[ebp], eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
push	0
push	27					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _temp2$8[ebp], eax
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
push	0
push	27					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _temp3$19[ebp], eax
push	0
mov	edx, DWORD PTR _temp3$19[ebp]
push	edx
mov	eax, DWORD PTR _temp2$8[ebp]
push	eax
push	122					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _temp4$6[ebp], eax
push	0
mov	edx, DWORD PTR _temp4$6[ebp]
push	edx
mov	eax, DWORD PTR _temp1$18[ebp]
push	eax
push	122					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanSet
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [ecx+eax+8], 2
jb	$LN132@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, 1
imul	edx, ecx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [ecx+eax+4]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 35					
jne	$LN132@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+eax+4]
movzx	ecx, BYTE PTR [eax+ecx]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 4
je	$LN132@yy_reduce
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	SHORT $LN131@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	OFFSET $SG119747
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	SHORT $LN130@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
push	0
push	159					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN130@yy_reduce
mov	eax, DWORD PTR _yygotominor$[ebp]
add	eax, 28					
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
add	eax, DWORD PTR [ecx+edx+4]
push	eax
call	_sqlite3GetInt32
add	esp, 8
jmp	SHORT $LN128@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	135					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanExpr
add	esp, 16					
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprAssignVarNumber
add	esp, 8
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
lea	eax, DWORD PTR _yygotominor$[ebp]
push	eax
call	_spanSet
add	esp, 12					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprAddCollateToken
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _yygotominor$[ebp+4], ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [ecx+eax+4]
mov	ecx, DWORD PTR _yymsp$[ebp]
add	eax, DWORD PTR [ecx+edx+8]
mov	DWORD PTR _yygotominor$[ebp+8], eax
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	38					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -5
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanSet
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [ecx+eax+4], 0
je	SHORT $LN124@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	eax, 4
imul	eax, eax, 6
mov	edx, DWORD PTR [edx]
cmp	edx, DWORD PTR [ecx+eax+88]
jle	SHORT $LN124@yy_reduce
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	OFFSET $SG119755
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprFunction
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanSet
add	esp, 12					
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
movzx	edx, WORD PTR [ecx+eax+4]
test	edx, edx
je	SHORT $LN123@yy_reduce
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN123@yy_reduce
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 16					
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [edx+4], ecx
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprFunction
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanSet
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprFunction
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
lea	eax, DWORD PTR _yygotominor$[ebp]
push	eax
call	_spanSet
add	esp, 12					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+2]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
lea	edx, DWORD PTR _yygotominor$[ebp]
push	edx
call	_spanBinaryExpr
add	esp, 20					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	ecx, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _yygotominor$[ebp], eax
mov	DWORD PTR _yygotominor$[ebp+4], ecx
mov	DWORD PTR _yygotominor$[ebp+8], 0
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	eax, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	DWORD PTR _yygotominor$[ebp+8], 1
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$25[ebp], eax
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pList$25[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$25[ebp], eax
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pList$25[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprFunction
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [edx+ecx+12], 0
je	SHORT $LN110@yy_reduce
push	0
push	0
mov	eax, DWORD PTR _yygotominor$[ebp]
push	eax
push	19					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _yygotominor$[ebp+4], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+12]
mov	DWORD PTR _yygotominor$[ebp+8], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN109@yy_reduce
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	edx, DWORD PTR [ecx+4]
or	edx, 128				
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [eax+4], edx
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$31[ebp], eax
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pList$31[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$31[ebp], eax
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pList$31[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$31[ebp], eax
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pList$31[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprFunction
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [edx+ecx+12], 0
je	SHORT $LN107@yy_reduce
push	0
push	0
mov	eax, DWORD PTR _yygotominor$[ebp]
push	eax
push	19					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _yygotominor$[ebp+4], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+12]
mov	DWORD PTR _yygotominor$[ebp+8], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN106@yy_reduce
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	edx, DWORD PTR [ecx+4]
or	edx, 128				
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [eax+4], edx
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+2]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
lea	edx, DWORD PTR _yygotominor$[ebp]
push	edx
call	_spanUnaryPostfix
add	esp, 20					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	77					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
lea	eax, DWORD PTR _yygotominor$[ebp]
push	eax
call	_spanUnaryPostfix
add	esp, 20					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	73					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanBinaryExpr
add	esp, 20					
push	76					
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_binaryToUnaryIfNull
add	esp, 16					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	148					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
lea	edx, DWORD PTR _yygotominor$[ebp]
push	edx
call	_spanBinaryExpr
add	esp, 20					
push	77					
mov	eax, DWORD PTR _yygotominor$[ebp]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_binaryToUnaryIfNull
add	esp, 16					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
movzx	edx, BYTE PTR [ecx+eax+2]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
lea	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
call	_spanUnaryPrefix
add	esp, 20					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
push	157					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
lea	edx, DWORD PTR _yygotominor$[ebp]
push	edx
call	_spanUnaryPrefix
add	esp, 20					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	158					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
lea	eax, DWORD PTR _yygotominor$[ebp]
push	eax
call	_spanUnaryPrefix
add	esp, 20					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$27[ebp], eax
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pList$27[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$27[ebp], eax
push	0
push	0
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	74					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN97@yy_reduce
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR _pList$27[ebp]
mov	DWORD PTR [edx+20], eax
jmp	SHORT $LN96@yy_reduce
mov	ecx, DWORD PTR _pList$27[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
je	SHORT $LN95@yy_reduce
push	0
push	0
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
push	19					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+12]
mov	DWORD PTR _yygotominor$[ebp+8], ecx
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [ecx+eax+4], 0
jne	SHORT $LN93@yy_reduce
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
lea	eax, DWORD PTR _sqlite3IntTokens[edx*8]
push	eax
push	0
push	0
push	132					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
jmp	$LN92@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
cmp	DWORD PTR [edx], 1
jne	$LN91@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR [eax+4]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _pRHS$32[ebp], ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	eax, 24					
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+4]
mov	DWORD PTR [edx+ecx], 0
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
cmp	DWORD PTR _pRHS$32[ebp], 0
je	SHORT $LN90@yy_reduce
mov	eax, DWORD PTR _pRHS$32[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, -257				
mov	edx, DWORD PTR _pRHS$32[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pRHS$32[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 512				
mov	edx, DWORD PTR _pRHS$32[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [edx+ecx+4], 0
je	SHORT $LN332@yy_reduce
mov	DWORD PTR tv1872[ebp], 78		
jmp	SHORT $LN333@yy_reduce
mov	DWORD PTR tv1872[ebp], 79		
push	0
mov	eax, DWORD PTR _pRHS$32[ebp]
push	eax
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR tv1872[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN92@yy_reduce
push	0
push	0
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	75					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN88@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprSetHeight
add	esp, 8
jmp	SHORT $LN87@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
je	SHORT $LN92@yy_reduce
push	0
push	0
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
push	19					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+8], edx
jmp	$LN328@yy_reduce
push	0
push	0
push	0
push	119					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN84@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR [ecx+20], eax
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	edx, DWORD PTR [ecx+4]
or	edx, 2048				
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprSetHeight
add	esp, 8
jmp	SHORT $LN83@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+8], edx
jmp	$LN328@yy_reduce
push	0
push	0
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	75					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN81@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 2048				
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprSetHeight
add	esp, 8
jmp	SHORT $LN80@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
je	SHORT $LN79@yy_reduce
push	0
push	0
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
push	19					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+8], edx
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SrcListAppend
add	esp, 16					
mov	DWORD PTR _pSrc$22[ebp], eax
push	0
push	0
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
push	75					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN77@yy_reduce
push	0
push	0
push	0
push	0
push	0
push	0
push	0
mov	ecx, DWORD PTR _pSrc$22[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SelectNew
add	esp, 40					
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 2048				
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprSetHeight
add	esp, 8
jmp	SHORT $LN76@yy_reduce
mov	ecx, DWORD PTR _pSrc$22[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
je	SHORT $LN75@yy_reduce
push	0
push	0
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
push	19					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [eax+edx+4], 0
je	SHORT $LN334@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR tv2072[ebp], edx
jmp	SHORT $LN335@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, 16					
imul	ecx, eax, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR tv2072[ebp], edx
mov	ecx, DWORD PTR tv2072[ebp]
mov	DWORD PTR _yygotominor$[ebp+8], ecx
jmp	$LN328@yy_reduce
push	0
push	0
push	0
push	20					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR _p$30[ebp], eax
cmp	DWORD PTR _p$30[ebp], 0
je	SHORT $LN73@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _p$30[ebp]
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR [eax+20], edx
mov	eax, DWORD PTR _p$30[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 2048				
mov	edx, DWORD PTR _p$30[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _p$30[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprSetHeight
add	esp, 8
jmp	SHORT $LN72@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp+4], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, 16					
imul	eax, edx, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [edx+ecx+4]
mov	edx, DWORD PTR _yymsp$[ebp]
add	ecx, DWORD PTR [edx+eax+8]
mov	DWORD PTR _yygotominor$[ebp+8], ecx
jmp	$LN328@yy_reduce
push	0
push	0
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	136					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN70@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [ecx+eax+4], 0
je	SHORT $LN336@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR tv2134[ebp], eax
jmp	SHORT $LN337@yy_reduce
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR tv2134[ebp], edx
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	ecx, DWORD PTR tv2134[ebp]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprSetHeight
add	esp, 8
jmp	SHORT $LN69@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp+4], ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [ecx+eax+4]
mov	ecx, DWORD PTR _yymsp$[ebp]
add	eax, DWORD PTR [ecx+edx+8]
mov	DWORD PTR _yygotominor$[ebp+8], eax
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _yygotominor$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -8
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
push	0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -11
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -10
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SrcListAppend
add	esp, 16					
push	eax
mov	edx, 16					
imul	eax, edx, -6
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -7
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CreateIndex
add	esp, 40					
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 2
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprAddCollateToken
add	esp, 12					
mov	DWORD PTR _p$17[ebp], eax
mov	ecx, DWORD PTR _p$17[ebp]
push	ecx
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
push	1
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _yygotominor$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListSetName
add	esp, 16					
push	OFFSET $SG119826
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListCheckLength
add	esp, 12					
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN60@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
imul	edx, eax, 24
mov	eax, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR [eax+4]
mov	esi, DWORD PTR _yymsp$[ebp]
mov	cl, BYTE PTR [esi+ecx+4]
mov	BYTE PTR [eax+edx+12], cl
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprAddCollateToken
add	esp, 12					
mov	DWORD PTR _p$15[ebp], eax
mov	ecx, DWORD PTR _p$15[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
push	1
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _yygotominor$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListSetName
add	esp, 16					
push	OFFSET $SG119831
mov	eax, DWORD PTR _yygotominor$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListCheckLength
add	esp, 12					
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN58@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yygotominor$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
imul	ecx, edx, 24
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	edx, DWORD PTR [edx+4]
mov	esi, DWORD PTR _yymsp$[ebp]
mov	al, BYTE PTR [esi+eax+4]
mov	BYTE PTR [edx+ecx+12], al
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
mov	DWORD PTR _yygotominor$[ebp+4], 0
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3DropIndex
add	esp, 12					
jmp	$LN328@yy_reduce
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Vacuum
add	esp, 4
jmp	$LN328@yy_reduce
push	0
push	0
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Pragma
add	esp, 20					
jmp	$LN328@yy_reduce
push	0
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Pragma
add	esp, 20					
jmp	$LN328@yy_reduce
push	0
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -3
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Pragma
add	esp, 20					
jmp	$LN328@yy_reduce
push	1
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Pragma
add	esp, 20					
jmp	$LN328@yy_reduce
push	1
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Pragma
add	esp, 20					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _all$5[ebp], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 16					
imul	ecx, eax, -3
mov	eax, DWORD PTR _yymsp$[ebp]
mov	esi, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
sub	edx, DWORD PTR [esi+ecx+4]
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR _all$5[ebp+4], edx
lea	ecx, DWORD PTR _all$5[ebp]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FinishTrigger
add	esp, 12					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -8
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -10
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+8]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -5
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -6
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -7
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginTrigger
add	esp, 40					
mov	edx, 16					
imul	eax, edx, -6
mov	ecx, DWORD PTR _yymsp$[ebp]
cmp	DWORD PTR [ecx+eax+8], 0
jne	SHORT $LN338@yy_reduce
mov	edx, 16					
imul	eax, edx, -7
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR $T20[ebp], edx
mov	eax, DWORD PTR [ecx+eax+8]
mov	DWORD PTR $T20[ebp+4], eax
jmp	SHORT $LN339@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -6
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR $T20[ebp], ecx
mov	edx, DWORD PTR [eax+edx+8]
mov	DWORD PTR $T20[ebp+4], edx
mov	eax, DWORD PTR $T20[ebp]
mov	DWORD PTR _yygotominor$[ebp], eax
mov	ecx, DWORD PTR $T20[ebp+4]
mov	DWORD PTR _yygotominor$[ebp+4], ecx
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 35	
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 31	
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 49	
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
movzx	edx, BYTE PTR [ecx+eax+2]
mov	DWORD PTR _yygotominor$[ebp], edx
mov	DWORD PTR _yygotominor$[ebp+4], 0
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 110	
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp+4], eax
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, 16					
imul	edx, ecx, -2
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+edx+4]
mov	ecx, DWORD PTR [edx+36]
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR [ecx+32], eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, 16					
imul	ecx, eax, -2
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	DWORD PTR [ecx+36], edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, 16					
imul	ecx, eax, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	DWORD PTR [ecx+36], edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	edx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _yygotominor$[ebp], ecx
mov	DWORD PTR _yygotominor$[ebp+4], edx
push	OFFSET $SG119858
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN328@yy_reduce
push	OFFSET $SG119860
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN328@yy_reduce
push	OFFSET $SG119862
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -5
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3TriggerUpdateStep
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, BYTE PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -2
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3TriggerInsertStep
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3TriggerDeleteStep
add	esp, 12					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3TriggerSelectStep
add	esp, 8
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	$LN328@yy_reduce
push	0
push	0
push	0
push	57					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN30@yy_reduce
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	BYTE PTR [edx+1], 4
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _yygotominor$[ebp+4], eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, 16					
imul	ecx, eax, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [eax+edx+4]
mov	eax, DWORD PTR _yymsp$[ebp]
add	edx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR _yygotominor$[ebp+8], edx
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
push	0
push	57					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
cmp	DWORD PTR _yygotominor$[ebp], 0
je	SHORT $LN28@yy_reduce
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	eax, DWORD PTR _yymsp$[ebp]
mov	cl, BYTE PTR [eax+ecx+4]
mov	BYTE PTR [edx+1], cl
mov	edx, 16					
imul	eax, edx, -5
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _yygotominor$[ebp+4], edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, 16					
imul	eax, edx, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [edx+ecx+4]
mov	edx, DWORD PTR _yymsp$[ebp]
add	ecx, DWORD PTR [edx+eax+8]
mov	DWORD PTR _yygotominor$[ebp+8], ecx
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 1
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 3
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3DropTrigger
add	esp, 12					
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -1
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Attach
add	esp, 16					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Detach
add	esp, 8
jmp	$LN328@yy_reduce
push	0
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Reindex
add	esp, 12					
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Reindex
add	esp, 12					
jmp	$LN328@yy_reduce
push	0
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Analyze
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Analyze
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -3
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AlterRenameTable
add	esp, 12					
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AlterFinishAddColumn
add	esp, 8
jmp	$LN328@yy_reduce
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	BYTE PTR [edx+242], 0
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AlterBeginAddColumn
add	esp, 8
jmp	$LN328@yy_reduce
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3VtabFinishParse
add	esp, 8
jmp	$LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3VtabFinishParse
add	esp, 8
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -4
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _yymsp$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -2
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -3
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VtabBeginParse
add	esp, 20					
jmp	$LN328@yy_reduce
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3VtabArgInit
add	esp, 4
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VtabArgExtend
add	esp, 8
jmp	$LN328@yy_reduce
mov	DWORD PTR _yygotominor$[ebp], 0
jmp	$LN328@yy_reduce
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _yygotominor$[ebp], ecx
jmp	$LN328@yy_reduce
mov	edx, 16					
imul	eax, edx, -1
mov	ecx, DWORD PTR _yymsp$[ebp]
mov	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -4
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -5
mov	eax, DWORD PTR _yymsp$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3WithAdd
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
jmp	SHORT $LN328@yy_reduce
mov	eax, 16					
imul	ecx, eax, -1
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, 16					
imul	edx, ecx, -4
mov	eax, DWORD PTR _yymsp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, 16					
imul	eax, edx, -5
mov	ecx, DWORD PTR _yymsp$[ebp]
lea	edx, DWORD PTR [ecx+eax+4]
push	edx
mov	eax, 16					
imul	ecx, eax, -7
mov	edx, DWORD PTR _yymsp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3WithAdd
add	esp, 20					
mov	DWORD PTR _yygotominor$[ebp], eax
mov	edx, DWORD PTR _yyruleno$[ebp]
movzx	eax, BYTE PTR _yyRuleInfo[edx*2]
mov	DWORD PTR _yygoto$[ebp], eax
mov	ecx, DWORD PTR _yyruleno$[ebp]
movzx	edx, BYTE PTR _yyRuleInfo[ecx*2+1]
mov	DWORD PTR _yysize$[ebp], edx
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _yysize$[ebp]
mov	edx, DWORD PTR _yypParser$[ebp]
mov	DWORD PTR [edx], ecx
movzx	eax, BYTE PTR _yygoto$[ebp]
push	eax
mov	ecx, DWORD PTR _yysize$[ebp]
neg	ecx
shl	ecx, 4
mov	edx, DWORD PTR _yymsp$[ebp]
movzx	eax, WORD PTR [edx+ecx]
push	eax
call	_yy_find_reduce_action
add	esp, 8
mov	DWORD PTR _yyact$[ebp], eax
cmp	DWORD PTR _yyact$[ebp], 642		
jge	SHORT $LN4@yy_reduce
cmp	DWORD PTR _yysize$[ebp], 0
je	SHORT $LN3@yy_reduce
mov	ecx, DWORD PTR _yypParser$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 1
mov	eax, DWORD PTR _yypParser$[ebp]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _yysize$[ebp]
sub	ecx, 1
shl	ecx, 4
mov	edx, DWORD PTR _yymsp$[ebp]
sub	edx, ecx
mov	DWORD PTR _yymsp$[ebp], edx
mov	eax, DWORD PTR _yymsp$[ebp]
mov	cx, WORD PTR _yyact$[ebp]
mov	WORD PTR [eax], cx
mov	edx, DWORD PTR _yymsp$[ebp]
mov	al, BYTE PTR _yygoto$[ebp]
mov	BYTE PTR [edx+2], al
mov	ecx, DWORD PTR _yymsp$[ebp]
add	ecx, 4
mov	edx, DWORD PTR _yygotominor$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _yygotominor$[ebp+4]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _yygotominor$[ebp+8]
mov	DWORD PTR [ecx+8], edx
jmp	SHORT $LN2@yy_reduce
lea	eax, DWORD PTR _yygotominor$[ebp]
push	eax
mov	ecx, DWORD PTR _yygoto$[ebp]
push	ecx
mov	edx, DWORD PTR _yyact$[ebp]
push	edx
mov	eax, DWORD PTR _yypParser$[ebp]
push	eax
call	_yy_shift
add	esp, 16					
jmp	SHORT $LN330@yy_reduce
mov	ecx, DWORD PTR _yypParser$[ebp]
push	ecx
call	_yy_accept
add	esp, 4
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN327@yy_reduce
DD	$LN326@yy_reduce
DD	$LN325@yy_reduce
DD	$LN324@yy_reduce
DD	$LN323@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN322@yy_reduce
DD	$LN318@yy_reduce
DD	$LN318@yy_reduce
DD	$LN318@yy_reduce
DD	$LN317@yy_reduce
DD	$LN317@yy_reduce
DD	$LN316@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN315@yy_reduce
DD	$LN314@yy_reduce
DD	$LN313@yy_reduce
DD	$LN328@yy_reduce
DD	$LN312@yy_reduce
DD	$LN311@yy_reduce
DD	$LN302@yy_reduce
DD	$LN296@yy_reduce
DD	$LN296@yy_reduce
DD	$LN302@yy_reduce
DD	$LN295@yy_reduce
DD	$LN294@yy_reduce
DD	$LN293@yy_reduce
DD	$LN292@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN289@yy_reduce
DD	$LN288@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN328@yy_reduce
DD	$LN269@yy_reduce
DD	$LN270@yy_reduce
DD	$LN268@yy_reduce
DD	$LN267@yy_reduce
DD	$LN270@yy_reduce
DD	$LN266@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN265@yy_reduce
DD	$LN264@yy_reduce
DD	$LN263@yy_reduce
DD	$LN264@yy_reduce
DD	$LN262@yy_reduce
DD	$LN261@yy_reduce
DD	$LN328@yy_reduce
DD	$LN260@yy_reduce
DD	$LN259@yy_reduce
DD	$LN258@yy_reduce
DD	$LN257@yy_reduce
DD	$LN256@yy_reduce
DD	$LN255@yy_reduce
DD	$LN254@yy_reduce
DD	$LN302@yy_reduce
DD	$LN296@yy_reduce
DD	$LN253@yy_reduce
DD	$LN252@yy_reduce
DD	$LN251@yy_reduce
DD	$LN251@yy_reduce
DD	$LN250@yy_reduce
DD	$LN249@yy_reduce
DD	$LN248@yy_reduce
DD	$LN247@yy_reduce
DD	$LN246@yy_reduce
DD	$LN245@yy_reduce
DD	$LN244@yy_reduce
DD	$LN302@yy_reduce
DD	$LN241@yy_reduce
DD	$LN302@yy_reduce
DD	$LN296@yy_reduce
DD	$LN302@yy_reduce
DD	$LN240@yy_reduce
DD	$LN239@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN238@yy_reduce
DD	$LN328@yy_reduce
DD	$LN265@yy_reduce
DD	$LN237@yy_reduce
DD	$LN236@yy_reduce
DD	$LN235@yy_reduce
DD	$LN234@yy_reduce
DD	$LN302@yy_reduce
DD	$LN241@yy_reduce
DD	$LN233@yy_reduce
DD	$LN241@yy_reduce
DD	$LN232@yy_reduce
DD	$LN231@yy_reduce
DD	$LN241@yy_reduce
DD	$LN230@yy_reduce
DD	$LN229@yy_reduce
DD	$LN228@yy_reduce
DD	$LN296@yy_reduce
DD	$LN302@yy_reduce
DD	$LN227@yy_reduce
DD	$LN226@yy_reduce
DD	$LN225@yy_reduce
DD	$LN224@yy_reduce
DD	$LN216@yy_reduce
DD	$LN215@yy_reduce
DD	$LN318@yy_reduce
DD	$LN210@yy_reduce
DD	$LN318@yy_reduce
DD	$LN209@yy_reduce
DD	$LN216@yy_reduce
DD	$LN208@yy_reduce
DD	$LN207@yy_reduce
DD	$LN204@yy_reduce
DD	$LN203@yy_reduce
DD	$LN203@yy_reduce
DD	$LN202@yy_reduce
DD	$LN198@yy_reduce
DD	$LN197@yy_reduce
DD	$LN195@yy_reduce
DD	$LN194@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN193@yy_reduce
DD	$LN192@yy_reduce
DD	$LN191@yy_reduce
DD	$LN190@yy_reduce
DD	$LN188@yy_reduce
DD	$LN187@yy_reduce
DD	$LN186@yy_reduce
DD	$LN185@yy_reduce
DD	$LN179@yy_reduce
DD	$LN270@yy_reduce
DD	$LN178@yy_reduce
DD	$LN177@yy_reduce
DD	$LN176@yy_reduce
DD	$LN175@yy_reduce
DD	$LN174@yy_reduce
DD	$LN170@yy_reduce
DD	$LN166@yy_reduce
DD	$LN179@yy_reduce
DD	$LN270@yy_reduce
DD	$LN165@yy_reduce
DD	$LN164@yy_reduce
DD	$LN163@yy_reduce
DD	$LN198@yy_reduce
DD	$LN161@yy_reduce
DD	$LN160@yy_reduce
DD	$LN158@yy_reduce
DD	$LN156@yy_reduce
DD	$LN155@yy_reduce
DD	$LN156@yy_reduce
DD	$LN198@yy_reduce
DD	$LN161@yy_reduce
DD	$LN166@yy_reduce
DD	$LN170@yy_reduce
DD	$LN154@yy_reduce
DD	$LN153@yy_reduce
DD	$LN152@yy_reduce
DD	$LN151@yy_reduce
DD	$LN150@yy_reduce
DD	$LN166@yy_reduce
DD	$LN170@yy_reduce
DD	$LN149@yy_reduce
DD	$LN148@yy_reduce
DD	$LN147@yy_reduce
DD	$LN146@yy_reduce
DD	$LN145@yy_reduce
DD	$LN144@yy_reduce
DD	$LN143@yy_reduce
DD	$LN163@yy_reduce
DD	$LN164@yy_reduce
DD	$LN142@yy_reduce
DD	$LN141@yy_reduce
DD	$LN140@yy_reduce
DD	$LN139@yy_reduce
DD	$LN137@yy_reduce
DD	$LN136@yy_reduce
DD	$LN136@yy_reduce
DD	$LN135@yy_reduce
DD	$LN134@yy_reduce
DD	$LN137@yy_reduce
DD	$LN137@yy_reduce
DD	$LN133@yy_reduce
DD	$LN127@yy_reduce
DD	$LN126@yy_reduce
DD	$LN125@yy_reduce
DD	$LN122@yy_reduce
DD	$LN121@yy_reduce
DD	$LN114@yy_reduce
DD	$LN114@yy_reduce
DD	$LN114@yy_reduce
DD	$LN114@yy_reduce
DD	$LN114@yy_reduce
DD	$LN114@yy_reduce
DD	$LN114@yy_reduce
DD	$LN114@yy_reduce
DD	$LN113@yy_reduce
DD	$LN112@yy_reduce
DD	$LN111@yy_reduce
DD	$LN108@yy_reduce
DD	$LN105@yy_reduce
DD	$LN104@yy_reduce
DD	$LN103@yy_reduce
DD	$LN102@yy_reduce
DD	$LN101@yy_reduce
DD	$LN101@yy_reduce
DD	$LN100@yy_reduce
DD	$LN99@yy_reduce
DD	$LN302@yy_reduce
DD	$LN296@yy_reduce
DD	$LN98@yy_reduce
DD	$LN302@yy_reduce
DD	$LN296@yy_reduce
DD	$LN94@yy_reduce
DD	$LN85@yy_reduce
DD	$LN82@yy_reduce
DD	$LN78@yy_reduce
DD	$LN74@yy_reduce
DD	$LN71@yy_reduce
DD	$LN68@yy_reduce
DD	$LN67@yy_reduce
DD	$LN170@yy_reduce
DD	$LN166@yy_reduce
DD	$LN170@yy_reduce
DD	$LN166@yy_reduce
DD	$LN161@yy_reduce
DD	$LN198@yy_reduce
DD	$LN66@yy_reduce
DD	$LN65@yy_reduce
DD	$LN64@yy_reduce
DD	$LN63@yy_reduce
DD	$LN62@yy_reduce
DD	$LN198@yy_reduce
DD	$LN202@yy_reduce
DD	$LN61@yy_reduce
DD	$LN59@yy_reduce
DD	$LN57@yy_reduce
DD	$LN270@yy_reduce
DD	$LN56@yy_reduce
DD	$LN55@yy_reduce
DD	$LN55@yy_reduce
DD	$LN54@yy_reduce
DD	$LN53@yy_reduce
DD	$LN52@yy_reduce
DD	$LN51@yy_reduce
DD	$LN50@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN270@yy_reduce
DD	$LN49@yy_reduce
DD	$LN48@yy_reduce
DD	$LN47@yy_reduce
DD	$LN46@yy_reduce
DD	$LN45@yy_reduce
DD	$LN47@yy_reduce
DD	$LN44@yy_reduce
DD	$LN44@yy_reduce
DD	$LN43@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN42@yy_reduce
DD	$LN41@yy_reduce
DD	$LN40@yy_reduce
DD	$LN39@yy_reduce
DD	$LN270@yy_reduce
DD	$LN38@yy_reduce
DD	$LN328@yy_reduce
DD	$LN37@yy_reduce
DD	$LN36@yy_reduce
DD	$LN35@yy_reduce
DD	$LN34@yy_reduce
DD	$LN33@yy_reduce
DD	$LN32@yy_reduce
DD	$LN31@yy_reduce
DD	$LN29@yy_reduce
DD	$LN27@yy_reduce
DD	$LN63@yy_reduce
DD	$LN26@yy_reduce
DD	$LN25@yy_reduce
DD	$LN24@yy_reduce
DD	$LN23@yy_reduce
DD	$LN42@yy_reduce
DD	$LN41@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN22@yy_reduce
DD	$LN21@yy_reduce
DD	$LN20@yy_reduce
DD	$LN19@yy_reduce
DD	$LN18@yy_reduce
DD	$LN17@yy_reduce
DD	$LN16@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN15@yy_reduce
DD	$LN14@yy_reduce
DD	$LN13@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN12@yy_reduce
DD	$LN328@yy_reduce
DD	$LN10@yy_reduce
DD	$LN10@yy_reduce
DD	$LN10@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN328@yy_reduce
DD	$LN9@yy_reduce
DD	$LN8@yy_reduce
DD	$LN8@yy_reduce
DD	$LN7@yy_reduce
DD	$LN6@yy_reduce
ENDP
_yy_accept PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _yypParser$[ebp]
cmp	DWORD PTR [edx], 0
jl	SHORT $LN1@yy_accept
mov	eax, DWORD PTR _yypParser$[ebp]
push	eax
call	_yy_pop_parser_stack
add	esp, 4
jmp	SHORT $LN2@yy_accept
mov	ecx, DWORD PTR _yypParser$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yy_shift PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	edx, DWORD PTR _yypParser$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _yypParser$[ebp]
cmp	DWORD PTR [eax], 100			
jl	SHORT $LN1@yy_shift
mov	ecx, DWORD PTR _yypMinor$[ebp]
push	ecx
mov	edx, DWORD PTR _yypParser$[ebp]
push	edx
call	_yyStackOverflow
add	esp, 8
jmp	SHORT $LN2@yy_shift
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 4
mov	edx, DWORD PTR _yypParser$[ebp]
lea	eax, DWORD PTR [edx+ecx+12]
mov	DWORD PTR _yytos$[ebp], eax
mov	ecx, DWORD PTR _yytos$[ebp]
mov	dx, WORD PTR _yyNewState$[ebp]
mov	WORD PTR [ecx], dx
mov	eax, DWORD PTR _yytos$[ebp]
mov	cl, BYTE PTR _yyMajor$[ebp]
mov	BYTE PTR [eax+2], cl
mov	edx, DWORD PTR _yytos$[ebp]
add	edx, 4
mov	eax, DWORD PTR _yypMinor$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx], ecx
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yyStackOverflow PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _yypParser$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
mov	ecx, DWORD PTR _yypParser$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _yypParser$[ebp]
cmp	DWORD PTR [edx], 0
jl	SHORT $LN1@yyStackOve
mov	eax, DWORD PTR _yypParser$[ebp]
push	eax
call	_yy_pop_parser_stack
add	esp, 4
jmp	SHORT $LN2@yyStackOve
push	OFFSET $SG119474
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
mov	edx, DWORD PTR _yypParser$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+8], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yy_find_reduce_action PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _stateno$[ebp]
movsx	ecx, WORD PTR _yy_reduce_ofst[eax*2]
mov	DWORD PTR _i$[ebp], ecx
movzx	edx, BYTE PTR _iLookAhead$[ebp]
add	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
movzx	eax, WORD PTR _yy_action[eax*2]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yy_find_shift_action PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParser$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 4
mov	edx, DWORD PTR _pParser$[ebp]
movzx	eax, WORD PTR [edx+ecx+12]
mov	DWORD PTR _stateno$[ebp], eax
cmp	DWORD PTR _stateno$[ebp], 429		
jg	SHORT $LN7@yy_find_sh
mov	ecx, DWORD PTR _stateno$[ebp]
movsx	edx, WORD PTR _yy_shift_ofst[ecx*2]
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], -86			
jne	SHORT $LN8@yy_find_sh
mov	eax, DWORD PTR _stateno$[ebp]
movzx	eax, WORD PTR _yy_default[eax*2]
jmp	$LN9@yy_find_sh
movzx	ecx, BYTE PTR _iLookAhead$[ebp]
add	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _i$[ebp], ecx
js	SHORT $LN5@yy_find_sh
cmp	DWORD PTR _i$[ebp], 1497		
jge	SHORT $LN5@yy_find_sh
mov	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR _yy_lookahead[edx]
movzx	ecx, BYTE PTR _iLookAhead$[ebp]
cmp	eax, ecx
je	SHORT $LN6@yy_find_sh
movzx	edx, BYTE PTR _iLookAhead$[ebp]
test	edx, edx
jle	SHORT $LN4@yy_find_sh
movzx	eax, BYTE PTR _iLookAhead$[ebp]
cmp	eax, 70					
jae	SHORT $LN3@yy_find_sh
movzx	ecx, BYTE PTR _iLookAhead$[ebp]
mov	dl, BYTE PTR _yyFallback[ecx]
mov	BYTE PTR _iFallback$2[ebp], dl
movzx	eax, BYTE PTR _iFallback$2[ebp]
test	eax, eax
je	SHORT $LN3@yy_find_sh
movzx	ecx, BYTE PTR _iFallback$2[ebp]
push	ecx
mov	edx, DWORD PTR _pParser$[ebp]
push	edx
call	_yy_find_shift_action
add	esp, 8
jmp	SHORT $LN9@yy_find_sh
movzx	eax, BYTE PTR _iLookAhead$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, eax
add	ecx, 70					
mov	DWORD PTR _j$1[ebp], ecx
js	SHORT $LN4@yy_find_sh
mov	edx, DWORD PTR _j$1[ebp]
movzx	eax, BYTE PTR _yy_lookahead[edx]
cmp	eax, 70					
jne	SHORT $LN4@yy_find_sh
mov	ecx, DWORD PTR _j$1[ebp]
movzx	eax, WORD PTR _yy_action[ecx*2]
jmp	SHORT $LN9@yy_find_sh
mov	edx, DWORD PTR _stateno$[ebp]
movzx	eax, WORD PTR _yy_default[edx*2]
jmp	SHORT $LN9@yy_find_sh
jmp	SHORT $LN9@yy_find_sh
mov	eax, DWORD PTR _i$[ebp]
movzx	eax, WORD PTR _yy_action[eax*2]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yy_pop_parser_stack PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParser$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 4
mov	edx, DWORD PTR _pParser$[ebp]
lea	eax, DWORD PTR [edx+ecx+12]
mov	DWORD PTR _yytos$[ebp], eax
mov	ecx, DWORD PTR _pParser$[ebp]
cmp	DWORD PTR [ecx], 0
jge	SHORT $LN1@yy_pop_par
xor	eax, eax
jmp	SHORT $LN2@yy_pop_par
mov	edx, DWORD PTR _yytos$[ebp]
mov	al, BYTE PTR [edx+2]
mov	BYTE PTR _yymajor$[ebp], al
mov	ecx, DWORD PTR _yytos$[ebp]
add	ecx, 4
push	ecx
movzx	edx, BYTE PTR _yymajor$[ebp]
push	edx
mov	eax, DWORD PTR _pParser$[ebp]
push	eax
call	_yy_destructor
add	esp, 12					
mov	ecx, DWORD PTR _pParser$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
mov	eax, DWORD PTR _pParser$[ebp]
mov	DWORD PTR [eax], edx
movzx	eax, BYTE PTR _yymajor$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_yy_destructor PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pParse$[ebp], ecx
movzx	edx, BYTE PTR _yymajor$[ebp]
mov	DWORD PTR tv66[ebp], edx
mov	eax, DWORD PTR tv66[ebp]
sub	eax, 163				
mov	DWORD PTR tv66[ebp], eax
cmp	DWORD PTR tv66[ebp], 89			
ja	$LN13@yy_destruc
mov	ecx, DWORD PTR tv66[ebp]
movzx	edx, BYTE PTR $LN15@yy_destruc[ecx]
jmp	DWORD PTR $LN16@yy_destruc[edx*4]
mov	eax, DWORD PTR _yypminor$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
jmp	$LN13@yy_destruc
mov	ecx, DWORD PTR _yypminor$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
jmp	$LN13@yy_destruc
mov	edx, DWORD PTR _yypminor$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
jmp	$LN13@yy_destruc
mov	eax, DWORD PTR _yypminor$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
jmp	SHORT $LN13@yy_destruc
mov	ecx, DWORD PTR _yypminor$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3WithDelete
add	esp, 8
jmp	SHORT $LN13@yy_destruc
mov	edx, DWORD PTR _yypminor$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
jmp	SHORT $LN13@yy_destruc
mov	eax, DWORD PTR _yypminor$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3IdListDelete
add	esp, 8
jmp	SHORT $LN13@yy_destruc
mov	ecx, DWORD PTR _yypminor$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DeleteTriggerStep
add	esp, 8
jmp	SHORT $LN13@yy_destruc
mov	edx, DWORD PTR _yypminor$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3IdListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN10@yy_destruc
DD	$LN9@yy_destruc
DD	$LN8@yy_destruc
DD	$LN7@yy_destruc
DD	$LN6@yy_destruc
DD	$LN5@yy_destruc
DD	$LN4@yy_destruc
DD	$LN3@yy_destruc
DD	$LN2@yy_destruc
DD	$LN13@yy_destruc
DB	0
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	1
DB	1
DB	9
DB	9
DB	9
DB	2
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	2
DB	9
DB	9
DB	9
DB	9
DB	9
DB	3
DB	0
DB	0
DB	4
DB	9
DB	9
DB	2
DB	3
DB	5
DB	2
DB	5
DB	2
DB	9
DB	0
DB	2
DB	2
DB	2
DB	9
DB	3
DB	3
DB	9
DB	9
DB	5
DB	6
DB	9
DB	6
DB	2
DB	2
DB	9
DB	6
DB	9
DB	9
DB	9
DB	5
DB	2
DB	5
DB	9
DB	9
DB	9
DB	9
DB	7
DB	9
DB	8
DB	9
DB	5
DB	7
DB	9
DB	9
DB	9
DB	5
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	9
DB	4
ENDP
_spanUnaryPrefix PROC
push	ebp
mov	ebp, esp
push	0
push	0
mov	eax, DWORD PTR _pOperand$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pPreOp$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pOperand$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
pop	ebp
ret	0
ENDP
_binaryToUnaryIfNull PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN2@binaryToUn
mov	ecx, DWORD PTR _pY$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 101				
jne	SHORT $LN2@binaryToUn
mov	eax, DWORD PTR _pA$[ebp]
mov	cl, BYTE PTR _op$[ebp]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pA$[ebp]
mov	DWORD PTR [edx+16], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_spanUnaryPostfix PROC
push	ebp
mov	ebp, esp
push	0
push	0
mov	eax, DWORD PTR _pOperand$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pOperand$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pPostOp$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pPostOp$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	edx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [edx+8], eax
pop	ebp
ret	0
ENDP
_spanBinaryExpr PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _pRight$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pLeft$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pLeft$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pRight$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
pop	ebp
ret	0
ENDP
_spanExpr PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pValue$[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pValue$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pValue$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pValue$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	edx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [edx+8], eax
pop	ebp
ret	0
ENDP
_spanSet PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR _pStart$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _pEnd$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _pEnd$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	eax, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [eax+8], ecx
pop	ebp
ret	0
ENDP
_whereShortCut PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 32					
je	SHORT $LN20@whereShort
xor	eax, eax
jmp	$LN21@whereShort
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+4]
add	edx, 8
mov	DWORD PTR _pItem$[ebp], edx
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pTab$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN19@whereShort
xor	eax, eax
jmp	$LN21@whereShort
mov	ecx, DWORD PTR _pItem$[ebp]
cmp	DWORD PTR [ecx+72], 0
je	SHORT $LN18@whereShort
xor	eax, eax
jmp	$LN21@whereShort
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _iCur$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 328				
mov	DWORD PTR _pWC$[ebp], ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pLoop$[ebp], eax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [ecx+36], 0
xor	edx, edx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	WORD PTR [eax+26], dx
push	0
push	2
push	0
push	0
push	-1
mov	ecx, DWORD PTR _iCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
push	edx
call	_findTerm
add	esp, 28					
mov	DWORD PTR _pTerm$[ebp], eax
cmp	DWORD PTR _pTerm$[ebp], 0
je	SHORT $LN17@whereShort
mov	eax, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [eax+36], 4353		
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	eax, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [edx+ecx], eax
mov	ecx, 1
mov	edx, DWORD PTR _pLoop$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, 1
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, 33					
mov	eax, DWORD PTR _pLoop$[ebp]
mov	WORD PTR [eax+20], dx
jmp	$LN16@whereShort
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN15@whereShort
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN16@whereShort
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, BYTE PTR [edx+54]
test	eax, eax
je	SHORT $LN11@whereShort
mov	ecx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [ecx+36], 0
jne	SHORT $LN11@whereShort
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	eax, 4
jle	SHORT $LN12@whereShort
jmp	SHORT $LN14@whereShort
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN10@whereShort
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _j$[ebp], eax
jge	SHORT $LN8@whereShort
mov	ecx, DWORD PTR _pIdx$[ebp]
push	ecx
push	2
push	0
push	0
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _j$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
call	_findTerm
add	esp, 28					
mov	DWORD PTR _pTerm$[ebp], eax
cmp	DWORD PTR _pTerm$[ebp], 0
jne	SHORT $LN7@whereShort
jmp	SHORT $LN8@whereShort
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [eax+ecx*4], edx
jmp	SHORT $LN9@whereShort
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _j$[ebp], ecx
je	SHORT $LN6@whereShort
jmp	$LN14@whereShort
mov	edx, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [edx+36], 4609		
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+56]
shr	ecx, 5
and	ecx, 1
jne	SHORT $LN4@whereShort
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
call	_columnsInIndex
add	esp, 4
not	eax
not	edx
mov	ecx, DWORD PTR _pItem$[ebp]
and	eax, DWORD PTR [ecx+64]
and	edx, DWORD PTR [ecx+68]
mov	DWORD PTR tv287[ebp], eax
mov	DWORD PTR tv287[ebp+4], edx
mov	edx, DWORD PTR tv287[ebp]
or	edx, DWORD PTR tv287[ebp+4]
jne	SHORT $LN5@whereShort
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
or	ecx, 64					
mov	edx, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [edx+36], ecx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	cx, WORD PTR _j$[ebp]
mov	WORD PTR [eax+40], cx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	ax, WORD PTR _j$[ebp]
mov	WORD PTR [edx+24], ax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [ecx+28], edx
mov	eax, 39					
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	WORD PTR [ecx+20], ax
jmp	SHORT $LN16@whereShort
jmp	$LN14@whereShort
mov	edx, DWORD PTR _pLoop$[ebp]
cmp	DWORD PTR [edx+36], 0
je	$LN3@whereShort
mov	eax, 1
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	WORD PTR [ecx+22], ax
mov	edx, 72					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [ecx+eax+792], edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 68					
push	ecx
call	_getMask
add	esp, 8
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	DWORD PTR [ecx+12], edx
mov	edx, 72					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _iCur$[ebp]
mov	DWORD PTR [ecx+eax+740], edx
mov	eax, 1
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	WORD PTR [ecx+32], ax
mov	edx, DWORD PTR _pWInfo$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN2@whereShort
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	al, BYTE PTR [ecx]
mov	BYTE PTR [edx+36], al
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, WORD PTR [ecx+34]
and	edx, 1024				
je	SHORT $LN1@whereShort
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [eax+40], 1
mov	eax, 1
jmp	SHORT $LN21@whereShort
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_wherePathSolver PROC
push	ebp
mov	ebp, esp
sub	esp, 184				
push	esi
mov	DWORD PTR _mxI$[ebp], 0
xor	eax, eax
mov	WORD PTR _mxCost$[ebp], ax
xor	ecx, ecx
mov	WORD PTR _mxOut$[ebp], cx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, BYTE PTR [eax+41]
mov	DWORD PTR _nLoop$[ebp], ecx
cmp	DWORD PTR _nLoop$[ebp], 1
jg	SHORT $LN61@wherePathS
mov	DWORD PTR tv71[ebp], 1
jmp	SHORT $LN62@wherePathS
cmp	DWORD PTR _nLoop$[ebp], 2
jne	SHORT $LN59@wherePathS
mov	DWORD PTR tv70[ebp], 5
jmp	SHORT $LN60@wherePathS
mov	DWORD PTR tv70[ebp], 10			
mov	edx, DWORD PTR tv70[ebp]
mov	DWORD PTR tv71[ebp], edx
mov	eax, DWORD PTR tv71[ebp]
mov	DWORD PTR _mxChoice$[ebp], eax
mov	ecx, DWORD PTR _nLoop$[ebp]
lea	edx, DWORD PTR [ecx*4+32]
imul	edx, DWORD PTR _mxChoice$[ebp]
shl	edx, 1
mov	DWORD PTR _ii$[ebp], edx
mov	eax, DWORD PTR _ii$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pSpace$[ebp], eax
cmp	DWORD PTR _pSpace$[ebp], 0
jne	SHORT $LN56@wherePathS
mov	eax, 7
jmp	$LN57@wherePathS
mov	edx, DWORD PTR _pSpace$[ebp]
mov	DWORD PTR _aTo$[ebp], edx
mov	eax, DWORD PTR _mxChoice$[ebp]
shl	eax, 5
add	eax, DWORD PTR _aTo$[ebp]
mov	DWORD PTR _aFrom$[ebp], eax
push	32					
push	0
mov	ecx, DWORD PTR _aFrom$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _mxChoice$[ebp]
shl	edx, 5
add	edx, DWORD PTR _aFrom$[ebp]
mov	DWORD PTR _pX$[ebp], edx
mov	eax, DWORD PTR _mxChoice$[ebp]
shl	eax, 1
mov	DWORD PTR _ii$[ebp], eax
mov	ecx, DWORD PTR _aTo$[ebp]
mov	DWORD PTR _pFrom$[ebp], ecx
jmp	SHORT $LN55@wherePathS
mov	edx, DWORD PTR _ii$[ebp]
sub	edx, 1
mov	DWORD PTR _ii$[ebp], edx
mov	eax, DWORD PTR _pFrom$[ebp]
add	eax, 32					
mov	DWORD PTR _pFrom$[ebp], eax
mov	ecx, DWORD PTR _nLoop$[ebp]
mov	edx, DWORD PTR _pX$[ebp]
lea	eax, DWORD PTR [edx+ecx*4]
mov	DWORD PTR _pX$[ebp], eax
cmp	DWORD PTR _ii$[ebp], 0
jle	SHORT $LN53@wherePathS
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR _pX$[ebp]
mov	DWORD PTR [ecx+24], edx
jmp	SHORT $LN54@wherePathS
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+424], 46			
jae	SHORT $LN63@wherePathS
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+424]
mov	DWORD PTR tv132[ebp], edx
jmp	SHORT $LN64@wherePathS
mov	DWORD PTR tv132[ebp], 46		
mov	eax, 32					
imul	ecx, eax, 0
mov	edx, DWORD PTR _aFrom$[ebp]
mov	ax, WORD PTR tv132[ebp]
mov	WORD PTR [edx+ecx+16], ax
mov	DWORD PTR _nFrom$[ebp], 1
mov	ecx, DWORD PTR _pWInfo$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN51@wherePathS
movsx	edx, WORD PTR _nRowEst$[ebp]
test	edx, edx
jne	SHORT $LN52@wherePathS
mov	eax, 32					
imul	ecx, eax, 0
mov	edx, DWORD PTR _aFrom$[ebp]
mov	BYTE PTR [edx+ecx+20], 0
mov	DWORD PTR _nOrderBy$[ebp], 0
jmp	SHORT $LN50@wherePathS
cmp	DWORD PTR _nLoop$[ebp], 0
jle	SHORT $LN65@wherePathS
mov	DWORD PTR tv145[ebp], -1
jmp	SHORT $LN66@wherePathS
mov	DWORD PTR tv145[ebp], 1
mov	eax, 32					
imul	ecx, eax, 0
mov	edx, DWORD PTR _aFrom$[ebp]
mov	al, BYTE PTR tv145[ebp]
mov	BYTE PTR [edx+ecx+20], al
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _nOrderBy$[ebp], eax
mov	DWORD PTR _iLoop$[ebp], 0
jmp	SHORT $LN49@wherePathS
mov	ecx, DWORD PTR _iLoop$[ebp]
add	ecx, 1
mov	DWORD PTR _iLoop$[ebp], ecx
mov	edx, DWORD PTR _iLoop$[ebp]
cmp	edx, DWORD PTR _nLoop$[ebp]
jge	$LN47@wherePathS
mov	DWORD PTR _nTo$[ebp], 0
mov	DWORD PTR _ii$[ebp], 0
mov	eax, DWORD PTR _aFrom$[ebp]
mov	DWORD PTR _pFrom$[ebp], eax
jmp	SHORT $LN46@wherePathS
mov	ecx, DWORD PTR _ii$[ebp]
add	ecx, 1
mov	DWORD PTR _ii$[ebp], ecx
mov	edx, DWORD PTR _pFrom$[ebp]
add	edx, 32					
mov	DWORD PTR _pFrom$[ebp], edx
mov	eax, DWORD PTR _ii$[ebp]
cmp	eax, DWORD PTR _nFrom$[ebp]
jge	$LN44@wherePathS
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pWLoop$[ebp], edx
jmp	SHORT $LN43@wherePathS
mov	eax, DWORD PTR _pWLoop$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _pWLoop$[ebp], ecx
cmp	DWORD PTR _pWLoop$[ebp], 0
je	$LN41@wherePathS
xorpd	xmm0, xmm0
movlpd	QWORD PTR _revMask$6[ebp], xmm0
mov	edx, DWORD PTR _pFrom$[ebp]
mov	al, BYTE PTR [edx+20]
mov	BYTE PTR _isOrdered$10[ebp], al
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx]
not	edx
mov	eax, DWORD PTR [ecx+4]
not	eax
mov	ecx, DWORD PTR _pWLoop$[ebp]
and	edx, DWORD PTR [ecx]
and	eax, DWORD PTR [ecx+4]
mov	DWORD PTR tv553[ebp], edx
mov	DWORD PTR tv553[ebp+4], eax
mov	edx, DWORD PTR tv553[ebp]
or	edx, DWORD PTR tv553[ebp+4]
je	SHORT $LN40@wherePathS
jmp	SHORT $LN42@wherePathS
mov	eax, DWORD PTR _pWLoop$[ebp]
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [eax+8]
and	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [eax+12]
and	eax, DWORD PTR [ecx+4]
mov	DWORD PTR tv567[ebp], edx
mov	DWORD PTR tv567[ebp+4], eax
mov	ecx, DWORD PTR tv567[ebp]
or	ecx, DWORD PTR tv567[ebp+4]
je	SHORT $LN39@wherePathS
jmp	$LN42@wherePathS
mov	edx, DWORD PTR _pWLoop$[ebp]
movsx	eax, WORD PTR [edx+20]
mov	ecx, DWORD PTR _pFrom$[ebp]
movsx	edx, WORD PTR [ecx+16]
add	eax, edx
push	eax
mov	eax, DWORD PTR _pWLoop$[ebp]
movzx	ecx, WORD PTR [eax+18]
push	ecx
call	_sqlite3LogEstAdd
add	esp, 8
mov	WORD PTR _rCost$[ebp], ax
mov	edx, DWORD PTR _pFrom$[ebp]
movzx	eax, WORD PTR [edx+18]
push	eax
movzx	ecx, WORD PTR _rCost$[ebp]
push	ecx
call	_sqlite3LogEstAdd
add	esp, 8
mov	WORD PTR _rCost$[ebp], ax
mov	edx, DWORD PTR _pFrom$[ebp]
movsx	eax, WORD PTR [edx+16]
mov	ecx, DWORD PTR _pWLoop$[ebp]
movsx	edx, WORD PTR [ecx+22]
add	eax, edx
mov	WORD PTR _nOut$[ebp], ax
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR _pWLoop$[ebp]
mov	edx, DWORD PTR [eax]
or	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [eax+4]
or	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _maskNew$4[ebp], edx
mov	DWORD PTR _maskNew$4[ebp+4], eax
movsx	ecx, BYTE PTR _isOrdered$10[ebp]
test	ecx, ecx
jge	$LN38@wherePathS
lea	edx, DWORD PTR _revMask$6[ebp]
push	edx
mov	eax, DWORD PTR _pWLoop$[ebp]
push	eax
movzx	ecx, WORD PTR _iLoop$[ebp]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
push	eax
mov	ecx, DWORD PTR _pFrom$[ebp]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_wherePathSatisfiesOrderBy
add	esp, 28					
mov	BYTE PTR _isOrdered$10[ebp], al
movsx	edx, BYTE PTR _isOrdered$10[ebp]
test	edx, edx
jl	SHORT $LN37@wherePathS
movsx	eax, BYTE PTR _isOrdered$10[ebp]
cmp	eax, DWORD PTR _nOrderBy$[ebp]
jge	SHORT $LN37@wherePathS
movsx	ecx, BYTE PTR _isOrdered$10[ebp]
mov	edx, DWORD PTR _nOrderBy$[ebp]
sub	edx, ecx
imul	eax, edx, 100
cdq
idiv	DWORD PTR _nOrderBy$[ebp]
cdq
push	edx
push	eax
call	_sqlite3LogEst
add	esp, 8
cwde
sub	eax, 66					
mov	WORD PTR _rScale$7[ebp], ax
movsx	esi, WORD PTR _nRowEst$[ebp]
movzx	ecx, WORD PTR _nRowEst$[ebp]
push	ecx
call	_estLog
add	esp, 4
movsx	edx, ax
add	esi, edx
movsx	eax, WORD PTR _rScale$7[ebp]
lea	ecx, DWORD PTR [esi+eax+16]
mov	WORD PTR _rSortCost$9[ebp], cx
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 1024				
je	SHORT $LN36@wherePathS
movsx	ecx, WORD PTR _rSortCost$9[ebp]
add	ecx, 16					
mov	WORD PTR _rSortCost$9[ebp], cx
movzx	edx, WORD PTR _rSortCost$9[ebp]
push	edx
movzx	eax, WORD PTR _rCost$[ebp]
push	eax
call	_sqlite3LogEstAdd
add	esp, 8
mov	WORD PTR _rCost$[ebp], ax
jmp	SHORT $LN35@wherePathS
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _revMask$6[ebp], edx
mov	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _revMask$6[ebp+4], eax
mov	DWORD PTR _jj$[ebp], 0
mov	ecx, DWORD PTR _aTo$[ebp]
mov	DWORD PTR _pTo$[ebp], ecx
jmp	SHORT $LN34@wherePathS
mov	edx, DWORD PTR _jj$[ebp]
add	edx, 1
mov	DWORD PTR _jj$[ebp], edx
mov	eax, DWORD PTR _pTo$[ebp]
add	eax, 32					
mov	DWORD PTR _pTo$[ebp], eax
mov	ecx, DWORD PTR _jj$[ebp]
cmp	ecx, DWORD PTR _nTo$[ebp]
jge	SHORT $LN32@wherePathS
mov	edx, DWORD PTR _pTo$[ebp]
mov	DWORD PTR tv639[ebp], edx
mov	eax, DWORD PTR tv639[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _maskNew$4[ebp]
jne	SHORT $LN31@wherePathS
mov	edx, DWORD PTR tv639[ebp]
mov	eax, DWORD PTR [edx+4]
cmp	eax, DWORD PTR _maskNew$4[ebp+4]
jne	SHORT $LN31@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, BYTE PTR [ecx+20]
movsx	eax, BYTE PTR _isOrdered$10[ebp]
xor	edx, eax
and	edx, 80					
jne	SHORT $LN31@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+18]
movsx	eax, WORD PTR _rCost$[ebp]
cmp	edx, eax
jg	SHORT $LN29@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+16]
movsx	eax, WORD PTR _nOut$[ebp]
cmp	edx, eax
jle	SHORT $LN30@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+18]
movsx	eax, WORD PTR _rCost$[ebp]
cmp	edx, eax
jl	SHORT $LN31@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+16]
movsx	eax, WORD PTR _nOut$[ebp]
cmp	edx, eax
jl	SHORT $LN31@wherePathS
jmp	SHORT $LN32@wherePathS
jmp	$LN33@wherePathS
mov	ecx, DWORD PTR _jj$[ebp]
cmp	ecx, DWORD PTR _nTo$[ebp]
jl	SHORT $LN28@wherePathS
mov	edx, DWORD PTR _nTo$[ebp]
cmp	edx, DWORD PTR _mxChoice$[ebp]
jl	SHORT $LN27@wherePathS
movsx	eax, WORD PTR _rCost$[ebp]
movsx	ecx, WORD PTR _mxCost$[ebp]
cmp	eax, ecx
jl	SHORT $LN27@wherePathS
jmp	$LN42@wherePathS
mov	edx, DWORD PTR _nTo$[ebp]
cmp	edx, DWORD PTR _mxChoice$[ebp]
jge	SHORT $LN26@wherePathS
mov	eax, DWORD PTR _nTo$[ebp]
mov	DWORD PTR _jj$[ebp], eax
mov	ecx, DWORD PTR _nTo$[ebp]
add	ecx, 1
mov	DWORD PTR _nTo$[ebp], ecx
jmp	SHORT $LN25@wherePathS
mov	edx, DWORD PTR _mxI$[ebp]
mov	DWORD PTR _jj$[ebp], edx
mov	eax, DWORD PTR _jj$[ebp]
shl	eax, 5
add	eax, DWORD PTR _aTo$[ebp]
mov	DWORD PTR _pTo$[ebp], eax
jmp	SHORT $LN24@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+18]
movsx	eax, WORD PTR _rCost$[ebp]
cmp	edx, eax
jg	SHORT $LN24@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+16]
movsx	eax, WORD PTR _nOut$[ebp]
cmp	edx, eax
jg	SHORT $LN24@wherePathS
jmp	$LN42@wherePathS
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR _pWLoop$[ebp]
mov	eax, DWORD PTR [ecx]
or	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [ecx+4]
or	ecx, DWORD PTR [edx+12]
mov	edx, DWORD PTR _pTo$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR _revMask$6[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _revMask$6[ebp+4]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _pTo$[ebp]
mov	cx, WORD PTR _nOut$[ebp]
mov	WORD PTR [eax+16], cx
mov	edx, DWORD PTR _pTo$[ebp]
mov	ax, WORD PTR _rCost$[ebp]
mov	WORD PTR [edx+18], ax
mov	ecx, DWORD PTR _pTo$[ebp]
mov	dl, BYTE PTR _isOrdered$10[ebp]
mov	BYTE PTR [ecx+20], dl
mov	eax, DWORD PTR _iLoop$[ebp]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pTo$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR _iLoop$[ebp]
mov	edx, DWORD PTR _pWLoop$[ebp]
mov	DWORD PTR [eax+ecx*4], edx
mov	eax, DWORD PTR _nTo$[ebp]
cmp	eax, DWORD PTR _mxChoice$[ebp]
jl	$LN22@wherePathS
mov	DWORD PTR _mxI$[ebp], 0
mov	ecx, 32					
imul	edx, ecx, 0
mov	eax, DWORD PTR _aTo$[ebp]
mov	cx, WORD PTR [eax+edx+18]
mov	WORD PTR _mxCost$[ebp], cx
mov	edx, 32					
imul	eax, edx, 0
mov	ecx, DWORD PTR _aTo$[ebp]
mov	dx, WORD PTR [ecx+eax+16]
mov	WORD PTR _mxOut$[ebp], dx
mov	DWORD PTR _jj$[ebp], 1
mov	eax, 32					
shl	eax, 0
add	eax, DWORD PTR _aTo$[ebp]
mov	DWORD PTR _pTo$[ebp], eax
jmp	SHORT $LN21@wherePathS
mov	ecx, DWORD PTR _jj$[ebp]
add	ecx, 1
mov	DWORD PTR _jj$[ebp], ecx
mov	edx, DWORD PTR _pTo$[ebp]
add	edx, 32					
mov	DWORD PTR _pTo$[ebp], edx
mov	eax, DWORD PTR _jj$[ebp]
cmp	eax, DWORD PTR _mxChoice$[ebp]
jge	SHORT $LN22@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+18]
movsx	eax, WORD PTR _mxCost$[ebp]
cmp	edx, eax
jg	SHORT $LN17@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+18]
movsx	eax, WORD PTR _mxCost$[ebp]
cmp	edx, eax
jne	SHORT $LN18@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+16]
movsx	eax, WORD PTR _mxOut$[ebp]
cmp	edx, eax
jle	SHORT $LN18@wherePathS
mov	ecx, DWORD PTR _pTo$[ebp]
mov	dx, WORD PTR [ecx+18]
mov	WORD PTR _mxCost$[ebp], dx
mov	eax, DWORD PTR _pTo$[ebp]
mov	cx, WORD PTR [eax+16]
mov	WORD PTR _mxOut$[ebp], cx
mov	edx, DWORD PTR _jj$[ebp]
mov	DWORD PTR _mxI$[ebp], edx
jmp	SHORT $LN20@wherePathS
jmp	$LN42@wherePathS
jmp	$LN45@wherePathS
mov	eax, DWORD PTR _aTo$[ebp]
mov	DWORD PTR _pFrom$[ebp], eax
mov	ecx, DWORD PTR _aFrom$[ebp]
mov	DWORD PTR _aTo$[ebp], ecx
mov	edx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR _aFrom$[ebp], edx
mov	eax, DWORD PTR _nTo$[ebp]
mov	DWORD PTR _nFrom$[ebp], eax
jmp	$LN48@wherePathS
cmp	DWORD PTR _nFrom$[ebp], 0
jne	SHORT $LN16@wherePathS
push	OFFSET $SG118981
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
mov	edx, DWORD PTR _pSpace$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	eax, 1
jmp	$LN57@wherePathS
mov	ecx, DWORD PTR _aFrom$[ebp]
mov	DWORD PTR _pFrom$[ebp], ecx
mov	DWORD PTR _ii$[ebp], 1
jmp	SHORT $LN15@wherePathS
mov	edx, DWORD PTR _ii$[ebp]
add	edx, 1
mov	DWORD PTR _ii$[ebp], edx
mov	eax, DWORD PTR _ii$[ebp]
cmp	eax, DWORD PTR _nFrom$[ebp]
jge	SHORT $LN13@wherePathS
mov	ecx, DWORD PTR _pFrom$[ebp]
movsx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _ii$[ebp]
shl	eax, 5
mov	ecx, DWORD PTR _aFrom$[ebp]
movsx	eax, WORD PTR [ecx+eax+18]
cmp	edx, eax
jle	SHORT $LN12@wherePathS
mov	ecx, DWORD PTR _ii$[ebp]
shl	ecx, 5
add	ecx, DWORD PTR _aFrom$[ebp]
mov	DWORD PTR _pFrom$[ebp], ecx
jmp	SHORT $LN14@wherePathS
mov	DWORD PTR _iLoop$[ebp], 0
jmp	SHORT $LN11@wherePathS
mov	edx, DWORD PTR _iLoop$[ebp]
add	edx, 1
mov	DWORD PTR _iLoop$[ebp], edx
mov	eax, DWORD PTR _iLoop$[ebp]
cmp	eax, DWORD PTR _nLoop$[ebp]
jge	SHORT $LN9@wherePathS
imul	ecx, DWORD PTR _iLoop$[ebp], 72
mov	edx, DWORD PTR _pWInfo$[ebp]
lea	eax, DWORD PTR [edx+ecx+736]
mov	DWORD PTR _pLevel$8[ebp], eax
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR _iLoop$[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pWLoop$[ebp], ecx
mov	edx, DWORD PTR _pLevel$8[ebp]
mov	eax, DWORD PTR _pWLoop$[ebp]
mov	DWORD PTR [edx+56], eax
mov	ecx, DWORD PTR _pLevel$8[ebp]
mov	edx, DWORD PTR _pWLoop$[ebp]
mov	al, BYTE PTR [edx+16]
mov	BYTE PTR [ecx+36], al
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _pLevel$8[ebp]
movzx	ecx, BYTE PTR [eax+36]
imul	eax, ecx, 80
mov	ecx, DWORD PTR _pLevel$8[ebp]
mov	edx, DWORD PTR [edx+eax+56]
mov	DWORD PTR [ecx+4], edx
jmp	SHORT $LN10@wherePathS
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, WORD PTR [eax+34]
and	ecx, 1024				
je	SHORT $LN8@wherePathS
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 512				
jne	SHORT $LN8@wherePathS
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, BYTE PTR [ecx+40]
test	edx, edx
jne	SHORT $LN8@wherePathS
movsx	eax, WORD PTR _nRowEst$[ebp]
test	eax, eax
je	SHORT $LN8@wherePathS
lea	ecx, DWORD PTR _notUsed$1[ebp]
push	ecx
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR _nLoop$[ebp]
mov	edx, DWORD PTR [eax+ecx*4-4]
push	edx
mov	eax, DWORD PTR _nLoop$[ebp]
sub	eax, 1
push	eax
push	512					
mov	ecx, DWORD PTR _pFrom$[ebp]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_wherePathSatisfiesOrderBy
add	esp, 28					
movsx	edx, al
mov	DWORD PTR _rc$3[ebp], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _rc$3[ebp]
cmp	edx, DWORD PTR [ecx]
jne	SHORT $LN8@wherePathS
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [eax+40], 2
mov	ecx, DWORD PTR _pWInfo$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	$LN6@wherePathS
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 512				
je	SHORT $LN5@wherePathS
mov	ecx, DWORD PTR _pFrom$[ebp]
movsx	edx, BYTE PTR [ecx+20]
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+8]
cmp	edx, DWORD PTR [ecx]
jne	SHORT $LN4@wherePathS
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [edx+40], 2
jmp	SHORT $LN3@wherePathS
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	dl, BYTE PTR [ecx+20]
mov	BYTE PTR [eax+36], dl
mov	eax, DWORD PTR _pWInfo$[ebp]
movsx	ecx, BYTE PTR [eax+36]
test	ecx, ecx
jge	SHORT $LN2@wherePathS
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [edx+36], 0
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 2048				
je	$LN6@wherePathS
mov	ecx, DWORD PTR _pWInfo$[ebp]
movsx	edx, BYTE PTR [ecx+36]
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+8]
cmp	edx, DWORD PTR [ecx]
jne	SHORT $LN6@wherePathS
xorpd	xmm0, xmm0
movlpd	QWORD PTR _notUsed$2[ebp], xmm0
lea	edx, DWORD PTR _notUsed$2[ebp]
push	edx
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _nLoop$[ebp]
mov	eax, DWORD PTR [ecx+edx*4-4]
push	eax
mov	ecx, DWORD PTR _nLoop$[ebp]
sub	ecx, 1
push	ecx
push	0
mov	edx, DWORD PTR _pFrom$[ebp]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
push	edx
call	_wherePathSatisfiesOrderBy
add	esp, 28					
movsx	eax, al
mov	DWORD PTR _nOrder$5[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _nOrder$5[ebp]
cmp	eax, DWORD PTR [edx]
jne	SHORT $LN67@wherePathS
mov	DWORD PTR tv472[ebp], 1
jmp	SHORT $LN68@wherePathS
mov	DWORD PTR tv472[ebp], 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	dl, BYTE PTR tv472[ebp]
mov	BYTE PTR [ecx+37], dl
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	dx, WORD PTR [ecx+16]
mov	WORD PTR [eax+32], dx
mov	eax, DWORD PTR _pSpace$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_wherePathSatisfiesOrderBy PROC
push	ebp
mov	ebp, esp
sub	esp, 180				
mov	DWORD PTR _pLoop$[ebp], 0
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
xorpd	xmm0, xmm0
movlpd	QWORD PTR _obSat$[ebp], xmm0
movzx	eax, WORD PTR _nLoop$[ebp]
test	eax, eax
je	SHORT $LN69@wherePathS
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, WORD PTR [ecx+60]
and	edx, 128				
je	SHORT $LN69@wherePathS
xor	al, al
jmp	$LN70@wherePathS
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	cx, WORD PTR [eax]
mov	WORD PTR _nOrderBy$[ebp], cx
movzx	edx, WORD PTR _nOrderBy$[ebp]
cmp	edx, 63					
jle	SHORT $LN68@wherePathS
xor	al, al
jmp	$LN70@wherePathS
mov	BYTE PTR _isOrderDistinct$[ebp], 1
movzx	ecx, WORD PTR _nOrderBy$[ebp]
mov	eax, 1
xor	edx, edx
call	__allshl
sub	eax, 1
sbb	edx, 0
mov	DWORD PTR _obDone$[ebp], eax
mov	DWORD PTR _obDone$[ebp+4], edx
xorpd	xmm0, xmm0
movlpd	QWORD PTR _orderDistinctMask$[ebp], xmm0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _ready$[ebp], xmm0
mov	DWORD PTR _iLoop$[ebp], 0
jmp	SHORT $LN67@wherePathS
mov	eax, DWORD PTR _iLoop$[ebp]
add	eax, 1
mov	DWORD PTR _iLoop$[ebp], eax
movzx	ecx, BYTE PTR _isOrderDistinct$[ebp]
test	ecx, ecx
je	$LN65@wherePathS
mov	edx, DWORD PTR _obSat$[ebp+4]
cmp	edx, DWORD PTR _obDone$[ebp+4]
ja	$LN65@wherePathS
jb	SHORT $LN76@wherePathS
mov	eax, DWORD PTR _obSat$[ebp]
cmp	eax, DWORD PTR _obDone$[ebp]
jae	$LN65@wherePathS
movzx	ecx, WORD PTR _nLoop$[ebp]
cmp	DWORD PTR _iLoop$[ebp], ecx
jg	$LN65@wherePathS
cmp	DWORD PTR _iLoop$[ebp], 0
jle	SHORT $LN64@wherePathS
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR _ready$[ebp]
or	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR _ready$[ebp+4]
or	ecx, DWORD PTR [edx+12]
mov	DWORD PTR _ready$[ebp], eax
mov	DWORD PTR _ready$[ebp+4], ecx
movzx	edx, WORD PTR _nLoop$[ebp]
cmp	DWORD PTR _iLoop$[ebp], edx
jge	SHORT $LN72@wherePathS
mov	eax, DWORD PTR _pPath$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _iLoop$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR tv92[ebp], eax
jmp	SHORT $LN73@wherePathS
mov	ecx, DWORD PTR _pLast$[ebp]
mov	DWORD PTR tv92[ebp], ecx
mov	edx, DWORD PTR tv92[ebp]
mov	DWORD PTR _pLoop$[ebp], edx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 1024				
je	SHORT $LN63@wherePathS
mov	edx, DWORD PTR _pLoop$[ebp]
movsx	eax, BYTE PTR [edx+29]
test	eax, eax
je	SHORT $LN62@wherePathS
mov	ecx, DWORD PTR _obDone$[ebp]
mov	DWORD PTR _obSat$[ebp], ecx
mov	edx, DWORD PTR _obDone$[ebp+4]
mov	DWORD PTR _obSat$[ebp+4], edx
jmp	$LN65@wherePathS
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pLoop$[ebp]
movzx	eax, BYTE PTR [edx+16]
imul	edx, eax, 80
mov	eax, DWORD PTR [ecx+edx+56]
mov	DWORD PTR _iCur$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN61@wherePathS
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
movzx	edx, WORD PTR _nOrderBy$[ebp]
cmp	DWORD PTR _i$[ebp], edx
jge	$LN59@wherePathS
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
and	eax, DWORD PTR _obSat$[ebp]
and	edx, DWORD PTR _obSat$[ebp+4]
mov	DWORD PTR tv490[ebp], eax
mov	DWORD PTR tv490[ebp+4], edx
mov	eax, DWORD PTR tv490[ebp]
or	eax, DWORD PTR tv490[ebp+4]
je	SHORT $LN58@wherePathS
jmp	SHORT $LN60@wherePathS
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pOBExpr$[ebp], eax
mov	edx, DWORD PTR _pOBExpr$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 154				
je	SHORT $LN57@wherePathS
jmp	SHORT $LN60@wherePathS
mov	ecx, DWORD PTR _pOBExpr$[ebp]
mov	edx, DWORD PTR [ecx+28]
cmp	edx, DWORD PTR _iCur$[ebp]
je	SHORT $LN56@wherePathS
jmp	SHORT $LN60@wherePathS
push	0
push	130					
mov	eax, DWORD PTR _ready$[ebp]
not	eax
mov	ecx, DWORD PTR _ready$[ebp+4]
not	ecx
push	ecx
push	eax
mov	edx, DWORD PTR _pOBExpr$[ebp]
movsx	eax, WORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _iCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
add	edx, 328				
push	edx
call	_findTerm
add	esp, 28					
mov	DWORD PTR _pTerm$[ebp], eax
cmp	DWORD PTR _pTerm$[ebp], 0
jne	SHORT $LN55@wherePathS
jmp	$LN60@wherePathS
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, WORD PTR [eax+18]
and	ecx, 2
je	$LN54@wherePathS
mov	edx, DWORD PTR _pOBExpr$[ebp]
movsx	eax, WORD PTR [edx+32]
test	eax, eax
jl	$LN54@wherePathS
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
jne	SHORT $LN53@wherePathS
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pColl$[ebp], edx
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _z1$1[ebp], ecx
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
jne	SHORT $LN52@wherePathS
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pColl$[ebp], ecx
mov	edx, DWORD PTR _pColl$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _z2$2[ebp], eax
mov	ecx, DWORD PTR _z2$2[ebp]
push	ecx
mov	edx, DWORD PTR _z1$1[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN54@wherePathS
jmp	$LN60@wherePathS
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
or	eax, DWORD PTR _obSat$[ebp]
or	edx, DWORD PTR _obSat$[ebp+4]
mov	DWORD PTR _obSat$[ebp], eax
mov	DWORD PTR _obSat$[ebp+4], edx
jmp	$LN60@wherePathS
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 4096				
jne	$LN50@wherePathS
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 256				
je	SHORT $LN49@wherePathS
mov	DWORD PTR _pIndex$[ebp], 0
xor	ecx, ecx
mov	WORD PTR _nKeyCol$[ebp], cx
mov	edx, 1
mov	WORD PTR _nColumn$[ebp], dx
jmp	SHORT $LN48@wherePathS
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pIndex$[ebp], ecx
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN46@wherePathS
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+56]
shr	eax, 2
and	eax, 1
je	SHORT $LN47@wherePathS
xor	al, al
jmp	$LN70@wherePathS
jmp	SHORT $LN48@wherePathS
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	dx, WORD PTR [ecx+50]
mov	WORD PTR _nKeyCol$[ebp], dx
mov	eax, DWORD PTR _pIndex$[ebp]
mov	cx, WORD PTR [eax+52]
mov	WORD PTR _nColumn$[ebp], cx
mov	edx, DWORD PTR _pIndex$[ebp]
movzx	eax, BYTE PTR [edx+54]
test	eax, eax
je	SHORT $LN74@wherePathS
mov	DWORD PTR tv216[ebp], 1
jmp	SHORT $LN75@wherePathS
mov	DWORD PTR tv216[ebp], 0
mov	cl, BYTE PTR tv216[ebp]
mov	BYTE PTR _isOrderDistinct$[ebp], cl
mov	BYTE PTR _revSet$[ebp], 0
mov	dl, BYTE PTR _revSet$[ebp]
mov	BYTE PTR _rev$[ebp], dl
mov	BYTE PTR _distinctColumns$[ebp], 0
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN44@wherePathS
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
movzx	ecx, WORD PTR _nColumn$[ebp]
cmp	DWORD PTR _j$[ebp], ecx
jge	$LN42@wherePathS
mov	edx, DWORD PTR _pLoop$[ebp]
movzx	eax, WORD PTR [edx+24]
cmp	DWORD PTR _j$[ebp], eax
jge	SHORT $LN41@wherePathS
mov	ecx, DWORD PTR _pLoop$[ebp]
movzx	edx, WORD PTR [ecx+26]
test	edx, edx
jne	SHORT $LN41@wherePathS
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
movzx	ecx, WORD PTR [eax+18]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
and	edx, 130				
je	SHORT $LN41@wherePathS
mov	eax, DWORD PTR _i$[ebp]
and	eax, 128				
je	SHORT $LN40@wherePathS
mov	BYTE PTR _isOrderDistinct$[ebp], 0
jmp	SHORT $LN43@wherePathS
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN39@wherePathS
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _j$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
mov	DWORD PTR _iColumn$[ebp], ecx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	ecx, DWORD PTR _j$[ebp]
mov	dl, BYTE PTR [eax+ecx]
mov	BYTE PTR _revIdx$[ebp], dl
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+12]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _iColumn$[ebp], edx
jne	SHORT $LN38@wherePathS
mov	DWORD PTR _iColumn$[ebp], -1
jmp	SHORT $LN37@wherePathS
mov	DWORD PTR _iColumn$[ebp], -1
mov	BYTE PTR _revIdx$[ebp], 0
movzx	eax, BYTE PTR _isOrderDistinct$[ebp]
test	eax, eax
je	SHORT $LN36@wherePathS
cmp	DWORD PTR _iColumn$[ebp], 0
jl	SHORT $LN36@wherePathS
mov	ecx, DWORD PTR _pLoop$[ebp]
movzx	edx, WORD PTR [ecx+24]
cmp	DWORD PTR _j$[ebp], edx
jl	SHORT $LN36@wherePathS
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+12]
imul	edx, DWORD PTR _iColumn$[ebp], 24
mov	eax, DWORD PTR [ecx+4]
movzx	ecx, BYTE PTR [eax+edx+20]
test	ecx, ecx
jne	SHORT $LN36@wherePathS
mov	BYTE PTR _isOrderDistinct$[ebp], 0
mov	BYTE PTR _bOnce$6[ebp], 1
mov	BYTE PTR _isMatch$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN35@wherePathS
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
movzx	eax, BYTE PTR _bOnce$6[ebp]
test	eax, eax
je	$LN33@wherePathS
movzx	ecx, WORD PTR _nOrderBy$[ebp]
cmp	DWORD PTR _i$[ebp], ecx
jge	$LN33@wherePathS
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
and	eax, DWORD PTR _obSat$[ebp]
and	edx, DWORD PTR _obSat$[ebp+4]
mov	DWORD PTR tv593[ebp], eax
mov	DWORD PTR tv593[ebp+4], edx
mov	edx, DWORD PTR tv593[ebp]
or	edx, DWORD PTR tv593[ebp+4]
je	SHORT $LN32@wherePathS
jmp	SHORT $LN34@wherePathS
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pOrderBy$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pOBExpr$[ebp], eax
movzx	ecx, WORD PTR _wctrlFlags$[ebp]
and	ecx, 768				
jne	SHORT $LN31@wherePathS
mov	BYTE PTR _bOnce$6[ebp], 0
mov	edx, DWORD PTR _pOBExpr$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 154				
je	SHORT $LN30@wherePathS
jmp	$LN34@wherePathS
mov	ecx, DWORD PTR _pOBExpr$[ebp]
mov	edx, DWORD PTR [ecx+28]
cmp	edx, DWORD PTR _iCur$[ebp]
je	SHORT $LN29@wherePathS
jmp	$LN34@wherePathS
mov	eax, DWORD PTR _pOBExpr$[ebp]
movsx	ecx, WORD PTR [eax+32]
cmp	ecx, DWORD PTR _iColumn$[ebp]
je	SHORT $LN28@wherePathS
jmp	$LN34@wherePathS
cmp	DWORD PTR _iColumn$[ebp], 0
jl	SHORT $LN27@wherePathS
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
jne	SHORT $LN26@wherePathS
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pColl$[ebp], eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
push	ecx
mov	edx, DWORD PTR _pColl$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN27@wherePathS
jmp	$LN34@wherePathS
mov	BYTE PTR _isMatch$[ebp], 1
jmp	SHORT $LN33@wherePathS
jmp	$LN34@wherePathS
movzx	ecx, BYTE PTR _isMatch$[ebp]
test	ecx, ecx
je	SHORT $LN24@wherePathS
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 256				
jne	SHORT $LN24@wherePathS
movzx	ecx, BYTE PTR _revSet$[ebp]
test	ecx, ecx
je	SHORT $LN23@wherePathS
movzx	edx, BYTE PTR _rev$[ebp]
movzx	eax, BYTE PTR _revIdx$[ebp]
xor	edx, eax
imul	ecx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [eax+4]
movzx	ecx, BYTE PTR [eax+ecx+12]
cmp	edx, ecx
je	SHORT $LN22@wherePathS
mov	BYTE PTR _isMatch$[ebp], 0
jmp	SHORT $LN24@wherePathS
movzx	edx, BYTE PTR _revIdx$[ebp]
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [ecx+eax+12]
xor	edx, eax
mov	BYTE PTR _rev$[ebp], dl
movzx	ecx, BYTE PTR _rev$[ebp]
test	ecx, ecx
je	SHORT $LN20@wherePathS
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _iLoop$[ebp]
call	__allshl
mov	ecx, DWORD PTR _pRevMask$[ebp]
or	eax, DWORD PTR [ecx]
or	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _pRevMask$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	BYTE PTR _revSet$[ebp], 1
movzx	edx, BYTE PTR _isMatch$[ebp]
test	edx, edx
je	SHORT $LN19@wherePathS
cmp	DWORD PTR _iColumn$[ebp], 0
jge	SHORT $LN18@wherePathS
mov	BYTE PTR _distinctColumns$[ebp], 1
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
or	eax, DWORD PTR _obSat$[ebp]
or	edx, DWORD PTR _obSat$[ebp+4]
mov	DWORD PTR _obSat$[ebp], eax
mov	DWORD PTR _obSat$[ebp+4], edx
jmp	SHORT $LN17@wherePathS
cmp	DWORD PTR _j$[ebp], 0
je	SHORT $LN15@wherePathS
movzx	eax, WORD PTR _nKeyCol$[ebp]
cmp	DWORD PTR _j$[ebp], eax
jge	SHORT $LN16@wherePathS
mov	BYTE PTR _isOrderDistinct$[ebp], 0
jmp	SHORT $LN42@wherePathS
jmp	$LN43@wherePathS
movzx	ecx, BYTE PTR _distinctColumns$[ebp]
test	ecx, ecx
je	SHORT $LN50@wherePathS
mov	BYTE PTR _isOrderDistinct$[ebp], 1
movzx	edx, BYTE PTR _isOrderDistinct$[ebp]
test	edx, edx
je	$LN13@wherePathS
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR _orderDistinctMask$[ebp]
or	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _orderDistinctMask$[ebp+4]
or	edx, DWORD PTR [eax+12]
mov	DWORD PTR _orderDistinctMask$[ebp], ecx
mov	DWORD PTR _orderDistinctMask$[ebp+4], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN12@wherePathS
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
movzx	ecx, WORD PTR _nOrderBy$[ebp]
cmp	DWORD PTR _i$[ebp], ecx
jge	$LN13@wherePathS
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
and	eax, DWORD PTR _obSat$[ebp]
and	edx, DWORD PTR _obSat$[ebp+4]
mov	DWORD PTR tv666[ebp], eax
mov	DWORD PTR tv666[ebp+4], edx
mov	edx, DWORD PTR tv666[ebp]
or	edx, DWORD PTR tv666[ebp+4]
je	SHORT $LN9@wherePathS
jmp	SHORT $LN11@wherePathS
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pOrderBy$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _p$3[ebp], eax
mov	ecx, DWORD PTR _p$3[ebp]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
add	edx, 68					
push	edx
call	_exprTableUsage
add	esp, 8
mov	DWORD PTR _mTerm$5[ebp], eax
mov	DWORD PTR _mTerm$5[ebp+4], edx
mov	eax, DWORD PTR _mTerm$5[ebp]
or	eax, DWORD PTR _mTerm$5[ebp+4]
jne	SHORT $LN8@wherePathS
mov	ecx, DWORD PTR _p$3[ebp]
push	ecx
call	_sqlite3ExprIsConstant
add	esp, 4
test	eax, eax
jne	SHORT $LN8@wherePathS
jmp	$LN11@wherePathS
mov	edx, DWORD PTR _orderDistinctMask$[ebp]
not	edx
mov	eax, DWORD PTR _orderDistinctMask$[ebp+4]
not	eax
and	edx, DWORD PTR _mTerm$5[ebp]
and	eax, DWORD PTR _mTerm$5[ebp+4]
mov	DWORD PTR tv692[ebp], edx
mov	DWORD PTR tv692[ebp+4], eax
mov	ecx, DWORD PTR tv692[ebp]
or	ecx, DWORD PTR tv692[ebp+4]
jne	SHORT $LN7@wherePathS
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
or	eax, DWORD PTR _obSat$[ebp]
or	edx, DWORD PTR _obSat$[ebp+4]
mov	DWORD PTR _obSat$[ebp], eax
mov	DWORD PTR _obSat$[ebp+4], edx
jmp	$LN11@wherePathS
jmp	$LN66@wherePathS
mov	edx, DWORD PTR _obSat$[ebp]
cmp	edx, DWORD PTR _obDone$[ebp]
jne	SHORT $LN6@wherePathS
mov	eax, DWORD PTR _obSat$[ebp+4]
cmp	eax, DWORD PTR _obDone$[ebp+4]
jne	SHORT $LN6@wherePathS
mov	al, BYTE PTR _nOrderBy$[ebp]
jmp	SHORT $LN70@wherePathS
movzx	ecx, BYTE PTR _isOrderDistinct$[ebp]
test	ecx, ecx
jne	SHORT $LN5@wherePathS
movzx	edx, WORD PTR _nOrderBy$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN4@wherePathS
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN2@wherePathS
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
sub	eax, 1
sbb	edx, 0
mov	DWORD PTR _m$4[ebp], eax
mov	DWORD PTR _m$4[ebp+4], edx
mov	ecx, DWORD PTR _obSat$[ebp]
and	ecx, DWORD PTR _m$4[ebp]
mov	edx, DWORD PTR _obSat$[ebp+4]
and	edx, DWORD PTR _m$4[ebp+4]
mov	DWORD PTR tv730[ebp], ecx
mov	DWORD PTR tv730[ebp+4], edx
mov	eax, DWORD PTR tv730[ebp]
cmp	eax, DWORD PTR _m$4[ebp]
jne	SHORT $LN1@wherePathS
mov	ecx, DWORD PTR tv730[ebp+4]
cmp	ecx, DWORD PTR _m$4[ebp+4]
jne	SHORT $LN1@wherePathS
mov	al, BYTE PTR _i$[ebp]
jmp	SHORT $LN70@wherePathS
jmp	SHORT $LN3@wherePathS
xor	al, al
jmp	SHORT $LN70@wherePathS
or	al, -1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopAddAll PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
xorpd	xmm0, xmm0
movlpd	QWORD PTR _mExtra$[ebp], xmm0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _mPrior$[ebp], xmm0
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pTabList$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, BYTE PTR [ecx+41]
mov	DWORD PTR _nTabList$[ebp], edx
mov	DWORD PTR _rc$[ebp], 0
mov	BYTE PTR _priorJoinType$[ebp], 0
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pNew$[ebp], ecx
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
call	_whereLoopInit
add	esp, 4
mov	DWORD PTR _iTab$[ebp], 0
mov	eax, DWORD PTR _pTabList$[ebp]
add	eax, 8
mov	DWORD PTR _pItem$[ebp], eax
jmp	SHORT $LN9@whereLoopA
mov	ecx, DWORD PTR _iTab$[ebp]
add	ecx, 1
mov	DWORD PTR _iTab$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 80					
mov	DWORD PTR _pItem$[ebp], edx
mov	eax, DWORD PTR _iTab$[ebp]
cmp	eax, DWORD PTR _nTabList$[ebp]
jge	$LN7@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dl, BYTE PTR _iTab$[ebp]
mov	BYTE PTR [ecx+16], dl
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
add	edx, 68					
push	edx
call	_getMask
add	esp, 8
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	DWORD PTR [ecx+12], edx
mov	edx, DWORD PTR _pItem$[ebp]
movzx	eax, BYTE PTR [edx+36]
movzx	ecx, BYTE PTR _priorJoinType$[ebp]
or	eax, ecx
and	eax, 10					
je	SHORT $LN6@whereLoopA
mov	edx, DWORD PTR _mPrior$[ebp]
mov	DWORD PTR _mExtra$[ebp], edx
mov	eax, DWORD PTR _mPrior$[ebp+4]
mov	DWORD PTR _mExtra$[ebp+4], eax
mov	ecx, DWORD PTR _pItem$[ebp]
mov	dl, BYTE PTR [ecx+36]
mov	BYTE PTR _priorJoinType$[ebp], dl
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax+16]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN5@whereLoopA
mov	eax, DWORD PTR _mExtra$[ebp+4]
push	eax
mov	ecx, DWORD PTR _mExtra$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
push	edx
call	_whereLoopAddVirtual
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN4@whereLoopA
mov	eax, DWORD PTR _mExtra$[ebp+4]
push	eax
mov	ecx, DWORD PTR _mExtra$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
push	edx
call	_whereLoopAddBtree
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@whereLoopA
mov	eax, DWORD PTR _mExtra$[ebp+4]
push	eax
mov	ecx, DWORD PTR _mExtra$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
push	edx
call	_whereLoopAddOr
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _mPrior$[ebp]
or	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _mPrior$[ebp+4]
or	edx, DWORD PTR [eax+12]
mov	DWORD PTR _mPrior$[ebp], ecx
mov	DWORD PTR _mPrior$[ebp+4], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@whereLoopA
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN2@whereLoopA
jmp	SHORT $LN7@whereLoopA
jmp	$LN8@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_whereLoopClear
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopAddOr PROC
push	ebp
mov	ebp, esp
sub	esp, 664				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pWC$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, WORD PTR [ecx+34]
and	edx, 128				
je	SHORT $LN27@whereLoopA
xor	eax, eax
jmp	$LN28@whereLoopA
mov	eax, DWORD PTR _pWC$[ebp]
imul	ecx, DWORD PTR [eax+12], 48
mov	edx, DWORD PTR _pWC$[ebp]
add	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _pWCEnd$[ebp], ecx
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pNew$[ebp], ecx
push	56					
push	0
lea	edx, DWORD PTR _sSum$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, BYTE PTR [edx+16]
imul	edx, eax, 80
lea	eax, DWORD PTR [ecx+edx+8]
mov	DWORD PTR _pItem$[ebp], eax
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _iCur$[ebp], edx
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], ecx
jmp	SHORT $LN26@whereLoopA
mov	edx, DWORD PTR _pTerm$[ebp]
add	edx, 48					
mov	DWORD PTR _pTerm$[ebp], edx
mov	eax, DWORD PTR _pTerm$[ebp]
cmp	eax, DWORD PTR _pWCEnd$[ebp]
jae	$LN24@whereLoopA
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN24@whereLoopA
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 256				
je	$LN23@whereLoopA
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [ecx+408]
and	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [ecx+412]
and	ecx, DWORD PTR [edx+12]
mov	DWORD PTR tv303[ebp], eax
mov	DWORD PTR tv303[ebp+4], ecx
mov	edx, DWORD PTR tv303[ebp]
or	edx, DWORD PTR tv303[ebp+4]
je	$LN23@whereLoopA
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pOrWC$3[ebp], ecx
mov	edx, DWORD PTR _pOrWC$3[ebp]
imul	eax, DWORD PTR [edx+12], 48
mov	ecx, DWORD PTR _pOrWC$3[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pOrWCEnd$1[ebp], eax
mov	DWORD PTR _once$2[ebp], 1
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _sSubBuild$[ebp], eax
mov	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _sSubBuild$[ebp+4], ecx
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _sSubBuild$[ebp+8], eax
mov	ecx, DWORD PTR [edx+12]
mov	DWORD PTR _sSubBuild$[ebp+12], ecx
mov	edx, DWORD PTR [edx+16]
mov	DWORD PTR _sSubBuild$[ebp+16], edx
mov	DWORD PTR _sSubBuild$[ebp+8], 0
lea	eax, DWORD PTR _sCur$[ebp]
mov	DWORD PTR _sSubBuild$[ebp+16], eax
mov	ecx, DWORD PTR _pOrWC$3[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pOrTerm$5[ebp], edx
jmp	SHORT $LN22@whereLoopA
mov	eax, DWORD PTR _pOrTerm$5[ebp]
add	eax, 48					
mov	DWORD PTR _pOrTerm$5[ebp], eax
mov	ecx, DWORD PTR _pOrTerm$5[ebp]
cmp	ecx, DWORD PTR _pOrWCEnd$1[ebp]
jae	$LN20@whereLoopA
mov	edx, DWORD PTR _pOrTerm$5[ebp]
movzx	eax, WORD PTR [edx+18]
and	eax, 512				
je	SHORT $LN19@whereLoopA
mov	ecx, DWORD PTR _pOrTerm$5[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _sSubBuild$[ebp+4], edx
jmp	SHORT $LN18@whereLoopA
mov	eax, DWORD PTR _pOrTerm$5[ebp]
mov	ecx, DWORD PTR [eax+8]
cmp	ecx, DWORD PTR _iCur$[ebp]
jne	SHORT $LN17@whereLoopA
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _tempWC$[ebp], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR _tempWC$[ebp+4], ecx
mov	BYTE PTR _tempWC$[ebp+8], 72		
mov	DWORD PTR _tempWC$[ebp+12], 1
mov	edx, DWORD PTR _pOrTerm$5[ebp]
mov	DWORD PTR _tempWC$[ebp+20], edx
lea	eax, DWORD PTR _tempWC$[ebp]
mov	DWORD PTR _sSubBuild$[ebp+4], eax
jmp	SHORT $LN18@whereLoopA
jmp	$LN21@whereLoopA
xor	ecx, ecx
mov	WORD PTR _sCur$[ebp], cx
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+16]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN15@whereLoopA
mov	edx, DWORD PTR _mExtra$[ebp+4]
push	edx
mov	eax, DWORD PTR _mExtra$[ebp]
push	eax
lea	ecx, DWORD PTR _sSubBuild$[ebp]
push	ecx
call	_whereLoopAddVirtual
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN14@whereLoopA
mov	edx, DWORD PTR _mExtra$[ebp+4]
push	edx
mov	eax, DWORD PTR _mExtra$[ebp]
push	eax
lea	ecx, DWORD PTR _sSubBuild$[ebp]
push	ecx
call	_whereLoopAddBtree
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
movzx	edx, WORD PTR _sCur$[ebp]
test	edx, edx
jne	SHORT $LN13@whereLoopA
xor	eax, eax
mov	WORD PTR _sSum$[ebp], ax
jmp	$LN20@whereLoopA
jmp	$LN12@whereLoopA
cmp	DWORD PTR _once$2[ebp], 0
je	SHORT $LN11@whereLoopA
lea	ecx, DWORD PTR _sCur$[ebp]
push	ecx
lea	edx, DWORD PTR _sSum$[ebp]
push	edx
call	_whereOrMove
add	esp, 8
mov	DWORD PTR _once$2[ebp], 0
jmp	$LN12@whereLoopA
lea	eax, DWORD PTR _sSum$[ebp]
push	eax
lea	ecx, DWORD PTR _sPrev$7[ebp]
push	ecx
call	_whereOrMove
add	esp, 8
xor	edx, edx
mov	WORD PTR _sSum$[ebp], dx
mov	DWORD PTR _i$6[ebp], 0
jmp	SHORT $LN9@whereLoopA
mov	eax, DWORD PTR _i$6[ebp]
add	eax, 1
mov	DWORD PTR _i$6[ebp], eax
movzx	ecx, WORD PTR _sPrev$7[ebp]
cmp	DWORD PTR _i$6[ebp], ecx
jge	$LN12@whereLoopA
mov	DWORD PTR _j$4[ebp], 0
jmp	SHORT $LN6@whereLoopA
mov	edx, DWORD PTR _j$4[ebp]
add	edx, 1
mov	DWORD PTR _j$4[ebp], edx
movzx	eax, WORD PTR _sCur$[ebp]
cmp	DWORD PTR _j$4[ebp], eax
jge	$LN4@whereLoopA
mov	ecx, DWORD PTR _j$4[ebp]
shl	ecx, 4
movzx	edx, WORD PTR _sCur$[ebp+ecx+18]
push	edx
mov	eax, DWORD PTR _i$6[ebp]
shl	eax, 4
movzx	ecx, WORD PTR _sPrev$7[ebp+eax+18]
push	ecx
call	_sqlite3LogEstAdd
add	esp, 8
movzx	edx, ax
push	edx
mov	eax, DWORD PTR _j$4[ebp]
shl	eax, 4
movzx	ecx, WORD PTR _sCur$[ebp+eax+16]
push	ecx
mov	edx, DWORD PTR _i$6[ebp]
shl	edx, 4
movzx	eax, WORD PTR _sPrev$7[ebp+edx+16]
push	eax
call	_sqlite3LogEstAdd
add	esp, 8
movzx	ecx, ax
push	ecx
mov	edx, DWORD PTR _i$6[ebp]
shl	edx, 4
mov	eax, DWORD PTR _j$4[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _sPrev$7[ebp+edx+8]
or	ecx, DWORD PTR _sCur$[ebp+eax+8]
mov	edx, DWORD PTR _sPrev$7[ebp+edx+12]
or	edx, DWORD PTR _sCur$[ebp+eax+12]
push	edx
push	ecx
lea	eax, DWORD PTR _sSum$[ebp]
push	eax
call	_whereOrInsert
add	esp, 20					
jmp	$LN5@whereLoopA
jmp	$LN8@whereLoopA
jmp	$LN21@whereLoopA
mov	ecx, 1
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	edx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+eax], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+36], 8192		
xor	ecx, ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, DWORD PTR _pNew$[ebp]
mov	BYTE PTR [eax+17], 0
push	12					
push	0
mov	ecx, DWORD PTR _pNew$[ebp]
add	ecx, 24					
push	ecx
call	_memset
add	esp, 12					
mov	DWORD PTR _i$6[ebp], 0
jmp	SHORT $LN3@whereLoopA
mov	edx, DWORD PTR _i$6[ebp]
add	edx, 1
mov	DWORD PTR _i$6[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN23@whereLoopA
movzx	eax, WORD PTR _sSum$[ebp]
cmp	DWORD PTR _i$6[ebp], eax
jge	SHORT $LN23@whereLoopA
mov	ecx, DWORD PTR _i$6[ebp]
shl	ecx, 4
movsx	edx, WORD PTR _sSum$[ebp+ecx+16]
add	edx, 1
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+20], dx
mov	ecx, DWORD PTR _i$6[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR _sSum$[ebp+ecx+18]
mov	WORD PTR [edx+22], ax
mov	ecx, DWORD PTR _i$6[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _sSum$[ebp+ecx+8]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _sSum$[ebp+ecx+12]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _pBuilder$[ebp]
push	eax
call	_whereLoopInsert
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN2@whereLoopA
jmp	$LN25@whereLoopA
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopAddVirtual PROC
push	ebp
mov	ebp, esp
sub	esp, 104				
mov	DWORD PTR _seenIn$[ebp], 0
mov	DWORD PTR _seenVar$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pWC$[ebp], ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pNew$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _pNew$[ebp]
movzx	ecx, BYTE PTR [eax+16]
imul	eax, ecx, 80
lea	ecx, DWORD PTR [edx+eax+8]
mov	DWORD PTR _pSrc$[ebp], ecx
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pTab$[ebp], eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_allocateIndexInfo
add	esp, 16					
mov	DWORD PTR _pIdxInfo$[ebp], eax
cmp	DWORD PTR _pIdxInfo$[ebp], 0
jne	SHORT $LN39@whereLoopA
mov	eax, 7
jmp	$LN40@whereLoopA
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax], 0
mov	DWORD PTR [eax+4], 0
xor	ecx, ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+36], 1024		
xor	ecx, ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pNew$[ebp]
mov	BYTE PTR [eax+28], 0
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pUsage$[ebp], edx
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nConstraint$[ebp], ecx
mov	edx, DWORD PTR _nConstraint$[ebp]
push	edx
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_whereLoopResize
add	esp, 12					
test	eax, eax
je	SHORT $LN38@whereLoopA
mov	edx, DWORD PTR _pIdxInfo$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	eax, 7
jmp	$LN40@whereLoopA
mov	DWORD PTR _iPhase$[ebp], 0
jmp	SHORT $LN37@whereLoopA
mov	ecx, DWORD PTR _iPhase$[ebp]
add	ecx, 1
mov	DWORD PTR _iPhase$[ebp], ecx
cmp	DWORD PTR _iPhase$[ebp], 3
jg	$whereLoopAddVtab_exit$48
cmp	DWORD PTR _seenIn$[ebp], 0
jne	SHORT $LN33@whereLoopA
mov	edx, DWORD PTR _iPhase$[ebp]
and	edx, 1
je	SHORT $LN33@whereLoopA
mov	eax, DWORD PTR _iPhase$[ebp]
add	eax, 1
mov	DWORD PTR _iPhase$[ebp], eax
cmp	DWORD PTR _iPhase$[ebp], 3
jle	SHORT $LN33@whereLoopA
jmp	$whereLoopAddVtab_exit$48
cmp	DWORD PTR _seenVar$[ebp], 0
jne	SHORT $LN32@whereLoopA
cmp	DWORD PTR _iPhase$[ebp], 1
jle	SHORT $LN32@whereLoopA
jmp	$whereLoopAddVtab_exit$48
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pIdxCons$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN31@whereLoopA
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pIdxCons$[ebp]
add	ecx, 12					
mov	DWORD PTR _pIdxCons$[ebp], ecx
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	$LN29@whereLoopA
mov	ecx, DWORD PTR _pIdxCons$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _j$[ebp], edx
imul	eax, DWORD PTR _j$[ebp], 48
mov	ecx, DWORD PTR _pWC$[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pTerm$[ebp], eax
mov	edx, DWORD PTR _iPhase$[ebp]
mov	DWORD PTR tv147[ebp], edx
cmp	DWORD PTR tv147[ebp], 0
je	SHORT $LN26@whereLoopA
cmp	DWORD PTR tv147[ebp], 1
je	SHORT $LN21@whereLoopA
cmp	DWORD PTR tv147[ebp], 2
je	$LN20@whereLoopA
jmp	$LN19@whereLoopA
mov	eax, DWORD PTR _pIdxCons$[ebp]
mov	BYTE PTR [eax+5], 0
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 1
je	SHORT $LN25@whereLoopA
mov	DWORD PTR _seenIn$[ebp], 1
mov	eax, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR tv364[ebp], eax
mov	ecx, DWORD PTR tv364[ebp]
mov	edx, DWORD PTR tv364[ebp]
mov	eax, DWORD PTR [ecx+32]
or	eax, DWORD PTR [edx+36]
je	SHORT $LN24@whereLoopA
mov	DWORD PTR _seenVar$[ebp], 1
jmp	SHORT $LN22@whereLoopA
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 1
jne	SHORT $LN22@whereLoopA
mov	eax, DWORD PTR _pIdxCons$[ebp]
mov	BYTE PTR [eax+5], 1
jmp	SHORT $LN27@whereLoopA
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR tv373[ebp], ecx
mov	edx, DWORD PTR tv373[ebp]
mov	eax, DWORD PTR tv373[ebp]
mov	ecx, DWORD PTR [edx+32]
or	ecx, DWORD PTR [eax+36]
jne	SHORT $LN42@whereLoopA
mov	DWORD PTR tv163[ebp], 1
jmp	SHORT $LN43@whereLoopA
mov	DWORD PTR tv163[ebp], 0
mov	edx, DWORD PTR _pIdxCons$[ebp]
mov	al, BYTE PTR tv163[ebp]
mov	BYTE PTR [edx+5], al
jmp	SHORT $LN27@whereLoopA
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 1
jne	SHORT $LN44@whereLoopA
mov	DWORD PTR tv170[ebp], 1
jmp	SHORT $LN45@whereLoopA
mov	DWORD PTR tv170[ebp], 0
mov	eax, DWORD PTR _pIdxCons$[ebp]
mov	cl, BYTE PTR tv170[ebp]
mov	BYTE PTR [eax+5], cl
jmp	SHORT $LN27@whereLoopA
mov	edx, DWORD PTR _pIdxCons$[ebp]
mov	BYTE PTR [edx+5], 1
jmp	$LN30@whereLoopA
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 3
push	ecx
push	0
mov	edx, DWORD PTR _pUsage$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pIdxInfo$[ebp]
cmp	DWORD PTR [eax+28], 0
je	SHORT $LN18@whereLoopA
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR [eax+24], 0
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR [ecx+20], 0
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR [edx+28], 0
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR [eax+32], 0
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
movsd	xmm0, QWORD PTR __real@546d42aea2879f2e
movsd	QWORD PTR [ecx+40], xmm0
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR [edx+48], 25			
mov	DWORD PTR [edx+52], 0
mov	eax, DWORD PTR _pIdxInfo$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_vtabBestIndex
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN17@whereLoopA
jmp	$whereLoopAddVtab_exit$48
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pIdxCons$[ebp], ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _mExtra$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _mExtra$[ebp+4]
mov	DWORD PTR [edx+4], ecx
mov	DWORD PTR _mxTerm$[ebp], -1
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN16@whereLoopA
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nConstraint$[ebp]
jge	SHORT $LN14@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR [edx+eax*4], 0
jmp	SHORT $LN15@whereLoopA
xor	ecx, ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+30], cx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN13@whereLoopA
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pIdxCons$[ebp]
add	ecx, 12					
mov	DWORD PTR _pIdxCons$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nConstraint$[ebp]
jge	$LN11@whereLoopA
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pUsage$[ebp]
mov	edx, DWORD PTR [ecx+eax*8]
sub	edx, 1
mov	DWORD PTR _iTerm$[ebp], edx
js	$LN5@whereLoopA
mov	eax, DWORD PTR _pIdxCons$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _iTerm$[ebp]
cmp	edx, DWORD PTR _nConstraint$[ebp]
jge	SHORT $LN8@whereLoopA
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN8@whereLoopA
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR [eax+12]
jge	SHORT $LN8@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _iTerm$[ebp]
cmp	DWORD PTR [eax+ecx*4], 0
je	SHORT $LN9@whereLoopA
mov	DWORD PTR _rc$[ebp], 1
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG118676
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$whereLoopAddVtab_exit$48
imul	edx, DWORD PTR _j$[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
add	edx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], edx
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [ecx]
or	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR [ecx+4]
or	ecx, DWORD PTR [edx+36]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _iTerm$[ebp]
mov	eax, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	ecx, DWORD PTR _iTerm$[ebp]
cmp	ecx, DWORD PTR _mxTerm$[ebp]
jle	SHORT $LN7@whereLoopA
mov	edx, DWORD PTR _iTerm$[ebp]
mov	DWORD PTR _mxTerm$[ebp], edx
cmp	DWORD PTR _iTerm$[ebp], 16		
jge	SHORT $LN6@whereLoopA
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pUsage$[ebp]
movzx	edx, BYTE PTR [ecx+eax*8+4]
test	edx, edx
je	SHORT $LN6@whereLoopA
mov	eax, 1
mov	ecx, DWORD PTR _iTerm$[ebp]
shl	eax, cl
mov	ecx, DWORD PTR _pNew$[ebp]
movzx	edx, WORD PTR [ecx+30]
or	edx, eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+30], dx
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 1
je	SHORT $LN5@whereLoopA
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pUsage$[ebp]
movzx	edx, BYTE PTR [ecx+eax*8+4]
test	edx, edx
jne	SHORT $LN4@whereLoopA
jmp	SHORT $LN11@whereLoopA
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR [eax+32], 0
jmp	$LN12@whereLoopA
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nConstraint$[ebp]
jl	$LN2@whereLoopA
mov	edx, DWORD PTR _mxTerm$[ebp]
add	edx, 1
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+40], dx
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR [ecx+24], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	al, BYTE PTR [edx+28]
mov	BYTE PTR [ecx+28], al
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR [ecx+28], 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR [edx+32], ecx
mov	edx, DWORD PTR _pIdxInfo$[ebp]
cmp	DWORD PTR [edx+32], 0
je	SHORT $LN46@whereLoopA
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR tv273[ebp], ecx
jmp	SHORT $LN47@whereLoopA
mov	DWORD PTR tv273[ebp], 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	al, BYTE PTR tv273[ebp]
mov	BYTE PTR [edx+29], al
xor	ecx, ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, DWORD PTR _pIdxInfo$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax+40]
movsd	QWORD PTR [esp], xmm0
call	_sqlite3LogEstFromDouble
add	esp, 8
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+20], ax
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	eax, DWORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR [edx+48]
push	ecx
call	_sqlite3LogEst
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+22], ax
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
push	ecx
call	_whereLoopInsert
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, BYTE PTR [edx+28]
test	eax, eax
je	SHORT $LN2@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pNew$[ebp]
mov	BYTE PTR [eax+28], 0
jmp	$LN36@whereLoopA
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
cmp	DWORD PTR [ecx+28], 0
je	SHORT $LN1@whereLoopA
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopAddBtree PROC
push	ebp
mov	ebp, esp
sub	esp, 160				
push	esi
or	eax, -1
mov	WORD PTR _aiColumnPk$[ebp], ax
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _iSortIdx$[ebp], 1
mov	ecx, DWORD PTR _pBuilder$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pNew$[ebp], edx
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pTabList$[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
movzx	edx, BYTE PTR [ecx+16]
imul	eax, edx, 80
mov	ecx, DWORD PTR _pTabList$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _pSrc$[ebp], edx
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pTab$[ebp], ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pWC$[ebp], eax
mov	ecx, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [ecx+76], 0
je	SHORT $LN25@whereLoopA
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+76]
mov	DWORD PTR _pProbe$[ebp], eax
jmp	$LN24@whereLoopA
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
je	SHORT $LN23@whereLoopA
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pProbe$[ebp], ecx
jmp	$LN24@whereLoopA
push	60					
push	0
lea	edx, DWORD PTR _sPk$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, 1
mov	WORD PTR _sPk$[ebp+50], ax
lea	ecx, DWORD PTR _aiColumnPk$[ebp]
mov	DWORD PTR _sPk$[ebp+4], ecx
lea	edx, DWORD PTR _aiRowEstPk$[ebp]
mov	DWORD PTR _sPk$[ebp+8], edx
mov	BYTE PTR _sPk$[ebp+54], 5
mov	eax, DWORD PTR _pTab$[ebp]
mov	DWORD PTR _sPk$[ebp+12], eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	dx, WORD PTR [ecx+42]
mov	WORD PTR _sPk$[ebp+48], dx
mov	eax, 2
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	ax, WORD PTR [edx+28]
mov	WORD PTR _aiRowEstPk$[ebp+ecx], ax
mov	DWORD PTR $T3[ebp], 2
cmp	DWORD PTR $T3[ebp], 4
jae	SHORT $LN28@whereLoopA
jmp	SHORT $LN29@whereLoopA
call	___report_rangecheckfailure
xor	ecx, ecx
mov	edx, DWORD PTR $T3[ebp]
mov	WORD PTR _aiRowEstPk$[ebp+edx], cx
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pFirst$2[ebp], edx
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+40]
and	ecx, 1
jne	SHORT $LN21@whereLoopA
mov	edx, DWORD PTR _pFirst$2[ebp]
mov	DWORD PTR _sPk$[ebp+20], edx
lea	eax, DWORD PTR _sPk$[ebp]
mov	DWORD PTR _pProbe$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	dx, WORD PTR [ecx+28]
mov	WORD PTR _rSize$[ebp], dx
movzx	eax, WORD PTR _rSize$[ebp]
push	eax
call	_estLog
add	esp, 4
mov	WORD PTR _rLogSize$[ebp], ax
mov	ecx, DWORD PTR _pBuilder$[ebp]
cmp	DWORD PTR [ecx+16], 0
jne	$LN20@whereLoopA
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 1048576				
je	$LN20@whereLoopA
mov	eax, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [eax+76], 0
jne	$LN20@whereLoopA
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+40]
shr	edx, 2
and	edx, 1
jne	$LN20@whereLoopA
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+40]
and	ecx, 1
jne	$LN20@whereLoopA
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
jne	$LN20@whereLoopA
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+40]
shr	edx, 1
and	edx, 1
jne	$LN20@whereLoopA
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 3
and	ecx, 1
jne	$LN20@whereLoopA
mov	edx, DWORD PTR _pWC$[ebp]
imul	eax, DWORD PTR [edx+12], 48
mov	ecx, DWORD PTR _pWC$[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pWCEnd$1[ebp], eax
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pTerm$5[ebp], eax
jmp	SHORT $LN19@whereLoopA
mov	ecx, DWORD PTR _pTerm$5[ebp]
add	ecx, 48					
mov	DWORD PTR _pTerm$5[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN20@whereLoopA
mov	edx, DWORD PTR _pTerm$5[ebp]
cmp	edx, DWORD PTR _pWCEnd$1[ebp]
jae	$LN20@whereLoopA
mov	eax, DWORD PTR _pTerm$5[ebp]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [eax+32]
and	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [eax+36]
and	eax, DWORD PTR [ecx+12]
mov	DWORD PTR tv439[ebp], edx
mov	DWORD PTR tv439[ebp+4], eax
mov	ecx, DWORD PTR tv439[ebp]
or	ecx, DWORD PTR tv439[ebp+4]
je	SHORT $LN16@whereLoopA
jmp	SHORT $LN18@whereLoopA
push	0
push	0
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
mov	eax, DWORD PTR _pTerm$5[ebp]
push	eax
call	_termCanDriveIndex
add	esp, 16					
test	eax, eax
je	$LN15@whereLoopA
mov	ecx, 1
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+24], cx
xor	eax, eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+26], ax
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+28], 0
mov	eax, 1
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+40], ax
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	ecx, DWORD PTR _pTerm$5[ebp]
mov	DWORD PTR [eax+edx], ecx
movsx	edx, WORD PTR _rLogSize$[ebp]
movsx	eax, WORD PTR _rSize$[ebp]
lea	ecx, DWORD PTR [edx+eax+28]
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, 43					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+22], ax
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, WORD PTR [edx+22]
push	eax
movzx	ecx, WORD PTR _rLogSize$[ebp]
push	ecx
call	_sqlite3LogEstAdd
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+20], ax
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+36], 16384		
mov	ecx, DWORD PTR _pTerm$5[ebp]
mov	edx, DWORD PTR _mExtra$[ebp]
or	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _mExtra$[ebp+4]
or	eax, DWORD PTR [ecx+36]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx], edx
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _pBuilder$[ebp]
push	eax
call	_whereLoopInsert
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN18@whereLoopA
jmp	SHORT $LN14@whereLoopA
mov	ecx, DWORD PTR _pProbe$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pProbe$[ebp], edx
mov	eax, DWORD PTR _iSortIdx$[ebp]
add	eax, 1
mov	DWORD PTR _iSortIdx$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN12@whereLoopA
cmp	DWORD PTR _pProbe$[ebp], 0
je	$LN12@whereLoopA
mov	ecx, DWORD PTR _pProbe$[ebp]
cmp	DWORD PTR [ecx+36], 0
je	SHORT $LN11@whereLoopA
mov	edx, DWORD PTR _pProbe$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, BYTE PTR [edx+16]
push	eax
call	_whereUsablePartialIndex
add	esp, 12					
test	eax, eax
jne	SHORT $LN11@whereLoopA
jmp	SHORT $LN13@whereLoopA
mov	ecx, 2
imul	edx, ecx, 0
mov	eax, DWORD PTR _pProbe$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	dx, WORD PTR [edx+ecx]
mov	WORD PTR _rSize$[ebp], dx
xor	eax, eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+24], ax
xor	edx, edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+26], dx
xor	ecx, ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pNew$[ebp]
mov	BYTE PTR [eax+17], 0
xor	ecx, ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _mExtra$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _mExtra$[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR _rSize$[ebp]
mov	WORD PTR [eax+22], cx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pProbe$[ebp]
mov	DWORD PTR [edx+28], eax
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+48]
push	edx
mov	eax, DWORD PTR _pProbe$[ebp]
push	eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
push	ecx
call	_indexMightHelpWithOrderBy
add	esp, 12					
mov	DWORD PTR _b$[ebp], eax
mov	edx, DWORD PTR _pProbe$[ebp]
cmp	DWORD PTR [edx+44], 0
jg	SHORT $LN10@whereLoopA
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+36], 256			
cmp	DWORD PTR _b$[ebp], 0
je	SHORT $LN30@whereLoopA
mov	ecx, DWORD PTR _iSortIdx$[ebp]
mov	DWORD PTR tv269[ebp], ecx
jmp	SHORT $LN31@whereLoopA
mov	DWORD PTR tv269[ebp], 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	al, BYTE PTR tv269[ebp]
mov	BYTE PTR [edx+17], al
movsx	ecx, WORD PTR _rSize$[ebp]
add	ecx, 16					
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+20], cx
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
call	_whereLoopOutputAdjust
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _pBuilder$[ebp]
push	eax
call	_whereLoopInsert
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dx, WORD PTR _rSize$[ebp]
mov	WORD PTR [ecx+22], dx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@whereLoopA
jmp	$LN12@whereLoopA
jmp	$LN8@whereLoopA
mov	eax, DWORD PTR _pProbe$[ebp]
mov	ecx, DWORD PTR [eax+56]
shr	ecx, 5
and	ecx, 1
je	SHORT $LN7@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+36], 576			
xorpd	xmm0, xmm0
movlpd	QWORD PTR _m$4[ebp], xmm0
jmp	SHORT $LN6@whereLoopA
mov	eax, DWORD PTR _pProbe$[ebp]
push	eax
call	_columnsInIndex
add	esp, 4
not	eax
not	edx
mov	ecx, DWORD PTR _pSrc$[ebp]
and	eax, DWORD PTR [ecx+64]
and	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _m$4[ebp], eax
mov	DWORD PTR _m$4[ebp+4], edx
mov	edx, DWORD PTR _m$4[ebp]
or	edx, DWORD PTR _m$4[ebp+4]
jne	SHORT $LN32@whereLoopA
mov	DWORD PTR tv294[ebp], 576		
jmp	SHORT $LN33@whereLoopA
mov	DWORD PTR tv294[ebp], 512		
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR tv294[ebp]
mov	DWORD PTR [eax+36], ecx
cmp	DWORD PTR _b$[ebp], 0
jne	SHORT $LN4@whereLoopA
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
jne	SHORT $LN4@whereLoopA
mov	ecx, DWORD PTR _m$4[ebp]
or	ecx, DWORD PTR _m$4[ebp+4]
jne	$LN8@whereLoopA
mov	edx, DWORD PTR _pProbe$[ebp]
mov	eax, DWORD PTR [edx+56]
shr	eax, 2
and	eax, 1
jne	$LN8@whereLoopA
mov	ecx, DWORD PTR _pProbe$[ebp]
movsx	edx, WORD PTR [ecx+48]
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+42]
cmp	edx, ecx
jge	$LN8@whereLoopA
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 4
jne	$LN8@whereLoopA
cmp	DWORD PTR _sqlite3Config+16, 0
je	$LN8@whereLoopA
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
movzx	ecx, WORD PTR [eax+60]
and	ecx, 64					
jne	$LN8@whereLoopA
cmp	DWORD PTR _b$[ebp], 0
je	SHORT $LN34@whereLoopA
mov	edx, DWORD PTR _iSortIdx$[ebp]
mov	DWORD PTR tv323[ebp], edx
jmp	SHORT $LN35@whereLoopA
mov	DWORD PTR tv323[ebp], 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	cl, BYTE PTR tv323[ebp]
mov	BYTE PTR [eax+17], cl
movsx	ecx, WORD PTR _rSize$[ebp]
mov	edx, DWORD PTR _pProbe$[ebp]
movsx	eax, WORD PTR [edx+48]
imul	eax, eax, 15
mov	edx, DWORD PTR _pTab$[ebp]
movsx	esi, WORD PTR [edx+42]
cdq
idiv	esi
lea	eax, DWORD PTR [ecx+eax+1]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+20], ax
mov	edx, DWORD PTR _m$4[ebp]
or	edx, DWORD PTR _m$4[ebp+4]
je	SHORT $LN3@whereLoopA
movsx	eax, WORD PTR _rSize$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _pNew$[ebp]
movzx	edx, WORD PTR [ecx+20]
push	edx
call	_sqlite3LogEstAdd
add	esp, 8
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+20], ax
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _pWC$[ebp]
push	eax
call	_whereLoopOutputAdjust
add	esp, 8
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
push	edx
call	_whereLoopInsert
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR _rSize$[ebp]
mov	WORD PTR [eax+22], cx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@whereLoopA
jmp	SHORT $LN12@whereLoopA
push	0
mov	edx, DWORD PTR _pProbe$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
push	ecx
call	_whereLoopAddBtreeIndex
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [edx+76], 0
je	SHORT $LN1@whereLoopA
jmp	SHORT $LN12@whereLoopA
jmp	$LN13@whereLoopA
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereUsablePartialIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], ecx
jmp	SHORT $LN4@whereUsabl
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pTerm$[ebp]
add	eax, 48					
mov	DWORD PTR _pTerm$[ebp], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+12]
jge	SHORT $LN2@whereUsabl
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprImpliesExpr
add	esp, 12					
test	eax, eax
je	SHORT $LN1@whereUsabl
mov	eax, 1
jmp	SHORT $LN5@whereUsabl
jmp	SHORT $LN3@whereUsabl
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_columnsInIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
xorpd	xmm0, xmm0
movlpd	QWORD PTR _m$[ebp], xmm0
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
sub	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
jmp	SHORT $LN5@columnsInI
mov	edx, DWORD PTR _j$[ebp]
sub	edx, 1
mov	DWORD PTR _j$[ebp], edx
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN3@columnsInI
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _j$[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	DWORD PTR _x$1[ebp], eax
cmp	DWORD PTR _x$1[ebp], 0
jl	SHORT $LN2@columnsInI
cmp	DWORD PTR _x$1[ebp], 63			
jge	SHORT $LN2@columnsInI
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _x$1[ebp]
call	__allshl
or	eax, DWORD PTR _m$[ebp]
or	edx, DWORD PTR _m$[ebp+4]
mov	DWORD PTR _m$[ebp], eax
mov	DWORD PTR _m$[ebp+4], edx
jmp	SHORT $LN4@columnsInI
mov	eax, DWORD PTR _m$[ebp]
mov	edx, DWORD PTR _m$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_indexMightHelpWithOrderBy PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+56]
shr	ecx, 2
and	ecx, 1
je	SHORT $LN11@indexMight
xor	eax, eax
jmp	$LN12@indexMight
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pOB$[ebp], ecx
cmp	DWORD PTR _pOB$[ebp], 0
jne	SHORT $LN10@indexMight
xor	eax, eax
jmp	$LN12@indexMight
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN9@indexMight
mov	edx, DWORD PTR _ii$[ebp]
add	edx, 1
mov	DWORD PTR _ii$[ebp], edx
mov	eax, DWORD PTR _pOB$[ebp]
mov	ecx, DWORD PTR _ii$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN7@indexMight
imul	edx, DWORD PTR _ii$[ebp], 24
mov	eax, DWORD PTR _pOB$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pExpr$1[ebp], eax
mov	eax, DWORD PTR _pExpr$1[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
je	SHORT $LN6@indexMight
xor	eax, eax
jmp	SHORT $LN12@indexMight
mov	edx, DWORD PTR _pExpr$1[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR _iCursor$[ebp]
jne	SHORT $LN5@indexMight
mov	DWORD PTR _jj$[ebp], 0
jmp	SHORT $LN4@indexMight
mov	ecx, DWORD PTR _jj$[ebp]
add	ecx, 1
mov	DWORD PTR _jj$[ebp], ecx
mov	edx, DWORD PTR _pIndex$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _jj$[ebp], eax
jge	SHORT $LN5@indexMight
mov	ecx, DWORD PTR _pExpr$1[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _jj$[ebp]
movsx	ecx, WORD PTR [ecx+eax*2]
cmp	edx, ecx
jne	SHORT $LN1@indexMight
mov	eax, 1
jmp	SHORT $LN12@indexMight
jmp	SHORT $LN3@indexMight
jmp	$LN8@indexMight
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopAddBtreeIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 236				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _pTop$[ebp], 0
mov	DWORD PTR _pBtm$[ebp], 0
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pNew$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN42@whereLoopA
mov	eax, 7
jmp	$LN43@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 32					
je	SHORT $LN41@whereLoopA
mov	DWORD PTR _opMask$[ebp], 24		
jmp	SHORT $LN40@whereLoopA
mov	eax, DWORD PTR _pProbe$[ebp]
cmp	DWORD PTR [eax+44], 0
jle	SHORT $LN38@whereLoopA
mov	ecx, DWORD PTR _pSrc$[ebp]
movzx	edx, BYTE PTR [ecx+36]
and	edx, 8
je	SHORT $LN39@whereLoopA
mov	DWORD PTR _opMask$[ebp], 63		
jmp	SHORT $LN40@whereLoopA
mov	DWORD PTR _opMask$[ebp], 191		
mov	eax, DWORD PTR _pProbe$[ebp]
mov	ecx, DWORD PTR [eax+56]
shr	ecx, 2
and	ecx, 1
je	SHORT $LN36@whereLoopA
mov	edx, DWORD PTR _opMask$[ebp]
and	edx, -61				
mov	DWORD PTR _opMask$[ebp], edx
mov	eax, DWORD PTR _pNew$[ebp]
movzx	ecx, WORD PTR [eax+24]
mov	edx, DWORD PTR _pProbe$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	ecx, eax
jge	SHORT $LN35@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
movzx	edx, WORD PTR [ecx+24]
mov	eax, DWORD PTR _pProbe$[ebp]
mov	ecx, DWORD PTR [eax+4]
movsx	edx, WORD PTR [ecx+edx*2]
mov	DWORD PTR _iCol$[ebp], edx
jmp	SHORT $LN34@whereLoopA
mov	DWORD PTR _iCol$[ebp], -1
mov	eax, DWORD PTR _pProbe$[ebp]
push	eax
mov	ecx, DWORD PTR _opMask$[ebp]
push	ecx
mov	edx, DWORD PTR _iCol$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
lea	ecx, DWORD PTR _scan$[ebp]
push	ecx
call	_whereScanInit
add	esp, 24					
mov	DWORD PTR _pTerm$[ebp], eax
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR [edx+24]
mov	WORD PTR _saved_nEq$[ebp], ax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dx, WORD PTR [ecx+26]
mov	WORD PTR _saved_nSkip$[ebp], dx
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR [eax+40]
mov	WORD PTR _saved_nLTerm$[ebp], cx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+36]
mov	DWORD PTR _saved_wsFlags$[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _saved_prereq$[ebp], edx
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _saved_prereq$[ebp+4], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dx, WORD PTR [ecx+22]
mov	WORD PTR _saved_nOut$[ebp], dx
xor	eax, eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+18], ax
mov	edx, 2
imul	eax, edx, 0
mov	ecx, DWORD PTR _pProbe$[ebp]
mov	edx, DWORD PTR [ecx+8]
movzx	eax, WORD PTR [edx+eax]
push	eax
call	_estLog
add	esp, 4
mov	WORD PTR _rLogSize$[ebp], ax
cmp	DWORD PTR _pTerm$[ebp], 0
jne	$LN33@whereLoopA
movzx	ecx, WORD PTR _saved_nEq$[ebp]
movzx	edx, WORD PTR _saved_nSkip$[ebp]
cmp	ecx, edx
jne	$LN33@whereLoopA
movzx	eax, WORD PTR _saved_nEq$[ebp]
add	eax, 1
mov	ecx, DWORD PTR _pProbe$[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	eax, edx
jge	$LN33@whereLoopA
movzx	eax, WORD PTR _saved_nEq$[ebp]
mov	ecx, DWORD PTR _pProbe$[ebp]
mov	edx, DWORD PTR [ecx+8]
movsx	eax, WORD PTR [edx+eax*2+2]
cmp	eax, 42					
jl	$LN33@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
movzx	edx, WORD PTR [ecx+40]
add	edx, 1
push	edx
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_whereLoopResize
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN33@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR [edx+24]
add	ax, 1
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR [edx+26]
add	ax, 1
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+26], ax
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, WORD PTR [edx+40]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	DWORD PTR [edx+eax*4], 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR [eax+40]
add	cx, 1
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+36]
or	ecx, 32768				
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+36], ecx
movzx	eax, WORD PTR _saved_nEq$[ebp]
mov	ecx, DWORD PTR _pProbe$[ebp]
mov	edx, DWORD PTR [ecx+8]
movsx	eax, WORD PTR [edx+eax*2]
movzx	ecx, WORD PTR _saved_nEq$[ebp]
mov	edx, DWORD PTR _pProbe$[ebp]
mov	edx, DWORD PTR [edx+8]
movsx	ecx, WORD PTR [edx+ecx*2+2]
sub	eax, ecx
mov	WORD PTR _nIter$5[ebp], ax
movsx	edx, WORD PTR _nIter$5[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
movsx	ecx, WORD PTR [eax+22]
sub	ecx, edx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+22], cx
movsx	eax, WORD PTR _nIter$5[ebp]
movsx	ecx, WORD PTR _nInMul$[ebp]
add	eax, ecx
push	eax
mov	edx, DWORD PTR _pProbe$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
push	ecx
call	_whereLoopAddBtreeIndex
add	esp, 16					
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR _saved_nOut$[ebp]
mov	WORD PTR [edx+22], ax
jmp	SHORT $LN32@whereLoopA
lea	ecx, DWORD PTR _scan$[ebp]
push	ecx
call	_whereScanNext
add	esp, 4
mov	DWORD PTR _pTerm$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN30@whereLoopA
cmp	DWORD PTR _pTerm$[ebp], 0
je	$LN30@whereLoopA
mov	edx, DWORD PTR _pTerm$[ebp]
mov	ax, WORD PTR [edx+18]
mov	WORD PTR _eOp$7[ebp], ax
mov	DWORD PTR _nIn$6[ebp], 0
movzx	ecx, WORD PTR _eOp$7[ebp]
cmp	ecx, 128				
je	SHORT $LN28@whereLoopA
mov	edx, DWORD PTR _pTerm$[ebp]
movzx	eax, BYTE PTR [edx+20]
and	eax, 0
je	SHORT $LN29@whereLoopA
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN27@whereLoopA
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+16]
imul	eax, DWORD PTR _iCol$[ebp], 24
mov	ecx, DWORD PTR [edx+4]
movzx	edx, BYTE PTR [ecx+eax+20]
test	edx, edx
je	SHORT $LN29@whereLoopA
jmp	SHORT $LN31@whereLoopA
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [eax+32]
and	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [eax+36]
and	eax, DWORD PTR [ecx+12]
mov	DWORD PTR tv612[ebp], edx
mov	DWORD PTR tv612[ebp+4], eax
mov	ecx, DWORD PTR tv612[ebp]
or	ecx, DWORD PTR tv612[ebp+4]
je	SHORT $LN26@whereLoopA
jmp	$LN31@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _saved_wsFlags$[ebp]
mov	DWORD PTR [edx+36], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dx, WORD PTR _saved_nEq$[ebp]
mov	WORD PTR [ecx+24], dx
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR _saved_nLTerm$[ebp]
mov	WORD PTR [eax+40], cx
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, WORD PTR [edx+40]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_whereLoopResize
add	esp, 12					
test	eax, eax
je	SHORT $LN25@whereLoopA
jmp	$LN30@whereLoopA
mov	eax, DWORD PTR _pNew$[ebp]
movzx	ecx, WORD PTR [eax+40]
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	edx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [eax+ecx*4], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR [eax+40]
add	cx, 1
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR _saved_prereq$[ebp]
or	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _saved_prereq$[ebp+4]
or	edx, DWORD PTR [eax+36]
mov	eax, DWORD PTR _pNew$[ebp]
mov	esi, DWORD PTR [eax+8]
not	esi
mov	eax, DWORD PTR [eax+12]
not	eax
and	ecx, esi
and	edx, eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
movzx	ecx, WORD PTR _eOp$7[ebp]
and	ecx, 1
je	SHORT $LN24@whereLoopA
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pExpr$4[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+36]
or	edx, 4
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+36], edx
mov	ecx, DWORD PTR _pExpr$4[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 2048				
je	SHORT $LN23@whereLoopA
mov	DWORD PTR _nIn$6[ebp], 46		
jmp	SHORT $LN22@whereLoopA
mov	eax, DWORD PTR _pExpr$4[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN22@whereLoopA
mov	ecx, DWORD PTR _pExpr$4[ebp]
mov	edx, DWORD PTR [ecx+20]
cmp	DWORD PTR [edx], 0
je	SHORT $LN22@whereLoopA
mov	eax, DWORD PTR _pExpr$4[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	eax, DWORD PTR [ecx]
cdq
push	edx
push	eax
call	_sqlite3LogEst
add	esp, 8
movsx	edx, ax
mov	DWORD PTR _nIn$6[ebp], edx
jmp	$LN20@whereLoopA
movzx	eax, WORD PTR _eOp$7[ebp]
and	eax, 2
je	SHORT $LN19@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+36]
or	edx, 1
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+36], edx
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN17@whereLoopA
movsx	ecx, WORD PTR _nInMul$[ebp]
test	ecx, ecx
jne	SHORT $LN18@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, WORD PTR [edx+24]
mov	ecx, DWORD PTR _pProbe$[ebp]
movzx	edx, WORD PTR [ecx+50]
sub	edx, 1
cmp	eax, edx
jne	SHORT $LN18@whereLoopA
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN16@whereLoopA
mov	eax, DWORD PTR _pProbe$[ebp]
movzx	ecx, BYTE PTR [eax+54]
test	ecx, ecx
jne	SHORT $LN16@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+36]
or	eax, 65536				
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+36], eax
jmp	SHORT $LN18@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+36]
or	eax, 4096				
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+36], eax
jmp	$LN20@whereLoopA
movzx	edx, WORD PTR _eOp$7[ebp]
and	edx, 128				
je	SHORT $LN13@whereLoopA
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+36]
or	ecx, 8
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+36], ecx
jmp	$LN20@whereLoopA
movzx	eax, WORD PTR _eOp$7[ebp]
and	eax, 36					
je	SHORT $LN11@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+36]
or	edx, 34					
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+36], edx
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR _pBtm$[ebp], ecx
mov	DWORD PTR _pTop$[ebp], 0
jmp	SHORT $LN20@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+36]
or	eax, 18					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR _pTop$[ebp], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 32					
je	SHORT $LN45@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, WORD PTR [edx+40]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR [edx+eax*4-8]
mov	DWORD PTR tv338[ebp], eax
jmp	SHORT $LN46@whereLoopA
mov	DWORD PTR tv338[ebp], 0
mov	ecx, DWORD PTR tv338[ebp]
mov	DWORD PTR _pBtm$[ebp], ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 2
je	SHORT $LN9@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _pTop$[ebp]
push	edx
mov	eax, DWORD PTR _pBtm$[ebp]
push	eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_whereRangeScanEst
add	esp, 20					
jmp	$LN8@whereLoopA
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR [eax+24]
add	cx, 1
mov	WORD PTR tv349[ebp], cx
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR tv349[ebp]
mov	WORD PTR [edx+24], ax
movzx	ecx, WORD PTR tv349[ebp]
mov	DWORD PTR _nEq$1[ebp], ecx
mov	edx, DWORD PTR _pTerm$[ebp]
movsx	eax, WORD PTR [edx+16]
test	eax, eax
jg	SHORT $LN7@whereLoopA
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN7@whereLoopA
mov	ecx, DWORD PTR _pTerm$[ebp]
movsx	edx, WORD PTR [ecx+16]
mov	eax, DWORD PTR _pNew$[ebp]
movsx	ecx, WORD PTR [eax+22]
add	ecx, edx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+22], cx
mov	eax, DWORD PTR _pNew$[ebp]
movsx	ecx, WORD PTR [eax+22]
sub	ecx, DWORD PTR _nIn$6[ebp]
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+22], cx
jmp	SHORT $LN8@whereLoopA
mov	eax, DWORD PTR _pProbe$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _nEq$1[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	ecx, DWORD PTR _pProbe$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	ecx, DWORD PTR _nEq$1[ebp]
movsx	edx, WORD PTR [edx+ecx*2-2]
sub	eax, edx
mov	ecx, DWORD PTR _pNew$[ebp]
movsx	edx, WORD PTR [ecx+22]
add	edx, eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+22], dx
movzx	ecx, WORD PTR _eOp$7[ebp]
and	ecx, 128				
je	SHORT $LN8@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
movsx	eax, WORD PTR [edx+22]
add	eax, 10					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+22], ax
mov	edx, DWORD PTR _pNew$[ebp]
movsx	ecx, WORD PTR [edx+22]
mov	edx, DWORD PTR _pProbe$[ebp]
movsx	eax, WORD PTR [edx+48]
imul	eax, eax, 15
mov	edx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [edx+16]
movsx	esi, WORD PTR [edx+42]
cdq
idiv	esi
lea	eax, DWORD PTR [ecx+eax+1]
mov	WORD PTR _rCostIdx$2[ebp], ax
movzx	ecx, WORD PTR _rCostIdx$2[ebp]
push	ecx
movzx	edx, WORD PTR _rLogSize$[ebp]
push	edx
call	_sqlite3LogEstAdd
add	esp, 8
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+20], ax
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 320				
jne	SHORT $LN4@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
movsx	edx, WORD PTR [ecx+22]
add	edx, 16					
push	edx
mov	eax, DWORD PTR _pNew$[ebp]
movzx	ecx, WORD PTR [eax+20]
push	ecx
call	_sqlite3LogEstAdd
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+20], ax
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR [eax+22]
mov	WORD PTR _nOutUnadjusted$3[ebp], cx
movsx	edx, WORD PTR _nInMul$[ebp]
add	edx, DWORD PTR _nIn$6[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
movsx	ecx, WORD PTR [eax+20]
add	ecx, edx
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+20], cx
movsx	eax, WORD PTR _nInMul$[ebp]
add	eax, DWORD PTR _nIn$6[ebp]
mov	ecx, DWORD PTR _pNew$[ebp]
movsx	edx, WORD PTR [ecx+22]
add	edx, eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+22], dx
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_whereLoopOutputAdjust
add	esp, 8
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
push	edx
call	_whereLoopInsert
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 2
je	SHORT $LN3@whereLoopA
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR _saved_nOut$[ebp]
mov	WORD PTR [edx+22], ax
jmp	SHORT $LN2@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dx, WORD PTR _nOutUnadjusted$3[ebp]
mov	WORD PTR [ecx+22], dx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 16					
jne	SHORT $LN1@whereLoopA
mov	edx, DWORD PTR _pProbe$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN47@whereLoopA
mov	DWORD PTR tv453[ebp], 1
jmp	SHORT $LN48@whereLoopA
mov	DWORD PTR tv453[ebp], 0
mov	eax, DWORD PTR _pNew$[ebp]
movzx	ecx, WORD PTR [eax+24]
mov	edx, DWORD PTR _pProbe$[ebp]
movzx	eax, WORD PTR [edx+50]
add	eax, DWORD PTR tv453[ebp]
cmp	ecx, eax
jge	SHORT $LN1@whereLoopA
movsx	ecx, WORD PTR _nInMul$[ebp]
add	ecx, DWORD PTR _nIn$6[ebp]
push	ecx
mov	edx, DWORD PTR _pProbe$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
push	ecx
call	_whereLoopAddBtreeIndex
add	esp, 16					
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR _saved_nOut$[ebp]
mov	WORD PTR [edx+22], ax
jmp	$LN31@whereLoopA
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _saved_prereq$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _saved_prereq$[ebp+4]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dx, WORD PTR _saved_nEq$[ebp]
mov	WORD PTR [ecx+24], dx
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR _saved_nSkip$[ebp]
mov	WORD PTR [eax+26], cx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _saved_wsFlags$[ebp]
mov	DWORD PTR [edx+36], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	dx, WORD PTR _saved_nOut$[ebp]
mov	WORD PTR [ecx+22], dx
mov	eax, DWORD PTR _pNew$[ebp]
mov	cx, WORD PTR _saved_nLTerm$[ebp]
mov	WORD PTR [eax+40], cx
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopOutputAdjust PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [eax]
or	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [eax+4]
or	eax, DWORD PTR [ecx+12]
not	edx
not	eax
mov	DWORD PTR _notAllowed$[ebp], edx
mov	DWORD PTR _notAllowed$[ebp+4], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
movzx	edx, WORD PTR [ecx+60]
and	edx, 4096				
je	SHORT $LN14@whereLoopO
jmp	$LN15@whereLoopO
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pTerm$[ebp], eax
jmp	SHORT $LN13@whereLoopO
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTerm$[ebp]
add	edx, 48					
mov	DWORD PTR _pTerm$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jle	$LN15@whereLoopO
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 2
je	SHORT $LN10@whereLoopO
jmp	$LN15@whereLoopO
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [edx+40]
and	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR [edx+44]
and	edx, DWORD PTR [eax+12]
mov	DWORD PTR tv183[ebp], ecx
mov	DWORD PTR tv183[ebp+4], edx
mov	eax, DWORD PTR tv183[ebp]
or	eax, DWORD PTR tv183[ebp+4]
jne	SHORT $LN9@whereLoopO
jmp	SHORT $LN12@whereLoopO
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx+40]
and	edx, DWORD PTR _notAllowed$[ebp]
mov	eax, DWORD PTR [ecx+44]
and	eax, DWORD PTR _notAllowed$[ebp+4]
mov	DWORD PTR tv195[ebp], edx
mov	DWORD PTR tv195[ebp+4], eax
mov	ecx, DWORD PTR tv195[ebp]
or	ecx, DWORD PTR tv195[ebp+4]
je	SHORT $LN8@whereLoopO
jmp	SHORT $LN12@whereLoopO
mov	edx, DWORD PTR _pLoop$[ebp]
movzx	eax, WORD PTR [edx+40]
sub	eax, 1
mov	DWORD PTR _j$[ebp], eax
jmp	SHORT $LN7@whereLoopO
mov	ecx, DWORD PTR _j$[ebp]
sub	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN5@whereLoopO
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pX$[ebp], edx
cmp	DWORD PTR _pX$[ebp], 0
jne	SHORT $LN4@whereLoopO
jmp	SHORT $LN6@whereLoopO
mov	eax, DWORD PTR _pX$[ebp]
cmp	eax, DWORD PTR _pTerm$[ebp]
jne	SHORT $LN3@whereLoopO
jmp	SHORT $LN5@whereLoopO
mov	ecx, DWORD PTR _pX$[ebp]
cmp	DWORD PTR [ecx+4], 0
jl	SHORT $LN2@whereLoopO
mov	edx, DWORD PTR _pX$[ebp]
imul	eax, DWORD PTR [edx+4], 48
mov	ecx, DWORD PTR _pWC$[ebp]
add	eax, DWORD PTR [ecx+20]
cmp	eax, DWORD PTR _pTerm$[ebp]
jne	SHORT $LN2@whereLoopO
jmp	SHORT $LN5@whereLoopO
jmp	SHORT $LN6@whereLoopO
cmp	DWORD PTR _j$[ebp], 0
jge	SHORT $LN1@whereLoopO
mov	edx, DWORD PTR _pTerm$[ebp]
movsx	eax, WORD PTR [edx+16]
test	eax, eax
jg	SHORT $LN17@whereLoopO
mov	ecx, DWORD PTR _pTerm$[ebp]
movsx	edx, WORD PTR [ecx+16]
mov	DWORD PTR tv147[ebp], edx
jmp	SHORT $LN18@whereLoopO
mov	DWORD PTR tv147[ebp], -1
mov	eax, DWORD PTR _pLoop$[ebp]
movsx	ecx, WORD PTR [eax+22]
add	ecx, DWORD PTR tv147[ebp]
mov	edx, DWORD PTR _pLoop$[ebp]
mov	WORD PTR [edx+22], cx
jmp	$LN12@whereLoopO
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopInsert PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pBuilder$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pBuilder$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN12@whereLoopI
mov	eax, DWORD PTR _pTemplate$[ebp]
movzx	ecx, WORD PTR [eax+22]
push	ecx
mov	edx, DWORD PTR _pTemplate$[ebp]
movzx	eax, WORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pTemplate$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR [ecx]
push	eax
mov	ecx, DWORD PTR _pBuilder$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_whereOrInsert
add	esp, 20					
xor	eax, eax
jmp	$LN13@whereLoopI
mov	eax, DWORD PTR _pTemplate$[ebp]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_whereLoopAdjustCost
add	esp, 8
mov	eax, DWORD PTR _pTemplate$[ebp]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 16					
push	ecx
call	_whereLoopFindLesser
add	esp, 8
mov	DWORD PTR _ppPrev$[ebp], eax
cmp	DWORD PTR _ppPrev$[ebp], 0
jne	SHORT $LN11@whereLoopI
xor	eax, eax
jmp	$LN13@whereLoopI
jmp	SHORT $LN10@whereLoopI
mov	edx, DWORD PTR _ppPrev$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN9@whereLoopI
push	72					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
mov	edx, DWORD PTR _ppPrev$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN8@whereLoopI
mov	eax, 7
jmp	$LN13@whereLoopI
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_whereLoopInit
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+48], 0
jmp	SHORT $LN7@whereLoopI
mov	eax, DWORD PTR _p$[ebp]
add	eax, 48					
mov	DWORD PTR _ppTail$3[ebp], eax
mov	ecx, DWORD PTR _ppTail$3[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN7@whereLoopI
mov	edx, DWORD PTR _pTemplate$[ebp]
push	edx
mov	eax, DWORD PTR _ppTail$3[ebp]
push	eax
call	_whereLoopFindLesser
add	esp, 8
mov	DWORD PTR _ppTail$3[ebp], eax
cmp	DWORD PTR _ppTail$3[ebp], 0
jne	SHORT $LN4@whereLoopI
jmp	SHORT $LN7@whereLoopI
mov	ecx, DWORD PTR _ppTail$3[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pToDel$2[ebp], edx
cmp	DWORD PTR _pToDel$2[ebp], 0
jne	SHORT $LN3@whereLoopI
jmp	SHORT $LN7@whereLoopI
mov	eax, DWORD PTR _ppTail$3[ebp]
mov	ecx, DWORD PTR _pToDel$2[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pToDel$2[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_whereLoopDelete
add	esp, 8
jmp	SHORT $LN6@whereLoopI
mov	edx, DWORD PTR _pTemplate$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_whereLoopXfer
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 1024				
jne	SHORT $LN2@whereLoopI
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	DWORD PTR _pIndex$1[ebp], edx
cmp	DWORD PTR _pIndex$1[ebp], 0
je	SHORT $LN2@whereLoopI
mov	eax, DWORD PTR _pIndex$1[ebp]
cmp	DWORD PTR [eax+44], 0
jne	SHORT $LN2@whereLoopI
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+28], 0
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopFindLesser PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _ppPrev$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN7@whereLoopF
mov	edx, DWORD PTR _p$[ebp]
add	edx, 48					
mov	DWORD PTR _ppPrev$[ebp], edx
mov	eax, DWORD PTR _ppPrev$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	$LN5@whereLoopF
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+16]
mov	ecx, DWORD PTR _pTemplate$[ebp]
movzx	edx, BYTE PTR [ecx+16]
cmp	eax, edx
jne	SHORT $LN3@whereLoopF
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+17]
mov	edx, DWORD PTR _pTemplate$[ebp]
movzx	eax, BYTE PTR [edx+17]
cmp	ecx, eax
je	SHORT $LN4@whereLoopF
jmp	SHORT $LN6@whereLoopF
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pTemplate$[ebp]
mov	eax, DWORD PTR [ecx]
and	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [ecx+4]
and	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv161[ebp], eax
mov	DWORD PTR tv161[ebp+4], ecx
mov	DWORD PTR tv164[ebp], edx
mov	eax, DWORD PTR tv164[ebp]
mov	ecx, DWORD PTR tv161[ebp]
cmp	ecx, DWORD PTR [eax]
jne	SHORT $LN2@whereLoopF
mov	edx, DWORD PTR tv164[ebp]
mov	eax, DWORD PTR tv161[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jne	SHORT $LN2@whereLoopF
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pTemplate$[ebp]
movsx	ecx, WORD PTR [eax+18]
cmp	edx, ecx
jg	SHORT $LN2@whereLoopF
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+20]
mov	ecx, DWORD PTR _pTemplate$[ebp]
movsx	edx, WORD PTR [ecx+20]
cmp	eax, edx
jg	SHORT $LN2@whereLoopF
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+22]
mov	edx, DWORD PTR _pTemplate$[ebp]
movsx	eax, WORD PTR [edx+22]
cmp	ecx, eax
jg	SHORT $LN2@whereLoopF
xor	eax, eax
jmp	SHORT $LN8@whereLoopF
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pTemplate$[ebp]
mov	eax, DWORD PTR [ecx]
and	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [ecx+4]
and	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR _pTemplate$[ebp]
mov	DWORD PTR tv186[ebp], eax
mov	DWORD PTR tv186[ebp+4], ecx
mov	DWORD PTR tv189[ebp], edx
mov	eax, DWORD PTR tv189[ebp]
mov	ecx, DWORD PTR tv186[ebp]
cmp	ecx, DWORD PTR [eax]
jne	SHORT $LN1@whereLoopF
mov	edx, DWORD PTR tv189[ebp]
mov	eax, DWORD PTR tv186[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jne	SHORT $LN1@whereLoopF
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+20]
mov	eax, DWORD PTR _pTemplate$[ebp]
movsx	ecx, WORD PTR [eax+20]
cmp	edx, ecx
jl	SHORT $LN1@whereLoopF
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+22]
mov	ecx, DWORD PTR _pTemplate$[ebp]
movsx	edx, WORD PTR [ecx+22]
cmp	eax, edx
jl	SHORT $LN1@whereLoopF
jmp	SHORT $LN5@whereLoopF
jmp	$LN6@whereLoopF
mov	eax, DWORD PTR _ppPrev$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopAdjustCost PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pTemplate$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 512				
jne	SHORT $LN11@whereLoopA
jmp	$LN12@whereLoopA
mov	edx, DWORD PTR _pTemplate$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 32768				
je	SHORT $LN10@whereLoopA
jmp	$LN12@whereLoopA
jmp	SHORT $LN9@whereLoopA
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	$LN12@whereLoopA
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+16]
mov	edx, DWORD PTR _pTemplate$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	ecx, eax
je	SHORT $LN6@whereLoopA
jmp	SHORT $LN8@whereLoopA
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 512				
jne	SHORT $LN5@whereLoopA
jmp	SHORT $LN8@whereLoopA
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 32768				
je	SHORT $LN4@whereLoopA
jmp	SHORT $LN8@whereLoopA
mov	edx, DWORD PTR _pTemplate$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_whereLoopCheaperProperSubset
add	esp, 8
test	eax, eax
je	SHORT $LN3@whereLoopA
mov	ecx, DWORD PTR _pTemplate$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	ax, WORD PTR [edx+20]
mov	WORD PTR [ecx+20], ax
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+22]
sub	edx, 1
mov	eax, DWORD PTR _pTemplate$[ebp]
mov	WORD PTR [eax+22], dx
jmp	SHORT $LN2@whereLoopA
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pTemplate$[ebp]
push	edx
call	_whereLoopCheaperProperSubset
add	esp, 8
test	eax, eax
je	SHORT $LN2@whereLoopA
mov	eax, DWORD PTR _pTemplate$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	dx, WORD PTR [ecx+20]
mov	WORD PTR [eax+20], dx
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+22]
add	ecx, 1
mov	edx, DWORD PTR _pTemplate$[ebp]
mov	WORD PTR [edx+22], cx
jmp	$LN8@whereLoopA
pop	ebp
ret	0
ENDP
_whereLoopCheaperProperSubset PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	esi
mov	eax, DWORD PTR _pX$[ebp]
movzx	ecx, WORD PTR [eax+40]
mov	edx, DWORD PTR _pY$[ebp]
movzx	eax, WORD PTR [edx+40]
cmp	ecx, eax
jl	SHORT $LN12@whereLoopC
xor	eax, eax
jmp	$LN13@whereLoopC
mov	ecx, DWORD PTR _pX$[ebp]
movsx	edx, WORD PTR [ecx+20]
mov	eax, DWORD PTR _pY$[ebp]
movsx	ecx, WORD PTR [eax+20]
cmp	edx, ecx
jl	SHORT $LN11@whereLoopC
mov	edx, DWORD PTR _pX$[ebp]
movsx	eax, WORD PTR [edx+20]
mov	ecx, DWORD PTR _pY$[ebp]
movsx	edx, WORD PTR [ecx+20]
cmp	eax, edx
jle	SHORT $LN10@whereLoopC
xor	eax, eax
jmp	$LN13@whereLoopC
mov	eax, DWORD PTR _pX$[ebp]
movsx	ecx, WORD PTR [eax+22]
mov	edx, DWORD PTR _pY$[ebp]
movsx	eax, WORD PTR [edx+22]
cmp	ecx, eax
jle	SHORT $LN11@whereLoopC
xor	eax, eax
jmp	SHORT $LN13@whereLoopC
mov	ecx, DWORD PTR _pX$[ebp]
movzx	edx, WORD PTR [ecx+40]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN8@whereLoopC
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN6@whereLoopC
mov	ecx, DWORD PTR _pY$[ebp]
movzx	edx, WORD PTR [ecx+40]
sub	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN5@whereLoopC
mov	eax, DWORD PTR _j$[ebp]
sub	eax, 1
mov	DWORD PTR _j$[ebp], eax
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN3@whereLoopC
mov	ecx, DWORD PTR _pY$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	eax, DWORD PTR _j$[ebp]
mov	esi, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [edx+eax*4]
cmp	edx, DWORD PTR [ecx+esi*4]
jne	SHORT $LN2@whereLoopC
jmp	SHORT $LN3@whereLoopC
jmp	SHORT $LN4@whereLoopC
cmp	DWORD PTR _j$[ebp], 0
jge	SHORT $LN1@whereLoopC
xor	eax, eax
jmp	SHORT $LN13@whereLoopC
jmp	SHORT $LN7@whereLoopC
mov	eax, 1
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereInfoFree PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pWInfo$[ebp], 0
je	SHORT $LN4@whereInfoF
mov	eax, DWORD PTR _pWInfo$[ebp]
add	eax, 328				
push	eax
call	_whereClauseClear
add	esp, 4
mov	ecx, DWORD PTR _pWInfo$[ebp]
cmp	DWORD PTR [ecx+16], 0
je	SHORT $LN1@whereInfoF
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _p$1[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR [ecx+16], eax
mov	ecx, DWORD PTR _p$1[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_whereLoopDelete
add	esp, 8
jmp	SHORT $LN2@whereInfoF
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereLoopDelete PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_whereLoopClear
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_whereLoopXfer PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pTo$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_whereLoopClearUnion
add	esp, 8
mov	edx, DWORD PTR _pFrom$[ebp]
movzx	eax, WORD PTR [edx+40]
push	eax
mov	ecx, DWORD PTR _pTo$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_whereLoopResize
add	esp, 12					
test	eax, eax
je	SHORT $LN4@whereLoopX
push	12					
push	0
mov	eax, DWORD PTR _pTo$[ebp]
add	eax, 24					
push	eax
call	_memset
add	esp, 12					
mov	eax, 7
jmp	SHORT $LN5@whereLoopX
push	42					
mov	ecx, DWORD PTR _pFrom$[ebp]
push	ecx
mov	edx, DWORD PTR _pTo$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pTo$[ebp]
movzx	ecx, WORD PTR [eax+40]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _pTo$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 1024				
je	SHORT $LN3@whereLoopX
mov	edx, DWORD PTR _pFrom$[ebp]
mov	BYTE PTR [edx+28], 0
jmp	SHORT $LN2@whereLoopX
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 16384				
je	SHORT $LN2@whereLoopX
mov	edx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [edx+28], 0
xor	eax, eax
pop	ebp
ret	0
ENDP
_whereLoopClear PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
add	eax, 52					
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+44], eax
je	SHORT $LN1@whereLoopC
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_whereLoopClearUnion
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_whereLoopInit
add	esp, 4
pop	ebp
ret	0
ENDP
_whereLoopClearUnion PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 17408				
je	$LN5@whereLoopC
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 1024				
je	SHORT $LN3@whereLoopC
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+28]
test	edx, edx
je	SHORT $LN3@whereLoopC
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+28], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+32], 0
jmp	SHORT $LN5@whereLoopC
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 16384				
je	SHORT $LN5@whereLoopC
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+28], 0
je	SHORT $LN5@whereLoopC
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	ecx, DWORD PTR [eax+40]
push	ecx
call	_sqlite3KeyInfoUnref
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+28], 0
pop	ebp
ret	0
ENDP
_whereLoopInit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
add	eax, 52					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+44], eax
xor	edx, edx
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+40], dx
mov	ecx, 4
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+42], cx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+36], 0
pop	ebp
ret	0
ENDP
_codeOneLoopStart PROC
push	ebp
mov	ebp, esp
sub	esp, 452				
push	esi
push	edi
mov	DWORD PTR _iRowidReg$[ebp], 0
mov	DWORD PTR _iReleaseReg$[ebp], 0
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 328				
mov	DWORD PTR _pWC$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
imul	ecx, DWORD PTR _iLevel$[ebp], 72
mov	edx, DWORD PTR _pWInfo$[ebp]
lea	eax, DWORD PTR [edx+ecx+736]
mov	DWORD PTR _pLevel$[ebp], eax
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pLoop$[ebp], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pLevel$[ebp]
movzx	eax, BYTE PTR [edx+36]
imul	edx, eax, 80
lea	eax, DWORD PTR [ecx+edx+8]
mov	DWORD PTR _pTabItem$[ebp], eax
mov	ecx, DWORD PTR _pTabItem$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _iCur$[ebp], edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 68					
push	ecx
call	_getMask
add	esp, 8
not	eax
not	edx
and	eax, DWORD PTR _notReady$[ebp]
and	edx, DWORD PTR _notReady$[ebp+4]
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+64], eax
mov	DWORD PTR [ecx+68], edx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	edx, DWORD PTR [edx+28]
mov	ecx, DWORD PTR _iLevel$[ebp]
call	__aullshr
and	eax, 1
and	edx, 0
mov	DWORD PTR _bRev$[ebp], eax
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 64					
je	SHORT $LN140@codeOneLoo
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 32					
jne	SHORT $LN140@codeOneLoo
mov	DWORD PTR tv129[ebp], 1
jmp	SHORT $LN141@codeOneLoo
mov	DWORD PTR tv129[ebp], 0
mov	ecx, DWORD PTR tv129[ebp]
mov	DWORD PTR _omitTable$[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR tv132[ebp], eax
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR tv132[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR tv132[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR tv132[ebp]
mov	DWORD PTR _addrBrk$[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR tv135[ebp], eax
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR tv135[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR tv135[ebp]
mov	DWORD PTR _addrCont$[ebp], edx
mov	eax, DWORD PTR _pLevel$[ebp]
movzx	ecx, BYTE PTR [eax+36]
test	ecx, ecx
jle	SHORT $LN137@codeOneLoo
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTabItem$[ebp]
movzx	edx, BYTE PTR [ecx+eax+36]
and	edx, 8
je	SHORT $LN137@codeOneLoo
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv149[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv149[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR tv149[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pTabItem$[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 2
and	ecx, 1
je	SHORT $LN136@codeOneLoo
mov	edx, DWORD PTR _pTabItem$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR _regYield$8[ebp], eax
mov	ecx, DWORD PTR _pTabItem$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
push	0
mov	eax, DWORD PTR _regYield$8[ebp]
push	eax
push	20					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _addrBrk$[ebp]
push	edx
mov	eax, DWORD PTR _regYield$8[ebp]
push	eax
push	22					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [edx+44], eax
mov	eax, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [eax+37], 16			
jmp	$LN135@codeOneLoo
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 1024				
je	$LN134@codeOneLoo
mov	eax, DWORD PTR _pLoop$[ebp]
movzx	ecx, WORD PTR [eax+40]
mov	DWORD PTR _nConstraint$43[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePush
add	esp, 4
mov	eax, DWORD PTR _nConstraint$43[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _iReg$46[ebp], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _addrNotFound$19[ebp], eax
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN133@codeOneLoo
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR _nConstraint$43[ebp]
jge	$LN131@codeOneLoo
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _iReg$46[ebp]
lea	edx, DWORD PTR [ecx+eax+2]
mov	DWORD PTR _iTarget$20[ebp], edx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pTerm$[ebp], eax
cmp	DWORD PTR _pTerm$[ebp], 0
jne	SHORT $LN130@codeOneLoo
jmp	SHORT $LN132@codeOneLoo
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 1
je	SHORT $LN129@codeOneLoo
mov	eax, DWORD PTR _iTarget$20[ebp]
push	eax
mov	ecx, DWORD PTR _bRev$[ebp]
push	ecx
mov	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _pLevel$[ebp]
push	eax
mov	ecx, DWORD PTR _pTerm$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeEqualityTerm
add	esp, 24					
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _addrNotFound$19[ebp], ecx
jmp	SHORT $LN128@codeOneLoo
mov	edx, DWORD PTR _iTarget$20[ebp]
push	edx
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
jmp	$LN132@codeOneLoo
mov	ecx, DWORD PTR _iReg$46[ebp]
push	ecx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _iReg$46[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _nConstraint$43[ebp]
push	eax
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pLoop$[ebp]
movzx	eax, BYTE PTR [edx+28]
test	eax, eax
je	SHORT $LN142@codeOneLoo
mov	DWORD PTR tv222[ebp], -11		
jmp	SHORT $LN143@codeOneLoo
mov	DWORD PTR tv222[ebp], -2		
mov	ecx, DWORD PTR tv222[ebp]
push	ecx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _iReg$46[ebp]
push	ecx
mov	edx, DWORD PTR _addrNotFound$19[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
push	14					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	edx, DWORD PTR _pLoop$[ebp]
mov	BYTE PTR [edx+28], 0
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN127@codeOneLoo
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR _nConstraint$43[ebp]
jge	SHORT $LN125@codeOneLoo
cmp	DWORD PTR _j$[ebp], 16			
jge	SHORT $LN125@codeOneLoo
mov	edx, DWORD PTR _pLoop$[ebp]
movzx	eax, WORD PTR [edx+30]
mov	ecx, DWORD PTR _j$[ebp]
sar	eax, cl
and	eax, 1
je	SHORT $LN124@codeOneLoo
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
push	edx
call	_disableTerm
add	esp, 8
jmp	SHORT $LN126@codeOneLoo
mov	eax, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [eax+37], 151			
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR _iCur$[ebp]
mov	DWORD PTR [ecx+40], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _nConstraint$43[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _iReg$46[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempRange
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePop
add	esp, 4
jmp	$LN135@codeOneLoo
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 256				
je	$LN122@codeOneLoo
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 5
je	$LN122@codeOneLoo
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR [edx+ecx]
mov	DWORD PTR _pTerm$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv265[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv265[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv265[ebp]
mov	DWORD PTR _iReleaseReg$[ebp], ecx
mov	edx, DWORD PTR _iReleaseReg$[ebp]
push	edx
mov	eax, DWORD PTR _bRev$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pLevel$[ebp]
push	ecx
mov	edx, DWORD PTR _pTerm$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_codeEqualityTerm
add	esp, 24					
mov	DWORD PTR _iRowidReg$[ebp], eax
mov	ecx, DWORD PTR _iRowidReg$[ebp]
cmp	ecx, DWORD PTR _iReleaseReg$[ebp]
je	SHORT $LN121@codeOneLoo
mov	edx, DWORD PTR _iReleaseReg$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _addrNxt$[ebp], edx
mov	eax, DWORD PTR _addrNxt$[ebp]
push	eax
mov	ecx, DWORD PTR _iRowidReg$[ebp]
push	ecx
push	38					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _iRowidReg$[ebp]
push	eax
mov	ecx, DWORD PTR _addrNxt$[ebp]
push	ecx
mov	edx, DWORD PTR _iCur$[ebp]
push	edx
push	67					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	1
mov	ecx, DWORD PTR _iRowidReg$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	eax, DWORD PTR _iRowidReg$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _iCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheStore
add	esp, 16					
mov	eax, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [eax+37], 156			
jmp	$LN135@codeOneLoo
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 256				
je	$LN119@codeOneLoo
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 2
je	$LN119@codeOneLoo
mov	DWORD PTR _testOp$39[ebp], 156		
mov	DWORD PTR _memEndValue$27[ebp], 0
mov	DWORD PTR _j$[ebp], 0
mov	DWORD PTR _pEnd$55[ebp], 0
mov	edx, DWORD PTR _pEnd$55[ebp]
mov	DWORD PTR _pStart$50[ebp], edx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 32					
je	SHORT $LN118@codeOneLoo
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pStart$50[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 16					
je	SHORT $LN117@codeOneLoo
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pEnd$55[ebp], eax
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN116@codeOneLoo
mov	edx, DWORD PTR _pStart$50[ebp]
mov	DWORD PTR _pTerm$[ebp], edx
mov	eax, DWORD PTR _pEnd$55[ebp]
mov	DWORD PTR _pStart$50[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR _pEnd$55[ebp], ecx
cmp	DWORD PTR _pStart$50[ebp], 0
je	$LN115@codeOneLoo
mov	BYTE PTR _aMoveOp$34[ebp], 62		
mov	BYTE PTR _aMoveOp$34[ebp+1], 60		
mov	BYTE PTR _aMoveOp$34[ebp+2], 59		
mov	BYTE PTR _aMoveOp$34[ebp+3], 61		
mov	edx, DWORD PTR _pStart$50[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pX$18[ebp], eax
lea	ecx, DWORD PTR _rTemp$7[ebp]
push	ecx
mov	edx, DWORD PTR _pX$18[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$10[ebp], eax
mov	edx, DWORD PTR _r1$10[ebp]
push	edx
mov	eax, DWORD PTR _addrBrk$[ebp]
push	eax
mov	ecx, DWORD PTR _iCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pX$18[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _aMoveOp$34[ebp+eax-80]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	1
mov	eax, DWORD PTR _r1$10[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	edx, DWORD PTR _rTemp$7[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _pStart$50[ebp]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
push	edx
call	_disableTerm
add	esp, 8
jmp	SHORT $LN114@codeOneLoo
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN144@codeOneLoo
mov	DWORD PTR tv376[ebp], 102		
jmp	SHORT $LN145@codeOneLoo
mov	DWORD PTR tv376[ebp], 105		
mov	eax, DWORD PTR _addrBrk$[ebp]
push	eax
mov	ecx, DWORD PTR _iCur$[ebp]
push	ecx
mov	edx, DWORD PTR tv376[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _pEnd$55[ebp], 0
je	$LN113@codeOneLoo
mov	ecx, DWORD PTR _pEnd$55[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pX$25[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv382[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv382[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv382[ebp]
mov	DWORD PTR _memEndValue$27[ebp], ecx
mov	edx, DWORD PTR _memEndValue$27[ebp]
push	edx
mov	eax, DWORD PTR _pX$25[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCode
add	esp, 12					
mov	eax, DWORD PTR _pX$25[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 82					
je	SHORT $LN111@codeOneLoo
mov	edx, DWORD PTR _pX$25[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 80					
jne	SHORT $LN112@codeOneLoo
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN146@codeOneLoo
mov	DWORD PTR tv394[ebp], 81		
jmp	SHORT $LN147@codeOneLoo
mov	DWORD PTR tv394[ebp], 83		
mov	ecx, DWORD PTR tv394[ebp]
mov	DWORD PTR _testOp$39[ebp], ecx
jmp	SHORT $LN110@codeOneLoo
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN148@codeOneLoo
mov	DWORD PTR tv396[ebp], 82		
jmp	SHORT $LN149@codeOneLoo
mov	DWORD PTR tv396[ebp], 80		
mov	edx, DWORD PTR tv396[ebp]
mov	DWORD PTR _testOp$39[ebp], edx
mov	eax, DWORD PTR _pEnd$55[ebp]
push	eax
mov	ecx, DWORD PTR _pLevel$[ebp]
push	ecx
call	_disableTerm
add	esp, 8
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _start$5[ebp], eax
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN150@codeOneLoo
mov	DWORD PTR tv403[ebp], 8
jmp	SHORT $LN151@codeOneLoo
mov	DWORD PTR tv403[ebp], 9
mov	eax, DWORD PTR _pLevel$[ebp]
mov	cl, BYTE PTR tv403[ebp]
mov	BYTE PTR [eax+37], cl
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR _iCur$[ebp]
mov	DWORD PTR [edx+40], eax
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR _start$5[ebp]
mov	DWORD PTR [ecx+44], edx
cmp	DWORD PTR _testOp$39[ebp], 156		
je	$LN109@codeOneLoo
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv410[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv410[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv410[ebp]
mov	DWORD PTR _iRowidReg$[ebp], ecx
mov	edx, DWORD PTR _iRowidReg$[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
push	100					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _iRowidReg$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheStore
add	esp, 16					
mov	edx, DWORD PTR _iRowidReg$[ebp]
push	edx
mov	eax, DWORD PTR _addrBrk$[ebp]
push	eax
mov	ecx, DWORD PTR _memEndValue$27[ebp]
push	ecx
mov	edx, DWORD PTR _testOp$39[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	107					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN135@codeOneLoo
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 512				
je	$LN107@codeOneLoo
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	dx, WORD PTR [ecx+24]
mov	WORD PTR _nEq$69[ebp], dx
mov	DWORD PTR _pRangeStart$62[ebp], 0
mov	DWORD PTR _pRangeEnd$60[ebp], 0
mov	DWORD PTR _nExtraReg$32[ebp], 0
mov	BYTE PTR _cEndAff$67[ebp], 0
mov	BYTE PTR _bSeekPastNull$68[ebp], 0
mov	BYTE PTR _bStopAtNull$66[ebp], 0
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pIdx$59[ebp], ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _iIdxCur$51[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, WORD PTR [ecx+34]
and	edx, 1
je	SHORT $LN106@codeOneLoo
mov	eax, DWORD PTR _pWInfo$[ebp]
movsx	ecx, BYTE PTR [eax+36]
test	ecx, ecx
jle	SHORT $LN106@codeOneLoo
mov	edx, DWORD PTR _pIdx$59[ebp]
movzx	eax, WORD PTR [edx+50]
movzx	ecx, WORD PTR _nEq$69[ebp]
cmp	eax, ecx
jle	SHORT $LN106@codeOneLoo
mov	BYTE PTR _bSeekPastNull$68[ebp], 1
mov	DWORD PTR _nExtraReg$32[ebp], 1
movzx	edx, WORD PTR _nEq$69[ebp]
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 32					
je	SHORT $LN105@codeOneLoo
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pRangeStart$62[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	DWORD PTR _nExtraReg$32[ebp], 1
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 16					
je	SHORT $LN104@codeOneLoo
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pRangeEnd$60[ebp], eax
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	DWORD PTR _nExtraReg$32[ebp], 1
cmp	DWORD PTR _pRangeStart$62[ebp], 0
jne	SHORT $LN104@codeOneLoo
movzx	edx, WORD PTR _nEq$69[ebp]
mov	eax, DWORD PTR _pIdx$59[ebp]
mov	ecx, DWORD PTR [eax+4]
movsx	edx, WORD PTR [ecx+edx*2]
mov	DWORD PTR _j$[ebp], edx
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN104@codeOneLoo
mov	eax, DWORD PTR _pIdx$59[ebp]
mov	ecx, DWORD PTR [eax+12]
imul	edx, DWORD PTR _j$[ebp], 24
mov	eax, DWORD PTR [ecx+4]
movzx	ecx, BYTE PTR [eax+edx+20]
test	ecx, ecx
jne	SHORT $LN104@codeOneLoo
mov	BYTE PTR _bSeekPastNull$68[ebp], 1
lea	edx, DWORD PTR _zStartAff$58[ebp]
push	edx
mov	eax, DWORD PTR _nExtraReg$32[ebp]
push	eax
mov	ecx, DWORD PTR _bRev$[ebp]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_codeAllEqualityTerms
add	esp, 20					
mov	DWORD PTR _regBase$64[ebp], eax
cmp	DWORD PTR _zStartAff$58[ebp], 0
je	SHORT $LN102@codeOneLoo
movzx	ecx, WORD PTR _nEq$69[ebp]
mov	edx, DWORD PTR _zStartAff$58[ebp]
mov	al, BYTE PTR [edx+ecx]
mov	BYTE PTR _cEndAff$67[ebp], al
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _addrNxt$[ebp], edx
movzx	eax, WORD PTR _nEq$69[ebp]
mov	ecx, DWORD PTR _pIdx$59[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	eax, edx
jge	SHORT $LN99@codeOneLoo
movzx	eax, WORD PTR _nEq$69[ebp]
mov	ecx, DWORD PTR _pIdx$59[ebp]
mov	edx, DWORD PTR [ecx+28]
movzx	eax, BYTE PTR [edx+eax]
test	eax, eax
jne	SHORT $LN152@codeOneLoo
mov	DWORD PTR tv493[ebp], 1
jmp	SHORT $LN153@codeOneLoo
mov	DWORD PTR tv493[ebp], 0
mov	ecx, DWORD PTR _bRev$[ebp]
cmp	ecx, DWORD PTR tv493[ebp]
je	SHORT $LN100@codeOneLoo
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN101@codeOneLoo
mov	edx, DWORD PTR _pIdx$59[ebp]
movzx	eax, WORD PTR [edx+50]
movzx	ecx, WORD PTR _nEq$69[ebp]
cmp	eax, ecx
jne	SHORT $LN101@codeOneLoo
mov	edx, DWORD PTR _pRangeEnd$60[ebp]
mov	DWORD PTR _t$2[ebp], edx
mov	eax, DWORD PTR _pRangeStart$62[ebp]
mov	DWORD PTR _pRangeEnd$60[ebp], eax
mov	ecx, DWORD PTR _t$2[ebp]
mov	DWORD PTR _pRangeStart$62[ebp], ecx
mov	dl, BYTE PTR _bSeekPastNull$68[ebp]
mov	BYTE PTR _t$52[ebp], dl
mov	al, BYTE PTR _bStopAtNull$66[ebp]
mov	BYTE PTR _bSeekPastNull$68[ebp], al
mov	cl, BYTE PTR _t$52[ebp]
mov	BYTE PTR _bStopAtNull$66[ebp], cl
cmp	DWORD PTR _pRangeStart$62[ebp], 0
je	SHORT $LN154@codeOneLoo
mov	edx, DWORD PTR _pRangeStart$62[ebp]
movzx	eax, WORD PTR [edx+18]
and	eax, 40					
jne	SHORT $LN154@codeOneLoo
mov	DWORD PTR tv505[ebp], 0
jmp	SHORT $LN155@codeOneLoo
mov	DWORD PTR tv505[ebp], 1
mov	ecx, DWORD PTR tv505[ebp]
mov	DWORD PTR _startEq$13[ebp], ecx
cmp	DWORD PTR _pRangeEnd$60[ebp], 0
je	SHORT $LN156@codeOneLoo
mov	edx, DWORD PTR _pRangeEnd$60[ebp]
movzx	eax, WORD PTR [edx+18]
and	eax, 40					
jne	SHORT $LN156@codeOneLoo
mov	DWORD PTR tv511[ebp], 0
jmp	SHORT $LN157@codeOneLoo
mov	DWORD PTR tv511[ebp], 1
mov	ecx, DWORD PTR tv511[ebp]
mov	DWORD PTR _endEq$21[ebp], ecx
cmp	DWORD PTR _pRangeStart$62[ebp], 0
jne	SHORT $LN158@codeOneLoo
movzx	edx, WORD PTR _nEq$69[ebp]
test	edx, edx
jg	SHORT $LN158@codeOneLoo
mov	DWORD PTR tv515[ebp], 0
jmp	SHORT $LN159@codeOneLoo
mov	DWORD PTR tv515[ebp], 1
mov	eax, DWORD PTR tv515[ebp]
mov	DWORD PTR _start_constraints$9[ebp], eax
movzx	ecx, WORD PTR _nEq$69[ebp]
mov	DWORD PTR _nConstraint$65[ebp], ecx
cmp	DWORD PTR _pRangeStart$62[ebp], 0
je	$LN98@codeOneLoo
mov	edx, DWORD PTR _pRangeStart$62[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pRight$38[ebp], ecx
movzx	edx, WORD PTR _nEq$69[ebp]
add	edx, DWORD PTR _regBase$64[ebp]
push	edx
mov	eax, DWORD PTR _pRight$38[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
mov	edx, DWORD PTR _pRangeStart$62[ebp]
movzx	eax, BYTE PTR [edx+20]
and	eax, 0
jne	SHORT $LN97@codeOneLoo
mov	ecx, DWORD PTR _pRight$38[ebp]
push	ecx
call	_sqlite3ExprCanBeNull
add	esp, 4
test	eax, eax
je	SHORT $LN97@codeOneLoo
mov	edx, DWORD PTR _addrNxt$[ebp]
push	edx
movzx	eax, WORD PTR _nEq$69[ebp]
add	eax, DWORD PTR _regBase$64[ebp]
push	eax
push	76					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _zStartAff$58[ebp], 0
je	SHORT $LN96@codeOneLoo
movzx	edx, WORD PTR _nEq$69[ebp]
mov	eax, DWORD PTR _zStartAff$58[ebp]
movzx	ecx, BYTE PTR [eax+edx]
push	ecx
mov	edx, DWORD PTR _pRight$38[ebp]
push	edx
call	_sqlite3CompareAffinity
add	esp, 8
movsx	eax, al
cmp	eax, 98					
jne	SHORT $LN95@codeOneLoo
movzx	ecx, WORD PTR _nEq$69[ebp]
mov	edx, DWORD PTR _zStartAff$58[ebp]
mov	BYTE PTR [edx+ecx], 98			
movzx	eax, WORD PTR _nEq$69[ebp]
mov	ecx, DWORD PTR _zStartAff$58[ebp]
movzx	edx, BYTE PTR [ecx+eax]
push	edx
mov	eax, DWORD PTR _pRight$38[ebp]
push	eax
call	_sqlite3ExprNeedsNoAffinityChange
add	esp, 8
test	eax, eax
je	SHORT $LN96@codeOneLoo
movzx	ecx, WORD PTR _nEq$69[ebp]
mov	edx, DWORD PTR _zStartAff$58[ebp]
mov	BYTE PTR [edx+ecx], 98			
mov	eax, DWORD PTR _nConstraint$65[ebp]
add	eax, 1
mov	DWORD PTR _nConstraint$65[ebp], eax
jmp	SHORT $LN93@codeOneLoo
movzx	ecx, BYTE PTR _bSeekPastNull$68[ebp]
test	ecx, ecx
je	SHORT $LN93@codeOneLoo
movzx	edx, WORD PTR _nEq$69[ebp]
add	edx, DWORD PTR _regBase$64[ebp]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _nConstraint$65[ebp]
add	ecx, 1
mov	DWORD PTR _nConstraint$65[ebp], ecx
mov	DWORD PTR _startEq$13[ebp], 0
mov	DWORD PTR _start_constraints$9[ebp], 1
mov	edx, DWORD PTR _zStartAff$58[ebp]
push	edx
movzx	eax, BYTE PTR _bSeekPastNull$68[ebp]
mov	ecx, DWORD PTR _nConstraint$65[ebp]
sub	ecx, eax
push	ecx
mov	edx, DWORD PTR _regBase$64[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_codeApplyAffinity
add	esp, 16					
mov	ecx, DWORD PTR _startEq$13[ebp]
mov	edx, DWORD PTR _bRev$[ebp]
lea	eax, DWORD PTR [edx+ecx*2]
mov	ecx, DWORD PTR _start_constraints$9[ebp]
movzx	edx, BYTE PTR ?aStartOp@?BG@??codeOneLoopStart@@9@9[eax+ecx*4]
mov	DWORD PTR _op$23[ebp], edx
mov	eax, DWORD PTR _nConstraint$65[ebp]
push	eax
mov	ecx, DWORD PTR _regBase$64[ebp]
push	ecx
mov	edx, DWORD PTR _addrNxt$[ebp]
push	edx
mov	eax, DWORD PTR _iIdxCur$51[ebp]
push	eax
mov	ecx, DWORD PTR _op$23[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
movzx	eax, WORD PTR _nEq$69[ebp]
mov	DWORD PTR _nConstraint$65[ebp], eax
cmp	DWORD PTR _pRangeEnd$60[ebp], 0
je	$LN91@codeOneLoo
mov	ecx, DWORD PTR _pRangeEnd$60[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pRight$30[ebp], eax
push	1
movzx	ecx, WORD PTR _nEq$69[ebp]
add	ecx, DWORD PTR _regBase$64[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheRemove
add	esp, 12					
movzx	eax, WORD PTR _nEq$69[ebp]
add	eax, DWORD PTR _regBase$64[ebp]
push	eax
mov	ecx, DWORD PTR _pRight$30[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCode
add	esp, 12					
mov	eax, DWORD PTR _pRangeEnd$60[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 0
jne	SHORT $LN90@codeOneLoo
mov	edx, DWORD PTR _pRight$30[ebp]
push	edx
call	_sqlite3ExprCanBeNull
add	esp, 4
test	eax, eax
je	SHORT $LN90@codeOneLoo
mov	eax, DWORD PTR _addrNxt$[ebp]
push	eax
movzx	ecx, WORD PTR _nEq$69[ebp]
add	ecx, DWORD PTR _regBase$64[ebp]
push	ecx
push	76					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
movzx	eax, BYTE PTR _cEndAff$67[ebp]
push	eax
mov	ecx, DWORD PTR _pRight$30[ebp]
push	ecx
call	_sqlite3CompareAffinity
add	esp, 8
movsx	edx, al
cmp	edx, 98					
je	SHORT $LN89@codeOneLoo
movzx	eax, BYTE PTR _cEndAff$67[ebp]
push	eax
mov	ecx, DWORD PTR _pRight$30[ebp]
push	ecx
call	_sqlite3ExprNeedsNoAffinityChange
add	esp, 8
test	eax, eax
jne	SHORT $LN89@codeOneLoo
lea	edx, DWORD PTR _cEndAff$67[ebp]
push	edx
push	1
movzx	eax, WORD PTR _nEq$69[ebp]
add	eax, DWORD PTR _regBase$64[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_codeApplyAffinity
add	esp, 16					
mov	edx, DWORD PTR _nConstraint$65[ebp]
add	edx, 1
mov	DWORD PTR _nConstraint$65[ebp], edx
jmp	SHORT $LN88@codeOneLoo
movzx	eax, BYTE PTR _bStopAtNull$66[ebp]
test	eax, eax
je	SHORT $LN88@codeOneLoo
movzx	ecx, WORD PTR _nEq$69[ebp]
add	ecx, DWORD PTR _regBase$64[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _endEq$21[ebp], 0
mov	eax, DWORD PTR _nConstraint$65[ebp]
add	eax, 1
mov	DWORD PTR _nConstraint$65[ebp], eax
mov	ecx, DWORD PTR _zStartAff$58[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+44], eax
cmp	DWORD PTR _nConstraint$65[ebp], 0
je	SHORT $LN86@codeOneLoo
mov	edx, DWORD PTR _bRev$[ebp]
mov	eax, DWORD PTR _endEq$21[ebp]
movzx	ecx, BYTE PTR ?aEndOp@?BG@??codeOneLoopStart@@9@9[eax+edx*2]
mov	DWORD PTR _op$23[ebp], ecx
mov	edx, DWORD PTR _nConstraint$65[ebp]
push	edx
mov	eax, DWORD PTR _regBase$64[ebp]
push	eax
mov	ecx, DWORD PTR _addrNxt$[ebp]
push	ecx
mov	edx, DWORD PTR _iIdxCur$51[ebp]
push	edx
mov	eax, DWORD PTR _op$23[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	edx, DWORD PTR _pRangeStart$62[ebp]
push	edx
mov	eax, DWORD PTR _pLevel$[ebp]
push	eax
call	_disableTerm
add	esp, 8
mov	ecx, DWORD PTR _pRangeEnd$60[ebp]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
push	edx
call	_disableTerm
add	esp, 8
cmp	DWORD PTR _omitTable$[ebp], 0
je	SHORT $LN85@codeOneLoo
jmp	$LN84@codeOneLoo
mov	eax, DWORD PTR _pIdx$59[ebp]
mov	ecx, DWORD PTR [eax+12]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN83@codeOneLoo
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv670[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv670[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv670[ebp]
mov	DWORD PTR _iRowidReg$[ebp], ecx
mov	edx, DWORD PTR _iRowidReg$[ebp]
push	edx
mov	eax, DWORD PTR _iIdxCur$51[ebp]
push	eax
push	109					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _iRowidReg$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheStore
add	esp, 16					
mov	edx, DWORD PTR _iRowidReg$[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
push	63					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN84@codeOneLoo
mov	edx, DWORD PTR _iCur$[ebp]
cmp	edx, DWORD PTR _iIdxCur$51[ebp]
je	$LN84@codeOneLoo
mov	eax, DWORD PTR _pIdx$59[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$33[ebp], eax
mov	edx, DWORD PTR _pPk$33[ebp]
movzx	eax, WORD PTR [edx+50]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _iRowidReg$[ebp], eax
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN80@codeOneLoo
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pPk$33[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _j$[ebp], ecx
jge	SHORT $LN78@codeOneLoo
mov	edx, DWORD PTR _pPk$33[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _j$[ebp]
movzx	edx, WORD PTR [eax+ecx*2]
push	edx
mov	eax, DWORD PTR _pIdx$59[ebp]
push	eax
call	_sqlite3ColumnOfIndex
add	esp, 8
movsx	ecx, ax
mov	DWORD PTR _k$[ebp], ecx
mov	edx, DWORD PTR _iRowidReg$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _k$[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$51[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN79@codeOneLoo
mov	eax, DWORD PTR _pPk$33[ebp]
movzx	ecx, WORD PTR [eax+50]
push	ecx
mov	edx, DWORD PTR _iRowidReg$[ebp]
push	edx
mov	eax, DWORD PTR _addrCont$[ebp]
push	eax
mov	ecx, DWORD PTR _iCur$[ebp]
push	ecx
push	65					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 4096				
je	SHORT $LN77@codeOneLoo
mov	edx, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [edx+37], 156			
jmp	SHORT $LN76@codeOneLoo
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN75@codeOneLoo
mov	eax, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [eax+37], 8
jmp	SHORT $LN76@codeOneLoo
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [ecx+37], 9
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR _iIdxCur$51[ebp]
mov	DWORD PTR [edx+40], eax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 65536				
je	SHORT $LN160@codeOneLoo
mov	DWORD PTR tv761[ebp], 1
jmp	SHORT $LN161@codeOneLoo
mov	DWORD PTR tv761[ebp], 0
mov	eax, DWORD PTR _pLevel$[ebp]
mov	cl, BYTE PTR tv761[ebp]
mov	BYTE PTR [eax+38], cl
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 15					
jne	SHORT $LN72@codeOneLoo
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [ecx+39], 1
jmp	$LN135@codeOneLoo
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 8192				
je	$LN70@codeOneLoo
mov	DWORD PTR _pCov$45[ebp], 0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _iCovCur$15[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv776[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv776[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv776[ebp]
mov	DWORD PTR _regReturn$24[ebp], ecx
mov	DWORD PTR _regRowset$54[ebp], 0
mov	DWORD PTR _regRowid$37[ebp], 0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iLoopBody$14[ebp], eax
mov	DWORD PTR _untestedTerms$12[ebp], 0
mov	DWORD PTR _pAndExpr$63[ebp], 0
mov	eax, DWORD PTR _pTabItem$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pTab$57[ebp], ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR [eax+edx]
mov	DWORD PTR _pTerm$[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pOrWc$26[ebp], edx
mov	eax, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [eax+37], 18			
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR _regReturn$24[ebp]
mov	DWORD PTR [ecx+40], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, BYTE PTR [eax+41]
cmp	ecx, 1
jle	$LN69@codeOneLoo
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, BYTE PTR [edx+41]
sub	eax, DWORD PTR _iLevel$[ebp]
sub	eax, 1
mov	DWORD PTR _nNotReady$29[ebp], eax
imul	ecx, DWORD PTR _nNotReady$29[ebp], 80
add	ecx, 88					
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pOrTab$61[ebp], eax
cmp	DWORD PTR _pOrTab$61[ebp], 0
jne	SHORT $LN68@codeOneLoo
mov	eax, DWORD PTR _notReady$[ebp]
mov	edx, DWORD PTR _notReady$[ebp+4]
jmp	$LN138@codeOneLoo
mov	eax, DWORD PTR _nNotReady$29[ebp]
add	eax, 1
movzx	ecx, al
mov	edx, DWORD PTR _pOrTab$61[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pOrTab$61[ebp]
mov	ecx, DWORD PTR _pOrTab$61[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax], edx
push	80					
mov	eax, DWORD PTR _pTabItem$[ebp]
push	eax
mov	ecx, DWORD PTR _pOrTab$61[ebp]
add	ecx, 8
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 8
mov	DWORD PTR _origSrc$1[ebp], eax
mov	DWORD PTR _k$[ebp], 1
jmp	SHORT $LN67@codeOneLoo
mov	ecx, DWORD PTR _k$[ebp]
add	ecx, 1
mov	DWORD PTR _k$[ebp], ecx
mov	edx, DWORD PTR _k$[ebp]
cmp	edx, DWORD PTR _nNotReady$29[ebp]
jg	SHORT $LN65@codeOneLoo
push	80					
imul	eax, DWORD PTR _k$[ebp], 72
mov	ecx, DWORD PTR _pLevel$[ebp]
movzx	edx, BYTE PTR [ecx+eax+36]
imul	eax, edx, 80
add	eax, DWORD PTR _origSrc$1[ebp]
push	eax
imul	ecx, DWORD PTR _k$[ebp], 80
mov	edx, DWORD PTR _pOrTab$61[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
push	eax
call	_memcpy
add	esp, 12					
jmp	SHORT $LN66@codeOneLoo
jmp	SHORT $LN64@codeOneLoo
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pOrTab$61[ebp], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, WORD PTR [eax+34]
and	ecx, 8
jne	$LN63@codeOneLoo
mov	edx, DWORD PTR _pTab$57[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
jne	SHORT $LN62@codeOneLoo
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv837[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv837[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv837[ebp]
mov	DWORD PTR _regRowset$54[ebp], edx
mov	eax, DWORD PTR _regRowset$54[ebp]
push	eax
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN61@codeOneLoo
mov	edx, DWORD PTR _pTab$57[ebp]
push	edx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$17[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _regRowset$54[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
mov	edx, DWORD PTR _pPk$17[ebp]
movzx	eax, WORD PTR [edx+50]
push	eax
mov	ecx, DWORD PTR _regRowset$54[ebp]
push	ecx
push	55					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pPk$17[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv858[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv858[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv858[ebp]
mov	DWORD PTR _regRowid$37[ebp], eax
mov	ecx, DWORD PTR _regReturn$24[ebp]
push	ecx
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _iRetInit$4[ebp], eax
mov	eax, DWORD PTR _pWC$[ebp]
cmp	DWORD PTR [eax+12], 1
jle	$LN60@codeOneLoo
mov	DWORD PTR _iTerm$56[ebp], 0
jmp	SHORT $LN59@codeOneLoo
mov	ecx, DWORD PTR _iTerm$56[ebp]
add	ecx, 1
mov	DWORD PTR _iTerm$56[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR _iTerm$56[ebp]
cmp	eax, DWORD PTR [edx+12]
jge	$LN57@codeOneLoo
imul	ecx, DWORD PTR _iTerm$56[ebp], 48
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _pExpr$35[ebp], ecx
imul	edx, DWORD PTR _iTerm$56[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
add	edx, DWORD PTR [eax+20]
cmp	edx, DWORD PTR _pTerm$[ebp]
jne	SHORT $LN56@codeOneLoo
jmp	SHORT $LN58@codeOneLoo
mov	ecx, DWORD PTR _pExpr$35[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 1
je	SHORT $LN55@codeOneLoo
jmp	SHORT $LN58@codeOneLoo
imul	eax, DWORD PTR _iTerm$56[ebp], 48
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
movzx	eax, BYTE PTR [edx+eax+20]
and	eax, 18					
je	SHORT $LN54@codeOneLoo
jmp	SHORT $LN58@codeOneLoo
imul	ecx, DWORD PTR _iTerm$56[ebp], 48
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx+20]
movzx	ecx, WORD PTR [eax+ecx+18]
and	ecx, 4095				
jne	SHORT $LN53@codeOneLoo
jmp	SHORT $LN58@codeOneLoo
push	0
mov	edx, DWORD PTR _pExpr$35[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pExpr$35[ebp], eax
mov	ecx, DWORD PTR _pExpr$35[ebp]
push	ecx
mov	edx, DWORD PTR _pAndExpr$63[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprAnd
add	esp, 12					
mov	DWORD PTR _pAndExpr$63[ebp], eax
jmp	$LN58@codeOneLoo
cmp	DWORD PTR _pAndExpr$63[ebp], 0
je	SHORT $LN60@codeOneLoo
push	0
mov	ecx, DWORD PTR _pAndExpr$63[ebp]
push	ecx
push	0
push	72					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pAndExpr$63[ebp], eax
mov	DWORD PTR _ii$53[ebp], 0
jmp	SHORT $LN51@codeOneLoo
mov	eax, DWORD PTR _ii$53[ebp]
add	eax, 1
mov	DWORD PTR _ii$53[ebp], eax
mov	ecx, DWORD PTR _pOrWc$26[ebp]
mov	edx, DWORD PTR _ii$53[ebp]
cmp	edx, DWORD PTR [ecx+12]
jge	$LN49@codeOneLoo
imul	eax, DWORD PTR _ii$53[ebp], 48
mov	ecx, DWORD PTR _pOrWc$26[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pOrTerm$28[ebp], eax
mov	edx, DWORD PTR _pOrTerm$28[ebp]
mov	eax, DWORD PTR [edx+8]
cmp	eax, DWORD PTR _iCur$[ebp]
je	SHORT $LN47@codeOneLoo
mov	ecx, DWORD PTR _pOrTerm$28[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 512				
je	$LN48@codeOneLoo
mov	eax, DWORD PTR _pOrTerm$28[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pOrExpr$31[ebp], ecx
mov	DWORD PTR _j1$40[ebp], 0
cmp	DWORD PTR _pAndExpr$63[ebp], 0
je	SHORT $LN46@codeOneLoo
mov	edx, DWORD PTR _pOrExpr$31[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 1
jne	SHORT $LN46@codeOneLoo
mov	ecx, DWORD PTR _pAndExpr$63[ebp]
mov	edx, DWORD PTR _pOrExpr$31[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pAndExpr$63[ebp]
mov	DWORD PTR _pOrExpr$31[ebp], eax
mov	ecx, DWORD PTR _iCovCur$15[ebp]
push	ecx
push	240					
push	0
push	0
mov	edx, DWORD PTR _pOrExpr$31[ebp]
push	edx
mov	eax, DWORD PTR _pOrTab$61[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pSubWInfo$47[ebp], eax
cmp	DWORD PTR _pSubWInfo$47[ebp], 0
je	$LN48@codeOneLoo
push	0
mov	edx, DWORD PTR _pLevel$[ebp]
movzx	eax, BYTE PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _iLevel$[ebp]
push	ecx
mov	edx, 72					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pSubWInfo$47[ebp]
lea	edx, DWORD PTR [ecx+eax+736]
push	edx
mov	eax, DWORD PTR _pOrTab$61[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_explainOneScan
add	esp, 24					
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
and	eax, 8
jne	$LN44@codeOneLoo
mov	ecx, DWORD PTR _pOrWc$26[ebp]
mov	edx, DWORD PTR [ecx+12]
sub	edx, 1
cmp	DWORD PTR _ii$53[ebp], edx
jne	SHORT $LN162@codeOneLoo
mov	DWORD PTR tv954[ebp], -1
jmp	SHORT $LN163@codeOneLoo
mov	eax, DWORD PTR _ii$53[ebp]
mov	DWORD PTR tv954[ebp], eax
mov	ecx, DWORD PTR tv954[ebp]
mov	DWORD PTR _iSet$36[ebp], ecx
mov	edx, DWORD PTR _pTab$57[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
jne	SHORT $LN43@codeOneLoo
push	0
mov	ecx, DWORD PTR _regRowid$37[ebp]
push	ecx
mov	edx, DWORD PTR _iCur$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _pTab$57[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeGetColumn
add	esp, 24					
mov	DWORD PTR _r$49[ebp], eax
mov	edx, DWORD PTR _iSet$36[ebp]
push	edx
mov	eax, DWORD PTR _r$49[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _regRowset$54[ebp]
push	ecx
push	127					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	DWORD PTR _j1$40[ebp], eax
jmp	$LN44@codeOneLoo
mov	eax, DWORD PTR _pTab$57[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$16[ebp], eax
mov	ecx, DWORD PTR _pPk$16[ebp]
movzx	edx, WORD PTR [ecx+50]
mov	DWORD PTR _nPk$44[ebp], edx
mov	eax, DWORD PTR _nPk$44[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _r$49[ebp], eax
mov	DWORD PTR _iPk$48[ebp], 0
jmp	SHORT $LN41@codeOneLoo
mov	edx, DWORD PTR _iPk$48[ebp]
add	edx, 1
mov	DWORD PTR _iPk$48[ebp], edx
mov	eax, DWORD PTR _iPk$48[ebp]
cmp	eax, DWORD PTR _nPk$44[ebp]
jge	SHORT $LN39@codeOneLoo
mov	ecx, DWORD PTR _pPk$16[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _iPk$48[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
mov	DWORD PTR _iCol$6[ebp], ecx
push	0
mov	edx, DWORD PTR _r$49[ebp]
add	edx, DWORD PTR _iPk$48[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _iCol$6[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$57[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeGetColumn
add	esp, 24					
jmp	SHORT $LN40@codeOneLoo
cmp	DWORD PTR _iSet$36[ebp], 0
je	SHORT $LN38@codeOneLoo
mov	ecx, DWORD PTR _nPk$44[ebp]
push	ecx
mov	edx, DWORD PTR _r$49[ebp]
push	edx
push	0
mov	eax, DWORD PTR _regRowset$54[ebp]
push	eax
push	66					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	DWORD PTR _j1$40[ebp], eax
cmp	DWORD PTR _iSet$36[ebp], 0
jl	SHORT $LN37@codeOneLoo
mov	edx, DWORD PTR _regRowid$37[ebp]
push	edx
mov	eax, DWORD PTR _nPk$44[ebp]
push	eax
mov	ecx, DWORD PTR _r$49[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	0
mov	eax, DWORD PTR _regRowid$37[ebp]
push	eax
mov	ecx, DWORD PTR _regRowset$54[ebp]
push	ecx
push	107					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _iSet$36[ebp], 0
je	SHORT $LN37@codeOneLoo
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR _nPk$44[ebp]
push	ecx
mov	edx, DWORD PTR _r$49[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempRange
add	esp, 12					
mov	ecx, DWORD PTR _iLoopBody$14[ebp]
push	ecx
mov	edx, DWORD PTR _regReturn$24[ebp]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _j1$40[ebp], 0
je	SHORT $LN35@codeOneLoo
mov	ecx, DWORD PTR _j1$40[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pSubWInfo$47[ebp]
movzx	ecx, BYTE PTR [eax+39]
test	ecx, ecx
je	SHORT $LN34@codeOneLoo
mov	DWORD PTR _untestedTerms$12[ebp], 1
mov	edx, 72					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pSubWInfo$47[ebp]
mov	edx, DWORD PTR [ecx+eax+792]
mov	DWORD PTR _pSubLoop$41[ebp], edx
mov	eax, DWORD PTR _pSubLoop$41[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 512				
je	SHORT $LN33@codeOneLoo
cmp	DWORD PTR _ii$53[ebp], 0
je	SHORT $LN32@codeOneLoo
mov	edx, DWORD PTR _pSubLoop$41[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR _pCov$45[ebp]
jne	SHORT $LN33@codeOneLoo
mov	ecx, DWORD PTR _pTab$57[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
je	SHORT $LN31@codeOneLoo
mov	eax, DWORD PTR _pSubLoop$41[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
je	SHORT $LN33@codeOneLoo
mov	eax, DWORD PTR _pSubLoop$41[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pCov$45[ebp], ecx
jmp	SHORT $LN30@codeOneLoo
mov	DWORD PTR _pCov$45[ebp], 0
mov	edx, DWORD PTR _pSubWInfo$47[ebp]
push	edx
call	_sqlite3WhereEnd
add	esp, 4
jmp	$LN50@codeOneLoo
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR _pCov$45[ebp]
mov	DWORD PTR [eax+48], ecx
cmp	DWORD PTR _pCov$45[ebp], 0
je	SHORT $LN29@codeOneLoo
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR _iCovCur$15[ebp]
mov	DWORD PTR [edx+8], eax
cmp	DWORD PTR _pAndExpr$63[ebp], 0
je	SHORT $LN28@codeOneLoo
mov	ecx, DWORD PTR _pAndExpr$63[ebp]
mov	DWORD PTR [ecx+12], 0
mov	edx, DWORD PTR _pAndExpr$63[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
push	eax
mov	edx, DWORD PTR _iRetInit$4[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _iLoopBody$14[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, BYTE PTR [eax+41]
cmp	ecx, 1
jle	SHORT $LN27@codeOneLoo
mov	edx, DWORD PTR _pOrTab$61[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _untestedTerms$12[ebp], 0
jne	SHORT $LN26@codeOneLoo
mov	ecx, DWORD PTR _pTerm$[ebp]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
push	edx
call	_disableTerm
add	esp, 8
jmp	SHORT $LN135@codeOneLoo
mov	eax, DWORD PTR _pTabItem$[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 3
and	ecx, 1
je	SHORT $LN24@codeOneLoo
mov	edx, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [edx+37], 156			
jmp	SHORT $LN135@codeOneLoo
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR _bRev$[ebp]
mov	dl, BYTE PTR ?aStep@?EO@??codeOneLoopStart@@9@9[ecx]
mov	BYTE PTR [eax+37], dl
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR _iCur$[ebp]
mov	DWORD PTR [eax+40], ecx
mov	edx, DWORD PTR _addrBrk$[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _bRev$[ebp]
movzx	edx, BYTE PTR ?aStart@?EO@??codeOneLoopStart@@9@9[ecx]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
add	eax, 1
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	BYTE PTR [edx+39], 1
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _j$[ebp], eax
jmp	SHORT $LN22@codeOneLoo
mov	ecx, DWORD PTR _j$[ebp]
sub	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pTerm$[ebp]
add	edx, 48					
mov	DWORD PTR _pTerm$[ebp], edx
cmp	DWORD PTR _j$[ebp], 0
jle	$LN20@codeOneLoo
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 6
je	SHORT $LN19@codeOneLoo
jmp	SHORT $LN21@codeOneLoo
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [edx+40]
and	ecx, DWORD PTR [eax+64]
mov	edx, DWORD PTR [edx+44]
and	edx, DWORD PTR [eax+68]
mov	DWORD PTR tv1962[ebp], ecx
mov	DWORD PTR tv1962[ebp+4], edx
mov	eax, DWORD PTR tv1962[ebp]
or	eax, DWORD PTR tv1962[ebp+4]
je	SHORT $LN18@codeOneLoo
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [ecx+39], 1
jmp	SHORT $LN21@codeOneLoo
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pE$11[ebp], eax
mov	ecx, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN17@codeOneLoo
mov	edx, DWORD PTR _pE$11[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 1
jne	SHORT $LN17@codeOneLoo
jmp	$LN21@codeOneLoo
push	8
mov	ecx, DWORD PTR _addrCont$[ebp]
push	ecx
mov	edx, DWORD PTR _pE$11[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, BYTE PTR [ecx+20]
or	edx, 4
mov	eax, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [eax+20], dl
jmp	$LN21@codeOneLoo
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pTerm$[ebp], edx
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _j$[ebp], ecx
jmp	SHORT $LN16@codeOneLoo
mov	edx, DWORD PTR _j$[ebp]
sub	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pTerm$[ebp]
add	eax, 48					
mov	DWORD PTR _pTerm$[ebp], eax
cmp	DWORD PTR _j$[ebp], 0
jle	$LN14@codeOneLoo
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, BYTE PTR [ecx+20]
and	edx, 6
je	SHORT $LN13@codeOneLoo
jmp	SHORT $LN15@codeOneLoo
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, WORD PTR [eax+18]
cmp	ecx, 1026				
je	SHORT $LN12@codeOneLoo
jmp	SHORT $LN15@codeOneLoo
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx+8]
cmp	eax, DWORD PTR _iCur$[ebp]
je	SHORT $LN11@codeOneLoo
jmp	SHORT $LN15@codeOneLoo
mov	ecx, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN10@codeOneLoo
jmp	SHORT $LN15@codeOneLoo
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pE$3[ebp], eax
push	0
push	3
mov	ecx, DWORD PTR _notReady$[ebp+4]
push	ecx
mov	edx, DWORD PTR _notReady$[ebp]
push	edx
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _iCur$[ebp]
push	edx
mov	eax, DWORD PTR _pWC$[ebp]
push	eax
call	_findTerm
add	esp, 28					
mov	DWORD PTR _pAlt$22[ebp], eax
cmp	DWORD PTR _pAlt$22[ebp], 0
jne	SHORT $LN9@codeOneLoo
jmp	$LN15@codeOneLoo
mov	ecx, DWORD PTR _pAlt$22[ebp]
movzx	edx, BYTE PTR [ecx+20]
and	edx, 4
je	SHORT $LN8@codeOneLoo
jmp	$LN15@codeOneLoo
push	48					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pEAlt$42[ebp], eax
cmp	DWORD PTR _pEAlt$42[ebp], 0
je	SHORT $LN7@codeOneLoo
mov	edx, DWORD PTR _pAlt$22[ebp]
mov	ecx, 12					
mov	esi, DWORD PTR [edx]
mov	edi, DWORD PTR _pEAlt$42[ebp]
rep movsd
mov	eax, DWORD PTR _pEAlt$42[ebp]
mov	ecx, DWORD PTR _pE$3[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+12], edx
push	8
mov	eax, DWORD PTR _addrCont$[ebp]
push	eax
mov	ecx, DWORD PTR _pEAlt$42[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	eax, DWORD PTR _pEAlt$42[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN15@codeOneLoo
mov	edx, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [edx], 0
je	$LN6@codeOneLoo
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	1
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheClear
add	esp, 4
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], ecx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN5@codeOneLoo
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pTerm$[ebp]
add	eax, 48					
mov	DWORD PTR _pTerm$[ebp], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR [ecx+12]
jge	SHORT $LN6@codeOneLoo
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 6
je	SHORT $LN2@codeOneLoo
jmp	SHORT $LN4@codeOneLoo
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [edx+40]
and	ecx, DWORD PTR [eax+64]
mov	edx, DWORD PTR [edx+44]
and	edx, DWORD PTR [eax+68]
mov	DWORD PTR tv2039[ebp], ecx
mov	DWORD PTR tv2039[ebp+4], edx
mov	eax, DWORD PTR tv2039[ebp]
or	eax, DWORD PTR tv2039[ebp+4]
je	SHORT $LN1@codeOneLoo
jmp	SHORT $LN4@codeOneLoo
push	8
mov	ecx, DWORD PTR _addrCont$[ebp]
push	ecx
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	edx, DWORD PTR _pTerm$[ebp]
movzx	eax, BYTE PTR [edx+20]
or	eax, 4
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [ecx+20], al
jmp	$LN4@codeOneLoo
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	edx, DWORD PTR [edx+68]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_explainOneScan PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+450]
cmp	ecx, 2
jne	$LN25@explainOne
mov	edx, DWORD PTR _pLevel$[ebp]
movzx	eax, BYTE PTR [edx+36]
imul	ecx, eax, 80
mov	edx, DWORD PTR _pTabList$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _pItem$8[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _v$1[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$10[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+464]
mov	DWORD PTR _iId$2[ebp], eax
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pLoop$7[ebp], edx
mov	eax, DWORD PTR _pLoop$7[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR _flags$9[ebp], ecx
mov	edx, DWORD PTR _flags$9[ebp]
and	edx, 8192				
jne	SHORT $LN22@explainOne
movzx	eax, WORD PTR _wctrlFlags$[ebp]
and	eax, 64					
je	SHORT $LN23@explainOne
jmp	$LN25@explainOne
mov	ecx, DWORD PTR _flags$9[ebp]
and	ecx, 48					
jne	SHORT $LN28@explainOne
mov	edx, DWORD PTR _flags$9[ebp]
and	edx, 1024				
jne	SHORT $LN27@explainOne
mov	eax, DWORD PTR _pLoop$7[ebp]
movzx	ecx, WORD PTR [eax+24]
test	ecx, ecx
jg	SHORT $LN28@explainOne
movzx	edx, WORD PTR _wctrlFlags$[ebp]
and	edx, 3
jne	SHORT $LN28@explainOne
mov	DWORD PTR tv92[ebp], 0
jmp	SHORT $LN29@explainOne
mov	DWORD PTR tv92[ebp], 1
mov	eax, DWORD PTR tv92[ebp]
mov	DWORD PTR _isSearch$3[ebp], eax
cmp	DWORD PTR _isSearch$3[ebp], 0
je	SHORT $LN30@explainOne
mov	DWORD PTR tv95[ebp], OFFSET $SG117923
jmp	SHORT $LN31@explainOne
mov	DWORD PTR tv95[ebp], OFFSET $SG117924
mov	ecx, DWORD PTR tv95[ebp]
push	ecx
push	OFFSET $SG117925
mov	edx, DWORD PTR _db$10[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zMsg$11[ebp], eax
mov	eax, DWORD PTR _pItem$8[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN21@explainOne
mov	ecx, DWORD PTR _pItem$8[ebp]
movzx	edx, BYTE PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
push	OFFSET $SG117927
mov	ecx, DWORD PTR _zMsg$11[ebp]
push	ecx
mov	edx, DWORD PTR _db$10[ebp]
push	edx
call	_sqlite3MAppendf
add	esp, 20					
mov	DWORD PTR _zMsg$11[ebp], eax
jmp	SHORT $LN20@explainOne
mov	eax, DWORD PTR _pItem$8[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
push	OFFSET $SG117929
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
mov	ecx, DWORD PTR _db$10[ebp]
push	ecx
call	_sqlite3MAppendf
add	esp, 20					
mov	DWORD PTR _zMsg$11[ebp], eax
mov	edx, DWORD PTR _pItem$8[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN19@explainOne
mov	eax, DWORD PTR _pItem$8[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
push	OFFSET $SG117931
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
mov	ecx, DWORD PTR _db$10[ebp]
push	ecx
call	_sqlite3MAppendf
add	esp, 20					
mov	DWORD PTR _zMsg$11[ebp], eax
mov	edx, DWORD PTR _flags$9[ebp]
and	edx, 1280				
jne	$LN18@explainOne
mov	eax, DWORD PTR _pLoop$7[ebp]
cmp	DWORD PTR [eax+28], 0
je	$LN18@explainOne
mov	ecx, DWORD PTR _pLoop$7[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	DWORD PTR _pIdx$4[ebp], edx
mov	eax, DWORD PTR _pItem$8[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pLoop$7[ebp]
push	edx
mov	eax, DWORD PTR _db$10[ebp]
push	eax
call	_explainIndexRange
add	esp, 12					
mov	DWORD PTR _zWhere$5[ebp], eax
mov	ecx, DWORD PTR _pItem$8[ebp]
mov	edx, DWORD PTR [ecx+16]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
je	SHORT $LN17@explainOne
mov	ecx, DWORD PTR _pIdx$4[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
jne	SHORT $LN17@explainOne
cmp	DWORD PTR _zWhere$5[ebp], 0
je	SHORT $LN32@explainOne
mov	DWORD PTR tv176[ebp], OFFSET $SG117938
jmp	SHORT $LN33@explainOne
mov	DWORD PTR tv176[ebp], OFFSET $SG117939
mov	eax, DWORD PTR tv176[ebp]
mov	DWORD PTR _zFmt$6[ebp], eax
jmp	SHORT $LN16@explainOne
mov	ecx, DWORD PTR _flags$9[ebp]
and	ecx, 16384				
je	SHORT $LN15@explainOne
mov	DWORD PTR _zFmt$6[ebp], OFFSET $SG117942
jmp	SHORT $LN16@explainOne
mov	edx, DWORD PTR _flags$9[ebp]
and	edx, 64					
je	SHORT $LN13@explainOne
mov	DWORD PTR _zFmt$6[ebp], OFFSET $SG117945
jmp	SHORT $LN16@explainOne
mov	DWORD PTR _zFmt$6[ebp], OFFSET $SG117947
mov	eax, DWORD PTR _zWhere$5[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$4[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
mov	ecx, DWORD PTR _zFmt$6[ebp]
push	ecx
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
mov	eax, DWORD PTR _db$10[ebp]
push	eax
call	_sqlite3MAppendf
add	esp, 24					
mov	DWORD PTR _zMsg$11[ebp], eax
mov	ecx, DWORD PTR _zWhere$5[ebp]
push	ecx
mov	edx, DWORD PTR _db$10[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN11@explainOne
mov	eax, DWORD PTR _flags$9[ebp]
and	eax, 256				
je	$LN10@explainOne
mov	ecx, DWORD PTR _flags$9[ebp]
and	ecx, 15					
je	$LN10@explainOne
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
push	OFFSET $SG117950
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
mov	ecx, DWORD PTR _db$10[ebp]
push	ecx
call	_sqlite3MAppendf
add	esp, 16					
mov	DWORD PTR _zMsg$11[ebp], eax
mov	edx, DWORD PTR _flags$9[ebp]
and	edx, 5
je	SHORT $LN9@explainOne
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
push	OFFSET $SG117952
mov	ecx, DWORD PTR _zMsg$11[ebp]
push	ecx
mov	edx, DWORD PTR _db$10[ebp]
push	edx
call	_sqlite3MAppendf
add	esp, 16					
mov	DWORD PTR _zMsg$11[ebp], eax
jmp	SHORT $LN8@explainOne
mov	eax, DWORD PTR _flags$9[ebp]
and	eax, 48					
cmp	eax, 48					
jne	SHORT $LN7@explainOne
mov	ecx, DWORD PTR _zMsg$11[ebp]
push	ecx
push	OFFSET $SG117955
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
mov	eax, DWORD PTR _db$10[ebp]
push	eax
call	_sqlite3MAppendf
add	esp, 16					
mov	DWORD PTR _zMsg$11[ebp], eax
jmp	SHORT $LN8@explainOne
mov	ecx, DWORD PTR _flags$9[ebp]
and	ecx, 32					
je	SHORT $LN5@explainOne
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
push	OFFSET $SG117958
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
mov	ecx, DWORD PTR _db$10[ebp]
push	ecx
call	_sqlite3MAppendf
add	esp, 16					
mov	DWORD PTR _zMsg$11[ebp], eax
jmp	SHORT $LN8@explainOne
mov	edx, DWORD PTR _flags$9[ebp]
and	edx, 16					
je	SHORT $LN8@explainOne
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
push	OFFSET $SG117961
mov	ecx, DWORD PTR _zMsg$11[ebp]
push	ecx
mov	edx, DWORD PTR _db$10[ebp]
push	edx
call	_sqlite3MAppendf
add	esp, 16					
mov	DWORD PTR _zMsg$11[ebp], eax
jmp	SHORT $LN11@explainOne
mov	eax, DWORD PTR _flags$9[ebp]
and	eax, 1024				
je	SHORT $LN11@explainOne
mov	ecx, DWORD PTR _pLoop$7[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _pLoop$7[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
push	OFFSET $SG117964
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
mov	ecx, DWORD PTR _db$10[ebp]
push	ecx
call	_sqlite3MAppendf
add	esp, 24					
mov	DWORD PTR _zMsg$11[ebp], eax
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
push	OFFSET $SG117965
mov	eax, DWORD PTR _zMsg$11[ebp]
push	eax
mov	ecx, DWORD PTR _db$10[ebp]
push	ecx
call	_sqlite3MAppendf
add	esp, 16					
mov	DWORD PTR _zMsg$11[ebp], eax
push	-1
mov	edx, DWORD PTR _zMsg$11[ebp]
push	edx
mov	eax, DWORD PTR _iFrom$[ebp]
push	eax
mov	ecx, DWORD PTR _iLevel$[ebp]
push	ecx
mov	edx, DWORD PTR _iId$2[ebp]
push	edx
push	157					
mov	eax, DWORD PTR _v$1[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_explainIndexRange PROC
push	ebp
mov	ebp, esp
sub	esp, 84					
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pIndex$[ebp], ecx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	ax, WORD PTR [edx+24]
mov	WORD PTR _nEq$[ebp], ax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	dx, WORD PTR [ecx+26]
mov	WORD PTR _nSkip$[ebp], dx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _aCol$[ebp], ecx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _aiColumn$[ebp], eax
movzx	ecx, WORD PTR _nEq$[ebp]
test	ecx, ecx
jne	SHORT $LN9@explainInd
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 48					
jne	SHORT $LN9@explainInd
xor	eax, eax
jmp	$LN10@explainInd
push	1000000000				
push	0
push	0
lea	ecx, DWORD PTR _txt$[ebp]
push	ecx
call	_sqlite3StrAccumInit
add	esp, 16					
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR _txt$[ebp], edx
push	2
push	OFFSET $SG117876
lea	eax, DWORD PTR _txt$[ebp]
push	eax
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@explainInd
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
movzx	edx, WORD PTR _nEq$[ebp]
cmp	DWORD PTR _i$[ebp], edx
jge	$LN6@explainInd
mov	eax, DWORD PTR _pIndex$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _i$[ebp], ecx
jne	SHORT $LN12@explainInd
mov	DWORD PTR tv93[ebp], OFFSET $SG117881
jmp	SHORT $LN13@explainInd
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aiColumn$[ebp]
movsx	ecx, WORD PTR [eax+edx*2]
imul	edx, ecx, 24
mov	eax, DWORD PTR _aCol$[ebp]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR tv93[ebp], ecx
mov	edx, DWORD PTR tv93[ebp]
mov	DWORD PTR _z$3[ebp], edx
movzx	eax, WORD PTR _nSkip$[ebp]
cmp	DWORD PTR _i$[ebp], eax
jl	SHORT $LN5@explainInd
push	OFFSET $SG117883
mov	ecx, DWORD PTR _z$3[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
push	edx
lea	eax, DWORD PTR _txt$[ebp]
push	eax
call	_explainAppendTerm
add	esp, 16					
jmp	SHORT $LN4@explainInd
cmp	DWORD PTR _i$[ebp], 0
je	SHORT $LN3@explainInd
push	5
push	OFFSET $SG117886
lea	ecx, DWORD PTR _txt$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
push	4
push	OFFSET $SG117887
lea	edx, DWORD PTR _txt$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	eax, DWORD PTR _z$3[ebp]
push	eax
lea	ecx, DWORD PTR _txt$[ebp]
push	ecx
call	_sqlite3StrAccumAppendAll
add	esp, 8
push	1
push	OFFSET $SG117888
lea	edx, DWORD PTR _txt$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
jmp	$LN7@explainInd
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 32					
je	SHORT $LN2@explainInd
mov	eax, DWORD PTR _pIndex$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _j$[ebp], ecx
jne	SHORT $LN14@explainInd
mov	DWORD PTR tv156[ebp], OFFSET $SG117891
jmp	SHORT $LN15@explainInd
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR _aiColumn$[ebp]
movsx	ecx, WORD PTR [eax+edx*2]
imul	edx, ecx, 24
mov	eax, DWORD PTR _aCol$[ebp]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR tv156[ebp], ecx
mov	edx, DWORD PTR tv156[ebp]
mov	DWORD PTR _z$2[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR tv160[ebp], eax
push	OFFSET $SG117892
mov	ecx, DWORD PTR _z$2[ebp]
push	ecx
mov	edx, DWORD PTR tv160[ebp]
push	edx
lea	eax, DWORD PTR _txt$[ebp]
push	eax
call	_explainAppendTerm
add	esp, 16					
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 16					
je	SHORT $LN1@explainInd
mov	ecx, DWORD PTR _pIndex$[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	DWORD PTR _j$[ebp], edx
jne	SHORT $LN16@explainInd
mov	DWORD PTR tv175[ebp], OFFSET $SG117895
jmp	SHORT $LN17@explainInd
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _aiColumn$[ebp]
movsx	edx, WORD PTR [ecx+eax*2]
imul	eax, edx, 24
mov	ecx, DWORD PTR _aCol$[ebp]
mov	edx, DWORD PTR [ecx+eax]
mov	DWORD PTR tv175[ebp], edx
mov	eax, DWORD PTR tv175[ebp]
mov	DWORD PTR _z$1[ebp], eax
push	OFFSET $SG117896
mov	ecx, DWORD PTR _z$1[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
push	edx
lea	eax, DWORD PTR _txt$[ebp]
push	eax
call	_explainAppendTerm
add	esp, 16					
push	1
push	OFFSET $SG117897
lea	ecx, DWORD PTR _txt$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
lea	edx, DWORD PTR _txt$[ebp]
push	edx
call	_sqlite3StrAccumFinish
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_explainAppendTerm PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _iTerm$[ebp], 0
je	SHORT $LN1@explainApp
push	5
push	OFFSET $SG117857
mov	eax, DWORD PTR _pStr$[ebp]
push	eax
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	ecx, DWORD PTR _zColumn$[ebp]
push	ecx
mov	edx, DWORD PTR _pStr$[ebp]
push	edx
call	_sqlite3StrAccumAppendAll
add	esp, 8
push	1
mov	eax, DWORD PTR _zOp$[ebp]
push	eax
mov	ecx, DWORD PTR _pStr$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
push	1
push	OFFSET $SG117858
mov	edx, DWORD PTR _pStr$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
pop	ebp
ret	0
ENDP
_codeAllEqualityTerms PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _pLoop$[ebp], eax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	dx, WORD PTR [ecx+24]
mov	WORD PTR _nEq$[ebp], dx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	cx, WORD PTR [eax+26]
mov	WORD PTR _nSkip$[ebp], cx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR _pIdx$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _regBase$[ebp], edx
mov	eax, DWORD PTR _pLoop$[ebp]
movzx	ecx, WORD PTR [eax+24]
add	ecx, DWORD PTR _nExtraReg$[ebp]
mov	DWORD PTR _nReg$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, DWORD PTR _nReg$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3IndexAffinityStr
add	esp, 8
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	DWORD PTR _zAff$[ebp], eax
cmp	DWORD PTR _zAff$[ebp], 0
jne	SHORT $LN16@codeAllEqu
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	BYTE PTR [ecx+64], 1
movzx	edx, WORD PTR _nSkip$[ebp]
test	edx, edx
je	$LN15@codeAllEqu
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _iIdxCur$3[ebp], ecx
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN19@codeAllEqu
mov	DWORD PTR tv93[ebp], 102		
jmp	SHORT $LN20@codeAllEqu
mov	DWORD PTR tv93[ebp], 105		
mov	edx, DWORD PTR _iIdxCur$3[ebp]
push	edx
mov	eax, DWORD PTR tv93[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	DWORD PTR _j$[ebp], eax
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN21@codeAllEqu
mov	DWORD PTR tv138[ebp], 59		
jmp	SHORT $LN22@codeAllEqu
mov	DWORD PTR tv138[ebp], 62		
movzx	eax, WORD PTR _nSkip$[ebp]
push	eax
mov	ecx, DWORD PTR _regBase$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _iIdxCur$3[ebp]
push	edx
mov	eax, DWORD PTR tv138[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	edx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [edx+20], eax
mov	eax, DWORD PTR _j$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN14@codeAllEqu
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
movzx	eax, WORD PTR _nSkip$[ebp]
cmp	DWORD PTR _j$[ebp], eax
jge	SHORT $LN15@codeAllEqu
mov	ecx, DWORD PTR _regBase$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
mov	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _iIdxCur$3[ebp]
push	eax
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN13@codeAllEqu
movzx	edx, WORD PTR _nSkip$[ebp]
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN11@codeAllEqu
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
movzx	ecx, WORD PTR _nEq$[ebp]
cmp	DWORD PTR _j$[ebp], ecx
jge	$LN9@codeAllEqu
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pTerm$[ebp], edx
mov	eax, DWORD PTR _regBase$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
mov	ecx, DWORD PTR _bRev$[ebp]
push	ecx
mov	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _pLevel$[ebp]
push	eax
mov	ecx, DWORD PTR _pTerm$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeEqualityTerm
add	esp, 24					
mov	DWORD PTR _r1$2[ebp], eax
mov	eax, DWORD PTR _regBase$[ebp]
add	eax, DWORD PTR _j$[ebp]
cmp	DWORD PTR _r1$2[ebp], eax
je	SHORT $LN8@codeAllEqu
cmp	DWORD PTR _nReg$[ebp], 1
jne	SHORT $LN7@codeAllEqu
mov	ecx, DWORD PTR _regBase$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	eax, DWORD PTR _r1$2[ebp]
mov	DWORD PTR _regBase$[ebp], eax
jmp	SHORT $LN8@codeAllEqu
mov	ecx, DWORD PTR _regBase$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
mov	edx, DWORD PTR _r1$2[ebp]
push	edx
push	34					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 129				
jne	$LN5@codeAllEqu
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pRight$1[ebp], edx
mov	eax, DWORD PTR _pRight$1[ebp]
push	eax
call	_sqlite3ExprCanBeNull
add	esp, 4
test	eax, eax
je	SHORT $LN4@codeAllEqu
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _regBase$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
push	76					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _zAff$[ebp], 0
je	SHORT $LN5@codeAllEqu
mov	edx, DWORD PTR _zAff$[ebp]
add	edx, DWORD PTR _j$[ebp]
movzx	eax, BYTE PTR [edx]
push	eax
mov	ecx, DWORD PTR _pRight$1[ebp]
push	ecx
call	_sqlite3CompareAffinity
add	esp, 8
movsx	edx, al
cmp	edx, 98					
jne	SHORT $LN2@codeAllEqu
mov	eax, DWORD PTR _zAff$[ebp]
add	eax, DWORD PTR _j$[ebp]
mov	BYTE PTR [eax], 98			
mov	ecx, DWORD PTR _zAff$[ebp]
add	ecx, DWORD PTR _j$[ebp]
movzx	edx, BYTE PTR [ecx]
push	edx
mov	eax, DWORD PTR _pRight$1[ebp]
push	eax
call	_sqlite3ExprNeedsNoAffinityChange
add	esp, 8
test	eax, eax
je	SHORT $LN5@codeAllEqu
mov	ecx, DWORD PTR _zAff$[ebp]
add	ecx, DWORD PTR _j$[ebp]
mov	BYTE PTR [ecx], 98			
jmp	$LN10@codeAllEqu
mov	edx, DWORD PTR _pzAff$[ebp]
mov	eax, DWORD PTR _zAff$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _regBase$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_codeEqualityTerm PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pX$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pX$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 79					
jne	SHORT $LN11@codeEquali
mov	eax, DWORD PTR _iTarget$[ebp]
push	eax
mov	ecx, DWORD PTR _pX$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _iReg$[ebp], eax
jmp	$LN10@codeEquali
mov	ecx, DWORD PTR _pX$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 76					
jne	SHORT $LN9@codeEquali
mov	eax, DWORD PTR _iTarget$[ebp]
mov	DWORD PTR _iReg$[ebp], eax
mov	ecx, DWORD PTR _iReg$[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN10@codeEquali
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _pLoop$3[ebp], ecx
mov	edx, DWORD PTR _pLoop$3[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 1024				
jne	SHORT $LN7@codeEquali
mov	ecx, DWORD PTR _pLoop$3[ebp]
cmp	DWORD PTR [ecx+28], 0
je	SHORT $LN7@codeEquali
mov	edx, DWORD PTR _pLoop$3[ebp]
mov	eax, DWORD PTR [edx+28]
mov	ecx, DWORD PTR [eax+28]
mov	edx, DWORD PTR _iEq$[ebp]
movzx	eax, BYTE PTR [ecx+edx]
test	eax, eax
je	SHORT $LN7@codeEquali
cmp	DWORD PTR _bRev$[ebp], 0
jne	SHORT $LN14@codeEquali
mov	DWORD PTR tv94[ebp], 1
jmp	SHORT $LN15@codeEquali
mov	DWORD PTR tv94[ebp], 0
mov	ecx, DWORD PTR tv94[ebp]
mov	DWORD PTR _bRev$[ebp], ecx
mov	edx, DWORD PTR _iTarget$[ebp]
mov	DWORD PTR _iReg$[ebp], edx
push	0
mov	eax, DWORD PTR _pX$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FindInIndex
add	esp, 12					
mov	DWORD PTR _eType$1[ebp], eax
cmp	DWORD PTR _eType$1[ebp], 4
jne	SHORT $LN6@codeEquali
cmp	DWORD PTR _bRev$[ebp], 0
jne	SHORT $LN16@codeEquali
mov	DWORD PTR tv133[ebp], 1
jmp	SHORT $LN17@codeEquali
mov	DWORD PTR tv133[ebp], 0
mov	edx, DWORD PTR tv133[ebp]
mov	DWORD PTR _bRev$[ebp], edx
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _iTab$2[ebp], ecx
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN18@codeEquali
mov	DWORD PTR tv139[ebp], 102		
jmp	SHORT $LN19@codeEquali
mov	DWORD PTR tv139[ebp], 105		
push	0
mov	edx, DWORD PTR _iTab$2[ebp]
push	edx
mov	eax, DWORD PTR tv139[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pLoop$3[ebp]
mov	eax, DWORD PTR [edx+36]
or	eax, 2048				
mov	ecx, DWORD PTR _pLoop$3[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [edx+48], 0
jne	SHORT $LN5@codeEquali
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+48]
add	eax, 1
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+48], eax
mov	edx, DWORD PTR _pLevel$[ebp]
imul	eax, DWORD PTR [edx+48], 12
push	eax
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbReallocOrFree
add	esp, 12					
mov	edx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [edx+52], eax
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pIn$4[ebp], ecx
cmp	DWORD PTR _pIn$4[ebp], 0
je	$LN4@codeEquali
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+48]
sub	eax, 1
imul	ecx, eax, 12
add	ecx, DWORD PTR _pIn$4[ebp]
mov	DWORD PTR _pIn$4[ebp], ecx
mov	edx, DWORD PTR _pIn$4[ebp]
mov	eax, DWORD PTR _iTab$2[ebp]
mov	DWORD PTR [edx], eax
cmp	DWORD PTR _eType$1[ebp], 1
jne	SHORT $LN3@codeEquali
mov	ecx, DWORD PTR _iReg$[ebp]
push	ecx
mov	edx, DWORD PTR _iTab$2[ebp]
push	edx
push	100					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pIn$4[ebp]
mov	DWORD PTR [ecx+4], eax
jmp	SHORT $LN2@codeEquali
mov	edx, DWORD PTR _iReg$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _iTab$2[ebp]
push	eax
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _pIn$4[ebp]
mov	DWORD PTR [edx+4], eax
cmp	DWORD PTR _bRev$[ebp], 0
je	SHORT $LN20@codeEquali
mov	DWORD PTR tv185[ebp], 6
jmp	SHORT $LN21@codeEquali
mov	DWORD PTR tv185[ebp], 7
mov	eax, DWORD PTR _pIn$4[ebp]
mov	cl, BYTE PTR tv185[ebp]
mov	BYTE PTR [eax+8], cl
mov	edx, DWORD PTR _iReg$[ebp]
push	edx
push	76					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN10@codeEquali
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [ecx+48], 0
mov	edx, DWORD PTR _pTerm$[ebp]
push	edx
mov	eax, DWORD PTR _pLevel$[ebp]
push	eax
call	_disableTerm
add	esp, 8
mov	eax, DWORD PTR _iReg$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_codeApplyAffinity PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
cmp	DWORD PTR _zAff$[ebp], 0
jne	SHORT $LN5@codeApplyA
jmp	$LN7@codeApplyA
cmp	DWORD PTR _n$[ebp], 0
jle	SHORT $LN3@codeApplyA
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zAff$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 98					
jne	SHORT $LN3@codeApplyA
mov	eax, DWORD PTR _n$[ebp]
sub	eax, 1
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _base$[ebp]
add	ecx, 1
mov	DWORD PTR _base$[ebp], ecx
mov	edx, DWORD PTR _zAff$[ebp]
add	edx, 1
mov	DWORD PTR _zAff$[ebp], edx
jmp	SHORT $LN5@codeApplyA
cmp	DWORD PTR _n$[ebp], 1
jle	SHORT $LN2@codeApplyA
mov	eax, DWORD PTR _zAff$[ebp]
add	eax, DWORD PTR _n$[ebp]
movsx	ecx, BYTE PTR [eax-1]
cmp	ecx, 98					
jne	SHORT $LN2@codeApplyA
mov	edx, DWORD PTR _n$[ebp]
sub	edx, 1
mov	DWORD PTR _n$[ebp], edx
jmp	SHORT $LN3@codeApplyA
cmp	DWORD PTR _n$[ebp], 0
jle	SHORT $LN7@codeApplyA
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _base$[ebp]
push	ecx
push	47					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _zAff$[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _base$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_disableTerm PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _pTerm$[ebp], 0
je	$LN5@disableTer
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 4
jne	$LN5@disableTer
mov	edx, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN3@disableTer
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+4]
and	edx, 1
je	SHORT $LN5@disableTer
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [eax+64]
and	edx, DWORD PTR [ecx+40]
mov	eax, DWORD PTR [eax+68]
and	eax, DWORD PTR [ecx+44]
mov	DWORD PTR tv145[ebp], edx
mov	DWORD PTR tv145[ebp+4], eax
mov	ecx, DWORD PTR tv145[ebp]
or	ecx, DWORD PTR tv145[ebp+4]
jne	SHORT $LN5@disableTer
mov	edx, DWORD PTR _pTerm$[ebp]
movzx	eax, BYTE PTR [edx+20]
or	eax, 4
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [ecx+20], al
mov	edx, DWORD PTR _pTerm$[ebp]
cmp	DWORD PTR [edx+4], 0
jl	SHORT $LN5@disableTer
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _pTerm$[ebp]
imul	eax, DWORD PTR [edx+4], 48
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pOther$1[ebp], eax
mov	ecx, DWORD PTR _pOther$1[ebp]
mov	dl, BYTE PTR [ecx+21]
sub	dl, 1
mov	BYTE PTR tv93[ebp], dl
mov	eax, DWORD PTR _pOther$1[ebp]
mov	cl, BYTE PTR tv93[ebp]
mov	BYTE PTR [eax+21], cl
movzx	edx, BYTE PTR tv93[ebp]
test	edx, edx
jne	SHORT $LN5@disableTer
mov	eax, DWORD PTR _pOther$1[ebp]
push	eax
mov	ecx, DWORD PTR _pLevel$[ebp]
push	ecx
call	_disableTerm
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereRangeScanEst PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pLoop$[ebp]
movsx	ecx, WORD PTR [eax+22]
mov	DWORD PTR _nOut$[ebp], ecx
movzx	edx, WORD PTR _nOut$[ebp]
push	edx
mov	eax, DWORD PTR _pLower$[ebp]
push	eax
call	_whereRangeAdjust
add	esp, 8
mov	WORD PTR _nNew$[ebp], ax
movzx	ecx, WORD PTR _nNew$[ebp]
push	ecx
mov	edx, DWORD PTR _pUpper$[ebp]
push	edx
call	_whereRangeAdjust
add	esp, 8
mov	WORD PTR _nNew$[ebp], ax
cmp	DWORD PTR _pLower$[ebp], 0
je	SHORT $LN3@whereRange
cmp	DWORD PTR _pUpper$[ebp], 0
je	SHORT $LN3@whereRange
movsx	eax, WORD PTR _nNew$[ebp]
sub	eax, 20					
mov	WORD PTR _nNew$[ebp], ax
cmp	DWORD PTR _pLower$[ebp], 0
je	SHORT $LN8@whereRange
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN9@whereRange
mov	DWORD PTR tv80[ebp], 0
cmp	DWORD PTR _pUpper$[ebp], 0
je	SHORT $LN6@whereRange
mov	DWORD PTR tv79[ebp], 1
jmp	SHORT $LN7@whereRange
mov	DWORD PTR tv79[ebp], 0
mov	ecx, DWORD PTR tv80[ebp]
add	ecx, DWORD PTR tv79[ebp]
mov	edx, DWORD PTR _nOut$[ebp]
sub	edx, ecx
mov	DWORD PTR _nOut$[ebp], edx
movsx	eax, WORD PTR _nNew$[ebp]
cmp	eax, 10					
jge	SHORT $LN2@whereRange
mov	ecx, 10					
mov	WORD PTR _nNew$[ebp], cx
movsx	edx, WORD PTR _nNew$[ebp]
cmp	edx, DWORD PTR _nOut$[ebp]
jge	SHORT $LN1@whereRange
movsx	eax, WORD PTR _nNew$[ebp]
mov	DWORD PTR _nOut$[ebp], eax
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	dx, WORD PTR _nOut$[ebp]
mov	WORD PTR [ecx+22], dx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereRangeAdjust PROC
push	ebp
mov	ebp, esp
push	ecx
mov	ax, WORD PTR _nNew$[ebp]
mov	WORD PTR _nRet$[ebp], ax
cmp	DWORD PTR _pTerm$[ebp], 0
je	SHORT $LN4@whereRange
mov	ecx, DWORD PTR _pTerm$[ebp]
movsx	edx, WORD PTR [ecx+16]
test	edx, edx
jg	SHORT $LN3@whereRange
mov	eax, DWORD PTR _pTerm$[ebp]
movsx	ecx, WORD PTR [eax+16]
movsx	edx, WORD PTR _nRet$[ebp]
add	edx, ecx
mov	WORD PTR _nRet$[ebp], dx
jmp	SHORT $LN4@whereRange
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 0
jne	SHORT $LN4@whereRange
movsx	edx, WORD PTR _nRet$[ebp]
sub	edx, 20					
mov	WORD PTR _nRet$[ebp], dx
mov	ax, WORD PTR _nRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vtabBestIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3GetVTable
add	esp, 8
mov	eax, DWORD PTR [eax+8]
mov	DWORD PTR _pVtab$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pVtab$[ebp]
push	edx
mov	eax, DWORD PTR _pVtab$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+12]
call	edx
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@vtabBestIn
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN8@vtabBestIn
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	BYTE PTR [ecx+64], 1
jmp	SHORT $LN9@vtabBestIn
mov	edx, DWORD PTR _pVtab$[ebp]
cmp	DWORD PTR [edx+8], 0
jne	SHORT $LN6@vtabBestIn
mov	eax, DWORD PTR _rc$[ebp]
push	eax
call	_sqlite3ErrStr
add	esp, 4
push	eax
push	OFFSET $SG117690
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN9@vtabBestIn
mov	edx, DWORD PTR _pVtab$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	OFFSET $SG117692
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	edx, DWORD PTR _pVtab$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _pVtab$[ebp]
mov	DWORD PTR [ecx+8], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@vtabBestIn
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN2@vtabBestIn
imul	edx, DWORD PTR _i$[ebp], 12
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+5]
test	edx, edx
jne	SHORT $LN1@vtabBestIn
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR _i$[ebp]
cmp	DWORD PTR [ecx+edx*8], 0
jle	SHORT $LN1@vtabBestIn
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG117697
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN3@vtabBestIn
mov	eax, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_allocateIndexInfo PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
push	esi
mov	DWORD PTR _nTerm$[ebp], 0
mov	eax, DWORD PTR _nTerm$[ebp]
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pTerm$[ebp], edx
jmp	SHORT $LN24@allocateIn
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
add	ecx, 48					
mov	DWORD PTR _pTerm$[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+12]
jge	SHORT $LN22@allocateIn
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [ecx+8]
cmp	eax, DWORD PTR [edx+48]
je	SHORT $LN21@allocateIn
jmp	SHORT $LN23@allocateIn
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, -1153				
jne	SHORT $LN20@allocateIn
jmp	SHORT $LN23@allocateIn
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 0
je	SHORT $LN19@allocateIn
jmp	SHORT $LN23@allocateIn
mov	edx, DWORD PTR _nTerm$[ebp]
add	edx, 1
mov	DWORD PTR _nTerm$[ebp], edx
jmp	SHORT $LN23@allocateIn
mov	DWORD PTR _nOrderBy$[ebp], 0
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN18@allocateIn
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _n$3[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN17@allocateIn
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _n$3[ebp]
jge	SHORT $LN15@allocateIn
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _pExpr$2[ebp], ecx
mov	edx, DWORD PTR _pExpr$2[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 154				
jne	SHORT $LN13@allocateIn
mov	ecx, DWORD PTR _pExpr$2[ebp]
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [ecx+28]
cmp	eax, DWORD PTR [edx+48]
je	SHORT $LN14@allocateIn
jmp	SHORT $LN15@allocateIn
jmp	SHORT $LN16@allocateIn
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _n$3[ebp]
jne	SHORT $LN18@allocateIn
mov	edx, DWORD PTR _n$3[ebp]
mov	DWORD PTR _nOrderBy$[ebp], edx
imul	eax, DWORD PTR _nTerm$[ebp], 20
mov	ecx, DWORD PTR _nOrderBy$[ebp]
lea	edx, DWORD PTR [eax+ecx*8+56]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pIdxInfo$[ebp], eax
cmp	DWORD PTR _pIdxInfo$[ebp], 0
jne	SHORT $LN11@allocateIn
push	OFFSET $SG117645
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
xor	eax, eax
jmp	$LN25@allocateIn
mov	eax, 56					
shl	eax, 0
add	eax, DWORD PTR _pIdxInfo$[ebp]
mov	DWORD PTR _pIdxCons$[ebp], eax
imul	ecx, DWORD PTR _nTerm$[ebp], 12
add	ecx, DWORD PTR _pIdxCons$[ebp]
mov	DWORD PTR _pIdxOrderBy$[ebp], ecx
mov	edx, DWORD PTR _nOrderBy$[ebp]
mov	eax, DWORD PTR _pIdxOrderBy$[ebp]
lea	ecx, DWORD PTR [eax+edx*8]
mov	DWORD PTR _pUsage$[ebp], ecx
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	eax, DWORD PTR _nTerm$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
mov	edx, DWORD PTR _nOrderBy$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pIdxInfo$[ebp]
mov	ecx, DWORD PTR _pIdxCons$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pIdxInfo$[ebp]
mov	eax, DWORD PTR _pIdxOrderBy$[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _pIdxInfo$[ebp]
mov	edx, DWORD PTR _pUsage$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	DWORD PTR _j$[ebp], 0
mov	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pTerm$[ebp], edx
jmp	SHORT $LN10@allocateIn
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
add	ecx, 48					
mov	DWORD PTR _pTerm$[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+12]
jge	$LN8@allocateIn
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [ecx+8]
cmp	eax, DWORD PTR [edx+48]
je	SHORT $LN7@allocateIn
jmp	SHORT $LN9@allocateIn
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, -1153				
jne	SHORT $LN6@allocateIn
jmp	SHORT $LN9@allocateIn
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 0
je	SHORT $LN5@allocateIn
jmp	SHORT $LN9@allocateIn
imul	edx, DWORD PTR _j$[ebp], 12
mov	eax, DWORD PTR _pIdxCons$[ebp]
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+edx], ecx
imul	edx, DWORD PTR _j$[ebp], 12
mov	eax, DWORD PTR _pIdxCons$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [eax+edx+8], ecx
mov	edx, DWORD PTR _pTerm$[ebp]
movzx	eax, BYTE PTR [edx+18]
and	eax, 4095				
mov	BYTE PTR _op$4[ebp], al
movzx	ecx, BYTE PTR _op$4[ebp]
cmp	ecx, 1
jne	SHORT $LN4@allocateIn
mov	BYTE PTR _op$4[ebp], 2
imul	edx, DWORD PTR _j$[ebp], 12
mov	eax, DWORD PTR _pIdxCons$[ebp]
mov	cl, BYTE PTR _op$4[ebp]
mov	BYTE PTR [eax+edx+4], cl
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	$LN9@allocateIn
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@allocateIn
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nOrderBy$[ebp]
jge	SHORT $LN1@allocateIn
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _pExpr$1[ebp], edx
mov	eax, DWORD PTR _pExpr$1[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _pIdxOrderBy$[ebp]
mov	DWORD PTR [eax+edx*8], ecx
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	edx, DWORD PTR _i$[ebp]
mov	esi, DWORD PTR _pIdxOrderBy$[ebp]
mov	al, BYTE PTR [eax+ecx+12]
mov	BYTE PTR [esi+edx*8+4], al
jmp	SHORT $LN2@allocateIn
mov	eax, DWORD PTR _pIdxInfo$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_constructAutomaticIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 180				
mov	BYTE PTR _sentWarning$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeOnce
add	esp, 4
mov	DWORD PTR _addrInit$[ebp], eax
mov	DWORD PTR _nKeyCol$[ebp], 0
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pTable$[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
imul	eax, DWORD PTR [edx+12], 48
mov	ecx, DWORD PTR _pWC$[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pWCEnd$[ebp], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _pLoop$[ebp], eax
xorpd	xmm0, xmm0
movlpd	QWORD PTR _idxCols$[ebp], xmm0
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pTerm$[ebp], edx
jmp	SHORT $LN26@constructA
mov	eax, DWORD PTR _pTerm$[ebp]
add	eax, 48					
mov	DWORD PTR _pTerm$[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
cmp	ecx, DWORD PTR _pWCEnd$[ebp]
jae	$LN24@constructA
mov	edx, DWORD PTR _notReady$[ebp+4]
push	edx
mov	eax, DWORD PTR _notReady$[ebp]
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
mov	edx, DWORD PTR _pTerm$[ebp]
push	edx
call	_termCanDriveIndex
add	esp, 16					
test	eax, eax
je	$LN23@constructA
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _iCol$5[ebp], ecx
cmp	DWORD PTR _iCol$5[ebp], 64		
jl	SHORT $LN29@constructA
mov	DWORD PTR tv84[ebp], 0
mov	DWORD PTR tv84[ebp+4], -2147483648	
jmp	SHORT $LN30@constructA
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _iCol$5[ebp]
call	__allshl
mov	DWORD PTR tv84[ebp], eax
mov	DWORD PTR tv84[ebp+4], edx
mov	edx, DWORD PTR tv84[ebp]
mov	DWORD PTR _cMask$4[ebp], edx
mov	eax, DWORD PTR tv84[ebp+4]
mov	DWORD PTR _cMask$4[ebp+4], eax
movzx	ecx, BYTE PTR _sentWarning$[ebp]
test	ecx, ecx
jne	SHORT $LN22@constructA
imul	edx, DWORD PTR _iCol$5[ebp], 24
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG117550
push	284					
call	_sqlite3_log
add	esp, 16					
mov	BYTE PTR _sentWarning$[ebp], 1
mov	edx, DWORD PTR _idxCols$[ebp]
and	edx, DWORD PTR _cMask$4[ebp]
mov	eax, DWORD PTR _idxCols$[ebp+4]
and	eax, DWORD PTR _cMask$4[ebp+4]
mov	DWORD PTR tv388[ebp], edx
mov	DWORD PTR tv388[ebp+4], eax
mov	ecx, DWORD PTR tv388[ebp]
or	ecx, DWORD PTR tv388[ebp+4]
jne	SHORT $LN23@constructA
mov	edx, DWORD PTR _nKeyCol$[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _pLoop$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_whereLoopResize
add	esp, 12					
test	eax, eax
je	SHORT $LN20@constructA
jmp	$LN27@constructA
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _nKeyCol$[ebp]
mov	eax, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	ecx, DWORD PTR _nKeyCol$[ebp]
add	ecx, 1
mov	DWORD PTR _nKeyCol$[ebp], ecx
mov	edx, DWORD PTR _idxCols$[ebp]
or	edx, DWORD PTR _cMask$4[ebp]
mov	eax, DWORD PTR _idxCols$[ebp+4]
or	eax, DWORD PTR _cMask$4[ebp+4]
mov	DWORD PTR _idxCols$[ebp], edx
mov	DWORD PTR _idxCols$[ebp+4], eax
jmp	$LN25@constructA
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	dx, WORD PTR _nKeyCol$[ebp]
mov	WORD PTR [ecx+40], dx
mov	eax, DWORD PTR _pLoop$[ebp]
mov	cx, WORD PTR _nKeyCol$[ebp]
mov	WORD PTR [eax+24], cx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [edx+36], 16961		
mov	eax, DWORD PTR _idxCols$[ebp]
not	eax
mov	ecx, DWORD PTR _idxCols$[ebp+4]
not	ecx
or	ecx, -2147483648			
mov	edx, DWORD PTR _pSrc$[ebp]
and	eax, DWORD PTR [edx+64]
and	ecx, DWORD PTR [edx+68]
mov	DWORD PTR _extraCols$[ebp], eax
mov	DWORD PTR _extraCols$[ebp+4], ecx
mov	eax, DWORD PTR _pTable$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	ecx, 63					
jl	SHORT $LN31@constructA
mov	DWORD PTR tv154[ebp], 63		
jmp	SHORT $LN32@constructA
mov	edx, DWORD PTR _pTable$[ebp]
movsx	eax, WORD PTR [edx+38]
mov	DWORD PTR tv154[ebp], eax
mov	ecx, DWORD PTR tv154[ebp]
mov	DWORD PTR _mxBitCol$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN19@constructA
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _mxBitCol$[ebp]
jge	SHORT $LN17@constructA
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
and	eax, DWORD PTR _extraCols$[ebp]
and	edx, DWORD PTR _extraCols$[ebp+4]
mov	DWORD PTR tv438[ebp], eax
mov	DWORD PTR tv438[ebp+4], edx
mov	ecx, DWORD PTR tv438[ebp]
or	ecx, DWORD PTR tv438[ebp+4]
je	SHORT $LN16@constructA
mov	edx, DWORD PTR _nKeyCol$[ebp]
add	edx, 1
mov	DWORD PTR _nKeyCol$[ebp], edx
jmp	SHORT $LN18@constructA
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+64]
and	ecx, 0
mov	edx, DWORD PTR [eax+68]
and	edx, -2147483648			
mov	DWORD PTR tv451[ebp], ecx
mov	DWORD PTR tv451[ebp+4], edx
mov	eax, DWORD PTR tv451[ebp]
or	eax, DWORD PTR tv451[ebp+4]
je	SHORT $LN15@constructA
mov	ecx, DWORD PTR _pTable$[ebp]
movsx	edx, WORD PTR [ecx+38]
mov	eax, DWORD PTR _nKeyCol$[ebp]
lea	ecx, DWORD PTR [eax+edx-63]
mov	DWORD PTR _nKeyCol$[ebp], ecx
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
or	eax, 65					
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	DWORD PTR [ecx+36], eax
lea	edx, DWORD PTR _zNotUsed$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _nKeyCol$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3AllocateIndexObject
add	esp, 16					
mov	DWORD PTR _pIdx$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
jne	SHORT $LN14@constructA
jmp	$LN27@constructA
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [edx], OFFSET $SG117573
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR _pTable$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	DWORD PTR _n$[ebp], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _idxCols$[ebp], xmm0
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pTerm$[ebp], eax
jmp	SHORT $LN13@constructA
mov	ecx, DWORD PTR _pTerm$[ebp]
add	ecx, 48					
mov	DWORD PTR _pTerm$[ebp], ecx
mov	edx, DWORD PTR _pTerm$[ebp]
cmp	edx, DWORD PTR _pWCEnd$[ebp]
jae	$LN11@constructA
mov	eax, DWORD PTR _notReady$[ebp+4]
push	eax
mov	ecx, DWORD PTR _notReady$[ebp]
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
mov	eax, DWORD PTR _pTerm$[ebp]
push	eax
call	_termCanDriveIndex
add	esp, 16					
test	eax, eax
je	$LN10@constructA
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _iCol$1[ebp], edx
cmp	DWORD PTR _iCol$1[ebp], 64		
jl	SHORT $LN33@constructA
mov	DWORD PTR tv195[ebp], 0
mov	DWORD PTR tv195[ebp+4], -2147483648	
jmp	SHORT $LN34@constructA
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _iCol$1[ebp]
call	__allshl
mov	DWORD PTR tv195[ebp], eax
mov	DWORD PTR tv195[ebp+4], edx
mov	eax, DWORD PTR tv195[ebp]
mov	DWORD PTR _cMask$2[ebp], eax
mov	ecx, DWORD PTR tv195[ebp+4]
mov	DWORD PTR _cMask$2[ebp+4], ecx
mov	edx, DWORD PTR _idxCols$[ebp]
and	edx, DWORD PTR _cMask$2[ebp]
mov	eax, DWORD PTR _idxCols$[ebp+4]
and	eax, DWORD PTR _cMask$2[ebp+4]
mov	DWORD PTR tv503[ebp], edx
mov	DWORD PTR tv503[ebp+4], eax
mov	ecx, DWORD PTR tv503[ebp]
or	ecx, DWORD PTR tv503[ebp+4]
jne	SHORT $LN10@constructA
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pX$3[ebp], eax
mov	ecx, DWORD PTR _idxCols$[ebp]
or	ecx, DWORD PTR _cMask$2[ebp]
mov	edx, DWORD PTR _idxCols$[ebp+4]
or	edx, DWORD PTR _cMask$2[ebp+4]
mov	DWORD PTR _idxCols$[ebp], ecx
mov	DWORD PTR _idxCols$[ebp+4], edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _n$[ebp]
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ax, WORD PTR [eax+12]
mov	WORD PTR [ecx+edx*2], ax
mov	ecx, DWORD PTR _pX$3[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pX$3[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BinaryCompareCollSeq
add	esp, 12					
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
je	SHORT $LN35@constructA
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR tv215[ebp], ecx
jmp	SHORT $LN36@constructA
mov	DWORD PTR tv215[ebp], OFFSET $SG117588
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _n$[ebp]
mov	edx, DWORD PTR tv215[ebp]
mov	DWORD PTR [eax+ecx*4], edx
mov	eax, DWORD PTR _n$[ebp]
add	eax, 1
mov	DWORD PTR _n$[ebp], eax
jmp	$LN12@constructA
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@constructA
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _mxBitCol$[ebp]
jge	SHORT $LN6@constructA
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
and	eax, DWORD PTR _extraCols$[ebp]
and	edx, DWORD PTR _extraCols$[ebp+4]
mov	DWORD PTR tv544[ebp], eax
mov	DWORD PTR tv544[ebp+4], edx
mov	eax, DWORD PTR tv544[ebp]
or	eax, DWORD PTR tv544[ebp+4]
je	SHORT $LN5@constructA
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _n$[ebp]
mov	cx, WORD PTR _i$[ebp]
mov	WORD PTR [edx+eax*2], cx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR [eax+ecx*4], OFFSET $SG117595
mov	edx, DWORD PTR _n$[ebp]
add	edx, 1
mov	DWORD PTR _n$[ebp], edx
jmp	SHORT $LN7@constructA
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+64]
and	ecx, 0
mov	edx, DWORD PTR [eax+68]
and	edx, -2147483648			
mov	DWORD PTR tv562[ebp], ecx
mov	DWORD PTR tv562[ebp+4], edx
mov	eax, DWORD PTR tv562[ebp]
or	eax, DWORD PTR tv562[ebp+4]
je	SHORT $LN4@constructA
mov	DWORD PTR _i$[ebp], 63			
jmp	SHORT $LN3@constructA
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTable$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN4@constructA
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _n$[ebp]
mov	cx, WORD PTR _i$[ebp]
mov	WORD PTR [edx+eax*2], cx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR [eax+ecx*4], OFFSET $SG117605
mov	edx, DWORD PTR _n$[ebp]
add	edx, 1
mov	DWORD PTR _n$[ebp], edx
jmp	SHORT $LN2@constructA
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	edx, -1
mov	eax, DWORD PTR _n$[ebp]
mov	WORD PTR [ecx+eax*2], dx
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _n$[ebp]
mov	DWORD PTR [edx+eax*4], OFFSET $SG117607
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
mov	ecx, DWORD PTR _nKeyCol$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	54					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrTop$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRecord$[ebp], eax
push	0
push	0
push	0
push	0
mov	edx, DWORD PTR _regRecord$[ebp]
push	edx
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GenerateIndexKey
add	esp, 32					
mov	ecx, DWORD PTR _regRecord$[ebp]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	107					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	eax, DWORD PTR _addrTop$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
push	9
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	3
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	edx, DWORD PTR _addrTop$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _regRecord$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	eax, DWORD PTR _addrInit$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_termCanDriveIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [eax+8]
cmp	edx, DWORD PTR [ecx+48]
je	SHORT $LN5@termCanDri
xor	eax, eax
jmp	SHORT $LN6@termCanDri
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, WORD PTR [eax+18]
and	ecx, 2
jne	SHORT $LN4@termCanDri
xor	eax, eax
jmp	SHORT $LN6@termCanDri
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx+32]
and	eax, DWORD PTR _notReady$[ebp]
mov	ecx, DWORD PTR [edx+36]
and	ecx, DWORD PTR _notReady$[ebp+4]
mov	DWORD PTR tv133[ebp], eax
mov	DWORD PTR tv133[ebp+4], ecx
mov	edx, DWORD PTR tv133[ebp]
or	edx, DWORD PTR tv133[ebp+4]
je	SHORT $LN3@termCanDri
xor	eax, eax
jmp	SHORT $LN6@termCanDri
mov	eax, DWORD PTR _pTerm$[ebp]
cmp	DWORD PTR [eax+12], 0
jge	SHORT $LN2@termCanDri
xor	eax, eax
jmp	SHORT $LN6@termCanDri
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR _pTerm$[ebp]
imul	ecx, DWORD PTR [eax+12], 24
mov	edx, DWORD PTR [edx+4]
mov	al, BYTE PTR [edx+ecx+21]
mov	BYTE PTR _aff$[ebp], al
movzx	ecx, BYTE PTR _aff$[ebp]
push	ecx
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3IndexAffinityOk
add	esp, 8
test	eax, eax
jne	SHORT $LN1@termCanDri
xor	eax, eax
jmp	SHORT $LN6@termCanDri
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_estLog	PROC
push	ebp
mov	ebp, esp
sub	esp, 8
movsx	eax, WORD PTR _N$[ebp]
cdq
push	edx
push	eax
call	_sqlite3LogEst
add	esp, 8
mov	WORD PTR _x$[ebp], ax
movsx	eax, WORD PTR _x$[ebp]
cmp	eax, 33					
jle	SHORT $LN3@estLog
movsx	ecx, WORD PTR _x$[ebp]
sub	ecx, 33					
mov	DWORD PTR tv72[ebp], ecx
jmp	SHORT $LN4@estLog
mov	DWORD PTR tv72[ebp], 0
mov	ax, WORD PTR tv72[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isDistinctRedundant PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pTabList$[ebp]
cmp	DWORD PTR [eax], 1
je	SHORT $LN16@isDistinct
xor	eax, eax
jmp	$LN17@isDistinct
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pTabList$[ebp]
mov	ecx, DWORD PTR [eax+edx+56]
mov	DWORD PTR _iBase$[ebp], ecx
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR [ecx+eax+24]
mov	DWORD PTR _pTab$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN15@isDistinct
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pDistinct$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN13@isDistinct
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pDistinct$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _p$2[ebp], eax
mov	ecx, DWORD PTR _p$2[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 154				
jne	SHORT $LN12@isDistinct
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+28]
cmp	ecx, DWORD PTR _iBase$[ebp]
jne	SHORT $LN12@isDistinct
mov	edx, DWORD PTR _p$2[ebp]
movsx	eax, WORD PTR [edx+32]
test	eax, eax
jge	SHORT $LN12@isDistinct
mov	eax, 1
jmp	$LN17@isDistinct
jmp	SHORT $LN14@isDistinct
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN11@isDistinct
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN9@isDistinct
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, BYTE PTR [edx+54]
test	eax, eax
jne	SHORT $LN8@isDistinct
jmp	SHORT $LN10@isDistinct
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN7@isDistinct
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN5@isDistinct
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
mov	cx, WORD PTR [edx+eax*2]
mov	WORD PTR _iCol$3[ebp], cx
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
push	2
push	-1
push	-1
movsx	eax, WORD PTR _iCol$3[ebp]
push	eax
mov	ecx, DWORD PTR _iBase$[ebp]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
push	edx
call	_findTerm
add	esp, 28					
test	eax, eax
jne	SHORT $LN4@isDistinct
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _iBase$[ebp]
push	edx
mov	eax, DWORD PTR _pDistinct$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_findIndexCol
add	esp, 20					
mov	DWORD PTR _iIdxCol$1[ebp], eax
cmp	DWORD PTR _iIdxCol$1[ebp], 0
jl	SHORT $LN2@isDistinct
movsx	edx, WORD PTR _iCol$3[ebp]
imul	eax, edx, 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+eax+20]
test	eax, eax
jne	SHORT $LN4@isDistinct
jmp	SHORT $LN5@isDistinct
jmp	$LN6@isDistinct
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	DWORD PTR _i$[ebp], edx
jne	SHORT $LN1@isDistinct
mov	eax, 1
jmp	SHORT $LN17@isDistinct
jmp	$LN10@isDistinct
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findIndexCol PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _iCol$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _zColl$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@findIndexC
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	$LN3@findIndexC
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _p$2[ebp], eax
mov	edx, DWORD PTR _p$2[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 154				
jne	SHORT $LN2@findIndexC
mov	ecx, DWORD PTR _p$2[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _iCol$[ebp]
movsx	ecx, WORD PTR [ecx+eax*2]
cmp	edx, ecx
jne	SHORT $LN2@findIndexC
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR _iBase$[ebp]
jne	SHORT $LN2@findIndexC
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$1[ebp], eax
cmp	DWORD PTR _pColl$1[ebp], 0
je	SHORT $LN2@findIndexC
mov	eax, DWORD PTR _zColl$[ebp]
push	eax
mov	ecx, DWORD PTR _pColl$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN2@findIndexC
mov	eax, DWORD PTR _i$[ebp]
jmp	SHORT $LN6@findIndexC
jmp	$LN4@findIndexC
or	eax, -1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprAnalyzeOrTerm PROC
push	ebp
mov	ebp, esp
sub	esp, 144				
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
imul	eax, DWORD PTR _idxTerm$[ebp], 48
mov	ecx, DWORD PTR _pWC$[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pTerm$[ebp], eax
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pExpr$[ebp], eax
push	416					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pOrInfo$[ebp], eax
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR _pOrInfo$[ebp]
mov	DWORD PTR [edx+12], eax
cmp	DWORD PTR _pOrInfo$[ebp], 0
jne	SHORT $LN44@exprAnalyz
jmp	$LN45@exprAnalyz
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, BYTE PTR [ecx+20]
or	edx, 16					
mov	eax, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [eax+20], dl
mov	ecx, DWORD PTR _pOrInfo$[ebp]
mov	DWORD PTR _pOrWc$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
push	edx
mov	eax, DWORD PTR _pOrWc$[ebp]
push	eax
call	_whereClauseInit
add	esp, 8
push	71					
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pOrWc$[ebp]
push	edx
call	_whereSplit
add	esp, 12					
mov	eax, DWORD PTR _pOrWc$[ebp]
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
call	_exprAnalyzeAll
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN43@exprAnalyz
jmp	$LN45@exprAnalyz
mov	DWORD PTR _indexable$[ebp], -1
mov	DWORD PTR _indexable$[ebp+4], -1
mov	DWORD PTR _chngToIN$[ebp], -1
mov	DWORD PTR _chngToIN$[ebp+4], -1
mov	ecx, DWORD PTR _pOrWc$[ebp]
mov	edx, DWORD PTR [ecx+12]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pOrWc$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pOrTerm$[ebp], ecx
jmp	SHORT $LN42@exprAnalyz
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pOrTerm$[ebp]
add	eax, 48					
mov	DWORD PTR _pOrTerm$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	$LN40@exprAnalyz
mov	ecx, DWORD PTR _indexable$[ebp]
or	ecx, DWORD PTR _indexable$[ebp+4]
je	$LN40@exprAnalyz
mov	edx, DWORD PTR _pOrTerm$[ebp]
movzx	eax, WORD PTR [edx+18]
and	eax, 255				
jne	$LN39@exprAnalyz
xorpd	xmm0, xmm0
movlpd	QWORD PTR _chngToIN$[ebp], xmm0
push	408					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pAndInfo$9[ebp], eax
cmp	DWORD PTR _pAndInfo$9[ebp], 0
je	$LN38@exprAnalyz
xorpd	xmm0, xmm0
movlpd	QWORD PTR _b$7[ebp], xmm0
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	eax, DWORD PTR _pAndInfo$9[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _pOrTerm$[ebp]
movzx	edx, BYTE PTR [ecx+20]
or	edx, 32					
mov	eax, DWORD PTR _pOrTerm$[ebp]
mov	BYTE PTR [eax+20], dl
mov	ecx, 512				
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, DWORD PTR _pAndInfo$9[ebp]
mov	DWORD PTR _pAndWC$17[ebp], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pAndWC$17[ebp]
push	eax
call	_whereClauseInit
add	esp, 8
push	72					
mov	ecx, DWORD PTR _pOrTerm$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pAndWC$17[ebp]
push	eax
call	_whereSplit
add	esp, 12					
mov	ecx, DWORD PTR _pAndWC$17[ebp]
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
call	_exprAnalyzeAll
add	esp, 8
mov	eax, DWORD PTR _pAndWC$17[ebp]
mov	ecx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN37@exprAnalyz
mov	DWORD PTR _j$10[ebp], 0
mov	ecx, DWORD PTR _pAndWC$17[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pAndTerm$15[ebp], edx
jmp	SHORT $LN36@exprAnalyz
mov	eax, DWORD PTR _j$10[ebp]
add	eax, 1
mov	DWORD PTR _j$10[ebp], eax
mov	ecx, DWORD PTR _pAndTerm$15[ebp]
add	ecx, 48					
mov	DWORD PTR _pAndTerm$15[ebp], ecx
mov	edx, DWORD PTR _pAndWC$17[ebp]
mov	eax, DWORD PTR _j$10[ebp]
cmp	eax, DWORD PTR [edx+12]
jge	SHORT $LN37@exprAnalyz
mov	ecx, DWORD PTR _pAndTerm$15[ebp]
mov	edx, DWORD PTR [ecx]
movzx	eax, BYTE PTR [edx]
push	eax
call	_allowedOp
add	esp, 4
test	eax, eax
je	SHORT $LN33@exprAnalyz
mov	ecx, DWORD PTR _pAndTerm$15[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
add	eax, 68					
push	eax
call	_getMask
add	esp, 8
or	eax, DWORD PTR _b$7[ebp]
or	edx, DWORD PTR _b$7[ebp+4]
mov	DWORD PTR _b$7[ebp], eax
mov	DWORD PTR _b$7[ebp+4], edx
jmp	SHORT $LN35@exprAnalyz
mov	ecx, DWORD PTR _indexable$[ebp]
and	ecx, DWORD PTR _b$7[ebp]
mov	edx, DWORD PTR _indexable$[ebp+4]
and	edx, DWORD PTR _b$7[ebp+4]
mov	DWORD PTR _indexable$[ebp], ecx
mov	DWORD PTR _indexable$[ebp+4], edx
jmp	$LN32@exprAnalyz
mov	eax, DWORD PTR _pOrTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 8
je	SHORT $LN31@exprAnalyz
jmp	$LN32@exprAnalyz
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 68					
push	ecx
call	_getMask
add	esp, 8
mov	DWORD PTR _b$14[ebp], eax
mov	DWORD PTR _b$14[ebp+4], edx
mov	edx, DWORD PTR _pOrTerm$[ebp]
movzx	eax, BYTE PTR [edx+20]
and	eax, 2
je	SHORT $LN29@exprAnalyz
mov	ecx, DWORD PTR _pOrTerm$[ebp]
imul	edx, DWORD PTR [ecx+4], 48
mov	eax, DWORD PTR _pOrWc$[ebp]
add	edx, DWORD PTR [eax+20]
mov	DWORD PTR _pOther$2[ebp], edx
mov	ecx, DWORD PTR _pOther$2[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
add	eax, 68					
push	eax
call	_getMask
add	esp, 8
or	eax, DWORD PTR _b$14[ebp]
or	edx, DWORD PTR _b$14[ebp+4]
mov	DWORD PTR _b$14[ebp], eax
mov	DWORD PTR _b$14[ebp+4], edx
mov	ecx, DWORD PTR _indexable$[ebp]
and	ecx, DWORD PTR _b$14[ebp]
mov	edx, DWORD PTR _indexable$[ebp+4]
and	edx, DWORD PTR _b$14[ebp+4]
mov	DWORD PTR _indexable$[ebp], ecx
mov	DWORD PTR _indexable$[ebp+4], edx
mov	eax, DWORD PTR _pOrTerm$[ebp]
movzx	ecx, WORD PTR [eax+18]
and	ecx, 2
jne	SHORT $LN28@exprAnalyz
xorpd	xmm0, xmm0
movlpd	QWORD PTR _chngToIN$[ebp], xmm0
jmp	SHORT $LN32@exprAnalyz
mov	edx, DWORD PTR _chngToIN$[ebp]
and	edx, DWORD PTR _b$14[ebp]
mov	eax, DWORD PTR _chngToIN$[ebp+4]
and	eax, DWORD PTR _b$14[ebp+4]
mov	DWORD PTR _chngToIN$[ebp], edx
mov	DWORD PTR _chngToIN$[ebp+4], eax
jmp	$LN41@exprAnalyz
mov	ecx, DWORD PTR _pOrInfo$[ebp]
mov	edx, DWORD PTR _indexable$[ebp]
mov	DWORD PTR [ecx+408], edx
mov	eax, DWORD PTR _indexable$[ebp+4]
mov	DWORD PTR [ecx+412], eax
mov	ecx, DWORD PTR _indexable$[ebp]
or	ecx, DWORD PTR _indexable$[ebp+4]
jne	SHORT $LN47@exprAnalyz
mov	DWORD PTR tv210[ebp], 0
jmp	SHORT $LN48@exprAnalyz
mov	DWORD PTR tv210[ebp], 256		
mov	edx, DWORD PTR _pTerm$[ebp]
mov	ax, WORD PTR tv210[ebp]
mov	WORD PTR [edx+18], ax
mov	ecx, DWORD PTR _chngToIN$[ebp]
or	ecx, DWORD PTR _chngToIN$[ebp+4]
je	$LN45@exprAnalyz
mov	DWORD PTR _okToChngToIN$18[ebp], 0
mov	DWORD PTR _iColumn$5[ebp], -1
mov	DWORD PTR _iCursor$11[ebp], -1
mov	DWORD PTR _j$12[ebp], 0
mov	DWORD PTR _j$12[ebp], 0
jmp	SHORT $LN25@exprAnalyz
mov	edx, DWORD PTR _j$12[ebp]
add	edx, 1
mov	DWORD PTR _j$12[ebp], edx
cmp	DWORD PTR _j$12[ebp], 2
jge	$LN23@exprAnalyz
cmp	DWORD PTR _okToChngToIN$18[ebp], 0
jne	$LN23@exprAnalyz
mov	eax, DWORD PTR _pOrWc$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pOrTerm$[ebp], ecx
mov	edx, DWORD PTR _pOrWc$[ebp]
mov	eax, DWORD PTR [edx+12]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN22@exprAnalyz
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pOrTerm$[ebp]
add	edx, 48					
mov	DWORD PTR _pOrTerm$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN20@exprAnalyz
mov	eax, DWORD PTR _pOrTerm$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, -65				
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	BYTE PTR [edx+20], cl
mov	eax, DWORD PTR _pOrTerm$[ebp]
mov	ecx, DWORD PTR [eax+8]
cmp	ecx, DWORD PTR _iCursor$11[ebp]
jne	SHORT $LN19@exprAnalyz
jmp	SHORT $LN21@exprAnalyz
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 68					
push	ecx
call	_getMask
add	esp, 8
and	eax, DWORD PTR _chngToIN$[ebp]
and	edx, DWORD PTR _chngToIN$[ebp+4]
mov	DWORD PTR tv508[ebp], eax
mov	DWORD PTR tv508[ebp+4], edx
mov	edx, DWORD PTR tv508[ebp]
or	edx, DWORD PTR tv508[ebp+4]
jne	SHORT $LN18@exprAnalyz
jmp	SHORT $LN21@exprAnalyz
mov	eax, DWORD PTR _pOrTerm$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _iColumn$5[ebp], ecx
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _iCursor$11[ebp], eax
jmp	SHORT $LN20@exprAnalyz
jmp	$LN21@exprAnalyz
cmp	DWORD PTR _i$[ebp], 0
jge	SHORT $LN17@exprAnalyz
jmp	$LN23@exprAnalyz
mov	DWORD PTR _okToChngToIN$18[ebp], 1
jmp	SHORT $LN16@exprAnalyz
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pOrTerm$[ebp]
add	edx, 48					
mov	DWORD PTR _pOrTerm$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	$LN14@exprAnalyz
cmp	DWORD PTR _okToChngToIN$18[ebp], 0
je	$LN14@exprAnalyz
mov	eax, DWORD PTR _pOrTerm$[ebp]
mov	ecx, DWORD PTR [eax+8]
cmp	ecx, DWORD PTR _iCursor$11[ebp]
je	SHORT $LN13@exprAnalyz
mov	edx, DWORD PTR _pOrTerm$[ebp]
movzx	eax, BYTE PTR [edx+20]
and	eax, -65				
mov	ecx, DWORD PTR _pOrTerm$[ebp]
mov	BYTE PTR [ecx+20], al
jmp	SHORT $LN12@exprAnalyz
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	eax, DWORD PTR [edx+12]
cmp	eax, DWORD PTR _iColumn$5[ebp]
je	SHORT $LN11@exprAnalyz
mov	DWORD PTR _okToChngToIN$18[ebp], 0
jmp	SHORT $LN12@exprAnalyz
mov	ecx, DWORD PTR _pOrTerm$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_sqlite3ExprAffinity
add	esp, 4
movsx	ecx, al
mov	DWORD PTR _affRight$4[ebp], ecx
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3ExprAffinity
add	esp, 4
movsx	edx, al
mov	DWORD PTR _affLeft$1[ebp], edx
cmp	DWORD PTR _affRight$4[ebp], 0
je	SHORT $LN9@exprAnalyz
mov	eax, DWORD PTR _affRight$4[ebp]
cmp	eax, DWORD PTR _affLeft$1[ebp]
je	SHORT $LN9@exprAnalyz
mov	DWORD PTR _okToChngToIN$18[ebp], 0
jmp	SHORT $LN12@exprAnalyz
mov	ecx, DWORD PTR _pOrTerm$[ebp]
movzx	edx, BYTE PTR [ecx+20]
or	edx, 64					
mov	eax, DWORD PTR _pOrTerm$[ebp]
mov	BYTE PTR [eax+20], dl
jmp	$LN15@exprAnalyz
jmp	$LN24@exprAnalyz
cmp	DWORD PTR _okToChngToIN$18[ebp], 0
je	$LN45@exprAnalyz
mov	DWORD PTR _pList$13[ebp], 0
mov	DWORD PTR _pLeft$3[ebp], 0
mov	ecx, DWORD PTR _pOrWc$[ebp]
mov	edx, DWORD PTR [ecx+12]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pOrWc$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pOrTerm$[ebp], ecx
jmp	SHORT $LN6@exprAnalyz
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pOrTerm$[ebp]
add	eax, 48					
mov	DWORD PTR _pOrTerm$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN4@exprAnalyz
mov	ecx, DWORD PTR _pOrTerm$[ebp]
movzx	edx, BYTE PTR [ecx+20]
and	edx, 64					
jne	SHORT $LN3@exprAnalyz
jmp	SHORT $LN5@exprAnalyz
push	0
mov	eax, DWORD PTR _pOrTerm$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pDup$8[ebp], eax
mov	ecx, DWORD PTR _pDup$8[ebp]
push	ecx
mov	edx, DWORD PTR _pList$13[ebp]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$13[ebp], eax
mov	edx, DWORD PTR _pOrTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pLeft$3[ebp], ecx
jmp	SHORT $LN5@exprAnalyz
push	0
mov	edx, DWORD PTR _pLeft$3[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pDup$8[ebp], eax
push	0
push	0
mov	ecx, DWORD PTR _pDup$8[ebp]
push	ecx
push	75					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNew$16[ebp], eax
cmp	DWORD PTR _pNew$16[ebp], 0
je	SHORT $LN2@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pNew$16[ebp]
push	ecx
call	_transferJoinMarkings
add	esp, 8
mov	edx, DWORD PTR _pNew$16[ebp]
mov	eax, DWORD PTR _pList$13[ebp]
mov	DWORD PTR [edx+20], eax
push	3
mov	ecx, DWORD PTR _pNew$16[ebp]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
push	edx
call	_whereClauseInsert
add	esp, 12					
mov	DWORD PTR _idxNew$6[ebp], eax
mov	eax, DWORD PTR _idxNew$6[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
call	_exprAnalyze
add	esp, 12					
imul	eax, DWORD PTR _idxTerm$[ebp], 48
mov	ecx, DWORD PTR _pWC$[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pTerm$[ebp], eax
imul	edx, DWORD PTR _idxNew$6[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	eax, DWORD PTR _idxTerm$[ebp]
mov	DWORD PTR [ecx+edx+4], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [ecx+21], 1
jmp	SHORT $LN1@exprAnalyz
mov	edx, DWORD PTR _pList$13[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	ecx, 2048				
mov	edx, DWORD PTR _pTerm$[ebp]
mov	WORD PTR [edx+18], cx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_transferJoinMarkings PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pDerived$[ebp], 0
je	SHORT $LN2@transferJo
mov	eax, DWORD PTR _pBase$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 1
mov	edx, DWORD PTR _pDerived$[ebp]
or	ecx, DWORD PTR [edx+4]
mov	eax, DWORD PTR _pDerived$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	ecx, DWORD PTR _pDerived$[ebp]
mov	edx, DWORD PTR _pBase$[ebp]
mov	ax, WORD PTR [edx+36]
mov	WORD PTR [ecx+36], ax
pop	ebp
ret	0
ENDP
_isMatchOfColumn PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 153				
je	SHORT $LN4@isMatchOfC
xor	eax, eax
jmp	SHORT $LN5@isMatchOfC
push	OFFSET $SG117234
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN3@isMatchOfC
xor	eax, eax
jmp	SHORT $LN5@isMatchOfC
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pList$[ebp], edx
mov	eax, DWORD PTR _pList$[ebp]
cmp	DWORD PTR [eax], 2
je	SHORT $LN2@isMatchOfC
xor	eax, eax
jmp	SHORT $LN5@isMatchOfC
mov	ecx, 24					
shl	ecx, 0
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 154				
je	SHORT $LN1@isMatchOfC
xor	eax, eax
jmp	SHORT $LN5@isMatchOfC
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isLikeOrGlob PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	DWORD PTR _z$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _pVal$[ebp], 0
lea	edx, DWORD PTR _wc$[ebp]
push	edx
mov	eax, DWORD PTR _pnoCase$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3IsLikeFunction
add	esp, 16					
test	eax, eax
jne	SHORT $LN15@isLikeOrGl
xor	eax, eax
jmp	$LN16@isLikeOrGl
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pList$[ebp], ecx
mov	edx, 24					
shl	edx, 0
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _pLeft$[ebp], edx
mov	eax, DWORD PTR _pLeft$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
jne	SHORT $LN13@isLikeOrGl
mov	edx, DWORD PTR _pLeft$[ebp]
push	edx
call	_sqlite3ExprAffinity
add	esp, 4
movsx	eax, al
cmp	eax, 97					
jne	SHORT $LN13@isLikeOrGl
mov	ecx, DWORD PTR _pLeft$[ebp]
mov	edx, DWORD PTR [ecx+44]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN14@isLikeOrGl
xor	eax, eax
jmp	$LN16@isLikeOrGl
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pRight$[ebp], eax
mov	eax, DWORD PTR _pRight$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _op$[ebp], ecx
cmp	DWORD PTR _op$[ebp], 135		
jne	SHORT $LN12@isLikeOrGl
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+476]
mov	DWORD PTR _pReprepare$1[ebp], eax
mov	ecx, DWORD PTR _pRight$[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	DWORD PTR _iCol$3[ebp], edx
push	98					
mov	eax, DWORD PTR _iCol$3[ebp]
push	eax
mov	ecx, DWORD PTR _pReprepare$1[ebp]
push	ecx
call	_sqlite3VdbeGetBoundValue
add	esp, 12					
mov	DWORD PTR _pVal$[ebp], eax
cmp	DWORD PTR _pVal$[ebp], 0
je	SHORT $LN11@isLikeOrGl
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 3
jne	SHORT $LN11@isLikeOrGl
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _iCol$3[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3VdbeSetVarmask
add	esp, 8
jmp	SHORT $LN10@isLikeOrGl
cmp	DWORD PTR _op$[ebp], 97			
jne	SHORT $LN10@isLikeOrGl
mov	ecx, DWORD PTR _pRight$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _z$[ebp], edx
cmp	DWORD PTR _z$[ebp], 0
je	$LN8@isLikeOrGl
mov	DWORD PTR _cnt$[ebp], 0
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _cnt$[ebp]
movsx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN6@isLikeOrGl
mov	edx, 1
imul	eax, edx, 0
movsx	ecx, BYTE PTR _wc$[ebp+eax]
cmp	DWORD PTR _c$[ebp], ecx
je	SHORT $LN6@isLikeOrGl
mov	edx, 1
shl	edx, 0
movsx	eax, BYTE PTR _wc$[ebp+edx]
cmp	DWORD PTR _c$[ebp], eax
je	SHORT $LN6@isLikeOrGl
mov	ecx, 1
shl	ecx, 1
movsx	edx, BYTE PTR _wc$[ebp+ecx]
cmp	DWORD PTR _c$[ebp], edx
je	SHORT $LN6@isLikeOrGl
mov	eax, DWORD PTR _cnt$[ebp]
add	eax, 1
mov	DWORD PTR _cnt$[ebp], eax
jmp	SHORT $LN7@isLikeOrGl
cmp	DWORD PTR _cnt$[ebp], 0
je	$LN5@isLikeOrGl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _cnt$[ebp]
movzx	edx, BYTE PTR [ecx-1]
cmp	edx, 255				
je	$LN5@isLikeOrGl
mov	eax, 1
imul	ecx, eax, 0
movsx	edx, BYTE PTR _wc$[ebp+ecx]
cmp	DWORD PTR _c$[ebp], edx
jne	SHORT $LN18@isLikeOrGl
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _cnt$[ebp]
movsx	ecx, BYTE PTR [eax+1]
test	ecx, ecx
jne	SHORT $LN18@isLikeOrGl
mov	DWORD PTR tv180[ebp], 1
jmp	SHORT $LN19@isLikeOrGl
mov	DWORD PTR tv180[ebp], 0
mov	edx, DWORD PTR _pisComplete$[ebp]
mov	eax, DWORD PTR tv180[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
push	97					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pPrefix$5[ebp], eax
cmp	DWORD PTR _pPrefix$5[ebp], 0
je	SHORT $LN4@isLikeOrGl
mov	eax, DWORD PTR _pPrefix$5[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _cnt$[ebp]
mov	BYTE PTR [ecx+edx], 0
mov	eax, DWORD PTR _ppPrefix$[ebp]
mov	ecx, DWORD PTR _pPrefix$5[ebp]
mov	DWORD PTR [eax], ecx
cmp	DWORD PTR _op$[ebp], 135		
jne	$LN3@isLikeOrGl
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$4[ebp], eax
mov	ecx, DWORD PTR _pRight$[ebp]
movsx	edx, WORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _v$4[ebp]
push	eax
call	_sqlite3VdbeSetVarmask
add	esp, 8
mov	ecx, DWORD PTR _pisComplete$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN3@isLikeOrGl
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _pRight$[ebp]
mov	ecx, DWORD PTR [eax+8]
movsx	edx, BYTE PTR [ecx+edx]
test	edx, edx
je	SHORT $LN3@isLikeOrGl
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$2[ebp], eax
mov	ecx, DWORD PTR _r1$2[ebp]
push	ecx
mov	edx, DWORD PTR _pRight$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTarget
add	esp, 12					
push	0
mov	ecx, DWORD PTR _v$4[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
sub	eax, 1
push	eax
mov	edx, DWORD PTR _v$4[ebp]
push	edx
call	_sqlite3VdbeChangeP3
add	esp, 12					
mov	eax, DWORD PTR _r1$2[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	SHORT $LN8@isLikeOrGl
mov	DWORD PTR _z$[ebp], 0
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3ValueFree
add	esp, 4
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN20@isLikeOrGl
mov	DWORD PTR tv216[ebp], 1
jmp	SHORT $LN21@isLikeOrGl
mov	DWORD PTR tv216[ebp], 0
mov	eax, DWORD PTR tv216[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprAnalyzeAll PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+12]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN3@exprAnalyz
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN4@exprAnalyz
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
call	_exprAnalyze
add	esp, 12					
jmp	SHORT $LN2@exprAnalyz
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprAnalyze PROC
push	ebp
mov	ebp, esp
sub	esp, 216				
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pWInfo$[ebp], ecx
xorpd	xmm0, xmm0
movlpd	QWORD PTR _extraRight$[ebp], xmm0
mov	DWORD PTR _pStr1$[ebp], 0
mov	DWORD PTR _isComplete$[ebp], 0
mov	DWORD PTR _noCase$[ebp], 0
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN30@exprAnalyz
jmp	$LN31@exprAnalyz
imul	edx, DWORD PTR _idxTerm$[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
add	edx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], edx
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 68					
mov	DWORD PTR _pMaskSet$[ebp], ecx
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pExpr$[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_exprTableUsage
add	esp, 8
mov	DWORD PTR _prereqLeft$[ebp], eax
mov	DWORD PTR _prereqLeft$[ebp+4], edx
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _op$[ebp], edx
cmp	DWORD PTR _op$[ebp], 75			
jne	SHORT $LN29@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 2048				
je	SHORT $LN28@exprAnalyz
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprSelectTableUsage
add	esp, 8
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+32], eax
mov	DWORD PTR [ecx+36], edx
jmp	SHORT $LN27@exprAnalyz
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprListTableUsage
add	esp, 8
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+32], eax
mov	DWORD PTR [ecx+36], edx
jmp	SHORT $LN26@exprAnalyz
cmp	DWORD PTR _op$[ebp], 76			
jne	SHORT $LN25@exprAnalyz
mov	edx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [edx+32], 0
mov	DWORD PTR [edx+36], 0
jmp	SHORT $LN26@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pMaskSet$[ebp]
push	edx
call	_exprTableUsage
add	esp, 8
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+32], eax
mov	DWORD PTR [ecx+36], edx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_exprTableUsage
add	esp, 8
mov	DWORD PTR _prereqAll$[ebp], eax
mov	DWORD PTR _prereqAll$[ebp+4], edx
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 1
je	SHORT $LN23@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
movsx	ecx, WORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _pMaskSet$[ebp]
push	edx
call	_getMask
add	esp, 8
mov	DWORD PTR _x$6[ebp], eax
mov	DWORD PTR _x$6[ebp+4], edx
mov	eax, DWORD PTR _prereqAll$[ebp]
or	eax, DWORD PTR _x$6[ebp]
mov	ecx, DWORD PTR _prereqAll$[ebp+4]
or	ecx, DWORD PTR _x$6[ebp+4]
mov	DWORD PTR _prereqAll$[ebp], eax
mov	DWORD PTR _prereqAll$[ebp+4], ecx
mov	edx, DWORD PTR _x$6[ebp]
sub	edx, 1
mov	eax, DWORD PTR _x$6[ebp+4]
sbb	eax, 0
mov	DWORD PTR _extraRight$[ebp], edx
mov	DWORD PTR _extraRight$[ebp+4], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR _prereqAll$[ebp]
mov	DWORD PTR [ecx+40], edx
mov	eax, DWORD PTR _prereqAll$[ebp+4]
mov	DWORD PTR [ecx+44], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+8], -1
mov	edx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [edx+4], -1
xor	eax, eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	WORD PTR [ecx+18], ax
mov	edx, DWORD PTR _op$[ebp]
push	edx
call	_allowedOp
add	esp, 4
test	eax, eax
je	$LN22@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pLeft$24[ebp], eax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pRight$8[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx+32]
and	edx, DWORD PTR _prereqLeft$[ebp]
mov	eax, DWORD PTR [ecx+36]
and	eax, DWORD PTR _prereqLeft$[ebp+4]
mov	DWORD PTR tv622[ebp], edx
mov	DWORD PTR tv622[ebp+4], eax
mov	ecx, DWORD PTR tv622[ebp]
or	ecx, DWORD PTR tv622[ebp+4]
jne	SHORT $LN33@exprAnalyz
mov	DWORD PTR tv163[ebp], 4095		
jmp	SHORT $LN34@exprAnalyz
mov	DWORD PTR tv163[ebp], 1024		
mov	dx, WORD PTR tv163[ebp]
mov	WORD PTR _opMask$21[ebp], dx
mov	eax, DWORD PTR _pLeft$24[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
jne	SHORT $LN21@exprAnalyz
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR _pLeft$24[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pLeft$24[ebp]
movsx	eax, WORD PTR [edx+32]
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _op$[ebp]
push	edx
call	_operatorMask
add	esp, 4
movzx	eax, ax
movzx	ecx, WORD PTR _opMask$21[ebp]
and	eax, ecx
mov	edx, DWORD PTR _pTerm$[ebp]
mov	WORD PTR [edx+18], ax
cmp	DWORD PTR _pRight$8[ebp], 0
je	$LN20@exprAnalyz
mov	eax, DWORD PTR _pRight$8[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
jne	$LN20@exprAnalyz
xor	edx, edx
mov	WORD PTR _eExtraOp$23[ebp], dx
mov	eax, DWORD PTR _pTerm$[ebp]
cmp	DWORD PTR [eax+8], 0
jl	$LN19@exprAnalyz
push	0
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pDup$25[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN18@exprAnalyz
mov	edx, DWORD PTR _pDup$25[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
jmp	$LN31@exprAnalyz
push	3
mov	ecx, DWORD PTR _pDup$25[ebp]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
push	edx
call	_whereClauseInsert
add	esp, 12					
mov	DWORD PTR _idxNew$11[ebp], eax
cmp	DWORD PTR _idxNew$11[ebp], 0
jne	SHORT $LN17@exprAnalyz
jmp	$LN31@exprAnalyz
imul	eax, DWORD PTR _idxNew$11[ebp], 48
mov	ecx, DWORD PTR _pWC$[ebp]
add	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _pNew$27[ebp], eax
mov	edx, DWORD PTR _pNew$27[ebp]
mov	eax, DWORD PTR _idxTerm$[ebp]
mov	DWORD PTR [edx+4], eax
imul	ecx, DWORD PTR _idxTerm$[ebp], 48
mov	edx, DWORD PTR _pWC$[ebp]
add	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _pTerm$[ebp], ecx
mov	eax, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [eax+21], 1
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, BYTE PTR [ecx+20]
or	edx, 8
mov	eax, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [eax+20], dl
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 79					
jne	SHORT $LN16@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 1
jne	SHORT $LN16@exprAnalyz
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, WORD PTR [edx+60]
and	eax, 512				
jne	SHORT $LN16@exprAnalyz
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
or	edx, 1024				
mov	eax, DWORD PTR _pTerm$[ebp]
mov	WORD PTR [eax+18], dx
mov	ecx, 1024				
mov	WORD PTR _eExtraOp$23[ebp], cx
jmp	SHORT $LN15@exprAnalyz
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR _pDup$25[ebp], edx
mov	eax, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR _pNew$27[ebp], eax
mov	ecx, DWORD PTR _pDup$25[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_exprCommute
add	esp, 8
mov	eax, DWORD PTR _pDup$25[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pLeft$24[ebp], eax
mov	edx, DWORD PTR _pNew$27[ebp]
mov	eax, DWORD PTR _pLeft$24[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pLeft$24[ebp]
movsx	eax, WORD PTR [edx+32]
mov	ecx, DWORD PTR _pNew$27[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _prereqLeft$[ebp]
or	edx, DWORD PTR _extraRight$[ebp]
mov	eax, DWORD PTR _prereqLeft$[ebp+4]
or	eax, DWORD PTR _extraRight$[ebp+4]
mov	ecx, DWORD PTR _pNew$27[ebp]
mov	DWORD PTR [ecx+32], edx
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pNew$27[ebp]
mov	eax, DWORD PTR _prereqAll$[ebp]
mov	DWORD PTR [edx+40], eax
mov	ecx, DWORD PTR _prereqAll$[ebp+4]
mov	DWORD PTR [edx+44], ecx
mov	edx, DWORD PTR _pDup$25[ebp]
movzx	eax, BYTE PTR [edx]
push	eax
call	_operatorMask
add	esp, 4
movzx	ecx, ax
movzx	edx, WORD PTR _eExtraOp$23[ebp]
add	ecx, edx
movzx	eax, WORD PTR _opMask$21[ebp]
and	ecx, eax
mov	edx, DWORD PTR _pNew$27[ebp]
mov	WORD PTR [edx+18], cx
jmp	$LN14@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 74					
jne	$LN13@exprAnalyz
mov	edx, DWORD PTR _pWC$[ebp]
movzx	eax, BYTE PTR [edx+8]
cmp	eax, 72					
jne	$LN13@exprAnalyz
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pList$3[ebp], edx
mov	DWORD PTR _i$22[ebp], 0
jmp	SHORT $LN12@exprAnalyz
mov	eax, DWORD PTR _i$22[ebp]
add	eax, 1
mov	DWORD PTR _i$22[ebp], eax
cmp	DWORD PTR _i$22[ebp], 2
jge	$LN10@exprAnalyz
push	0
push	0
imul	ecx, DWORD PTR _i$22[ebp], 24
mov	edx, DWORD PTR _pList$3[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
push	eax
push	0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
push	eax
mov	eax, DWORD PTR _i$22[ebp]
movzx	ecx, BYTE PTR ?ops@?BB@??exprAnalyze@@9@9[eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNewExpr$14[ebp], eax
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pNewExpr$14[ebp]
push	ecx
call	_transferJoinMarkings
add	esp, 8
push	3
mov	edx, DWORD PTR _pNewExpr$14[ebp]
push	edx
mov	eax, DWORD PTR _pWC$[ebp]
push	eax
call	_whereClauseInsert
add	esp, 12					
mov	DWORD PTR _idxNew$9[ebp], eax
mov	ecx, DWORD PTR _idxNew$9[ebp]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
call	_exprAnalyze
add	esp, 12					
imul	ecx, DWORD PTR _idxTerm$[ebp], 48
mov	edx, DWORD PTR _pWC$[ebp]
add	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _pTerm$[ebp], ecx
imul	eax, DWORD PTR _idxNew$9[ebp], 48
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	ecx, DWORD PTR _idxTerm$[ebp]
mov	DWORD PTR [edx+eax+4], ecx
jmp	$LN11@exprAnalyz
mov	edx, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [edx+21], 2
jmp	SHORT $LN14@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 71					
jne	SHORT $LN14@exprAnalyz
mov	edx, DWORD PTR _idxTerm$[ebp]
push	edx
mov	eax, DWORD PTR _pWC$[ebp]
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
call	_exprAnalyzeOrTerm
add	esp, 12					
imul	edx, DWORD PTR _idxTerm$[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
add	edx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], edx
mov	ecx, DWORD PTR _pWC$[ebp]
movzx	edx, BYTE PTR [ecx+8]
cmp	edx, 72					
jne	$LN7@exprAnalyz
lea	eax, DWORD PTR _noCase$[ebp]
push	eax
lea	ecx, DWORD PTR _isComplete$[ebp]
push	ecx
lea	edx, DWORD PTR _pStr1$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_isLikeOrGlob
add	esp, 20					
test	eax, eax
je	$LN7@exprAnalyz
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, 24					
shl	ecx, 0
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _pLeft$10[ebp], eax
push	0
mov	ecx, DWORD PTR _pStr1$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pStr2$18[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	SHORT $LN6@exprAnalyz
mov	edx, DWORD PTR _pStr2$18[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _pStr2$18[ebp]
mov	edx, DWORD PTR [ecx+8]
lea	eax, DWORD PTR [edx+eax-1]
mov	DWORD PTR _pC$12[ebp], eax
mov	ecx, DWORD PTR _pC$12[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR _c$28[ebp], dl
cmp	DWORD PTR _noCase$[ebp], 0
je	SHORT $LN5@exprAnalyz
movzx	eax, BYTE PTR _c$28[ebp]
cmp	eax, 64					
jne	SHORT $LN4@exprAnalyz
mov	DWORD PTR _isComplete$[ebp], 0
movzx	ecx, BYTE PTR _c$28[ebp]
mov	dl, BYTE PTR _sqlite3UpperToLower[ecx]
mov	BYTE PTR _c$28[ebp], dl
movzx	eax, BYTE PTR _c$28[ebp]
add	eax, 1
mov	ecx, DWORD PTR _pC$12[ebp]
mov	BYTE PTR [ecx], al
cmp	DWORD PTR _noCase$[ebp], 0
je	SHORT $LN35@exprAnalyz
mov	DWORD PTR tv348[ebp], OFFSET $SG117420
jmp	SHORT $LN36@exprAnalyz
mov	DWORD PTR tv348[ebp], OFFSET $SG117421
mov	edx, DWORD PTR tv348[ebp]
mov	DWORD PTR _sCollSeqName$4[ebp], edx
mov	DWORD PTR _sCollSeqName$4[ebp+4], 6
push	0
mov	eax, DWORD PTR _pLeft$10[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pNewExpr1$19[ebp], eax
push	0
mov	edx, DWORD PTR _pStr1$[ebp]
push	edx
lea	eax, DWORD PTR _sCollSeqName$4[ebp]
push	eax
mov	ecx, DWORD PTR _pNewExpr1$19[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprAddCollateToken
add	esp, 12					
push	eax
push	83					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNewExpr1$19[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pNewExpr1$19[ebp]
push	edx
call	_transferJoinMarkings
add	esp, 8
push	3
mov	eax, DWORD PTR _pNewExpr1$19[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
call	_whereClauseInsert
add	esp, 12					
mov	DWORD PTR _idxNew1$16[ebp], eax
mov	edx, DWORD PTR _idxNew1$16[ebp]
push	edx
mov	eax, DWORD PTR _pWC$[ebp]
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
call	_exprAnalyze
add	esp, 12					
push	0
mov	edx, DWORD PTR _pLeft$10[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pNewExpr2$20[ebp], eax
push	0
mov	ecx, DWORD PTR _pStr2$18[ebp]
push	ecx
lea	edx, DWORD PTR _sCollSeqName$4[ebp]
push	edx
mov	eax, DWORD PTR _pNewExpr2$20[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprAddCollateToken
add	esp, 12					
push	eax
push	82					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNewExpr2$20[ebp], eax
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pNewExpr2$20[ebp]
push	ecx
call	_transferJoinMarkings
add	esp, 8
push	3
mov	edx, DWORD PTR _pNewExpr2$20[ebp]
push	edx
mov	eax, DWORD PTR _pWC$[ebp]
push	eax
call	_whereClauseInsert
add	esp, 12					
mov	DWORD PTR _idxNew2$15[ebp], eax
mov	ecx, DWORD PTR _idxNew2$15[ebp]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
call	_exprAnalyze
add	esp, 12					
imul	ecx, DWORD PTR _idxTerm$[ebp], 48
mov	edx, DWORD PTR _pWC$[ebp]
add	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _pTerm$[ebp], ecx
cmp	DWORD PTR _isComplete$[ebp], 0
je	SHORT $LN7@exprAnalyz
imul	eax, DWORD PTR _idxNew1$16[ebp], 48
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	ecx, DWORD PTR _idxTerm$[ebp]
mov	DWORD PTR [edx+eax+4], ecx
imul	edx, DWORD PTR _idxNew2$15[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	eax, DWORD PTR _idxTerm$[ebp]
mov	DWORD PTR [ecx+edx+4], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [ecx+21], 2
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
call	_isMatchOfColumn
add	esp, 4
test	eax, eax
je	$LN2@exprAnalyz
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, 24					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+4]
mov	edx, DWORD PTR [ecx+eax]
mov	DWORD PTR _pRight$13[ebp], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, 24					
shl	edx, 0
mov	eax, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _pLeft$17[ebp], ecx
mov	edx, DWORD PTR _pRight$13[ebp]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_exprTableUsage
add	esp, 8
mov	DWORD PTR _prereqExpr$7[ebp], eax
mov	DWORD PTR _prereqExpr$7[ebp+4], edx
mov	ecx, DWORD PTR _pLeft$17[ebp]
push	ecx
mov	edx, DWORD PTR _pMaskSet$[ebp]
push	edx
call	_exprTableUsage
add	esp, 8
mov	DWORD PTR _prereqColumn$2[ebp], eax
mov	DWORD PTR _prereqColumn$2[ebp+4], edx
mov	eax, DWORD PTR _prereqExpr$7[ebp]
and	eax, DWORD PTR _prereqColumn$2[ebp]
mov	ecx, DWORD PTR _prereqExpr$7[ebp+4]
and	ecx, DWORD PTR _prereqColumn$2[ebp+4]
mov	DWORD PTR tv815[ebp], eax
mov	DWORD PTR tv815[ebp+4], ecx
mov	edx, DWORD PTR tv815[ebp]
or	edx, DWORD PTR tv815[ebp+4]
jne	$LN2@exprAnalyz
push	0
push	0
mov	eax, DWORD PTR _pRight$13[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
push	eax
push	0
push	51					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNewExpr$5[ebp], eax
push	3
mov	eax, DWORD PTR _pNewExpr$5[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
call	_whereClauseInsert
add	esp, 12					
mov	DWORD PTR _idxNew$1[ebp], eax
imul	edx, DWORD PTR _idxNew$1[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
add	edx, DWORD PTR [eax+20]
mov	DWORD PTR _pNewTerm$26[ebp], edx
mov	ecx, DWORD PTR _pNewTerm$26[ebp]
mov	edx, DWORD PTR _prereqExpr$7[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _prereqExpr$7[ebp+4]
mov	DWORD PTR [ecx+36], eax
mov	ecx, DWORD PTR _pNewTerm$26[ebp]
mov	edx, DWORD PTR _pLeft$17[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _pLeft$17[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	eax, DWORD PTR _pNewTerm$26[ebp]
mov	DWORD PTR [eax+12], edx
mov	ecx, 64					
mov	edx, DWORD PTR _pNewTerm$26[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, DWORD PTR _pNewTerm$26[ebp]
mov	ecx, DWORD PTR _idxTerm$[ebp]
mov	DWORD PTR [eax+4], ecx
imul	edx, DWORD PTR _idxTerm$[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
add	edx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], edx
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [ecx+21], 1
mov	edx, DWORD PTR _pTerm$[ebp]
movzx	eax, BYTE PTR [edx+20]
or	eax, 8
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	BYTE PTR [ecx+20], al
mov	edx, DWORD PTR _pNewTerm$26[ebp]
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	DWORD PTR [edx+40], ecx
mov	eax, DWORD PTR [eax+44]
mov	DWORD PTR [edx+44], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx+32]
or	edx, DWORD PTR _extraRight$[ebp]
mov	eax, DWORD PTR [ecx+36]
or	eax, DWORD PTR _extraRight$[ebp+4]
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	DWORD PTR [ecx+36], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findTerm PROC
push	ebp
mov	ebp, esp
sub	esp, 136				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _pResult$[ebp], 0
mov	eax, DWORD PTR _pIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _iColumn$[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
lea	edx, DWORD PTR _scan$[ebp]
push	edx
call	_whereScanInit
add	esp, 24					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@findTerm
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
and	ecx, DWORD PTR _notReady$[ebp]
mov	edx, DWORD PTR [eax+36]
and	edx, DWORD PTR _notReady$[ebp+4]
mov	DWORD PTR tv129[ebp], ecx
mov	DWORD PTR tv129[ebp+4], edx
mov	eax, DWORD PTR tv129[ebp]
or	eax, DWORD PTR tv129[ebp+4]
jne	SHORT $LN3@findTerm
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv136[ebp], ecx
mov	edx, DWORD PTR tv136[ebp]
mov	eax, DWORD PTR tv136[ebp]
mov	ecx, DWORD PTR [edx+32]
or	ecx, DWORD PTR [eax+36]
jne	SHORT $LN2@findTerm
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+18]
and	eax, 2
je	SHORT $LN2@findTerm
mov	eax, DWORD PTR _p$[ebp]
jmp	SHORT $LN6@findTerm
cmp	DWORD PTR _pResult$[ebp], 0
jne	SHORT $LN3@findTerm
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pResult$[ebp], ecx
lea	edx, DWORD PTR _scan$[ebp]
push	edx
call	_whereScanNext
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN5@findTerm
mov	eax, DWORD PTR _pResult$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereScanInit PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pScan$[ebp]
mov	ecx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [edx+4], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN6@whereScanI
cmp	DWORD PTR _iColumn$[ebp], 0
jl	SHORT $LN6@whereScanI
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+12]
imul	eax, DWORD PTR _iColumn$[ebp], 24
mov	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR _pScan$[ebp]
mov	al, BYTE PTR [ecx+eax+21]
mov	BYTE PTR [edx+12], al
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN5@whereScanI
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _j$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
cmp	edx, DWORD PTR _iColumn$[ebp]
je	SHORT $LN3@whereScanI
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _j$[ebp], ecx
jl	SHORT $LN2@whereScanI
xor	eax, eax
jmp	SHORT $LN7@whereScanI
jmp	SHORT $LN4@whereScanI
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _pScan$[ebp]
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR [eax+edx*4]
mov	DWORD PTR [ecx+8], eax
jmp	SHORT $LN1@whereScanI
mov	ecx, DWORD PTR _pScan$[ebp]
mov	BYTE PTR [ecx+12], 0
mov	edx, DWORD PTR _pScan$[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _pScan$[ebp]
mov	ecx, DWORD PTR _opMask$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pScan$[ebp]
mov	DWORD PTR [edx+20], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR _iCur$[ebp]
mov	DWORD PTR [edx+ecx+24], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR _iColumn$[ebp]
mov	DWORD PTR [edx+ecx+24], eax
mov	ecx, DWORD PTR _pScan$[ebp]
mov	BYTE PTR [ecx+13], 2
mov	edx, DWORD PTR _pScan$[ebp]
mov	BYTE PTR [edx+14], 2
mov	eax, DWORD PTR _pScan$[ebp]
push	eax
call	_whereScanNext
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereScanNext PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pScan$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _k$[ebp], ecx
mov	edx, DWORD PTR _pScan$[ebp]
movzx	eax, BYTE PTR [edx+14]
mov	ecx, DWORD PTR _pScan$[ebp]
movzx	edx, BYTE PTR [ecx+13]
cmp	eax, edx
jg	$LN20@whereScanN
mov	eax, DWORD PTR _pScan$[ebp]
movzx	ecx, BYTE PTR [eax+14]
mov	edx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+16]
mov	DWORD PTR _iCur$[ebp], eax
mov	ecx, DWORD PTR _pScan$[ebp]
movzx	edx, BYTE PTR [ecx+14]
mov	eax, DWORD PTR _pScan$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+20]
mov	DWORD PTR _iColumn$[ebp], ecx
mov	edx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pWC$[ebp], eax
cmp	DWORD PTR _pWC$[ebp], 0
je	$LN18@whereScanN
imul	ecx, DWORD PTR _k$[ebp], 48
mov	edx, DWORD PTR _pWC$[ebp]
add	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _pTerm$[ebp], ecx
jmp	SHORT $LN17@whereScanN
mov	eax, DWORD PTR _k$[ebp]
add	eax, 1
mov	DWORD PTR _k$[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
add	ecx, 48					
mov	DWORD PTR _pTerm$[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR _k$[ebp]
cmp	eax, DWORD PTR [edx+12]
jge	$LN15@whereScanN
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx+8]
cmp	edx, DWORD PTR _iCur$[ebp]
jne	$LN14@whereScanN
mov	eax, DWORD PTR _pTerm$[ebp]
mov	ecx, DWORD PTR [eax+12]
cmp	ecx, DWORD PTR _iColumn$[ebp]
jne	$LN14@whereScanN
mov	edx, DWORD PTR _pScan$[ebp]
movzx	eax, BYTE PTR [edx+14]
cmp	eax, 2
jle	SHORT $LN13@whereScanN
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+4]
and	eax, 1
jne	$LN14@whereScanN
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
and	edx, 1024				
je	$LN12@whereScanN
mov	eax, DWORD PTR _pScan$[ebp]
movzx	ecx, BYTE PTR [eax+13]
cmp	ecx, 22					
jge	$LN12@whereScanN
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pX$[ebp], eax
mov	DWORD PTR _j$3[ebp], 0
jmp	SHORT $LN11@whereScanN
mov	edx, DWORD PTR _j$3[ebp]
add	edx, 2
mov	DWORD PTR _j$3[ebp], edx
mov	eax, DWORD PTR _pScan$[ebp]
movzx	ecx, BYTE PTR [eax+13]
cmp	DWORD PTR _j$3[ebp], ecx
jge	SHORT $LN9@whereScanN
mov	edx, DWORD PTR _j$3[ebp]
mov	eax, DWORD PTR _pScan$[ebp]
mov	ecx, DWORD PTR _pX$[ebp]
mov	edx, DWORD PTR [eax+edx*4+24]
cmp	edx, DWORD PTR [ecx+28]
jne	SHORT $LN8@whereScanN
mov	eax, DWORD PTR _pX$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	edx, DWORD PTR _j$3[ebp]
mov	eax, DWORD PTR _pScan$[ebp]
cmp	DWORD PTR [eax+edx*4+28], ecx
jne	SHORT $LN8@whereScanN
jmp	SHORT $LN9@whereScanN
jmp	SHORT $LN10@whereScanN
mov	ecx, DWORD PTR _pScan$[ebp]
movzx	edx, BYTE PTR [ecx+13]
cmp	DWORD PTR _j$3[ebp], edx
jne	SHORT $LN12@whereScanN
mov	eax, DWORD PTR _j$3[ebp]
mov	ecx, DWORD PTR _pScan$[ebp]
mov	edx, DWORD PTR _pX$[ebp]
mov	edx, DWORD PTR [edx+28]
mov	DWORD PTR [ecx+eax*4+24], edx
mov	eax, DWORD PTR _pX$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	edx, DWORD PTR _j$3[ebp]
mov	eax, DWORD PTR _pScan$[ebp]
mov	DWORD PTR [eax+edx*4+28], ecx
mov	ecx, DWORD PTR _pScan$[ebp]
movzx	edx, BYTE PTR [ecx+13]
add	edx, 2
mov	eax, DWORD PTR _pScan$[ebp]
mov	BYTE PTR [eax+13], dl
mov	ecx, DWORD PTR _pTerm$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pScan$[ebp]
and	edx, DWORD PTR [eax+16]
je	$LN14@whereScanN
mov	ecx, DWORD PTR _pScan$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	$LN5@whereScanN
mov	edx, DWORD PTR _pTerm$[ebp]
movzx	eax, WORD PTR [edx+18]
and	eax, 128				
jne	SHORT $LN5@whereScanN
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$1[ebp], eax
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pX$[ebp], edx
mov	eax, DWORD PTR _pScan$[ebp]
movzx	ecx, BYTE PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pX$[ebp]
push	edx
call	_sqlite3IndexAffinityOk
add	esp, 8
test	eax, eax
jne	SHORT $LN4@whereScanN
jmp	$LN16@whereScanN
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pX$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$1[ebp]
push	ecx
call	_sqlite3BinaryCompareCollSeq
add	esp, 12					
mov	DWORD PTR _pColl$2[ebp], eax
cmp	DWORD PTR _pColl$2[ebp], 0
jne	SHORT $LN3@whereScanN
mov	edx, DWORD PTR _pParse$1[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pColl$2[ebp], ecx
mov	edx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pColl$2[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN5@whereScanN
jmp	$LN16@whereScanN
mov	eax, DWORD PTR _pTerm$[ebp]
movzx	ecx, WORD PTR [eax+18]
and	ecx, 2
je	SHORT $LN1@whereScanN
mov	edx, DWORD PTR _pTerm$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pX$[ebp], ecx
mov	edx, DWORD PTR _pX$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 154				
jne	SHORT $LN1@whereScanN
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR [eax+28]
cmp	eax, DWORD PTR [ecx+edx+24]
jne	SHORT $LN1@whereScanN
mov	ecx, DWORD PTR _pX$[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pScan$[ebp]
cmp	edx, DWORD PTR [ecx+eax+24]
jne	SHORT $LN1@whereScanN
jmp	$LN16@whereScanN
mov	edx, DWORD PTR _k$[ebp]
add	edx, 1
mov	eax, DWORD PTR _pScan$[ebp]
mov	DWORD PTR [eax+20], edx
mov	eax, DWORD PTR _pTerm$[ebp]
jmp	SHORT $LN22@whereScanN
jmp	$LN16@whereScanN
mov	ecx, DWORD PTR _pScan$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _pScan$[ebp]
mov	ecx, DWORD PTR [edx+4]
mov	DWORD PTR [eax+4], ecx
mov	DWORD PTR _k$[ebp], 0
jmp	$LN19@whereScanN
mov	edx, DWORD PTR _pScan$[ebp]
mov	eax, DWORD PTR _pScan$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+4], ecx
mov	DWORD PTR _k$[ebp], 0
mov	edx, DWORD PTR _pScan$[ebp]
movzx	eax, BYTE PTR [edx+14]
add	eax, 2
mov	ecx, DWORD PTR _pScan$[ebp]
mov	BYTE PTR [ecx+14], al
jmp	$LN21@whereScanN
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_operatorMask PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _op$[ebp], 75			
jne	SHORT $LN4@operatorMa
mov	eax, 1
mov	WORD PTR _c$[ebp], ax
jmp	SHORT $LN3@operatorMa
cmp	DWORD PTR _op$[ebp], 76			
jne	SHORT $LN2@operatorMa
mov	ecx, 128				
mov	WORD PTR _c$[ebp], cx
jmp	SHORT $LN3@operatorMa
mov	ecx, DWORD PTR _op$[ebp]
sub	ecx, 79					
mov	edx, 2
shl	edx, cl
mov	WORD PTR _c$[ebp], dx
mov	ax, WORD PTR _c$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprCommute PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+4]
and	edx, 256				
mov	WORD PTR _expRight$[ebp], dx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+4]
and	edx, 256				
mov	WORD PTR _expLeft$[ebp], dx
movzx	eax, WORD PTR _expRight$[ebp]
movzx	ecx, WORD PTR _expLeft$[ebp]
cmp	eax, ecx
jne	SHORT $LN5@exprCommut
movzx	edx, WORD PTR _expRight$[ebp]
test	edx, edx
je	SHORT $LN4@exprCommut
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+4]
and	edx, -257				
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [ecx+4], edx
jmp	SHORT $LN5@exprCommut
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCollSeq
add	esp, 8
test	eax, eax
je	SHORT $LN5@exprCommut
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 256				
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR [eax+4], ecx
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _t$1[ebp], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR _t$1[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 80					
jl	SHORT $LN6@exprCommut
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
sub	edx, 80					
xor	edx, 2
add	edx, 80					
mov	eax, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [eax], dl
mov	esp, ebp
pop	ebp
ret	0
ENDP
_allowedOp PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _op$[ebp], 75			
je	SHORT $LN4@allowedOp
cmp	DWORD PTR _op$[ebp], 79			
jl	SHORT $LN3@allowedOp
cmp	DWORD PTR _op$[ebp], 83			
jle	SHORT $LN4@allowedOp
cmp	DWORD PTR _op$[ebp], 76			
je	SHORT $LN4@allowedOp
mov	DWORD PTR tv68[ebp], 0
jmp	SHORT $LN5@allowedOp
mov	DWORD PTR tv68[ebp], 1
mov	eax, DWORD PTR tv68[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprTableUsage PROC
push	ebp
mov	ebp, esp
sub	esp, 8
xorpd	xmm0, xmm0
movlpd	QWORD PTR _mask$[ebp], xmm0
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN4@exprTableU
xor	eax, eax
xor	edx, edx
jmp	$LN5@exprTableU
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
jne	SHORT $LN3@exprTableU
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_getMask
add	esp, 8
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	eax, DWORD PTR _mask$[ebp]
mov	edx, DWORD PTR _mask$[ebp+4]
jmp	$LN5@exprTableU
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprTableUsage
add	esp, 8
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 2048				
je	SHORT $LN2@exprTableU
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_exprSelectTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
jmp	SHORT $LN1@exprTableU
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_exprListTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	eax, DWORD PTR _mask$[ebp]
mov	edx, DWORD PTR _mask$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprSelectTableUsage PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
xorpd	xmm0, xmm0
movlpd	QWORD PTR _mask$[ebp], xmm0
cmp	DWORD PTR _pS$[ebp], 0
je	$LN5@exprSelect
mov	eax, DWORD PTR _pS$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pSrc$1[ebp], ecx
mov	edx, DWORD PTR _pS$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprListTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	edx, DWORD PTR _pS$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprListTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	edx, DWORD PTR _pS$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprListTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	edx, DWORD PTR _pS$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
mov	edx, DWORD PTR _pS$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
cmp	DWORD PTR _pSrc$1[ebp], 0
je	SHORT $LN4@exprSelect
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN3@exprSelect
mov	edx, DWORD PTR _i$2[ebp]
add	edx, 1
mov	DWORD PTR _i$2[ebp], edx
mov	eax, DWORD PTR _pSrc$1[ebp]
mov	ecx, DWORD PTR _i$2[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN4@exprSelect
imul	edx, DWORD PTR _i$2[ebp], 80
mov	eax, DWORD PTR _pSrc$1[ebp]
mov	ecx, DWORD PTR [eax+edx+28]
push	ecx
mov	edx, DWORD PTR _pMaskSet$[ebp]
push	edx
call	_exprSelectTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
imul	eax, DWORD PTR _i$2[ebp], 80
mov	ecx, DWORD PTR _pSrc$1[ebp]
mov	edx, DWORD PTR [ecx+eax+60]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_exprTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
jmp	SHORT $LN2@exprSelect
mov	ecx, DWORD PTR _pS$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pS$[ebp], edx
jmp	$LN6@exprSelect
mov	eax, DWORD PTR _mask$[ebp]
mov	edx, DWORD PTR _mask$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprListTableUsage PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
xorpd	xmm0, xmm0
movlpd	QWORD PTR _mask$[ebp], xmm0
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN4@exprListTa
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@exprListTa
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN4@exprListTa
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
push	ecx
call	_exprTableUsage
add	esp, 8
or	eax, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR _mask$[ebp+4]
mov	DWORD PTR _mask$[ebp], eax
mov	DWORD PTR _mask$[ebp+4], edx
jmp	SHORT $LN2@exprListTa
mov	eax, DWORD PTR _mask$[ebp]
mov	edx, DWORD PTR _mask$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_createMask PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMaskSet$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _pMaskSet$[ebp]
mov	eax, DWORD PTR _iCursor$[ebp]
mov	DWORD PTR [edx+ecx*4+4], eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 1
mov	eax, DWORD PTR _pMaskSet$[ebp]
mov	DWORD PTR [eax], edx
pop	ebp
ret	0
ENDP
_getMask PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@getMask
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pMaskSet$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN2@getMask
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pMaskSet$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+4]
cmp	edx, DWORD PTR _iCursor$[ebp]
jne	SHORT $LN1@getMask
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _i$[ebp]
call	__allshl
jmp	SHORT $LN5@getMask
jmp	SHORT $LN3@getMask
xor	eax, eax
xor	edx, edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereSplit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWC$[ebp]
mov	cl, BYTE PTR _op$[ebp]
mov	BYTE PTR [eax+8], cl
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN3@whereSplit
jmp	SHORT $LN4@whereSplit
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _op$[ebp]
cmp	eax, ecx
je	SHORT $LN2@whereSplit
push	0
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pWC$[ebp]
push	eax
call	_whereClauseInsert
add	esp, 12					
jmp	SHORT $LN4@whereSplit
movzx	ecx, BYTE PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pWC$[ebp]
push	ecx
call	_whereSplit
add	esp, 12					
movzx	edx, BYTE PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
push	edx
call	_whereSplit
add	esp, 12					
pop	ebp
ret	0
ENDP
_whereClauseInsert PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [eax+12]
cmp	edx, DWORD PTR [ecx+16]
jl	$LN6@whereClaus
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pOld$2[ebp], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$1[ebp], edx
mov	eax, DWORD PTR _pWC$[ebp]
imul	ecx, DWORD PTR [eax+16], 48
shl	ecx, 1
push	ecx
mov	edx, DWORD PTR _db$1[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _pWC$[ebp]
cmp	DWORD PTR [edx+20], 0
jne	SHORT $LN5@whereClaus
movzx	eax, BYTE PTR _wtFlags$[ebp]
and	eax, 1
je	SHORT $LN4@whereClaus
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$1[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR _pOld$2[ebp]
mov	DWORD PTR [eax+20], ecx
xor	eax, eax
jmp	$LN7@whereClaus
mov	edx, DWORD PTR _pWC$[ebp]
imul	eax, DWORD PTR [edx+12], 48
push	eax
mov	ecx, DWORD PTR _pOld$2[ebp]
push	ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pWC$[ebp]
add	ecx, 24					
cmp	DWORD PTR _pOld$2[ebp], ecx
je	SHORT $LN3@whereClaus
mov	edx, DWORD PTR _pOld$2[ebp]
push	edx
mov	eax, DWORD PTR _db$1[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _db$1[ebp]
push	eax
call	_sqlite3DbMallocSize
add	esp, 8
xor	edx, edx
mov	ecx, 48					
div	ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [edx+16], eax
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _idx$[ebp], ecx
imul	edx, DWORD PTR _idx$[ebp], 48
mov	eax, DWORD PTR _pWC$[ebp]
add	edx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$[ebp], edx
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, 1
mov	eax, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [eax+12], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@whereClaus
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 262144				
je	SHORT $LN2@whereClaus
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+28]
cdq
push	edx
push	eax
call	_sqlite3LogEst
add	esp, 8
movsx	ecx, ax
sub	ecx, 99					
mov	edx, DWORD PTR _pTerm$[ebp]
mov	WORD PTR [edx+16], cx
jmp	SHORT $LN1@whereClaus
mov	eax, 1
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	WORD PTR [ecx+16], ax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pTerm$[ebp]
mov	al, BYTE PTR _wtFlags$[ebp]
mov	BYTE PTR [edx+20], al
mov	ecx, DWORD PTR _pTerm$[ebp]
mov	edx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [ecx+24], edx
mov	eax, DWORD PTR _pTerm$[ebp]
mov	DWORD PTR [eax+4], -1
mov	eax, DWORD PTR _idx$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereAndInfoDelete PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_whereClauseClear
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_whereOrInfoDelete PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_whereClauseClear
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_whereClauseClear PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pWC$[ebp]
mov	edx, DWORD PTR [ecx+12]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _a$[ebp], ecx
jmp	SHORT $LN8@whereClaus
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
add	eax, 48					
mov	DWORD PTR _a$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN6@whereClaus
mov	ecx, DWORD PTR _a$[ebp]
movzx	edx, BYTE PTR [ecx+20]
and	edx, 1
je	SHORT $LN5@whereClaus
mov	eax, DWORD PTR _a$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _a$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, 16					
je	SHORT $LN4@whereClaus
mov	edx, DWORD PTR _a$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_whereOrInfoDelete
add	esp, 8
jmp	SHORT $LN3@whereClaus
mov	edx, DWORD PTR _a$[ebp]
movzx	eax, BYTE PTR [edx+20]
and	eax, 32					
je	SHORT $LN3@whereClaus
mov	ecx, DWORD PTR _a$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_whereAndInfoDelete
add	esp, 8
jmp	SHORT $LN7@whereClaus
mov	ecx, DWORD PTR _pWC$[ebp]
add	ecx, 24					
mov	edx, DWORD PTR _pWC$[ebp]
cmp	DWORD PTR [edx+20], ecx
je	SHORT $LN9@whereClaus
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereClauseInit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWC$[ebp]
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [ecx+16], 8
mov	edx, DWORD PTR _pWC$[ebp]
add	edx, 24					
mov	eax, DWORD PTR _pWC$[ebp]
mov	DWORD PTR [eax+20], edx
pop	ebp
ret	0
ENDP
_whereOrInsert PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pSet$[ebp]
mov	cx, WORD PTR [eax]
mov	WORD PTR _i$[ebp], cx
mov	edx, DWORD PTR _pSet$[ebp]
add	edx, 8
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN13@whereOrIns
mov	ax, WORD PTR _i$[ebp]
sub	ax, 1
mov	WORD PTR _i$[ebp], ax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 16					
mov	DWORD PTR _p$[ebp], ecx
movzx	edx, WORD PTR _i$[ebp]
test	edx, edx
jle	$LN11@whereOrIns
movsx	eax, WORD PTR _rRun$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+8]
cmp	eax, edx
jg	SHORT $LN10@whereOrIns
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _prereq$[ebp]
and	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _prereq$[ebp+4]
and	edx, DWORD PTR [eax+4]
mov	DWORD PTR tv171[ebp], ecx
mov	DWORD PTR tv171[ebp+4], edx
mov	eax, DWORD PTR tv171[ebp]
cmp	eax, DWORD PTR _prereq$[ebp]
jne	SHORT $LN10@whereOrIns
mov	ecx, DWORD PTR tv171[ebp+4]
cmp	ecx, DWORD PTR _prereq$[ebp+4]
jne	SHORT $LN10@whereOrIns
jmp	$whereOrInsert_done$16
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+8]
movsx	ecx, WORD PTR _rRun$[ebp]
cmp	eax, ecx
jg	SHORT $LN9@whereOrIns
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
and	eax, DWORD PTR _prereq$[ebp]
mov	ecx, DWORD PTR [edx+4]
and	ecx, DWORD PTR _prereq$[ebp+4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv185[ebp], eax
mov	DWORD PTR tv185[ebp+4], ecx
mov	DWORD PTR tv188[ebp], edx
mov	eax, DWORD PTR tv188[ebp]
mov	ecx, DWORD PTR tv185[ebp]
cmp	ecx, DWORD PTR [eax]
jne	SHORT $LN9@whereOrIns
mov	edx, DWORD PTR tv188[ebp]
mov	eax, DWORD PTR tv185[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jne	SHORT $LN9@whereOrIns
xor	eax, eax
jmp	$LN14@whereOrIns
jmp	$LN12@whereOrIns
mov	ecx, DWORD PTR _pSet$[ebp]
movzx	edx, WORD PTR [ecx]
cmp	edx, 3
jge	SHORT $LN8@whereOrIns
mov	eax, DWORD PTR _pSet$[ebp]
movzx	ecx, WORD PTR [eax]
shl	ecx, 4
mov	edx, DWORD PTR _pSet$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _pSet$[ebp]
mov	dx, WORD PTR [ecx]
add	dx, 1
mov	eax, DWORD PTR _pSet$[ebp]
mov	WORD PTR [eax], dx
mov	ecx, DWORD PTR _p$[ebp]
mov	dx, WORD PTR _nOut$[ebp]
mov	WORD PTR [ecx+10], dx
jmp	SHORT $whereOrInsert_done$16
mov	eax, DWORD PTR _pSet$[ebp]
add	eax, 8
mov	DWORD PTR _p$[ebp], eax
mov	ecx, 1
mov	WORD PTR _i$[ebp], cx
jmp	SHORT $LN6@whereOrIns
mov	dx, WORD PTR _i$[ebp]
add	dx, 1
mov	WORD PTR _i$[ebp], dx
movzx	eax, WORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pSet$[ebp]
movzx	edx, WORD PTR [ecx]
cmp	eax, edx
jge	SHORT $LN4@whereOrIns
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+8]
movzx	edx, WORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _pSet$[ebp]
movsx	edx, WORD PTR [eax+edx+16]
cmp	ecx, edx
jle	SHORT $LN3@whereOrIns
movzx	eax, WORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _pSet$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN5@whereOrIns
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+8]
movsx	edx, WORD PTR _rRun$[ebp]
cmp	ecx, edx
jg	SHORT $whereOrInsert_done$16
xor	eax, eax
jmp	SHORT $LN14@whereOrIns
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _prereq$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _prereq$[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR _rRun$[ebp]
mov	WORD PTR [eax+8], cx
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+10]
movsx	ecx, WORD PTR _nOut$[ebp]
cmp	eax, ecx
jle	SHORT $LN1@whereOrIns
mov	edx, DWORD PTR _p$[ebp]
mov	ax, WORD PTR _nOut$[ebp]
mov	WORD PTR [edx+10], ax
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereOrMove PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	dx, WORD PTR [ecx]
mov	WORD PTR [eax], dx
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, WORD PTR [eax]
shl	ecx, 4
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
add	edx, 8
push	edx
mov	eax, DWORD PTR _pDest$[ebp]
add	eax, 8
push	eax
call	_memcpy
add	esp, 12					
pop	ebp
ret	0
ENDP
_whereLoopResize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+42]
cmp	ecx, DWORD PTR _n$[ebp]
jl	SHORT $LN3@whereLoopR
xor	eax, eax
jmp	$LN4@whereLoopR
mov	edx, DWORD PTR _n$[ebp]
add	edx, 7
and	edx, -8					
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _n$[ebp]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _paNew$[ebp], eax
cmp	DWORD PTR _paNew$[ebp], 0
jne	SHORT $LN2@whereLoopR
mov	eax, 7
jmp	SHORT $LN4@whereLoopR
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+42]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _paNew$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 52					
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+44], ecx
je	SHORT $LN1@whereLoopR
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _paNew$[ebp]
mov	DWORD PTR [eax+44], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	ax, WORD PTR _n$[ebp]
mov	WORD PTR [edx+42], ax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_callFinaliser PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+320], 0
je	$LN7@callFinali
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@callFinali
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+296]
jge	SHORT $LN3@callFinali
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+320]
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pVTab$2[ebp], ecx
mov	edx, DWORD PTR _pVTab$2[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p$3[ebp], eax
cmp	DWORD PTR _p$3[ebp], 0
je	SHORT $LN2@callFinali
mov	ecx, DWORD PTR _p$3[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _offset$[ebp]
mov	ecx, DWORD PTR [edx+eax]
mov	DWORD PTR _x$1[ebp], ecx
cmp	DWORD PTR _x$1[ebp], 0
je	SHORT $LN2@callFinali
mov	edx, DWORD PTR _p$3[ebp]
push	edx
call	DWORD PTR _x$1[ebp]
add	esp, 4
mov	eax, DWORD PTR _pVTab$2[ebp]
mov	DWORD PTR [eax+20], 0
mov	ecx, DWORD PTR _pVTab$2[ebp]
push	ecx
call	_sqlite3VtabUnlock
add	esp, 4
jmp	SHORT $LN4@callFinali
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+320]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+296], 0
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+320], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_addToVTrans PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+296]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+320]
mov	edx, DWORD PTR _pVTab$[ebp]
mov	DWORD PTR [eax+ecx*4], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+296]
add	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+296], ecx
mov	eax, DWORD PTR _pVTab$[ebp]
push	eax
call	_sqlite3VtabLock
add	esp, 4
pop	ebp
ret	0
ENDP
_growVTrans PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _ARRAY_INCR$[ebp], 5
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+296]
cdq
idiv	DWORD PTR _ARRAY_INCR$[ebp]
test	edx, edx
jne	SHORT $LN2@growVTrans
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+296]
add	edx, DWORD PTR _ARRAY_INCR$[ebp]
shl	edx, 2
mov	DWORD PTR _nBytes$1[ebp], edx
mov	eax, DWORD PTR _nBytes$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+320]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _aVTrans$2[ebp], eax
cmp	DWORD PTR _aVTrans$2[ebp], 0
jne	SHORT $LN1@growVTrans
mov	eax, 7
jmp	SHORT $LN3@growVTrans
mov	ecx, DWORD PTR _ARRAY_INCR$[ebp]
shl	ecx, 2
push	ecx
push	0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+296]
mov	ecx, DWORD PTR _aVTrans$2[ebp]
lea	edx, DWORD PTR [ecx+eax*4]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _aVTrans$2[ebp]
mov	DWORD PTR [eax+320], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vtabCallConstructor PROC
push	ebp
mov	ebp, esp
sub	esp, 72					
push	esi
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _azArg$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _nArg$[ebp], eax
mov	DWORD PTR _zErr$[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG116377
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zModuleName$[ebp], eax
cmp	DWORD PTR _zModuleName$[ebp], 0
jne	SHORT $LN26@vtabCallCo
mov	eax, 7
jmp	$LN27@vtabCallCo
push	28					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pVTable$[ebp], eax
cmp	DWORD PTR _pVTable$[ebp], 0
jne	SHORT $LN25@vtabCallCo
mov	edx, DWORD PTR _zModuleName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	eax, 7
jmp	$LN27@vtabCallCo
mov	ecx, DWORD PTR _pVTable$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pVTable$[ebp]
mov	ecx, DWORD PTR _pMod$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	eax, 4
shl	eax, 0
mov	esi, DWORD PTR _pTab$[ebp]
mov	esi, DWORD PTR [esi+56]
mov	ecx, DWORD PTR [ecx+edx]
mov	DWORD PTR [eax+esi], ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR _sCtx$[ebp+4], edx
mov	eax, DWORD PTR _pVTable$[ebp]
mov	DWORD PTR _sCtx$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+316]
mov	DWORD PTR _pPriorCtx$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
lea	ecx, DWORD PTR _sCtx$[ebp]
mov	DWORD PTR [eax+316], ecx
lea	edx, DWORD PTR _zErr$[ebp]
push	edx
mov	eax, DWORD PTR _pVTable$[ebp]
add	eax, 8
push	eax
mov	ecx, DWORD PTR _azArg$[ebp]
push	ecx
mov	edx, DWORD PTR _nArg$[ebp]
push	edx
mov	eax, DWORD PTR _pMod$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	DWORD PTR _xConstruct$[ebp]
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pPriorCtx$[ebp]
mov	DWORD PTR [eax+316], ecx
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN24@vtabCallCo
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN23@vtabCallCo
cmp	DWORD PTR _zErr$[ebp], 0
jne	SHORT $LN22@vtabCallCo
mov	eax, DWORD PTR _zModuleName$[ebp]
push	eax
push	OFFSET $SG116387
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	edx, DWORD PTR _pzErr$[ebp]
mov	DWORD PTR [edx], eax
jmp	SHORT $LN21@vtabCallCo
mov	eax, DWORD PTR _zErr$[ebp]
push	eax
push	OFFSET $SG116389
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	edx, DWORD PTR _pzErr$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _zErr$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _pVTable$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN20@vtabCallCo
mov	eax, DWORD PTR _pVTable$[ebp]
cmp	DWORD PTR [eax+8], 0
je	$LN20@vtabCallCo
mov	ecx, DWORD PTR _pVTable$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _pMod$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _pVTable$[ebp]
mov	DWORD PTR [edx+12], 1
cmp	DWORD PTR _sCtx$[ebp+4], 0
je	SHORT $LN18@vtabCallCo
mov	DWORD PTR _zFormat$1[ebp], OFFSET $SG116394
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _zFormat$1[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	ecx, DWORD PTR _pzErr$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pVTable$[ebp]
push	edx
call	_sqlite3VtabUnlock
add	esp, 4
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN20@vtabCallCo
mov	eax, DWORD PTR _pVTable$[ebp]
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+60]
mov	DWORD PTR [eax+24], edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR _pVTable$[ebp]
mov	DWORD PTR [eax+60], ecx
mov	DWORD PTR _iCol$5[ebp], 0
jmp	SHORT $LN16@vtabCallCo
mov	edx, DWORD PTR _iCol$5[ebp]
add	edx, 1
mov	DWORD PTR _iCol$5[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _iCol$5[ebp], ecx
jge	$LN20@vtabCallCo
imul	edx, DWORD PTR _iCol$5[ebp], 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+12]
mov	DWORD PTR _zType$6[ebp], edx
mov	DWORD PTR _i$7[ebp], 0
cmp	DWORD PTR _zType$6[ebp], 0
jne	SHORT $LN13@vtabCallCo
jmp	SHORT $LN15@vtabCallCo
mov	eax, DWORD PTR _zType$6[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nType$3[ebp], eax
push	6
mov	ecx, DWORD PTR _zType$6[ebp]
push	ecx
push	OFFSET $SG116406
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN11@vtabCallCo
mov	edx, 1
imul	eax, edx, 6
mov	ecx, DWORD PTR _zType$6[ebp]
movsx	edx, BYTE PTR [ecx+eax]
test	edx, edx
je	SHORT $LN12@vtabCallCo
mov	eax, 1
imul	ecx, eax, 6
mov	edx, DWORD PTR _zType$6[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 32					
je	SHORT $LN12@vtabCallCo
mov	DWORD PTR _i$7[ebp], 0
jmp	SHORT $LN10@vtabCallCo
mov	ecx, DWORD PTR _i$7[ebp]
add	ecx, 1
mov	DWORD PTR _i$7[ebp], ecx
mov	edx, DWORD PTR _i$7[ebp]
cmp	edx, DWORD PTR _nType$3[ebp]
jge	SHORT $LN12@vtabCallCo
push	7
mov	eax, DWORD PTR _zType$6[ebp]
add	eax, DWORD PTR _i$7[ebp]
push	eax
push	OFFSET $SG116411
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN7@vtabCallCo
mov	ecx, DWORD PTR _zType$6[ebp]
add	ecx, DWORD PTR _i$7[ebp]
movsx	edx, BYTE PTR [ecx+7]
test	edx, edx
je	SHORT $LN6@vtabCallCo
mov	eax, DWORD PTR _zType$6[ebp]
add	eax, DWORD PTR _i$7[ebp]
movsx	ecx, BYTE PTR [eax+7]
cmp	ecx, 32					
jne	SHORT $LN7@vtabCallCo
mov	edx, DWORD PTR _i$7[ebp]
add	edx, 1
mov	DWORD PTR _i$7[ebp], edx
jmp	SHORT $LN12@vtabCallCo
jmp	SHORT $LN9@vtabCallCo
mov	eax, DWORD PTR _i$7[ebp]
cmp	eax, DWORD PTR _nType$3[ebp]
jge	$LN5@vtabCallCo
mov	ecx, DWORD PTR _zType$6[ebp]
add	ecx, DWORD PTR _i$7[ebp]
movsx	edx, BYTE PTR [ecx+6]
test	edx, edx
je	SHORT $LN29@vtabCallCo
mov	DWORD PTR tv216[ebp], 1
jmp	SHORT $LN30@vtabCallCo
mov	DWORD PTR tv216[ebp], 0
mov	eax, DWORD PTR tv216[ebp]
add	eax, 6
mov	DWORD PTR _nDel$2[ebp], eax
mov	ecx, DWORD PTR _i$7[ebp]
mov	DWORD PTR _j$4[ebp], ecx
jmp	SHORT $LN4@vtabCallCo
mov	edx, DWORD PTR _j$4[ebp]
add	edx, 1
mov	DWORD PTR _j$4[ebp], edx
mov	eax, DWORD PTR _j$4[ebp]
add	eax, DWORD PTR _nDel$2[ebp]
cmp	eax, DWORD PTR _nType$3[ebp]
jg	SHORT $LN2@vtabCallCo
mov	ecx, DWORD PTR _j$4[ebp]
add	ecx, DWORD PTR _nDel$2[ebp]
mov	edx, DWORD PTR _zType$6[ebp]
add	edx, DWORD PTR _j$4[ebp]
mov	eax, DWORD PTR _zType$6[ebp]
mov	cl, BYTE PTR [eax+ecx]
mov	BYTE PTR [edx], cl
jmp	SHORT $LN3@vtabCallCo
mov	edx, DWORD PTR _zType$6[ebp]
add	edx, DWORD PTR _i$7[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
jne	SHORT $LN1@vtabCallCo
cmp	DWORD PTR _i$7[ebp], 0
jle	SHORT $LN1@vtabCallCo
mov	ecx, DWORD PTR _zType$6[ebp]
add	ecx, DWORD PTR _i$7[ebp]
mov	BYTE PTR [ecx-1], 0
imul	edx, DWORD PTR _iCol$5[ebp], 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+23]
or	edx, 2
imul	eax, DWORD PTR _iCol$5[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [ecx+4]
mov	BYTE PTR [ecx+eax+23], dl
jmp	$LN15@vtabCallCo
mov	edx, DWORD PTR _zModuleName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_addArgumentToVtab PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+512], 0
je	SHORT $LN2@addArgumen
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+484], 0
je	SHORT $LN2@addArgumen
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+512]
mov	DWORD PTR _z$1[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+516]
mov	DWORD PTR _n$2[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$3[ebp], ecx
mov	edx, DWORD PTR _n$2[ebp]
push	edx
mov	eax, DWORD PTR _z$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$3[ebp]
push	ecx
call	_sqlite3DbStrNDup
add	esp, 12					
push	eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
push	eax
mov	ecx, DWORD PTR _db$3[ebp]
push	ecx
call	_addModuleArgument
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_addModuleArgument PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTable$[ebp]
mov	eax, DWORD PTR [edx+52]
add	eax, 1
mov	ecx, DWORD PTR _pTable$[ebp]
mov	DWORD PTR [ecx+52], eax
mov	edx, DWORD PTR _pTable$[ebp]
mov	eax, DWORD PTR [edx+52]
lea	ecx, DWORD PTR [eax*4+4]
mov	DWORD PTR _nBytes$[ebp], ecx
mov	edx, DWORD PTR _nBytes$[ebp]
push	edx
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _azModuleArg$[ebp], eax
cmp	DWORD PTR _azModuleArg$[ebp], 0
jne	SHORT $LN5@addModuleA
mov	DWORD PTR _j$1[ebp], 0
jmp	SHORT $LN4@addModuleA
mov	eax, DWORD PTR _j$1[ebp]
add	eax, 1
mov	DWORD PTR _j$1[ebp], eax
mov	ecx, DWORD PTR _j$1[ebp]
cmp	ecx, DWORD PTR _i$[ebp]
jge	SHORT $LN2@addModuleA
mov	edx, DWORD PTR _pTable$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR _j$1[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN3@addModuleA
mov	ecx, DWORD PTR _zArg$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	DWORD PTR [eax+52], 0
jmp	SHORT $LN1@addModuleA
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _azModuleArg$[ebp]
mov	eax, DWORD PTR _zArg$[ebp]
mov	DWORD PTR [edx+ecx*4], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _azModuleArg$[ebp]
mov	DWORD PTR [edx+ecx*4+4], 0
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR _azModuleArg$[ebp]
mov	DWORD PTR [eax+56], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vtabDisconnectAll PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _pRet$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	DWORD PTR _pVTable$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+60], 0
cmp	DWORD PTR _pVTable$[ebp], 0
je	SHORT $LN3@vtabDiscon
mov	eax, DWORD PTR _pVTable$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db2$2[ebp], ecx
mov	edx, DWORD PTR _pVTable$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _pNext$1[ebp], eax
mov	ecx, DWORD PTR _db2$2[ebp]
cmp	ecx, DWORD PTR _db$[ebp]
jne	SHORT $LN2@vtabDiscon
mov	edx, DWORD PTR _pVTable$[ebp]
mov	DWORD PTR _pRet$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pRet$[ebp]
mov	DWORD PTR [eax+60], ecx
mov	edx, DWORD PTR _pRet$[ebp]
mov	DWORD PTR [edx+24], 0
jmp	SHORT $LN1@vtabDiscon
mov	eax, DWORD PTR _pVTable$[ebp]
mov	ecx, DWORD PTR _db2$2[ebp]
mov	edx, DWORD PTR [ecx+324]
mov	DWORD PTR [eax+24], edx
mov	eax, DWORD PTR _db2$2[ebp]
mov	ecx, DWORD PTR _pVTable$[ebp]
mov	DWORD PTR [eax+324], ecx
mov	edx, DWORD PTR _pNext$1[ebp]
mov	DWORD PTR _pVTable$[ebp], edx
jmp	SHORT $LN4@vtabDiscon
mov	eax, DWORD PTR _pRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_createModule PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _zName$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	eax, DWORD PTR _nName$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
add	edx, 300				
push	edx
call	_sqlite3HashFind
add	esp, 12					
test	eax, eax
je	SHORT $LN5@createModu
push	108523					
call	_sqlite3MisuseError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN4@createModu
mov	eax, DWORD PTR _nName$[ebp]
add	eax, 17					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pMod$3[ebp], eax
cmp	DWORD PTR _pMod$3[ebp], 0
je	$LN4@createModu
mov	edx, 16					
shl	edx, 0
add	edx, DWORD PTR _pMod$3[ebp]
mov	DWORD PTR _zCopy$2[ebp], edx
mov	eax, DWORD PTR _nName$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _zCopy$2[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pMod$3[ebp]
mov	ecx, DWORD PTR _zCopy$2[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pMod$3[ebp]
mov	eax, DWORD PTR _pModule$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pMod$3[ebp]
mov	edx, DWORD PTR _pAux$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pMod$3[ebp]
mov	ecx, DWORD PTR _xDestroy$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pMod$3[ebp]
push	edx
mov	eax, DWORD PTR _nName$[ebp]
push	eax
mov	ecx, DWORD PTR _zCopy$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
add	edx, 300				
push	edx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pDel$1[ebp], eax
cmp	DWORD PTR _pDel$1[ebp], 0
je	SHORT $LN4@createModu
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	ecx, DWORD PTR _pDel$1[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@createModu
cmp	DWORD PTR _xDestroy$[ebp], 0
je	SHORT $LN1@createModu
mov	edx, DWORD PTR _pAux$[ebp]
push	edx
call	DWORD PTR _xDestroy$[ebp]
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_execExecSql PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	0
lea	eax, DWORD PTR _pStmt$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_prepare
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@execExecSq
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN5@execExecSq
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3_step
add	esp, 4
cmp	eax, 100				
jne	SHORT $LN2@execExecSq
push	0
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_sqlite3_column_text
add	esp, 8
push	eax
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_execSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@execExecSq
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vacuumFinalize
add	esp, 12					
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN5@execExecSq
jmp	SHORT $LN3@execExecSq
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vacuumFinalize
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_execSql PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _zSql$[ebp], 0
jne	SHORT $LN2@execSql
mov	eax, 7
jmp	SHORT $LN3@execSql
push	0
lea	eax, DWORD PTR _pStmt$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_prepare
add	esp, 20					
test	eax, eax
je	SHORT $LN1@execSql
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_errmsg
add	esp, 4
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
call	_sqlite3SetString
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_errcode
add	esp, 4
jmp	SHORT $LN3@execSql
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_sqlite3_step
add	esp, 4
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_vacuumFinalize
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vacuumFinalize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3VdbeFinalize
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@vacuumFina
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_errmsg
add	esp, 4
push	eax
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
call	_sqlite3SetString
add	esp, 12					
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_updateVirtualTable PROC
push	ebp
mov	ebp, esp
sub	esp, 80					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _pEList$[ebp], 0
mov	DWORD PTR _pSelect$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3GetVTable
add	esp, 8
mov	DWORD PTR _pVTab$[ebp], eax
push	OFFSET $SG116006
push	27					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Expr
add	esp, 12					
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pEList$[ebp], eax
cmp	DWORD PTR _pRowid$[ebp], 0
je	SHORT $LN9@updateVirt
push	0
mov	edx, DWORD PTR _pRowid$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
push	eax
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pEList$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@updateVirt
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN6@updateVirt
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aXRef$[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
jl	SHORT $LN5@updateVirt
push	0
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aXRef$[ebp]
imul	ecx, DWORD PTR [eax+edx*4], 24
mov	edx, DWORD PTR _pChanges$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pExpr$[ebp], eax
jmp	SHORT $LN4@updateVirt
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
push	27					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pExpr$[ebp], eax
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pEList$[ebp], eax
jmp	SHORT $LN7@updateVirt
push	0
push	0
push	0
push	0
push	0
push	0
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _pSelect$[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _ephemTab$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
cmp	DWORD PTR _pRowid$[ebp], 0
je	SHORT $LN12@updateVirt
mov	DWORD PTR tv167[ebp], 1
jmp	SHORT $LN13@updateVirt
mov	DWORD PTR tv167[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
mov	ecx, DWORD PTR tv167[ebp]
lea	edx, DWORD PTR [eax+ecx+1]
push	edx
mov	eax, DWORD PTR _ephemTab$[ebp]
push	eax
push	55					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	8
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	eax, DWORD PTR _ephemTab$[ebp]
push	eax
push	14					
lea	ecx, DWORD PTR _dest$[ebp]
push	ecx
call	_sqlite3SelectDestInit
add	esp, 12					
lea	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Select
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv182[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv182[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv182[ebp]
mov	DWORD PTR _iReg$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
lea	edx, DWORD PTR [edx+ecx+1]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], edx
push	0
mov	ecx, DWORD PTR _ephemTab$[ebp]
push	ecx
push	105					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr$[ebp], eax
mov	eax, DWORD PTR _iReg$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _ephemTab$[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _pRowid$[ebp], 0
je	SHORT $LN14@updateVirt
mov	DWORD PTR tv203[ebp], 1
jmp	SHORT $LN15@updateVirt
mov	DWORD PTR tv203[ebp], 0
mov	eax, DWORD PTR _iReg$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR tv203[ebp]
push	ecx
mov	edx, DWORD PTR _ephemTab$[ebp]
push	edx
push	46					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@updateVirt
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN1@updateVirt
cmp	DWORD PTR _pRowid$[ebp], 0
je	SHORT $LN16@updateVirt
mov	DWORD PTR tv217[ebp], 1
jmp	SHORT $LN17@updateVirt
mov	DWORD PTR tv217[ebp], 0
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _iReg$[ebp]
lea	eax, DWORD PTR [edx+ecx+2]
push	eax
mov	ecx, DWORD PTR tv217[ebp]
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
push	eax
mov	ecx, DWORD PTR _ephemTab$[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN2@updateVirt
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3VtabMakeWritable
add	esp, 8
push	-10					
mov	edx, DWORD PTR _pVTab$[ebp]
push	edx
mov	eax, DWORD PTR _iReg$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
add	edx, 2
push	edx
push	0
push	15					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
cmp	DWORD PTR _onError$[ebp], 10		
jne	SHORT $LN18@updateVirt
mov	DWORD PTR tv235[ebp], 2
jmp	SHORT $LN19@updateVirt
mov	ecx, DWORD PTR _onError$[ebp]
mov	DWORD PTR tv235[ebp], ecx
movzx	edx, BYTE PTR tv235[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3MayAbort
add	esp, 4
mov	edx, DWORD PTR _addr$[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _ephemTab$[ebp]
push	eax
push	9
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addr$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
push	0
mov	ecx, DWORD PTR _ephemTab$[ebp]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getRowTrigger PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN8@getRowTrig
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN9@getRowTrig
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pRoot$[ebp], ecx
mov	edx, DWORD PTR _pRoot$[ebp]
mov	eax, DWORD PTR [edx+528]
mov	DWORD PTR _pPrg$[ebp], eax
jmp	SHORT $LN5@getRowTrig
mov	ecx, DWORD PTR _pPrg$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pPrg$[ebp], edx
cmp	DWORD PTR _pPrg$[ebp], 0
je	SHORT $LN3@getRowTrig
mov	eax, DWORD PTR _pPrg$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _pTrigger$[ebp]
jne	SHORT $LN2@getRowTrig
mov	edx, DWORD PTR _pPrg$[ebp]
mov	eax, DWORD PTR [edx+12]
cmp	eax, DWORD PTR _orconf$[ebp]
je	SHORT $LN3@getRowTrig
jmp	SHORT $LN4@getRowTrig
cmp	DWORD PTR _pPrg$[ebp], 0
jne	SHORT $LN1@getRowTrig
mov	ecx, DWORD PTR _orconf$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_codeRowTrigger
add	esp, 16					
mov	DWORD PTR _pPrg$[ebp], eax
mov	eax, DWORD PTR _pPrg$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_codeRowTrigger PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN11@codeRowTri
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN12@codeRowTri
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pTop$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	DWORD PTR _pWhen$[ebp], 0
mov	DWORD PTR _pProgram$[ebp], 0
mov	DWORD PTR _iEndTrigger$[ebp], 0
push	24					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pPrg$[ebp], eax
cmp	DWORD PTR _pPrg$[ebp], 0
jne	SHORT $LN8@codeRowTri
xor	eax, eax
jmp	$LN9@codeRowTri
mov	edx, DWORD PTR _pPrg$[ebp]
mov	eax, DWORD PTR _pTop$[ebp]
mov	ecx, DWORD PTR [eax+528]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pTop$[ebp]
mov	eax, DWORD PTR _pPrg$[ebp]
mov	DWORD PTR [edx+528], eax
push	28					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pProgram$[ebp], eax
mov	edx, DWORD PTR _pPrg$[ebp]
mov	eax, DWORD PTR _pProgram$[ebp]
mov	DWORD PTR [edx+8], eax
cmp	DWORD PTR _pProgram$[ebp], 0
jne	SHORT $LN7@codeRowTri
xor	eax, eax
jmp	$LN9@codeRowTri
mov	ecx, DWORD PTR _pProgram$[ebp]
push	ecx
mov	edx, DWORD PTR _pTop$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3VdbeLinkSubProgram
add	esp, 8
mov	ecx, DWORD PTR _pPrg$[ebp]
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pPrg$[ebp]
mov	ecx, DWORD PTR _orconf$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pPrg$[ebp]
mov	DWORD PTR [ecx+eax+16], -1
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pPrg$[ebp]
mov	DWORD PTR [eax+edx+16], -1
push	536					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pSubParse$[ebp], eax
cmp	DWORD PTR _pSubParse$[ebp], 0
jne	SHORT $LN6@codeRowTri
xor	eax, eax
jmp	$LN9@codeRowTri
push	32					
push	0
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pSubParse$[ebp]
mov	DWORD PTR _sNC$[ebp], eax
mov	ecx, DWORD PTR _pSubParse$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pSubParse$[ebp]
mov	ecx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [eax+412], ecx
mov	edx, DWORD PTR _pSubParse$[ebp]
mov	eax, DWORD PTR _pTop$[ebp]
mov	DWORD PTR [edx+408], eax
mov	ecx, DWORD PTR _pSubParse$[ebp]
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx+492], eax
mov	ecx, DWORD PTR _pSubParse$[ebp]
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	al, BYTE PTR [edx+8]
mov	BYTE PTR [ecx+436], al
mov	ecx, DWORD PTR _pSubParse$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+424]
mov	DWORD PTR [ecx+424], eax
mov	ecx, DWORD PTR _pSubParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	$LN5@codeRowTri
push	-1
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG115633
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
push	eax
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	eax, DWORD PTR _pTrigger$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN4@codeRowTri
push	0
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pWhen$[ebp], eax
mov	ecx, DWORD PTR _pWhen$[ebp]
push	ecx
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
jne	SHORT $LN3@codeRowTri
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	SHORT $LN3@codeRowTri
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iEndTrigger$[ebp], eax
push	8
mov	eax, DWORD PTR _iEndTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pWhen$[ebp]
push	ecx
mov	edx, DWORD PTR _pSubParse$[ebp]
push	edx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	eax, DWORD PTR _pWhen$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _orconf$[ebp]
push	edx
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _pSubParse$[ebp]
push	edx
call	_codeTriggerProgram
add	esp, 12					
cmp	DWORD PTR _iEndTrigger$[ebp], 0
je	SHORT $LN2@codeRowTri
mov	eax, DWORD PTR _iEndTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
push	24					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	eax, DWORD PTR _pSubParse$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_transferParseError
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN1@codeRowTri
mov	ecx, DWORD PTR _pTop$[ebp]
add	ecx, 392				
push	ecx
mov	edx, DWORD PTR _pProgram$[ebp]
add	edx, 4
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeTakeOpArray
add	esp, 12					
mov	ecx, DWORD PTR _pProgram$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pProgram$[ebp]
mov	eax, DWORD PTR _pSubParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pProgram$[ebp]
mov	eax, DWORD PTR _pSubParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR [edx+12], ecx
mov	edx, DWORD PTR _pProgram$[ebp]
mov	eax, DWORD PTR _pSubParse$[ebp]
mov	ecx, DWORD PTR [eax+80]
mov	DWORD PTR [edx+16], ecx
mov	edx, DWORD PTR _pProgram$[ebp]
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pPrg$[ebp]
mov	ecx, DWORD PTR _pSubParse$[ebp]
mov	ecx, DWORD PTR [ecx+428]
mov	DWORD PTR [eax+edx+16], ecx
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pPrg$[ebp]
mov	ecx, DWORD PTR _pSubParse$[ebp]
mov	ecx, DWORD PTR [ecx+432]
mov	DWORD PTR [eax+edx+16], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeDelete
add	esp, 4
mov	eax, DWORD PTR _pSubParse$[ebp]
push	eax
call	_sqlite3ParserReset
add	esp, 4
mov	ecx, DWORD PTR _pSubParse$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pPrg$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_transferParseError PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pTo$[ebp]
cmp	DWORD PTR [eax+64], 0
jne	SHORT $LN2@transferPa
mov	ecx, DWORD PTR _pTo$[ebp]
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pTo$[ebp]
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR [ecx+64], eax
jmp	SHORT $LN3@transferPa
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_codeTriggerProgram PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pStepList$[ebp]
mov	DWORD PTR _pStep$[ebp], ecx
jmp	SHORT $LN10@codeTrigge
mov	edx, DWORD PTR _pStep$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _pStep$[ebp], eax
cmp	DWORD PTR _pStep$[ebp], 0
je	$LN8@codeTrigge
cmp	DWORD PTR _orconf$[ebp], 10		
jne	SHORT $LN13@codeTrigge
mov	ecx, DWORD PTR _pStep$[ebp]
movzx	edx, BYTE PTR [ecx+1]
mov	DWORD PTR tv73[ebp], edx
jmp	SHORT $LN14@codeTrigge
movzx	eax, BYTE PTR _orconf$[ebp]
mov	DWORD PTR tv73[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	dl, BYTE PTR tv73[ebp]
mov	BYTE PTR [ecx+437], dl
mov	eax, DWORD PTR _pStep$[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR tv77[ebp], cl
cmp	BYTE PTR tv77[ebp], 108			
je	SHORT $LN4@codeTrigge
cmp	BYTE PTR tv77[ebp], 109			
je	$LN3@codeTrigge
cmp	BYTE PTR tv77[ebp], 110			
je	SHORT $LN5@codeTrigge
jmp	$LN2@codeTrigge
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+437]
push	eax
push	0
mov	ecx, DWORD PTR _pStep$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
push	eax
push	0
mov	ecx, DWORD PTR _pStep$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDup
add	esp, 12					
push	eax
mov	ecx, DWORD PTR _pStep$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_targetSrcList
add	esp, 8
push	eax
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Update
add	esp, 20					
jmp	$LN6@codeTrigge
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+437]
push	edx
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3IdListDup
add	esp, 8
push	eax
push	0
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDup
add	esp, 12					
push	eax
mov	eax, DWORD PTR _pStep$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_targetSrcList
add	esp, 8
push	eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Insert
add	esp, 20					
jmp	$LN6@codeTrigge
push	0
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
push	eax
mov	eax, DWORD PTR _pStep$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_targetSrcList
add	esp, 8
push	eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3DeleteFrom
add	esp, 12					
jmp	SHORT $LN6@codeTrigge
push	0
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDup
add	esp, 12					
mov	DWORD PTR _pSelect$2[ebp], eax
push	0
push	4
lea	eax, DWORD PTR _sDest$1[ebp]
push	eax
call	_sqlite3SelectDestInit
add	esp, 12					
lea	ecx, DWORD PTR _sDest$1[ebp]
push	ecx
mov	edx, DWORD PTR _pSelect$2[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Select
add	esp, 12					
mov	ecx, DWORD PTR _pSelect$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _pStep$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 119				
je	SHORT $LN1@codeTrigge
push	75					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp0
add	esp, 8
jmp	$LN9@codeTrigge
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_targetSrcList PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	0
mov	eax, DWORD PTR _pStep$[ebp]
add	eax, 12					
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SrcListAppend
add	esp, 16					
mov	DWORD PTR _pSrc$[ebp], eax
cmp	DWORD PTR _pSrc$[ebp], 0
je	SHORT $LN3@targetSrcL
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
je	SHORT $LN1@targetSrcL
cmp	DWORD PTR _iDb$[ebp], 2
jl	SHORT $LN3@targetSrcL
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$1[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$1[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _db$1[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
imul	ecx, edx, 80
mov	edx, DWORD PTR _pSrc$[ebp]
mov	DWORD PTR [edx+ecx+12], eax
mov	eax, DWORD PTR _pSrc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_checkColumnOverlap PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pIdList$[ebp], 0
je	SHORT $LN5@checkColum
cmp	DWORD PTR _pEList$[ebp], 0
jne	SHORT $LN6@checkColum
mov	eax, 1
jmp	SHORT $LN7@checkColum
mov	DWORD PTR _e$[ebp], 0
jmp	SHORT $LN4@checkColum
mov	eax, DWORD PTR _e$[ebp]
add	eax, 1
mov	DWORD PTR _e$[ebp], eax
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR _e$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN2@checkColum
imul	eax, DWORD PTR _e$[ebp], 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
mov	ecx, DWORD PTR _pIdList$[ebp]
push	ecx
call	_sqlite3IdListIndex
add	esp, 8
test	eax, eax
jl	SHORT $LN1@checkColum
mov	eax, 1
jmp	SHORT $LN7@checkColum
jmp	SHORT $LN3@checkColum
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_tableOfTrigger PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR [edx+24]
add	eax, 8
push	eax
call	_sqlite3HashFind
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_triggerStepAllocate PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 40					
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTriggerStep$[ebp], eax
cmp	DWORD PTR _pTriggerStep$[ebp], 0
je	SHORT $LN1@triggerSte
mov	eax, 40					
shl	eax, 0
add	eax, DWORD PTR _pTriggerStep$[ebp]
mov	DWORD PTR _z$1[ebp], eax
mov	ecx, DWORD PTR _pName$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _z$1[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	ecx, DWORD PTR _z$1[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pTriggerStep$[ebp]
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+16], ecx
mov	edx, DWORD PTR _pTriggerStep$[ebp]
mov	al, BYTE PTR _op$[ebp]
mov	BYTE PTR [edx], al
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_get_table_cb PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pArg$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN18@sqlite3_ge
cmp	DWORD PTR _argv$[ebp], 0
je	SHORT $LN18@sqlite3_ge
mov	edx, DWORD PTR _nCol$[ebp]
shl	edx, 1
mov	DWORD PTR _need$[ebp], edx
jmp	SHORT $LN17@sqlite3_ge
mov	eax, DWORD PTR _nCol$[ebp]
mov	DWORD PTR _need$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
add	edx, DWORD PTR _need$[ebp]
mov	eax, DWORD PTR _p$[ebp]
cmp	edx, DWORD PTR [eax+8]
jle	SHORT $LN16@sqlite3_ge
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _need$[ebp]
lea	ecx, DWORD PTR [eax+edx*2]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _azNew$2[ebp], eax
cmp	DWORD PTR _azNew$2[ebp], 0
jne	SHORT $LN15@sqlite3_ge
jmp	$malloc_failed$21
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _azNew$2[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN14@sqlite3_ge
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _nCol$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN13@sqlite3_ge
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nCol$[ebp]
jge	SHORT $LN11@sqlite3_ge
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _colv$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
push	OFFSET $SG115155
call	_sqlite3_mprintf
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN10@sqlite3_ge
jmp	$malloc_failed$21
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR _z$[ebp]
mov	DWORD PTR [edx+eax*4], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+20], eax
jmp	SHORT $LN12@sqlite3_ge
jmp	SHORT $LN9@sqlite3_ge
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
cmp	eax, DWORD PTR _nCol$[ebp]
je	SHORT $LN9@sqlite3_ge
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3_free
add	esp, 4
push	OFFSET $SG115159
call	_sqlite3_mprintf
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+24], 1
mov	eax, 1
jmp	$LN19@sqlite3_ge
cmp	DWORD PTR _argv$[ebp], 0
je	$LN7@sqlite3_ge
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@sqlite3_ge
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nCol$[ebp]
jge	$LN4@sqlite3_ge
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _argv$[ebp]
cmp	DWORD PTR [eax+edx*4], 0
jne	SHORT $LN3@sqlite3_ge
mov	DWORD PTR _z$[ebp], 0
jmp	SHORT $LN2@sqlite3_ge
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
mov	DWORD PTR _n$1[ebp], eax
mov	ecx, DWORD PTR _n$1[ebp]
push	ecx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN1@sqlite3_ge
jmp	SHORT $malloc_failed$21
mov	edx, DWORD PTR _n$1[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR _z$[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
add	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+20], edx
jmp	$LN5@sqlite3_ge
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], edx
xor	eax, eax
jmp	SHORT $LN19@sqlite3_ge
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], 7
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_explainSimpleCount PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+450]
cmp	ecx, 2
jne	$LN2@explainSim
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN5@explainSim
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
je	SHORT $LN4@explainSim
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
je	SHORT $LN5@explainSim
mov	DWORD PTR tv75[ebp], 1
jmp	SHORT $LN6@explainSim
mov	DWORD PTR tv75[ebp], 0
mov	eax, DWORD PTR tv75[ebp]
mov	DWORD PTR _bCover$2[ebp], eax
cmp	DWORD PTR _bCover$2[ebp], 0
je	SHORT $LN7@explainSim
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR tv79[ebp], edx
jmp	SHORT $LN8@explainSim
mov	DWORD PTR tv79[ebp], OFFSET $SG114919
cmp	DWORD PTR _bCover$2[ebp], 0
je	SHORT $LN9@explainSim
mov	DWORD PTR tv82[ebp], OFFSET $SG114920
jmp	SHORT $LN10@explainSim
mov	DWORD PTR tv82[ebp], OFFSET $SG114921
mov	eax, DWORD PTR tv79[ebp]
push	eax
mov	ecx, DWORD PTR tv82[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG114922
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3MPrintf
add	esp, 20					
mov	DWORD PTR _zEqp$1[ebp], eax
push	-1
mov	eax, DWORD PTR _zEqp$1[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+464]
push	edx
push	157					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_updateAccumulator PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _regHit$[ebp], 0
mov	DWORD PTR _addrHitTest$[ebp], 0
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	BYTE PTR [edx], 1
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	DWORD PTR _pF$[ebp], ecx
jmp	SHORT $LN18@updateAccu
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pF$[ebp]
add	eax, 16					
mov	DWORD PTR _pF$[ebp], eax
mov	ecx, DWORD PTR _pAggInfo$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+44]
jge	$LN16@updateAccu
mov	DWORD PTR _addrNext$3[ebp], 0
mov	eax, DWORD PTR _pF$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pList$4[ebp], edx
cmp	DWORD PTR _pList$4[ebp], 0
je	SHORT $LN15@updateAccu
mov	eax, DWORD PTR _pList$4[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nArg$7[ebp], ecx
mov	edx, DWORD PTR _nArg$7[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _regAgg$6[ebp], eax
push	1
mov	ecx, DWORD PTR _regAgg$6[ebp]
push	ecx
mov	edx, DWORD PTR _pList$4[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeExprList
add	esp, 16					
jmp	SHORT $LN14@updateAccu
mov	DWORD PTR _nArg$7[ebp], 0
mov	DWORD PTR _regAgg$6[ebp], 0
mov	ecx, DWORD PTR _pF$[ebp]
cmp	DWORD PTR [ecx+12], 0
jl	SHORT $LN13@updateAccu
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrNext$3[ebp], eax
mov	eax, DWORD PTR _regAgg$6[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _addrNext$3[ebp]
push	ecx
mov	edx, DWORD PTR _pF$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_codeDistinct
add	esp, 20					
mov	edx, DWORD PTR _pF$[ebp]
mov	eax, DWORD PTR [edx+4]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 32					
je	$LN12@updateAccu
mov	DWORD PTR _pColl$5[ebp], 0
mov	DWORD PTR _j$2[ebp], 0
mov	edx, DWORD PTR _pList$4[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$1[ebp], eax
jmp	SHORT $LN11@updateAccu
mov	ecx, DWORD PTR _j$2[ebp]
add	ecx, 1
mov	DWORD PTR _j$2[ebp], ecx
mov	edx, DWORD PTR _pItem$1[ebp]
add	edx, 24					
mov	DWORD PTR _pItem$1[ebp], edx
cmp	DWORD PTR _pColl$5[ebp], 0
jne	SHORT $LN9@updateAccu
mov	eax, DWORD PTR _j$2[ebp]
cmp	eax, DWORD PTR _nArg$7[ebp]
jge	SHORT $LN9@updateAccu
mov	ecx, DWORD PTR _pItem$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$5[ebp], eax
jmp	SHORT $LN10@updateAccu
cmp	DWORD PTR _pColl$5[ebp], 0
jne	SHORT $LN8@updateAccu
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pColl$5[ebp], eax
cmp	DWORD PTR _regHit$[ebp], 0
jne	SHORT $LN7@updateAccu
mov	ecx, DWORD PTR _pAggInfo$[ebp]
cmp	DWORD PTR [ecx+36], 0
je	SHORT $LN7@updateAccu
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv146[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv146[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv146[ebp]
mov	DWORD PTR _regHit$[ebp], eax
push	-4					
mov	ecx, DWORD PTR _pColl$5[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _regHit$[ebp]
push	edx
push	36					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	-5					
mov	ecx, DWORD PTR _pF$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pF$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _regAgg$6[ebp]
push	edx
push	0
push	10					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
movzx	ecx, BYTE PTR _nArg$7[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	eax, DWORD PTR _nArg$7[ebp]
push	eax
mov	ecx, DWORD PTR _regAgg$6[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	eax, DWORD PTR _nArg$7[ebp]
push	eax
mov	ecx, DWORD PTR _regAgg$6[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempRange
add	esp, 12					
cmp	DWORD PTR _addrNext$3[ebp], 0
je	SHORT $LN6@updateAccu
mov	eax, DWORD PTR _addrNext$3[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheClear
add	esp, 4
jmp	$LN17@updateAccu
cmp	DWORD PTR _regHit$[ebp], 0
je	SHORT $LN5@updateAccu
mov	eax, DWORD PTR _regHit$[ebp]
push	eax
push	44					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrHitTest$[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheClear
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pC$[ebp], ecx
jmp	SHORT $LN4@updateAccu
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pC$[ebp]
add	eax, 24					
mov	DWORD PTR _pC$[ebp], eax
mov	ecx, DWORD PTR _pAggInfo$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+36]
jge	SHORT $LN2@updateAccu
mov	eax, DWORD PTR _pC$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pC$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
jmp	SHORT $LN3@updateAccu
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheClear
add	esp, 4
cmp	DWORD PTR _addrHitTest$[ebp], 0
je	SHORT $LN19@updateAccu
mov	ecx, DWORD PTR _addrHitTest$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_finalizeAggFunctions PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	DWORD PTR _pF$[ebp], eax
jmp	SHORT $LN3@finalizeAg
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pF$[ebp]
add	edx, 16					
mov	DWORD PTR _pF$[ebp], edx
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+44]
jge	SHORT $LN4@finalizeAg
mov	edx, DWORD PTR _pF$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pList$1[ebp], ecx
cmp	DWORD PTR _pList$1[ebp], 0
je	SHORT $LN6@finalizeAg
mov	edx, DWORD PTR _pList$1[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR tv79[ebp], eax
jmp	SHORT $LN7@finalizeAg
mov	DWORD PTR tv79[ebp], 0
push	-5					
mov	ecx, DWORD PTR _pF$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
push	0
mov	eax, DWORD PTR tv79[ebp]
push	eax
mov	ecx, DWORD PTR _pF$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	137					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN2@finalizeAg
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resetAccumulator PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _pAggInfo$[ebp]
add	eax, DWORD PTR [ecx+32]
mov	DWORD PTR _nReg$[ebp], eax
jne	SHORT $LN8@resetAccum
jmp	$LN9@resetAccum
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pAggInfo$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _pAggInfo$[ebp]
mov	edx, DWORD PTR [ecx+40]
mov	DWORD PTR _pFunc$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN7@resetAccum
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pFunc$[ebp]
add	ecx, 16					
mov	DWORD PTR _pFunc$[ebp], ecx
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+44]
jge	$LN9@resetAccum
mov	ecx, DWORD PTR _pFunc$[ebp]
cmp	DWORD PTR [ecx+12], 0
jl	SHORT $LN4@resetAccum
mov	edx, DWORD PTR _pFunc$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pE$2[ebp], eax
mov	ecx, DWORD PTR _pE$2[ebp]
cmp	DWORD PTR [ecx+20], 0
je	SHORT $LN2@resetAccum
mov	edx, DWORD PTR _pE$2[ebp]
mov	eax, DWORD PTR [edx+20]
cmp	DWORD PTR [eax], 1
je	SHORT $LN3@resetAccum
push	OFFSET $SG114846
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
mov	edx, DWORD PTR _pFunc$[ebp]
mov	DWORD PTR [edx+12], -1
jmp	SHORT $LN4@resetAccum
push	0
push	0
mov	eax, DWORD PTR _pE$2[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_keyInfoFromExprList
add	esp, 16					
mov	DWORD PTR _pKeyInfo$1[ebp], eax
push	-6					
mov	eax, DWORD PTR _pKeyInfo$1[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _pFunc$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
push	55					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	$LN6@resetAccum
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SelectAddTypeInfo PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	24					
push	0
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _w$[ebp+8], OFFSET _selectAddSubqueryTypeInfo
mov	DWORD PTR _w$[ebp], OFFSET _exprWalkNoop
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _w$[ebp+12], ecx
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_sqlite3WalkSelect
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_selectAddSubqueryTypeInfo PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 32					
jne	$LN9@selectAddS
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
or	eax, 32					
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+6], ax
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pTabList$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pTabList$[ebp]
add	eax, 8
mov	DWORD PTR _pFrom$[ebp], eax
jmp	SHORT $LN7@selectAddS
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pFrom$[ebp]
add	edx, 80					
mov	DWORD PTR _pFrom$[ebp], edx
mov	eax, DWORD PTR _pTabList$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN9@selectAddS
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pTab$1[ebp], eax
cmp	DWORD PTR _pTab$1[ebp], 0
je	SHORT $LN4@selectAddS
mov	ecx, DWORD PTR _pTab$1[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 2
je	SHORT $LN4@selectAddS
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pSel$2[ebp], ecx
cmp	DWORD PTR _pSel$2[ebp], 0
je	SHORT $LN4@selectAddS
mov	edx, DWORD PTR _pSel$2[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN1@selectAddS
mov	eax, DWORD PTR _pSel$2[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pSel$2[ebp], ecx
jmp	SHORT $LN2@selectAddS
mov	edx, DWORD PTR _pSel$2[ebp]
push	edx
mov	eax, DWORD PTR _pTab$1[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_selectAddColumnTypeAndCollation
add	esp, 12					
jmp	SHORT $LN6@selectAddS
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SelectExpand PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	24					
push	0
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _w$[ebp], OFFSET _exprWalkNoop
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _w$[ebp+12], ecx
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+22]
test	eax, eax
je	SHORT $LN1@sqlite3Sel
mov	DWORD PTR _w$[ebp+4], OFFSET _convertCompoundSelectToSubquery
mov	ecx, DWORD PTR _pSelect$[ebp]
push	ecx
lea	edx, DWORD PTR _w$[ebp]
push	edx
call	_sqlite3WalkSelect
add	esp, 8
mov	DWORD PTR _w$[ebp+4], OFFSET _selectExpander
mov	DWORD PTR _w$[ebp+8], OFFSET _selectPopWith
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
lea	ecx, DWORD PTR _w$[ebp]
push	ecx
call	_sqlite3WalkSelect
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprWalkNoop PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_selectExpander PROC
push	ebp
mov	ebp, esp
sub	esp, 136				
push	esi
mov	eax, DWORD PTR _pWalker$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	dx, WORD PTR [ecx+6]
mov	WORD PTR _selFlags$[ebp], dx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
or	ecx, 16					
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+6], cx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN66@selectExpa
mov	eax, 2
jmp	$LN67@selectExpa
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+32], 0
je	SHORT $LN64@selectExpa
movzx	eax, WORD PTR _selFlags$[ebp]
and	eax, 16					
je	SHORT $LN65@selectExpa
mov	eax, 1
jmp	$LN67@selectExpa
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pTabList$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pEList$[ebp], ecx
push	0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_findRightmost
add	esp, 4
mov	eax, DWORD PTR [eax+68]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3WithPush
add	esp, 12					
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SrcListAssignCursors
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pTabList$[ebp]
add	ecx, 8
mov	DWORD PTR _pFrom$[ebp], ecx
jmp	SHORT $LN63@selectExpa
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pFrom$[ebp]
add	eax, 80					
mov	DWORD PTR _pFrom$[ebp], eax
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	$LN61@selectExpa
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 3
and	ecx, 1
je	SHORT $LN60@selectExpa
jmp	SHORT $LN62@selectExpa
mov	edx, DWORD PTR _pFrom$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN59@selectExpa
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
call	_selectPopWith
add	esp, 8
mov	eax, 1
jmp	$LN67@selectExpa
mov	edx, DWORD PTR _pFrom$[ebp]
push	edx
mov	eax, DWORD PTR _pWalker$[ebp]
push	eax
call	_withExpand
add	esp, 8
test	eax, eax
je	SHORT $LN58@selectExpa
mov	eax, 2
jmp	$LN67@selectExpa
mov	ecx, DWORD PTR _pFrom$[ebp]
cmp	DWORD PTR [ecx+16], 0
je	SHORT $LN57@selectExpa
jmp	$LN56@selectExpa
mov	edx, DWORD PTR _pFrom$[ebp]
cmp	DWORD PTR [edx+8], 0
jne	$LN55@selectExpa
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pSel$13[ebp], ecx
mov	edx, DWORD PTR _pSel$13[ebp]
push	edx
mov	eax, DWORD PTR _pWalker$[ebp]
push	eax
call	_sqlite3WalkSelect
add	esp, 8
push	76					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTab$19[ebp], eax
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR _pTab$19[ebp]
mov	DWORD PTR [edx+16], eax
cmp	DWORD PTR _pTab$19[ebp], 0
jne	SHORT $LN54@selectExpa
mov	eax, 2
jmp	$LN67@selectExpa
mov	ecx, 1
mov	edx, DWORD PTR _pTab$19[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pTab$19[ebp]
push	eax
push	OFFSET $SG114677
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	edx, DWORD PTR _pTab$19[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _pSel$13[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN52@selectExpa
mov	ecx, DWORD PTR _pSel$13[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pSel$13[ebp], edx
jmp	SHORT $LN53@selectExpa
mov	eax, DWORD PTR _pTab$19[ebp]
add	eax, 4
push	eax
mov	ecx, DWORD PTR _pTab$19[ebp]
add	ecx, 38					
push	ecx
mov	edx, DWORD PTR _pSel$13[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_selectColumnsFromExprList
add	esp, 16					
or	edx, -1
mov	eax, DWORD PTR _pTab$19[ebp]
mov	WORD PTR [eax+36], dx
mov	ecx, 200				
mov	edx, DWORD PTR _pTab$19[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pTab$19[ebp]
movzx	ecx, BYTE PTR [eax+44]
or	ecx, 2
mov	edx, DWORD PTR _pTab$19[ebp]
mov	BYTE PTR [edx+44], cl
jmp	$LN56@selectExpa
mov	eax, DWORD PTR _pFrom$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateTableItem
add	esp, 12					
mov	DWORD PTR _pTab$19[ebp], eax
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR _pTab$19[ebp]
mov	DWORD PTR [edx+16], eax
cmp	DWORD PTR _pTab$19[ebp], 0
jne	SHORT $LN50@selectExpa
mov	eax, 2
jmp	$LN67@selectExpa
mov	ecx, DWORD PTR _pTab$19[ebp]
movzx	edx, WORD PTR [ecx+40]
cmp	edx, 65535				
jne	SHORT $LN49@selectExpa
mov	eax, DWORD PTR _pTab$19[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG114686
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [eax+16], 0
mov	eax, 2
jmp	$LN67@selectExpa
mov	ecx, DWORD PTR _pTab$19[ebp]
mov	dx, WORD PTR [ecx+40]
add	dx, 1
mov	eax, DWORD PTR _pTab$19[ebp]
mov	WORD PTR [eax+40], dx
mov	ecx, DWORD PTR _pTab$19[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN47@selectExpa
mov	edx, DWORD PTR _pTab$19[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN56@selectExpa
mov	ecx, DWORD PTR _pTab$19[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ViewGetColumnNames
add	esp, 8
test	eax, eax
je	SHORT $LN46@selectExpa
mov	eax, 2
jmp	$LN67@selectExpa
push	0
mov	eax, DWORD PTR _pTab$19[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDup
add	esp, 12					
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
call	_sqlite3WalkSelect
add	esp, 8
mov	edx, DWORD PTR _pFrom$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3IndexedByLookup
add	esp, 8
test	eax, eax
je	SHORT $LN45@selectExpa
mov	eax, 2
jmp	$LN67@selectExpa
jmp	$LN62@selectExpa
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
jne	SHORT $LN43@selectExpa
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqliteProcessJoin
add	esp, 8
test	eax, eax
je	SHORT $LN44@selectExpa
mov	eax, 2
jmp	$LN67@selectExpa
mov	DWORD PTR _k$[ebp], 0
jmp	SHORT $LN42@selectExpa
mov	edx, DWORD PTR _k$[ebp]
add	edx, 1
mov	DWORD PTR _k$[ebp], edx
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR _k$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN40@selectExpa
imul	edx, DWORD PTR _k$[ebp], 24
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _pE$[ebp], edx
mov	eax, DWORD PTR _pE$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 116				
jne	SHORT $LN39@selectExpa
jmp	SHORT $LN40@selectExpa
mov	edx, DWORD PTR _pE$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 122				
jne	SHORT $LN38@selectExpa
mov	ecx, DWORD PTR _pE$[ebp]
mov	edx, DWORD PTR [ecx+16]
movzx	eax, BYTE PTR [edx]
cmp	eax, 116				
jne	SHORT $LN38@selectExpa
jmp	SHORT $LN40@selectExpa
jmp	SHORT $LN41@selectExpa
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR _k$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	$LN37@selectExpa
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _a$16[ebp], ecx
mov	DWORD PTR _pNew$18[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _flags$4[ebp], ecx
mov	edx, DWORD PTR _flags$4[ebp]
and	edx, 32					
je	SHORT $LN69@selectExpa
mov	eax, DWORD PTR _flags$4[ebp]
and	eax, 64					
jne	SHORT $LN69@selectExpa
mov	DWORD PTR tv248[ebp], 1
jmp	SHORT $LN70@selectExpa
mov	DWORD PTR tv248[ebp], 0
mov	ecx, DWORD PTR tv248[ebp]
mov	DWORD PTR _longNames$6[ebp], ecx
mov	DWORD PTR _k$[ebp], 0
jmp	SHORT $LN36@selectExpa
mov	edx, DWORD PTR _k$[ebp]
add	edx, 1
mov	DWORD PTR _k$[ebp], edx
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR _k$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	$LN34@selectExpa
imul	edx, DWORD PTR _k$[ebp], 24
mov	eax, DWORD PTR _a$16[ebp]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _pE$[ebp], ecx
mov	edx, DWORD PTR _pE$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pRight$[ebp], eax
mov	ecx, DWORD PTR _pE$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 116				
je	$LN33@selectExpa
mov	eax, DWORD PTR _pE$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 122				
jne	SHORT $LN32@selectExpa
mov	edx, DWORD PTR _pRight$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 116				
je	$LN33@selectExpa
imul	ecx, DWORD PTR _k$[ebp], 24
mov	edx, DWORD PTR _a$16[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, DWORD PTR _pNew$18[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pNew$18[ebp], eax
cmp	DWORD PTR _pNew$18[ebp], 0
je	SHORT $LN31@selectExpa
imul	eax, DWORD PTR _k$[ebp], 24
mov	ecx, DWORD PTR _pNew$18[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
imul	ecx, edx, 24
mov	edx, DWORD PTR _pNew$18[ebp]
mov	edx, DWORD PTR [edx+4]
mov	esi, DWORD PTR _a$16[ebp]
mov	eax, DWORD PTR [esi+eax+4]
mov	DWORD PTR [edx+ecx+4], eax
imul	ecx, DWORD PTR _k$[ebp], 24
mov	edx, DWORD PTR _pNew$18[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
imul	edx, eax, 24
mov	eax, DWORD PTR _pNew$18[ebp]
mov	eax, DWORD PTR [eax+4]
mov	esi, DWORD PTR _a$16[ebp]
mov	ecx, DWORD PTR [esi+ecx+8]
mov	DWORD PTR [eax+edx+8], ecx
imul	edx, DWORD PTR _k$[ebp], 24
mov	eax, DWORD PTR _a$16[ebp]
mov	DWORD PTR [eax+edx+4], 0
imul	ecx, DWORD PTR _k$[ebp], 24
mov	edx, DWORD PTR _a$16[ebp]
mov	DWORD PTR [edx+ecx+8], 0
imul	eax, DWORD PTR _k$[ebp], 24
mov	ecx, DWORD PTR _a$16[ebp]
mov	DWORD PTR [ecx+eax], 0
jmp	$LN30@selectExpa
mov	DWORD PTR _tableSeen$3[ebp], 0
mov	DWORD PTR _zTName$17[ebp], 0
mov	edx, DWORD PTR _pE$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 122				
jne	SHORT $LN29@selectExpa
mov	ecx, DWORD PTR _pE$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _zTName$17[ebp], eax
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pTabList$[ebp]
add	ecx, 8
mov	DWORD PTR _pFrom$[ebp], ecx
jmp	SHORT $LN28@selectExpa
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pFrom$[ebp]
add	eax, 80					
mov	DWORD PTR _pFrom$[ebp], eax
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	$LN26@selectExpa
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pTab$11[ebp], ecx
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pSub$15[ebp], eax
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _zTabName$14[ebp], edx
mov	DWORD PTR _zSchemaName$8[ebp], 0
cmp	DWORD PTR _zTabName$14[ebp], 0
jne	SHORT $LN25@selectExpa
mov	eax, DWORD PTR _pTab$11[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _zTabName$14[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN24@selectExpa
jmp	$LN26@selectExpa
cmp	DWORD PTR _pSub$15[ebp], 0
je	SHORT $LN22@selectExpa
mov	ecx, DWORD PTR _pSub$15[ebp]
movzx	edx, WORD PTR [ecx+6]
and	edx, 512				
jne	SHORT $LN23@selectExpa
mov	DWORD PTR _pSub$15[ebp], 0
cmp	DWORD PTR _zTName$17[ebp], 0
je	SHORT $LN21@selectExpa
mov	eax, DWORD PTR _zTabName$14[ebp]
push	eax
mov	ecx, DWORD PTR _zTName$17[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN21@selectExpa
jmp	$LN27@selectExpa
mov	edx, DWORD PTR _pTab$11[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$2[ebp], eax
cmp	DWORD PTR _iDb$2[ebp], 0
jl	SHORT $LN71@selectExpa
mov	edx, DWORD PTR _iDb$2[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR tv337[ebp], edx
jmp	SHORT $LN72@selectExpa
mov	DWORD PTR tv337[ebp], OFFSET $SG114733
mov	eax, DWORD PTR tv337[ebp]
mov	DWORD PTR _zSchemaName$8[ebp], eax
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN20@selectExpa
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pTab$11[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _j$[ebp], eax
jge	$LN18@selectExpa
imul	ecx, DWORD PTR _j$[ebp], 24
mov	edx, DWORD PTR _pTab$11[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zName$10[ebp], ecx
cmp	DWORD PTR _zTName$17[ebp], 0
je	SHORT $LN17@selectExpa
cmp	DWORD PTR _pSub$15[ebp], 0
je	SHORT $LN17@selectExpa
push	0
mov	edx, DWORD PTR _zTName$17[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pSub$15[ebp]
mov	ecx, DWORD PTR [eax]
imul	edx, DWORD PTR _j$[ebp], 24
mov	eax, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR [eax+edx+8]
push	ecx
call	_sqlite3MatchSpanName
add	esp, 16					
test	eax, eax
jne	SHORT $LN17@selectExpa
jmp	SHORT $LN19@selectExpa
imul	edx, DWORD PTR _j$[ebp], 24
mov	eax, DWORD PTR _pTab$11[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+23]
and	edx, 2
je	SHORT $LN16@selectExpa
jmp	SHORT $LN19@selectExpa
mov	DWORD PTR _tableSeen$3[ebp], 1
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN15@selectExpa
cmp	DWORD PTR _zTName$17[ebp], 0
jne	SHORT $LN15@selectExpa
mov	eax, DWORD PTR _pFrom$[ebp]
movzx	ecx, BYTE PTR [eax+36]
and	ecx, 4
je	SHORT $LN14@selectExpa
push	0
push	0
mov	edx, DWORD PTR _zName$10[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pTabList$[ebp]
push	ecx
call	_tableAndColumnIndex
add	esp, 20					
test	eax, eax
je	SHORT $LN14@selectExpa
jmp	$LN19@selectExpa
mov	edx, DWORD PTR _zName$10[ebp]
push	edx
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3IdListIndex
add	esp, 8
test	eax, eax
jl	SHORT $LN15@selectExpa
jmp	$LN19@selectExpa
mov	edx, DWORD PTR _zName$10[ebp]
push	edx
push	27					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pRight$[ebp], eax
mov	ecx, DWORD PTR _zName$10[ebp]
mov	DWORD PTR _zColname$12[ebp], ecx
mov	DWORD PTR _zToFree$5[ebp], 0
cmp	DWORD PTR _longNames$6[ebp], 0
jne	SHORT $LN11@selectExpa
mov	edx, DWORD PTR _pTabList$[ebp]
cmp	DWORD PTR [edx], 1
jle	$LN12@selectExpa
mov	eax, DWORD PTR _zTabName$14[ebp]
push	eax
push	27					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pLeft$7[ebp], eax
push	0
mov	edx, DWORD PTR _pRight$[ebp]
push	edx
mov	eax, DWORD PTR _pLeft$7[ebp]
push	eax
push	122					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pExpr$[ebp], eax
cmp	DWORD PTR _zSchemaName$8[ebp], 0
je	SHORT $LN10@selectExpa
mov	edx, DWORD PTR _zSchemaName$8[ebp]
push	edx
push	27					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pLeft$7[ebp], eax
push	0
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pLeft$7[ebp]
push	edx
push	122					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pExpr$[ebp], eax
cmp	DWORD PTR _longNames$6[ebp], 0
je	SHORT $LN9@selectExpa
mov	ecx, DWORD PTR _zName$10[ebp]
push	ecx
mov	edx, DWORD PTR _zTabName$14[ebp]
push	edx
push	OFFSET $SG114753
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zColname$12[ebp], eax
mov	ecx, DWORD PTR _zColname$12[ebp]
mov	DWORD PTR _zToFree$5[ebp], ecx
jmp	SHORT $LN8@selectExpa
mov	edx, DWORD PTR _pRight$[ebp]
mov	DWORD PTR _pExpr$[ebp], edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pNew$18[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pNew$18[ebp], eax
mov	eax, DWORD PTR _zColname$12[ebp]
mov	DWORD PTR _sColname$1[ebp], eax
mov	ecx, DWORD PTR _zColname$12[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _sColname$1[ebp+4], eax
push	0
lea	edx, DWORD PTR _sColname$1[ebp]
push	edx
mov	eax, DWORD PTR _pNew$18[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListSetName
add	esp, 16					
cmp	DWORD PTR _pNew$18[ebp], 0
je	SHORT $LN7@selectExpa
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 512				
je	SHORT $LN7@selectExpa
mov	ecx, DWORD PTR _pNew$18[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
imul	eax, edx, 24
mov	ecx, DWORD PTR _pNew$18[ebp]
add	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _pX$9[ebp], eax
cmp	DWORD PTR _pSub$15[ebp], 0
je	SHORT $LN6@selectExpa
mov	edx, DWORD PTR _pSub$15[ebp]
mov	eax, DWORD PTR [edx]
imul	ecx, DWORD PTR _j$[ebp], 24
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+ecx+8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _pX$9[ebp]
mov	DWORD PTR [edx+8], eax
jmp	SHORT $LN5@selectExpa
mov	eax, DWORD PTR _zColname$12[ebp]
push	eax
mov	ecx, DWORD PTR _zTabName$14[ebp]
push	ecx
mov	edx, DWORD PTR _zSchemaName$8[ebp]
push	edx
push	OFFSET $SG114759
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 20					
mov	ecx, DWORD PTR _pX$9[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pX$9[ebp]
mov	eax, DWORD PTR [edx+16]
or	eax, 2
mov	ecx, DWORD PTR _pX$9[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _zToFree$5[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	$LN19@selectExpa
jmp	$LN27@selectExpa
cmp	DWORD PTR _tableSeen$3[ebp], 0
jne	SHORT $LN30@selectExpa
cmp	DWORD PTR _zTName$17[ebp], 0
je	SHORT $LN3@selectExpa
mov	ecx, DWORD PTR _zTName$17[ebp]
push	ecx
push	OFFSET $SG114762
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN30@selectExpa
push	OFFSET $SG114764
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN35@selectExpa
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pNew$18[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN1@selectExpa
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [ecx]
cmp	ecx, DWORD PTR [eax+edx+88]
jle	SHORT $LN1@selectExpa
push	OFFSET $SG114766
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_selectPopWith PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pWalker$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_findRightmost
add	esp, 4
mov	eax, DWORD PTR [eax+68]
mov	DWORD PTR _pWith$[ebp], eax
cmp	DWORD PTR _pWith$[ebp], 0
je	SHORT $LN2@selectPopW
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _pWith$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+532], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_withExpand PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	eax, DWORD PTR _pWalker$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
lea	ecx, DWORD PTR _pWith$[ebp]
push	ecx
mov	edx, DWORD PTR _pFrom$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+532]
push	ecx
call	_searchWith
add	esp, 12					
mov	DWORD PTR _pCte$[ebp], eax
cmp	DWORD PTR _pCte$[ebp], 0
je	$LN18@withExpand
mov	edx, DWORD PTR _pCte$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN17@withExpand
mov	eax, DWORD PTR _pCte$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pCte$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	$LN19@withExpand
push	76					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTab$9[ebp], eax
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR _pTab$9[ebp]
mov	DWORD PTR [eax+16], ecx
cmp	DWORD PTR _pTab$9[ebp], 0
jne	SHORT $LN16@withExpand
mov	eax, 2
jmp	$LN19@withExpand
mov	edx, 1
mov	eax, DWORD PTR _pTab$9[ebp]
mov	WORD PTR [eax+40], dx
mov	ecx, DWORD PTR _pCte$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pTab$9[ebp]
mov	DWORD PTR [ecx], eax
or	edx, -1
mov	eax, DWORD PTR _pTab$9[ebp]
mov	WORD PTR [eax+36], dx
mov	ecx, 200				
mov	edx, DWORD PTR _pTab$9[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pTab$9[ebp]
movzx	ecx, BYTE PTR [eax+44]
or	ecx, 2
mov	edx, DWORD PTR _pTab$9[ebp]
mov	BYTE PTR [edx+44], cl
push	0
mov	eax, DWORD PTR _pCte$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDup
add	esp, 12					
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN15@withExpand
mov	eax, 7
jmp	$LN19@withExpand
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pSel$8[ebp], edx
mov	eax, DWORD PTR _pSel$8[ebp]
movzx	ecx, BYTE PTR [eax+4]
cmp	ecx, 116				
je	SHORT $LN21@withExpand
mov	edx, DWORD PTR _pSel$8[ebp]
movzx	eax, BYTE PTR [edx+4]
cmp	eax, 115				
je	SHORT $LN21@withExpand
mov	DWORD PTR tv145[ebp], 0
jmp	SHORT $LN22@withExpand
mov	DWORD PTR tv145[ebp], 1
mov	ecx, DWORD PTR tv145[ebp]
mov	DWORD PTR _bMayRecursive$3[ebp], ecx
cmp	DWORD PTR _bMayRecursive$3[ebp], 0
je	$LN14@withExpand
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pSrc$2[ebp], ecx
mov	DWORD PTR _i$6[ebp], 0
jmp	SHORT $LN13@withExpand
mov	edx, DWORD PTR _i$6[ebp]
add	edx, 1
mov	DWORD PTR _i$6[ebp], edx
mov	eax, DWORD PTR _pSrc$2[ebp]
mov	ecx, DWORD PTR _i$6[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN14@withExpand
imul	edx, DWORD PTR _i$6[ebp], 80
mov	eax, DWORD PTR _pSrc$2[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _pItem$7[ebp], ecx
mov	edx, DWORD PTR _pItem$7[ebp]
cmp	DWORD PTR [edx+4], 0
jne	SHORT $LN10@withExpand
mov	eax, DWORD PTR _pItem$7[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN10@withExpand
mov	ecx, DWORD PTR _pCte$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pItem$7[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN10@withExpand
mov	edx, DWORD PTR _pItem$7[ebp]
mov	eax, DWORD PTR _pTab$9[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _pItem$7[ebp]
mov	edx, DWORD PTR [ecx+40]
or	edx, 8
mov	eax, DWORD PTR _pItem$7[ebp]
mov	DWORD PTR [eax+40], edx
mov	ecx, DWORD PTR _pTab$9[ebp]
mov	dx, WORD PTR [ecx+40]
add	dx, 1
mov	eax, DWORD PTR _pTab$9[ebp]
mov	WORD PTR [eax+40], dx
mov	ecx, DWORD PTR _pSel$8[ebp]
movzx	edx, WORD PTR [ecx+6]
or	edx, 2048				
mov	eax, DWORD PTR _pSel$8[ebp]
mov	WORD PTR [eax+6], dx
jmp	$LN12@withExpand
mov	ecx, DWORD PTR _pTab$9[ebp]
movzx	edx, WORD PTR [ecx+40]
cmp	edx, 2
jle	SHORT $LN9@withExpand
mov	eax, DWORD PTR _pCte$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG114614
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	$LN19@withExpand
mov	eax, DWORD PTR _pCte$[ebp]
mov	DWORD PTR [eax+12], OFFSET $SG114616
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+532]
mov	DWORD PTR _pSavedWith$1[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _pWith$[ebp]
mov	DWORD PTR [eax+532], ecx
cmp	DWORD PTR _bMayRecursive$3[ebp], 0
je	SHORT $LN23@withExpand
mov	edx, DWORD PTR _pSel$8[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR tv191[ebp], eax
jmp	SHORT $LN24@withExpand
mov	ecx, DWORD PTR _pSel$8[ebp]
mov	DWORD PTR tv191[ebp], ecx
mov	edx, DWORD PTR tv191[ebp]
push	edx
mov	eax, DWORD PTR _pWalker$[ebp]
push	eax
call	_sqlite3WalkSelect
add	esp, 8
mov	ecx, DWORD PTR _pSel$8[ebp]
mov	DWORD PTR _pLeft$5[ebp], ecx
jmp	SHORT $LN8@withExpand
mov	edx, DWORD PTR _pLeft$5[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pLeft$5[ebp], eax
mov	ecx, DWORD PTR _pLeft$5[ebp]
cmp	DWORD PTR [ecx+52], 0
je	SHORT $LN6@withExpand
jmp	SHORT $LN7@withExpand
mov	edx, DWORD PTR _pLeft$5[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pEList$4[ebp], eax
mov	ecx, DWORD PTR _pCte$[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN5@withExpand
mov	edx, DWORD PTR _pCte$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _pEList$4[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR [eax]
je	SHORT $LN4@withExpand
mov	eax, DWORD PTR _pCte$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pEList$4[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pCte$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG114622
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 20					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _pSavedWith$1[ebp]
mov	DWORD PTR [edx+532], eax
mov	eax, 1
jmp	SHORT $LN19@withExpand
mov	ecx, DWORD PTR _pCte$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pEList$4[ebp], edx
mov	eax, DWORD PTR _pTab$9[ebp]
add	eax, 4
push	eax
mov	ecx, DWORD PTR _pTab$9[ebp]
add	ecx, 38					
push	ecx
mov	edx, DWORD PTR _pEList$4[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_selectColumnsFromExprList
add	esp, 16					
cmp	DWORD PTR _bMayRecursive$3[ebp], 0
je	SHORT $LN3@withExpand
mov	ecx, DWORD PTR _pSel$8[ebp]
movzx	edx, WORD PTR [ecx+6]
and	edx, 2048				
je	SHORT $LN2@withExpand
mov	eax, DWORD PTR _pCte$[ebp]
mov	DWORD PTR [eax+12], OFFSET $SG114625
jmp	SHORT $LN1@withExpand
mov	ecx, DWORD PTR _pCte$[ebp]
mov	DWORD PTR [ecx+12], OFFSET $SG114627
mov	edx, DWORD PTR _pSel$8[ebp]
push	edx
mov	eax, DWORD PTR _pWalker$[ebp]
push	eax
call	_sqlite3WalkSelect
add	esp, 8
mov	ecx, DWORD PTR _pCte$[ebp]
mov	DWORD PTR [ecx+12], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _pSavedWith$1[ebp]
mov	DWORD PTR [edx+532], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_searchWith PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pItem$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN8@searchWith
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _zName$[ebp], edx
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN8@searchWith
mov	eax, DWORD PTR _pWith$[ebp]
mov	DWORD PTR _p$2[ebp], eax
jmp	SHORT $LN7@searchWith
mov	ecx, DWORD PTR _p$2[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _p$2[ebp], edx
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN8@searchWith
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN4@searchWith
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	ecx, DWORD PTR _p$2[ebp]
mov	edx, DWORD PTR _i$1[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN2@searchWith
mov	eax, DWORD PTR _i$1[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _p$2[ebp]
mov	edx, DWORD PTR [ecx+eax+8]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@searchWith
mov	ecx, DWORD PTR _ppContext$[ebp]
mov	edx, DWORD PTR _p$2[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _i$1[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _p$2[ebp]
lea	eax, DWORD PTR [ecx+eax+8]
jmp	SHORT $LN9@searchWith
jmp	SHORT $LN3@searchWith
jmp	SHORT $LN6@searchWith
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_convertCompoundSelectToSubquery PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
push	esi
push	edi
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+52], 0
jne	SHORT $LN14@convertCom
xor	eax, eax
jmp	$LN15@convertCom
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+48], 0
jne	SHORT $LN13@convertCom
xor	eax, eax
jmp	$LN15@convertCom
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pX$[ebp], edx
jmp	SHORT $LN12@convertCom
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pX$[ebp], ecx
cmp	DWORD PTR _pX$[ebp], 0
je	SHORT $LN10@convertCom
mov	edx, DWORD PTR _pX$[ebp]
movzx	eax, BYTE PTR [edx+4]
cmp	eax, 116				
je	SHORT $LN9@convertCom
mov	ecx, DWORD PTR _pX$[ebp]
movzx	edx, BYTE PTR [ecx+4]
cmp	edx, 119				
jne	SHORT $LN10@convertCom
jmp	SHORT $LN11@convertCom
cmp	DWORD PTR _pX$[ebp], 0
jne	SHORT $LN8@convertCom
xor	eax, eax
jmp	$LN15@convertCom
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN7@convertCom
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN5@convertCom
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _a$[ebp]
mov	eax, DWORD PTR [edx+ecx]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 256				
je	SHORT $LN4@convertCom
jmp	SHORT $LN5@convertCom
jmp	SHORT $LN6@convertCom
cmp	DWORD PTR _i$[ebp], 0
jge	SHORT $LN3@convertCom
xor	eax, eax
jmp	$LN15@convertCom
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
push	72					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN2@convertCom
mov	eax, 2
jmp	$LN15@convertCom
push	8
push	0
lea	ecx, DWORD PTR _dummy$[ebp]
push	ecx
call	_memset
add	esp, 12					
push	0
push	0
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
lea	eax, DWORD PTR _dummy$[ebp]
push	eax
push	0
push	0
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListAppendFromTerm
add	esp, 32					
mov	DWORD PTR _pNewSrc$[ebp], eax
cmp	DWORD PTR _pNewSrc$[ebp], 0
jne	SHORT $LN1@convertCom
mov	eax, 2
jmp	$LN15@convertCom
mov	ecx, 18					
mov	esi, DWORD PTR _p$[ebp]
mov	edi, DWORD PTR _pNew$[ebp]
rep movsd
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pNewSrc$[ebp]
mov	DWORD PTR [edx+32], eax
push	0
push	116					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Expr
add	esp, 12					
push	eax
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+4], 119			
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+36], 0
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+40], 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+44], 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+48], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+52], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+56], 0
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, -4097				
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+6], cx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+56], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+60], 0
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+64], 0
xor	eax, eax
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isSimpleCount PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+36], 0
jne	SHORT $LN6@isSimpleCo
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
cmp	DWORD PTR [edx], 1
jne	SHORT $LN6@isSimpleCo
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
cmp	DWORD PTR [ecx], 1
jne	SHORT $LN6@isSimpleCo
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, 80					
imul	edx, ecx, 0
cmp	DWORD PTR [eax+edx+28], 0
je	SHORT $LN7@isSimpleCo
xor	eax, eax
jmp	$LN8@isSimpleCo
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+eax+24]
mov	DWORD PTR _pTab$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR [eax+4]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _pExpr$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN5@isSimpleCo
xor	eax, eax
jmp	SHORT $LN8@isSimpleCo
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 155				
je	SHORT $LN4@isSimpleCo
xor	eax, eax
jmp	SHORT $LN8@isSimpleCo
mov	eax, DWORD PTR _pAggInfo$[ebp]
cmp	DWORD PTR [eax+44], 0
jne	SHORT $LN3@isSimpleCo
xor	eax, eax
jmp	SHORT $LN8@isSimpleCo
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	edx, DWORD PTR [ecx+edx+4]
movzx	eax, WORD PTR [edx+2]
and	eax, 256				
jne	SHORT $LN2@isSimpleCo
xor	eax, eax
jmp	SHORT $LN8@isSimpleCo
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 16					
je	SHORT $LN1@isSimpleCo
xor	eax, eax
jmp	SHORT $LN8@isSimpleCo
mov	eax, DWORD PTR _pTab$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_minMaxQuery PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _eRet$[ebp], 0
mov	eax, DWORD PTR _ppMinMax$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _pAggInfo$[ebp]
cmp	DWORD PTR [ecx+44], 1
jne	$LN5@minMaxQuer
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pAggInfo$[ebp]
mov	edx, DWORD PTR [ecx+40]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _pExpr$2[ebp], eax
mov	ecx, DWORD PTR _pExpr$2[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pEList$3[ebp], edx
cmp	DWORD PTR _pEList$3[ebp], 0
je	SHORT $LN5@minMaxQuer
mov	eax, DWORD PTR _pEList$3[ebp]
cmp	DWORD PTR [eax], 1
jne	SHORT $LN5@minMaxQuer
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pEList$3[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
movzx	eax, BYTE PTR [edx]
cmp	eax, 156				
jne	SHORT $LN5@minMaxQuer
mov	ecx, DWORD PTR _pExpr$2[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _zFunc$1[ebp], edx
push	OFFSET $SG114487
mov	eax, DWORD PTR _zFunc$1[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@minMaxQuer
mov	DWORD PTR _eRet$[ebp], 1
mov	ecx, DWORD PTR _ppMinMax$[ebp]
mov	edx, DWORD PTR _pEList$3[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN5@minMaxQuer
push	OFFSET $SG114490
mov	eax, DWORD PTR _zFunc$1[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN5@minMaxQuer
mov	DWORD PTR _eRet$[ebp], 2
mov	ecx, DWORD PTR _ppMinMax$[ebp]
mov	edx, DWORD PTR _pEList$3[ebp]
mov	DWORD PTR [ecx], edx
mov	al, BYTE PTR _eRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_flattenSubquery PROC
push	ebp
mov	ebp, esp
sub	esp, 100				
push	esi
push	edi
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+492]
mov	DWORD PTR _zSavedAuthContext$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, WORD PTR [ecx+60]
and	edx, 1
je	SHORT $LN67@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pSrc$[ebp], ecx
imul	edx, DWORD PTR _iFrom$[ebp], 80
mov	eax, DWORD PTR _pSrc$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _pSubitem$[ebp], ecx
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _iParent$[ebp], eax
mov	ecx, DWORD PTR _pSubitem$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pSub$[ebp], edx
cmp	DWORD PTR _isAgg$[ebp], 0
je	SHORT $LN66@flattenSub
cmp	DWORD PTR _subqueryIsAgg$[ebp], 0
je	SHORT $LN66@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
cmp	DWORD PTR _subqueryIsAgg$[ebp], 0
je	SHORT $LN65@flattenSub
mov	eax, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [eax], 1
jle	SHORT $LN65@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	ecx, DWORD PTR _pSub$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pSubSrc$[ebp], edx
mov	eax, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN64@flattenSub
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+60], 0
je	SHORT $LN64@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	edx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [edx+64], 0
je	SHORT $LN63@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 4096				
je	SHORT $LN62@flattenSub
mov	edx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [edx+60], 0
je	SHORT $LN62@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	eax, DWORD PTR _pSubSrc$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN61@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	ecx, DWORD PTR _pSub$[ebp]
movzx	edx, WORD PTR [ecx+6]
and	edx, 1
je	SHORT $LN60@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN59@flattenSub
mov	ecx, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [ecx], 1
jg	SHORT $LN58@flattenSub
cmp	DWORD PTR _isAgg$[ebp], 0
je	SHORT $LN59@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 1
je	SHORT $LN57@flattenSub
cmp	DWORD PTR _subqueryIsAgg$[ebp], 0
je	SHORT $LN57@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+48], 0
je	SHORT $LN56@flattenSub
mov	edx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [edx+48], 0
je	SHORT $LN56@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
cmp	DWORD PTR _isAgg$[ebp], 0
je	SHORT $LN55@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [eax+48], 0
je	SHORT $LN55@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	ecx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [ecx+60], 0
je	SHORT $LN54@flattenSub
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+36], 0
je	SHORT $LN54@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN53@flattenSub
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+6]
and	edx, 1
je	SHORT $LN53@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 2048				
je	SHORT $LN52@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 2048				
je	SHORT $LN51@flattenSub
mov	ecx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [ecx+52], 0
je	SHORT $LN51@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	edx, DWORD PTR _pSubitem$[ebp]
movzx	eax, BYTE PTR [edx+36]
and	eax, 32					
je	SHORT $LN50@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	ecx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [ecx+52], 0
je	$LN49@flattenSub
mov	edx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [edx+48], 0
je	SHORT $LN48@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
cmp	DWORD PTR _isAgg$[ebp], 0
jne	SHORT $LN46@flattenSub
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 1
jne	SHORT $LN46@flattenSub
mov	edx, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [edx], 1
je	SHORT $LN47@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
mov	DWORD PTR _pSub1$[ebp], eax
jmp	SHORT $LN45@flattenSub
mov	ecx, DWORD PTR _pSub1$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pSub1$[ebp], edx
cmp	DWORD PTR _pSub1$[ebp], 0
je	SHORT $LN43@flattenSub
mov	eax, DWORD PTR _pSub1$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 5
jne	SHORT $LN41@flattenSub
mov	edx, DWORD PTR _pSub1$[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN40@flattenSub
mov	eax, DWORD PTR _pSub1$[ebp]
movzx	ecx, BYTE PTR [eax+4]
cmp	ecx, 116				
jne	SHORT $LN41@flattenSub
mov	edx, DWORD PTR _pSub1$[ebp]
mov	eax, DWORD PTR [edx+32]
cmp	DWORD PTR [eax], 1
jl	SHORT $LN41@flattenSub
mov	ecx, DWORD PTR _pSub$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _pSub1$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [edx]
cmp	edx, DWORD PTR [ecx]
je	SHORT $LN42@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
jmp	SHORT $LN44@flattenSub
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+48], 0
je	SHORT $LN49@flattenSub
mov	DWORD PTR _ii$8[ebp], 0
jmp	SHORT $LN38@flattenSub
mov	ecx, DWORD PTR _ii$8[ebp]
add	ecx, 1
mov	DWORD PTR _ii$8[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	ecx, DWORD PTR _ii$8[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN49@flattenSub
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
imul	ecx, DWORD PTR _ii$8[ebp], 24
mov	edx, DWORD PTR [eax+4]
movzx	eax, WORD PTR [edx+ecx+20]
test	eax, eax
jne	SHORT $LN35@flattenSub
xor	eax, eax
jmp	$LN68@flattenSub
jmp	SHORT $LN37@flattenSub
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+492], eax
push	0
push	0
push	0
push	21					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _zSavedAuthContext$[ebp]
mov	DWORD PTR [edx+492], eax
mov	ecx, DWORD PTR _pSub$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pSub$[ebp], edx
jmp	SHORT $LN34@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pSub$[ebp], ecx
cmp	DWORD PTR _pSub$[ebp], 0
je	$LN32@flattenSub
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _pOrderBy$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+60]
mov	DWORD PTR _pLimit$2[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pOffset$3[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pPrior$7[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+48], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+32], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+52], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+60], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+64], 0
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDup
add	esp, 12					
mov	DWORD PTR _pNew$10[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pOffset$3[ebp]
mov	DWORD PTR [edx+64], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pLimit$2[ebp]
mov	DWORD PTR [ecx+60], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pOrderBy$1[ebp]
mov	DWORD PTR [eax+48], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pSrc$[ebp]
mov	DWORD PTR [edx+32], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+4], 116			
cmp	DWORD PTR _pNew$10[ebp], 0
jne	SHORT $LN31@flattenSub
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pPrior$7[ebp]
mov	DWORD PTR [edx+52], eax
jmp	SHORT $LN30@flattenSub
mov	ecx, DWORD PTR _pNew$10[ebp]
mov	edx, DWORD PTR _pPrior$7[ebp]
mov	DWORD PTR [ecx+52], edx
cmp	DWORD PTR _pPrior$7[ebp], 0
je	SHORT $LN29@flattenSub
mov	eax, DWORD PTR _pPrior$7[ebp]
mov	ecx, DWORD PTR _pNew$10[ebp]
mov	DWORD PTR [eax+56], ecx
mov	edx, DWORD PTR _pNew$10[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+56], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pNew$10[ebp]
mov	DWORD PTR [ecx+52], edx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN28@flattenSub
mov	eax, 1
jmp	$LN68@flattenSub
jmp	$LN33@flattenSub
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pSub1$[ebp], eax
mov	ecx, DWORD PTR _pSub1$[ebp]
mov	DWORD PTR _pSub$[ebp], ecx
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pSubitem$[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _pSubitem$[ebp]
mov	DWORD PTR [ecx+12], 0
mov	edx, DWORD PTR _pSubitem$[ebp]
mov	DWORD PTR [edx+20], 0
mov	eax, DWORD PTR _pSubitem$[ebp]
cmp	DWORD PTR [eax+16], 0
je	SHORT $LN27@flattenSub
mov	ecx, DWORD PTR _pSubitem$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pTabToDel$9[ebp], edx
mov	eax, DWORD PTR _pTabToDel$9[ebp]
movzx	ecx, WORD PTR [eax+40]
cmp	ecx, 1
jne	SHORT $LN26@flattenSub
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+408], 0
je	SHORT $LN70@flattenSub
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+408]
mov	DWORD PTR tv278[ebp], ecx
jmp	SHORT $LN71@flattenSub
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv278[ebp], edx
mov	eax, DWORD PTR tv278[ebp]
mov	DWORD PTR _pToplevel$5[ebp], eax
mov	ecx, DWORD PTR _pTabToDel$9[ebp]
mov	edx, DWORD PTR _pToplevel$5[ebp]
mov	eax, DWORD PTR [edx+524]
mov	DWORD PTR [ecx+72], eax
mov	ecx, DWORD PTR _pToplevel$5[ebp]
mov	edx, DWORD PTR _pTabToDel$9[ebp]
mov	DWORD PTR [ecx+524], edx
jmp	SHORT $LN25@flattenSub
mov	eax, DWORD PTR _pTabToDel$9[ebp]
mov	cx, WORD PTR [eax+40]
sub	cx, 1
mov	edx, DWORD PTR _pTabToDel$9[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pSubitem$[ebp]
mov	DWORD PTR [eax+16], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pParent$[ebp], ecx
jmp	SHORT $LN24@flattenSub
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pParent$[ebp], eax
mov	ecx, DWORD PTR _pSub$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pSub$[ebp], edx
cmp	DWORD PTR _pParent$[ebp], 0
je	$LN22@flattenSub
mov	BYTE PTR _jointype$11[ebp], 0
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pSubSrc$[ebp], ecx
mov	edx, DWORD PTR _pSubSrc$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _nSubSrc$6[ebp], eax
mov	ecx, DWORD PTR _pParent$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pSrc$[ebp], edx
cmp	DWORD PTR _pSrc$[ebp], 0
je	SHORT $LN21@flattenSub
mov	eax, DWORD PTR _pSubitem$[ebp]
mov	cl, BYTE PTR [eax+36]
mov	BYTE PTR _jointype$11[ebp], cl
jmp	SHORT $LN20@flattenSub
push	0
push	0
push	0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SrcListAppend
add	esp, 16					
mov	DWORD PTR tv296[ebp], eax
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR tv296[ebp]
mov	DWORD PTR [eax+32], ecx
mov	edx, DWORD PTR tv296[ebp]
mov	DWORD PTR _pSrc$[ebp], edx
cmp	DWORD PTR _pSrc$[ebp], 0
jne	SHORT $LN20@flattenSub
jmp	$LN22@flattenSub
cmp	DWORD PTR _nSubSrc$6[ebp], 1
jle	SHORT $LN18@flattenSub
mov	eax, DWORD PTR _iFrom$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _nSubSrc$6[ebp]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListEnlarge
add	esp, 16					
mov	DWORD PTR _pSrc$[ebp], eax
mov	ecx, DWORD PTR _pParent$[ebp]
mov	edx, DWORD PTR _pSrc$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN18@flattenSub
jmp	$LN22@flattenSub
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN16@flattenSub
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nSubSrc$6[ebp]
jge	SHORT $LN14@flattenSub
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR _iFrom$[ebp]
imul	edx, ecx, 80
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+edx+64]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3IdListDelete
add	esp, 8
imul	eax, DWORD PTR _i$[ebp], 80
mov	ecx, DWORD PTR _pSubSrc$[ebp]
lea	esi, DWORD PTR [ecx+eax+8]
mov	edx, DWORD PTR _i$[ebp]
add	edx, DWORD PTR _iFrom$[ebp]
imul	eax, edx, 80
mov	ecx, DWORD PTR _pSrc$[ebp]
lea	edi, DWORD PTR [ecx+eax+8]
mov	ecx, 20					
rep movsd
push	80					
push	0
imul	edx, DWORD PTR _i$[ebp], 80
mov	eax, DWORD PTR _pSubSrc$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
push	ecx
call	_memset
add	esp, 12					
jmp	SHORT $LN15@flattenSub
imul	edx, DWORD PTR _iFrom$[ebp], 80
mov	eax, DWORD PTR _pSrc$[ebp]
mov	cl, BYTE PTR _jointype$11[ebp]
mov	BYTE PTR [eax+edx+44], cl
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pList$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN13@flattenSub
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN11@flattenSub
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
cmp	DWORD PTR [eax+ecx+4], 0
jne	SHORT $LN10@flattenSub
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	DWORD PTR _zName$4[ebp], eax
mov	eax, DWORD PTR _zName$4[ebp]
push	eax
call	_sqlite3Dequote
add	esp, 4
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	edx, DWORD PTR _zName$4[ebp]
mov	DWORD PTR [eax+ecx+4], edx
jmp	SHORT $LN12@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _iParent$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_substExprList
add	esp, 16					
cmp	DWORD PTR _isAgg$[ebp], 0
je	SHORT $LN9@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _iParent$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_substExprList
add	esp, 16					
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _iParent$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_substExpr
add	esp, 16					
mov	ecx, DWORD PTR _pParent$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [edx+48], 0
je	SHORT $LN8@flattenSub
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR _pSub$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR [eax+48], edx
mov	eax, DWORD PTR _pSub$[ebp]
mov	DWORD PTR [eax+48], 0
jmp	SHORT $LN7@flattenSub
mov	ecx, DWORD PTR _pParent$[ebp]
cmp	DWORD PTR [ecx+48], 0
je	SHORT $LN7@flattenSub
mov	edx, DWORD PTR _pSub$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _iParent$[ebp]
push	ecx
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substExprList
add	esp, 16					
mov	edx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [edx+36], 0
je	SHORT $LN5@flattenSub
push	0
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pWhere$[ebp], eax
jmp	SHORT $LN4@flattenSub
mov	DWORD PTR _pWhere$[ebp], 0
cmp	DWORD PTR _subqueryIsAgg$[ebp], 0
je	$LN3@flattenSub
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR _pParent$[ebp]
mov	edx, DWORD PTR [ecx+36]
mov	DWORD PTR [eax+44], edx
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR _pWhere$[ebp]
mov	DWORD PTR [eax+36], ecx
mov	edx, DWORD PTR _pSub$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _iParent$[ebp]
push	ecx
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substExpr
add	esp, 16					
mov	edx, DWORD PTR _pParent$[ebp]
mov	DWORD PTR [edx+44], eax
push	0
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
push	eax
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprAnd
add	esp, 12					
mov	ecx, DWORD PTR _pParent$[ebp]
mov	DWORD PTR [ecx+44], eax
push	0
mov	edx, DWORD PTR _pSub$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprListDup
add	esp, 12					
mov	edx, DWORD PTR _pParent$[ebp]
mov	DWORD PTR [edx+40], eax
jmp	SHORT $LN2@flattenSub
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _iParent$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_substExpr
add	esp, 16					
mov	ecx, DWORD PTR _pParent$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprAnd
add	esp, 12					
mov	ecx, DWORD PTR _pParent$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pSub$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 1
mov	ecx, DWORD PTR _pParent$[ebp]
movzx	edx, WORD PTR [ecx+6]
or	edx, eax
mov	eax, DWORD PTR _pParent$[ebp]
mov	WORD PTR [eax+6], dx
mov	ecx, DWORD PTR _pSub$[ebp]
cmp	DWORD PTR [ecx+60], 0
je	SHORT $LN1@flattenSub
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	DWORD PTR [edx+60], ecx
mov	edx, DWORD PTR _pSub$[ebp]
mov	DWORD PTR [edx+60], 0
jmp	$LN23@flattenSub
mov	eax, DWORD PTR _pSub1$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, 1
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_substExpr PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN7@substExpr
xor	eax, eax
jmp	$LN8@substExpr
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
jne	SHORT $LN6@substExpr
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR _iTable$[ebp]
jne	SHORT $LN6@substExpr
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, WORD PTR [ecx+32]
test	edx, edx
jge	SHORT $LN5@substExpr
mov	eax, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [eax], 101			
jmp	SHORT $LN4@substExpr
push	0
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, WORD PTR [ecx+32]
imul	eax, edx, 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pNew$1[ebp], eax
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, DWORD PTR _pNew$1[ebp]
mov	DWORD PTR _pExpr$[ebp], ecx
jmp	$LN3@substExpr
mov	edx, DWORD PTR _pEList$[ebp]
push	edx
mov	eax, DWORD PTR _iTable$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_substExpr
add	esp, 16					
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _pEList$[ebp]
push	edx
mov	eax, DWORD PTR _iTable$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_substExpr
add	esp, 16					
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 2048				
je	SHORT $LN2@substExpr
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
mov	edx, DWORD PTR _iTable$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_substSelect
add	esp, 16					
jmp	SHORT $LN3@substExpr
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substExprList
add	esp, 16					
mov	eax, DWORD PTR _pExpr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_substSelect PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN5@substSelec
jmp	$LN6@substSelec
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substExprList
add	esp, 16					
mov	edx, DWORD PTR _pEList$[ebp]
push	edx
mov	eax, DWORD PTR _iTable$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_substExprList
add	esp, 16					
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
mov	edx, DWORD PTR _iTable$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_substExprList
add	esp, 16					
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substExpr
add	esp, 16					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+44], eax
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substExpr
add	esp, 16					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+36], eax
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substSelect
add	esp, 16					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _pSrc$[ebp], eax
cmp	DWORD PTR _pSrc$[ebp], 0
je	SHORT $LN6@substSelec
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pSrc$[ebp]
add	eax, 8
mov	DWORD PTR _pItem$[ebp], eax
jmp	SHORT $LN3@substSelec
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 80					
mov	DWORD PTR _pItem$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN6@substSelec
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_substSelect
add	esp, 16					
jmp	SHORT $LN2@substSelec
mov	esp, ebp
pop	ebp
ret	0
ENDP
_substExprList PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN4@substExprL
jmp	SHORT $LN5@substExprL
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@substExprL
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN5@substExprL
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_substExpr
add	esp, 16					
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [edx+4]
mov	DWORD PTR [edx+ecx], eax
jmp	SHORT $LN2@substExprL
mov	esp, ebp
pop	ebp
ret	0
ENDP
_generateOutputSubroutine PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addr$[ebp], eax
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iContinue$[ebp], eax
cmp	DWORD PTR _regPrev$[ebp], 0
je	$LN11@generateOu
mov	ecx, DWORD PTR _regPrev$[ebp]
push	ecx
push	45					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _j1$1[ebp], eax
push	-6					
mov	eax, DWORD PTR _pKeyInfo$[ebp]
push	eax
call	_sqlite3KeyInfoRef
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pIn$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _regPrev$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pIn$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	41					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	DWORD PTR _j2$2[ebp], eax
mov	ecx, DWORD PTR _j2$2[ebp]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _iContinue$[ebp]
push	edx
mov	eax, DWORD PTR _j2$2[ebp]
add	eax, 2
push	eax
push	42					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _j1$1[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _pIn$[ebp]
mov	edx, DWORD PTR [ecx+12]
sub	edx, 1
push	edx
mov	eax, DWORD PTR _regPrev$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pIn$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	33					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _regPrev$[ebp]
push	ecx
push	1
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN10@generateOu
xor	eax, eax
jmp	$LN12@generateOu
mov	eax, DWORD PTR _iContinue$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_codeOffset
add	esp, 12					
mov	ecx, DWORD PTR _pDest$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv151[ebp], edx
mov	eax, DWORD PTR tv151[ebp]
sub	eax, 10					
mov	DWORD PTR tv151[ebp], eax
cmp	DWORD PTR tv151[ebp], 4
ja	$LN2@generateOu
mov	ecx, DWORD PTR tv151[ebp]
jmp	DWORD PTR $LN14@generateOu[ecx*4]
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$4[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r2$5[ebp], eax
mov	ecx, DWORD PTR _r1$4[ebp]
push	ecx
mov	edx, DWORD PTR _pIn$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pIn$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	48					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _r2$5[ebp]
push	ecx
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
push	69					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _r2$5[ebp]
push	edx
mov	eax, DWORD PTR _r1$4[ebp]
push	eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
push	70					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	edx, DWORD PTR _r2$5[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _r1$4[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN8@generateOu
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, BYTE PTR [eax+1]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR [eax+4]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3CompareAffinity
add	esp, 8
mov	edx, DWORD PTR _pDest$[ebp]
mov	BYTE PTR [edx+1], al
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$3[ebp], eax
push	1
mov	ecx, DWORD PTR _pDest$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _r1$3[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	eax, DWORD PTR _r1$3[ebp]
push	eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
push	107					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _r1$3[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN8@generateOu
push	1
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pIn$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeMove
add	esp, 16					
jmp	$LN8@generateOu
mov	edx, DWORD PTR _pDest$[ebp]
cmp	DWORD PTR [edx+8], 0
jne	SHORT $LN3@generateOu
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempRange
add	esp, 8
mov	ecx, DWORD PTR _pDest$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR [edx+12], ecx
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeMove
add	esp, 16					
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
push	22					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN8@generateOu
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pIn$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pIn$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pIn$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN1@generateOu
push	-1
mov	edx, DWORD PTR _iBreak$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	136					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _iContinue$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	edx, DWORD PTR _regReturn$[ebp]
push	edx
push	18					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _addr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
DD	$LN5@generateOu
DD	$LN6@generateOu
DD	$LN7@generateOu
DD	$LN4@generateOu
DD	$LN7@generateOu
ENDP
_multiSelect PROC
push	ebp
mov	ebp, esp
sub	esp, 236				
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _pDelete$[ebp], 0
mov	DWORD PTR _iSub1$[ebp], 0
mov	DWORD PTR _iSub2$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pPrior$[ebp], eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _dest$[ebp], edx
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _dest$[ebp+4], eax
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _dest$[ebp+8], edx
mov	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _dest$[ebp+12], eax
mov	ecx, DWORD PTR [ecx+16]
mov	DWORD PTR _dest$[ebp+16], ecx
mov	edx, DWORD PTR _pPrior$[ebp]
cmp	DWORD PTR [edx+48], 0
je	SHORT $LN47@multiSelec
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+4]
push	ecx
call	_selectOpName
add	esp, 4
push	eax
push	OFFSET $SG114038
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
jmp	$multi_select_end$54
mov	eax, DWORD PTR _pPrior$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN46@multiSelec
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+4]
push	edx
call	_selectOpName
add	esp, 4
push	eax
push	OFFSET $SG114041
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
jmp	$multi_select_end$54
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
movzx	edx, BYTE PTR _dest$[ebp]
cmp	edx, 12					
jne	SHORT $LN45@multiSelec
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _dest$[ebp+4]
push	eax
push	55					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	8
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	BYTE PTR _dest$[ebp], 14		
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _pPrior$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [ecx]
cmp	ecx, DWORD PTR [eax]
je	SHORT $LN44@multiSelec
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 128				
je	SHORT $LN43@multiSelec
push	OFFSET $SG114048
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	SHORT $LN42@multiSelec
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+4]
push	eax
call	_selectOpName
add	esp, 4
push	eax
push	OFFSET $SG114050
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
jmp	$multi_select_end$54
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 2048				
je	SHORT $LN41@multiSelec
lea	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_generateWithRecursiveQuery
add	esp, 12					
jmp	$LN40@multiSelec
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+48], 0
je	SHORT $LN39@multiSelec
mov	edx, DWORD PTR _pDest$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_multiSelectOrderBy
add	esp, 12					
jmp	$LN48@multiSelec
jmp	$LN40@multiSelec
mov	edx, DWORD PTR _p$[ebp]
mov	al, BYTE PTR [edx+4]
mov	BYTE PTR tv162[ebp], al
cmp	BYTE PTR tv162[ebp], 115		
je	$LN30@multiSelec
cmp	BYTE PTR tv162[ebp], 116		
je	SHORT $LN35@multiSelec
cmp	BYTE PTR tv162[ebp], 117		
je	$LN30@multiSelec
jmp	$LN19@multiSelec
mov	DWORD PTR _addr$14[ebp], 0
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+60]
mov	DWORD PTR [ecx+60], eax
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR [ecx+64], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+468]
mov	DWORD PTR _iSub1$[ebp], edx
lea	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _pPrior$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+60], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+64], 0
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN34@multiSelec
jmp	$multi_select_end$54
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+52], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR [eax+8], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN33@multiSelec
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	136					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$14[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+468]
mov	DWORD PTR _iSub2$[ebp], edx
lea	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pDelete$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR [edx+52], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pPrior$[ebp]
mov	eax, DWORD PTR [ecx+24]
add	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR [ecx+28]
adc	ecx, DWORD PTR [edx+28]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+24], eax
mov	DWORD PTR [edx+28], ecx
mov	eax, DWORD PTR _pPrior$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN32@multiSelec
lea	ecx, DWORD PTR _nLimit$11[ebp]
push	ecx
mov	edx, DWORD PTR _pPrior$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
je	SHORT $LN32@multiSelec
cmp	DWORD PTR _nLimit$11[ebp], 0
jle	SHORT $LN32@multiSelec
mov	eax, DWORD PTR _nLimit$11[ebp]
cdq
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv667[ebp], ecx
mov	DWORD PTR tv668[ebp], eax
mov	DWORD PTR tv668[ebp+4], edx
mov	edx, DWORD PTR tv667[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR tv668[ebp+4]
jb	SHORT $LN32@multiSelec
ja	SHORT $LN52@multiSelec
mov	ecx, DWORD PTR tv667[ebp]
mov	edx, DWORD PTR [ecx+24]
cmp	edx, DWORD PTR tv668[ebp]
jbe	SHORT $LN32@multiSelec
mov	eax, DWORD PTR _nLimit$11[ebp]
cdq
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	DWORD PTR [ecx+28], edx
cmp	DWORD PTR _addr$14[ebp], 0
je	SHORT $LN31@multiSelec
mov	edx, DWORD PTR _addr$14[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN40@multiSelec
mov	BYTE PTR _op$30[ebp], 0
mov	DWORD PTR _priorOp$18[ebp], 1
movzx	ecx, BYTE PTR _dest$[ebp]
cmp	ecx, DWORD PTR _priorOp$18[ebp]
jne	SHORT $LN29@multiSelec
mov	edx, DWORD PTR _dest$[ebp+4]
mov	DWORD PTR _unionTab$28[ebp], edx
jmp	SHORT $LN28@multiSelec
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _unionTab$28[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
push	0
mov	edx, DWORD PTR _unionTab$28[ebp]
push	edx
push	55					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr$7[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _addr$7[ebp]
mov	DWORD PTR [eax+edx+16], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_findRightmost
add	esp, 4
add	eax, 6
mov	DWORD PTR tv235[ebp], eax
mov	eax, DWORD PTR tv235[ebp]
movzx	ecx, WORD PTR [eax]
or	ecx, 8
mov	edx, DWORD PTR tv235[ebp]
mov	WORD PTR [edx], cx
mov	eax, DWORD PTR _unionTab$28[ebp]
push	eax
mov	ecx, DWORD PTR _priorOp$18[ebp]
push	ecx
lea	edx, DWORD PTR _uniondest$2[ebp]
push	edx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+468]
mov	DWORD PTR _iSub1$[ebp], ecx
lea	edx, DWORD PTR _uniondest$2[ebp]
push	edx
mov	eax, DWORD PTR _pPrior$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN27@multiSelec
jmp	$multi_select_end$54
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+4]
cmp	eax, 117				
jne	SHORT $LN26@multiSelec
mov	BYTE PTR _op$30[ebp], 2
jmp	SHORT $LN25@multiSelec
mov	BYTE PTR _op$30[ebp], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+52], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+60]
mov	DWORD PTR _pLimit$5[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+60], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR _pOffset$9[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+64], 0
mov	dl, BYTE PTR _op$30[ebp]
mov	BYTE PTR _uniondest$2[ebp], dl
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+468]
mov	DWORD PTR _iSub2$[ebp], ecx
lea	edx, DWORD PTR _uniondest$2[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprListDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pDelete$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR [ecx+52], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+48], 0
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+4]
cmp	edx, 115				
jne	SHORT $LN24@multiSelec
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR [eax+24]
add	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR [eax+28]
adc	eax, DWORD PTR [ecx+28]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], edx
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pLimit$5[ebp]
mov	DWORD PTR [edx+60], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pOffset$9[ebp]
mov	DWORD PTR [ecx+64], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], 0
movzx	edx, BYTE PTR _dest$[ebp]
cmp	edx, DWORD PTR _priorOp$18[ebp]
je	$LN23@multiSelec
movzx	eax, BYTE PTR _dest$[ebp]
cmp	eax, 9
jne	SHORT $LN22@multiSelec
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pFirst$19[ebp], ecx
mov	edx, DWORD PTR _pFirst$19[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN20@multiSelec
mov	eax, DWORD PTR _pFirst$19[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pFirst$19[ebp], ecx
jmp	SHORT $LN21@multiSelec
mov	edx, DWORD PTR _pFirst$19[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_generateColumnNames
add	esp, 12					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iBreak$21[ebp], eax
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iCont$10[ebp], eax
mov	ecx, DWORD PTR _iBreak$21[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_computeLimitRegisters
add	esp, 12					
mov	ecx, DWORD PTR _iBreak$21[ebp]
push	ecx
mov	edx, DWORD PTR _unionTab$28[ebp]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _iStart$4[ebp], eax
mov	edx, DWORD PTR _iBreak$21[ebp]
push	edx
mov	eax, DWORD PTR _iCont$10[ebp]
push	eax
lea	ecx, DWORD PTR _dest$[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _unionTab$28[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_selectInnerLoop
add	esp, 36					
mov	ecx, DWORD PTR _iCont$10[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _iStart$4[ebp]
push	eax
mov	ecx, DWORD PTR _unionTab$28[ebp]
push	ecx
push	9
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _iBreak$21[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
push	0
mov	edx, DWORD PTR _unionTab$28[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN40@multiSelec
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _tab1$27[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _tab2$23[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
push	0
mov	edx, DWORD PTR _tab1$27[ebp]
push	edx
push	55					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr$12[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _addr$12[ebp]
mov	DWORD PTR [eax+edx+16], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_findRightmost
add	esp, 4
add	eax, 6
mov	DWORD PTR tv346[ebp], eax
mov	eax, DWORD PTR tv346[ebp]
movzx	ecx, WORD PTR [eax]
or	ecx, 8
mov	edx, DWORD PTR tv346[ebp]
mov	WORD PTR [edx], cx
mov	eax, DWORD PTR _tab1$27[ebp]
push	eax
push	1
lea	ecx, DWORD PTR _intersectdest$1[ebp]
push	ecx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+468]
mov	DWORD PTR _iSub1$[ebp], eax
lea	ecx, DWORD PTR _intersectdest$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPrior$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN18@multiSelec
jmp	$multi_select_end$54
push	0
mov	ecx, DWORD PTR _tab2$23[ebp]
push	ecx
push	55					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr$12[ebp], eax
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _addr$12[ebp]
mov	DWORD PTR [ecx+eax+16], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+52], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+60]
mov	DWORD PTR _pLimit$6[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+60], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	DWORD PTR _pOffset$3[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+64], 0
mov	ecx, DWORD PTR _tab2$23[ebp]
mov	DWORD PTR _intersectdest$1[ebp+4], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+468]
mov	DWORD PTR _iSub2$[ebp], eax
lea	ecx, DWORD PTR _intersectdest$1[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pDelete$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR [eax+52], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR tv843[ebp], edx
mov	DWORD PTR tv844[ebp], eax
mov	ecx, DWORD PTR tv843[ebp]
mov	edx, DWORD PTR tv844[ebp]
mov	eax, DWORD PTR [ecx+28]
cmp	eax, DWORD PTR [edx+28]
jb	SHORT $LN17@multiSelec
ja	SHORT $LN53@multiSelec
mov	ecx, DWORD PTR tv843[ebp]
mov	edx, DWORD PTR tv844[ebp]
mov	eax, DWORD PTR [ecx+24]
cmp	eax, DWORD PTR [edx+24]
jbe	SHORT $LN17@multiSelec
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pPrior$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR [edx+28]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pLimit$6[ebp]
mov	DWORD PTR [eax+60], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pOffset$3[ebp]
mov	DWORD PTR [edx+64], eax
movzx	ecx, BYTE PTR _dest$[ebp]
cmp	ecx, 9
jne	SHORT $LN16@multiSelec
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pFirst$22[ebp], edx
mov	eax, DWORD PTR _pFirst$22[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN14@multiSelec
mov	ecx, DWORD PTR _pFirst$22[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pFirst$22[ebp], edx
jmp	SHORT $LN15@multiSelec
mov	eax, DWORD PTR _pFirst$22[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_generateColumnNames
add	esp, 12					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iBreak$24[ebp], eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iCont$16[ebp], eax
mov	edx, DWORD PTR _iBreak$24[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_computeLimitRegisters
add	esp, 12					
mov	edx, DWORD PTR _iBreak$24[ebp]
push	edx
mov	eax, DWORD PTR _tab1$27[ebp]
push	eax
push	105					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$17[ebp], eax
mov	eax, DWORD PTR _r1$17[ebp]
push	eax
mov	ecx, DWORD PTR _tab1$27[ebp]
push	ecx
push	98					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _iStart$8[ebp], eax
push	0
mov	eax, DWORD PTR _r1$17[ebp]
push	eax
mov	ecx, DWORD PTR _iCont$16[ebp]
push	ecx
mov	edx, DWORD PTR _tab2$23[ebp]
push	edx
push	65					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	ecx, DWORD PTR _r1$17[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	eax, DWORD PTR _iBreak$24[ebp]
push	eax
mov	ecx, DWORD PTR _iCont$16[ebp]
push	ecx
lea	edx, DWORD PTR _dest$[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _tab1$27[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_selectInnerLoop
add	esp, 36					
mov	edx, DWORD PTR _iCont$16[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	ecx, DWORD PTR _iStart$8[ebp]
push	ecx
mov	edx, DWORD PTR _tab1$27[ebp]
push	edx
push	9
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _iBreak$24[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
push	0
mov	eax, DWORD PTR _tab2$23[ebp]
push	eax
push	58					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	edx, DWORD PTR _tab1$27[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+4]
cmp	edx, 116				
je	SHORT $LN50@multiSelec
mov	DWORD PTR tv490[ebp], 1
jmp	SHORT $LN51@multiSelec
mov	DWORD PTR tv490[ebp], 0
mov	eax, DWORD PTR tv490[ebp]
push	eax
mov	ecx, DWORD PTR _iSub2$[ebp]
push	ecx
mov	edx, DWORD PTR _iSub1$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_explainComposite
add	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 8
je	$multi_select_end$54
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nCol$15[ebp], ecx
push	1
mov	edx, DWORD PTR _nCol$15[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3KeyInfoAlloc
add	esp, 12					
mov	DWORD PTR _pKeyInfo$20[ebp], eax
cmp	DWORD PTR _pKeyInfo$20[ebp], 0
jne	SHORT $LN12@multiSelec
mov	DWORD PTR _rc$[ebp], 7
jmp	$multi_select_end$54
mov	DWORD PTR _i$29[ebp], 0
mov	ecx, DWORD PTR _pKeyInfo$20[ebp]
add	ecx, 20					
mov	DWORD PTR _apColl$25[ebp], ecx
jmp	SHORT $LN11@multiSelec
mov	edx, DWORD PTR _i$29[ebp]
add	edx, 1
mov	DWORD PTR _i$29[ebp], edx
mov	eax, DWORD PTR _apColl$25[ebp]
add	eax, 4
mov	DWORD PTR _apColl$25[ebp], eax
mov	ecx, DWORD PTR _i$29[ebp]
cmp	ecx, DWORD PTR _nCol$15[ebp]
jge	SHORT $LN9@multiSelec
mov	edx, DWORD PTR _i$29[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_multiSelectCollSeq
add	esp, 12					
mov	edx, DWORD PTR _apColl$25[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _apColl$25[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN8@multiSelec
mov	ecx, DWORD PTR _apColl$25[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx], eax
jmp	SHORT $LN10@multiSelec
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pLoop$26[ebp], ecx
jmp	SHORT $LN7@multiSelec
mov	edx, DWORD PTR _pLoop$26[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pLoop$26[ebp], eax
cmp	DWORD PTR _pLoop$26[ebp], 0
je	SHORT $LN5@multiSelec
mov	DWORD PTR _i$29[ebp], 0
jmp	SHORT $LN4@multiSelec
mov	ecx, DWORD PTR _i$29[ebp]
add	ecx, 1
mov	DWORD PTR _i$29[ebp], ecx
cmp	DWORD PTR _i$29[ebp], 2
jge	SHORT $LN2@multiSelec
mov	edx, DWORD PTR _i$29[ebp]
mov	eax, DWORD PTR _pLoop$26[ebp]
mov	ecx, DWORD PTR [eax+edx*4+16]
mov	DWORD PTR _addr$13[ebp], ecx
cmp	DWORD PTR _addr$13[ebp], 0
jge	SHORT $LN1@multiSelec
jmp	SHORT $LN2@multiSelec
mov	edx, DWORD PTR _nCol$15[ebp]
push	edx
mov	eax, DWORD PTR _addr$13[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP2
add	esp, 12					
push	-6					
mov	edx, DWORD PTR _pKeyInfo$20[ebp]
push	edx
call	_sqlite3KeyInfoRef
add	esp, 4
push	eax
mov	eax, DWORD PTR _addr$13[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	edx, DWORD PTR _i$29[ebp]
mov	eax, DWORD PTR _pLoop$26[ebp]
mov	DWORD PTR [eax+edx*4+16], -1
jmp	SHORT $LN3@multiSelec
jmp	$LN6@multiSelec
mov	ecx, DWORD PTR _pKeyInfo$20[ebp]
push	ecx
call	_sqlite3KeyInfoUnref
add	esp, 4
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR _dest$[ebp+8]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR _dest$[ebp+12]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pDelete$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_multiSelectOrderBy PROC
push	ebp
mov	ebp, esp
sub	esp, 236				
mov	DWORD PTR _addrOutB$[ebp], 0
mov	DWORD PTR _pKeyDup$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _labelEnd$[ebp], eax
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _labelCmpr$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+4]
mov	DWORD PTR _op$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pPrior$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _pOrderBy$[ebp], edx
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nOrderBy$[ebp], ecx
cmp	DWORD PTR _op$[ebp], 116		
je	$LN43@multiSelec
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN42@multiSelec
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	$LN43@multiSelec
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jg	$LN43@multiSelec
mov	DWORD PTR _j$[ebp], 0
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$3[ebp], eax
jmp	SHORT $LN39@multiSelec
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pItem$3[ebp]
add	edx, 24					
mov	DWORD PTR _pItem$3[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR _nOrderBy$[ebp]
jge	SHORT $LN37@multiSelec
mov	ecx, DWORD PTR _pItem$3[ebp]
movzx	edx, WORD PTR [ecx+20]
cmp	edx, DWORD PTR _i$[ebp]
jne	SHORT $LN36@multiSelec
jmp	SHORT $LN37@multiSelec
jmp	SHORT $LN38@multiSelec
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR _nOrderBy$[ebp]
jne	SHORT $LN35@multiSelec
push	0
push	132					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pNew$5[ebp], eax
cmp	DWORD PTR _pNew$5[ebp], 0
jne	SHORT $LN34@multiSelec
mov	eax, 7
jmp	$LN44@multiSelec
mov	edx, DWORD PTR _pNew$5[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 1024				
mov	ecx, DWORD PTR _pNew$5[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pNew$5[ebp]
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pNew$5[ebp]
push	ecx
mov	edx, DWORD PTR _pOrderBy$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pOrderBy$[ebp], eax
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN35@multiSelec
imul	ecx, DWORD PTR _nOrderBy$[ebp], 24
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	dx, WORD PTR _i$[ebp]
mov	WORD PTR [eax+ecx+20], dx
mov	eax, DWORD PTR _nOrderBy$[ebp]
add	eax, 1
mov	DWORD PTR _nOrderBy$[ebp], eax
jmp	$LN41@multiSelec
mov	ecx, DWORD PTR _nOrderBy$[ebp]
shl	ecx, 2
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aPermute$[ebp], eax
cmp	DWORD PTR _aPermute$[ebp], 0
je	SHORT $LN32@multiSelec
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$1[ebp], ecx
jmp	SHORT $LN31@multiSelec
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$1[ebp]
add	eax, 24					
mov	DWORD PTR _pItem$1[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nOrderBy$[ebp]
jge	SHORT $LN29@multiSelec
mov	edx, DWORD PTR _pItem$1[ebp]
movzx	eax, WORD PTR [edx+20]
sub	eax, 1
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aPermute$[ebp]
mov	DWORD PTR [edx+ecx*4], eax
jmp	SHORT $LN30@multiSelec
push	1
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_multiSelectOrderByKeyInfo
add	esp, 12					
mov	DWORD PTR _pKeyMerge$[ebp], eax
jmp	SHORT $LN28@multiSelec
mov	DWORD PTR _pKeyMerge$[ebp], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	DWORD PTR [edx+48], eax
push	0
mov	ecx, DWORD PTR _pOrderBy$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprListDup
add	esp, 12					
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR [ecx+48], eax
cmp	DWORD PTR _op$[ebp], 116		
jne	SHORT $LN27@multiSelec
mov	DWORD PTR _regPrev$[ebp], 0
jmp	$LN26@multiSelec
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nExpr$2[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR _regPrev$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	eax, DWORD PTR _nExpr$2[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], ecx
mov	eax, DWORD PTR _regPrev$[ebp]
push	eax
push	0
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	edx, DWORD PTR _nExpr$2[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3KeyInfoAlloc
add	esp, 12					
mov	DWORD PTR _pKeyDup$[ebp], eax
cmp	DWORD PTR _pKeyDup$[ebp], 0
je	SHORT $LN26@multiSelec
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN24@multiSelec
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nExpr$2[ebp]
jge	SHORT $LN26@multiSelec
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_multiSelectCollSeq
add	esp, 12					
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pKeyDup$[ebp]
mov	DWORD PTR [edx+ecx*4+20], eax
mov	eax, DWORD PTR _pKeyDup$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR _i$[ebp]
mov	BYTE PTR [ecx+edx], 0
jmp	SHORT $LN23@multiSelec
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+52], 0
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR [ecx+56], 0
push	OFFSET $SG114270
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ResolveOrderGroupBy
add	esp, 16					
mov	eax, DWORD PTR _pPrior$[ebp]
cmp	DWORD PTR [eax+52], 0
jne	SHORT $LN21@multiSelec
push	OFFSET $SG114272
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR [ecx+48]
push	edx
mov	eax, DWORD PTR _pPrior$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ResolveOrderGroupBy
add	esp, 16					
mov	edx, DWORD PTR _labelEnd$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_computeLimitRegisters
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+8], 0
je	$LN20@multiSelec
cmp	DWORD PTR _op$[ebp], 116		
jne	$LN20@multiSelec
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv219[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv219[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv219[ebp]
mov	DWORD PTR _regLimitA$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv222[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv222[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv222[ebp]
mov	DWORD PTR _regLimitB$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN46@multiSelec
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
add	eax, 1
mov	DWORD PTR tv230[ebp], eax
jmp	SHORT $LN47@multiSelec
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR tv230[ebp], edx
mov	eax, DWORD PTR _regLimitA$[ebp]
push	eax
mov	ecx, DWORD PTR tv230[ebp]
push	ecx
push	33					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regLimitB$[ebp]
push	eax
mov	ecx, DWORD PTR _regLimitA$[ebp]
push	ecx
push	33					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN19@multiSelec
mov	DWORD PTR _regLimitB$[ebp], 0
mov	eax, DWORD PTR _regLimitB$[ebp]
mov	DWORD PTR _regLimitA$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+60], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+64], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv247[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv247[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv247[ebp]
mov	DWORD PTR _regAddrA$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv250[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv250[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv250[ebp]
mov	DWORD PTR _regAddrB$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv253[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv253[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv253[ebp]
mov	DWORD PTR _regOutA$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv256[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv256[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv256[ebp]
mov	DWORD PTR _regOutB$[ebp], ecx
mov	edx, DWORD PTR _regAddrA$[ebp]
push	edx
push	13					
lea	eax, DWORD PTR _destA$[ebp]
push	eax
call	_sqlite3SelectDestInit
add	esp, 12					
mov	ecx, DWORD PTR _regAddrB$[ebp]
push	ecx
push	13					
lea	edx, DWORD PTR _destB$[ebp]
push	edx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 1
mov	DWORD PTR _addrSelectA$[ebp], eax
mov	ecx, DWORD PTR _addrSelectA$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _regAddrA$[ebp]
push	edx
push	20					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _j1$[ebp], eax
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR _regLimitA$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+468]
mov	DWORD PTR _iSub1$[ebp], ecx
lea	edx, DWORD PTR _destA$[ebp]
push	edx
mov	eax, DWORD PTR _pPrior$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Select
add	esp, 12					
mov	edx, DWORD PTR _regAddrA$[ebp]
push	edx
push	21					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _j1$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 1
mov	DWORD PTR _addrSelectB$[ebp], eax
mov	ecx, DWORD PTR _addrSelectB$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _regAddrB$[ebp]
push	edx
push	20					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _j1$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _savedLimit$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _savedOffset$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _regLimitB$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+468]
mov	DWORD PTR _iSub2$[ebp], eax
lea	ecx, DWORD PTR _destB$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Select
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _savedLimit$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _savedOffset$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _regAddrB$[ebp]
push	edx
push	21					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _labelEnd$[ebp]
push	ecx
mov	edx, DWORD PTR _pKeyDup$[ebp]
push	edx
mov	eax, DWORD PTR _regPrev$[ebp]
push	eax
mov	ecx, DWORD PTR _regOutA$[ebp]
push	ecx
mov	edx, DWORD PTR _pDest$[ebp]
push	edx
lea	eax, DWORD PTR _destA$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_generateOutputSubroutine
add	esp, 32					
mov	DWORD PTR _addrOutA$[ebp], eax
cmp	DWORD PTR _op$[ebp], 116		
je	SHORT $LN17@multiSelec
cmp	DWORD PTR _op$[ebp], 115		
jne	SHORT $LN18@multiSelec
mov	eax, DWORD PTR _labelEnd$[ebp]
push	eax
mov	ecx, DWORD PTR _pKeyDup$[ebp]
push	ecx
mov	edx, DWORD PTR _regPrev$[ebp]
push	edx
mov	eax, DWORD PTR _regOutB$[ebp]
push	eax
mov	ecx, DWORD PTR _pDest$[ebp]
push	ecx
lea	edx, DWORD PTR _destB$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_generateOutputSubroutine
add	esp, 32					
mov	DWORD PTR _addrOutB$[ebp], eax
mov	edx, DWORD PTR _pKeyDup$[ebp]
push	edx
call	_sqlite3KeyInfoUnref
add	esp, 4
cmp	DWORD PTR _op$[ebp], 117		
je	SHORT $LN15@multiSelec
cmp	DWORD PTR _op$[ebp], 118		
jne	SHORT $LN16@multiSelec
mov	eax, DWORD PTR _labelEnd$[ebp]
mov	DWORD PTR _addrEofA$[ebp], eax
mov	ecx, DWORD PTR _addrEofA$[ebp]
mov	DWORD PTR _addrEofA_noB$[ebp], ecx
jmp	SHORT $LN14@multiSelec
mov	edx, DWORD PTR _addrOutB$[ebp]
push	edx
mov	eax, DWORD PTR _regOutB$[ebp]
push	eax
push	17					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrEofA$[ebp], eax
mov	edx, DWORD PTR _labelEnd$[ebp]
push	edx
mov	eax, DWORD PTR _regAddrB$[ebp]
push	eax
push	22					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrEofA_noB$[ebp], eax
mov	edx, DWORD PTR _addrEofA$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pPrior$[ebp]
mov	eax, DWORD PTR [ecx+24]
add	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR [ecx+28]
adc	ecx, DWORD PTR [edx+28]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+24], eax
mov	DWORD PTR [edx+28], ecx
cmp	DWORD PTR _op$[ebp], 118		
jne	SHORT $LN13@multiSelec
mov	eax, DWORD PTR _addrEofA$[ebp]
mov	DWORD PTR _addrEofB$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR tv752[ebp], ecx
mov	DWORD PTR tv753[ebp], edx
mov	eax, DWORD PTR tv752[ebp]
mov	ecx, DWORD PTR tv753[ebp]
mov	edx, DWORD PTR [eax+28]
cmp	edx, DWORD PTR [ecx+28]
jb	SHORT $LN12@multiSelec
ja	SHORT $LN48@multiSelec
mov	eax, DWORD PTR tv752[ebp]
mov	ecx, DWORD PTR tv753[ebp]
mov	edx, DWORD PTR [eax+24]
cmp	edx, DWORD PTR [ecx+24]
jbe	SHORT $LN12@multiSelec
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR [ecx+28]
mov	DWORD PTR [eax+28], ecx
jmp	SHORT $LN11@multiSelec
mov	edx, DWORD PTR _addrOutA$[ebp]
push	edx
mov	eax, DWORD PTR _regOutA$[ebp]
push	eax
push	17					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrEofB$[ebp], eax
mov	edx, DWORD PTR _labelEnd$[ebp]
push	edx
mov	eax, DWORD PTR _regAddrA$[ebp]
push	eax
push	22					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addrEofB$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrOutA$[ebp]
push	ecx
mov	edx, DWORD PTR _regOutA$[ebp]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrAltB$[ebp], eax
mov	ecx, DWORD PTR _addrEofA$[ebp]
push	ecx
mov	edx, DWORD PTR _regAddrA$[ebp]
push	edx
push	22					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _labelCmpr$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _op$[ebp], 116		
jne	SHORT $LN10@multiSelec
mov	eax, DWORD PTR _addrAltB$[ebp]
mov	DWORD PTR _addrAeqB$[ebp], eax
jmp	SHORT $LN9@multiSelec
cmp	DWORD PTR _op$[ebp], 118		
jne	SHORT $LN8@multiSelec
mov	ecx, DWORD PTR _addrAltB$[ebp]
mov	DWORD PTR _addrAeqB$[ebp], ecx
mov	edx, DWORD PTR _addrAltB$[ebp]
add	edx, 1
mov	DWORD PTR _addrAltB$[ebp], edx
jmp	SHORT $LN9@multiSelec
mov	eax, DWORD PTR _addrEofA$[ebp]
push	eax
mov	ecx, DWORD PTR _regAddrA$[ebp]
push	ecx
push	22					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrAeqB$[ebp], eax
mov	eax, DWORD PTR _labelCmpr$[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrAgtB$[ebp], eax
cmp	DWORD PTR _op$[ebp], 116		
je	SHORT $LN5@multiSelec
cmp	DWORD PTR _op$[ebp], 115		
jne	SHORT $LN6@multiSelec
mov	eax, DWORD PTR _addrOutB$[ebp]
push	eax
mov	ecx, DWORD PTR _regOutB$[ebp]
push	ecx
push	17					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addrEofB$[ebp]
push	eax
mov	ecx, DWORD PTR _regAddrB$[ebp]
push	ecx
push	22					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _labelCmpr$[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _j1$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _addrEofA_noB$[ebp]
push	ecx
mov	edx, DWORD PTR _regAddrA$[ebp]
push	edx
push	22					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrEofB$[ebp]
push	ecx
mov	edx, DWORD PTR _regAddrB$[ebp]
push	edx
push	22					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _labelCmpr$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
push	-15					
mov	eax, DWORD PTR _aPermute$[ebp]
push	eax
push	0
push	0
push	0
push	40					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	-6					
mov	edx, DWORD PTR _pKeyMerge$[ebp]
push	edx
mov	eax, DWORD PTR _nOrderBy$[ebp]
push	eax
mov	ecx, DWORD PTR _destB$[ebp+8]
push	ecx
mov	edx, DWORD PTR _destA$[ebp+8]
push	edx
push	41					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	edx, DWORD PTR _addrAgtB$[ebp]
push	edx
mov	eax, DWORD PTR _addrAeqB$[ebp]
push	eax
mov	ecx, DWORD PTR _addrAltB$[ebp]
push	ecx
push	42					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _labelEnd$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	edx, DWORD PTR _pDest$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 9
jne	SHORT $LN4@multiSelec
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR _pFirst$4[ebp], ecx
mov	edx, DWORD PTR _pFirst$4[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN2@multiSelec
mov	eax, DWORD PTR _pFirst$4[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pFirst$4[ebp], ecx
jmp	SHORT $LN3@multiSelec
mov	edx, DWORD PTR _pFirst$4[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_generateColumnNames
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN1@multiSelec
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR [eax+52], ecx
mov	edx, DWORD PTR _pPrior$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+56], eax
push	0
mov	ecx, DWORD PTR _iSub2$[ebp]
push	ecx
mov	edx, DWORD PTR _iSub1$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_explainComposite
add	esp, 20					
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_generateWithRecursiveQuery PROC
push	ebp
mov	ebp, esp
sub	esp, 112				
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pSrc$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nCol$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pSetup$[ebp], edx
mov	DWORD PTR _iCurrent$[ebp], 0
mov	DWORD PTR _iDistinct$[ebp], 0
mov	DWORD PTR _eDest$[ebp], 5
push	0
push	0
push	0
push	33					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN14@generateWi
jmp	$LN15@generateWi
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrBreak$[ebp], eax
mov	edx, DWORD PTR _addrBreak$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_computeLimitRegisters
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+60]
mov	DWORD PTR _pLimit$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	DWORD PTR _pOffset$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _regLimit$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _regOffset$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+64], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+60], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _pOrderBy$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN13@generateWi
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN11@generateWi
imul	ecx, DWORD PTR _i$[ebp], 80
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+ecx+48]
shr	eax, 3
and	eax, 1
je	SHORT $LN10@generateWi
imul	ecx, DWORD PTR _i$[ebp], 80
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+ecx+56]
mov	DWORD PTR _iCurrent$[ebp], eax
jmp	SHORT $LN11@generateWi
jmp	SHORT $LN12@generateWi
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _iQueue$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+4]
cmp	ecx, 115				
jne	SHORT $LN9@generateWi
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN17@generateWi
mov	DWORD PTR tv144[ebp], 8
jmp	SHORT $LN18@generateWi
mov	DWORD PTR tv144[ebp], 6
mov	edx, DWORD PTR tv144[ebp]
mov	DWORD PTR _eDest$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iDistinct$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
jmp	SHORT $LN8@generateWi
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN19@generateWi
mov	DWORD PTR tv150[ebp], 7
jmp	SHORT $LN20@generateWi
mov	DWORD PTR tv150[ebp], 5
mov	edx, DWORD PTR tv150[ebp]
mov	DWORD PTR _eDest$[ebp], edx
mov	eax, DWORD PTR _iQueue$[ebp]
push	eax
mov	ecx, DWORD PTR _eDest$[ebp]
push	ecx
lea	edx, DWORD PTR _destQueue$[ebp]
push	edx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv156[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv156[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv156[ebp]
mov	DWORD PTR _regCurrent$[ebp], ecx
mov	edx, DWORD PTR _nCol$[ebp]
push	edx
mov	eax, DWORD PTR _regCurrent$[ebp]
push	eax
mov	ecx, DWORD PTR _iCurrent$[ebp]
push	ecx
push	57					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN7@generateWi
push	1
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_multiSelectOrderByKeyInfo
add	esp, 12					
mov	DWORD PTR _pKeyInfo$1[ebp], eax
push	-6					
mov	edx, DWORD PTR _pKeyInfo$1[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _iQueue$[ebp]
push	edx
push	55					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _pOrderBy$[ebp]
mov	DWORD PTR _destQueue$[ebp+16], ecx
jmp	SHORT $LN6@generateWi
mov	edx, DWORD PTR _nCol$[ebp]
push	edx
mov	eax, DWORD PTR _iQueue$[ebp]
push	eax
push	55					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _iDistinct$[ebp], 0
je	SHORT $LN5@generateWi
push	0
mov	edx, DWORD PTR _iDistinct$[ebp]
push	edx
push	55					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+edx+16], eax
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
or	eax, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+6], ax
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+48], 0
mov	eax, DWORD PTR _pSetup$[ebp]
mov	DWORD PTR [eax+56], 0
lea	ecx, DWORD PTR _destQueue$[ebp]
push	ecx
mov	edx, DWORD PTR _pSetup$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pSetup$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+56], edx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@generateWi
jmp	$end_of_recursive_query$21
mov	eax, DWORD PTR _addrBreak$[ebp]
push	eax
mov	ecx, DWORD PTR _iQueue$[ebp]
push	ecx
push	105					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrTop$[ebp], eax
mov	eax, DWORD PTR _iCurrent$[ebp]
push	eax
push	101					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN3@generateWi
mov	edx, DWORD PTR _regCurrent$[ebp]
push	edx
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _iQueue$[ebp]
push	edx
push	46					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN2@generateWi
mov	ecx, DWORD PTR _regCurrent$[ebp]
push	ecx
mov	edx, DWORD PTR _iQueue$[ebp]
push	edx
push	99					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _iQueue$[ebp]
push	ecx
push	74					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrCont$[ebp], eax
mov	ecx, DWORD PTR _addrCont$[ebp]
push	ecx
mov	edx, DWORD PTR _regOffset$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_codeOffset
add	esp, 12					
mov	ecx, DWORD PTR _addrBreak$[ebp]
push	ecx
mov	edx, DWORD PTR _addrCont$[ebp]
push	edx
mov	eax, DWORD PTR _pDest$[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _iCurrent$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_selectInnerLoop
add	esp, 36					
cmp	DWORD PTR _regLimit$[ebp], 0
je	SHORT $LN1@generateWi
push	-1
mov	eax, DWORD PTR _addrBreak$[ebp]
push	eax
mov	ecx, DWORD PTR _regLimit$[ebp]
push	ecx
push	136					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _addrCont$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+52], 0
lea	eax, DWORD PTR _destQueue$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Select
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pSetup$[ebp]
mov	DWORD PTR [eax+52], ecx
mov	edx, DWORD PTR _addrTop$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrBreak$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	DWORD PTR [ecx+48], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pLimit$[ebp]
mov	DWORD PTR [eax+60], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pOffset$[ebp]
mov	DWORD PTR [edx+64], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_multiSelectOrderByKeyInfo PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
push	esi
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _pOrderBy$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nOrderBy$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
push	1
mov	ecx, DWORD PTR _nOrderBy$[ebp]
add	ecx, DWORD PTR _nExtra$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3KeyInfoAlloc
add	esp, 12					
mov	DWORD PTR _pRet$[ebp], eax
cmp	DWORD PTR _pRet$[ebp], 0
je	$LN7@multiSelec
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN6@multiSelec
mov	eax, DWORD PTR _i$4[ebp]
add	eax, 1
mov	DWORD PTR _i$4[ebp], eax
mov	ecx, DWORD PTR _i$4[ebp]
cmp	ecx, DWORD PTR _nOrderBy$[ebp]
jge	$LN7@multiSelec
imul	edx, DWORD PTR _i$4[ebp], 24
mov	eax, DWORD PTR _pOrderBy$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$1[ebp], edx
mov	ecx, DWORD PTR _pItem$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pTerm$2[ebp], edx
mov	eax, DWORD PTR _pTerm$2[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 256				
je	SHORT $LN3@multiSelec
mov	edx, DWORD PTR _pTerm$2[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$3[ebp], eax
jmp	SHORT $LN2@multiSelec
mov	ecx, DWORD PTR _pItem$1[ebp]
movzx	edx, WORD PTR [ecx+20]
sub	edx, 1
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_multiSelectCollSeq
add	esp, 12					
mov	DWORD PTR _pColl$3[ebp], eax
cmp	DWORD PTR _pColl$3[ebp], 0
jne	SHORT $LN1@multiSelec
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pColl$3[ebp], eax
mov	ecx, DWORD PTR _pColl$3[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pTerm$2[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprAddCollateString
add	esp, 12					
imul	edx, DWORD PTR _i$4[ebp], 24
mov	ecx, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [ecx+4]
mov	DWORD PTR [ecx+edx], eax
mov	edx, DWORD PTR _i$4[ebp]
mov	eax, DWORD PTR _pRet$[ebp]
mov	ecx, DWORD PTR _pColl$3[ebp]
mov	DWORD PTR [eax+edx*4+20], ecx
imul	edx, DWORD PTR _i$4[ebp], 24
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _pRet$[ebp]
mov	eax, DWORD PTR [eax+16]
mov	esi, DWORD PTR _i$4[ebp]
mov	cl, BYTE PTR [ecx+edx+12]
mov	BYTE PTR [eax+esi], cl
jmp	$LN5@multiSelec
mov	eax, DWORD PTR _pRet$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_multiSelectCollSeq PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN3@multiSelec
mov	ecx, DWORD PTR _iCol$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_multiSelectCollSeq
add	esp, 12					
mov	DWORD PTR _pRet$[ebp], eax
jmp	SHORT $LN2@multiSelec
mov	DWORD PTR _pRet$[ebp], 0
cmp	DWORD PTR _pRet$[ebp], 0
jne	SHORT $LN1@multiSelec
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _iCol$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN1@multiSelec
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
imul	ecx, DWORD PTR _iCol$[ebp], 24
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pRet$[ebp], eax
mov	eax, DWORD PTR _pRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_computeLimitRegisters PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	DWORD PTR _v$[ebp], 0
mov	DWORD PTR _iLimit$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN8@computeLim
jmp	$LN9@computeLim
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheClear
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+60], 0
je	$LN9@computeLim
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv72[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv72[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv72[ebp]
mov	DWORD PTR _iLimit$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _iLimit$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
lea	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
je	SHORT $LN6@computeLim
mov	edx, DWORD PTR _iLimit$[ebp]
push	edx
mov	eax, DWORD PTR _n$[ebp]
push	eax
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _n$[ebp], 0
jne	SHORT $LN5@computeLim
mov	edx, DWORD PTR _iBreak$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN4@computeLim
cmp	DWORD PTR _n$[ebp], 0
jl	SHORT $LN4@computeLim
mov	eax, DWORD PTR _n$[ebp]
cdq
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv213[ebp], ecx
mov	DWORD PTR tv214[ebp], eax
mov	DWORD PTR tv214[ebp+4], edx
mov	edx, DWORD PTR tv213[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR tv214[ebp+4]
jb	SHORT $LN4@computeLim
ja	SHORT $LN11@computeLim
mov	ecx, DWORD PTR tv213[ebp]
mov	edx, DWORD PTR [ecx+24]
cmp	edx, DWORD PTR tv214[ebp]
jbe	SHORT $LN4@computeLim
mov	eax, DWORD PTR _n$[ebp]
cdq
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	DWORD PTR [ecx+28], edx
jmp	SHORT $LN2@computeLim
mov	edx, DWORD PTR _iLimit$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCode
add	esp, 12					
mov	eax, DWORD PTR _iLimit$[ebp]
push	eax
push	38					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	edx, DWORD PTR _iBreak$[ebp]
push	edx
mov	eax, DWORD PTR _iLimit$[ebp]
push	eax
push	136					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+64], 0
je	$LN9@computeLim
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv143[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv143[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv143[ebp]
mov	DWORD PTR _iOffset$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _iOffset$[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], edx
mov	ecx, DWORD PTR _iOffset$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
mov	edx, DWORD PTR _iOffset$[ebp]
push	edx
push	38					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _iOffset$[ebp]
push	ecx
push	134					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr1$[ebp], eax
mov	eax, DWORD PTR _iOffset$[ebp]
push	eax
push	0
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addr1$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _iOffset$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _iOffset$[ebp]
push	edx
mov	eax, DWORD PTR _iLimit$[ebp]
push	eax
push	89					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _iLimit$[ebp]
push	edx
push	134					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr1$[ebp], eax
mov	ecx, DWORD PTR _iOffset$[ebp]
add	ecx, 1
push	ecx
push	-1
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addr1$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_selectAddColumnTypeAndCollation PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
xorpd	xmm0, xmm0
movlpd	QWORD PTR _szAll$[ebp], xmm0
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN6@selectAddC
jmp	$LN7@selectAddC
push	32					
push	0
lea	ecx, DWORD PTR _sNC$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pSelect$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _sNC$[ebp+4], eax
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _a$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$[ebp], edx
jmp	SHORT $LN5@selectAddC
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pCol$[ebp]
add	ecx, 24					
mov	DWORD PTR _pCol$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	$LN3@selectAddC
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _a$[ebp]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _pCol$[ebp]
add	ecx, 22					
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
lea	eax, DWORD PTR _sNC$[ebp]
push	eax
call	_columnTypeImpl
add	esp, 12					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _pCol$[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _pCol$[ebp]
movzx	eax, BYTE PTR [eax+22]
cdq
add	eax, DWORD PTR _szAll$[ebp]
adc	edx, DWORD PTR _szAll$[ebp+4]
mov	DWORD PTR _szAll$[ebp], eax
mov	DWORD PTR _szAll$[ebp+4], edx
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3ExprAffinity
add	esp, 4
mov	edx, DWORD PTR _pCol$[ebp]
mov	BYTE PTR [edx+21], al
mov	eax, DWORD PTR _pCol$[ebp]
movsx	ecx, BYTE PTR [eax+21]
test	ecx, ecx
jne	SHORT $LN2@selectAddC
mov	edx, DWORD PTR _pCol$[ebp]
mov	BYTE PTR [edx+21], 98			
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
je	SHORT $LN1@selectAddC
mov	edx, DWORD PTR _pColl$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _pCol$[ebp]
mov	DWORD PTR [edx+16], eax
jmp	$LN4@selectAddC
push	0
push	4
mov	eax, DWORD PTR _szAll$[ebp+4]
push	eax
mov	ecx, DWORD PTR _szAll$[ebp]
push	ecx
call	__allmul
push	edx
push	eax
call	_sqlite3LogEst
add	esp, 8
mov	edx, DWORD PTR _pTab$[ebp]
mov	WORD PTR [edx+42], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_selectColumnsFromExprList PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pEList$[ebp], 0
je	SHORT $LN28@selectColu
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _nCol$[ebp], eax
imul	ecx, DWORD PTR _nCol$[ebp], 24
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _aCol$[ebp], eax
jmp	SHORT $LN27@selectColu
mov	DWORD PTR _nCol$[ebp], 0
mov	DWORD PTR _aCol$[ebp], 0
mov	eax, DWORD PTR _pnCol$[ebp]
mov	cx, WORD PTR _nCol$[ebp]
mov	WORD PTR [eax], cx
mov	edx, DWORD PTR _paCol$[ebp]
mov	eax, DWORD PTR _aCol$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _aCol$[ebp]
mov	DWORD PTR _pCol$[ebp], ecx
jmp	SHORT $LN26@selectColu
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pCol$[ebp]
add	eax, 24					
mov	DWORD PTR _pCol$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nCol$[ebp]
jge	$LN24@selectColu
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN23@selectColu
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
jmp	$LN22@selectColu
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pColExpr$5[ebp], eax
mov	ecx, DWORD PTR _pColExpr$5[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 122				
jne	SHORT $LN20@selectColu
mov	eax, DWORD PTR _pColExpr$5[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pColExpr$5[ebp], ecx
jmp	SHORT $LN21@selectColu
mov	edx, DWORD PTR _pColExpr$5[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 154				
jne	SHORT $LN19@selectColu
mov	ecx, DWORD PTR _pColExpr$5[ebp]
cmp	DWORD PTR [ecx+44], 0
je	SHORT $LN19@selectColu
mov	edx, DWORD PTR _pColExpr$5[ebp]
movsx	eax, WORD PTR [edx+32]
mov	DWORD PTR _iCol$3[ebp], eax
mov	ecx, DWORD PTR _pColExpr$5[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	DWORD PTR _pTab$2[ebp], edx
cmp	DWORD PTR _iCol$3[ebp], 0
jge	SHORT $LN18@selectColu
mov	eax, DWORD PTR _pTab$2[ebp]
movsx	ecx, WORD PTR [eax+36]
mov	DWORD PTR _iCol$3[ebp], ecx
cmp	DWORD PTR _iCol$3[ebp], 0
jl	SHORT $LN31@selectColu
imul	edx, DWORD PTR _iCol$3[ebp], 24
mov	eax, DWORD PTR _pTab$2[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR tv141[ebp], edx
jmp	SHORT $LN32@selectColu
mov	DWORD PTR tv141[ebp], OFFSET $SG113830
mov	eax, DWORD PTR tv141[ebp]
push	eax
push	OFFSET $SG113831
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zName$[ebp], eax
jmp	SHORT $LN22@selectColu
mov	edx, DWORD PTR _pColExpr$5[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 27					
jne	SHORT $LN16@selectColu
mov	ecx, DWORD PTR _pColExpr$5[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	OFFSET $SG113835
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zName$[ebp], eax
jmp	SHORT $LN22@selectColu
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+8]
push	ecx
push	OFFSET $SG113837
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zName$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN14@selectColu
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	$LN24@selectColu
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	DWORD PTR _cnt$[ebp], 0
mov	edx, DWORD PTR _cnt$[ebp]
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN13@selectColu
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR _i$[ebp]
jge	$LN11@selectColu
mov	edx, DWORD PTR _zName$[ebp]
push	edx
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _aCol$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	$LN10@selectColu
mov	eax, DWORD PTR _nName$[ebp]
sub	eax, 1
mov	DWORD PTR _k$4[ebp], eax
jmp	SHORT $LN9@selectColu
mov	ecx, DWORD PTR _k$4[ebp]
sub	ecx, 1
mov	DWORD PTR _k$4[ebp], ecx
cmp	DWORD PTR _k$4[ebp], 1
jle	SHORT $LN7@selectColu
mov	edx, DWORD PTR _zName$[ebp]
add	edx, DWORD PTR _k$4[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
je	SHORT $LN7@selectColu
jmp	SHORT $LN8@selectColu
cmp	DWORD PTR _k$4[ebp], 0
jl	SHORT $LN6@selectColu
mov	edx, DWORD PTR _zName$[ebp]
add	edx, DWORD PTR _k$4[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 58					
jne	SHORT $LN6@selectColu
mov	ecx, DWORD PTR _k$4[ebp]
mov	DWORD PTR _nName$[ebp], ecx
mov	edx, DWORD PTR _zName$[ebp]
add	edx, DWORD PTR _nName$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _cnt$[ebp]
add	eax, 1
mov	DWORD PTR _cnt$[ebp], eax
mov	ecx, DWORD PTR _cnt$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
push	OFFSET $SG113850
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zNewName$1[ebp], eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _zNewName$1[ebp]
mov	DWORD PTR _zName$[ebp], eax
mov	DWORD PTR _j$[ebp], -1
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN10@selectColu
jmp	SHORT $LN11@selectColu
jmp	$LN12@selectColu
mov	ecx, DWORD PTR _pCol$[ebp]
mov	edx, DWORD PTR _zName$[ebp]
mov	DWORD PTR [ecx], edx
jmp	$LN25@selectColu
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN4@selectColu
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN3@selectColu
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR _i$[ebp]
jge	SHORT $LN1@selectColu
imul	ecx, DWORD PTR _j$[ebp], 24
mov	edx, DWORD PTR _aCol$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@selectColu
mov	edx, DWORD PTR _aCol$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _paCol$[ebp]
mov	DWORD PTR [ecx], 0
xor	edx, edx
mov	eax, DWORD PTR _pnCol$[ebp]
mov	WORD PTR [eax], dx
mov	eax, 7
jmp	SHORT $LN29@selectColu
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_generateColumnNames PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+450]
test	edx, edx
je	SHORT $LN23@generateCo
jmp	$LN24@generateCo
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+16]
test	ecx, ecx
jne	SHORT $LN21@generateCo
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN21@generateCo
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN22@generateCo
jmp	$LN24@generateCo
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+16], 1
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 32					
je	SHORT $LN26@generateCo
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN27@generateCo
mov	DWORD PTR tv80[ebp], 0
mov	ecx, DWORD PTR tv80[ebp]
mov	DWORD PTR _fullNames$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 64					
je	SHORT $LN28@generateCo
mov	DWORD PTR tv84[ebp], 1
jmp	SHORT $LN29@generateCo
mov	DWORD PTR tv84[ebp], 0
mov	ecx, DWORD PTR tv84[ebp]
mov	DWORD PTR _shortNames$[ebp], ecx
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN20@generateCo
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	$LN18@generateCo
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _p$7[ebp], edx
cmp	DWORD PTR _p$7[ebp], 0
jne	SHORT $LN17@generateCo
jmp	SHORT $LN19@generateCo
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
cmp	DWORD PTR [edx+eax+4], 0
je	SHORT $LN16@generateCo
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _zName$1[ebp], eax
push	-1
mov	ecx, DWORD PTR _zName$1[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	$LN15@generateCo
mov	ecx, DWORD PTR _p$7[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 154				
je	SHORT $LN13@generateCo
mov	eax, DWORD PTR _p$7[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 156				
jne	$LN14@generateCo
cmp	DWORD PTR _pTabList$[ebp], 0
je	$LN14@generateCo
mov	edx, DWORD PTR _p$7[ebp]
movsx	eax, WORD PTR [edx+32]
mov	DWORD PTR _iCol$6[ebp], eax
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN12@generateCo
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pTabList$[ebp]
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN10@generateCo
imul	ecx, DWORD PTR _j$[ebp], 80
mov	edx, DWORD PTR _pTabList$[ebp]
mov	eax, DWORD PTR _p$7[ebp]
mov	ecx, DWORD PTR [edx+ecx+56]
cmp	ecx, DWORD PTR [eax+28]
jne	SHORT $LN9@generateCo
jmp	SHORT $LN10@generateCo
jmp	SHORT $LN11@generateCo
imul	edx, DWORD PTR _j$[ebp], 80
mov	eax, DWORD PTR _pTabList$[ebp]
mov	ecx, DWORD PTR [eax+edx+24]
mov	DWORD PTR _pTab$4[ebp], ecx
cmp	DWORD PTR _iCol$6[ebp], 0
jge	SHORT $LN8@generateCo
mov	edx, DWORD PTR _pTab$4[ebp]
movsx	eax, WORD PTR [edx+36]
mov	DWORD PTR _iCol$6[ebp], eax
cmp	DWORD PTR _iCol$6[ebp], 0
jge	SHORT $LN7@generateCo
mov	DWORD PTR _zCol$3[ebp], OFFSET $SG113779
jmp	SHORT $LN6@generateCo
imul	ecx, DWORD PTR _iCol$6[ebp], 24
mov	edx, DWORD PTR _pTab$4[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zCol$3[ebp], ecx
cmp	DWORD PTR _shortNames$[ebp], 0
jne	SHORT $LN5@generateCo
cmp	DWORD PTR _fullNames$[ebp], 0
jne	SHORT $LN5@generateCo
push	OFFSET _sqlite3MallocSize
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+8]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrDup
add	esp, 8
push	eax
push	0
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	SHORT $LN4@generateCo
cmp	DWORD PTR _fullNames$[ebp], 0
je	SHORT $LN3@generateCo
mov	DWORD PTR _zName$2[ebp], 0
mov	eax, DWORD PTR _zCol$3[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$4[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG113786
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zName$2[ebp], eax
push	OFFSET _sqlite3MallocSize
mov	ecx, DWORD PTR _zName$2[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	SHORT $LN4@generateCo
push	-1
mov	ecx, DWORD PTR _zCol$3[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	SHORT $LN15@generateCo
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+8]
mov	DWORD PTR _z$5[ebp], ecx
cmp	DWORD PTR _z$5[ebp], 0
jne	SHORT $LN30@generateCo
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
push	edx
push	OFFSET $SG113792
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR tv216[ebp], eax
jmp	SHORT $LN31@generateCo
mov	ecx, DWORD PTR _z$5[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	DWORD PTR tv216[ebp], eax
mov	eax, DWORD PTR tv216[ebp]
mov	DWORD PTR _z$5[ebp], eax
push	OFFSET _sqlite3MallocSize
mov	ecx, DWORD PTR _z$5[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	$LN19@generateCo
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_generateColumnTypes
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_generateColumnTypes PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pTabList$[ebp]
mov	DWORD PTR _sNC$[ebp+4], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNC$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@generateCo
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN4@generateCo
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _p$2[ebp], ecx
push	0
mov	edx, DWORD PTR _p$2[ebp]
push	edx
lea	eax, DWORD PTR _sNC$[ebp]
push	eax
call	_columnTypeImpl
add	esp, 12					
mov	DWORD PTR _zType$1[ebp], eax
push	-1
mov	ecx, DWORD PTR _zType$1[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	SHORT $LN2@generateCo
mov	esp, ebp
pop	ebp
ret	0
ENDP
_columnTypeImpl PROC
push	ebp
mov	ebp, esp
sub	esp, 108				
mov	DWORD PTR _zType$[ebp], 0
mov	BYTE PTR _estWidth$[ebp], 1
cmp	DWORD PTR _pExpr$[ebp], 0
je	SHORT $LN21@columnType
mov	eax, DWORD PTR _pNC$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN22@columnType
xor	eax, eax
jmp	$LN23@columnType
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR tv69[ebp], dl
cmp	BYTE PTR tv69[ebp], 119			
je	$LN2@columnType
cmp	BYTE PTR tv69[ebp], 154			
je	SHORT $LN18@columnType
cmp	BYTE PTR tv69[ebp], 156			
je	SHORT $LN18@columnType
jmp	$LN19@columnType
mov	DWORD PTR _pTab$8[ebp], 0
mov	DWORD PTR _pS$6[ebp], 0
mov	eax, DWORD PTR _pExpr$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	DWORD PTR _iCol$9[ebp], ecx
cmp	DWORD PTR _pNC$[ebp], 0
je	SHORT $LN16@columnType
cmp	DWORD PTR _pTab$8[ebp], 0
jne	SHORT $LN16@columnType
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pTabList$7[ebp], eax
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN15@columnType
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pTabList$7[ebp]
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN13@columnType
imul	ecx, DWORD PTR _j$[ebp], 80
mov	edx, DWORD PTR _pTabList$7[ebp]
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [edx+ecx+56]
cmp	ecx, DWORD PTR [eax+28]
je	SHORT $LN13@columnType
jmp	SHORT $LN14@columnType
mov	edx, DWORD PTR _pTabList$7[ebp]
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN12@columnType
imul	ecx, DWORD PTR _j$[ebp], 80
mov	edx, DWORD PTR _pTabList$7[ebp]
mov	eax, DWORD PTR [edx+ecx+24]
mov	DWORD PTR _pTab$8[ebp], eax
imul	ecx, DWORD PTR _j$[ebp], 80
mov	edx, DWORD PTR _pTabList$7[ebp]
mov	eax, DWORD PTR [edx+ecx+28]
mov	DWORD PTR _pS$6[ebp], eax
jmp	SHORT $LN11@columnType
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pNC$[ebp], edx
jmp	SHORT $LN17@columnType
cmp	DWORD PTR _pTab$8[ebp], 0
jne	SHORT $LN10@columnType
jmp	$LN19@columnType
cmp	DWORD PTR _pS$6[ebp], 0
je	SHORT $LN9@columnType
cmp	DWORD PTR _iCol$9[ebp], 0
jl	SHORT $LN8@columnType
mov	eax, DWORD PTR _pS$6[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _iCol$9[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN8@columnType
mov	eax, DWORD PTR _pS$6[ebp]
mov	ecx, DWORD PTR [eax]
imul	edx, DWORD PTR _iCol$9[ebp], 24
mov	eax, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _p$4[ebp], ecx
mov	edx, DWORD PTR _pS$6[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _sNC$2[ebp+4], eax
mov	ecx, DWORD PTR _pNC$[ebp]
mov	DWORD PTR _sNC$2[ebp+16], ecx
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _sNC$2[ebp], eax
lea	ecx, DWORD PTR _estWidth$[ebp]
push	ecx
mov	edx, DWORD PTR _p$4[ebp]
push	edx
lea	eax, DWORD PTR _sNC$2[ebp]
push	eax
call	_columnTypeImpl
add	esp, 12					
mov	DWORD PTR _zType$[ebp], eax
jmp	SHORT $LN7@columnType
mov	ecx, DWORD PTR _pTab$8[ebp]
cmp	DWORD PTR [ecx+68], 0
je	SHORT $LN7@columnType
cmp	DWORD PTR _iCol$9[ebp], 0
jge	SHORT $LN5@columnType
mov	edx, DWORD PTR _pTab$8[ebp]
movsx	eax, WORD PTR [edx+36]
mov	DWORD PTR _iCol$9[ebp], eax
cmp	DWORD PTR _iCol$9[ebp], 0
jge	SHORT $LN4@columnType
mov	DWORD PTR _zType$[ebp], OFFSET $SG113715
jmp	SHORT $LN7@columnType
imul	ecx, DWORD PTR _iCol$9[ebp], 24
mov	edx, DWORD PTR _pTab$8[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+12]
mov	DWORD PTR _zType$[ebp], ecx
imul	edx, DWORD PTR _iCol$9[ebp], 24
mov	eax, DWORD PTR _pTab$8[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	dl, BYTE PTR [ecx+edx+22]
mov	BYTE PTR _estWidth$[ebp], dl
jmp	SHORT $LN19@columnType
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pS$5[ebp], ecx
mov	edx, DWORD PTR _pS$5[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR [eax+4]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _p$3[ebp], ecx
mov	edx, DWORD PTR _pS$5[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _sNC$1[ebp+4], eax
mov	ecx, DWORD PTR _pNC$[ebp]
mov	DWORD PTR _sNC$1[ebp+16], ecx
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _sNC$1[ebp], eax
lea	ecx, DWORD PTR _estWidth$[ebp]
push	ecx
mov	edx, DWORD PTR _p$3[ebp]
push	edx
lea	eax, DWORD PTR _sNC$1[ebp]
push	eax
call	_columnTypeImpl
add	esp, 12					
mov	DWORD PTR _zType$[ebp], eax
cmp	DWORD PTR _pEstWidth$[ebp], 0
je	SHORT $LN1@columnType
mov	ecx, DWORD PTR _pEstWidth$[ebp]
mov	dl, BYTE PTR _estWidth$[ebp]
mov	BYTE PTR [ecx], dl
mov	eax, DWORD PTR _zType$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_generateSortTail PROC
push	ebp
mov	ebp, esp
sub	esp, 72					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrBreak$[ebp], eax
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrContinue$[ebp], eax
mov	DWORD PTR _addrOnce$[ebp], 0
mov	DWORD PTR _pseudoTab$[ebp], 0
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pOrderBy$[ebp], edx
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _eDest$[ebp], ecx
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _iParm$[ebp], eax
mov	ecx, DWORD PTR _pSort$[ebp]
cmp	DWORD PTR [ecx+16], 0
je	SHORT $LN23@generateSo
mov	edx, DWORD PTR _pSort$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrBreak$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeOnce
add	esp, 4
mov	DWORD PTR _addrOnce$[ebp], eax
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _iTab$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRow$[ebp], eax
cmp	DWORD PTR _eDest$[ebp], 9
je	SHORT $LN21@generateSo
cmp	DWORD PTR _eDest$[ebp], 13		
jne	SHORT $LN22@generateSo
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _pseudoTab$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _nColumn$[ebp]
push	eax
mov	ecx, DWORD PTR _regRow$[ebp]
push	ecx
mov	edx, DWORD PTR _pseudoTab$[ebp]
push	edx
push	57					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _regRowid$[ebp], 0
jmp	SHORT $LN20@generateSo
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRowid$[ebp], eax
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [edx]
sub	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _nKey$[ebp], ecx
mov	edx, DWORD PTR _pSort$[ebp]
movzx	eax, BYTE PTR [edx+24]
and	eax, 1
je	$LN19@generateSo
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv147[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv147[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv147[ebp]
mov	DWORD PTR _regSortOut$2[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _ptab2$1[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
mov	edx, DWORD PTR _nKey$[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _regSortOut$2[ebp]
push	eax
mov	ecx, DWORD PTR _ptab2$1[ebp]
push	ecx
push	57					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _addrOnce$[ebp], 0
je	SHORT $LN18@generateSo
mov	eax, DWORD PTR _addrOnce$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _addrBreak$[ebp]
push	edx
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
push	103					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
add	eax, 1
mov	DWORD PTR _addr$[ebp], eax
mov	edx, DWORD PTR _addrContinue$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_codeOffset
add	esp, 12					
mov	eax, DWORD PTR _regSortOut$2[ebp]
push	eax
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
push	95					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regRow$[ebp]
push	eax
mov	ecx, DWORD PTR _nKey$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _ptab2$1[ebp]
push	edx
push	46					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	32					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	SHORT $LN17@generateSo
cmp	DWORD PTR _addrOnce$[ebp], 0
je	SHORT $LN16@generateSo
mov	edx, DWORD PTR _addrOnce$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _addrBreak$[ebp]
push	ecx
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
push	104					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
add	eax, 1
mov	DWORD PTR _addr$[ebp], eax
mov	ecx, DWORD PTR _addrContinue$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_codeOffset
add	esp, 12					
mov	edx, DWORD PTR _regRow$[ebp]
push	edx
mov	eax, DWORD PTR _nKey$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _eDest$[ebp]
mov	DWORD PTR tv196[ebp], eax
mov	ecx, DWORD PTR tv196[ebp]
sub	ecx, 10					
mov	DWORD PTR tv196[ebp], ecx
cmp	DWORD PTR tv196[ebp], 4
ja	$LN10@generateSo
mov	edx, DWORD PTR tv196[ebp]
jmp	DWORD PTR $LN26@generateSo[edx*4]
mov	eax, DWORD PTR _regRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _iParm$[ebp]
push	ecx
push	69					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _regRow$[ebp]
push	ecx
mov	edx, DWORD PTR _iParm$[ebp]
push	edx
push	70					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN14@generateSo
push	1
mov	edx, DWORD PTR _pDest$[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _regRowid$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _regRow$[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	eax, DWORD PTR _regRow$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	edx, DWORD PTR _regRowid$[ebp]
push	edx
mov	eax, DWORD PTR _iParm$[ebp]
push	eax
push	107					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN14@generateSo
push	1
mov	edx, DWORD PTR _iParm$[ebp]
push	edx
mov	eax, DWORD PTR _regRow$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeMove
add	esp, 16					
jmp	$LN14@generateSo
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN9@generateSo
mov	edx, DWORD PTR _i$3[ebp]
add	edx, 1
mov	DWORD PTR _i$3[ebp], edx
mov	eax, DWORD PTR _i$3[ebp]
cmp	eax, DWORD PTR _nColumn$[ebp]
jge	SHORT $LN7@generateSo
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+8]
add	edx, DWORD PTR _i$3[ebp]
push	edx
mov	eax, DWORD PTR _i$3[ebp]
push	eax
mov	ecx, DWORD PTR _pseudoTab$[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _i$3[ebp], 0
jne	SHORT $LN6@generateSo
push	32					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	SHORT $LN8@generateSo
cmp	DWORD PTR _eDest$[ebp], 9
jne	SHORT $LN5@generateSo
mov	ecx, DWORD PTR _nColumn$[ebp]
push	ecx
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _nColumn$[ebp]
push	edx
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
jmp	SHORT $LN14@generateSo
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
push	22					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _regRow$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _regRowid$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _addrContinue$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _pSort$[ebp]
movzx	ecx, BYTE PTR [eax+24]
and	ecx, 1
je	SHORT $LN3@generateSo
mov	edx, DWORD PTR _addr$[ebp]
push	edx
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
push	5
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN2@generateSo
mov	edx, DWORD PTR _addr$[ebp]
push	edx
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
push	9
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pSort$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN1@generateSo
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
push	18					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _addrBreak$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN11@generateSo
DD	$LN12@generateSo
DD	$LN13@generateSo
DD	$LN10@generateSo
DD	$LN13@generateSo
ENDP
_explainComposite PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+450]
cmp	ecx, 2
jne	SHORT $LN2@explainCom
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$1[ebp], eax
cmp	DWORD PTR _bUseTmp$[ebp], 0
je	SHORT $LN4@explainCom
mov	DWORD PTR tv73[ebp], OFFSET $SG113613
jmp	SHORT $LN5@explainCom
mov	DWORD PTR tv73[ebp], OFFSET $SG113614
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
call	_selectOpName
add	esp, 4
push	eax
mov	edx, DWORD PTR tv73[ebp]
push	edx
mov	eax, DWORD PTR _iSub2$[ebp]
push	eax
mov	ecx, DWORD PTR _iSub1$[ebp]
push	ecx
push	OFFSET $SG113615
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3MPrintf
add	esp, 24					
mov	DWORD PTR _zMsg$2[ebp], eax
push	-1
mov	ecx, DWORD PTR _zMsg$2[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+464]
push	eax
push	157					
mov	ecx, DWORD PTR _v$1[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_explainTempTable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+450]
cmp	ecx, 2
jne	SHORT $LN2@explainTem
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$1[ebp], eax
mov	ecx, DWORD PTR _zUsage$[ebp]
push	ecx
push	OFFSET $SG113596
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zMsg$2[ebp], eax
push	-1
mov	ecx, DWORD PTR _zMsg$2[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+464]
push	eax
push	157					
mov	ecx, DWORD PTR _v$1[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_selectOpName PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR tv64[ebp], eax
cmp	DWORD PTR tv64[ebp], 116		
je	SHORT $LN4@selectOpNa
cmp	DWORD PTR tv64[ebp], 117		
je	SHORT $LN2@selectOpNa
cmp	DWORD PTR tv64[ebp], 118		
je	SHORT $LN3@selectOpNa
jmp	SHORT $LN1@selectOpNa
mov	DWORD PTR _z$[ebp], OFFSET $SG113580
jmp	SHORT $LN5@selectOpNa
mov	DWORD PTR _z$[ebp], OFFSET $SG113582
jmp	SHORT $LN5@selectOpNa
mov	DWORD PTR _z$[ebp], OFFSET $SG113584
jmp	SHORT $LN5@selectOpNa
mov	DWORD PTR _z$[ebp], OFFSET $SG113586
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_selectInnerLoop PROC
push	ebp
mov	ebp, esp
sub	esp, 108				
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pDest$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _eDest$[ebp], eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _iParm$[ebp], edx
cmp	DWORD PTR _pDistinct$[ebp], 0
je	SHORT $LN55@selectInne
mov	eax, DWORD PTR _pDistinct$[ebp]
movzx	ecx, BYTE PTR [eax+1]
mov	DWORD PTR tv71[ebp], ecx
jmp	SHORT $LN56@selectInne
mov	DWORD PTR tv71[ebp], 0
mov	edx, DWORD PTR tv71[ebp]
mov	DWORD PTR _hasDistinct$[ebp], edx
cmp	DWORD PTR _pSort$[ebp], 0
je	SHORT $LN52@selectInne
mov	eax, DWORD PTR _pSort$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN52@selectInne
mov	DWORD PTR _pSort$[ebp], 0
cmp	DWORD PTR _pSort$[ebp], 0
jne	SHORT $LN51@selectInne
cmp	DWORD PTR _hasDistinct$[ebp], 0
jne	SHORT $LN51@selectInne
mov	ecx, DWORD PTR _iContinue$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_codeOffset
add	esp, 12					
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _nResultCol$[ebp], eax
mov	ecx, DWORD PTR _pDest$[ebp]
cmp	DWORD PTR [ecx+8], 0
jne	SHORT $LN50@selectInne
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	ecx, DWORD PTR _pDest$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, DWORD PTR _nResultCol$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
jmp	SHORT $LN49@selectInne
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+8]
add	eax, DWORD PTR _nResultCol$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	eax, DWORD PTR [ecx+72]
jle	SHORT $LN49@selectInne
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, DWORD PTR _nResultCol$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR _nResultCol$[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _regResult$[ebp], edx
cmp	DWORD PTR _srcTab$[ebp], 0
jl	SHORT $LN47@selectInne
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN46@selectInne
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nResultCol$[ebp]
jge	SHORT $LN44@selectInne
mov	edx, DWORD PTR _regResult$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _srcTab$[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN45@selectInne
jmp	SHORT $LN43@selectInne
cmp	DWORD PTR _eDest$[ebp], 3
je	SHORT $LN43@selectInne
cmp	DWORD PTR _eDest$[ebp], 9
je	SHORT $LN57@selectInne
cmp	DWORD PTR _eDest$[ebp], 13		
je	SHORT $LN57@selectInne
mov	DWORD PTR tv144[ebp], 0
jmp	SHORT $LN58@selectInne
mov	DWORD PTR tv144[ebp], 1
movzx	eax, BYTE PTR tv144[ebp]
push	eax
mov	ecx, DWORD PTR _regResult$[ebp]
push	ecx
mov	edx, DWORD PTR _pEList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeExprList
add	esp, 16					
cmp	DWORD PTR _hasDistinct$[ebp], 0
je	$LN41@selectInne
mov	ecx, DWORD PTR _pDistinct$[ebp]
mov	dl, BYTE PTR [ecx+1]
mov	BYTE PTR tv152[ebp], dl
cmp	BYTE PTR tv152[ebp], 1
je	$LN32@selectInne
cmp	BYTE PTR tv152[ebp], 2
je	SHORT $LN38@selectInne
jmp	$LN31@selectInne
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _regPrev$13[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, DWORD PTR _nResultCol$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR _pDistinct$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeToNoop
add	esp, 8
mov	edx, DWORD PTR _pDistinct$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	DWORD PTR _pOp$12[ebp], eax
mov	edx, DWORD PTR _pOp$12[ebp]
mov	BYTE PTR [edx], 28			
mov	eax, DWORD PTR _pOp$12[ebp]
mov	DWORD PTR [eax+4], 1
mov	ecx, DWORD PTR _pOp$12[ebp]
mov	edx, DWORD PTR _regPrev$13[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, DWORD PTR _nResultCol$[ebp]
mov	DWORD PTR _iJump$3[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN37@selectInne
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nResultCol$[ebp]
jge	$LN35@selectInne
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$2[ebp], eax
mov	edx, DWORD PTR _nResultCol$[ebp]
sub	edx, 1
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN34@selectInne
mov	eax, DWORD PTR _regPrev$13[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _iJump$3[ebp]
push	ecx
mov	edx, DWORD PTR _regResult$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
push	78					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN33@selectInne
mov	ecx, DWORD PTR _regPrev$13[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _iContinue$[ebp]
push	edx
mov	eax, DWORD PTR _regResult$[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
push	79					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	-4					
mov	edx, DWORD PTR _pColl$2[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	128					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN36@selectInne
mov	edx, DWORD PTR _nResultCol$[ebp]
sub	edx, 1
push	edx
mov	eax, DWORD PTR _regPrev$13[ebp]
push	eax
mov	ecx, DWORD PTR _regResult$[ebp]
push	ecx
push	33					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN39@selectInne
mov	eax, DWORD PTR _pDistinct$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeToNoop
add	esp, 8
jmp	SHORT $LN39@selectInne
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
mov	ecx, DWORD PTR _nResultCol$[ebp]
push	ecx
mov	edx, DWORD PTR _iContinue$[ebp]
push	edx
mov	eax, DWORD PTR _pDistinct$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeDistinct
add	esp, 20					
cmp	DWORD PTR _pSort$[ebp], 0
jne	SHORT $LN41@selectInne
mov	eax, DWORD PTR _iContinue$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_codeOffset
add	esp, 12					
mov	ecx, DWORD PTR _eDest$[ebp]
mov	DWORD PTR tv226[ebp], ecx
mov	edx, DWORD PTR tv226[ebp]
sub	edx, 1
mov	DWORD PTR tv226[ebp], edx
cmp	DWORD PTR tv226[ebp], 13		
ja	$LN28@selectInne
mov	eax, DWORD PTR tv226[ebp]
jmp	DWORD PTR $LN59@selectInne[eax*4]
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$11[ebp], eax
mov	edx, DWORD PTR _r1$11[ebp]
push	edx
mov	eax, DWORD PTR _nResultCol$[ebp]
push	eax
mov	ecx, DWORD PTR _regResult$[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _r1$11[ebp]
push	eax
mov	ecx, DWORD PTR _iParm$[ebp]
push	ecx
push	107					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _r1$11[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN28@selectInne
mov	edx, DWORD PTR _nResultCol$[ebp]
push	edx
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
mov	ecx, DWORD PTR _iParm$[ebp]
push	ecx
push	108					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	$LN28@selectInne
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$16[ebp], eax
mov	ecx, DWORD PTR _r1$16[ebp]
push	ecx
mov	edx, DWORD PTR _nResultCol$[ebp]
push	edx
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _eDest$[ebp], 6
jne	SHORT $LN24@selectInne
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 4
mov	DWORD PTR _addr$1[ebp], eax
push	0
mov	eax, DWORD PTR _r1$16[ebp]
push	eax
mov	ecx, DWORD PTR _addr$1[ebp]
push	ecx
mov	edx, DWORD PTR _iParm$[ebp]
add	edx, 1
push	edx
push	66					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	ecx, DWORD PTR _r1$16[ebp]
push	ecx
mov	edx, DWORD PTR _iParm$[ebp]
add	edx, 1
push	edx
push	107					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _pSort$[ebp], 0
je	SHORT $LN23@selectInne
mov	ecx, DWORD PTR _r1$16[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pSort$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_pushOntoSorter
add	esp, 16					
jmp	SHORT $LN22@selectInne
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r2$10[ebp], eax
mov	eax, DWORD PTR _r2$10[ebp]
push	eax
mov	ecx, DWORD PTR _iParm$[ebp]
push	ecx
push	69					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _r2$10[ebp]
push	eax
mov	ecx, DWORD PTR _r1$16[ebp]
push	ecx
mov	edx, DWORD PTR _iParm$[ebp]
push	edx
push	70					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	edx, DWORD PTR _r2$10[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _r1$16[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN28@selectInne
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, BYTE PTR [eax+1]
push	ecx
mov	edx, 24					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
call	_sqlite3CompareAffinity
add	esp, 8
mov	ecx, DWORD PTR _pDest$[ebp]
mov	BYTE PTR [ecx+1], al
cmp	DWORD PTR _pSort$[ebp], 0
je	SHORT $LN20@selectInne
mov	edx, DWORD PTR _regResult$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pSort$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_pushOntoSorter
add	esp, 16					
jmp	SHORT $LN19@selectInne
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$9[ebp], eax
push	1
mov	ecx, DWORD PTR _pDest$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _r1$9[ebp]
push	edx
push	1
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	edx, DWORD PTR _regResult$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	ecx, DWORD PTR _r1$9[ebp]
push	ecx
mov	edx, DWORD PTR _iParm$[ebp]
push	edx
push	107					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _r1$9[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN28@selectInne
mov	eax, DWORD PTR _iParm$[ebp]
push	eax
push	1
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN28@selectInne
cmp	DWORD PTR _pSort$[ebp], 0
je	SHORT $LN16@selectInne
mov	edx, DWORD PTR _regResult$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pSort$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_pushOntoSorter
add	esp, 16					
jmp	SHORT $LN15@selectInne
push	1
mov	eax, DWORD PTR _iParm$[ebp]
push	eax
mov	ecx, DWORD PTR _regResult$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeMove
add	esp, 16					
jmp	$LN28@selectInne
cmp	DWORD PTR _pSort$[ebp], 0
je	SHORT $LN13@selectInne
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$8[ebp], eax
mov	ecx, DWORD PTR _r1$8[ebp]
push	ecx
mov	edx, DWORD PTR _nResultCol$[ebp]
push	edx
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _r1$8[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pSort$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_pushOntoSorter
add	esp, 16					
mov	eax, DWORD PTR _r1$8[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	SHORT $LN12@selectInne
cmp	DWORD PTR _eDest$[ebp], 13		
jne	SHORT $LN11@selectInne
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
push	22					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN12@selectInne
mov	edx, DWORD PTR _nResultCol$[ebp]
push	edx
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _nResultCol$[ebp]
push	edx
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
jmp	$LN28@selectInne
mov	DWORD PTR _addrTest$7[ebp], 0
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pSO$4[ebp], eax
mov	ecx, DWORD PTR _pSO$4[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _nKey$15[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$6[ebp], eax
mov	ecx, DWORD PTR _nKey$15[ebp]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _r2$14[ebp], eax
mov	eax, DWORD PTR _nKey$15[ebp]
mov	ecx, DWORD PTR _r2$14[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _r3$5[ebp], edx
cmp	DWORD PTR _eDest$[ebp], 8
jne	SHORT $LN8@selectInne
mov	eax, DWORD PTR _nResultCol$[ebp]
push	eax
mov	ecx, DWORD PTR _regResult$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _iParm$[ebp]
add	edx, 1
push	edx
push	66					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	DWORD PTR _addrTest$7[ebp], eax
mov	ecx, DWORD PTR _r3$5[ebp]
push	ecx
mov	edx, DWORD PTR _nResultCol$[ebp]
push	edx
mov	eax, DWORD PTR _regResult$[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _eDest$[ebp], 8
jne	SHORT $LN7@selectInne
mov	edx, DWORD PTR _r3$5[ebp]
push	edx
mov	eax, DWORD PTR _iParm$[ebp]
add	eax, 1
push	eax
push	107					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@selectInne
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nKey$15[ebp]
jge	SHORT $LN4@selectInne
mov	edx, DWORD PTR _r2$14[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pSO$4[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, WORD PTR [edx+eax+20]
mov	ecx, DWORD PTR _regResult$[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
push	edx
push	34					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN5@selectInne
mov	ecx, DWORD PTR _r2$14[ebp]
add	ecx, DWORD PTR _nKey$15[ebp]
push	ecx
mov	edx, DWORD PTR _iParm$[ebp]
push	edx
push	68					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _r1$6[ebp]
push	ecx
mov	edx, DWORD PTR _nKey$15[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _r2$14[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _r1$6[ebp]
push	edx
mov	eax, DWORD PTR _iParm$[ebp]
push	eax
push	107					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _addrTest$7[ebp], 0
je	SHORT $LN3@selectInne
mov	edx, DWORD PTR _addrTest$7[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _r1$6[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	eax, DWORD PTR _nKey$15[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _r2$14[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempRange
add	esp, 12					
cmp	DWORD PTR _pSort$[ebp], 0
jne	SHORT $LN53@selectInne
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN53@selectInne
push	-1
mov	ecx, DWORD PTR _iBreak$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	136					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN27@selectInne
DD	$LN26@selectInne
DD	$LN18@selectInne
DD	$LN28@selectInne
DD	$LN25@selectInne
DD	$LN25@selectInne
DD	$LN9@selectInne
DD	$LN9@selectInne
DD	$LN14@selectInne
DD	$LN17@selectInne
DD	$LN21@selectInne
DD	$LN25@selectInne
DD	$LN14@selectInne
DD	$LN25@selectInne
ENDP
_checkForMultiColumnSelectError PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _eDest$[ebp], ecx
cmp	DWORD PTR _nExpr$[ebp], 1
jle	SHORT $LN3@checkForMu
cmp	DWORD PTR _eDest$[ebp], 10		
je	SHORT $LN2@checkForMu
cmp	DWORD PTR _eDest$[ebp], 11		
jne	SHORT $LN3@checkForMu
push	OFFSET $SG113411
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, 1
jmp	SHORT $LN4@checkForMu
jmp	SHORT $LN4@checkForMu
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_codeDistinct PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$[ebp], eax
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _iMem$[ebp]
push	ecx
mov	edx, DWORD PTR _addrRepeat$[ebp]
push	edx
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
push	66					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _iMem$[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
push	107					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_codeOffset PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _iOffset$[ebp], 0
jle	SHORT $LN2@codeOffset
push	-1
mov	eax, DWORD PTR _iOffset$[ebp]
push	eax
push	37					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _iOffset$[ebp]
push	edx
push	135					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$1[ebp], eax
mov	ecx, DWORD PTR _iContinue$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addr$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pushOntoSorter PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pSort$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nExpr$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv69[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv69[ebp]
mov	DWORD PTR _regRecord$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _regBase$[ebp], edx
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _nOBSat$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	ecx, DWORD PTR _nExpr$[ebp]
lea	edx, DWORD PTR [ecx+eax+2]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], edx
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheClear
add	esp, 4
push	0
mov	edx, DWORD PTR _regBase$[ebp]
push	edx
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeExprList
add	esp, 16					
mov	eax, DWORD PTR _regBase$[ebp]
add	eax, DWORD PTR _nExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	68					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	ecx, DWORD PTR _nExpr$[ebp]
mov	edx, DWORD PTR _regBase$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
push	eax
mov	ecx, DWORD PTR _regData$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeMove
add	esp, 16					
mov	eax, DWORD PTR _regRecord$[ebp]
push	eax
mov	ecx, DWORD PTR _nExpr$[ebp]
add	ecx, 2
sub	ecx, DWORD PTR _nOBSat$[ebp]
push	ecx
mov	edx, DWORD PTR _regBase$[ebp]
add	edx, DWORD PTR _nOBSat$[ebp]
push	edx
push	48					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _nOBSat$[ebp], 0
jle	$LN7@pushOntoSo
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _regPrevKey$5[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	edx, DWORD PTR _pSort$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], ecx
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR _nExpr$[ebp]
sub	edx, DWORD PTR [ecx+4]
add	edx, 1
mov	DWORD PTR _nKey$4[ebp], edx
mov	eax, DWORD PTR _regBase$[ebp]
add	eax, DWORD PTR _nExpr$[ebp]
push	eax
push	45					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrFirst$3[ebp], eax
mov	edx, DWORD PTR _pSort$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _regBase$[ebp]
push	ecx
mov	edx, DWORD PTR _regPrevKey$5[ebp]
push	edx
push	41					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeGetOp
add	esp, 8
mov	DWORD PTR _pOp$8[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN6@pushOntoSo
jmp	$LN8@pushOntoSo
mov	ecx, DWORD PTR _nKey$4[ebp]
add	ecx, 1
mov	edx, DWORD PTR _pOp$8[ebp]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR _pOp$8[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pKI$9[ebp], ecx
mov	edx, DWORD PTR _pKI$9[ebp]
movzx	eax, WORD PTR [edx+6]
push	eax
push	0
mov	ecx, DWORD PTR _pKI$9[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_memset
add	esp, 12					
push	-6					
mov	eax, DWORD PTR _pKI$9[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	1
mov	edx, DWORD PTR _nOBSat$[ebp]
push	edx
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_keyInfoFromExprList
add	esp, 16					
mov	ecx, DWORD PTR _pOp$8[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrJmp$7[ebp], eax
mov	eax, DWORD PTR _addrJmp$7[ebp]
add	eax, 1
push	eax
push	0
mov	ecx, DWORD PTR _addrJmp$7[ebp]
add	ecx, 1
push	ecx
push	42					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	ecx, DWORD PTR _pSort$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv199[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv199[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR tv199[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pSort$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	116					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _addrFirst$3[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _regPrevKey$5[ebp]
push	edx
mov	eax, DWORD PTR _regBase$[ebp]
push	eax
push	32					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _addrJmp$7[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _pSort$[ebp]
movzx	edx, BYTE PTR [ecx+24]
and	edx, 1
je	SHORT $LN5@pushOntoSo
mov	DWORD PTR _op$[ebp], 106		
jmp	SHORT $LN4@pushOntoSo
mov	DWORD PTR _op$[ebp], 107		
mov	eax, DWORD PTR _regRecord$[ebp]
push	eax
mov	ecx, DWORD PTR _pSort$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [edx+8], 0
je	$LN8@pushOntoSo
mov	eax, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN2@pushOntoSo
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, 1
mov	DWORD PTR _iLimit$6[ebp], edx
jmp	SHORT $LN1@pushOntoSo
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _iLimit$6[ebp], ecx
mov	edx, DWORD PTR _iLimit$6[ebp]
push	edx
push	136					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr1$2[ebp], eax
push	-1
mov	ecx, DWORD PTR _iLimit$6[ebp]
push	ecx
push	37					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	DWORD PTR _addr2$1[ebp], eax
mov	ecx, DWORD PTR _addr1$2[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	102					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _pSort$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	74					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _addr2$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_keyInfoFromExprList PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _nExpr$[ebp], eax
push	1
mov	ecx, DWORD PTR _nExpr$[ebp]
add	ecx, DWORD PTR _nExtra$[ebp]
sub	ecx, DWORD PTR _iStart$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3KeyInfoAlloc
add	esp, 12					
mov	DWORD PTR _pInfo$[ebp], eax
cmp	DWORD PTR _pInfo$[ebp], 0
je	SHORT $LN5@keyInfoFro
mov	eax, DWORD PTR _iStart$[ebp]
mov	DWORD PTR _i$[ebp], eax
imul	ecx, DWORD PTR _iStart$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$[ebp], ecx
jmp	SHORT $LN4@keyInfoFro
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pItem$[ebp]
add	ecx, 24					
mov	DWORD PTR _pItem$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nExpr$[ebp]
jge	SHORT $LN5@keyInfoFro
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$1[ebp], eax
cmp	DWORD PTR _pColl$1[ebp], 0
jne	SHORT $LN1@keyInfoFro
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pColl$1[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
sub	edx, DWORD PTR _iStart$[ebp]
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR _pColl$1[ebp]
mov	DWORD PTR [eax+edx*4+20], ecx
mov	edx, DWORD PTR _i$[ebp]
sub	edx, DWORD PTR _iStart$[ebp]
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	eax, DWORD PTR _pItem$[ebp]
mov	al, BYTE PTR [eax+12]
mov	BYTE PTR [ecx+edx], al
jmp	SHORT $LN3@keyInfoFro
mov	eax, DWORD PTR _pInfo$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqliteProcessJoin PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pSrc$[ebp], ecx
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pSrc$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _pLeft$[ebp], edx
mov	eax, 80					
shl	eax, 0
add	eax, DWORD PTR _pLeft$[ebp]
mov	DWORD PTR _pRight$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN21@sqliteProc
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pRight$[ebp]
add	edx, 80					
mov	DWORD PTR _pRight$[ebp], edx
mov	eax, DWORD PTR _pLeft$[ebp]
add	eax, 80					
mov	DWORD PTR _pLeft$[ebp], eax
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
cmp	DWORD PTR _i$[ebp], edx
jge	$LN19@sqliteProc
mov	eax, DWORD PTR _pLeft$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pLeftTab$6[ebp], ecx
mov	edx, DWORD PTR _pRight$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pRightTab$11[ebp], eax
cmp	DWORD PTR _pLeftTab$6[ebp], 0
je	SHORT $LN17@sqliteProc
cmp	DWORD PTR _pRightTab$11[ebp], 0
jne	SHORT $LN18@sqliteProc
jmp	SHORT $LN20@sqliteProc
mov	ecx, DWORD PTR _pRight$[ebp]
movzx	edx, BYTE PTR [ecx+36]
and	edx, 32					
je	SHORT $LN24@sqliteProc
mov	DWORD PTR tv84[ebp], 1
jmp	SHORT $LN25@sqliteProc
mov	DWORD PTR tv84[ebp], 0
mov	eax, DWORD PTR tv84[ebp]
mov	DWORD PTR _isOuter$9[ebp], eax
mov	ecx, DWORD PTR _pRight$[ebp]
movzx	edx, BYTE PTR [ecx+36]
and	edx, 4
je	$LN16@sqliteProc
mov	eax, DWORD PTR _pRight$[ebp]
cmp	DWORD PTR [eax+52], 0
jne	SHORT $LN14@sqliteProc
mov	ecx, DWORD PTR _pRight$[ebp]
cmp	DWORD PTR [ecx+56], 0
je	SHORT $LN15@sqliteProc
push	0
push	OFFSET $SG113310
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	$LN22@sqliteProc
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN13@sqliteProc
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _pRightTab$11[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _j$[ebp], edx
jge	SHORT $LN16@sqliteProc
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pRightTab$11[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zName$5[ebp], eax
lea	ecx, DWORD PTR _iLeftCol$4[ebp]
push	ecx
lea	edx, DWORD PTR _iLeft$3[ebp]
push	edx
mov	eax, DWORD PTR _zName$5[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
call	_tableAndColumnIndex
add	esp, 20					
test	eax, eax
je	SHORT $LN10@sqliteProc
mov	eax, DWORD PTR _p$[ebp]
add	eax, 36					
push	eax
mov	ecx, DWORD PTR _isOuter$9[ebp]
push	ecx
mov	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _iLeftCol$4[ebp]
push	ecx
mov	edx, DWORD PTR _iLeft$3[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_addWhereTerm
add	esp, 32					
jmp	SHORT $LN12@sqliteProc
mov	edx, DWORD PTR _pRight$[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN9@sqliteProc
mov	eax, DWORD PTR _pRight$[ebp]
cmp	DWORD PTR [eax+56], 0
je	SHORT $LN9@sqliteProc
push	OFFSET $SG113319
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, 1
jmp	$LN22@sqliteProc
mov	edx, DWORD PTR _pRight$[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN8@sqliteProc
cmp	DWORD PTR _isOuter$9[ebp], 0
je	SHORT $LN7@sqliteProc
mov	eax, DWORD PTR _pRight$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pRight$[ebp]
mov	eax, DWORD PTR [edx+52]
push	eax
call	_setJoinExpr
add	esp, 8
mov	ecx, DWORD PTR _pRight$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprAnd
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pRight$[ebp]
mov	DWORD PTR [edx+52], 0
mov	eax, DWORD PTR _pRight$[ebp]
cmp	DWORD PTR [eax+56], 0
je	$LN6@sqliteProc
mov	ecx, DWORD PTR _pRight$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pList$8[ebp], edx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN5@sqliteProc
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _pList$8[ebp]
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR [ecx+4]
jge	$LN6@sqliteProc
mov	eax, DWORD PTR _pList$8[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR [ecx+edx*8]
mov	DWORD PTR _zName$10[ebp], eax
mov	ecx, DWORD PTR _zName$10[ebp]
push	ecx
mov	edx, DWORD PTR _pRightTab$11[ebp]
push	edx
call	_columnIndex
add	esp, 8
mov	DWORD PTR _iRightCol$7[ebp], eax
cmp	DWORD PTR _iRightCol$7[ebp], 0
jl	SHORT $LN1@sqliteProc
lea	eax, DWORD PTR _iLeftCol$2[ebp]
push	eax
lea	ecx, DWORD PTR _iLeft$1[ebp]
push	ecx
mov	edx, DWORD PTR _zName$10[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
call	_tableAndColumnIndex
add	esp, 20					
test	eax, eax
jne	SHORT $LN2@sqliteProc
mov	edx, DWORD PTR _zName$10[ebp]
push	edx
push	OFFSET $SG113333
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	SHORT $LN22@sqliteProc
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 36					
push	ecx
mov	edx, DWORD PTR _isOuter$9[ebp]
push	edx
mov	eax, DWORD PTR _iRightCol$7[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _iLeftCol$2[ebp]
push	edx
mov	eax, DWORD PTR _iLeft$1[ebp]
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_addWhereTerm
add	esp, 32					
jmp	$LN4@sqliteProc
jmp	$LN20@sqliteProc
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setJoinExpr PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@setJoinExp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR _iTable$[ebp]
mov	WORD PTR [eax+36], cx
mov	edx, DWORD PTR _iTable$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_setJoinExpr
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN2@setJoinExp
pop	ebp
ret	0
ENDP
_addWhereTerm PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _iColLeft$[ebp]
push	edx
mov	eax, DWORD PTR _iLeft$[ebp]
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CreateColumnExpr
add	esp, 16					
mov	DWORD PTR _pE1$[ebp], eax
mov	eax, DWORD PTR _iColRight$[ebp]
push	eax
mov	ecx, DWORD PTR _iRight$[ebp]
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3CreateColumnExpr
add	esp, 16					
mov	DWORD PTR _pE2$[ebp], eax
push	0
mov	ecx, DWORD PTR _pE2$[ebp]
push	ecx
mov	edx, DWORD PTR _pE1$[ebp]
push	edx
push	79					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pEq$[ebp], eax
cmp	DWORD PTR _pEq$[ebp], 0
je	SHORT $LN1@addWhereTe
cmp	DWORD PTR _isOuterJoin$[ebp], 0
je	SHORT $LN1@addWhereTe
mov	ecx, DWORD PTR _pEq$[ebp]
mov	edx, DWORD PTR [ecx+4]
or	edx, 1
mov	eax, DWORD PTR _pEq$[ebp]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _pEq$[ebp]
mov	edx, DWORD PTR _pE2$[ebp]
mov	ax, WORD PTR [edx+28]
mov	WORD PTR [ecx+36], ax
mov	ecx, DWORD PTR _pEq$[ebp]
push	ecx
mov	edx, DWORD PTR _ppWhere$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprAnd
add	esp, 12					
mov	edx, DWORD PTR _ppWhere$[ebp]
mov	DWORD PTR [edx], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_tableAndColumnIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@tableAndCo
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _N$[ebp]
jge	SHORT $LN3@tableAndCo
mov	edx, DWORD PTR _zCol$[ebp]
push	edx
imul	eax, DWORD PTR _i$[ebp], 80
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+eax+24]
push	edx
call	_columnIndex
add	esp, 8
mov	DWORD PTR _iCol$[ebp], eax
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN2@tableAndCo
cmp	DWORD PTR _piTab$[ebp], 0
je	SHORT $LN1@tableAndCo
mov	eax, DWORD PTR _piTab$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _piCol$[ebp]
mov	eax, DWORD PTR _iCol$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, 1
jmp	SHORT $LN6@tableAndCo
jmp	SHORT $LN4@tableAndCo
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_columnIndex PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@columnInde
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN2@columnInde
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@columnInde
mov	eax, DWORD PTR _i$[ebp]
jmp	SHORT $LN5@columnInde
jmp	SHORT $LN3@columnInde
or	eax, -1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findRightmost PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+56], 0
je	SHORT $LN1@findRightm
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN2@findRightm
mov	eax, DWORD PTR _p$[ebp]
pop	ebp
ret	0
ENDP
_clearSelect PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SrcListDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3WithDelete
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3Prepare16 PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _zTail8$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _ppStmt$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SafetyCheckOk
add	esp, 4
test	eax, eax
jne	SHORT $LN8@sqlite3Pre
push	100531					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN9@sqlite3Pre
cmp	DWORD PTR _nBytes$[ebp], 0
jl	SHORT $LN7@sqlite3Pre
mov	edx, DWORD PTR _zSql$[ebp]
mov	DWORD PTR _z$2[ebp], edx
mov	DWORD PTR _sz$3[ebp], 0
jmp	SHORT $LN6@sqlite3Pre
mov	eax, DWORD PTR _sz$3[ebp]
add	eax, 2
mov	DWORD PTR _sz$3[ebp], eax
mov	ecx, DWORD PTR _sz$3[ebp]
cmp	ecx, DWORD PTR _nBytes$[ebp]
jge	SHORT $LN4@sqlite3Pre
mov	edx, DWORD PTR _z$2[ebp]
add	edx, DWORD PTR _sz$3[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
jne	SHORT $LN3@sqlite3Pre
mov	ecx, DWORD PTR _z$2[ebp]
add	ecx, DWORD PTR _sz$3[ebp]
movsx	edx, BYTE PTR [ecx+1]
test	edx, edx
je	SHORT $LN4@sqlite3Pre
jmp	SHORT $LN5@sqlite3Pre
mov	eax, DWORD PTR _sz$3[ebp]
mov	DWORD PTR _nBytes$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
push	2
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Utf16to8
add	esp, 16					
mov	DWORD PTR _zSql8$[ebp], eax
cmp	DWORD PTR _zSql8$[ebp], 0
je	SHORT $LN2@sqlite3Pre
lea	eax, DWORD PTR _zTail8$[ebp]
push	eax
mov	ecx, DWORD PTR _ppStmt$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _saveSqlFlag$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _zSql8$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3LockAndPrepare
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _zTail8$[ebp], 0
je	SHORT $LN1@sqlite3Pre
cmp	DWORD PTR _pzTail$[ebp], 0
je	SHORT $LN1@sqlite3Pre
mov	edx, DWORD PTR _zTail8$[ebp]
sub	edx, DWORD PTR _zSql8$[ebp]
push	edx
mov	eax, DWORD PTR _zSql8$[ebp]
push	eax
call	_sqlite3Utf8CharLen
add	esp, 8
mov	DWORD PTR _chars_parsed$1[ebp], eax
mov	ecx, DWORD PTR _chars_parsed$1[ebp]
push	ecx
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
call	_sqlite3Utf16ByteLen
add	esp, 8
add	eax, DWORD PTR _zSql$[ebp]
mov	ecx, DWORD PTR _pzTail$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _zSql8$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LockAndPrepare PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _ppStmt$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SafetyCheckOk
add	esp, 4
test	eax, eax
jne	SHORT $LN2@sqlite3Loc
push	100422					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN3@sqlite3Loc
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	edx, DWORD PTR _pzTail$[ebp]
push	edx
mov	eax, DWORD PTR _ppStmt$[ebp]
push	eax
mov	ecx, DWORD PTR _pOld$[ebp]
push	ecx
mov	edx, DWORD PTR _saveSqlFlag$[ebp]
push	edx
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Prepare
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 17			
jne	SHORT $LN1@sqlite3Loc
mov	eax, DWORD PTR _ppStmt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_finalize
add	esp, 4
mov	edx, DWORD PTR _pzTail$[ebp]
push	edx
mov	eax, DWORD PTR _ppStmt$[ebp]
push	eax
mov	ecx, DWORD PTR _pOld$[ebp]
push	ecx
mov	edx, DWORD PTR _saveSqlFlag$[ebp]
push	edx
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Prepare
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Prepare PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	DWORD PTR _zErrMsg$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
push	536					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pParse$[ebp], eax
cmp	DWORD PTR _pParse$[ebp], 0
jne	SHORT $LN31@sqlite3Pre
mov	DWORD PTR _rc$[ebp], 7
jmp	$end_prepare$34
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _pReprepare$[ebp]
mov	DWORD PTR [ecx+476], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN30@sqlite3Pre
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN28@sqlite3Pre
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$6[ebp], eax
cmp	DWORD PTR _pBt$6[ebp], 0
je	SHORT $LN27@sqlite3Pre
mov	ecx, DWORD PTR _pBt$6[ebp]
push	ecx
call	_sqlite3BtreeSchemaLocked
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN27@sqlite3Pre
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _zDb$3[ebp], edx
mov	eax, DWORD PTR _zDb$3[ebp]
push	eax
push	OFFSET $SG112917
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 16					
jmp	$end_prepare$34
jmp	SHORT $LN29@sqlite3Pre
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VtabUnlockList
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+424], 0
cmp	DWORD PTR _nBytes$[ebp], 0
jl	$LN25@sqlite3Pre
cmp	DWORD PTR _nBytes$[ebp], 0
je	SHORT $LN24@sqlite3Pre
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, DWORD PTR _nBytes$[ebp]
movsx	edx, BYTE PTR [ecx-1]
test	edx, edx
je	$LN25@sqlite3Pre
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+eax+88]
mov	DWORD PTR _mxLen$2[ebp], edx
mov	eax, DWORD PTR _nBytes$[ebp]
cmp	eax, DWORD PTR _mxLen$2[ebp]
jle	SHORT $LN23@sqlite3Pre
push	OFFSET $SG112923
push	18					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 12					
push	18					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$end_prepare$34
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	DWORD PTR _zSqlCopy$8[ebp], eax
cmp	DWORD PTR _zSqlCopy$8[ebp], 0
je	SHORT $LN22@sqlite3Pre
lea	eax, DWORD PTR _zErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _zSqlCopy$8[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3RunParser
add	esp, 12					
mov	eax, DWORD PTR _zSqlCopy$8[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+480]
sub	eax, DWORD PTR _zSqlCopy$8[ebp]
add	eax, DWORD PTR _zSql$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+480], eax
jmp	SHORT $LN21@sqlite3Pre
mov	edx, DWORD PTR _zSql$[ebp]
add	edx, DWORD PTR _nBytes$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+480], edx
jmp	SHORT $LN20@sqlite3Pre
lea	ecx, DWORD PTR _zErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3RunParser
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN19@sqlite3Pre
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+12], 7
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+12], 101			
jne	SHORT $LN18@sqlite3Pre
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN17@sqlite3Pre
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_schemaIsValid
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN16@sqlite3Pre
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+12], 7
cmp	DWORD PTR _pzTail$[ebp], 0
je	SHORT $LN15@sqlite3Pre
mov	eax, DWORD PTR _pzTail$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+480]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _rc$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN14@sqlite3Pre
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+8], 0
je	$LN14@sqlite3Pre
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+450]
test	ecx, ecx
je	$LN14@sqlite3Pre
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+450]
cmp	eax, 2
jne	SHORT $LN13@sqlite3Pre
push	4
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	DWORD PTR _iFirst$7[ebp], 8
mov	DWORD PTR _mx$5[ebp], 12		
jmp	SHORT $LN12@sqlite3Pre
push	8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	DWORD PTR _iFirst$7[ebp], 0
mov	DWORD PTR _mx$5[ebp], 8
mov	edx, DWORD PTR _iFirst$7[ebp]
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN11@sqlite3Pre
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _mx$5[ebp]
jge	SHORT $LN14@sqlite3Pre
push	0
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR ?azColName@?BB@??sqlite3Prepare@@9@9[edx*4]
push	eax
push	0
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, DWORD PTR _iFirst$7[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	SHORT $LN10@sqlite3Pre
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+137]
test	edx, edx
jne	SHORT $LN8@sqlite3Pre
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pVdbe$1[ebp], ecx
mov	edx, DWORD PTR _saveSqlFlag$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+480]
sub	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
mov	eax, DWORD PTR _pVdbe$1[ebp]
push	eax
call	_sqlite3VdbeSetSql
add	esp, 16					
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN7@sqlite3Pre
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@sqlite3Pre
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN7@sqlite3Pre
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3VdbeFinalize
add	esp, 4
jmp	SHORT $LN5@sqlite3Pre
mov	eax, DWORD PTR _ppStmt$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR [eax], edx
cmp	DWORD PTR _zErrMsg$[ebp], 0
je	SHORT $LN4@sqlite3Pre
mov	eax, DWORD PTR _zErrMsg$[ebp]
push	eax
push	OFFSET $SG112965
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 16					
mov	eax, DWORD PTR _zErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Pre
push	0
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+528], 0
je	SHORT $end_prepare$34
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+528]
mov	DWORD PTR _pT$4[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _pT$4[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+528], eax
mov	ecx, DWORD PTR _pT$4[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Pre
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ParserReset
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_schemaIsValid PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _iDb$[ebp], 0
jmp	SHORT $LN10@schemaIsVa
mov	edx, DWORD PTR _iDb$[ebp]
add	edx, 1
mov	DWORD PTR _iDb$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _iDb$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	$LN11@schemaIsVa
mov	DWORD PTR _openedTransaction$1[ebp], 0
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pBt$2[ebp], edx
cmp	DWORD PTR _pBt$2[ebp], 0
jne	SHORT $LN7@schemaIsVa
jmp	SHORT $LN9@schemaIsVa
mov	eax, DWORD PTR _pBt$2[ebp]
push	eax
call	_sqlite3BtreeIsInReadTrans
add	esp, 4
test	eax, eax
jne	SHORT $LN6@schemaIsVa
push	0
mov	ecx, DWORD PTR _pBt$2[ebp]
push	ecx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 7
je	SHORT $LN4@schemaIsVa
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN5@schemaIsVa
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@schemaIsVa
jmp	SHORT $LN11@schemaIsVa
mov	DWORD PTR _openedTransaction$1[ebp], 1
lea	eax, DWORD PTR _cookie$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pBt$2[ebp]
push	ecx
call	_sqlite3BtreeGetMeta
add	esp, 12					
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	eax, DWORD PTR _cookie$[ebp]
cmp	eax, DWORD PTR [edx]
je	SHORT $LN2@schemaIsVa
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ResetOneSchema
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+12], 17			
cmp	DWORD PTR _openedTransaction$1[ebp], 0
je	SHORT $LN1@schemaIsVa
mov	ecx, DWORD PTR _pBt$2[ebp]
push	ecx
call	_sqlite3BtreeCommit
add	esp, 4
jmp	$LN9@schemaIsVa
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3InitOne PROC
push	ebp
mov	ebp, esp
sub	esp, 104				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _openedTransaction$[ebp], 0
mov	eax, 1
test	eax, eax
je	SHORT $LN30@sqlite3Ini
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN30@sqlite3Ini
mov	DWORD PTR _zMasterSchema$[ebp], OFFSET ?temp_master_schema@?1??sqlite3InitOne@@9@9
jmp	SHORT $LN29@sqlite3Ini
mov	DWORD PTR _zMasterSchema$[ebp], OFFSET ?master_schema@?1??sqlite3InitOne@@9@9
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN33@sqlite3Ini
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN33@sqlite3Ini
mov	DWORD PTR tv68[ebp], OFFSET $SG112764
jmp	SHORT $LN34@sqlite3Ini
mov	DWORD PTR tv68[ebp], OFFSET $SG112765
mov	edx, DWORD PTR tv68[ebp]
mov	DWORD PTR _zMasterName$[ebp], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _zMasterName$[ebp]
mov	DWORD PTR _azArg$[ebp+ecx], edx
mov	eax, 4
shl	eax, 0
mov	DWORD PTR _azArg$[ebp+eax], OFFSET $SG112766
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _zMasterSchema$[ebp]
mov	DWORD PTR _azArg$[ebp+ecx], edx
mov	eax, 4
imul	ecx, eax, 3
mov	DWORD PTR _azArg$[ebp+ecx], 0
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR _initData$[ebp], edx
mov	eax, DWORD PTR _iDb$[ebp]
mov	DWORD PTR _initData$[ebp+8], eax
mov	DWORD PTR _initData$[ebp+12], 0
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR _initData$[ebp+4], ecx
push	0
lea	edx, DWORD PTR _azArg$[ebp]
push	edx
push	3
lea	eax, DWORD PTR _initData$[ebp]
push	eax
call	_sqlite3InitCallback
add	esp, 16					
cmp	DWORD PTR _initData$[ebp+12], 0
je	SHORT $LN28@sqlite3Ini
mov	ecx, DWORD PTR _initData$[ebp+12]
mov	DWORD PTR _rc$[ebp], ecx
jmp	$error_out$35
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _zMasterName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN27@sqlite3Ini
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
or	eax, 1
mov	ecx, DWORD PTR _pTab$[ebp]
mov	BYTE PTR [ecx+44], al
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$[ebp], edx
mov	ecx, DWORD PTR _pDb$[ebp]
cmp	DWORD PTR [ecx+4], 0
jne	SHORT $LN26@sqlite3Ini
mov	edx, 1
test	edx, edx
je	SHORT $LN25@sqlite3Ini
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN25@sqlite3Ini
mov	eax, 16					
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
movzx	ecx, WORD PTR [eax+78]
or	ecx, 1
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+16]
mov	edx, DWORD PTR [eax+edx+12]
mov	WORD PTR [edx+78], cx
xor	eax, eax
jmp	$LN31@sqlite3Ini
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeIsInReadTrans
add	esp, 4
test	eax, eax
jne	SHORT $LN24@sqlite3Ini
push	0
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN23@sqlite3Ini
mov	eax, DWORD PTR _rc$[ebp]
push	eax
call	_sqlite3ErrStr
add	esp, 4
push	eax
push	OFFSET $SG112775
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
call	_sqlite3SetString
add	esp, 16					
jmp	$initone_error_out$36
mov	DWORD PTR _openedTransaction$[ebp], 1
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN22@sqlite3Ini
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 5
jge	SHORT $LN20@sqlite3Ini
mov	ecx, DWORD PTR _i$[ebp]
lea	edx, DWORD PTR _meta$[ebp+ecx*4]
push	edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeGetMeta
add	esp, 12					
jmp	SHORT $LN21@sqlite3Ini
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR _meta$[ebp+ecx]
mov	DWORD PTR [eax], ecx
mov	edx, 4
shl	edx, 2
cmp	DWORD PTR _meta$[ebp+edx], 0
je	$LN19@sqlite3Ini
cmp	DWORD PTR _iDb$[ebp], 0
jne	SHORT $LN18@sqlite3Ini
mov	eax, 4
shl	eax, 2
movzx	ecx, BYTE PTR _meta$[ebp+eax]
and	ecx, 3
mov	BYTE PTR _encoding$3[ebp], cl
movzx	edx, BYTE PTR _encoding$3[ebp]
test	edx, edx
jne	SHORT $LN17@sqlite3Ini
mov	BYTE PTR _encoding$3[ebp], 1
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
mov	dl, BYTE PTR _encoding$3[ebp]
mov	BYTE PTR [ecx+77], dl
jmp	SHORT $LN16@sqlite3Ini
mov	eax, 4
shl	eax, 2
mov	ecx, 16					
imul	edx, ecx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	ecx, BYTE PTR [edx+77]
cmp	DWORD PTR _meta$[ebp+eax], ecx
je	SHORT $LN16@sqlite3Ini
push	OFFSET $SG112789
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
jmp	$initone_error_out$36
jmp	SHORT $LN14@sqlite3Ini
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
movzx	edx, WORD PTR [ecx+78]
or	edx, 4
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [ecx+eax+12]
mov	WORD PTR [eax+78], dx
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	dl, BYTE PTR [edx+77]
mov	BYTE PTR [ecx+77], dl
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
cmp	DWORD PTR [ecx+80], 0
jne	SHORT $LN13@sqlite3Ini
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _meta$[ebp+edx]
push	eax
call	_sqlite3AbsInt32
add	esp, 4
mov	DWORD PTR _size$[ebp], eax
cmp	DWORD PTR _size$[ebp], 0
jne	SHORT $LN12@sqlite3Ini
mov	DWORD PTR _size$[ebp], 2000		
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _size$[ebp]
mov	DWORD PTR [edx+80], eax
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+80]
push	eax
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeSetCacheSize
add	esp, 8
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	al, BYTE PTR _meta$[ebp+eax]
mov	BYTE PTR [edx+76], al
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+12]
movzx	eax, BYTE PTR [edx+76]
test	eax, eax
jne	SHORT $LN11@sqlite3Ini
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	BYTE PTR [edx+76], 1
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
movzx	edx, BYTE PTR [ecx+76]
cmp	edx, 4
jle	SHORT $LN10@sqlite3Ini
push	OFFSET $SG112796
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
push	ecx
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
jmp	$initone_error_out$36
cmp	DWORD PTR _iDb$[ebp], 0
jne	SHORT $LN9@sqlite3Ini
mov	edx, 4
shl	edx, 0
cmp	DWORD PTR _meta$[ebp+edx], 4
jl	SHORT $LN9@sqlite3Ini
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -32769				
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _zMasterName$[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	OFFSET $SG112800
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zSql$2[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+276]
mov	DWORD PTR _xAuth$1[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+276], 0
push	0
lea	eax, DWORD PTR _initData$[ebp]
push	eax
push	OFFSET _sqlite3InitCallback
mov	ecx, DWORD PTR _zSql$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_exec
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _xAuth$1[ebp]
mov	DWORD PTR [eax+276], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@sqlite3Ini
mov	edx, DWORD PTR _initData$[ebp+12]
mov	DWORD PTR _rc$[ebp], edx
mov	eax, DWORD PTR _zSql$2[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Ini
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3AnalysisLoad
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN6@sqlite3Ini
mov	DWORD PTR _rc$[ebp], 7
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Ini
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 65536				
je	SHORT $initone_error_out$36
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
movzx	ecx, WORD PTR [eax+78]
or	ecx, 1
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+16]
mov	edx, DWORD PTR [eax+edx+12]
mov	WORD PTR [edx+78], cx
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _openedTransaction$[ebp], 0
je	SHORT $LN3@sqlite3Ini
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeCommit
add	esp, 4
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 7
je	SHORT $LN1@sqlite3Ini
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN2@sqlite3Ini
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_corruptSchema PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pData$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN3@corruptSch
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 65536				
jne	SHORT $LN3@corruptSch
cmp	DWORD PTR _zObj$[ebp], 0
jne	SHORT $LN2@corruptSch
mov	DWORD PTR _zObj$[ebp], OFFSET $SG112689
mov	eax, DWORD PTR _zObj$[ebp]
push	eax
push	OFFSET $SG112690
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _pData$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3SetString
add	esp, 16					
cmp	DWORD PTR _zExtra$[ebp], 0
je	SHORT $LN3@corruptSch
mov	ecx, DWORD PTR _zExtra$[ebp]
push	ecx
mov	edx, DWORD PTR _pData$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG112692
mov	edx, DWORD PTR _pData$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MAppendf
add	esp, 20					
mov	ecx, DWORD PTR _pData$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN6@corruptSch
mov	DWORD PTR tv128[ebp], 7
jmp	SHORT $LN7@corruptSch
push	99745					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR tv128[ebp], eax
mov	edx, DWORD PTR _pData$[ebp]
mov	eax, DWORD PTR tv128[ebp]
mov	DWORD PTR [edx+12], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_actionName PROC
push	ebp
mov	ebp, esp
sub	esp, 8
movzx	eax, BYTE PTR _action$[ebp]
mov	DWORD PTR tv65[ebp], eax
mov	ecx, DWORD PTR tv65[ebp]
sub	ecx, 6
mov	DWORD PTR tv65[ebp], ecx
cmp	DWORD PTR tv65[ebp], 3
ja	SHORT $LN1@actionName
mov	edx, DWORD PTR tv65[ebp]
jmp	DWORD PTR $LN10@actionName[edx*4]
mov	DWORD PTR _zName$[ebp], OFFSET $SG112044
jmp	SHORT $LN6@actionName
mov	DWORD PTR _zName$[ebp], OFFSET $SG112046
jmp	SHORT $LN6@actionName
mov	DWORD PTR _zName$[ebp], OFFSET $SG112048
jmp	SHORT $LN6@actionName
mov	DWORD PTR _zName$[ebp], OFFSET $SG112050
jmp	SHORT $LN6@actionName
mov	DWORD PTR _zName$[ebp], OFFSET $SG112052
mov	eax, DWORD PTR _zName$[ebp]
mov	esp, ebp
pop	ebp
ret	0
DD	$LN2@actionName
DD	$LN5@actionName
DD	$LN4@actionName
DD	$LN3@actionName
ENDP
_setAllPagerFlags PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+62]
test	ecx, ecx
je	SHORT $LN5@setAllPage
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pDb$2[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _n$1[ebp], edx
mov	eax, DWORD PTR _n$1[ebp]
mov	DWORD PTR tv71[ebp], eax
mov	ecx, DWORD PTR _n$1[ebp]
sub	ecx, 1
mov	DWORD PTR _n$1[ebp], ecx
cmp	DWORD PTR tv71[ebp], 0
jle	SHORT $LN5@setAllPage
mov	edx, DWORD PTR _pDb$2[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN1@setAllPage
mov	eax, DWORD PTR _pDb$2[ebp]
movzx	ecx, BYTE PTR [eax+8]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 28					
or	ecx, eax
push	ecx
mov	ecx, DWORD PTR _pDb$2[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeSetPagerFlags
add	esp, 8
mov	eax, DWORD PTR _pDb$2[ebp]
add	eax, 16					
mov	DWORD PTR _pDb$2[ebp], eax
jmp	SHORT $LN3@setAllPage
mov	esp, ebp
pop	ebp
ret	0
ENDP
_returnSingleInt PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv68[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv68[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv68[ebp]
mov	DWORD PTR _mem$[ebp], edx
push	8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pI64$[ebp], eax
cmp	DWORD PTR _pI64$[ebp], 0
je	SHORT $LN1@returnSing
push	8
lea	edx, DWORD PTR _value$[ebp]
push	edx
mov	eax, DWORD PTR _pI64$[ebp]
push	eax
call	_memcpy
add	esp, 12					
push	-13					
mov	ecx, DWORD PTR _pI64$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _mem$[ebp]
push	edx
push	0
push	26					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
mov	edx, DWORD PTR _zLabel$[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	1
mov	ecx, DWORD PTR _mem$[ebp]
push	ecx
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_changeTempStorage PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zStorageType$[ebp]
push	eax
call	_getTempStore
add	esp, 4
mov	DWORD PTR _ts$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+63]
cmp	ecx, DWORD PTR _ts$[ebp]
jne	SHORT $LN2@changeTemp
xor	eax, eax
jmp	SHORT $LN3@changeTemp
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_invalidateTempStorage
add	esp, 4
test	eax, eax
je	SHORT $LN1@changeTemp
mov	eax, 1
jmp	SHORT $LN3@changeTemp
mov	eax, DWORD PTR _db$[ebp]
mov	cl, BYTE PTR _ts$[ebp]
mov	BYTE PTR [eax+63], cl
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_invalidateTempStorage PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
cmp	DWORD PTR [ecx+edx+4], 0
je	SHORT $LN3@invalidate
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+62]
test	eax, eax
je	SHORT $LN1@invalidate
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreeIsInReadTrans
add	esp, 4
test	eax, eax
je	SHORT $LN2@invalidate
push	OFFSET $SG111992
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, 1
jmp	SHORT $LN4@invalidate
mov	eax, 16					
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeClose
add	esp, 4
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR [eax+ecx+4], 0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getTempStore PROC
push	ebp
mov	ebp, esp
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 48					
jl	SHORT $LN6@getTempSto
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 50					
jg	SHORT $LN6@getTempSto
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [ecx+eax]
sub	eax, 48					
jmp	SHORT $LN7@getTempSto
jmp	SHORT $LN7@getTempSto
push	OFFSET $SG111979
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN4@getTempSto
mov	eax, 1
jmp	SHORT $LN7@getTempSto
jmp	SHORT $LN7@getTempSto
push	OFFSET $SG111982
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN2@getTempSto
mov	eax, 2
jmp	SHORT $LN7@getTempSto
jmp	SHORT $LN7@getTempSto
xor	eax, eax
pop	ebp
ret	0
ENDP
_getAutoVacuum PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	OFFSET $SG111966
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@getAutoVac
xor	eax, eax
jmp	SHORT $LN4@getAutoVac
push	OFFSET $SG111968
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN2@getAutoVac
mov	eax, 1
jmp	SHORT $LN4@getAutoVac
push	OFFSET $SG111970
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@getAutoVac
mov	eax, 2
jmp	SHORT $LN4@getAutoVac
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Atoi
add	esp, 4
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN6@getAutoVac
cmp	DWORD PTR _i$[ebp], 2
jg	SHORT $LN6@getAutoVac
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR tv80[ebp], ecx
jmp	SHORT $LN7@getAutoVac
mov	DWORD PTR tv80[ebp], 0
movzx	eax, BYTE PTR tv80[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getLockingMode PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN3@getLocking
push	OFFSET $SG111957
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN2@getLocking
mov	eax, 1
jmp	SHORT $LN4@getLocking
push	OFFSET $SG111959
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@getLocking
xor	eax, eax
jmp	SHORT $LN4@getLocking
or	eax, -1
pop	ebp
ret	0
ENDP
_getSafetyLevel PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 4
je	SHORT $LN5@getSafetyL
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Atoi
add	esp, 4
jmp	SHORT $LN6@getSafetyL
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@getSafetyL
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, 7
sub	eax, DWORD PTR _omitFull$[ebp]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN2@getSafetyL
mov	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR ?iLength@?1??getSafetyLevel@@9@9[ecx]
cmp	edx, DWORD PTR _n$[ebp]
jne	SHORT $LN1@getSafetyL
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR ?iOffset@?1??getSafetyLevel@@9@9[edx]
add	eax, OFFSET ?zText@?1??getSafetyLevel@@9@9
push	eax
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@getSafetyL
mov	ecx, DWORD PTR _i$[ebp]
mov	al, BYTE PTR ?iValue@?1??getSafetyLevel@@9@9[ecx]
jmp	SHORT $LN6@getSafetyL
jmp	SHORT $LN3@getSafetyL
mov	al, BYTE PTR _dflt$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LoadExtension PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pVfs$[ebp], ecx
mov	DWORD PTR _zErrmsg$[ebp], 0
mov	DWORD PTR _zAltEntry$[ebp], 0
mov	edx, DWORD PTR _zFile$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 300				
mov	DWORD PTR _nMsg$[ebp], eax
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN27@sqlite3Loa
mov	eax, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 4194304				
jne	SHORT $LN26@sqlite3Loa
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN25@sqlite3Loa
push	OFFSET $SG111719
call	_sqlite3_mprintf
add	esp, 4
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, 1
jmp	$LN28@sqlite3Loa
cmp	DWORD PTR _zProc$[ebp], 0
je	SHORT $LN30@sqlite3Loa
mov	edx, DWORD PTR _zProc$[ebp]
mov	DWORD PTR tv76[ebp], edx
jmp	SHORT $LN31@sqlite3Loa
mov	DWORD PTR tv76[ebp], OFFSET $SG111720
mov	eax, DWORD PTR tv76[ebp]
mov	DWORD PTR _zEntry$[ebp], eax
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3OsDlOpen
add	esp, 8
mov	DWORD PTR _handle$[ebp], eax
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN24@sqlite3Loa
mov	eax, DWORD PTR _ii$[ebp]
add	eax, 1
mov	DWORD PTR _ii$[ebp], eax
cmp	DWORD PTR _ii$[ebp], 1
jge	SHORT $LN22@sqlite3Loa
cmp	DWORD PTR _handle$[ebp], 0
jne	SHORT $LN22@sqlite3Loa
mov	ecx, DWORD PTR _ii$[ebp]
mov	edx, DWORD PTR ?azEndings@?1??sqlite3LoadExtension@@9@9[ecx*4]
push	edx
mov	eax, DWORD PTR _zFile$[ebp]
push	eax
push	OFFSET $SG111726
call	_sqlite3_mprintf
add	esp, 12					
mov	DWORD PTR _zAltFile$2[ebp], eax
cmp	DWORD PTR _zAltFile$2[ebp], 0
jne	SHORT $LN21@sqlite3Loa
mov	eax, 7
jmp	$LN28@sqlite3Loa
mov	ecx, DWORD PTR _zAltFile$2[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3OsDlOpen
add	esp, 8
mov	DWORD PTR _handle$[ebp], eax
mov	eax, DWORD PTR _zAltFile$2[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN23@sqlite3Loa
cmp	DWORD PTR _handle$[ebp], 0
jne	SHORT $LN20@sqlite3Loa
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN19@sqlite3Loa
mov	ecx, DWORD PTR _nMsg$[ebp]
push	ecx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _zErrmsg$[ebp], eax
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	eax, DWORD PTR _zErrmsg$[ebp]
mov	DWORD PTR [edx], eax
cmp	DWORD PTR _zErrmsg$[ebp], 0
je	SHORT $LN19@sqlite3Loa
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
push	OFFSET $SG111731
mov	edx, DWORD PTR _zErrmsg$[ebp]
push	edx
mov	eax, DWORD PTR _nMsg$[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 16					
mov	ecx, DWORD PTR _zErrmsg$[ebp]
push	ecx
mov	edx, DWORD PTR _nMsg$[ebp]
sub	edx, 1
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsDlError
add	esp, 12					
mov	eax, 1
jmp	$LN28@sqlite3Loa
mov	ecx, DWORD PTR _zEntry$[ebp]
push	ecx
mov	edx, DWORD PTR _handle$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsDlSym
add	esp, 12					
mov	DWORD PTR _xInit$[ebp], eax
cmp	DWORD PTR _xInit$[ebp], 0
jne	$LN17@sqlite3Loa
cmp	DWORD PTR _zProc$[ebp], 0
jne	$LN17@sqlite3Loa
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _ncFile$1[ebp], eax
mov	edx, DWORD PTR _ncFile$1[ebp]
add	edx, 30					
push	edx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _zAltEntry$[ebp], eax
cmp	DWORD PTR _zAltEntry$[ebp], 0
jne	SHORT $LN16@sqlite3Loa
mov	eax, DWORD PTR _handle$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsDlClose
add	esp, 8
mov	eax, 7
jmp	$LN28@sqlite3Loa
push	8
push	OFFSET $SG111742
mov	edx, DWORD PTR _zAltEntry$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _ncFile$1[ebp]
sub	eax, 1
mov	DWORD PTR _iFile$5[ebp], eax
jmp	SHORT $LN15@sqlite3Loa
mov	ecx, DWORD PTR _iFile$5[ebp]
sub	ecx, 1
mov	DWORD PTR _iFile$5[ebp], ecx
cmp	DWORD PTR _iFile$5[ebp], 0
jl	SHORT $LN13@sqlite3Loa
mov	edx, DWORD PTR _zFile$[ebp]
add	edx, DWORD PTR _iFile$5[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 47					
je	SHORT $LN13@sqlite3Loa
jmp	SHORT $LN14@sqlite3Loa
mov	ecx, DWORD PTR _iFile$5[ebp]
add	ecx, 1
mov	DWORD PTR _iFile$5[ebp], ecx
push	3
push	OFFSET $SG111747
mov	edx, DWORD PTR _zFile$[ebp]
add	edx, DWORD PTR _iFile$5[ebp]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN12@sqlite3Loa
mov	eax, DWORD PTR _iFile$5[ebp]
add	eax, 3
mov	DWORD PTR _iFile$5[ebp], eax
mov	DWORD PTR _iEntry$3[ebp], 8
jmp	SHORT $LN11@sqlite3Loa
mov	ecx, DWORD PTR _iFile$5[ebp]
add	ecx, 1
mov	DWORD PTR _iFile$5[ebp], ecx
mov	edx, DWORD PTR _zFile$[ebp]
add	edx, DWORD PTR _iFile$5[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$4[ebp], eax
cmp	DWORD PTR _c$4[ebp], 0
je	SHORT $LN9@sqlite3Loa
cmp	DWORD PTR _c$4[ebp], 46			
je	SHORT $LN9@sqlite3Loa
movzx	ecx, BYTE PTR _c$4[ebp]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 2
je	SHORT $LN8@sqlite3Loa
mov	eax, DWORD PTR _zAltEntry$[ebp]
add	eax, DWORD PTR _iEntry$3[ebp]
mov	ecx, DWORD PTR _c$4[ebp]
mov	dl, BYTE PTR _sqlite3UpperToLower[ecx]
mov	BYTE PTR [eax], dl
mov	eax, DWORD PTR _iEntry$3[ebp]
add	eax, 1
mov	DWORD PTR _iEntry$3[ebp], eax
jmp	SHORT $LN10@sqlite3Loa
push	6
push	OFFSET $SG111755
mov	ecx, DWORD PTR _zAltEntry$[ebp]
add	ecx, DWORD PTR _iEntry$3[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _zAltEntry$[ebp]
mov	DWORD PTR _zEntry$[ebp], edx
mov	eax, DWORD PTR _zEntry$[ebp]
push	eax
mov	ecx, DWORD PTR _handle$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3OsDlSym
add	esp, 12					
mov	DWORD PTR _xInit$[ebp], eax
cmp	DWORD PTR _xInit$[ebp], 0
jne	$LN7@sqlite3Loa
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN6@sqlite3Loa
mov	eax, DWORD PTR _zEntry$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _nMsg$[ebp]
mov	DWORD PTR _nMsg$[ebp], eax
mov	ecx, DWORD PTR _nMsg$[ebp]
push	ecx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _zErrmsg$[ebp], eax
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	eax, DWORD PTR _zErrmsg$[ebp]
mov	DWORD PTR [edx], eax
cmp	DWORD PTR _zErrmsg$[ebp], 0
je	SHORT $LN6@sqlite3Loa
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
mov	edx, DWORD PTR _zEntry$[ebp]
push	edx
push	OFFSET $SG111763
mov	eax, DWORD PTR _zErrmsg$[ebp]
push	eax
mov	ecx, DWORD PTR _nMsg$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 20					
mov	edx, DWORD PTR _zErrmsg$[ebp]
push	edx
mov	eax, DWORD PTR _nMsg$[ebp]
sub	eax, 1
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsDlError
add	esp, 12					
mov	edx, DWORD PTR _handle$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsDlClose
add	esp, 8
mov	ecx, DWORD PTR _zAltEntry$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, 1
jmp	$LN28@sqlite3Loa
mov	edx, DWORD PTR _zAltEntry$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
push	OFFSET _sqlite3Apis
lea	eax, DWORD PTR _zErrmsg$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	DWORD PTR _xInit$[ebp]
add	esp, 12					
test	eax, eax
je	SHORT $LN4@sqlite3Loa
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN3@sqlite3Loa
mov	edx, DWORD PTR _zErrmsg$[ebp]
push	edx
push	OFFSET $SG111766
call	_sqlite3_mprintf
add	esp, 8
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _zErrmsg$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _handle$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsDlClose
add	esp, 8
mov	eax, 1
jmp	$LN28@sqlite3Loa
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+156]
lea	ecx, DWORD PTR [eax*4+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _aHandle$[ebp], eax
cmp	DWORD PTR _aHandle$[ebp], 0
jne	SHORT $LN2@sqlite3Loa
mov	eax, 7
jmp	$LN28@sqlite3Loa
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+156], 0
jle	SHORT $LN1@sqlite3Loa
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+156]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+160]
push	ecx
mov	edx, DWORD PTR _aHandle$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+160]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _aHandle$[ebp]
mov	DWORD PTR [eax+160], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+156]
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+160]
mov	ecx, DWORD PTR _handle$[ebp]
mov	DWORD PTR [edx+eax*4], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+156]
add	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+156], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_xferCompatibleIndex PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, WORD PTR [eax+50]
mov	edx, DWORD PTR _pSrc$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	ecx, eax
je	SHORT $LN9@xferCompat
xor	eax, eax
jmp	$LN10@xferCompat
mov	ecx, DWORD PTR _pDest$[ebp]
movzx	edx, BYTE PTR [ecx+54]
mov	eax, DWORD PTR _pSrc$[ebp]
movzx	ecx, BYTE PTR [eax+54]
cmp	edx, ecx
je	SHORT $LN8@xferCompat
xor	eax, eax
jmp	$LN10@xferCompat
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN7@xferCompat
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pSrc$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _i$[ebp], ecx
jge	SHORT $LN5@xferCompat
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _i$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, WORD PTR [ecx+eax*2]
cmp	edx, ecx
je	SHORT $LN4@xferCompat
xor	eax, eax
jmp	SHORT $LN10@xferCompat
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [eax+ecx]
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [ecx+eax]
cmp	edx, ecx
je	SHORT $LN3@xferCompat
xor	eax, eax
jmp	SHORT $LN10@xferCompat
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
push	eax
call	_xferCompatibleCollation
add	esp, 8
test	eax, eax
jne	SHORT $LN2@xferCompat
xor	eax, eax
jmp	SHORT $LN10@xferCompat
jmp	$LN6@xferCompat
push	-1
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+36]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
je	SHORT $LN1@xferCompat
xor	eax, eax
jmp	SHORT $LN10@xferCompat
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_xferCompatibleCollation PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _z1$[ebp], 0
jne	SHORT $LN2@xferCompat
cmp	DWORD PTR _z2$[ebp], 0
jne	SHORT $LN5@xferCompat
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN6@xferCompat
mov	DWORD PTR tv66[ebp], 0
mov	eax, DWORD PTR tv66[ebp]
jmp	SHORT $LN3@xferCompat
cmp	DWORD PTR _z2$[ebp], 0
jne	SHORT $LN1@xferCompat
xor	eax, eax
jmp	SHORT $LN3@xferCompat
mov	eax, DWORD PTR _z2$[ebp]
push	eax
mov	ecx, DWORD PTR _z1$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN7@xferCompat
mov	DWORD PTR tv72[ebp], 1
jmp	SHORT $LN8@xferCompat
mov	DWORD PTR tv72[ebp], 0
mov	eax, DWORD PTR tv72[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_xferOptimization PROC
push	ebp
mov	ebp, esp
sub	esp, 96					
mov	DWORD PTR _emptyDestTest$[ebp], 0
mov	DWORD PTR _emptySrcTest$[ebp], 0
mov	DWORD PTR _destHasUniqueIdx$[ebp], 0
cmp	DWORD PTR _pSelect$[ebp], 0
jne	SHORT $LN64@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+532], 0
jne	SHORT $LN62@xferOptimi
mov	ecx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [ecx+68], 0
je	SHORT $LN63@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pDest$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggerList
add	esp, 8
test	eax, eax
je	SHORT $LN61@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	ecx, DWORD PTR _pDest$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN60@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
cmp	DWORD PTR _onError$[ebp], 10		
jne	SHORT $LN59@xferOptimi
mov	eax, DWORD PTR _pDest$[ebp]
movsx	ecx, WORD PTR [eax+36]
test	ecx, ecx
jl	SHORT $LN58@xferOptimi
mov	edx, DWORD PTR _pDest$[ebp]
movzx	eax, BYTE PTR [edx+45]
mov	DWORD PTR _onError$[ebp], eax
cmp	DWORD PTR _onError$[ebp], 10		
jne	SHORT $LN59@xferOptimi
mov	DWORD PTR _onError$[ebp], 2
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	edx, DWORD PTR [ecx+32]
cmp	DWORD PTR [edx], 1
je	SHORT $LN56@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, 80					
imul	eax, edx, 0
cmp	DWORD PTR [ecx+eax+28], 0
je	SHORT $LN55@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	ecx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [ecx+36], 0
je	SHORT $LN54@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [edx+48], 0
je	SHORT $LN53@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	eax, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN52@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	ecx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [ecx+60], 0
je	SHORT $LN51@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN50@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	eax, DWORD PTR _pSelect$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 1
je	SHORT $LN49@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pSelect$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pEList$[ebp], eax
mov	ecx, DWORD PTR _pEList$[ebp]
cmp	DWORD PTR [ecx], 1
je	SHORT $LN48@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, 24					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 116				
je	SHORT $LN47@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pSelect$[ebp]
mov	eax, DWORD PTR [edx+32]
add	eax, 8
mov	DWORD PTR _pItem$[ebp], eax
mov	ecx, DWORD PTR _pItem$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3LocateTableItem
add	esp, 12					
mov	DWORD PTR _pSrc$[ebp], eax
cmp	DWORD PTR _pSrc$[ebp], 0
jne	SHORT $LN46@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	eax, DWORD PTR _pSrc$[ebp]
cmp	eax, DWORD PTR _pDest$[ebp]
jne	SHORT $LN45@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	ecx, DWORD PTR _pDest$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN69@xferOptimi
mov	DWORD PTR tv166[ebp], 1
jmp	SHORT $LN70@xferOptimi
mov	DWORD PTR tv166[ebp], 0
mov	eax, DWORD PTR _pSrc$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN67@xferOptimi
mov	DWORD PTR tv165[ebp], 1
jmp	SHORT $LN68@xferOptimi
mov	DWORD PTR tv165[ebp], 0
mov	edx, DWORD PTR tv166[ebp]
cmp	edx, DWORD PTR tv165[ebp]
je	SHORT $LN44@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	eax, DWORD PTR _pSrc$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN43@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN42@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	eax, DWORD PTR _pDest$[ebp]
movsx	ecx, WORD PTR [eax+38]
mov	edx, DWORD PTR _pSrc$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	ecx, eax
je	SHORT $LN41@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	ecx, DWORD PTR _pDest$[ebp]
movsx	edx, WORD PTR [ecx+36]
mov	eax, DWORD PTR _pSrc$[ebp]
movsx	ecx, WORD PTR [eax+36]
cmp	edx, ecx
je	SHORT $LN40@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN39@xferOptimi
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pDest$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _i$[ebp], ecx
jge	$LN37@xferOptimi
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pDest$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _pDestCol$2[ebp], edx
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pSrc$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pSrcCol$1[ebp], ecx
mov	eax, DWORD PTR _pDestCol$2[ebp]
movsx	ecx, BYTE PTR [eax+21]
mov	edx, DWORD PTR _pSrcCol$1[ebp]
movsx	eax, BYTE PTR [edx+21]
cmp	ecx, eax
je	SHORT $LN36@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	ecx, DWORD PTR _pSrcCol$1[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pDestCol$2[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_xferCompatibleCollation
add	esp, 8
test	eax, eax
jne	SHORT $LN35@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pDestCol$2[ebp]
movzx	eax, BYTE PTR [edx+20]
test	eax, eax
je	SHORT $LN34@xferOptimi
mov	ecx, DWORD PTR _pSrcCol$1[ebp]
movzx	edx, BYTE PTR [ecx+20]
test	edx, edx
jne	SHORT $LN34@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN33@xferOptimi
mov	eax, DWORD PTR _pDestCol$2[ebp]
cmp	DWORD PTR [eax+8], 0
jne	SHORT $LN73@xferOptimi
mov	DWORD PTR tv217[ebp], 1
jmp	SHORT $LN74@xferOptimi
mov	DWORD PTR tv217[ebp], 0
mov	ecx, DWORD PTR _pSrcCol$1[ebp]
cmp	DWORD PTR [ecx+8], 0
jne	SHORT $LN71@xferOptimi
mov	DWORD PTR tv216[ebp], 1
jmp	SHORT $LN72@xferOptimi
mov	DWORD PTR tv216[ebp], 0
mov	edx, DWORD PTR tv217[ebp]
cmp	edx, DWORD PTR tv216[ebp]
jne	SHORT $LN32@xferOptimi
mov	eax, DWORD PTR _pDestCol$2[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN33@xferOptimi
mov	ecx, DWORD PTR _pSrcCol$1[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pDestCol$2[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_strcmp
add	esp, 8
test	eax, eax
je	SHORT $LN33@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
jmp	$LN38@xferOptimi
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pDestIdx$[ebp], eax
jmp	SHORT $LN31@xferOptimi
mov	ecx, DWORD PTR _pDestIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pDestIdx$[ebp], edx
cmp	DWORD PTR _pDestIdx$[ebp], 0
je	SHORT $LN29@xferOptimi
mov	eax, DWORD PTR _pDestIdx$[ebp]
movzx	ecx, BYTE PTR [eax+54]
test	ecx, ecx
je	SHORT $LN28@xferOptimi
mov	DWORD PTR _destHasUniqueIdx$[ebp], 1
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pSrcIdx$[ebp], eax
jmp	SHORT $LN27@xferOptimi
mov	ecx, DWORD PTR _pSrcIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pSrcIdx$[ebp], edx
cmp	DWORD PTR _pSrcIdx$[ebp], 0
je	SHORT $LN25@xferOptimi
mov	eax, DWORD PTR _pSrcIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _pDestIdx$[ebp]
push	ecx
call	_xferCompatibleIndex
add	esp, 8
test	eax, eax
je	SHORT $LN24@xferOptimi
jmp	SHORT $LN25@xferOptimi
jmp	SHORT $LN26@xferOptimi
cmp	DWORD PTR _pSrcIdx$[ebp], 0
jne	SHORT $LN23@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
jmp	SHORT $LN30@xferOptimi
mov	edx, DWORD PTR _pDest$[ebp]
cmp	DWORD PTR [edx+24], 0
je	SHORT $LN22@xferOptimi
push	-1
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3ExprListCompare
add	esp, 12					
test	eax, eax
je	SHORT $LN22@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+24]
and	eax, 524288				
je	SHORT $LN21@xferOptimi
mov	ecx, DWORD PTR _pDest$[ebp]
cmp	DWORD PTR [ecx+16], 0
je	SHORT $LN21@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 128				
je	SHORT $LN20@xferOptimi
xor	eax, eax
jmp	$LN65@xferOptimi
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDbSrc$[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _iDbSrc$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeVerifySchema
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iSrc$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _iDest$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
mov	ecx, DWORD PTR _pDest$[ebp]
push	ecx
mov	edx, DWORD PTR _iDbDest$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_autoIncBegin
add	esp, 12					
mov	DWORD PTR _regAutoinc$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regData$[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRowid$[ebp], eax
push	53					
mov	eax, DWORD PTR _pDest$[ebp]
push	eax
mov	ecx, DWORD PTR _iDbDest$[ebp]
push	ecx
mov	edx, DWORD PTR _iDest$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3OpenTable
add	esp, 20					
mov	ecx, DWORD PTR _pDest$[ebp]
movsx	edx, WORD PTR [ecx+36]
test	edx, edx
jge	SHORT $LN17@xferOptimi
mov	eax, DWORD PTR _pDest$[ebp]
cmp	DWORD PTR [eax+8], 0
jne	SHORT $LN18@xferOptimi
cmp	DWORD PTR _destHasUniqueIdx$[ebp], 0
jne	SHORT $LN18@xferOptimi
cmp	DWORD PTR _onError$[ebp], 2
je	SHORT $LN19@xferOptimi
cmp	DWORD PTR _onError$[ebp], 1
je	SHORT $LN19@xferOptimi
push	0
mov	ecx, DWORD PTR _iDest$[ebp]
push	ecx
push	105					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr1$[ebp], eax
push	0
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _emptyDestTest$[ebp], eax
mov	ecx, DWORD PTR _addr1$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pSrc$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	$LN16@xferOptimi
push	52					
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
mov	eax, DWORD PTR _iDbSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _iSrc$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3OpenTable
add	esp, 20					
push	0
mov	eax, DWORD PTR _iSrc$[ebp]
push	eax
push	105					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _emptySrcTest$[ebp], eax
mov	edx, DWORD PTR _pDest$[ebp]
movsx	eax, WORD PTR [edx+36]
test	eax, eax
jl	SHORT $LN15@xferOptimi
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _iSrc$[ebp]
push	edx
push	100					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr1$[ebp], eax
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _iDest$[ebp]
push	edx
push	67					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _addr2$[ebp], eax
mov	ecx, DWORD PTR _pDest$[ebp]
push	ecx
mov	edx, DWORD PTR _onError$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3RowidConstraint
add	esp, 12					
mov	ecx, DWORD PTR _addr2$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _regRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _regAutoinc$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_autoIncStep
add	esp, 12					
jmp	SHORT $LN14@xferOptimi
mov	eax, DWORD PTR _pDest$[ebp]
cmp	DWORD PTR [eax+8], 0
jne	SHORT $LN13@xferOptimi
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _iDest$[ebp]
push	edx
push	69					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr1$[ebp], eax
jmp	SHORT $LN14@xferOptimi
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _iSrc$[ebp]
push	edx
push	100					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr1$[ebp], eax
mov	ecx, DWORD PTR _regData$[ebp]
push	ecx
mov	edx, DWORD PTR _iSrc$[ebp]
push	edx
push	99					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _regData$[ebp]
push	edx
mov	eax, DWORD PTR _iDest$[ebp]
push	eax
push	70					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	11					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
push	0
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	eax, DWORD PTR _addr1$[ebp]
push	eax
mov	ecx, DWORD PTR _iSrc$[ebp]
push	ecx
push	9
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	eax, DWORD PTR _iSrc$[ebp]
push	eax
push	58					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	edx, DWORD PTR _iDest$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN11@xferOptimi
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	1
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _iDbDest$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TableLock
add	esp, 20					
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _iDbSrc$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TableLock
add	esp, 20					
mov	ecx, DWORD PTR _pDest$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pDestIdx$[ebp], edx
jmp	SHORT $LN10@xferOptimi
mov	eax, DWORD PTR _pDestIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pDestIdx$[ebp], ecx
cmp	DWORD PTR _pDestIdx$[ebp], 0
je	$LN8@xferOptimi
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pSrcIdx$[ebp], eax
jmp	SHORT $LN7@xferOptimi
mov	ecx, DWORD PTR _pSrcIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pSrcIdx$[ebp], edx
cmp	DWORD PTR _pSrcIdx$[ebp], 0
je	SHORT $LN5@xferOptimi
mov	eax, DWORD PTR _pSrcIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _pDestIdx$[ebp]
push	ecx
call	_xferCompatibleIndex
add	esp, 8
test	eax, eax
je	SHORT $LN4@xferOptimi
jmp	SHORT $LN5@xferOptimi
jmp	SHORT $LN6@xferOptimi
mov	edx, DWORD PTR _iDbSrc$[ebp]
push	edx
mov	eax, DWORD PTR _pSrcIdx$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _iSrc$[ebp]
push	edx
push	52					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _pSrcIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	eax, DWORD PTR _iDbDest$[ebp]
push	eax
mov	ecx, DWORD PTR _pDestIdx$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _iDest$[ebp]
push	eax
push	53					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _pDestIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
push	0
mov	edx, DWORD PTR _iSrc$[ebp]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr1$[ebp], eax
mov	ecx, DWORD PTR _regData$[ebp]
push	ecx
mov	edx, DWORD PTR _iSrc$[ebp]
push	edx
push	98					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	ecx, DWORD PTR _regData$[ebp]
push	ecx
mov	edx, DWORD PTR _iDest$[ebp]
push	edx
push	107					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _addr1$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _iSrc$[ebp]
push	edx
push	9
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addr1$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
push	0
mov	eax, DWORD PTR _iSrc$[ebp]
push	eax
push	58					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	edx, DWORD PTR _iDest$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN9@xferOptimi
cmp	DWORD PTR _emptySrcTest$[ebp], 0
je	SHORT $LN3@xferOptimi
mov	ecx, DWORD PTR _emptySrcTest$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _regRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _regData$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
cmp	DWORD PTR _emptyDestTest$[ebp], 0
je	SHORT $LN2@xferOptimi
push	0
push	0
push	24					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _emptyDestTest$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
push	0
mov	ecx, DWORD PTR _iDest$[ebp]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
xor	eax, eax
jmp	SHORT $LN65@xferOptimi
jmp	SHORT $LN65@xferOptimi
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_autoIncStep PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _memId$[ebp], 0
jle	SHORT $LN2@autoIncSte
mov	eax, DWORD PTR _regRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _memId$[ebp]
push	ecx
push	132					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
pop	ebp
ret	0
ENDP
_autoIncBegin PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _memId$[ebp], 0
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 8
je	$LN5@autoIncBeg
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+408], 0
je	SHORT $LN8@autoIncBeg
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+408]
mov	DWORD PTR tv71[ebp], ecx
jmp	SHORT $LN9@autoIncBeg
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv71[ebp], edx
mov	eax, DWORD PTR tv71[ebp]
mov	DWORD PTR _pToplevel$1[ebp], eax
mov	ecx, DWORD PTR _pToplevel$1[ebp]
mov	edx, DWORD PTR [ecx+404]
mov	DWORD PTR _pInfo$2[ebp], edx
cmp	DWORD PTR _pInfo$2[ebp], 0
je	SHORT $LN3@autoIncBeg
mov	eax, DWORD PTR _pInfo$2[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _pTab$[ebp]
je	SHORT $LN3@autoIncBeg
mov	edx, DWORD PTR _pInfo$2[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pInfo$2[ebp], eax
jmp	SHORT $LN4@autoIncBeg
cmp	DWORD PTR _pInfo$2[ebp], 0
jne	$LN2@autoIncBeg
push	16					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pInfo$2[ebp], eax
cmp	DWORD PTR _pInfo$2[ebp], 0
jne	SHORT $LN1@autoIncBeg
xor	eax, eax
jmp	SHORT $LN6@autoIncBeg
mov	eax, DWORD PTR _pInfo$2[ebp]
mov	ecx, DWORD PTR _pToplevel$1[ebp]
mov	edx, DWORD PTR [ecx+404]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pToplevel$1[ebp]
mov	ecx, DWORD PTR _pInfo$2[ebp]
mov	DWORD PTR [eax+404], ecx
mov	edx, DWORD PTR _pInfo$2[ebp]
mov	eax, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pInfo$2[ebp]
mov	edx, DWORD PTR _iDb$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pToplevel$1[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	edx, DWORD PTR _pToplevel$1[ebp]
mov	DWORD PTR [edx+72], ecx
mov	eax, DWORD PTR _pToplevel$1[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv95[ebp], ecx
mov	edx, DWORD PTR _pToplevel$1[ebp]
mov	eax, DWORD PTR tv95[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR _pInfo$2[ebp]
mov	edx, DWORD PTR tv95[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pToplevel$1[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	edx, DWORD PTR _pToplevel$1[ebp]
mov	DWORD PTR [edx+72], ecx
mov	eax, DWORD PTR _pInfo$2[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _memId$[ebp], ecx
mov	eax, DWORD PTR _memId$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_readsTable PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _iEnd$[ebp], eax
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN13@readsTable
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3GetVTable
add	esp, 8
mov	DWORD PTR tv76[ebp], eax
jmp	SHORT $LN14@readsTable
mov	DWORD PTR tv76[ebp], 0
mov	ecx, DWORD PTR tv76[ebp]
mov	DWORD PTR _pVTab$[ebp], ecx
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN10@readsTable
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _iEnd$[ebp]
jge	$LN8@readsTable
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	DWORD PTR _pOp$3[ebp], eax
mov	eax, DWORD PTR _pOp$3[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 52					
jne	SHORT $LN7@readsTable
mov	edx, DWORD PTR _pOp$3[ebp]
mov	eax, DWORD PTR [edx+12]
cmp	eax, DWORD PTR _iDb$[ebp]
jne	SHORT $LN7@readsTable
mov	ecx, DWORD PTR _pOp$3[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _tnum$1[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR _tnum$1[ebp]
cmp	ecx, DWORD PTR [eax+32]
jne	SHORT $LN6@readsTable
mov	eax, 1
jmp	SHORT $LN11@readsTable
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIndex$2[ebp], eax
jmp	SHORT $LN5@readsTable
mov	ecx, DWORD PTR _pIndex$2[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIndex$2[ebp], edx
cmp	DWORD PTR _pIndex$2[ebp], 0
je	SHORT $LN7@readsTable
mov	eax, DWORD PTR _pIndex$2[ebp]
mov	ecx, DWORD PTR _tnum$1[ebp]
cmp	ecx, DWORD PTR [eax+44]
jne	SHORT $LN2@readsTable
mov	eax, 1
jmp	SHORT $LN11@readsTable
jmp	SHORT $LN4@readsTable
mov	edx, DWORD PTR _pOp$3[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 149				
jne	SHORT $LN1@readsTable
mov	ecx, DWORD PTR _pOp$3[ebp]
mov	edx, DWORD PTR [ecx+16]
cmp	edx, DWORD PTR _pVTab$[ebp]
jne	SHORT $LN1@readsTable
mov	eax, 1
jmp	SHORT $LN11@readsTable
jmp	$LN9@readsTable
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fkActionTrigger PROC
push	ebp
mov	ebp, esp
sub	esp, 144				
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pChanges$[ebp], 0
je	SHORT $LN28@fkActionTr
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN29@fkActionTr
mov	DWORD PTR tv66[ebp], 0
mov	edx, DWORD PTR tv66[ebp]
mov	DWORD PTR _iAction$[ebp], edx
mov	eax, DWORD PTR _pFKey$[ebp]
add	eax, DWORD PTR _iAction$[ebp]
movzx	ecx, BYTE PTR [eax+25]
mov	DWORD PTR _action$[ebp], ecx
mov	edx, DWORD PTR _iAction$[ebp]
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+28]
mov	DWORD PTR _pTrigger$[ebp], ecx
cmp	DWORD PTR _action$[ebp], 0
je	$LN25@fkActionTr
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	$LN25@fkActionTr
mov	DWORD PTR _pIdx$11[ebp], 0
mov	DWORD PTR _aiCol$14[ebp], 0
mov	DWORD PTR _pStep$21[ebp], 0
mov	DWORD PTR _pWhere$18[ebp], 0
mov	DWORD PTR _pList$16[ebp], 0
mov	DWORD PTR _pSelect$10[ebp], 0
mov	DWORD PTR _pWhen$19[ebp], 0
lea	edx, DWORD PTR _aiCol$14[ebp]
push	edx
lea	eax, DWORD PTR _pIdx$11[ebp]
push	eax
mov	ecx, DWORD PTR _pFKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkLocateIndex
add	esp, 20					
test	eax, eax
je	SHORT $LN24@fkActionTr
xor	eax, eax
jmp	$LN26@fkActionTr
mov	DWORD PTR _i$17[ebp], 0
jmp	SHORT $LN23@fkActionTr
mov	ecx, DWORD PTR _i$17[ebp]
add	ecx, 1
mov	DWORD PTR _i$17[ebp], ecx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR _i$17[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	$LN21@fkActionTr
mov	DWORD PTR _tOld$2[ebp], OFFSET $SG110050
mov	DWORD PTR _tOld$2[ebp+4], 3
mov	DWORD PTR _tNew$3[ebp], OFFSET $SG110053
mov	DWORD PTR _tNew$3[ebp+4], 3
cmp	DWORD PTR _aiCol$14[ebp], 0
je	SHORT $LN30@fkActionTr
mov	ecx, DWORD PTR _i$17[ebp]
mov	edx, DWORD PTR _aiCol$14[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
mov	DWORD PTR tv93[ebp], eax
jmp	SHORT $LN31@fkActionTr
mov	ecx, 8
imul	edx, ecx, 0
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+edx+36]
mov	DWORD PTR tv93[ebp], ecx
mov	edx, DWORD PTR tv93[ebp]
mov	DWORD PTR _iFromCol$6[ebp], edx
cmp	DWORD PTR _pIdx$11[ebp], 0
je	SHORT $LN32@fkActionTr
mov	eax, DWORD PTR _pIdx$11[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$17[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
imul	ecx, eax, 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR tv135[ebp], ecx
jmp	SHORT $LN33@fkActionTr
mov	DWORD PTR tv135[ebp], OFFSET $SG110059
mov	edx, DWORD PTR tv135[ebp]
mov	DWORD PTR _tToCol$7[ebp], edx
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax]
imul	edx, DWORD PTR _iFromCol$6[ebp], 24
mov	eax, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _tFromCol$4[ebp], ecx
mov	edx, DWORD PTR _tToCol$7[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _tToCol$7[ebp+4], eax
mov	eax, DWORD PTR _tFromCol$4[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _tFromCol$4[ebp+4], eax
push	0
lea	ecx, DWORD PTR _tFromCol$4[ebp]
push	ecx
push	0
push	0
push	27					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	0
lea	eax, DWORD PTR _tToCol$7[ebp]
push	eax
push	0
push	0
push	27					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
push	eax
lea	edx, DWORD PTR _tOld$2[ebp]
push	edx
push	0
push	0
push	27					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	122					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	79					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pEq$8[ebp], eax
mov	eax, DWORD PTR _pEq$8[ebp]
push	eax
mov	ecx, DWORD PTR _pWhere$18[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprAnd
add	esp, 12					
mov	DWORD PTR _pWhere$18[ebp], eax
cmp	DWORD PTR _pChanges$[ebp], 0
je	$LN20@fkActionTr
push	0
push	0
lea	eax, DWORD PTR _tToCol$7[ebp]
push	eax
push	0
push	0
push	27					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
push	eax
lea	edx, DWORD PTR _tNew$3[ebp]
push	edx
push	0
push	0
push	27					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	122					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	0
lea	edx, DWORD PTR _tToCol$7[ebp]
push	edx
push	0
push	0
push	27					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
push	eax
lea	ecx, DWORD PTR _tOld$2[ebp]
push	ecx
push	0
push	0
push	27					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	122					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	73					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pEq$8[ebp], eax
mov	edx, DWORD PTR _pEq$8[ebp]
push	edx
mov	eax, DWORD PTR _pWhen$19[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprAnd
add	esp, 12					
mov	DWORD PTR _pWhen$19[ebp], eax
cmp	DWORD PTR _action$[ebp], 6
je	$LN19@fkActionTr
cmp	DWORD PTR _action$[ebp], 9
jne	SHORT $LN18@fkActionTr
cmp	DWORD PTR _pChanges$[ebp], 0
je	$LN19@fkActionTr
cmp	DWORD PTR _action$[ebp], 9
jne	SHORT $LN17@fkActionTr
push	0
lea	edx, DWORD PTR _tToCol$7[ebp]
push	edx
push	0
push	0
push	27					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
push	eax
lea	ecx, DWORD PTR _tNew$3[ebp]
push	ecx
push	0
push	0
push	27					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
push	eax
push	122					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNew$15[ebp], eax
jmp	SHORT $LN16@fkActionTr
cmp	DWORD PTR _action$[ebp], 8
jne	SHORT $LN15@fkActionTr
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx]
imul	eax, DWORD PTR _iFromCol$6[ebp], 24
mov	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR [ecx+eax+4]
mov	DWORD PTR _pDflt$5[ebp], edx
cmp	DWORD PTR _pDflt$5[ebp], 0
je	SHORT $LN14@fkActionTr
push	0
mov	eax, DWORD PTR _pDflt$5[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pNew$15[ebp], eax
jmp	SHORT $LN13@fkActionTr
push	0
push	0
push	0
push	101					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNew$15[ebp], eax
jmp	SHORT $LN16@fkActionTr
push	0
push	0
push	0
push	101					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNew$15[ebp], eax
mov	ecx, DWORD PTR _pNew$15[ebp]
push	ecx
mov	edx, DWORD PTR _pList$16[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$16[ebp], eax
push	0
lea	ecx, DWORD PTR _tFromCol$4[ebp]
push	ecx
mov	edx, DWORD PTR _pList$16[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListSetName
add	esp, 16					
jmp	$LN22@fkActionTr
mov	ecx, DWORD PTR _aiCol$14[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _zFrom$12[ebp], edx
mov	eax, DWORD PTR _zFrom$12[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nFrom$13[ebp], eax
cmp	DWORD PTR _action$[ebp], 6
jne	$LN11@fkActionTr
mov	ecx, DWORD PTR _zFrom$12[ebp]
mov	DWORD PTR _tFrom$1[ebp], ecx
mov	edx, DWORD PTR _nFrom$13[ebp]
mov	DWORD PTR _tFrom$1[ebp+4], edx
push	OFFSET $SG110074
push	57					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pRaise$9[ebp], eax
cmp	DWORD PTR _pRaise$9[ebp], 0
je	SHORT $LN10@fkActionTr
mov	ecx, DWORD PTR _pRaise$9[ebp]
mov	BYTE PTR [ecx+1], 2
push	0
push	0
push	0
push	0
push	0
push	0
mov	edx, DWORD PTR _pWhere$18[ebp]
push	edx
push	0
lea	eax, DWORD PTR _tFrom$1[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListAppend
add	esp, 16					
push	eax
mov	edx, DWORD PTR _pRaise$9[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _pSelect$10[ebp], eax
mov	DWORD PTR _pWhere$18[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR [edx+242]
mov	BYTE PTR _enableLookaside$20[ebp], al
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+242], 0
mov	edx, DWORD PTR _nFrom$13[ebp]
add	edx, 77					
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTrigger$[ebp], eax
cmp	DWORD PTR _pTrigger$[ebp], 0
je	$LN9@fkActionTr
mov	ecx, 36					
shl	ecx, 0
mov	edx, DWORD PTR _pTrigger$[ebp]
add	edx, ecx
mov	DWORD PTR tv354[ebp], edx
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR tv354[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR tv354[ebp]
mov	DWORD PTR _pStep$21[ebp], edx
mov	eax, 40					
shl	eax, 0
add	eax, DWORD PTR _pStep$21[ebp]
mov	ecx, DWORD PTR _pStep$21[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _pStep$21[ebp]
mov	eax, DWORD PTR _nFrom$13[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _nFrom$13[ebp]
push	ecx
mov	edx, DWORD PTR _zFrom$12[ebp]
push	edx
mov	eax, DWORD PTR _pStep$21[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_memcpy
add	esp, 12					
push	1
mov	edx, DWORD PTR _pWhere$18[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pStep$21[ebp]
mov	DWORD PTR [ecx+20], eax
push	1
mov	edx, DWORD PTR _pList$16[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDup
add	esp, 12					
mov	ecx, DWORD PTR _pStep$21[ebp]
mov	DWORD PTR [ecx+24], eax
push	1
mov	edx, DWORD PTR _pSelect$10[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDup
add	esp, 12					
mov	ecx, DWORD PTR _pStep$21[ebp]
mov	DWORD PTR [ecx+8], eax
cmp	DWORD PTR _pWhen$19[ebp], 0
je	SHORT $LN9@fkActionTr
push	0
push	0
mov	edx, DWORD PTR _pWhen$19[ebp]
push	edx
push	19					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pWhen$19[ebp], eax
push	1
mov	ecx, DWORD PTR _pWhen$19[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR _enableLookaside$20[ebp]
mov	BYTE PTR [edx+242], al
mov	ecx, DWORD PTR _pWhere$18[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pWhen$19[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pList$16[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	ecx, DWORD PTR _pSelect$10[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
cmp	ecx, 1
jne	SHORT $LN7@fkActionTr
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_fkTriggerDelete
add	esp, 8
xor	eax, eax
jmp	$LN26@fkActionTr
mov	ecx, DWORD PTR _action$[ebp]
mov	DWORD PTR tv404[ebp], ecx
cmp	DWORD PTR tv404[ebp], 6
je	SHORT $LN4@fkActionTr
cmp	DWORD PTR tv404[ebp], 9
je	SHORT $LN3@fkActionTr
jmp	SHORT $LN1@fkActionTr
mov	edx, DWORD PTR _pStep$21[ebp]
mov	BYTE PTR [edx], 119			
jmp	SHORT $LN5@fkActionTr
cmp	DWORD PTR _pChanges$[ebp], 0
jne	SHORT $LN1@fkActionTr
mov	eax, DWORD PTR _pStep$21[ebp]
mov	BYTE PTR [eax], 109			
jmp	SHORT $LN5@fkActionTr
mov	ecx, DWORD PTR _pStep$21[ebp]
mov	BYTE PTR [ecx], 110			
mov	edx, DWORD PTR _pStep$21[ebp]
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR [ecx+20], eax
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR [ecx+24], eax
mov	ecx, DWORD PTR _iAction$[ebp]
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [edx+ecx*4+28], eax
cmp	DWORD PTR _pChanges$[ebp], 0
je	SHORT $LN34@fkActionTr
mov	DWORD PTR tv421[ebp], 110		
jmp	SHORT $LN35@fkActionTr
mov	DWORD PTR tv421[ebp], 109		
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	dl, BYTE PTR tv421[ebp]
mov	BYTE PTR [ecx+8], dl
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fkParentIsModified PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN12@fkParentIs
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	$LN10@fkParentIs
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+eax*8+40]
mov	DWORD PTR _zKey$2[ebp], edx
mov	DWORD PTR _iKey$3[ebp], 0
jmp	SHORT $LN9@fkParentIs
mov	eax, DWORD PTR _iKey$3[ebp]
add	eax, 1
mov	DWORD PTR _iKey$3[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _iKey$3[ebp], edx
jge	SHORT $LN7@fkParentIs
mov	eax, DWORD PTR _iKey$3[ebp]
mov	ecx, DWORD PTR _aChange$[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
jge	SHORT $LN5@fkParentIs
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
cmp	DWORD PTR _iKey$3[ebp], eax
jne	SHORT $LN6@fkParentIs
cmp	DWORD PTR _bChngRowid$[ebp], 0
je	SHORT $LN6@fkParentIs
imul	ecx, DWORD PTR _iKey$3[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pCol$1[ebp], ecx
cmp	DWORD PTR _zKey$2[ebp], 0
je	SHORT $LN4@fkParentIs
mov	eax, DWORD PTR _zKey$2[ebp]
push	eax
mov	ecx, DWORD PTR _pCol$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@fkParentIs
mov	eax, 1
jmp	SHORT $LN13@fkParentIs
jmp	SHORT $LN6@fkParentIs
mov	eax, DWORD PTR _pCol$1[ebp]
movzx	ecx, BYTE PTR [eax+23]
and	ecx, 1
je	SHORT $LN6@fkParentIs
mov	eax, 1
jmp	SHORT $LN13@fkParentIs
jmp	SHORT $LN8@fkParentIs
jmp	$LN11@fkParentIs
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fkChildIsModified PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@fkChildIsM
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN3@fkChildIsM
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+eax*8+36]
mov	DWORD PTR _iChildKey$1[ebp], edx
mov	eax, DWORD PTR _iChildKey$1[ebp]
mov	ecx, DWORD PTR _aChange$[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
jl	SHORT $LN2@fkChildIsM
mov	eax, 1
jmp	SHORT $LN6@fkChildIsM
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
cmp	DWORD PTR _iChildKey$1[ebp], eax
jne	SHORT $LN1@fkChildIsM
cmp	DWORD PTR _bChngRowid$[ebp], 0
je	SHORT $LN1@fkChildIsM
mov	eax, 1
jmp	SHORT $LN6@fkChildIsM
jmp	SHORT $LN4@fkChildIsM
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fkTriggerDelete PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@fkTriggerD
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pStep$1[ebp], ecx
mov	edx, DWORD PTR _pStep$1[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _dbMem$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pStep$1[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
mov	ecx, DWORD PTR _dbMem$[ebp]
push	ecx
call	_sqlite3ExprListDelete
add	esp, 8
mov	edx, DWORD PTR _pStep$1[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _dbMem$[ebp]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _dbMem$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _dbMem$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fkScanChildren PROC
push	ebp
mov	ebp, esp
sub	esp, 116				
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _pWhere$[ebp], 0
mov	DWORD PTR _iFkIfZero$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _nIncr$[ebp], 0
jge	SHORT $LN13@fkScanChil
push	0
mov	eax, DWORD PTR _pFKey$[ebp]
movzx	ecx, BYTE PTR [eax+24]
push	ecx
push	131					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _iFkIfZero$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN12@fkScanChil
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	$LN10@fkScanChil
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN16@fkScanChil
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	DWORD PTR tv83[ebp], eax
jmp	SHORT $LN17@fkScanChil
mov	DWORD PTR tv83[ebp], -1
mov	cx, WORD PTR tv83[ebp]
mov	WORD PTR _iCol$12[ebp], cx
movzx	edx, WORD PTR _iCol$12[ebp]
push	edx
mov	eax, DWORD PTR _regData$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_exprTableRegister
add	esp, 16					
mov	DWORD PTR _pLeft$4[ebp], eax
cmp	DWORD PTR _aiCol$[ebp], 0
je	SHORT $LN18@fkScanChil
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aiCol$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR tv129[ebp], edx
jmp	SHORT $LN19@fkScanChil
mov	eax, 8
imul	ecx, eax, 0
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+ecx+36]
mov	DWORD PTR tv129[ebp], eax
mov	cx, WORD PTR tv129[ebp]
mov	WORD PTR _iCol$12[ebp], cx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx]
movsx	ecx, WORD PTR _iCol$12[ebp]
imul	edx, ecx, 24
mov	eax, DWORD PTR [eax+4]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _zCol$6[ebp], ecx
mov	edx, DWORD PTR _zCol$6[ebp]
push	edx
push	27					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pRight$5[ebp], eax
push	0
mov	ecx, DWORD PTR _pRight$5[ebp]
push	ecx
mov	edx, DWORD PTR _pLeft$4[ebp]
push	edx
push	79					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pEq$3[ebp], eax
mov	ecx, DWORD PTR _pEq$3[ebp]
push	ecx
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprAnd
add	esp, 12					
mov	DWORD PTR _pWhere$[ebp], eax
jmp	$LN11@fkScanChil
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
cmp	edx, DWORD PTR [ecx]
jne	$LN9@fkScanChil
cmp	DWORD PTR _nIncr$[ebp], 0
jle	$LN9@fkScanChil
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN8@fkScanChil
push	-1
mov	edx, DWORD PTR _regData$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_exprTableRegister
add	esp, 16					
mov	DWORD PTR _pLeft$9[ebp], eax
push	-1
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+eax+56]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_exprTableColumn
add	esp, 16					
mov	DWORD PTR _pRight$10[ebp], eax
push	0
mov	edx, DWORD PTR _pRight$10[ebp]
push	edx
mov	eax, DWORD PTR _pLeft$9[ebp]
push	eax
push	78					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNe$7[ebp], eax
jmp	$LN7@fkScanChil
mov	DWORD PTR _pAll$8[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$2[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@fkScanChil
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pPk$2[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	DWORD PTR _i$[ebp], edx
jge	$LN4@fkScanChil
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$[ebp]
mov	ax, WORD PTR [ecx+edx*2]
mov	WORD PTR _iCol$11[ebp], ax
movzx	ecx, WORD PTR _iCol$11[ebp]
push	ecx
mov	edx, DWORD PTR _regData$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_exprTableRegister
add	esp, 16					
mov	DWORD PTR _pLeft$9[ebp], eax
movzx	edx, WORD PTR _iCol$11[ebp]
push	edx
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx+ecx+56]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_exprTableColumn
add	esp, 16					
mov	DWORD PTR _pRight$10[ebp], eax
push	0
mov	eax, DWORD PTR _pRight$10[ebp]
push	eax
mov	ecx, DWORD PTR _pLeft$9[ebp]
push	ecx
push	79					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pEq$1[ebp], eax
mov	eax, DWORD PTR _pEq$1[ebp]
push	eax
mov	ecx, DWORD PTR _pAll$8[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprAnd
add	esp, 12					
mov	DWORD PTR _pAll$8[ebp], eax
jmp	$LN5@fkScanChil
push	0
push	0
mov	eax, DWORD PTR _pAll$8[ebp]
push	eax
push	19					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pNe$7[ebp], eax
mov	edx, DWORD PTR _pNe$7[ebp]
push	edx
mov	eax, DWORD PTR _pWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprAnd
add	esp, 12					
mov	DWORD PTR _pWhere$[ebp], eax
push	32					
push	0
lea	edx, DWORD PTR _sNameContext$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pSrc$[ebp]
mov	DWORD PTR _sNameContext$[ebp+4], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNameContext$[ebp], ecx
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
lea	eax, DWORD PTR _sNameContext$[ebp]
push	eax
call	_sqlite3ResolveExprNames
add	esp, 8
push	0
push	0
push	0
push	0
mov	ecx, DWORD PTR _pWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pWInfo$[ebp], eax
cmp	DWORD PTR _nIncr$[ebp], 0
jle	SHORT $LN3@fkScanChil
mov	ecx, DWORD PTR _pFKey$[ebp]
movzx	edx, BYTE PTR [ecx+24]
test	edx, edx
jne	SHORT $LN3@fkScanChil
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN20@fkScanChil
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv241[ebp], edx
jmp	SHORT $LN21@fkScanChil
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv241[ebp], eax
mov	ecx, DWORD PTR tv241[ebp]
mov	BYTE PTR [ecx+21], 1
mov	edx, DWORD PTR _nIncr$[ebp]
push	edx
mov	eax, DWORD PTR _pFKey$[ebp]
movzx	ecx, BYTE PTR [eax+24]
push	ecx
push	130					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _pWInfo$[ebp], 0
je	SHORT $LN2@fkScanChil
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereEnd
add	esp, 4
mov	ecx, DWORD PTR _pWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
cmp	DWORD PTR _iFkIfZero$[ebp], 0
je	SHORT $LN14@fkScanChil
mov	eax, DWORD PTR _iFkIfZero$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprTableColumn PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
push	154					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pExpr$[ebp], eax
cmp	DWORD PTR _pExpr$[ebp], 0
je	SHORT $LN1@exprTableC
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [ecx+44], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR _iCursor$[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	ax, WORD PTR _iCol$[ebp]
mov	WORD PTR [edx+32], ax
mov	eax, DWORD PTR _pExpr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprTableRegister PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
push	0
push	159					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pExpr$[ebp], eax
cmp	DWORD PTR _pExpr$[ebp], 0
je	$LN4@exprTableR
movsx	eax, WORD PTR _iCol$[ebp]
test	eax, eax
jl	SHORT $LN3@exprTableR
movsx	ecx, WORD PTR _iCol$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
cmp	ecx, eax
je	SHORT $LN3@exprTableR
movsx	ecx, WORD PTR _iCol$[ebp]
imul	edx, ecx, 24
mov	eax, DWORD PTR _pTab$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _pCol$[ebp], edx
movsx	ecx, WORD PTR _iCol$[ebp]
mov	edx, DWORD PTR _regBase$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR _pCol$[ebp]
mov	cl, BYTE PTR [eax+21]
mov	BYTE PTR [edx+1], cl
mov	edx, DWORD PTR _pCol$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _zColl$[ebp], eax
cmp	DWORD PTR _zColl$[ebp], 0
jne	SHORT $LN2@exprTableR
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _zColl$[ebp], eax
mov	ecx, DWORD PTR _zColl$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprAddCollateString
add	esp, 12					
mov	DWORD PTR _pExpr$[ebp], eax
jmp	SHORT $LN4@exprTableR
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR _regBase$[ebp]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [eax+1], 100			
mov	eax, DWORD PTR _pExpr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fkLookupParent PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
sub	edx, 1
mov	DWORD PTR _iCur$[ebp], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iOk$[ebp], eax
cmp	DWORD PTR _nIncr$[ebp], 0
jge	SHORT $LN19@fkLookupPa
mov	ecx, DWORD PTR _iOk$[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$[ebp]
movzx	eax, BYTE PTR [edx+24]
push	eax
push	131					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN18@fkLookupPa
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	SHORT $LN16@fkLookupPa
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aiCol$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
mov	edx, DWORD PTR _regData$[ebp]
lea	eax, DWORD PTR [ecx+edx+1]
mov	DWORD PTR _iReg$4[ebp], eax
mov	ecx, DWORD PTR _iOk$[ebp]
push	ecx
mov	edx, DWORD PTR _iReg$4[ebp]
push	edx
push	76					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN17@fkLookupPa
cmp	DWORD PTR _isIgnore$[ebp], 0
jne	$LN15@fkLookupPa
cmp	DWORD PTR _pIdx$[ebp], 0
jne	$LN14@fkLookupPa
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regTemp$8[ebp], eax
mov	edx, DWORD PTR _regTemp$8[ebp]
push	edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _aiCol$[ebp]
mov	eax, DWORD PTR [edx+ecx]
mov	ecx, DWORD PTR _regData$[ebp]
lea	edx, DWORD PTR [eax+ecx+1]
push	edx
push	34					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	ecx, DWORD PTR _regTemp$8[ebp]
push	ecx
push	38					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _iMustBeInt$3[ebp], eax
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	ecx, DWORD PTR [eax]
jne	SHORT $LN13@fkLookupPa
cmp	DWORD PTR _nIncr$[ebp], 1
jne	SHORT $LN13@fkLookupPa
mov	edx, DWORD PTR _regTemp$8[ebp]
push	edx
mov	eax, DWORD PTR _iOk$[ebp]
push	eax
mov	ecx, DWORD PTR _regData$[ebp]
push	ecx
push	79					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	136					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
push	52					
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3OpenTable
add	esp, 20					
mov	edx, DWORD PTR _regTemp$8[ebp]
push	edx
push	0
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
push	67					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _iOk$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
sub	eax, 2
push	eax
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _iMustBeInt$3[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _regTemp$8[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN15@fkLookupPa
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _nCol$9[ebp], edx
mov	eax, DWORD PTR _nCol$9[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _regTemp$6[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRec$7[ebp], eax
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
push	52					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN11@fkLookupPa
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nCol$9[ebp]
jge	SHORT $LN9@fkLookupPa
mov	eax, DWORD PTR _regTemp$6[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aiCol$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
mov	ecx, DWORD PTR _regData$[ebp]
lea	edx, DWORD PTR [eax+ecx+1]
push	edx
push	33					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN10@fkLookupPa
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
cmp	edx, DWORD PTR [ecx]
jne	$LN8@fkLookupPa
cmp	DWORD PTR _nIncr$[ebp], 1
jne	$LN8@fkLookupPa
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	ecx, DWORD PTR _nCol$9[ebp]
lea	edx, DWORD PTR [eax+ecx+1]
mov	DWORD PTR _iJump$2[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN7@fkLookupPa
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nCol$9[ebp]
jge	SHORT $LN5@fkLookupPa
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aiCol$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
mov	edx, DWORD PTR _regData$[ebp]
lea	eax, DWORD PTR [ecx+edx+1]
mov	DWORD PTR _iChild$1[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
mov	edx, DWORD PTR _regData$[ebp]
lea	eax, DWORD PTR [ecx+edx+1]
mov	DWORD PTR _iParent$5[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
cmp	ecx, eax
jne	SHORT $LN4@fkLookupPa
mov	ecx, DWORD PTR _regData$[ebp]
mov	DWORD PTR _iParent$5[ebp], ecx
mov	edx, DWORD PTR _iParent$5[ebp]
push	edx
mov	eax, DWORD PTR _iJump$2[ebp]
push	eax
mov	ecx, DWORD PTR _iChild$1[ebp]
push	ecx
push	78					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN6@fkLookupPa
mov	ecx, DWORD PTR _iOk$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _nCol$9[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3IndexAffinityStr
add	esp, 8
push	eax
mov	eax, DWORD PTR _regRec$7[ebp]
push	eax
mov	ecx, DWORD PTR _nCol$9[ebp]
push	ecx
mov	edx, DWORD PTR _regTemp$6[ebp]
push	edx
push	48					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
mov	ecx, DWORD PTR _regRec$7[ebp]
push	ecx
mov	edx, DWORD PTR _iOk$[ebp]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
push	66					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	edx, DWORD PTR _regRec$7[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _nCol$9[ebp]
push	ecx
mov	edx, DWORD PTR _regTemp$6[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempRange
add	esp, 12					
mov	ecx, DWORD PTR _pFKey$[ebp]
movzx	edx, BYTE PTR [ecx+24]
test	edx, edx
jne	SHORT $LN3@fkLookupPa
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 16777216				
jne	SHORT $LN3@fkLookupPa
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
jne	SHORT $LN3@fkLookupPa
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+20]
test	edx, edx
jne	SHORT $LN3@fkLookupPa
push	4
push	-2					
push	0
push	2
push	787					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3HaltConstraint
add	esp, 24					
jmp	SHORT $LN2@fkLookupPa
cmp	DWORD PTR _nIncr$[ebp], 0
jle	SHORT $LN1@fkLookupPa
mov	ecx, DWORD PTR _pFKey$[ebp]
movzx	edx, BYTE PTR [ecx+24]
test	edx, edx
jne	SHORT $LN1@fkLookupPa
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN22@fkLookupPa
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv278[ebp], edx
jmp	SHORT $LN23@fkLookupPa
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv278[ebp], eax
mov	ecx, DWORD PTR tv278[ebp]
mov	BYTE PTR [ecx+21], 1
mov	edx, DWORD PTR _nIncr$[ebp]
push	edx
mov	eax, DWORD PTR _pFKey$[ebp]
movzx	ecx, BYTE PTR [eax+24]
push	ecx
push	130					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _iOk$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	edx, DWORD PTR _iCur$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setLikeOptFlag PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
push	1
push	2
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindFunction
add	esp, 24					
mov	DWORD PTR _pDef$[ebp], eax
cmp	DWORD PTR _pDef$[ebp], 0
je	SHORT $LN2@setLikeOpt
movzx	eax, BYTE PTR _flagVal$[ebp]
mov	ecx, DWORD PTR _pDef$[ebp]
movzx	edx, WORD PTR [ecx+2]
or	edx, eax
mov	eax, DWORD PTR _pDef$[ebp]
mov	WORD PTR [eax+2], dx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_groupConcatFinalize PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _pAccum$[ebp], eax
cmp	DWORD PTR _pAccum$[ebp], 0
je	SHORT $LN6@groupConca
mov	ecx, DWORD PTR _pAccum$[ebp]
movzx	edx, BYTE PTR [ecx+25]
cmp	edx, 2
jne	SHORT $LN4@groupConca
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error_toobig
add	esp, 4
jmp	SHORT $LN6@groupConca
mov	ecx, DWORD PTR _pAccum$[ebp]
movzx	edx, BYTE PTR [ecx+25]
cmp	edx, 1
jne	SHORT $LN2@groupConca
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error_nomem
add	esp, 4
jmp	SHORT $LN6@groupConca
push	OFFSET _sqlite3_free
push	-1
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_sqlite3StrAccumFinish
add	esp, 4
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_groupConcatStep PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN7@groupConca
jmp	$LN8@groupConca
push	28					
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _pAccum$[ebp], eax
cmp	DWORD PTR _pAccum$[ebp], 0
je	$LN8@groupConca
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$2[ebp], eax
mov	eax, DWORD PTR _pAccum$[ebp]
movzx	ecx, BYTE PTR [eax+24]
test	ecx, ecx
jne	SHORT $LN10@groupConca
mov	DWORD PTR tv78[ebp], 1
jmp	SHORT $LN11@groupConca
mov	DWORD PTR tv78[ebp], 0
mov	edx, DWORD PTR tv78[ebp]
mov	DWORD PTR _firstTerm$1[ebp], edx
mov	eax, DWORD PTR _pAccum$[ebp]
mov	BYTE PTR [eax+24], 2
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pAccum$[ebp]
mov	ecx, DWORD PTR _db$2[ebp]
mov	edx, DWORD PTR [ecx+edx+88]
mov	DWORD PTR [eax+20], edx
cmp	DWORD PTR _firstTerm$1[ebp], 0
jne	SHORT $LN5@groupConca
cmp	DWORD PTR _argc$[ebp], 2
jne	SHORT $LN4@groupConca
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zSep$[ebp], eax
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nSep$[ebp], eax
jmp	SHORT $LN3@groupConca
mov	DWORD PTR _zSep$[ebp], OFFSET $SG109371
mov	DWORD PTR _nSep$[ebp], 1
cmp	DWORD PTR _nSep$[ebp], 0
je	SHORT $LN5@groupConca
mov	eax, DWORD PTR _nSep$[ebp]
push	eax
mov	ecx, DWORD PTR _zSep$[ebp]
push	ecx
mov	edx, DWORD PTR _pAccum$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zVal$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nVal$[ebp], eax
cmp	DWORD PTR _zVal$[ebp], 0
je	SHORT $LN8@groupConca
mov	edx, DWORD PTR _nVal$[ebp]
push	edx
mov	eax, DWORD PTR _zVal$[ebp]
push	eax
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_minMaxFinalize PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _pRes$[ebp], eax
cmp	DWORD PTR _pRes$[ebp], 0
je	SHORT $LN3@minMaxFina
mov	ecx, DWORD PTR _pRes$[ebp]
movzx	edx, WORD PTR [ecx+28]
test	edx, edx
je	SHORT $LN1@minMaxFina
mov	eax, DWORD PTR _pRes$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_value
add	esp, 8
mov	edx, DWORD PTR _pRes$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_minmaxStep PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _pArg$[ebp], eax
push	40					
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _pBest$[ebp], eax
cmp	DWORD PTR _pBest$[ebp], 0
jne	SHORT $LN10@minmaxStep
jmp	$LN11@minmaxStep
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN9@minmaxStep
mov	eax, DWORD PTR _pBest$[ebp]
movzx	ecx, WORD PTR [eax+28]
test	ecx, ecx
je	SHORT $LN8@minmaxStep
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3SkipAccumulatorLoad
add	esp, 4
jmp	$LN11@minmaxStep
mov	eax, DWORD PTR _pBest$[ebp]
movzx	ecx, WORD PTR [eax+28]
test	ecx, ecx
je	$LN6@minmaxStep
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3GetFuncCollSeq
add	esp, 4
mov	DWORD PTR _pColl$1[ebp], eax
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_user_data
add	esp, 4
test	eax, eax
je	SHORT $LN13@minmaxStep
mov	DWORD PTR tv87[ebp], 1
jmp	SHORT $LN14@minmaxStep
mov	DWORD PTR tv87[ebp], 0
mov	ecx, DWORD PTR tv87[ebp]
mov	DWORD PTR _max$3[ebp], ecx
mov	edx, DWORD PTR _pColl$1[ebp]
push	edx
mov	eax, DWORD PTR _pArg$[ebp]
push	eax
mov	ecx, DWORD PTR _pBest$[ebp]
push	ecx
call	_sqlite3MemCompare
add	esp, 12					
mov	DWORD PTR _cmp$2[ebp], eax
cmp	DWORD PTR _max$3[ebp], 0
je	SHORT $LN3@minmaxStep
cmp	DWORD PTR _cmp$2[ebp], 0
jl	SHORT $LN4@minmaxStep
cmp	DWORD PTR _max$3[ebp], 0
jne	SHORT $LN5@minmaxStep
cmp	DWORD PTR _cmp$2[ebp], 0
jle	SHORT $LN5@minmaxStep
mov	edx, DWORD PTR _pArg$[ebp]
push	edx
mov	eax, DWORD PTR _pBest$[ebp]
push	eax
call	_sqlite3VdbeMemCopy
add	esp, 8
jmp	SHORT $LN2@minmaxStep
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3SkipAccumulatorLoad
add	esp, 4
jmp	SHORT $LN11@minmaxStep
mov	edx, DWORD PTR _pArg$[ebp]
push	edx
mov	eax, DWORD PTR _pBest$[ebp]
push	eax
call	_sqlite3VdbeMemCopy
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_countFinalize PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@countFinal
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR tv69[ebp], edx
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR tv69[ebp+4], eax
jmp	SHORT $LN4@countFinal
xorpd	xmm0, xmm0
movlpd	QWORD PTR tv69[ebp], xmm0
mov	ecx, DWORD PTR tv69[ebp+4]
push	ecx
mov	edx, DWORD PTR tv69[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_int64
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_countStep PROC
push	ebp
mov	ebp, esp
push	ecx
push	8
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _argc$[ebp], 0
je	SHORT $LN1@countStep
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
je	SHORT $LN3@countStep
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@countStep
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
add	eax, 1
mov	ecx, DWORD PTR [edx+4]
adc	ecx, 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR [edx+4], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_totalFinalize PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@totalFinal
mov	ecx, DWORD PTR _p$[ebp]
movsd	xmm0, QWORD PTR [ecx]
movsd	QWORD PTR tv69[ebp], xmm0
jmp	SHORT $LN4@totalFinal
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR tv69[ebp], xmm0
sub	esp, 8
movsd	xmm0, QWORD PTR tv69[ebp]
movsd	QWORD PTR [esp], xmm0
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_double
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_avgFinalize PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@avgFinaliz
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv79[ebp], ecx
mov	edx, DWORD PTR tv79[ebp]
cmp	DWORD PTR [edx+20], 0
jl	SHORT $LN1@avgFinaliz
jg	SHORT $LN4@avgFinaliz
mov	eax, DWORD PTR tv79[ebp]
cmp	DWORD PTR [eax+16], 0
jbe	SHORT $LN1@avgFinaliz
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+20]
mov	ecx, eax
call	__ltod3
mov	ecx, DWORD PTR _p$[ebp]
movsd	xmm1, QWORD PTR [ecx]
divsd	xmm1, xmm0
sub	esp, 8
movsd	QWORD PTR [esp], xmm1
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_double
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sumFinalize PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sumFinaliz
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv88[ebp], ecx
mov	edx, DWORD PTR tv88[ebp]
cmp	DWORD PTR [edx+20], 0
jl	SHORT $LN1@sumFinaliz
jg	SHORT $LN8@sumFinaliz
mov	eax, DWORD PTR tv88[ebp]
cmp	DWORD PTR [eax+16], 0
jbe	SHORT $LN1@sumFinaliz
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+24]
test	edx, edx
je	SHORT $LN4@sumFinaliz
push	-1
push	OFFSET $SG109277
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error
add	esp, 12					
jmp	SHORT $LN1@sumFinaliz
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+25]
test	edx, edx
je	SHORT $LN2@sumFinaliz
mov	eax, DWORD PTR _p$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax]
movsd	QWORD PTR [esp], xmm0
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_double
add	esp, 12					
jmp	SHORT $LN1@sumFinaliz
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR [edx+8]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_int64
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sumStep PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	32					
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_aggregate_context
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_numeric_type
add	esp, 4
mov	DWORD PTR _type$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	$LN1@sumStep
cmp	DWORD PTR _type$[ebp], 5
je	$LN1@sumStep
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
add	eax, 1
mov	ecx, DWORD PTR [edx+20]
adc	ecx, 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], eax
mov	DWORD PTR [edx+20], ecx
cmp	DWORD PTR _type$[ebp], 1
jne	SHORT $LN3@sumStep
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_int64
add	esp, 4
mov	DWORD PTR _v$1[ebp], eax
mov	DWORD PTR _v$1[ebp+4], edx
mov	edx, DWORD PTR _v$1[ebp+4]
mov	ecx, DWORD PTR _v$1[ebp]
call	__ltod3
mov	ecx, DWORD PTR _p$[ebp]
addsd	xmm0, QWORD PTR [ecx]
mov	edx, DWORD PTR _p$[ebp]
movsd	QWORD PTR [edx], xmm0
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+25]
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+24]
or	ecx, eax
jne	SHORT $LN2@sumStep
mov	ecx, DWORD PTR _v$1[ebp+4]
push	ecx
mov	edx, DWORD PTR _v$1[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 8
push	eax
call	_sqlite3AddInt64
add	esp, 12					
test	eax, eax
je	SHORT $LN2@sumStep
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+24], 1
jmp	SHORT $LN1@sumStep
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_double
add	esp, 4
fstp	QWORD PTR tv182[ebp]
mov	eax, DWORD PTR _p$[ebp]
movsd	xmm0, QWORD PTR tv182[ebp]
addsd	xmm0, QWORD PTR [eax]
mov	ecx, DWORD PTR _p$[ebp]
movsd	QWORD PTR [ecx], xmm0
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+25], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_loadExt PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zFile$[ebp], eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	DWORD PTR _zErrMsg$[ebp], 0
cmp	DWORD PTR _argc$[ebp], 2
jne	SHORT $LN3@loadExt
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zProc$[ebp], eax
jmp	SHORT $LN2@loadExt
mov	DWORD PTR _zProc$[ebp], 0
cmp	DWORD PTR _zFile$[ebp], 0
je	SHORT $LN4@loadExt
lea	edx, DWORD PTR _zErrMsg$[ebp]
push	edx
mov	eax, DWORD PTR _zProc$[ebp]
push	eax
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_load_extension
add	esp, 16					
test	eax, eax
je	SHORT $LN4@loadExt
push	-1
mov	eax, DWORD PTR _zErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_error
add	esp, 12					
mov	edx, DWORD PTR _zErrMsg$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_trimFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	DWORD PTR _aLen$[ebp], 0
mov	DWORD PTR _azChar$[ebp], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN38@trimFunc
jmp	$LN39@trimFunc
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zIn$[ebp], eax
cmp	DWORD PTR _zIn$[ebp], 0
jne	SHORT $LN37@trimFunc
jmp	$LN39@trimFunc
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nIn$[ebp], eax
cmp	DWORD PTR _argc$[ebp], 1
jne	SHORT $LN36@trimFunc
mov	DWORD PTR _nChar$[ebp], 1
mov	DWORD PTR _aLen$[ebp], OFFSET ?lenOne@?3??trimFunc@@9@9
mov	DWORD PTR _azChar$[ebp], OFFSET ?azOne@?3??trimFunc@@9@9
mov	DWORD PTR _zCharSet$[ebp], 0
jmp	$LN35@trimFunc
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zCharSet$[ebp], eax
cmp	DWORD PTR _zCharSet$[ebp], 0
jne	SHORT $LN34@trimFunc
jmp	$LN39@trimFunc
jmp	$LN35@trimFunc
mov	eax, DWORD PTR _zCharSet$[ebp]
mov	DWORD PTR _z$3[ebp], eax
mov	DWORD PTR _nChar$[ebp], 0
jmp	SHORT $LN32@trimFunc
mov	ecx, DWORD PTR _nChar$[ebp]
add	ecx, 1
mov	DWORD PTR _nChar$[ebp], ecx
mov	edx, DWORD PTR _z$3[ebp]
movzx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN30@trimFunc
mov	ecx, DWORD PTR _z$3[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv90[ebp], edx
mov	eax, DWORD PTR _z$3[ebp]
add	eax, 1
mov	DWORD PTR _z$3[ebp], eax
cmp	DWORD PTR tv90[ebp], 192		
jl	SHORT $LN29@trimFunc
mov	ecx, DWORD PTR _z$3[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 192				
cmp	edx, 128				
jne	SHORT $LN29@trimFunc
mov	eax, DWORD PTR _z$3[ebp]
add	eax, 1
mov	DWORD PTR _z$3[ebp], eax
jmp	SHORT $LN28@trimFunc
jmp	SHORT $LN31@trimFunc
cmp	DWORD PTR _nChar$[ebp], 0
jle	$LN35@trimFunc
mov	eax, DWORD PTR _nChar$[ebp]
cdq
push	0
push	5
push	edx
push	eax
call	__allmul
push	edx
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _azChar$[ebp], eax
cmp	DWORD PTR _azChar$[ebp], 0
jne	SHORT $LN25@trimFunc
jmp	$LN39@trimFunc
mov	edx, DWORD PTR _nChar$[ebp]
mov	eax, DWORD PTR _azChar$[ebp]
lea	ecx, DWORD PTR [eax+edx*4]
mov	DWORD PTR _aLen$[ebp], ecx
mov	edx, DWORD PTR _zCharSet$[ebp]
mov	DWORD PTR _z$3[ebp], edx
mov	DWORD PTR _nChar$[ebp], 0
jmp	SHORT $LN24@trimFunc
mov	eax, DWORD PTR _nChar$[ebp]
add	eax, 1
mov	DWORD PTR _nChar$[ebp], eax
mov	ecx, DWORD PTR _z$3[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN35@trimFunc
mov	eax, DWORD PTR _nChar$[ebp]
mov	ecx, DWORD PTR _azChar$[ebp]
mov	edx, DWORD PTR _z$3[ebp]
mov	DWORD PTR [ecx+eax*4], edx
mov	eax, DWORD PTR _z$3[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv144[ebp], ecx
mov	edx, DWORD PTR _z$3[ebp]
add	edx, 1
mov	DWORD PTR _z$3[ebp], edx
cmp	DWORD PTR tv144[ebp], 192		
jl	SHORT $LN21@trimFunc
mov	eax, DWORD PTR _z$3[ebp]
movzx	ecx, BYTE PTR [eax]
and	ecx, 192				
cmp	ecx, 128				
jne	SHORT $LN21@trimFunc
mov	edx, DWORD PTR _z$3[ebp]
add	edx, 1
mov	DWORD PTR _z$3[ebp], edx
jmp	SHORT $LN20@trimFunc
mov	eax, DWORD PTR _nChar$[ebp]
mov	ecx, DWORD PTR _azChar$[ebp]
mov	edx, DWORD PTR _z$3[ebp]
sub	edx, DWORD PTR [ecx+eax*4]
mov	eax, DWORD PTR _aLen$[ebp]
add	eax, DWORD PTR _nChar$[ebp]
mov	BYTE PTR [eax], dl
jmp	SHORT $LN23@trimFunc
cmp	DWORD PTR _nChar$[ebp], 0
jle	$LN18@trimFunc
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_user_data
add	esp, 4
mov	DWORD PTR _flags$[ebp], eax
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 1
je	SHORT $LN17@trimFunc
cmp	DWORD PTR _nIn$[ebp], 0
jle	SHORT $LN17@trimFunc
mov	DWORD PTR _len$2[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN14@trimFunc
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nChar$[ebp]
jge	SHORT $LN12@trimFunc
mov	edx, DWORD PTR _aLen$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _len$2[ebp], eax
mov	ecx, DWORD PTR _len$2[ebp]
cmp	ecx, DWORD PTR _nIn$[ebp]
jg	SHORT $LN11@trimFunc
mov	edx, DWORD PTR _len$2[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _azChar$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _zIn$[ebp]
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN11@trimFunc
jmp	SHORT $LN12@trimFunc
jmp	SHORT $LN13@trimFunc
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nChar$[ebp]
jl	SHORT $LN10@trimFunc
jmp	SHORT $LN17@trimFunc
mov	edx, DWORD PTR _zIn$[ebp]
add	edx, DWORD PTR _len$2[ebp]
mov	DWORD PTR _zIn$[ebp], edx
mov	eax, DWORD PTR _nIn$[ebp]
sub	eax, DWORD PTR _len$2[ebp]
mov	DWORD PTR _nIn$[ebp], eax
jmp	SHORT $LN16@trimFunc
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 2
je	SHORT $LN9@trimFunc
cmp	DWORD PTR _nIn$[ebp], 0
jle	SHORT $LN9@trimFunc
mov	DWORD PTR _len$1[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@trimFunc
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nChar$[ebp]
jge	SHORT $LN4@trimFunc
mov	ecx, DWORD PTR _aLen$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _len$1[ebp], edx
mov	eax, DWORD PTR _len$1[ebp]
cmp	eax, DWORD PTR _nIn$[ebp]
jg	SHORT $LN3@trimFunc
mov	ecx, DWORD PTR _len$1[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _azChar$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
mov	edx, DWORD PTR _nIn$[ebp]
sub	edx, DWORD PTR _len$1[ebp]
add	edx, DWORD PTR _zIn$[ebp]
push	edx
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN3@trimFunc
jmp	SHORT $LN4@trimFunc
jmp	SHORT $LN5@trimFunc
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nChar$[ebp]
jl	SHORT $LN2@trimFunc
jmp	SHORT $LN9@trimFunc
mov	ecx, DWORD PTR _nIn$[ebp]
sub	ecx, DWORD PTR _len$1[ebp]
mov	DWORD PTR _nIn$[ebp], ecx
jmp	SHORT $LN8@trimFunc
cmp	DWORD PTR _zCharSet$[ebp], 0
je	SHORT $LN18@trimFunc
mov	edx, DWORD PTR _azChar$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
push	-1
mov	eax, DWORD PTR _nIn$[ebp]
push	eax
mov	ecx, DWORD PTR _zIn$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_replaceFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 72					
push	esi
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zStr$[ebp], eax
cmp	DWORD PTR _zStr$[ebp], 0
jne	SHORT $LN13@replaceFun
jmp	$LN14@replaceFun
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nStr$[ebp], eax
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zPattern$[ebp], eax
cmp	DWORD PTR _zPattern$[ebp], 0
jne	SHORT $LN12@replaceFun
jmp	$LN14@replaceFun
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zPattern$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
test	edx, edx
jne	SHORT $LN11@replaceFun
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_value
add	esp, 8
jmp	$LN14@replaceFun
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nPattern$[ebp], eax
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zRep$[ebp], eax
cmp	DWORD PTR _zRep$[ebp], 0
jne	SHORT $LN10@replaceFun
jmp	$LN14@replaceFun
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nRep$[ebp], eax
mov	eax, DWORD PTR _nStr$[ebp]
add	eax, 1
cdq
mov	DWORD PTR _nOut$[ebp], eax
mov	DWORD PTR _nOut$[ebp+4], edx
mov	edx, DWORD PTR _nOut$[ebp+4]
push	edx
mov	eax, DWORD PTR _nOut$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _zOut$[ebp], eax
cmp	DWORD PTR _zOut$[ebp], 0
jne	SHORT $LN9@replaceFun
jmp	$LN14@replaceFun
mov	edx, DWORD PTR _nStr$[ebp]
sub	edx, DWORD PTR _nPattern$[ebp]
mov	DWORD PTR _loopLimit$[ebp], edx
mov	DWORD PTR _j$[ebp], 0
mov	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN8@replaceFun
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _loopLimit$[ebp]
jg	$LN6@replaceFun
mov	eax, DWORD PTR _zStr$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	edx, 1
imul	eax, edx, 0
mov	edx, DWORD PTR _zPattern$[ebp]
movzx	eax, BYTE PTR [edx+eax]
cmp	ecx, eax
jne	SHORT $LN4@replaceFun
mov	ecx, DWORD PTR _nPattern$[ebp]
push	ecx
mov	edx, DWORD PTR _zPattern$[ebp]
push	edx
mov	eax, DWORD PTR _zStr$[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN5@replaceFun
mov	ecx, DWORD PTR _zOut$[ebp]
add	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR _zStr$[ebp]
add	edx, DWORD PTR _i$[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR [ecx], al
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
jmp	$LN3@replaceFun
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$2[ebp], eax
mov	eax, DWORD PTR _nRep$[ebp]
sub	eax, DWORD PTR _nPattern$[ebp]
cdq
add	eax, DWORD PTR _nOut$[ebp]
adc	edx, DWORD PTR _nOut$[ebp+4]
mov	DWORD PTR _nOut$[ebp], eax
mov	DWORD PTR _nOut$[ebp+4], edx
mov	ecx, DWORD PTR _nOut$[ebp]
sub	ecx, 1
mov	esi, DWORD PTR _nOut$[ebp+4]
sbb	esi, 0
mov	edx, 4
imul	eax, edx, 0
mov	edx, DWORD PTR _db$2[ebp]
mov	eax, DWORD PTR [edx+eax+88]
cdq
mov	DWORD PTR tv286[ebp], ecx
mov	DWORD PTR tv286[ebp+4], esi
mov	DWORD PTR tv289[ebp], eax
mov	DWORD PTR tv289[ebp+4], edx
mov	eax, DWORD PTR tv286[ebp+4]
cmp	eax, DWORD PTR tv289[ebp+4]
jl	SHORT $LN2@replaceFun
jg	SHORT $LN16@replaceFun
mov	ecx, DWORD PTR tv286[ebp]
cmp	ecx, DWORD PTR tv289[ebp]
jbe	SHORT $LN2@replaceFun
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error_toobig
add	esp, 4
mov	eax, DWORD PTR _zOut$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	$LN14@replaceFun
mov	ecx, DWORD PTR _zOut$[ebp]
mov	DWORD PTR _zOld$1[ebp], ecx
mov	edx, DWORD PTR _nOut$[ebp]
push	edx
mov	eax, DWORD PTR _zOut$[ebp]
push	eax
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _zOut$[ebp], eax
cmp	DWORD PTR _zOut$[ebp], 0
jne	SHORT $LN1@replaceFun
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_error_nomem
add	esp, 4
mov	edx, DWORD PTR _zOld$1[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN14@replaceFun
mov	eax, DWORD PTR _nRep$[ebp]
push	eax
mov	ecx, DWORD PTR _zRep$[ebp]
push	ecx
mov	edx, DWORD PTR _zOut$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _j$[ebp]
add	eax, DWORD PTR _nRep$[ebp]
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _nPattern$[ebp]
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [edx+ecx-1]
mov	DWORD PTR _i$[ebp], eax
jmp	$LN7@replaceFun
mov	ecx, DWORD PTR _nStr$[ebp]
sub	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _zStr$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _zOut$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _nStr$[ebp]
sub	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR _j$[ebp]
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _zOut$[ebp]
add	edx, DWORD PTR _j$[ebp]
mov	BYTE PTR [edx], 0
push	OFFSET _sqlite3_free
mov	eax, DWORD PTR _j$[ebp]
push	eax
mov	ecx, DWORD PTR _zOut$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_zeroblobFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_int64
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	DWORD PTR _n$[ebp+4], edx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [ecx+eax+88]
cdq
mov	DWORD PTR tv129[ebp], eax
mov	DWORD PTR tv129[ebp+4], edx
mov	edx, DWORD PTR _n$[ebp+4]
cmp	edx, DWORD PTR tv129[ebp+4]
jl	SHORT $LN2@zeroblobFu
jg	SHORT $LN5@zeroblobFu
mov	eax, DWORD PTR _n$[ebp]
cmp	eax, DWORD PTR tv129[ebp]
jbe	SHORT $LN2@zeroblobFu
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_error_toobig
add	esp, 4
jmp	SHORT $LN3@zeroblobFu
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_zeroblob
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_hexFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _pBlob$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	eax, DWORD PTR _n$[ebp]
cdq
push	0
push	2
push	edx
push	eax
call	__allmul
add	eax, 1
adc	edx, 0
push	edx
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _zHex$[ebp], eax
mov	eax, DWORD PTR _zHex$[ebp]
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _zHex$[ebp], 0
je	$LN5@hexFunc
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@hexFunc
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pBlob$[ebp]
add	edx, 1
mov	DWORD PTR _pBlob$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _n$[ebp]
jge	SHORT $LN1@hexFunc
mov	ecx, DWORD PTR _pBlob$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR _c$1[ebp], dl
movzx	eax, BYTE PTR _c$1[ebp]
sar	eax, 4
and	eax, 15					
mov	ecx, DWORD PTR _z$[ebp]
mov	dl, BYTE PTR _hexdigits[eax]
mov	BYTE PTR [ecx], dl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
movzx	ecx, BYTE PTR _c$1[ebp]
and	ecx, 15					
mov	edx, DWORD PTR _z$[ebp]
mov	al, BYTE PTR _hexdigits[ecx]
mov	BYTE PTR [edx], al
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	SHORT $LN2@hexFunc
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], 0
push	OFFSET _sqlite3_free
mov	eax, DWORD PTR _n$[ebp]
shl	eax, 1
push	eax
mov	ecx, DWORD PTR _zHex$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_charFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _argc$[ebp]
lea	ecx, DWORD PTR [eax*4+1]
push	ecx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
mov	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR _zOut$[ebp], edx
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN12@charFunc
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error_nomem
add	esp, 4
jmp	$LN13@charFunc
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN11@charFunc
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _argc$[ebp]
jge	$LN9@charFunc
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
call	_sqlite3_value_int64
add	esp, 4
mov	DWORD PTR _x$1[ebp], eax
mov	DWORD PTR _x$1[ebp+4], edx
cmp	DWORD PTR _x$1[ebp+4], 0
jl	SHORT $LN7@charFunc
jg	SHORT $LN15@charFunc
cmp	DWORD PTR _x$1[ebp], 0
jb	SHORT $LN7@charFunc
cmp	DWORD PTR _x$1[ebp+4], 0
jl	SHORT $LN8@charFunc
jg	SHORT $LN7@charFunc
cmp	DWORD PTR _x$1[ebp], 1114111		
jbe	SHORT $LN8@charFunc
mov	DWORD PTR _x$1[ebp], 65533		
mov	DWORD PTR _x$1[ebp+4], 0
mov	eax, DWORD PTR _x$1[ebp]
and	eax, 2097151				
mov	ecx, DWORD PTR _x$1[ebp+4]
and	ecx, 0
mov	DWORD PTR _c$2[ebp], eax
cmp	DWORD PTR _c$2[ebp], 128		
jae	SHORT $LN6@charFunc
mov	edx, DWORD PTR _c$2[ebp]
and	edx, 255				
mov	eax, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _zOut$[ebp]
add	ecx, 1
mov	DWORD PTR _zOut$[ebp], ecx
jmp	$LN5@charFunc
cmp	DWORD PTR _c$2[ebp], 2048		
jae	SHORT $LN4@charFunc
mov	edx, DWORD PTR _c$2[ebp]
shr	edx, 6
and	edx, 31					
movzx	eax, dl
add	eax, 192				
mov	ecx, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _zOut$[ebp]
add	edx, 1
mov	DWORD PTR _zOut$[ebp], edx
mov	eax, DWORD PTR _c$2[ebp]
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _zOut$[ebp]
add	eax, 1
mov	DWORD PTR _zOut$[ebp], eax
jmp	$LN5@charFunc
cmp	DWORD PTR _c$2[ebp], 65536		
jae	SHORT $LN2@charFunc
mov	ecx, DWORD PTR _c$2[ebp]
shr	ecx, 12					
and	ecx, 15					
movzx	edx, cl
add	edx, 224				
mov	eax, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _zOut$[ebp]
add	ecx, 1
mov	DWORD PTR _zOut$[ebp], ecx
mov	edx, DWORD PTR _c$2[ebp]
shr	edx, 6
and	edx, 63					
movzx	eax, dl
add	eax, 128				
mov	ecx, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _zOut$[ebp]
add	edx, 1
mov	DWORD PTR _zOut$[ebp], edx
mov	eax, DWORD PTR _c$2[ebp]
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _zOut$[ebp]
add	eax, 1
mov	DWORD PTR _zOut$[ebp], eax
jmp	SHORT $LN5@charFunc
mov	ecx, DWORD PTR _c$2[ebp]
shr	ecx, 18					
and	ecx, 7
movzx	edx, cl
add	edx, 240				
mov	eax, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _zOut$[ebp]
add	ecx, 1
mov	DWORD PTR _zOut$[ebp], ecx
mov	edx, DWORD PTR _c$2[ebp]
shr	edx, 12					
and	edx, 63					
movzx	eax, dl
add	eax, 128				
mov	ecx, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _zOut$[ebp]
add	edx, 1
mov	DWORD PTR _zOut$[ebp], edx
mov	eax, DWORD PTR _c$2[ebp]
shr	eax, 6
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _zOut$[ebp]
add	eax, 1
mov	DWORD PTR _zOut$[ebp], eax
mov	ecx, DWORD PTR _c$2[ebp]
and	ecx, 63					
movzx	edx, cl
add	edx, 128				
mov	eax, DWORD PTR _zOut$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _zOut$[ebp]
add	ecx, 1
mov	DWORD PTR _zOut$[ebp], ecx
jmp	$LN10@charFunc
push	OFFSET _sqlite3_free
mov	edx, DWORD PTR _zOut$[ebp]
sub	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_unicodeFunc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN2@unicodeFun
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN2@unicodeFun
lea	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3Utf8Read
add	esp, 4
push	eax
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_int
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_quoteFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 116				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR tv68[ebp], eax
mov	ecx, DWORD PTR tv68[ebp]
sub	ecx, 1
mov	DWORD PTR tv68[ebp], ecx
cmp	DWORD PTR tv68[ebp], 3
ja	$LN1@quoteFunc
mov	edx, DWORD PTR tv68[ebp]
jmp	DWORD PTR $LN25@quoteFunc[edx*4]
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_double
add	esp, 4
fstp	QWORD PTR _r1$2[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR _r1$2[ebp]
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG108976
lea	ecx, DWORD PTR _zBuf$12[ebp]
push	ecx
push	50					
call	_sqlite3_snprintf
add	esp, 20					
push	1
push	20					
lea	edx, DWORD PTR _r2$1[ebp]
push	edx
lea	eax, DWORD PTR _zBuf$12[ebp]
push	eax
call	_sqlite3AtoF
add	esp, 16					
movsd	xmm0, QWORD PTR _r1$2[ebp]
ucomisd	xmm0, QWORD PTR _r2$1[ebp]
lahf
test	ah, 68					
jnp	SHORT $LN19@quoteFunc
sub	esp, 8
movsd	xmm0, QWORD PTR _r1$2[ebp]
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG108978
lea	ecx, DWORD PTR _zBuf$12[ebp]
push	ecx
push	50					
call	_sqlite3_snprintf
add	esp, 20					
push	-1
push	-1
lea	edx, DWORD PTR _zBuf$12[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_text
add	esp, 16					
jmp	$LN21@quoteFunc
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_value
add	esp, 8
jmp	$LN21@quoteFunc
mov	DWORD PTR _zText$9[ebp], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _zBlob$3[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nBlob$5[ebp], eax
mov	eax, DWORD PTR _nBlob$5[ebp]
cdq
push	0
push	2
push	edx
push	eax
call	__allmul
add	eax, 4
adc	edx, 0
push	edx
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _zText$9[ebp], eax
cmp	DWORD PTR _zText$9[ebp], 0
je	$LN16@quoteFunc
mov	DWORD PTR _i$8[ebp], 0
jmp	SHORT $LN15@quoteFunc
mov	eax, DWORD PTR _i$8[ebp]
add	eax, 1
mov	DWORD PTR _i$8[ebp], eax
mov	ecx, DWORD PTR _i$8[ebp]
cmp	ecx, DWORD PTR _nBlob$5[ebp]
jge	SHORT $LN13@quoteFunc
mov	edx, DWORD PTR _zBlob$3[ebp]
add	edx, DWORD PTR _i$8[ebp]
movsx	eax, BYTE PTR [edx]
sar	eax, 4
and	eax, 15					
mov	ecx, DWORD PTR _i$8[ebp]
mov	edx, DWORD PTR _zText$9[ebp]
mov	al, BYTE PTR _hexdigits[eax]
mov	BYTE PTR [edx+ecx*2+2], al
mov	ecx, DWORD PTR _zBlob$3[ebp]
add	ecx, DWORD PTR _i$8[ebp]
movsx	edx, BYTE PTR [ecx]
and	edx, 15					
mov	eax, DWORD PTR _i$8[ebp]
mov	ecx, DWORD PTR _zText$9[ebp]
mov	dl, BYTE PTR _hexdigits[edx]
mov	BYTE PTR [ecx+eax*2+3], dl
jmp	SHORT $LN14@quoteFunc
mov	eax, DWORD PTR _nBlob$5[ebp]
mov	ecx, DWORD PTR _zText$9[ebp]
mov	BYTE PTR [ecx+eax*2+2], 39		
mov	edx, DWORD PTR _nBlob$5[ebp]
mov	eax, DWORD PTR _zText$9[ebp]
mov	BYTE PTR [eax+edx*2+3], 0
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zText$9[ebp]
mov	BYTE PTR [eax+edx], 88			
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _zText$9[ebp]
mov	BYTE PTR [edx+ecx], 39			
push	-1
push	-1
mov	eax, DWORD PTR _zText$9[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	edx, DWORD PTR _zText$9[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
jmp	$LN21@quoteFunc
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zArg$6[ebp], eax
cmp	DWORD PTR _zArg$6[ebp], 0
jne	SHORT $LN11@quoteFunc
jmp	$LN21@quoteFunc
mov	DWORD PTR _i$10[ebp], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _n$4[ebp], xmm0
jmp	SHORT $LN10@quoteFunc
mov	ecx, DWORD PTR _i$10[ebp]
add	ecx, 1
mov	DWORD PTR _i$10[ebp], ecx
mov	edx, DWORD PTR _zArg$6[ebp]
add	edx, DWORD PTR _i$10[ebp]
movzx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN8@quoteFunc
mov	ecx, DWORD PTR _zArg$6[ebp]
add	ecx, DWORD PTR _i$10[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 39					
jne	SHORT $LN7@quoteFunc
mov	eax, DWORD PTR _n$4[ebp]
add	eax, 1
mov	ecx, DWORD PTR _n$4[ebp+4]
adc	ecx, 0
mov	DWORD PTR _n$4[ebp], eax
mov	DWORD PTR _n$4[ebp+4], ecx
jmp	SHORT $LN9@quoteFunc
mov	eax, DWORD PTR _i$10[ebp]
cdq
add	eax, DWORD PTR _n$4[ebp]
adc	edx, DWORD PTR _n$4[ebp+4]
add	eax, 3
adc	edx, 0
push	edx
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _z$7[ebp], eax
cmp	DWORD PTR _z$7[ebp], 0
je	$LN6@quoteFunc
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _z$7[ebp]
mov	BYTE PTR [edx+ecx], 39			
mov	DWORD PTR _i$10[ebp], 0
mov	DWORD PTR _j$11[ebp], 1
jmp	SHORT $LN5@quoteFunc
mov	eax, DWORD PTR _i$10[ebp]
add	eax, 1
mov	DWORD PTR _i$10[ebp], eax
mov	ecx, DWORD PTR _zArg$6[ebp]
add	ecx, DWORD PTR _i$10[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN3@quoteFunc
mov	eax, DWORD PTR _z$7[ebp]
add	eax, DWORD PTR _j$11[ebp]
mov	ecx, DWORD PTR _zArg$6[ebp]
add	ecx, DWORD PTR _i$10[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR [eax], dl
mov	eax, DWORD PTR _j$11[ebp]
add	eax, 1
mov	DWORD PTR _j$11[ebp], eax
mov	ecx, DWORD PTR _zArg$6[ebp]
add	ecx, DWORD PTR _i$10[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 39					
jne	SHORT $LN2@quoteFunc
mov	eax, DWORD PTR _z$7[ebp]
add	eax, DWORD PTR _j$11[ebp]
mov	BYTE PTR [eax], 39			
mov	ecx, DWORD PTR _j$11[ebp]
add	ecx, 1
mov	DWORD PTR _j$11[ebp], ecx
jmp	SHORT $LN4@quoteFunc
mov	edx, DWORD PTR _z$7[ebp]
add	edx, DWORD PTR _j$11[ebp]
mov	BYTE PTR [edx], 39			
mov	eax, DWORD PTR _j$11[ebp]
add	eax, 1
mov	DWORD PTR _j$11[ebp], eax
mov	ecx, DWORD PTR _z$7[ebp]
add	ecx, DWORD PTR _j$11[ebp]
mov	BYTE PTR [ecx], 0
push	OFFSET _sqlite3_free
mov	edx, DWORD PTR _j$11[ebp]
push	edx
mov	eax, DWORD PTR _z$7[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
jmp	SHORT $LN21@quoteFunc
push	0
push	4
push	OFFSET $SG109015
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
DD	$LN18@quoteFunc
DD	$LN20@quoteFunc
DD	$LN12@quoteFunc
DD	$LN17@quoteFunc
ENDP
_compileoptiongetFunc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_int
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
push	0
push	-1
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
call	_sqlite3_compileoption_get
add	esp, 4
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_compileoptionusedFunc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zOptName$[ebp], eax
cmp	DWORD PTR _zOptName$[ebp], 0
je	SHORT $LN2@compileopt
mov	ecx, DWORD PTR _zOptName$[ebp]
push	ecx
call	_sqlite3_compileoption_used
add	esp, 4
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_int
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_errlogFunc PROC
push	ebp
mov	ebp, esp
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_text
add	esp, 4
push	eax
push	OFFSET $SG108931
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_int
add	esp, 4
push	eax
call	_sqlite3_log
add	esp, 12					
pop	ebp
ret	0
ENDP
_sourceidFunc PROC
push	ebp
mov	ebp, esp
push	0
push	-1
call	_sqlite3_sourceid
push	eax
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_text
add	esp, 16					
pop	ebp
ret	0
ENDP
_versionFunc PROC
push	ebp
mov	ebp, esp
push	0
push	-1
call	_sqlite3_libversion
push	eax
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_text
add	esp, 16					
pop	ebp
ret	0
ENDP
_nullifFunc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3GetFuncCollSeq
add	esp, 4
mov	DWORD PTR _pColl$[ebp], eax
mov	ecx, DWORD PTR _pColl$[ebp]
push	ecx
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3MemCompare
add	esp, 12					
test	eax, eax
je	SHORT $LN2@nullifFunc
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_value
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_likeFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _escape$[ebp], 0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zB$[ebp], eax
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zA$[ebp], eax
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nPat$[ebp], eax
mov	eax, 4
shl	eax, 3
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _nPat$[ebp]
cmp	edx, DWORD PTR [ecx+eax+88]
jle	SHORT $LN5@likeFunc
push	-1
push	OFFSET $SG108878
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error
add	esp, 12					
jmp	$LN6@likeFunc
cmp	DWORD PTR _argc$[ebp], 3
jne	SHORT $LN4@likeFunc
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zEsc$2[ebp], eax
cmp	DWORD PTR _zEsc$2[ebp], 0
jne	SHORT $LN3@likeFunc
jmp	SHORT $LN6@likeFunc
push	-1
mov	ecx, DWORD PTR _zEsc$2[ebp]
push	ecx
call	_sqlite3Utf8CharLen
add	esp, 8
cmp	eax, 1
je	SHORT $LN2@likeFunc
push	-1
push	OFFSET $SG108885
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error
add	esp, 12					
jmp	SHORT $LN6@likeFunc
lea	eax, DWORD PTR _zEsc$2[ebp]
push	eax
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _escape$[ebp], eax
cmp	DWORD PTR _zA$[ebp], 0
je	SHORT $LN6@likeFunc
cmp	DWORD PTR _zB$[ebp], 0
je	SHORT $LN6@likeFunc
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_user_data
add	esp, 4
mov	DWORD PTR _pInfo$1[ebp], eax
mov	edx, DWORD PTR _escape$[ebp]
push	edx
mov	eax, DWORD PTR _pInfo$1[ebp]
push	eax
mov	ecx, DWORD PTR _zA$[ebp]
push	ecx
mov	edx, DWORD PTR _zB$[ebp]
push	edx
call	_patternCompare
add	esp, 16					
push	eax
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_int
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_patternCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, DWORD PTR _pInfo$[ebp]
mov	cl, BYTE PTR [eax+1]
mov	BYTE PTR _matchOne$[ebp], cl
mov	edx, DWORD PTR _pInfo$[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR _matchAll$[ebp], al
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	dl, BYTE PTR [ecx+2]
mov	BYTE PTR _matchSet$[ebp], dl
mov	eax, DWORD PTR _pInfo$[ebp]
mov	cl, BYTE PTR [eax+3]
mov	BYTE PTR _noCase$[ebp], cl
mov	DWORD PTR _prevEscape$[ebp], 0
lea	edx, DWORD PTR _zPattern$[ebp]
push	edx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
je	$LN54@patternCom
movzx	eax, BYTE PTR _matchAll$[ebp]
cmp	DWORD PTR _c$[ebp], eax
jne	$LN53@patternCom
cmp	DWORD PTR _prevEscape$[ebp], 0
jne	$LN53@patternCom
lea	ecx, DWORD PTR _zPattern$[ebp]
push	ecx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c$[ebp], eax
movzx	edx, BYTE PTR _matchAll$[ebp]
cmp	DWORD PTR _c$[ebp], edx
je	SHORT $LN50@patternCom
movzx	eax, BYTE PTR _matchOne$[ebp]
cmp	DWORD PTR _c$[ebp], eax
jne	SHORT $LN51@patternCom
movzx	ecx, BYTE PTR _matchOne$[ebp]
cmp	DWORD PTR _c$[ebp], ecx
jne	SHORT $LN49@patternCom
lea	edx, DWORD PTR _zString$[ebp]
push	edx
call	_sqlite3Utf8Read
add	esp, 4
test	eax, eax
jne	SHORT $LN49@patternCom
xor	eax, eax
jmp	$LN56@patternCom
jmp	SHORT $LN52@patternCom
cmp	DWORD PTR _c$[ebp], 0
jne	SHORT $LN48@patternCom
mov	eax, 1
jmp	$LN56@patternCom
jmp	$LN37@patternCom
mov	eax, DWORD PTR _c$[ebp]
cmp	eax, DWORD PTR _esc$[ebp]
jne	SHORT $LN46@patternCom
lea	ecx, DWORD PTR _zPattern$[ebp]
push	ecx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
jne	SHORT $LN45@patternCom
xor	eax, eax
jmp	$LN56@patternCom
jmp	$LN37@patternCom
movzx	edx, BYTE PTR _matchSet$[ebp]
cmp	DWORD PTR _c$[ebp], edx
jne	$LN37@patternCom
mov	eax, DWORD PTR _zString$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN41@patternCom
mov	edx, DWORD PTR _esc$[ebp]
push	edx
mov	eax, DWORD PTR _pInfo$[ebp]
push	eax
mov	ecx, DWORD PTR _zString$[ebp]
push	ecx
mov	edx, 1
imul	eax, edx, -1
add	eax, DWORD PTR _zPattern$[ebp]
push	eax
call	_patternCompare
add	esp, 16					
test	eax, eax
jne	SHORT $LN41@patternCom
mov	ecx, DWORD PTR _zString$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv137[ebp], edx
mov	eax, DWORD PTR _zString$[ebp]
add	eax, 1
mov	DWORD PTR _zString$[ebp], eax
cmp	DWORD PTR tv137[ebp], 192		
jl	SHORT $LN40@patternCom
mov	ecx, DWORD PTR _zString$[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 192				
cmp	edx, 128				
jne	SHORT $LN40@patternCom
mov	eax, DWORD PTR _zString$[ebp]
add	eax, 1
mov	DWORD PTR _zString$[ebp], eax
jmp	SHORT $LN39@patternCom
jmp	SHORT $LN42@patternCom
mov	ecx, DWORD PTR _zString$[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN58@patternCom
mov	DWORD PTR tv144[ebp], 1
jmp	SHORT $LN59@patternCom
mov	DWORD PTR tv144[ebp], 0
mov	eax, DWORD PTR tv144[ebp]
jmp	$LN56@patternCom
lea	eax, DWORD PTR _zString$[ebp]
push	eax
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
cmp	DWORD PTR _c2$[ebp], 0
je	$LN36@patternCom
movzx	ecx, BYTE PTR _noCase$[ebp]
test	ecx, ecx
je	SHORT $LN28@patternCom
mov	edx, DWORD PTR _c2$[ebp]
and	edx, -128				
jne	SHORT $LN34@patternCom
mov	eax, DWORD PTR _c2$[ebp]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[eax]
mov	DWORD PTR _c2$[ebp], ecx
mov	edx, DWORD PTR _c$[ebp]
and	edx, -128				
jne	SHORT $LN32@patternCom
mov	eax, DWORD PTR _c$[ebp]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[eax]
mov	DWORD PTR _c$[ebp], ecx
cmp	DWORD PTR _c2$[ebp], 0
je	SHORT $LN31@patternCom
mov	edx, DWORD PTR _c2$[ebp]
cmp	edx, DWORD PTR _c$[ebp]
je	SHORT $LN31@patternCom
lea	eax, DWORD PTR _zString$[ebp]
push	eax
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
mov	ecx, DWORD PTR _c2$[ebp]
and	ecx, -128				
jne	SHORT $LN30@patternCom
mov	edx, DWORD PTR _c2$[ebp]
movzx	eax, BYTE PTR _sqlite3UpperToLower[edx]
mov	DWORD PTR _c2$[ebp], eax
jmp	SHORT $LN32@patternCom
jmp	SHORT $LN29@patternCom
cmp	DWORD PTR _c2$[ebp], 0
je	SHORT $LN29@patternCom
mov	ecx, DWORD PTR _c2$[ebp]
cmp	ecx, DWORD PTR _c$[ebp]
je	SHORT $LN29@patternCom
lea	edx, DWORD PTR _zString$[ebp]
push	edx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
jmp	SHORT $LN28@patternCom
cmp	DWORD PTR _c2$[ebp], 0
jne	SHORT $LN26@patternCom
xor	eax, eax
jmp	$LN56@patternCom
mov	eax, DWORD PTR _esc$[ebp]
push	eax
mov	ecx, DWORD PTR _pInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _zString$[ebp]
push	edx
mov	eax, DWORD PTR _zPattern$[ebp]
push	eax
call	_patternCompare
add	esp, 16					
test	eax, eax
je	SHORT $LN25@patternCom
mov	eax, 1
jmp	$LN56@patternCom
jmp	$LN37@patternCom
xor	eax, eax
jmp	$LN56@patternCom
jmp	$LN24@patternCom
movzx	ecx, BYTE PTR _matchOne$[ebp]
cmp	DWORD PTR _c$[ebp], ecx
jne	SHORT $LN23@patternCom
cmp	DWORD PTR _prevEscape$[ebp], 0
jne	SHORT $LN23@patternCom
lea	edx, DWORD PTR _zString$[ebp]
push	edx
call	_sqlite3Utf8Read
add	esp, 4
test	eax, eax
jne	SHORT $LN22@patternCom
xor	eax, eax
jmp	$LN56@patternCom
jmp	$LN24@patternCom
movzx	eax, BYTE PTR _matchSet$[ebp]
cmp	DWORD PTR _c$[ebp], eax
jne	$LN20@patternCom
mov	DWORD PTR _prior_c$1[ebp], 0
mov	DWORD PTR _seen$[ebp], 0
mov	DWORD PTR _invert$[ebp], 0
lea	ecx, DWORD PTR _zString$[ebp]
push	ecx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
jne	SHORT $LN19@patternCom
xor	eax, eax
jmp	$LN56@patternCom
lea	edx, DWORD PTR _zPattern$[ebp]
push	edx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
cmp	DWORD PTR _c2$[ebp], 94			
jne	SHORT $LN18@patternCom
mov	DWORD PTR _invert$[ebp], 1
lea	eax, DWORD PTR _zPattern$[ebp]
push	eax
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
cmp	DWORD PTR _c2$[ebp], 93			
jne	SHORT $LN15@patternCom
cmp	DWORD PTR _c$[ebp], 93			
jne	SHORT $LN16@patternCom
mov	DWORD PTR _seen$[ebp], 1
lea	ecx, DWORD PTR _zPattern$[ebp]
push	ecx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
cmp	DWORD PTR _c2$[ebp], 0
je	$LN14@patternCom
cmp	DWORD PTR _c2$[ebp], 93			
je	$LN14@patternCom
cmp	DWORD PTR _c2$[ebp], 45			
jne	SHORT $LN13@patternCom
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zPattern$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
cmp	edx, 93					
je	SHORT $LN13@patternCom
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zPattern$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	SHORT $LN13@patternCom
cmp	DWORD PTR _prior_c$1[ebp], 0
jbe	SHORT $LN13@patternCom
lea	ecx, DWORD PTR _zPattern$[ebp]
push	ecx
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
mov	edx, DWORD PTR _c$[ebp]
cmp	edx, DWORD PTR _prior_c$1[ebp]
jb	SHORT $LN12@patternCom
mov	eax, DWORD PTR _c$[ebp]
cmp	eax, DWORD PTR _c2$[ebp]
ja	SHORT $LN12@patternCom
mov	DWORD PTR _seen$[ebp], 1
mov	DWORD PTR _prior_c$1[ebp], 0
jmp	SHORT $LN11@patternCom
mov	ecx, DWORD PTR _c$[ebp]
cmp	ecx, DWORD PTR _c2$[ebp]
jne	SHORT $LN10@patternCom
mov	DWORD PTR _seen$[ebp], 1
mov	edx, DWORD PTR _c2$[ebp]
mov	DWORD PTR _prior_c$1[ebp], edx
lea	eax, DWORD PTR _zPattern$[ebp]
push	eax
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
jmp	$LN15@patternCom
cmp	DWORD PTR _c2$[ebp], 0
je	SHORT $LN8@patternCom
mov	ecx, DWORD PTR _seen$[ebp]
xor	ecx, DWORD PTR _invert$[ebp]
jne	SHORT $LN9@patternCom
xor	eax, eax
jmp	$LN56@patternCom
jmp	SHORT $LN24@patternCom
mov	edx, DWORD PTR _esc$[ebp]
cmp	edx, DWORD PTR _c$[ebp]
jne	SHORT $LN6@patternCom
cmp	DWORD PTR _prevEscape$[ebp], 0
jne	SHORT $LN6@patternCom
mov	DWORD PTR _prevEscape$[ebp], 1
jmp	SHORT $LN24@patternCom
lea	eax, DWORD PTR _zString$[ebp]
push	eax
call	_sqlite3Utf8Read
add	esp, 4
mov	DWORD PTR _c2$[ebp], eax
movzx	ecx, BYTE PTR _noCase$[ebp]
test	ecx, ecx
je	SHORT $LN4@patternCom
mov	edx, DWORD PTR _c$[ebp]
and	edx, -128				
jne	SHORT $LN3@patternCom
mov	eax, DWORD PTR _c$[ebp]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[eax]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _c2$[ebp]
and	edx, -128				
jne	SHORT $LN4@patternCom
mov	eax, DWORD PTR _c2$[ebp]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[eax]
mov	DWORD PTR _c2$[ebp], ecx
mov	edx, DWORD PTR _c$[ebp]
cmp	edx, DWORD PTR _c2$[ebp]
je	SHORT $LN1@patternCom
xor	eax, eax
jmp	SHORT $LN56@patternCom
mov	DWORD PTR _prevEscape$[ebp], 0
jmp	$LN55@patternCom
mov	eax, DWORD PTR _zString$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN60@patternCom
mov	DWORD PTR tv241[ebp], 1
jmp	SHORT $LN61@patternCom
mov	DWORD PTR tv241[ebp], 0
mov	eax, DWORD PTR tv241[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_total_changes PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_total_changes
add	esp, 4
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_int
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_changes PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_changes
add	esp, 4
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_int
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_last_insert_rowid PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_last_insert_rowid
add	esp, 4
push	edx
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_int64
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_randomBlob PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_int
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _n$[ebp], 1
jge	SHORT $LN2@randomBlob
mov	DWORD PTR _n$[ebp], 1
mov	eax, DWORD PTR _n$[ebp]
cdq
push	edx
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@randomBlob
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _n$[ebp]
push	eax
call	_sqlite3_randomness
add	esp, 8
push	OFFSET _sqlite3_free
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_blob
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_randomFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 8
lea	eax, DWORD PTR _r$[ebp]
push	eax
push	8
call	_sqlite3_randomness
add	esp, 8
cmp	DWORD PTR _r$[ebp+4], 0
jg	SHORT $LN1@randomFunc
jl	SHORT $LN4@randomFunc
cmp	DWORD PTR _r$[ebp], 0
jae	SHORT $LN1@randomFunc
mov	ecx, DWORD PTR _r$[ebp]
mov	edx, DWORD PTR _r$[ebp+4]
and	edx, 2147483647				
neg	ecx
adc	edx, 0
neg	edx
mov	DWORD PTR _r$[ebp], ecx
mov	DWORD PTR _r$[ebp+4], edx
mov	eax, DWORD PTR _r$[ebp+4]
push	eax
mov	ecx, DWORD PTR _r$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_int64
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_lowerFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z2$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _z2$[ebp], 0
je	SHORT $LN6@lowerFunc
mov	eax, DWORD PTR _n$[ebp]
cdq
add	eax, 1
adc	edx, 0
push	edx
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _z1$[ebp], eax
cmp	DWORD PTR _z1$[ebp], 0
je	SHORT $LN6@lowerFunc
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@lowerFunc
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _n$[ebp]
jge	SHORT $LN1@lowerFunc
mov	edx, DWORD PTR _z2$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx]
mov	ecx, DWORD PTR _z1$[ebp]
add	ecx, DWORD PTR _i$[ebp]
mov	dl, BYTE PTR _sqlite3UpperToLower[eax]
mov	BYTE PTR [ecx], dl
jmp	SHORT $LN2@lowerFunc
push	OFFSET _sqlite3_free
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _z1$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_upperFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z2$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _z2$[ebp], 0
je	SHORT $LN6@upperFunc
mov	eax, DWORD PTR _n$[ebp]
cdq
add	eax, 1
adc	edx, 0
push	edx
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_contextMalloc
add	esp, 12					
mov	DWORD PTR _z1$[ebp], eax
cmp	DWORD PTR _z1$[ebp], 0
je	SHORT $LN6@upperFunc
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@upperFunc
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _n$[ebp]
jge	SHORT $LN1@upperFunc
mov	edx, DWORD PTR _z2$[ebp]
add	edx, DWORD PTR _i$[ebp]
movsx	eax, BYTE PTR [edx]
mov	ecx, DWORD PTR _z2$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[edx]
and	ecx, 32					
not	ecx
and	eax, ecx
mov	edx, DWORD PTR _z1$[ebp]
add	edx, DWORD PTR _i$[ebp]
mov	BYTE PTR [edx], al
jmp	SHORT $LN2@upperFunc
push	OFFSET _sqlite3_free
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _z1$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_contextMalloc PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+edx+88]
cdq
mov	DWORD PTR tv87[ebp], eax
mov	DWORD PTR tv87[ebp+4], edx
mov	ecx, DWORD PTR _nByte$[ebp+4]
cmp	ecx, DWORD PTR tv87[ebp+4]
jl	SHORT $LN3@contextMal
jg	SHORT $LN6@contextMal
mov	edx, DWORD PTR _nByte$[ebp]
cmp	edx, DWORD PTR tv87[ebp]
jbe	SHORT $LN3@contextMal
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error_toobig
add	esp, 4
mov	DWORD PTR _z$[ebp], 0
jmp	SHORT $LN2@contextMal
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN2@contextMal
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error_nomem
add	esp, 4
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_roundFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _n$[ebp], 0
cmp	DWORD PTR _argc$[ebp], 2
jne	SHORT $LN7@roundFunc
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN9@roundFunc
jmp	$LN11@roundFunc
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_int
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _n$[ebp], 30			
jle	SHORT $LN8@roundFunc
mov	DWORD PTR _n$[ebp], 30			
cmp	DWORD PTR _n$[ebp], 0
jge	SHORT $LN7@roundFunc
mov	DWORD PTR _n$[ebp], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN6@roundFunc
jmp	$LN11@roundFunc
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_double
add	esp, 4
fstp	QWORD PTR _r$[ebp]
cmp	DWORD PTR _n$[ebp], 0
jne	SHORT $LN5@roundFunc
movsd	xmm0, QWORD PTR _r$[ebp]
comisd	xmm0, QWORD PTR __real@0000000000000000
jb	SHORT $LN5@roundFunc
movsd	xmm0, QWORD PTR __real@43e0000000000000
comisd	xmm0, QWORD PTR _r$[ebp]
jbe	SHORT $LN5@roundFunc
movsd	xmm0, QWORD PTR _r$[ebp]
addsd	xmm0, QWORD PTR __real@3fe0000000000000
call	__dtol3
mov	ecx, eax
call	__ltod3
movsd	QWORD PTR _r$[ebp], xmm0
jmp	$LN2@roundFunc
cmp	DWORD PTR _n$[ebp], 0
jne	SHORT $LN3@roundFunc
movsd	xmm0, QWORD PTR __real@0000000000000000
comisd	xmm0, QWORD PTR _r$[ebp]
jbe	SHORT $LN3@roundFunc
movsd	xmm0, QWORD PTR _r$[ebp]
xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
movsd	xmm1, QWORD PTR __real@43e0000000000000
comisd	xmm1, xmm0
jbe	SHORT $LN3@roundFunc
movsd	xmm0, QWORD PTR _r$[ebp]
xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
addsd	xmm0, QWORD PTR __real@3fe0000000000000
call	__dtol3
mov	ecx, eax
call	__ltod3
xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
movsd	QWORD PTR _r$[ebp], xmm0
jmp	SHORT $LN2@roundFunc
sub	esp, 8
movsd	xmm0, QWORD PTR _r$[ebp]
movsd	QWORD PTR [esp], xmm0
mov	edx, DWORD PTR _n$[ebp]
push	edx
push	OFFSET $SG108642
call	_sqlite3_mprintf
add	esp, 16					
mov	DWORD PTR _zBuf$[ebp], eax
cmp	DWORD PTR _zBuf$[ebp], 0
jne	SHORT $LN1@roundFunc
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error_nomem
add	esp, 4
jmp	SHORT $LN11@roundFunc
push	1
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	edx, DWORD PTR _r$[ebp]
push	edx
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
call	_sqlite3AtoF
add	esp, 16					
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
sub	esp, 8
movsd	xmm0, QWORD PTR _r$[ebp]
movsd	QWORD PTR [esp], xmm0
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_double
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_substrFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
push	esi
mov	DWORD PTR _negP2$[ebp], 0
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
je	SHORT $LN39@substrFunc
cmp	DWORD PTR _argc$[ebp], 3
jne	SHORT $LN40@substrFunc
mov	eax, 4
shl	eax, 1
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN40@substrFunc
jmp	$LN41@substrFunc
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR _p0type$[ebp], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_int
add	esp, 4
cdq
mov	DWORD PTR _p1$[ebp], eax
mov	DWORD PTR _p1$[ebp+4], edx
cmp	DWORD PTR _p0type$[ebp], 4
jne	SHORT $LN38@substrFunc
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _len$[ebp], eax
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN37@substrFunc
jmp	$LN41@substrFunc
jmp	$LN36@substrFunc
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN35@substrFunc
jmp	$LN41@substrFunc
mov	DWORD PTR _len$[ebp], 0
cmp	DWORD PTR _p1$[ebp+4], 0
jg	SHORT $LN36@substrFunc
jl	SHORT $LN43@substrFunc
cmp	DWORD PTR _p1$[ebp], 0
jae	SHORT $LN36@substrFunc
mov	ecx, DWORD PTR _z$[ebp]
mov	DWORD PTR _z2$[ebp], ecx
jmp	SHORT $LN33@substrFunc
mov	edx, DWORD PTR _len$[ebp]
add	edx, 1
mov	DWORD PTR _len$[ebp], edx
mov	eax, DWORD PTR _z2$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN36@substrFunc
mov	edx, DWORD PTR _z2$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR tv138[ebp], eax
mov	ecx, DWORD PTR _z2$[ebp]
add	ecx, 1
mov	DWORD PTR _z2$[ebp], ecx
cmp	DWORD PTR tv138[ebp], 192		
jl	SHORT $LN30@substrFunc
mov	edx, DWORD PTR _z2$[ebp]
movzx	eax, BYTE PTR [edx]
and	eax, 192				
cmp	eax, 128				
jne	SHORT $LN30@substrFunc
mov	ecx, DWORD PTR _z2$[ebp]
add	ecx, 1
mov	DWORD PTR _z2$[ebp], ecx
jmp	SHORT $LN29@substrFunc
jmp	SHORT $LN32@substrFunc
cmp	DWORD PTR _argc$[ebp], 3
jne	SHORT $LN27@substrFunc
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_int
add	esp, 4
cdq
mov	DWORD PTR _p2$[ebp], eax
mov	DWORD PTR _p2$[ebp+4], edx
cmp	DWORD PTR _p2$[ebp+4], 0
jg	SHORT $LN26@substrFunc
jl	SHORT $LN44@substrFunc
cmp	DWORD PTR _p2$[ebp], 0
jae	SHORT $LN26@substrFunc
mov	edx, DWORD PTR _p2$[ebp]
neg	edx
mov	eax, DWORD PTR _p2$[ebp+4]
adc	eax, 0
neg	eax
mov	DWORD PTR _p2$[ebp], edx
mov	DWORD PTR _p2$[ebp+4], eax
mov	DWORD PTR _negP2$[ebp], 1
jmp	SHORT $LN25@substrFunc
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_context_db_handle
add	esp, 4
mov	edx, 4
imul	ecx, edx, 0
mov	eax, DWORD PTR [eax+ecx+88]
cdq
mov	DWORD PTR _p2$[ebp], eax
mov	DWORD PTR _p2$[ebp+4], edx
cmp	DWORD PTR _p1$[ebp+4], 0
jg	SHORT $LN24@substrFunc
jl	SHORT $LN45@substrFunc
cmp	DWORD PTR _p1$[ebp], 0
jae	SHORT $LN24@substrFunc
mov	eax, DWORD PTR _len$[ebp]
cdq
add	eax, DWORD PTR _p1$[ebp]
adc	edx, DWORD PTR _p1$[ebp+4]
mov	DWORD PTR _p1$[ebp], eax
mov	DWORD PTR _p1$[ebp+4], edx
cmp	DWORD PTR _p1$[ebp+4], 0
jg	SHORT $LN23@substrFunc
jl	SHORT $LN46@substrFunc
cmp	DWORD PTR _p1$[ebp], 0
jae	SHORT $LN23@substrFunc
mov	edx, DWORD PTR _p2$[ebp]
add	edx, DWORD PTR _p1$[ebp]
mov	eax, DWORD PTR _p2$[ebp+4]
adc	eax, DWORD PTR _p1$[ebp+4]
mov	DWORD PTR _p2$[ebp], edx
mov	DWORD PTR _p2$[ebp+4], eax
cmp	DWORD PTR _p2$[ebp+4], 0
jg	SHORT $LN22@substrFunc
jl	SHORT $LN47@substrFunc
cmp	DWORD PTR _p2$[ebp], 0
jae	SHORT $LN22@substrFunc
xorpd	xmm0, xmm0
movlpd	QWORD PTR _p2$[ebp], xmm0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _p1$[ebp], xmm0
jmp	SHORT $LN21@substrFunc
cmp	DWORD PTR _p1$[ebp+4], 0
jl	SHORT $LN20@substrFunc
jg	SHORT $LN48@substrFunc
cmp	DWORD PTR _p1$[ebp], 0
jbe	SHORT $LN20@substrFunc
mov	ecx, DWORD PTR _p1$[ebp]
sub	ecx, 1
mov	edx, DWORD PTR _p1$[ebp+4]
sbb	edx, 0
mov	DWORD PTR _p1$[ebp], ecx
mov	DWORD PTR _p1$[ebp+4], edx
jmp	SHORT $LN21@substrFunc
cmp	DWORD PTR _p2$[ebp+4], 0
jl	SHORT $LN21@substrFunc
jg	SHORT $LN49@substrFunc
cmp	DWORD PTR _p2$[ebp], 0
jbe	SHORT $LN21@substrFunc
mov	eax, DWORD PTR _p2$[ebp]
sub	eax, 1
mov	ecx, DWORD PTR _p2$[ebp+4]
sbb	ecx, 0
mov	DWORD PTR _p2$[ebp], eax
mov	DWORD PTR _p2$[ebp+4], ecx
cmp	DWORD PTR _negP2$[ebp], 0
je	SHORT $LN17@substrFunc
mov	edx, DWORD PTR _p1$[ebp]
sub	edx, DWORD PTR _p2$[ebp]
mov	eax, DWORD PTR _p1$[ebp+4]
sbb	eax, DWORD PTR _p2$[ebp+4]
mov	DWORD PTR _p1$[ebp], edx
mov	DWORD PTR _p1$[ebp+4], eax
cmp	DWORD PTR _p1$[ebp+4], 0
jg	SHORT $LN17@substrFunc
jl	SHORT $LN50@substrFunc
cmp	DWORD PTR _p1$[ebp], 0
jae	SHORT $LN17@substrFunc
mov	ecx, DWORD PTR _p2$[ebp]
add	ecx, DWORD PTR _p1$[ebp]
mov	edx, DWORD PTR _p2$[ebp+4]
adc	edx, DWORD PTR _p1$[ebp+4]
mov	DWORD PTR _p2$[ebp], ecx
mov	DWORD PTR _p2$[ebp+4], edx
xorpd	xmm0, xmm0
movlpd	QWORD PTR _p1$[ebp], xmm0
cmp	DWORD PTR _p0type$[ebp], 4
je	$LN15@substrFunc
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN13@substrFunc
mov	edx, DWORD PTR _p1$[ebp]
or	edx, DWORD PTR _p1$[ebp+4]
je	SHORT $LN13@substrFunc
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv178[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
cmp	DWORD PTR tv178[ebp], 192		
jl	SHORT $LN12@substrFunc
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
and	ecx, 192				
cmp	ecx, 128				
jne	SHORT $LN12@substrFunc
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
jmp	SHORT $LN11@substrFunc
mov	eax, DWORD PTR _p1$[ebp]
sub	eax, 1
mov	ecx, DWORD PTR _p1$[ebp+4]
sbb	ecx, 0
mov	DWORD PTR _p1$[ebp], eax
mov	DWORD PTR _p1$[ebp+4], ecx
jmp	SHORT $LN14@substrFunc
mov	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR _z2$[ebp], edx
jmp	SHORT $LN9@substrFunc
mov	eax, DWORD PTR _p2$[ebp]
sub	eax, 1
mov	ecx, DWORD PTR _p2$[ebp+4]
sbb	ecx, 0
mov	DWORD PTR _p2$[ebp], eax
mov	DWORD PTR _p2$[ebp+4], ecx
mov	edx, DWORD PTR _z2$[ebp]
movzx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN7@substrFunc
mov	ecx, DWORD PTR _p2$[ebp]
or	ecx, DWORD PTR _p2$[ebp+4]
je	SHORT $LN7@substrFunc
mov	edx, DWORD PTR _z2$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR tv191[ebp], eax
mov	ecx, DWORD PTR _z2$[ebp]
add	ecx, 1
mov	DWORD PTR _z2$[ebp], ecx
cmp	DWORD PTR tv191[ebp], 192		
jl	SHORT $LN6@substrFunc
mov	edx, DWORD PTR _z2$[ebp]
movzx	eax, BYTE PTR [edx]
and	eax, 192				
cmp	eax, 128				
jne	SHORT $LN6@substrFunc
mov	ecx, DWORD PTR _z2$[ebp]
add	ecx, 1
mov	DWORD PTR _z2$[ebp], ecx
jmp	SHORT $LN5@substrFunc
jmp	SHORT $LN8@substrFunc
push	-1
mov	edx, DWORD PTR _z2$[ebp]
sub	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
jmp	SHORT $LN41@substrFunc
mov	ecx, DWORD PTR _p1$[ebp]
add	ecx, DWORD PTR _p2$[ebp]
mov	esi, DWORD PTR _p1$[ebp+4]
adc	esi, DWORD PTR _p2$[ebp+4]
mov	eax, DWORD PTR _len$[ebp]
cdq
mov	DWORD PTR tv375[ebp], ecx
mov	DWORD PTR tv375[ebp+4], esi
mov	DWORD PTR tv378[ebp], eax
mov	DWORD PTR tv378[ebp+4], edx
mov	edx, DWORD PTR tv375[ebp+4]
cmp	edx, DWORD PTR tv378[ebp+4]
jl	SHORT $LN2@substrFunc
jg	SHORT $LN51@substrFunc
mov	eax, DWORD PTR tv375[ebp]
cmp	eax, DWORD PTR tv378[ebp]
jbe	SHORT $LN2@substrFunc
mov	eax, DWORD PTR _len$[ebp]
cdq
sub	eax, DWORD PTR _p1$[ebp]
sbb	edx, DWORD PTR _p1$[ebp+4]
mov	DWORD PTR _p2$[ebp], eax
mov	DWORD PTR _p2$[ebp+4], edx
cmp	DWORD PTR _p2$[ebp+4], 0
jg	SHORT $LN2@substrFunc
jl	SHORT $LN52@substrFunc
cmp	DWORD PTR _p2$[ebp], 0
jae	SHORT $LN2@substrFunc
xorpd	xmm0, xmm0
movlpd	QWORD PTR _p2$[ebp], xmm0
push	-1
mov	ecx, DWORD PTR _p2$[ebp]
push	ecx
push	0
push	1
mov	edx, DWORD PTR _p1$[ebp+4]
push	edx
mov	eax, DWORD PTR _p1$[ebp]
push	eax
call	__allmul
add	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_blob
add	esp, 16					
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_printfFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
cmp	DWORD PTR _argc$[ebp], 1
jl	$LN2@printfFunc
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zFormat$[ebp], eax
cmp	DWORD PTR _zFormat$[ebp], 0
je	SHORT $LN2@printfFunc
mov	ecx, DWORD PTR _argc$[ebp]
sub	ecx, 1
mov	DWORD PTR _x$[ebp], ecx
mov	DWORD PTR _x$[ebp+4], 0
mov	edx, DWORD PTR _argv$[ebp]
add	edx, 4
mov	DWORD PTR _x$[ebp+8], edx
push	1000000000				
push	0
push	0
lea	eax, DWORD PTR _str$[ebp]
push	eax
call	_sqlite3StrAccumInit
add	esp, 16					
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _str$[ebp], eax
lea	edx, DWORD PTR _x$[ebp]
push	edx
mov	eax, DWORD PTR _zFormat$[ebp]
push	eax
push	2
lea	ecx, DWORD PTR _str$[ebp]
push	ecx
call	_sqlite3XPrintf
add	esp, 16					
mov	edx, DWORD PTR _str$[ebp+12]
mov	DWORD PTR _n$[ebp], edx
push	OFFSET _sqlite3MallocSize
mov	eax, DWORD PTR _n$[ebp]
push	eax
lea	ecx, DWORD PTR _str$[ebp]
push	ecx
call	_sqlite3StrAccumFinish
add	esp, 4
push	eax
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_instrFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	DWORD PTR _N$[ebp], 1
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR _typeHaystack$[ebp], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR _typeNeedle$[ebp], eax
cmp	DWORD PTR _typeHaystack$[ebp], 5
je	SHORT $LN10@instrFunc
cmp	DWORD PTR _typeNeedle$[ebp], 5
jne	SHORT $LN11@instrFunc
jmp	$LN12@instrFunc
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nHaystack$[ebp], eax
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _nNeedle$[ebp], eax
cmp	DWORD PTR _typeHaystack$[ebp], 4
jne	SHORT $LN9@instrFunc
cmp	DWORD PTR _typeNeedle$[ebp], 4
jne	SHORT $LN9@instrFunc
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _zHaystack$[ebp], eax
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _zNeedle$[ebp], eax
mov	DWORD PTR _isText$[ebp], 0
jmp	SHORT $LN7@instrFunc
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zHaystack$[ebp], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zNeedle$[ebp], eax
mov	DWORD PTR _isText$[ebp], 1
mov	ecx, DWORD PTR _nNeedle$[ebp]
cmp	ecx, DWORD PTR _nHaystack$[ebp]
jg	SHORT $LN6@instrFunc
mov	edx, DWORD PTR _nNeedle$[ebp]
push	edx
mov	eax, DWORD PTR _zNeedle$[ebp]
push	eax
mov	ecx, DWORD PTR _zHaystack$[ebp]
push	ecx
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN6@instrFunc
mov	edx, DWORD PTR _N$[ebp]
add	edx, 1
mov	DWORD PTR _N$[ebp], edx
mov	eax, DWORD PTR _nHaystack$[ebp]
sub	eax, 1
mov	DWORD PTR _nHaystack$[ebp], eax
mov	ecx, DWORD PTR _zHaystack$[ebp]
add	ecx, 1
mov	DWORD PTR _zHaystack$[ebp], ecx
cmp	DWORD PTR _isText$[ebp], 0
je	SHORT $LN3@instrFunc
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zHaystack$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
and	edx, 192				
cmp	edx, 128				
je	SHORT $LN5@instrFunc
jmp	SHORT $LN7@instrFunc
mov	eax, DWORD PTR _nNeedle$[ebp]
cmp	eax, DWORD PTR _nHaystack$[ebp]
jle	SHORT $LN1@instrFunc
mov	DWORD PTR _N$[ebp], 0
mov	ecx, DWORD PTR _N$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_int
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_absFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR tv68[ebp], eax
cmp	DWORD PTR tv68[ebp], 1
je	SHORT $LN6@absFunc
cmp	DWORD PTR tv68[ebp], 5
je	$LN3@absFunc
jmp	$LN2@absFunc
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_int64
add	esp, 4
mov	DWORD PTR _iVal$2[ebp], eax
mov	DWORD PTR _iVal$2[ebp+4], edx
cmp	DWORD PTR _iVal$2[ebp+4], 0
jg	SHORT $LN5@absFunc
jl	SHORT $LN11@absFunc
cmp	DWORD PTR _iVal$2[ebp], 0
jae	SHORT $LN5@absFunc
cmp	DWORD PTR _iVal$2[ebp], 0
jne	SHORT $LN4@absFunc
cmp	DWORD PTR _iVal$2[ebp+4], -2147483648	
jne	SHORT $LN4@absFunc
push	-1
push	OFFSET $SG108498
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error
add	esp, 12					
jmp	$LN7@absFunc
mov	eax, DWORD PTR _iVal$2[ebp]
neg	eax
mov	ecx, DWORD PTR _iVal$2[ebp+4]
adc	ecx, 0
neg	ecx
mov	DWORD PTR _iVal$2[ebp], eax
mov	DWORD PTR _iVal$2[ebp+4], ecx
mov	edx, DWORD PTR _iVal$2[ebp+4]
push	edx
mov	eax, DWORD PTR _iVal$2[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_int64
add	esp, 12					
jmp	SHORT $LN7@absFunc
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_null
add	esp, 4
jmp	SHORT $LN7@absFunc
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_double
add	esp, 4
fstp	QWORD PTR _rVal$1[ebp]
movsd	xmm0, QWORD PTR __real@0000000000000000
comisd	xmm0, QWORD PTR _rVal$1[ebp]
jbe	SHORT $LN1@absFunc
movsd	xmm0, QWORD PTR _rVal$1[ebp]
xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
movsd	QWORD PTR _rVal$1[ebp], xmm0
sub	esp, 8
movsd	xmm0, QWORD PTR _rVal$1[ebp]
movsd	QWORD PTR [esp], xmm0
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_double
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_lengthFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR tv68[ebp], eax
mov	ecx, DWORD PTR tv68[ebp]
sub	ecx, 1
mov	DWORD PTR tv68[ebp], ecx
cmp	DWORD PTR tv68[ebp], 3
ja	$LN1@lengthFunc
mov	edx, DWORD PTR tv68[ebp]
jmp	DWORD PTR $LN14@lengthFunc[edx*4]
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_bytes
add	esp, 4
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_int
add	esp, 8
jmp	$LN12@lengthFunc
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z$1[ebp], eax
cmp	DWORD PTR _z$1[ebp], 0
jne	SHORT $LN7@lengthFunc
jmp	SHORT $LN12@lengthFunc
mov	DWORD PTR _len$[ebp], 0
mov	eax, DWORD PTR _z$1[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN5@lengthFunc
mov	edx, DWORD PTR _len$[ebp]
add	edx, 1
mov	DWORD PTR _len$[ebp], edx
mov	eax, DWORD PTR _z$1[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv86[ebp], ecx
mov	edx, DWORD PTR _z$1[ebp]
add	edx, 1
mov	DWORD PTR _z$1[ebp], edx
cmp	DWORD PTR tv86[ebp], 192		
jl	SHORT $LN4@lengthFunc
mov	eax, DWORD PTR _z$1[ebp]
movzx	ecx, BYTE PTR [eax]
and	ecx, 192				
cmp	ecx, 128				
jne	SHORT $LN4@lengthFunc
mov	edx, DWORD PTR _z$1[ebp]
add	edx, 1
mov	DWORD PTR _z$1[ebp], edx
jmp	SHORT $LN3@lengthFunc
jmp	SHORT $LN6@lengthFunc
mov	eax, DWORD PTR _len$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_int
add	esp, 8
jmp	SHORT $LN12@lengthFunc
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_null
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
DD	$LN9@lengthFunc
DD	$LN9@lengthFunc
DD	$LN8@lengthFunc
DD	$LN9@lengthFunc
ENDP
_typeofFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _z$[ebp], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR tv68[ebp], eax
mov	ecx, DWORD PTR tv68[ebp]
sub	ecx, 1
mov	DWORD PTR tv68[ebp], ecx
cmp	DWORD PTR tv68[ebp], 3
ja	SHORT $LN1@typeofFunc
mov	edx, DWORD PTR tv68[ebp]
jmp	DWORD PTR $LN10@typeofFunc[edx*4]
mov	DWORD PTR _z$[ebp], OFFSET $SG108441
jmp	SHORT $LN6@typeofFunc
mov	DWORD PTR _z$[ebp], OFFSET $SG108443
jmp	SHORT $LN6@typeofFunc
mov	DWORD PTR _z$[ebp], OFFSET $SG108445
jmp	SHORT $LN6@typeofFunc
mov	DWORD PTR _z$[ebp], OFFSET $SG108447
jmp	SHORT $LN6@typeofFunc
mov	DWORD PTR _z$[ebp], OFFSET $SG108449
push	0
push	-1
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN5@typeofFunc
DD	$LN3@typeofFunc
DD	$LN4@typeofFunc
DD	$LN2@typeofFunc
ENDP
_minmaxFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_user_data
add	esp, 4
test	eax, eax
jne	SHORT $LN9@minmaxFunc
mov	DWORD PTR tv67[ebp], 0
jmp	SHORT $LN10@minmaxFunc
mov	DWORD PTR tv67[ebp], -1
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _mask$[ebp], ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3GetFuncCollSeq
add	esp, 4
mov	DWORD PTR _pColl$[ebp], eax
mov	DWORD PTR _iBest$[ebp], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN6@minmaxFunc
jmp	SHORT $LN7@minmaxFunc
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN5@minmaxFunc
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _argc$[ebp]
jge	SHORT $LN3@minmaxFunc
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
call	_sqlite3_value_type
add	esp, 4
cmp	eax, 5
jne	SHORT $LN2@minmaxFunc
jmp	SHORT $LN7@minmaxFunc
mov	eax, DWORD PTR _pColl$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
mov	ecx, DWORD PTR _iBest$[ebp]
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
call	_sqlite3MemCompare
add	esp, 12					
xor	eax, DWORD PTR _mask$[ebp]
jl	SHORT $LN1@minmaxFunc
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _iBest$[ebp], ecx
jmp	SHORT $LN4@minmaxFunc
mov	edx, DWORD PTR _iBest$[ebp]
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_value
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SkipAccumulatorLoad PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _context$[ebp]
mov	BYTE PTR [eax+68], 1
pop	ebp
ret	0
ENDP
_sqlite3GetFuncCollSeq PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _context$[ebp]
mov	eax, DWORD PTR [eax+52]
pop	ebp
ret	0
ENDP
_functionSearch PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _h$[ebp]
mov	ecx, DWORD PTR _pHash$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN4@functionSe
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@functionSe
mov	edx, DWORD PTR _nFunc$[ebp]
push	edx
mov	eax, DWORD PTR _zFunc$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@functionSe
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _nFunc$[ebp]
movsx	eax, BYTE PTR [ecx+edx]
test	eax, eax
jne	SHORT $LN1@functionSe
mov	eax, DWORD PTR _p$[ebp]
jmp	SHORT $LN5@functionSe
jmp	SHORT $LN3@functionSe
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_matchQuality PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _nArg$[ebp], -2		
jne	SHORT $LN7@matchQuali
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN10@matchQuali
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+16], 0
jne	SHORT $LN10@matchQuali
mov	DWORD PTR tv69[ebp], 0
jmp	SHORT $LN11@matchQuali
mov	DWORD PTR tv69[ebp], 6
mov	eax, DWORD PTR tv69[ebp]
jmp	SHORT $LN8@matchQuali
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx]
cmp	eax, DWORD PTR _nArg$[ebp]
je	SHORT $LN6@matchQuali
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx]
test	edx, edx
jl	SHORT $LN6@matchQuali
xor	eax, eax
jmp	SHORT $LN8@matchQuali
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax]
cmp	ecx, DWORD PTR _nArg$[ebp]
jne	SHORT $LN5@matchQuali
mov	DWORD PTR _match$[ebp], 4
jmp	SHORT $LN4@matchQuali
mov	DWORD PTR _match$[ebp], 1
movzx	edx, BYTE PTR _enc$[ebp]
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 3
cmp	edx, ecx
jne	SHORT $LN3@matchQuali
mov	edx, DWORD PTR _match$[ebp]
add	edx, 2
mov	DWORD PTR _match$[ebp], edx
jmp	SHORT $LN2@matchQuali
movzx	eax, BYTE PTR _enc$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+2]
and	eax, edx
and	eax, 2
je	SHORT $LN2@matchQuali
mov	eax, DWORD PTR _match$[ebp]
add	eax, 1
mov	DWORD PTR _match$[ebp], eax
mov	eax, DWORD PTR _match$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findCollSeqEntry PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	ecx, DWORD PTR _nName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
add	eax, 420				
push	eax
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
jne	$LN3@findCollSe
cmp	DWORD PTR _create$[ebp], 0
je	$LN3@findCollSe
mov	ecx, DWORD PTR _nName$[ebp]
add	ecx, 61					
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
je	$LN3@findCollSe
mov	DWORD PTR _pDel$1[ebp], 0
mov	eax, 20					
imul	ecx, eax, 3
add	ecx, DWORD PTR _pColl$[ebp]
mov	edx, 20					
imul	eax, edx, 0
mov	edx, DWORD PTR _pColl$[ebp]
mov	DWORD PTR [edx+eax], ecx
mov	eax, 20					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pColl$[ebp]
mov	BYTE PTR [edx+ecx+4], 1
mov	eax, 20					
imul	ecx, eax, 3
add	ecx, DWORD PTR _pColl$[ebp]
mov	edx, 20					
shl	edx, 0
mov	eax, DWORD PTR _pColl$[ebp]
mov	DWORD PTR [eax+edx], ecx
mov	ecx, 20					
shl	ecx, 0
mov	edx, DWORD PTR _pColl$[ebp]
mov	BYTE PTR [edx+ecx+4], 2
mov	eax, 20					
imul	ecx, eax, 3
add	ecx, DWORD PTR _pColl$[ebp]
mov	edx, 20					
shl	edx, 1
mov	eax, DWORD PTR _pColl$[ebp]
mov	DWORD PTR [eax+edx], ecx
mov	ecx, 20					
shl	ecx, 1
mov	edx, DWORD PTR _pColl$[ebp]
mov	BYTE PTR [edx+ecx+4], 3
mov	eax, DWORD PTR _nName$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, 20					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pColl$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, 20					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pColl$[ebp]
mov	eax, DWORD PTR [edx+ecx]
mov	ecx, DWORD PTR _nName$[ebp]
mov	BYTE PTR [eax+ecx], 0
mov	edx, DWORD PTR _pColl$[ebp]
push	edx
mov	eax, DWORD PTR _nName$[ebp]
push	eax
mov	ecx, 20					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
add	edx, 420				
push	edx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pDel$1[ebp], eax
cmp	DWORD PTR _pDel$1[ebp], 0
je	SHORT $LN3@findCollSe
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	ecx, DWORD PTR _pDel$1[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	DWORD PTR _pColl$[ebp], 0
mov	eax, DWORD PTR _pColl$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_synthCollSeq PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _z$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@synthCollS
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 3
jge	SHORT $LN2@synthCollS
push	0
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR ?aEnc@?1??synthCollSeq@@9@9[ecx]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _pColl2$[ebp], eax
mov	ecx, DWORD PTR _pColl2$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN1@synthCollS
push	20					
mov	edx, DWORD PTR _pColl2$[ebp]
push	edx
mov	eax, DWORD PTR _pColl$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pColl$[ebp]
mov	DWORD PTR [ecx+16], 0
xor	eax, eax
jmp	SHORT $LN5@synthCollS
jmp	SHORT $LN3@synthCollS
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_callCollNeeded PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+212], 0
je	SHORT $LN4@callCollNe
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	DWORD PTR _zExternal$3[ebp], eax
cmp	DWORD PTR _zExternal$3[ebp], 0
jne	SHORT $LN3@callCollNe
jmp	$LN5@callCollNe
mov	eax, DWORD PTR _zExternal$3[ebp]
push	eax
mov	ecx, DWORD PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+220]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+212]
call	eax
add	esp, 16					
mov	ecx, DWORD PTR _zExternal$3[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+216], 0
je	SHORT $LN5@callCollNe
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ValueNew
add	esp, 4
mov	DWORD PTR _pTmp$2[ebp], eax
push	0
push	1
mov	edx, DWORD PTR _zName$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _pTmp$2[ebp]
push	eax
call	_sqlite3ValueSetStr
add	esp, 20					
push	2
mov	ecx, DWORD PTR _pTmp$2[ebp]
push	ecx
call	_sqlite3ValueText
add	esp, 8
mov	DWORD PTR _zExternal$1[ebp], eax
cmp	DWORD PTR _zExternal$1[ebp], 0
je	SHORT $LN1@callCollNe
mov	edx, DWORD PTR _zExternal$1[ebp]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
movzx	edx, BYTE PTR [ecx+77]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+220]
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+216]
call	ecx
add	esp, 16					
mov	edx, DWORD PTR _pTmp$2[ebp]
push	edx
call	_sqlite3ValueFree
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_reindexDatabases PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _iDb$[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pDb$[ebp], eax
jmp	SHORT $LN6@reindexDat
mov	ecx, DWORD PTR _iDb$[ebp]
add	ecx, 1
mov	DWORD PTR _iDb$[ebp], ecx
mov	edx, DWORD PTR _pDb$[ebp]
add	edx, 16					
mov	DWORD PTR _pDb$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _iDb$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	SHORT $LN7@reindexDat
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _k$[ebp], ecx
jmp	SHORT $LN3@reindexDat
mov	edx, DWORD PTR _k$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _k$[ebp], eax
cmp	DWORD PTR _k$[ebp], 0
je	SHORT $LN1@reindexDat
mov	ecx, DWORD PTR _k$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTab$[ebp], edx
mov	eax, DWORD PTR _zColl$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_reindexTable
add	esp, 12					
jmp	SHORT $LN2@reindexDat
jmp	SHORT $LN5@reindexDat
mov	esp, ebp
pop	ebp
ret	0
ENDP
_reindexTable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIndex$[ebp], ecx
jmp	SHORT $LN5@reindexTab
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIndex$[ebp], eax
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN6@reindexTab
cmp	DWORD PTR _zColl$[ebp], 0
je	SHORT $LN1@reindexTab
mov	ecx, DWORD PTR _pIndex$[ebp]
push	ecx
mov	edx, DWORD PTR _zColl$[ebp]
push	edx
call	_collationMatch
add	esp, 8
test	eax, eax
je	SHORT $LN2@reindexTab
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$1[ebp], eax
mov	ecx, DWORD PTR _iDb$1[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BeginWriteOperation
add	esp, 12					
push	-1
mov	eax, DWORD PTR _pIndex$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3RefillIndex
add	esp, 12					
jmp	SHORT $LN4@reindexTab
mov	esp, ebp
pop	ebp
ret	0
ENDP
_collationMatch PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@collationM
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pIndex$[ebp]
movzx	edx, WORD PTR [ecx+52]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN2@collationM
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _z$1[ebp], eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
test	ecx, ecx
jl	SHORT $LN1@collationM
mov	edx, DWORD PTR _zColl$[ebp]
push	edx
mov	eax, DWORD PTR _z$1[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@collationM
mov	eax, 1
jmp	SHORT $LN5@collationM
jmp	SHORT $LN3@collationM
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RefillIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pTab$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _iTab$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _iIdx$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
push	edx
push	0
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	27					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN7@sqlite3Ref
jmp	$LN8@sqlite3Ref
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	1
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TableLock
add	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN6@sqlite3Ref
jmp	$LN8@sqlite3Ref
cmp	DWORD PTR _memRootPage$[ebp], 0
jl	SHORT $LN5@sqlite3Ref
mov	ecx, DWORD PTR _memRootPage$[ebp]
mov	DWORD PTR _tnum$[ebp], ecx
jmp	SHORT $LN4@sqlite3Ref
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	DWORD PTR _tnum$[ebp], eax
mov	ecx, DWORD PTR _pIndex$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3KeyInfoOfIndex
add	esp, 8
mov	DWORD PTR _pKey$[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iSorter$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
push	-6					
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
call	_sqlite3KeyInfoRef
add	esp, 4
push	eax
push	0
push	0
mov	eax, DWORD PTR _iSorter$[ebp]
push	eax
push	56					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	52					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3OpenTable
add	esp, 20					
push	0
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
push	105					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr1$[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRecord$[ebp], eax
push	0
push	0
lea	eax, DWORD PTR _iPartIdxLabel$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _regRecord$[ebp]
push	ecx
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _pIndex$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GenerateIndexKey
add	esp, 32					
mov	edx, DWORD PTR _regRecord$[ebp]
push	edx
mov	eax, DWORD PTR _iSorter$[ebp]
push	eax
push	106					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _iPartIdxLabel$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ResolvePartIdxLabel
add	esp, 8
mov	ecx, DWORD PTR _addr1$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
push	9
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addr1$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
cmp	DWORD PTR _memRootPage$[ebp], 0
jge	SHORT $LN3@sqlite3Ref
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _tnum$[ebp]
push	ecx
push	115					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	-6					
mov	eax, DWORD PTR _pKey$[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _tnum$[ebp]
push	edx
mov	eax, DWORD PTR _iIdx$[ebp]
push	eax
push	53					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
cmp	DWORD PTR _memRootPage$[ebp], 0
jl	SHORT $LN10@sqlite3Ref
mov	DWORD PTR tv196[ebp], 2
jmp	SHORT $LN11@sqlite3Ref
mov	DWORD PTR tv196[ebp], 0
mov	edx, DWORD PTR tv196[ebp]
or	edx, 1
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
push	0
mov	ecx, DWORD PTR _iSorter$[ebp]
push	ecx
push	103					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr1$[ebp], eax
mov	eax, DWORD PTR _pIndex$[ebp]
movzx	ecx, BYTE PTR [eax+54]
test	ecx, ecx
je	SHORT $LN2@sqlite3Ref
cmp	DWORD PTR _pKey$[ebp], 0
je	SHORT $LN2@sqlite3Ref
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 3
mov	DWORD PTR _j2$1[ebp], eax
mov	eax, DWORD PTR _j2$1[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addr2$[ebp], eax
mov	eax, DWORD PTR _pKey$[ebp]
movzx	ecx, WORD PTR [eax+6]
mov	edx, DWORD PTR _pIndex$[ebp]
movzx	eax, WORD PTR [edx+50]
sub	ecx, eax
push	ecx
mov	ecx, DWORD PTR _regRecord$[ebp]
push	ecx
mov	edx, DWORD PTR _j2$1[ebp]
push	edx
mov	eax, DWORD PTR _iSorter$[ebp]
push	eax
push	84					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	edx, DWORD PTR _pIndex$[ebp]
push	edx
push	2
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3UniqueConstraint
add	esp, 12					
jmp	SHORT $LN1@sqlite3Ref
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addr2$[ebp], eax
mov	edx, DWORD PTR _regRecord$[ebp]
push	edx
mov	eax, DWORD PTR _iSorter$[ebp]
push	eax
push	95					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	edx, DWORD PTR _regRecord$[ebp]
push	edx
mov	eax, DWORD PTR _iIdx$[ebp]
push	eax
push	107					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	eax, DWORD PTR _regRecord$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _addr2$[ebp]
push	edx
mov	eax, DWORD PTR _iSorter$[ebp]
push	eax
push	5
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addr1$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _iIdx$[ebp]
push	eax
push	58					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	edx, DWORD PTR _iSorter$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ClearStatTables PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _zDbName$[ebp], ecx
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN4@sqlite3Cle
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 4
jg	SHORT $LN5@sqlite3Cle
mov	eax, DWORD PTR _i$[ebp]
push	eax
push	OFFSET $SG106974
lea	ecx, DWORD PTR _zTab$1[ebp]
push	ecx
push	24					
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _zDbName$[ebp]
push	edx
lea	eax, DWORD PTR _zTab$1[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3FindTable
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Cle
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _zType$[ebp]
push	ecx
lea	edx, DWORD PTR _zTab$1[ebp]
push	edx
mov	eax, DWORD PTR _zDbName$[ebp]
push	eax
push	OFFSET $SG106976
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3NestedParse
add	esp, 24					
jmp	SHORT $LN3@sqlite3Cle
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_destroyTable PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _iTab$[ebp], ecx
mov	DWORD PTR _iDestroyed$[ebp], 0
mov	edx, 1
test	edx, edx
je	$LN12@destroyTab
mov	DWORD PTR _iLargest$4[ebp], 0
cmp	DWORD PTR _iDestroyed$[ebp], 0
je	SHORT $LN8@destroyTab
mov	eax, DWORD PTR _iTab$[ebp]
cmp	eax, DWORD PTR _iDestroyed$[ebp]
jge	SHORT $LN9@destroyTab
mov	ecx, DWORD PTR _iTab$[ebp]
mov	DWORD PTR _iLargest$4[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$3[ebp], eax
jmp	SHORT $LN7@destroyTab
mov	ecx, DWORD PTR _pIdx$3[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$3[ebp], edx
cmp	DWORD PTR _pIdx$3[ebp], 0
je	SHORT $LN5@destroyTab
mov	eax, DWORD PTR _pIdx$3[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	DWORD PTR _iIdx$2[ebp], ecx
cmp	DWORD PTR _iDestroyed$[ebp], 0
je	SHORT $LN3@destroyTab
mov	edx, DWORD PTR _iIdx$2[ebp]
cmp	edx, DWORD PTR _iDestroyed$[ebp]
jge	SHORT $LN4@destroyTab
mov	eax, DWORD PTR _iIdx$2[ebp]
cmp	eax, DWORD PTR _iLargest$4[ebp]
jle	SHORT $LN4@destroyTab
mov	ecx, DWORD PTR _iIdx$2[ebp]
mov	DWORD PTR _iLargest$4[ebp], ecx
jmp	SHORT $LN6@destroyTab
cmp	DWORD PTR _iLargest$4[ebp], 0
jne	SHORT $LN2@destroyTab
jmp	SHORT $LN12@destroyTab
jmp	SHORT $LN1@destroyTab
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$1[ebp], eax
mov	eax, DWORD PTR _iDb$1[ebp]
push	eax
mov	ecx, DWORD PTR _iLargest$4[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_destroyRootPage
add	esp, 12					
mov	eax, DWORD PTR _iLargest$4[ebp]
mov	DWORD PTR _iDestroyed$[ebp], eax
jmp	$LN11@destroyTab
mov	esp, ebp
pop	ebp
ret	0
ENDP
_destroyRootPage PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$[ebp], eax
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
push	114					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3MayAbort
add	esp, 4
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN3@destroyRoo
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN3@destroyRoo
mov	DWORD PTR tv79[ebp], OFFSET $SG106929
jmp	SHORT $LN4@destroyRoo
mov	DWORD PTR tv79[ebp], OFFSET $SG106930
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR tv79[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
push	OFFSET $SG106931
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 28					
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqliteViewResetAll PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _idx$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
movzx	ecx, WORD PTR [eax+78]
and	ecx, 2
jne	SHORT $LN5@sqliteView
jmp	$LN6@sqliteView
mov	edx, DWORD PTR _idx$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN4@sqliteView
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
je	SHORT $LN2@sqliteView
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pTab$1[ebp], ecx
mov	edx, DWORD PTR _pTab$1[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN1@sqliteView
mov	eax, DWORD PTR _pTab$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqliteDeleteColumnNames
add	esp, 8
mov	edx, DWORD PTR _pTab$1[ebp]
mov	DWORD PTR [edx+4], 0
xor	eax, eax
mov	ecx, DWORD PTR _pTab$1[ebp]
mov	WORD PTR [ecx+38], ax
jmp	SHORT $LN3@sqliteView
mov	edx, DWORD PTR _idx$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	eax, WORD PTR [edx+78]
and	eax, -3					
mov	ecx, DWORD PTR _idx$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [edx+ecx+12]
mov	WORD PTR [ecx+78], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_convertToWithoutRowidTable PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
push	esi
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+416], 0
je	SHORT $LN30@convertToW
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+416]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	BYTE PTR [eax], 117			
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+420], 0
je	SHORT $LN29@convertToW
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+420]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	BYTE PTR [eax], 16			
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+36]
test	ecx, ecx
jl	$LN28@convertToW
push	0
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$1[ebp], eax
cmp	DWORD PTR _pList$1[ebp], 0
jne	SHORT $LN27@convertToW
jmp	$LN31@convertToW
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+36]
imul	edx, ecx, 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, 24					
imul	ecx, edx, 0
mov	edx, DWORD PTR _pList$1[ebp]
mov	edx, DWORD PTR [edx+4]
mov	DWORD PTR [edx+ecx+4], eax
mov	eax, 24					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pList$1[ebp]
mov	eax, DWORD PTR [edx+4]
mov	edx, DWORD PTR _pParse$[ebp]
mov	dl, BYTE PTR [edx+448]
mov	BYTE PTR [eax+ecx+12], dl
push	0
push	0
push	0
push	0
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+45]
push	ecx
mov	edx, DWORD PTR _pList$1[ebp]
push	edx
push	0
push	0
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CreateIndex
add	esp, 40					
mov	DWORD PTR _pPk$[ebp], eax
cmp	DWORD PTR _pPk$[ebp], 0
jne	SHORT $LN26@convertToW
jmp	$LN31@convertToW
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, -4					
or	edx, 2
mov	eax, DWORD PTR _pPk$[ebp]
mov	DWORD PTR [eax+56], edx
or	ecx, -1
mov	edx, DWORD PTR _pTab$[ebp]
mov	WORD PTR [edx+36], cx
jmp	SHORT $LN25@convertToW
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$[ebp], eax
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+56]
or	edx, 32					
mov	eax, DWORD PTR _pPk$[ebp]
mov	DWORD PTR [eax+56], edx
mov	ecx, DWORD PTR _pPk$[ebp]
movzx	edx, WORD PTR [ecx+50]
mov	DWORD PTR _nPk$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN24@convertToW
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nPk$[ebp]
jge	SHORT $LN22@convertToW
mov	edx, DWORD PTR _pPk$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _i$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
imul	eax, edx, 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	BYTE PTR [edx+eax+20], 1
jmp	SHORT $LN23@convertToW
mov	eax, DWORD PTR _pPk$[ebp]
mov	ecx, DWORD PTR [eax+56]
or	ecx, 8
mov	edx, DWORD PTR _pPk$[ebp]
mov	DWORD PTR [edx+56], ecx
mov	eax, DWORD PTR _pPk$[ebp]
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR [eax+44], edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$[ebp], ecx
jmp	SHORT $LN21@convertToW
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN19@convertToW
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
jne	SHORT $LN18@convertToW
jmp	SHORT $LN20@convertToW
mov	DWORD PTR _n$2[ebp], 0
mov	eax, DWORD PTR _n$2[ebp]
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN17@convertToW
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nPk$[ebp]
jge	SHORT $LN15@convertToW
mov	eax, DWORD PTR _pPk$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
push	eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_hasColumn
add	esp, 12					
test	eax, eax
jne	SHORT $LN14@convertToW
mov	edx, DWORD PTR _n$2[ebp]
add	edx, 1
mov	DWORD PTR _n$2[ebp], edx
jmp	SHORT $LN16@convertToW
cmp	DWORD PTR _n$2[ebp], 0
jne	SHORT $LN13@convertToW
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	dx, WORD PTR [ecx+50]
mov	WORD PTR [eax+52], dx
jmp	$LN20@convertToW
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
add	ecx, DWORD PTR _n$2[ebp]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_resizeIndexObject
add	esp, 12					
test	eax, eax
je	SHORT $LN12@convertToW
jmp	$LN31@convertToW
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN11@convertToW
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nPk$[ebp]
jge	SHORT $LN9@convertToW
mov	edx, DWORD PTR _pPk$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _i$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_hasColumn
add	esp, 12					
test	eax, eax
jne	SHORT $LN8@convertToW
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _j$[ebp]
mov	esi, DWORD PTR _i$[ebp]
mov	dx, WORD PTR [edx+esi*2]
mov	WORD PTR [ecx+eax*2], dx
mov	eax, DWORD PTR _pPk$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	edx, DWORD PTR _j$[ebp]
mov	esi, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR [ecx+esi*4]
mov	DWORD PTR [eax+edx*4], ecx
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN10@convertToW
jmp	$LN20@convertToW
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _nPk$[ebp], ecx
jge	$LN7@convertToW
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
push	eax
mov	ecx, DWORD PTR _pPk$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_resizeIndexObject
add	esp, 12					
test	eax, eax
je	SHORT $LN6@convertToW
jmp	SHORT $LN31@convertToW
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _nPk$[ebp]
mov	DWORD PTR _j$[ebp], eax
jmp	SHORT $LN5@convertToW
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN3@convertToW
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _pPk$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_hasColumn
add	esp, 12					
test	eax, eax
jne	SHORT $LN2@convertToW
mov	edx, DWORD PTR _pPk$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _j$[ebp]
mov	dx, WORD PTR _i$[ebp]
mov	WORD PTR [eax+ecx*2], dx
mov	eax, DWORD PTR _pPk$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _j$[ebp]
mov	DWORD PTR [ecx+edx*4], OFFSET $SG106729
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
jmp	SHORT $LN4@convertToW
jmp	SHORT $LN31@convertToW
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	ax, WORD PTR [edx+38]
mov	WORD PTR [ecx+52], ax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_hasColumn PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _nCol$[ebp]
mov	DWORD PTR tv66[ebp], eax
mov	ecx, DWORD PTR _nCol$[ebp]
sub	ecx, 1
mov	DWORD PTR _nCol$[ebp], ecx
cmp	DWORD PTR tv66[ebp], 0
jle	SHORT $LN2@hasColumn
mov	edx, DWORD PTR _x$[ebp]
mov	DWORD PTR tv70[ebp], edx
mov	eax, DWORD PTR _aiCol$[ebp]
movsx	ecx, WORD PTR [eax]
mov	DWORD PTR tv71[ebp], ecx
mov	edx, DWORD PTR _aiCol$[ebp]
add	edx, 2
mov	DWORD PTR _aiCol$[ebp], edx
mov	eax, DWORD PTR tv70[ebp]
cmp	eax, DWORD PTR tv71[ebp]
jne	SHORT $LN1@hasColumn
mov	eax, 1
jmp	SHORT $LN4@hasColumn
jmp	SHORT $LN3@hasColumn
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_estimateIndexWidth PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _wIndex$[ebp], 0
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _aCol$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@estimateIn
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+52]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN1@estimateIn
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$[ebp]
mov	ax, WORD PTR [ecx+edx*2]
mov	WORD PTR _x$1[ebp], ax
movsx	ecx, WORD PTR _x$1[ebp]
test	ecx, ecx
jge	SHORT $LN6@estimateIn
mov	DWORD PTR tv83[ebp], 1
jmp	SHORT $LN7@estimateIn
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _i$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
imul	eax, edx, 24
mov	ecx, DWORD PTR _aCol$[ebp]
movzx	edx, BYTE PTR [ecx+eax+22]
mov	DWORD PTR tv83[ebp], edx
mov	eax, DWORD PTR _wIndex$[ebp]
add	eax, DWORD PTR tv83[ebp]
mov	DWORD PTR _wIndex$[ebp], eax
jmp	SHORT $LN2@estimateIn
mov	ecx, DWORD PTR _wIndex$[ebp]
shl	ecx, 2
xor	edx, edx
push	edx
push	ecx
call	_sqlite3LogEst
add	esp, 8
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	WORD PTR [ecx+48], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_estimateTableWidth PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _wTable$[ebp], 0
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pTabCol$[ebp], eax
jmp	SHORT $LN4@estimateTa
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTabCol$[ebp]
add	edx, 24					
mov	DWORD PTR _pTabCol$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN2@estimateTa
mov	eax, DWORD PTR _pTabCol$[ebp]
movzx	ecx, BYTE PTR [eax+22]
add	ecx, DWORD PTR _wTable$[ebp]
mov	DWORD PTR _wTable$[ebp], ecx
jmp	SHORT $LN3@estimateTa
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
test	eax, eax
jge	SHORT $LN1@estimateTa
mov	ecx, DWORD PTR _wTable$[ebp]
add	ecx, 1
mov	DWORD PTR _wTable$[ebp], ecx
mov	edx, DWORD PTR _wTable$[ebp]
shl	edx, 2
xor	eax, eax
push	eax
push	edx
call	_sqlite3LogEst
add	esp, 8
mov	ecx, DWORD PTR _pTab$[ebp]
mov	WORD PTR [ecx+42], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resizeIndexObject PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
cmp	ecx, DWORD PTR _N$[ebp]
jl	SHORT $LN2@resizeInde
xor	eax, eax
jmp	$LN3@resizeInde
imul	edx, DWORD PTR _N$[ebp], 7
mov	DWORD PTR _nByte$[ebp], edx
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _zExtra$[ebp], eax
cmp	DWORD PTR _zExtra$[ebp], 0
jne	SHORT $LN1@resizeInde
mov	eax, 7
jmp	$LN3@resizeInde
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, WORD PTR [edx+52]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _zExtra$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _N$[ebp]
mov	ecx, DWORD PTR _zExtra$[ebp]
lea	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _zExtra$[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
shl	ecx, 1
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _zExtra$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _N$[ebp]
mov	edx, DWORD PTR _zExtra$[ebp]
lea	eax, DWORD PTR [edx+ecx*2]
mov	DWORD PTR _zExtra$[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+52]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _zExtra$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	ax, WORD PTR _N$[ebp]
mov	WORD PTR [edx+52], ax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+56]
or	edx, 16					
mov	eax, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [eax+56], edx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_createTableStmt PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	DWORD PTR _n$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pCol$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN9@createTabl
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pCol$[ebp]
add	eax, 24					
mov	DWORD PTR _pCol$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN7@createTabl
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_identLength
add	esp, 4
mov	edx, DWORD PTR _n$[ebp]
lea	eax, DWORD PTR [edx+eax+5]
mov	DWORD PTR _n$[ebp], eax
jmp	SHORT $LN8@createTabl
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_identLength
add	esp, 4
add	eax, DWORD PTR _n$[ebp]
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _n$[ebp], 50			
jge	SHORT $LN6@createTabl
mov	DWORD PTR _zSep$[ebp], OFFSET $SG106595
mov	DWORD PTR _zSep2$[ebp], OFFSET $SG106596
mov	DWORD PTR _zEnd$[ebp], OFFSET $SG106597
jmp	SHORT $LN5@createTabl
mov	DWORD PTR _zSep$[ebp], OFFSET $SG106599
mov	DWORD PTR _zSep2$[ebp], OFFSET $SG106600
mov	DWORD PTR _zEnd$[ebp], OFFSET $SG106601
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+38]
imul	edx, ecx, 6
mov	eax, DWORD PTR _n$[ebp]
lea	ecx, DWORD PTR [eax+edx+35]
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _n$[ebp]
push	edx
push	0
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zStmt$[ebp], eax
cmp	DWORD PTR _zStmt$[ebp], 0
jne	SHORT $LN4@createTabl
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
xor	eax, eax
jmp	$LN10@createTabl
push	OFFSET $SG106603
mov	ecx, DWORD PTR _zStmt$[ebp]
push	ecx
mov	edx, DWORD PTR _n$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 12					
mov	eax, DWORD PTR _zStmt$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _k$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
lea	eax, DWORD PTR _k$[ebp]
push	eax
mov	ecx, DWORD PTR _zStmt$[ebp]
push	ecx
call	_identPut
add	esp, 12					
mov	edx, DWORD PTR _zStmt$[ebp]
add	edx, DWORD PTR _k$[ebp]
mov	BYTE PTR [edx], 40			
mov	eax, DWORD PTR _k$[ebp]
add	eax, 1
mov	DWORD PTR _k$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@createTabl
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pCol$[ebp]
add	ecx, 24					
mov	DWORD PTR _pCol$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	$LN1@createTabl
mov	ecx, DWORD PTR _zSep$[ebp]
push	ecx
mov	edx, DWORD PTR _zStmt$[ebp]
add	edx, DWORD PTR _k$[ebp]
push	edx
mov	eax, DWORD PTR _n$[ebp]
sub	eax, DWORD PTR _k$[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 12					
mov	ecx, DWORD PTR _zStmt$[ebp]
add	ecx, DWORD PTR _k$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _k$[ebp]
mov	DWORD PTR _k$[ebp], eax
mov	edx, DWORD PTR _zSep2$[ebp]
mov	DWORD PTR _zSep$[ebp], edx
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
lea	edx, DWORD PTR _k$[ebp]
push	edx
mov	eax, DWORD PTR _zStmt$[ebp]
push	eax
call	_identPut
add	esp, 12					
mov	ecx, DWORD PTR _pCol$[ebp]
movsx	edx, BYTE PTR [ecx+21]
mov	eax, DWORD PTR ?azType@?8??createTableStmt@@9@9[edx*4-388]
mov	DWORD PTR _zType$2[ebp], eax
mov	ecx, DWORD PTR _zType$2[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _len$1[ebp], eax
mov	edx, DWORD PTR _len$1[ebp]
push	edx
mov	eax, DWORD PTR _zType$2[ebp]
push	eax
mov	ecx, DWORD PTR _zStmt$[ebp]
add	ecx, DWORD PTR _k$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _k$[ebp]
add	edx, DWORD PTR _len$1[ebp]
mov	DWORD PTR _k$[ebp], edx
jmp	$LN2@createTabl
mov	eax, DWORD PTR _zEnd$[ebp]
push	eax
push	OFFSET $SG106620
mov	ecx, DWORD PTR _zStmt$[ebp]
add	ecx, DWORD PTR _k$[ebp]
push	ecx
mov	edx, DWORD PTR _n$[ebp]
sub	edx, DWORD PTR _k$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 16					
mov	eax, DWORD PTR _zStmt$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_identPut PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _zSignedIdent$[ebp]
mov	DWORD PTR _zIdent$[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _i$[ebp], edx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN10@identPut
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _zIdent$[ebp]
add	ecx, DWORD PTR _j$[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN8@identPut
mov	eax, DWORD PTR _zIdent$[ebp]
add	eax, DWORD PTR _j$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 6
jne	SHORT $LN7@identPut
mov	eax, DWORD PTR _zIdent$[ebp]
add	eax, DWORD PTR _j$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 95					
je	SHORT $LN7@identPut
jmp	SHORT $LN8@identPut
jmp	SHORT $LN9@identPut
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zIdent$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 4
jne	SHORT $LN13@identPut
mov	ecx, DWORD PTR _j$[ebp]
push	ecx
mov	edx, DWORD PTR _zIdent$[ebp]
push	edx
call	_sqlite3KeywordCode
add	esp, 8
cmp	eax, 27					
jne	SHORT $LN13@identPut
mov	eax, DWORD PTR _zIdent$[ebp]
add	eax, DWORD PTR _j$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN13@identPut
cmp	DWORD PTR _j$[ebp], 0
je	SHORT $LN13@identPut
mov	DWORD PTR tv130[ebp], 0
jmp	SHORT $LN14@identPut
mov	DWORD PTR tv130[ebp], 1
mov	edx, DWORD PTR tv130[ebp]
mov	DWORD PTR _needQuote$[ebp], edx
cmp	DWORD PTR _needQuote$[ebp], 0
je	SHORT $LN6@identPut
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	BYTE PTR [eax], 34			
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN5@identPut
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _zIdent$[ebp]
add	eax, DWORD PTR _j$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN3@identPut
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _zIdent$[ebp]
add	eax, DWORD PTR _j$[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR [edx], cl
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _zIdent$[ebp]
add	eax, DWORD PTR _j$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 34					
jne	SHORT $LN2@identPut
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
mov	BYTE PTR [edx], 34			
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN4@identPut
cmp	DWORD PTR _needQuote$[ebp], 0
je	SHORT $LN1@identPut
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
mov	BYTE PTR [ecx], 34			
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR [ecx], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_identLength PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _n$[ebp], 0
jmp	SHORT $LN4@identLengt
mov	eax, DWORD PTR _n$[ebp]
add	eax, 1
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN2@identLengt
mov	ecx, DWORD PTR _z$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 34					
jne	SHORT $LN1@identLengt
mov	eax, DWORD PTR _n$[ebp]
add	eax, 1
mov	DWORD PTR _n$[ebp], eax
jmp	SHORT $LN3@identLengt
mov	eax, DWORD PTR _n$[ebp]
add	eax, 2
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqliteDeleteColumnNames PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pCol$[ebp], ecx
cmp	DWORD PTR _pCol$[ebp], 0
je	$LN5@sqliteDele
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqliteDele
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pCol$[ebp]
add	eax, 24					
mov	DWORD PTR _pCol$[ebp], eax
mov	ecx, DWORD PTR _pTable$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN1@sqliteDele
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqliteDele
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_freeIndex PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteIndexSamples
add	esp, 8
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN2@freeIndex
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+512], 0
jne	SHORT $LN3@freeIndex
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
call	_sqlite3KeyInfoUnref
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
shr	eax, 4
and	eax, 1
je	SHORT $LN1@freeIndex
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_codeTableLocks PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _pVdbe$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@codeTableL
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+396]
jge	SHORT $LN4@codeTableL
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _pParse$[ebp]
add	ecx, DWORD PTR [edx+400]
mov	DWORD PTR _p$2[ebp], ecx
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p1$1[ebp], ecx
push	-2					
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _p$2[ebp]
movzx	edx, BYTE PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _p1$1[ebp]
push	edx
push	140					
mov	eax, DWORD PTR _pVdbe$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN2@codeTableL
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqliteAuthBadReturnCode PROC
push	ebp
mov	ebp, esp
push	OFFSET $SG105822
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+12], 1
pop	ebp
ret	0
ENDP
_codeAttach PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
push	32					
push	0
lea	edx, DWORD PTR _sName$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sName$[ebp], eax
mov	ecx, DWORD PTR _pFilename$[ebp]
push	ecx
lea	edx, DWORD PTR _sName$[ebp]
push	edx
call	_resolveAttachExpr
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@codeAttach
mov	eax, DWORD PTR _pDbname$[ebp]
push	eax
lea	ecx, DWORD PTR _sName$[ebp]
push	ecx
call	_resolveAttachExpr
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@codeAttach
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
lea	eax, DWORD PTR _sName$[ebp]
push	eax
call	_resolveAttachExpr
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@codeAttach
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+64]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+64], edx
jmp	$attach_end$12
cmp	DWORD PTR _pAuthArg$[ebp], 0
je	SHORT $LN5@codeAttach
mov	ecx, DWORD PTR _pAuthArg$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 97					
jne	SHORT $LN4@codeAttach
mov	eax, DWORD PTR _pAuthArg$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _zAuthArg$1[ebp], ecx
jmp	SHORT $LN3@codeAttach
mov	DWORD PTR _zAuthArg$1[ebp], 0
push	0
push	0
mov	edx, DWORD PTR _zAuthArg$1[ebp]
push	edx
mov	eax, DWORD PTR _type$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@codeAttach
jmp	$attach_end$12
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
push	4
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _regArgs$[ebp], eax
mov	ecx, DWORD PTR _regArgs$[ebp]
push	ecx
mov	edx, DWORD PTR _pFilename$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
mov	ecx, DWORD PTR _regArgs$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _pDbname$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
mov	ecx, DWORD PTR _regArgs$[ebp]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $attach_end$12
mov	ecx, DWORD PTR _regArgs$[ebp]
add	ecx, 3
push	ecx
mov	edx, DWORD PTR _regArgs$[ebp]
add	edx, 3
mov	eax, DWORD PTR _pFunc$[ebp]
movsx	ecx, WORD PTR [eax]
sub	edx, ecx
push	edx
push	0
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _pFunc$[ebp]
movzx	ecx, BYTE PTR [eax]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
push	-5					
mov	eax, DWORD PTR _pFunc$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
cmp	DWORD PTR _type$[ebp], 24		
jne	SHORT $LN10@codeAttach
mov	DWORD PTR tv164[ebp], 1
jmp	SHORT $LN11@codeAttach
mov	DWORD PTR tv164[ebp], 0
mov	edx, DWORD PTR tv164[ebp]
push	edx
push	139					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _pFilename$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pDbname$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_detachFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 148				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zName$[ebp], eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	DWORD PTR _pDb$[ebp], 0
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN11@detachFunc
mov	DWORD PTR _zName$[ebp], OFFSET $SG105647
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN10@detachFunc
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	SHORT $LN8@detachFunc
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$[ebp], edx
mov	ecx, DWORD PTR _pDb$[ebp]
cmp	DWORD PTR [ecx+4], 0
jne	SHORT $LN7@detachFunc
jmp	SHORT $LN9@detachFunc
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN6@detachFunc
jmp	SHORT $LN8@detachFunc
jmp	SHORT $LN9@detachFunc
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jl	SHORT $LN5@detachFunc
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
push	OFFSET $SG105654
lea	edx, DWORD PTR _zErr$[ebp]
push	edx
push	128					
call	_sqlite3_snprintf
add	esp, 16					
jmp	$detach_error$14
cmp	DWORD PTR _i$[ebp], 2
jge	SHORT $LN4@detachFunc
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG105657
lea	ecx, DWORD PTR _zErr$[ebp]
push	ecx
push	128					
call	_sqlite3_snprintf
add	esp, 16					
jmp	$detach_error$14
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+62]
test	eax, eax
jne	SHORT $LN3@detachFunc
push	OFFSET $SG105659
lea	ecx, DWORD PTR _zErr$[ebp]
push	ecx
push	128					
call	_sqlite3_snprintf
add	esp, 12					
jmp	$detach_error$14
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeIsInReadTrans
add	esp, 4
test	eax, eax
jne	SHORT $LN1@detachFunc
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeIsInBackup
add	esp, 4
test	eax, eax
je	SHORT $LN2@detachFunc
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG105662
lea	ecx, DWORD PTR _zErr$[ebp]
push	ecx
push	128					
call	_sqlite3_snprintf
add	esp, 16					
jmp	SHORT $detach_error$14
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeClose
add	esp, 4
mov	ecx, DWORD PTR _pDb$[ebp]
mov	DWORD PTR [ecx+4], 0
mov	edx, DWORD PTR _pDb$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
jmp	SHORT $LN12@detachFunc
push	-1
lea	ecx, DWORD PTR _zErr$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error
add	esp, 12					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_attachFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	DWORD PTR _zPath$[ebp], 0
mov	DWORD PTR _zErr$[ebp], 0
mov	DWORD PTR _zErrDyn$[ebp], 0
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zFile$[ebp], eax
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zFile$[ebp], 0
jne	SHORT $LN30@attachFunc
mov	DWORD PTR _zFile$[ebp], OFFSET $SG105586
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN29@attachFunc
mov	DWORD PTR _zName$[ebp], OFFSET $SG105588
mov	edx, 4
imul	eax, edx, 7
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+eax+88]
add	edx, 2
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+20], edx
jl	SHORT $LN28@attachFunc
mov	ecx, 4
imul	edx, ecx, 7
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+edx+88]
push	ecx
push	OFFSET $SG105590
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zErrDyn$[ebp], eax
jmp	$attach_error$33
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+62]
test	ecx, ecx
jne	SHORT $LN27@attachFunc
push	OFFSET $SG105593
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 8
mov	DWORD PTR _zErrDyn$[ebp], eax
jmp	$attach_error$33
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN26@attachFunc
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN24@attachFunc
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _z$2[ebp], eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _z$2[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN23@attachFunc
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG105600
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zErrDyn$[ebp], eax
jmp	$attach_error$33
jmp	SHORT $LN25@attachFunc
mov	edx, DWORD PTR _db$[ebp]
add	edx, 448				
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+16], edx
jne	SHORT $LN22@attachFunc
push	48					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aNew$[ebp], eax
cmp	DWORD PTR _aNew$[ebp], 0
jne	SHORT $LN21@attachFunc
jmp	$LN31@attachFunc
push	32					
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _aNew$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN20@attachFunc
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+20]
add	eax, 1
shl	eax, 4
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _aNew$[ebp], eax
cmp	DWORD PTR _aNew$[ebp], 0
jne	SHORT $LN20@attachFunc
jmp	$LN31@attachFunc
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _aNew$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+20]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
add	ecx, DWORD PTR [edx+16]
mov	DWORD PTR _aNew$[ebp], ecx
push	16					
push	0
mov	eax, DWORD PTR _aNew$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _flags$[ebp], edx
lea	eax, DWORD PTR _zErr$[ebp]
push	eax
lea	ecx, DWORD PTR _zPath$[ebp]
push	ecx
lea	edx, DWORD PTR _pVfs$[ebp]
push	edx
lea	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_sqlite3ParseUri
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN18@attachFunc
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN17@attachFunc
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
push	-1
mov	eax, DWORD PTR _zErr$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_error
add	esp, 12					
mov	edx, DWORD PTR _zErr$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
jmp	$LN31@attachFunc
mov	eax, DWORD PTR _flags$[ebp]
or	eax, 256				
mov	DWORD PTR _flags$[ebp], eax
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _aNew$[ebp]
add	edx, 4
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _zPath$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3BtreeOpen
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _zPath$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
add	edx, 1
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+20], edx
cmp	DWORD PTR _rc$[ebp], 19			
jne	SHORT $LN16@attachFunc
mov	DWORD PTR _rc$[ebp], 1
push	OFFSET $SG105609
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 8
mov	DWORD PTR _zErrDyn$[ebp], eax
jmp	$LN15@attachFunc
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN15@attachFunc
mov	edx, DWORD PTR _aNew$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaGet
add	esp, 8
mov	edx, DWORD PTR _aNew$[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _aNew$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN13@attachFunc
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN12@attachFunc
mov	ecx, DWORD PTR _aNew$[ebp]
mov	edx, DWORD PTR [ecx+12]
movzx	eax, BYTE PTR [edx+76]
test	eax, eax
je	SHORT $LN12@attachFunc
mov	ecx, DWORD PTR _aNew$[ebp]
mov	edx, DWORD PTR [ecx+12]
movzx	eax, BYTE PTR [edx+77]
mov	ecx, 16					
imul	edx, ecx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	ecx, BYTE PTR [edx+77]
cmp	eax, ecx
je	SHORT $LN12@attachFunc
push	OFFSET $SG105616
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 8
mov	DWORD PTR _zErrDyn$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _aNew$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$1[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+65]
push	eax
mov	ecx, DWORD PTR _pPager$1[ebp]
push	ecx
call	_sqlite3PagerLockingMode
add	esp, 8
push	-1
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeSecureDelete
add	esp, 8
push	eax
mov	ecx, DWORD PTR _aNew$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeSecureDelete
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 28					
or	ecx, 3
push	ecx
mov	edx, DWORD PTR _aNew$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeSetPagerFlags
add	esp, 8
mov	ecx, DWORD PTR _aNew$[ebp]
mov	BYTE PTR [ecx+8], 3
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _aNew$[ebp]
mov	DWORD PTR [ecx], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@attachFunc
mov	edx, DWORD PTR _aNew$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $LN10@attachFunc
mov	DWORD PTR _rc$[ebp], 7
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN9@attachFunc
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeEnterAll
add	esp, 4
lea	ecx, DWORD PTR _zErrDyn$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Init
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeLeaveAll
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	$LN8@attachFunc
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
sub	edx, 1
mov	DWORD PTR _iDb$3[ebp], edx
mov	eax, DWORD PTR _iDb$3[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
cmp	DWORD PTR [edx+eax+4], 0
je	SHORT $LN7@attachFunc
mov	eax, DWORD PTR _iDb$3[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeClose
add	esp, 4
mov	ecx, DWORD PTR _iDb$3[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR [eax+ecx+4], 0
mov	ecx, DWORD PTR _iDb$3[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR [eax+ecx+12], 0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _iDb$3[ebp]
mov	DWORD PTR [edx+20], eax
cmp	DWORD PTR _rc$[ebp], 7
je	SHORT $LN5@attachFunc
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN6@attachFunc
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
mov	edx, DWORD PTR _zErrDyn$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
push	OFFSET $SG105625
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 8
mov	DWORD PTR _zErrDyn$[ebp], eax
jmp	SHORT $LN4@attachFunc
cmp	DWORD PTR _zErrDyn$[ebp], 0
jne	SHORT $LN4@attachFunc
mov	edx, DWORD PTR _zFile$[ebp]
push	edx
push	OFFSET $SG105628
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zErrDyn$[ebp], eax
jmp	SHORT $attach_error$33
jmp	SHORT $LN31@attachFunc
cmp	DWORD PTR _zErrDyn$[ebp], 0
je	SHORT $LN2@attachFunc
push	-1
mov	ecx, DWORD PTR _zErrDyn$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error
add	esp, 12					
mov	eax, DWORD PTR _zErrDyn$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN31@attachFunc
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error_code
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveAttachExpr PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _pExpr$[ebp], 0
je	SHORT $LN3@resolveAtt
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 27					
je	SHORT $LN2@resolveAtt
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pName$[ebp]
push	eax
call	_sqlite3ResolveExprNames
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@resolveAtt
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [ecx], 97			
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_analysisLoader PROC
push	ebp
mov	ebp, esp
sub	esp, 76					
mov	eax, DWORD PTR _pData$[ebp]
mov	DWORD PTR _pInfo$[ebp], eax
cmp	DWORD PTR _argv$[ebp], 0
je	SHORT $LN9@analysisLo
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
cmp	DWORD PTR [eax+edx], 0
je	SHORT $LN9@analysisLo
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _argv$[ebp]
cmp	DWORD PTR [edx+ecx], 0
jne	SHORT $LN10@analysisLo
xor	eax, eax
jmp	$LN11@analysisLo
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTable$[ebp], eax
cmp	DWORD PTR _pTable$[ebp], 0
jne	SHORT $LN8@analysisLo
xor	eax, eax
jmp	$LN11@analysisLo
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
cmp	DWORD PTR [eax+edx], 0
jne	SHORT $LN7@analysisLo
mov	DWORD PTR _pIndex$[ebp], 0
jmp	SHORT $LN6@analysisLo
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN5@analysisLo
mov	edx, DWORD PTR _pTable$[ebp]
push	edx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pIndex$[ebp], eax
jmp	SHORT $LN6@analysisLo
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3FindIndex
add	esp, 12					
mov	DWORD PTR _pIndex$[ebp], eax
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN3@analysisLo
mov	ecx, DWORD PTR _pIndex$[ebp]
push	ecx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	0
mov	ecx, DWORD PTR _pIndex$[ebp]
movzx	edx, WORD PTR [ecx+50]
add	edx, 1
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_decodeIntArray
add	esp, 20					
mov	ecx, DWORD PTR _pIndex$[ebp]
cmp	DWORD PTR [ecx+36], 0
jne	SHORT $LN2@analysisLo
mov	edx, 2
imul	eax, edx, 0
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	ecx, DWORD PTR _pTable$[ebp]
mov	dx, WORD PTR [eax+edx]
mov	WORD PTR [ecx+28], dx
jmp	SHORT $LN1@analysisLo
mov	eax, DWORD PTR _pTable$[ebp]
mov	cx, WORD PTR [eax+42]
mov	WORD PTR _fakeIdx$1[ebp+48], cx
lea	edx, DWORD PTR _fakeIdx$1[ebp]
push	edx
mov	eax, DWORD PTR _pTable$[ebp]
add	eax, 28					
push	eax
push	0
push	1
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_decodeIntArray
add	esp, 20					
mov	edx, DWORD PTR _pTable$[ebp]
mov	ax, WORD PTR _fakeIdx$1[ebp+48]
mov	WORD PTR [edx+42], ax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_decodeIntArray PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _zIntArray$[ebp]
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN10@decodeIntA
mov	DWORD PTR _z$[ebp], OFFSET $SG105476
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN9@decodeIntA
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN7@decodeIntA
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nOut$[ebp]
jge	SHORT $LN7@decodeIntA
mov	DWORD PTR _v$[ebp], 0
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _z$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
mov	DWORD PTR _c$[ebp], edx
cmp	DWORD PTR _c$[ebp], 48			
jl	SHORT $LN5@decodeIntA
cmp	DWORD PTR _c$[ebp], 57			
jg	SHORT $LN5@decodeIntA
imul	eax, DWORD PTR _v$[ebp], 10
mov	ecx, DWORD PTR _c$[ebp]
lea	edx, DWORD PTR [eax+ecx-48]
mov	DWORD PTR _v$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
jmp	SHORT $LN6@decodeIntA
mov	ecx, DWORD PTR _v$[ebp]
xor	edx, edx
push	edx
push	ecx
call	_sqlite3LogEst
add	esp, 8
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aLog$[ebp]
mov	WORD PTR [edx+ecx*2], ax
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 32					
jne	SHORT $LN4@decodeIntA
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
jmp	$LN8@decodeIntA
push	OFFSET $SG105488
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@decodeIntA
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+56]
or	edx, 4
mov	eax, DWORD PTR _pIndex$[ebp]
mov	DWORD PTR [eax+56], edx
jmp	SHORT $LN11@decodeIntA
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
push	OFFSET $SG105491
call	_sqlite3_strglob
add	esp, 8
test	eax, eax
jne	SHORT $LN11@decodeIntA
mov	DWORD PTR _v32$1[ebp], 0
lea	edx, DWORD PTR _v32$1[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, 3
push	eax
call	_sqlite3GetInt32
add	esp, 8
mov	eax, DWORD PTR _v32$1[ebp]
cdq
push	edx
push	eax
call	_sqlite3LogEst
add	esp, 8
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	WORD PTR [ecx+48], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_analyzeTable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iStatCur$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 3
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
cmp	DWORD PTR _pOnlyIdx$[ebp], 0
je	SHORT $LN2@analyzeTab
push	OFFSET $SG105415
mov	edx, DWORD PTR _pOnlyIdx$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _iStatCur$[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_openStatTable
add	esp, 20					
jmp	SHORT $LN1@analyzeTab
push	OFFSET $SG105417
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _iStatCur$[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_openStatTable
add	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _iStatCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pOnlyIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_analyzeOneTable
add	esp, 24					
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_loadAnalysis
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_analyzeDatabase PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	DWORD PTR _pSchema$[ebp], edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _iStatCur$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 3
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
push	0
push	0
mov	ecx, DWORD PTR _iStatCur$[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_openStatTable
add	esp, 20					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _iMem$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iTab$[ebp], ecx
mov	edx, DWORD PTR _pSchema$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _k$[ebp], eax
jmp	SHORT $LN3@analyzeDat
mov	ecx, DWORD PTR _k$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _k$[ebp], edx
cmp	DWORD PTR _k$[ebp], 0
je	SHORT $LN1@analyzeDat
mov	eax, DWORD PTR _k$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pTab$1[ebp], ecx
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _iMem$[ebp]
push	eax
mov	ecx, DWORD PTR _iStatCur$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pTab$1[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_analyzeOneTable
add	esp, 24					
jmp	SHORT $LN2@analyzeDat
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_loadAnalysis
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_loadAnalysis PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN2@loadAnalys
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	120					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_analyzeOneTable PROC
push	ebp
mov	ebp, esp
sub	esp, 108				
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _jZeroRows$[ebp], -1
mov	BYTE PTR _needTableCnt$[ebp], 1
mov	edx, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regNewRowid$[ebp], edx
mov	eax, DWORD PTR _iMem$[ebp]
add	eax, 1
mov	DWORD PTR _iMem$[ebp], eax
mov	ecx, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regStat4$[ebp], ecx
mov	edx, DWORD PTR _iMem$[ebp]
add	edx, 1
mov	DWORD PTR _iMem$[ebp], edx
mov	eax, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regChng$[ebp], eax
mov	ecx, DWORD PTR _iMem$[ebp]
add	ecx, 1
mov	DWORD PTR _iMem$[ebp], ecx
mov	edx, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regTemp$[ebp], edx
mov	eax, DWORD PTR _iMem$[ebp]
add	eax, 1
mov	DWORD PTR _iMem$[ebp], eax
mov	ecx, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regTabname$[ebp], ecx
mov	edx, DWORD PTR _iMem$[ebp]
add	edx, 1
mov	DWORD PTR _iMem$[ebp], edx
mov	eax, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regIdxname$[ebp], eax
mov	ecx, DWORD PTR _iMem$[ebp]
add	ecx, 1
mov	DWORD PTR _iMem$[ebp], ecx
mov	edx, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regStat1$[ebp], edx
mov	eax, DWORD PTR _iMem$[ebp]
add	eax, 1
mov	DWORD PTR _iMem$[ebp], eax
mov	ecx, DWORD PTR _iMem$[ebp]
mov	DWORD PTR _regPrev$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
cmp	eax, DWORD PTR _iMem$[ebp]
jle	SHORT $LN23@analyzeOne
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR tv76[ebp], edx
jmp	SHORT $LN24@analyzeOne
mov	eax, DWORD PTR _iMem$[ebp]
mov	DWORD PTR tv76[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv76[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN19@analyzeOne
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN20@analyzeOne
jmp	$LN21@analyzeOne
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+32], 0
jne	SHORT $LN18@analyzeOne
jmp	$LN21@analyzeOne
push	7
push	OFFSET $SG105341
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN17@analyzeOne
jmp	$LN21@analyzeOne
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	28					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN16@analyzeOne
jmp	$LN21@analyzeOne
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TableLock
add	esp, 20					
mov	edx, DWORD PTR _iTab$[ebp]
mov	DWORD PTR _iTabCur$[ebp], edx
mov	eax, DWORD PTR _iTab$[ebp]
add	eax, 1
mov	DWORD PTR _iTab$[ebp], eax
mov	ecx, DWORD PTR _iTab$[ebp]
mov	DWORD PTR _iIdxCur$[ebp], ecx
mov	edx, DWORD PTR _iTab$[ebp]
add	edx, 1
mov	DWORD PTR _iTab$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
cmp	ecx, DWORD PTR _iTab$[ebp]
jle	SHORT $LN25@analyzeOne
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR tv150[ebp], eax
jmp	SHORT $LN26@analyzeOne
mov	ecx, DWORD PTR _iTab$[ebp]
mov	DWORD PTR tv150[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv150[ebp]
mov	DWORD PTR [edx+68], eax
push	52					
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _iTabCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3OpenTable
add	esp, 20					
push	0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
mov	ecx, DWORD PTR _regTabname$[ebp]
push	ecx
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$[ebp], ecx
jmp	SHORT $LN15@analyzeOne
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN13@analyzeOne
cmp	DWORD PTR _pOnlyIdx$[ebp], 0
je	SHORT $LN12@analyzeOne
mov	ecx, DWORD PTR _pOnlyIdx$[ebp]
cmp	ecx, DWORD PTR _pIdx$[ebp]
je	SHORT $LN12@analyzeOne
jmp	SHORT $LN14@analyzeOne
mov	edx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [edx+36], 0
jne	SHORT $LN11@analyzeOne
mov	BYTE PTR _needTableCnt$[ebp], 0
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
mov	DWORD PTR _nCol$7[ebp], ecx
mov	edx, DWORD PTR _nCol$7[ebp]
lea	eax, DWORD PTR [edx*4+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aGotoChng$6[ebp], eax
cmp	DWORD PTR _aGotoChng$6[ebp], 0
jne	SHORT $LN10@analyzeOne
jmp	SHORT $LN14@analyzeOne
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+56]
and	eax, 3
cmp	eax, 2
jne	SHORT $LN9@analyzeOne
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
je	SHORT $LN9@analyzeOne
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _zIdxName$5[ebp], ecx
jmp	SHORT $LN8@analyzeOne
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _zIdxName$5[ebp], eax
push	0
mov	ecx, DWORD PTR _zIdxName$5[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _regIdxname$[ebp]
push	edx
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _regPrev$[ebp]
add	ecx, DWORD PTR _nCol$7[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+72], ecx
jle	SHORT $LN27@analyzeOne
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR tv201[ebp], ecx
jmp	SHORT $LN28@analyzeOne
mov	edx, DWORD PTR _regPrev$[ebp]
add	edx, DWORD PTR _nCol$7[ebp]
mov	DWORD PTR tv201[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv201[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _iIdxCur$[ebp]
push	edx
push	52					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _pIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	eax, DWORD PTR _regStat4$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _nCol$7[ebp]
add	ecx, 1
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regStat4$[ebp]
push	eax
mov	ecx, DWORD PTR _regStat4$[ebp]
add	ecx, 1
push	ecx
push	0
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	-5					
push	OFFSET _statInitFuncdef
push	-1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	edx, DWORD PTR _iIdxCur$[ebp]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrRewind$1[ebp], eax
mov	ecx, DWORD PTR _regChng$[ebp]
push	ecx
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	DWORD PTR _addrGotoChng0$3[ebp], eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrNextRow$2[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN7@analyzeOne
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nCol$7[ebp]
jge	$LN5@analyzeOne
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3LocateCollSeq
add	esp, 8
mov	DWORD PTR _pColl$4[ebp], eax
mov	eax, DWORD PTR _regChng$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regTemp$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _iIdxCur$[ebp]
push	edx
push	46					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	-4					
mov	ecx, DWORD PTR _pColl$4[ebp]
push	ecx
mov	edx, DWORD PTR _regPrev$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _regTemp$[ebp]
push	eax
push	78					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	edx, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aGotoChng$6[ebp]
mov	DWORD PTR [ecx+edx*4], eax
push	128					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN6@analyzeOne
mov	eax, DWORD PTR _regChng$[ebp]
push	eax
mov	ecx, DWORD PTR _nCol$7[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	ecx, DWORD PTR _nCol$7[ebp]
mov	edx, DWORD PTR _aGotoChng$6[ebp]
mov	DWORD PTR [edx+ecx*4], eax
mov	eax, DWORD PTR _addrGotoChng0$3[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@analyzeOne
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nCol$7[ebp]
jge	SHORT $LN2@analyzeOne
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aGotoChng$6[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _regPrev$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN3@analyzeOne
mov	eax, DWORD PTR _nCol$7[ebp]
mov	ecx, DWORD PTR _aGotoChng$6[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _regTemp$[ebp]
push	ecx
mov	edx, DWORD PTR _regStat4$[ebp]
push	edx
push	1
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	-5					
push	OFFSET _statPushFuncdef
push	-1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	2
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	eax, DWORD PTR _addrNextRow$2[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
push	9
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regStat1$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _regStat4$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_callStatGet
add	esp, 16					
push	0
push	OFFSET $SG105373
mov	eax, DWORD PTR _regTemp$[ebp]
push	eax
push	3
mov	ecx, DWORD PTR _regTabname$[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	eax, DWORD PTR _regNewRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _iStatCur$[ebp]
push	ecx
push	69					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regNewRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _regTemp$[ebp]
push	ecx
mov	edx, DWORD PTR _iStatCur$[ebp]
push	edx
push	70					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	edx, DWORD PTR _addrRewind$1[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _aGotoChng$6[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN14@analyzeOne
cmp	DWORD PTR _pOnlyIdx$[ebp], 0
jne	$LN21@analyzeOne
movzx	eax, BYTE PTR _needTableCnt$[ebp]
test	eax, eax
je	$LN21@analyzeOne
mov	ecx, DWORD PTR _regStat1$[ebp]
push	ecx
mov	edx, DWORD PTR _iTabCur$[ebp]
push	edx
push	49					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _regStat1$[ebp]
push	ecx
push	45					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _jZeroRows$[ebp], eax
mov	eax, DWORD PTR _regIdxname$[ebp]
push	eax
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
push	OFFSET $SG105375
mov	edx, DWORD PTR _regTemp$[ebp]
push	edx
push	3
mov	eax, DWORD PTR _regTabname$[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	edx, DWORD PTR _regNewRowid$[ebp]
push	edx
mov	eax, DWORD PTR _iStatCur$[ebp]
push	eax
push	69					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _regNewRowid$[ebp]
push	edx
mov	eax, DWORD PTR _regTemp$[ebp]
push	eax
mov	ecx, DWORD PTR _iStatCur$[ebp]
push	ecx
push	70					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR _jZeroRows$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_callStatGet PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _regOut$[ebp]
push	eax
mov	ecx, DWORD PTR _regStat4$[ebp]
push	ecx
push	0
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	-5					
push	OFFSET _statGetFuncdef
push	-1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
pop	ebp
ret	0
ENDP
_statGet PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
imul	edx, DWORD PTR [ecx+8], 25
push	edx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zRet$5[ebp], eax
cmp	DWORD PTR _zRet$5[ebp], 0
jne	SHORT $LN4@statGet
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_error_nomem
add	esp, 4
jmp	$LN5@statGet
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
xor	eax, eax
push	eax
push	edx
push	OFFSET $SG105281
mov	ecx, DWORD PTR _zRet$5[ebp]
push	ecx
push	24					
call	_sqlite3_snprintf
add	esp, 20					
mov	edx, DWORD PTR _zRet$5[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _zRet$5[ebp]
mov	DWORD PTR _z$3[ebp], eax
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN3@statGet
mov	eax, DWORD PTR _i$4[ebp]
add	eax, 1
mov	DWORD PTR _i$4[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
cmp	DWORD PTR _i$4[ebp], edx
jge	SHORT $LN1@statGet
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR _i$4[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
add	eax, 1
xor	ecx, ecx
mov	DWORD PTR _nDistinct$2[ebp], eax
mov	DWORD PTR _nDistinct$2[ebp+4], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
xor	ecx, ecx
add	eax, DWORD PTR _nDistinct$2[ebp]
adc	ecx, DWORD PTR _nDistinct$2[ebp+4]
sub	eax, 1
sbb	ecx, 0
mov	edx, DWORD PTR _nDistinct$2[ebp+4]
push	edx
mov	edx, DWORD PTR _nDistinct$2[ebp]
push	edx
push	ecx
push	eax
call	__aulldiv
mov	DWORD PTR _iVal$1[ebp], eax
mov	DWORD PTR _iVal$1[ebp+4], edx
mov	eax, DWORD PTR _iVal$1[ebp+4]
push	eax
mov	ecx, DWORD PTR _iVal$1[ebp]
push	ecx
push	OFFSET $SG105287
mov	edx, DWORD PTR _z$3[ebp]
push	edx
push	24					
call	_sqlite3_snprintf
add	esp, 20					
mov	eax, DWORD PTR _z$3[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _z$3[ebp]
mov	DWORD PTR _z$3[ebp], eax
jmp	$LN2@statGet
push	OFFSET _sqlite3_free
push	-1
mov	ecx, DWORD PTR _zRet$5[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_statPush PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_int
add	esp, 4
mov	DWORD PTR _iChng$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN11@statPush
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN10@statPush
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jge	SHORT $LN8@statPush
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [eax+ecx*4], 1
jmp	SHORT $LN9@statPush
jmp	$LN7@statPush
mov	edx, DWORD PTR _iChng$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_samplePushPrevious
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@statPush
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _iChng$[ebp]
jge	SHORT $LN4@statPush
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [edx+ecx*4], eax
jmp	SHORT $LN5@statPush
mov	edx, DWORD PTR _iChng$[ebp]
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN3@statPush
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+8]
jge	SHORT $LN7@statPush
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [edx+ecx*4], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [eax+ecx*4], 1
jmp	SHORT $LN2@statPush
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_samplePushPrevious PROC
push	ebp
mov	ebp, esp
pop	ebp
ret	0
ENDP
_statInit PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_int
add	esp, 4
mov	DWORD PTR _nCol$[ebp], eax
mov	ecx, DWORD PTR _nCol$[ebp]
add	ecx, 1
and	ecx, -2					
mov	DWORD PTR _nColUp$[ebp], ecx
mov	edx, DWORD PTR _nColUp$[ebp]
shl	edx, 2
mov	eax, DWORD PTR _nColUp$[ebp]
lea	ecx, DWORD PTR [edx+eax*4+52]
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@statInit
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error_nomem
add	esp, 4
jmp	SHORT $LN2@statInit
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+48], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _nCol$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, 52					
shl	edx, 0
add	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+20], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR _nColUp$[ebp]
lea	ecx, DWORD PTR [edx+eax*4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], ecx
push	OFFSET _stat4Destructor
push	4
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_blob
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_stat4Destructor PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pOld$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_openStatTable PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN12@openStatTa
jmp	$LN14@openStatTa
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN11@openStatTa
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 3
jge	$LN9@openStatTa
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR ?aTable@?1??openStatTable@@9@9[eax*8]
mov	DWORD PTR _zTab$3[ebp], ecx
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zTab$3[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pStat$2[ebp], eax
cmp	DWORD PTR _pStat$2[ebp], 0
jne	SHORT $LN8@openStatTa
mov	eax, DWORD PTR _i$[ebp]
cmp	DWORD PTR ?aTable@?1??openStatTable@@9@9[eax*8+4], 0
je	SHORT $LN7@openStatTa
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR ?aTable@?1??openStatTable@@9@9[ecx*8+4]
push	edx
mov	eax, DWORD PTR _zTab$3[ebp]
push	eax
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG105172
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3NestedParse
add	esp, 20					
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+388]
mov	DWORD PTR _aRoot$[ebp+ecx*4], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	BYTE PTR _aCreateTbl$[ebp+ecx], 2
jmp	$LN6@openStatTa
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _pStat$2[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _aRoot$[ebp+edx*4], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR $T1[ebp], edx
cmp	DWORD PTR $T1[ebp], 3
jae	SHORT $LN15@openStatTa
jmp	SHORT $LN16@openStatTa
call	___report_rangecheckfailure
mov	eax, DWORD PTR $T1[ebp]
mov	BYTE PTR _aCreateTbl$[ebp+eax], 0
mov	ecx, DWORD PTR _zTab$3[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aRoot$[ebp+edx*4]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TableLock
add	esp, 20					
cmp	DWORD PTR _zWhere$[ebp], 0
je	SHORT $LN5@openStatTa
mov	eax, DWORD PTR _zWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _zWhereType$[ebp]
push	ecx
mov	edx, DWORD PTR _zTab$3[ebp]
push	edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG105176
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 24					
jmp	SHORT $LN6@openStatTa
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aRoot$[ebp+ecx*4]
push	edx
push	115					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN10@openStatTa
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@openStatTa
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	DWORD PTR ?aTable@?1??openStatTable@@9@9[edx*8+4], 0
je	SHORT $LN14@openStatTa
push	3
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aRoot$[ebp+ecx*4]
push	edx
mov	eax, DWORD PTR _iStatCur$[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
push	53					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR _aCreateTbl$[ebp+edx]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	SHORT $LN2@openStatTa
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isSystemTable PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
cmp	eax, 6
jle	SHORT $LN1@isSystemTa
push	7
push	OFFSET $SG104974
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@isSystemTa
mov	edx, DWORD PTR _zName$[ebp]
push	edx
push	OFFSET $SG104975
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	SHORT $LN2@isSystemTa
xor	eax, eax
pop	ebp
ret	0
ENDP
_reloadTableSchema PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN6@reloadTabl
jmp	$LN7@reloadTabl
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggerList
add	esp, 8
mov	DWORD PTR _pTrig$[ebp], eax
jmp	SHORT $LN5@reloadTabl
mov	ecx, DWORD PTR _pTrig$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pTrig$[ebp], edx
cmp	DWORD PTR _pTrig$[ebp], 0
je	SHORT $LN3@reloadTabl
mov	eax, DWORD PTR _pTrig$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iTrigDb$1[ebp], eax
push	0
mov	ecx, DWORD PTR _pTrig$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
push	0
mov	eax, DWORD PTR _iTrigDb$1[ebp]
push	eax
push	123					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN4@reloadTabl
push	0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	121					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG104964
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zWhere$[ebp], eax
cmp	DWORD PTR _zWhere$[ebp], 0
jne	SHORT $LN2@reloadTabl
jmp	SHORT $LN7@reloadTabl
mov	eax, DWORD PTR _zWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddParseSchemaOp
add	esp, 12					
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_whereTempTriggers
add	esp, 8
mov	DWORD PTR _zWhere$[ebp], eax
cmp	DWORD PTR _zWhere$[ebp], 0
je	SHORT $LN7@reloadTabl
mov	edx, DWORD PTR _zWhere$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddParseSchemaOp
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereTempTriggers PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _zWhere$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR [eax+edx+12]
mov	DWORD PTR _pTempSchema$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
cmp	eax, DWORD PTR _pTempSchema$[ebp]
je	SHORT $LN6@whereTempT
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$2[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TriggerList
add	esp, 8
mov	DWORD PTR _pTrig$[ebp], eax
jmp	SHORT $LN5@whereTempT
mov	edx, DWORD PTR _pTrig$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _pTrig$[ebp], eax
cmp	DWORD PTR _pTrig$[ebp], 0
je	SHORT $LN6@whereTempT
mov	ecx, DWORD PTR _pTrig$[ebp]
mov	edx, DWORD PTR [ecx+20]
cmp	edx, DWORD PTR _pTempSchema$[ebp]
jne	SHORT $LN2@whereTempT
mov	eax, DWORD PTR _pTrig$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _zWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$2[ebp]
push	eax
call	_whereOrName
add	esp, 12					
mov	DWORD PTR _zWhere$[ebp], eax
jmp	SHORT $LN4@whereTempT
cmp	DWORD PTR _zWhere$[ebp], 0
je	SHORT $LN1@whereTempT
mov	ecx, DWORD PTR _zWhere$[ebp]
push	ecx
push	OFFSET $SG104943
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zNew$1[ebp], eax
mov	ecx, DWORD PTR _zWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _zNew$1[ebp]
mov	DWORD PTR _zWhere$[ebp], ecx
mov	eax, DWORD PTR _zWhere$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereForeignKeys PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _zWhere$[ebp], 0
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_sqlite3FkReferences
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN3@whereForei
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@whereForei
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _zWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_whereOrName
add	esp, 12					
mov	DWORD PTR _zWhere$[ebp], eax
jmp	SHORT $LN2@whereForei
mov	eax, DWORD PTR _zWhere$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_whereOrName PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _zWhere$[ebp], 0
jne	SHORT $LN2@whereOrNam
mov	eax, DWORD PTR _zConstant$[ebp]
push	eax
push	OFFSET $SG104912
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zNew$[ebp], eax
jmp	SHORT $LN1@whereOrNam
mov	edx, DWORD PTR _zConstant$[ebp]
push	edx
mov	eax, DWORD PTR _zWhere$[ebp]
push	eax
push	OFFSET $SG104914
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zNew$[ebp], eax
mov	edx, DWORD PTR _zWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _zNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_renameTriggerFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zSql$[ebp], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zTableName$[ebp], eax
mov	DWORD PTR _dist$[ebp], 3
mov	ecx, DWORD PTR _zSql$[ebp]
mov	DWORD PTR _zCsr$[ebp], ecx
mov	DWORD PTR _len$[ebp], 0
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
cmp	DWORD PTR _zSql$[ebp], 0
je	$LN12@renameTrig
mov	eax, DWORD PTR _zCsr$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN7@renameTrig
jmp	$LN12@renameTrig
mov	edx, DWORD PTR _zCsr$[ebp]
mov	DWORD PTR _tname$[ebp], edx
mov	eax, DWORD PTR _len$[ebp]
mov	DWORD PTR _tname$[ebp+4], eax
mov	ecx, DWORD PTR _zCsr$[ebp]
add	ecx, DWORD PTR _len$[ebp]
mov	DWORD PTR _zCsr$[ebp], ecx
lea	edx, DWORD PTR _token$[ebp]
push	edx
mov	eax, DWORD PTR _zCsr$[ebp]
push	eax
call	_sqlite3GetToken
add	esp, 8
mov	DWORD PTR _len$[ebp], eax
cmp	DWORD PTR _token$[ebp], 151		
je	SHORT $LN6@renameTrig
mov	ecx, DWORD PTR _dist$[ebp]
add	ecx, 1
mov	DWORD PTR _dist$[ebp], ecx
cmp	DWORD PTR _token$[ebp], 122		
je	SHORT $LN2@renameTrig
cmp	DWORD PTR _token$[ebp], 107		
jne	SHORT $LN9@renameTrig
mov	DWORD PTR _dist$[ebp], 0
cmp	DWORD PTR _dist$[ebp], 2
jne	SHORT $LN10@renameTrig
cmp	DWORD PTR _token$[ebp], 137		
je	SHORT $LN8@renameTrig
cmp	DWORD PTR _token$[ebp], 46		
je	SHORT $LN8@renameTrig
cmp	DWORD PTR _token$[ebp], 5
jne	SHORT $LN10@renameTrig
mov	edx, DWORD PTR _tname$[ebp]
add	edx, DWORD PTR _tname$[ebp+4]
push	edx
mov	eax, DWORD PTR _zTableName$[ebp]
push	eax
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _tname$[ebp]
sub	edx, DWORD PTR _zSql$[ebp]
push	edx
push	OFFSET $SG104879
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 24					
mov	DWORD PTR _zRet$[ebp], eax
push	OFFSET _sqlite3MallocSize
push	-1
mov	ecx, DWORD PTR _zRet$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_renameParentFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	DWORD PTR _zOutput$[ebp], 0
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zInput$[ebp], eax
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zOld$[ebp], eax
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zNew$[ebp], eax
cmp	DWORD PTR _zInput$[ebp], 0
je	SHORT $LN10@renamePare
cmp	DWORD PTR _zOld$[ebp], 0
jne	SHORT $LN11@renamePare
jmp	$LN12@renamePare
mov	edx, DWORD PTR _zInput$[ebp]
mov	DWORD PTR _z$[ebp], edx
jmp	SHORT $LN9@renamePare
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _n$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	$LN7@renamePare
lea	eax, DWORD PTR _token$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3GetToken
add	esp, 8
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _token$[ebp], 105		
jne	$LN6@renamePare
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR _z$[ebp], edx
lea	eax, DWORD PTR _token$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3GetToken
add	esp, 8
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _token$[ebp], 151		
je	SHORT $LN5@renamePare
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	DWORD PTR _zParent$2[ebp], eax
cmp	DWORD PTR _zParent$2[ebp], 0
jne	SHORT $LN2@renamePare
jmp	$LN7@renamePare
mov	edx, DWORD PTR _zParent$2[ebp]
push	edx
call	_sqlite3Dequote
add	esp, 4
mov	eax, DWORD PTR _zParent$2[ebp]
push	eax
mov	ecx, DWORD PTR _zOld$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@renamePare
cmp	DWORD PTR _zOutput$[ebp], 0
je	SHORT $LN14@renamePare
mov	edx, DWORD PTR _zOutput$[ebp]
mov	DWORD PTR tv140[ebp], edx
jmp	SHORT $LN15@renamePare
mov	DWORD PTR tv140[ebp], OFFSET $SG104841
mov	eax, DWORD PTR _zNew$[ebp]
push	eax
mov	ecx, DWORD PTR _zInput$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
sub	edx, DWORD PTR _zInput$[ebp]
push	edx
mov	eax, DWORD PTR tv140[ebp]
push	eax
push	OFFSET $SG104842
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 24					
mov	DWORD PTR _zOut$1[ebp], eax
mov	edx, DWORD PTR _zOutput$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _zOut$1[ebp]
mov	DWORD PTR _zOutput$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR _zInput$[ebp], edx
mov	eax, DWORD PTR _zParent$2[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN8@renamePare
cmp	DWORD PTR _zOutput$[ebp], 0
je	SHORT $LN16@renamePare
mov	edx, DWORD PTR _zOutput$[ebp]
mov	DWORD PTR tv153[ebp], edx
jmp	SHORT $LN17@renamePare
mov	DWORD PTR tv153[ebp], OFFSET $SG104844
mov	eax, DWORD PTR _zInput$[ebp]
push	eax
mov	ecx, DWORD PTR tv153[ebp]
push	ecx
push	OFFSET $SG104845
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zResult$[ebp], eax
push	OFFSET _sqlite3MallocSize
push	-1
mov	eax, DWORD PTR _zResult$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	edx, DWORD PTR _zOutput$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_renameTableFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zSql$[ebp], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zTableName$[ebp], eax
mov	ecx, DWORD PTR _zSql$[ebp]
mov	DWORD PTR _zCsr$[ebp], ecx
mov	DWORD PTR _len$[ebp], 0
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
cmp	DWORD PTR _zSql$[ebp], 0
je	$LN10@renameTabl
mov	eax, DWORD PTR _zCsr$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN5@renameTabl
jmp	SHORT $LN10@renameTabl
mov	edx, DWORD PTR _zCsr$[ebp]
mov	DWORD PTR _tname$[ebp], edx
mov	eax, DWORD PTR _len$[ebp]
mov	DWORD PTR _tname$[ebp+4], eax
mov	ecx, DWORD PTR _zCsr$[ebp]
add	ecx, DWORD PTR _len$[ebp]
mov	DWORD PTR _zCsr$[ebp], ecx
lea	edx, DWORD PTR _token$[ebp]
push	edx
mov	eax, DWORD PTR _zCsr$[ebp]
push	eax
call	_sqlite3GetToken
add	esp, 8
mov	DWORD PTR _len$[ebp], eax
cmp	DWORD PTR _token$[ebp], 151		
je	SHORT $LN4@renameTabl
cmp	DWORD PTR _token$[ebp], 22		
je	SHORT $LN6@renameTabl
cmp	DWORD PTR _token$[ebp], 125		
jne	SHORT $LN8@renameTabl
mov	ecx, DWORD PTR _tname$[ebp]
add	ecx, DWORD PTR _tname$[ebp+4]
push	ecx
mov	edx, DWORD PTR _zTableName$[ebp]
push	edx
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
mov	ecx, DWORD PTR _tname$[ebp]
sub	ecx, DWORD PTR _zSql$[ebp]
push	ecx
push	OFFSET $SG104804
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 24					
mov	DWORD PTR _zRet$[ebp], eax
push	OFFSET _sqlite3MallocSize
push	-1
mov	eax, DWORD PTR _zRet$[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_analyzeAggregatesInSelect PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_analyzeAggregate PROC
push	ebp
mov	ebp, esp
sub	esp, 76					
mov	eax, DWORD PTR _pWalker$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pNC$[ebp], ecx
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pSrcList$[ebp], edx
mov	eax, DWORD PTR _pNC$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pAggInfo$[ebp], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR tv70[ebp], al
cmp	BYTE PTR tv70[ebp], 154			
je	SHORT $LN28@analyzeAgg
cmp	BYTE PTR tv70[ebp], 155			
je	$LN11@analyzeAgg
cmp	BYTE PTR tv70[ebp], 156			
je	SHORT $LN28@analyzeAgg
jmp	$LN29@analyzeAgg
cmp	DWORD PTR _pSrcList$[ebp], 0
je	$LN27@analyzeAgg
mov	ecx, DWORD PTR _pSrcList$[ebp]
add	ecx, 8
mov	DWORD PTR _pItem$5[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN26@analyzeAgg
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$5[ebp]
add	eax, 80					
mov	DWORD PTR _pItem$5[ebp], eax
mov	ecx, DWORD PTR _pSrcList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	$LN27@analyzeAgg
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR _pItem$5[ebp]
mov	edx, DWORD PTR [eax+28]
cmp	edx, DWORD PTR [ecx+48]
jne	$LN23@analyzeAgg
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pCol$9[ebp], ecx
mov	DWORD PTR _k$7[ebp], 0
jmp	SHORT $LN22@analyzeAgg
mov	edx, DWORD PTR _k$7[ebp]
add	edx, 1
mov	DWORD PTR _k$7[ebp], edx
mov	eax, DWORD PTR _pCol$9[ebp]
add	eax, 24					
mov	DWORD PTR _pCol$9[ebp], eax
mov	ecx, DWORD PTR _pAggInfo$[ebp]
mov	edx, DWORD PTR _k$7[ebp]
cmp	edx, DWORD PTR [ecx+32]
jge	SHORT $LN20@analyzeAgg
mov	eax, DWORD PTR _pCol$9[ebp]
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+28]
jne	SHORT $LN19@analyzeAgg
mov	eax, DWORD PTR _pExpr$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	edx, DWORD PTR _pCol$9[ebp]
cmp	DWORD PTR [edx+8], ecx
jne	SHORT $LN19@analyzeAgg
jmp	SHORT $LN20@analyzeAgg
jmp	SHORT $LN21@analyzeAgg
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	ecx, DWORD PTR _k$7[ebp]
cmp	ecx, DWORD PTR [eax+32]
jl	$LN18@analyzeAgg
mov	edx, DWORD PTR _pAggInfo$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_addAggInfoColumn
add	esp, 8
mov	DWORD PTR _k$7[ebp], eax
cmp	DWORD PTR _k$7[ebp], 0
jl	$LN18@analyzeAgg
imul	edx, DWORD PTR _k$7[ebp], 24
mov	eax, DWORD PTR _pAggInfo$[ebp]
add	edx, DWORD PTR [eax+28]
mov	DWORD PTR _pCol$9[ebp], edx
mov	ecx, DWORD PTR _pCol$9[ebp]
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _pCol$9[ebp]
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	eax, DWORD PTR _pCol$9[ebp]
mov	DWORD PTR [eax+8], edx
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv144[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv144[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR _pCol$9[ebp]
mov	eax, DWORD PTR tv144[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _pCol$9[ebp]
mov	DWORD PTR [ecx+12], -1
mov	edx, DWORD PTR _pCol$9[ebp]
mov	eax, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, DWORD PTR _pAggInfo$[ebp]
cmp	DWORD PTR [ecx+24], 0
je	$LN17@analyzeAgg
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _pGB$2[ebp], eax
mov	ecx, DWORD PTR _pGB$2[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pTerm$4[ebp], edx
mov	eax, DWORD PTR _pGB$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _n$1[ebp], ecx
mov	DWORD PTR _j$6[ebp], 0
jmp	SHORT $LN16@analyzeAgg
mov	edx, DWORD PTR _j$6[ebp]
add	edx, 1
mov	DWORD PTR _j$6[ebp], edx
mov	eax, DWORD PTR _pTerm$4[ebp]
add	eax, 24					
mov	DWORD PTR _pTerm$4[ebp], eax
mov	ecx, DWORD PTR _j$6[ebp]
cmp	ecx, DWORD PTR _n$1[ebp]
jge	SHORT $LN17@analyzeAgg
mov	edx, DWORD PTR _pTerm$4[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pE$3[ebp], eax
mov	ecx, DWORD PTR _pE$3[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 154				
jne	SHORT $LN13@analyzeAgg
mov	eax, DWORD PTR _pE$3[ebp]
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [eax+28]
cmp	edx, DWORD PTR [ecx+28]
jne	SHORT $LN13@analyzeAgg
mov	eax, DWORD PTR _pE$3[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	edx, DWORD PTR _pExpr$[ebp]
movsx	eax, WORD PTR [edx+32]
cmp	ecx, eax
jne	SHORT $LN13@analyzeAgg
mov	ecx, DWORD PTR _pCol$9[ebp]
mov	edx, DWORD PTR _j$6[ebp]
mov	DWORD PTR [ecx+12], edx
jmp	SHORT $LN17@analyzeAgg
jmp	SHORT $LN15@analyzeAgg
mov	eax, DWORD PTR _pCol$9[ebp]
cmp	DWORD PTR [eax+12], 0
jge	SHORT $LN18@analyzeAgg
mov	ecx, DWORD PTR _pCol$9[ebp]
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _pAggInfo$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, 1
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	DWORD PTR [eax+12], edx
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	DWORD PTR [ecx+40], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [eax], 156			
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	dx, WORD PTR _k$7[ebp]
mov	WORD PTR [ecx+34], dx
jmp	SHORT $LN27@analyzeAgg
jmp	$LN25@analyzeAgg
mov	eax, 1
jmp	$LN31@analyzeAgg
mov	eax, DWORD PTR _pNC$[ebp]
movzx	ecx, BYTE PTR [eax+28]
and	ecx, 8
jne	$LN10@analyzeAgg
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx+38]
mov	ecx, DWORD PTR _pWalker$[ebp]
cmp	DWORD PTR [ecx+16], eax
jne	$LN10@analyzeAgg
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	DWORD PTR _pItem$8[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN9@analyzeAgg
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$8[ebp]
add	edx, 16					
mov	DWORD PTR _pItem$8[ebp], edx
mov	eax, DWORD PTR _pAggInfo$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+44]
jge	SHORT $LN7@analyzeAgg
push	-1
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pItem$8[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
jne	SHORT $LN6@analyzeAgg
jmp	SHORT $LN7@analyzeAgg
jmp	SHORT $LN8@analyzeAgg
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+44]
jl	$LN5@analyzeAgg
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+16]
mov	eax, DWORD PTR [edx+ecx+12]
mov	cl, BYTE PTR [eax+77]
mov	BYTE PTR _enc$10[ebp], cl
mov	edx, DWORD PTR _pAggInfo$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_addAggInfoFunc
add	esp, 8
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	$LN5@analyzeAgg
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _pAggInfo$[ebp]
add	edx, DWORD PTR [eax+40]
mov	DWORD PTR _pItem$8[ebp], edx
mov	ecx, DWORD PTR _pItem$8[ebp]
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv217[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv217[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR _pItem$8[ebp]
mov	edx, DWORD PTR tv217[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN33@analyzeAgg
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR tv226[ebp], eax
jmp	SHORT $LN34@analyzeAgg
mov	DWORD PTR tv226[ebp], 0
push	0
movzx	ecx, BYTE PTR _enc$10[ebp]
push	ecx
mov	edx, DWORD PTR tv226[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3FindFunction
add	esp, 24					
mov	ecx, DWORD PTR _pItem$8[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 16					
je	SHORT $LN3@analyzeAgg
mov	ecx, DWORD PTR _pItem$8[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR [ecx+12], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
jmp	SHORT $LN5@analyzeAgg
mov	ecx, DWORD PTR _pItem$8[ebp]
mov	DWORD PTR [ecx+12], -1
mov	edx, DWORD PTR _pExpr$[ebp]
mov	ax, WORD PTR _i$[ebp]
mov	WORD PTR [edx+34], ax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR _pAggInfo$[ebp]
mov	DWORD PTR [ecx+40], edx
mov	eax, 1
jmp	SHORT $LN31@analyzeAgg
jmp	SHORT $LN29@analyzeAgg
xor	eax, eax
jmp	SHORT $LN31@analyzeAgg
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_addAggInfoFunc PROC
push	ebp
mov	ebp, esp
push	ecx
lea	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pInfo$[ebp]
add	ecx, 44					
push	ecx
push	16					
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ArrayAllocate
add	esp, 20					
mov	edx, DWORD PTR _pInfo$[ebp]
mov	DWORD PTR [edx+40], eax
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_addAggInfoColumn PROC
push	ebp
mov	ebp, esp
push	ecx
lea	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pInfo$[ebp]
add	ecx, 32					
push	ecx
push	24					
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ArrayAllocate
add	esp, 20					
mov	edx, DWORD PTR _pInfo$[ebp]
mov	DWORD PTR [edx+28], eax
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprSrcCount PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
je	SHORT $LN7@exprSrcCou
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 156				
jne	SHORT $LN8@exprSrcCou
mov	ecx, DWORD PTR _pWalker$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _p$2[ebp], edx
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pSrc$1[ebp], ecx
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN6@exprSrcCou
mov	edx, DWORD PTR _i$3[ebp]
add	edx, 1
mov	DWORD PTR _i$3[ebp], edx
mov	eax, DWORD PTR _pSrc$1[ebp]
mov	ecx, DWORD PTR _i$3[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN4@exprSrcCou
imul	edx, DWORD PTR _i$3[ebp], 80
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR _pSrc$1[ebp]
mov	eax, DWORD PTR [eax+28]
cmp	eax, DWORD PTR [ecx+edx+56]
jne	SHORT $LN3@exprSrcCou
jmp	SHORT $LN4@exprSrcCou
jmp	SHORT $LN5@exprSrcCou
mov	ecx, DWORD PTR _pSrc$1[ebp]
mov	edx, DWORD PTR _i$3[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN2@exprSrcCou
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 1
mov	edx, DWORD PTR _p$2[ebp]
mov	DWORD PTR [edx+4], ecx
jmp	SHORT $LN8@exprSrcCou
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+8]
add	ecx, 1
mov	edx, DWORD PTR _p$2[ebp]
mov	DWORD PTR [edx+8], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprCodeBetween PROC
push	ebp
mov	ebp, esp
sub	esp, 196				
push	esi
push	edi
mov	DWORD PTR _regFree1$[ebp], 0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, 12					
mov	esi, DWORD PTR [eax+12]
lea	edi, DWORD PTR _exprX$[ebp]
rep movsd
mov	BYTE PTR _exprAnd$[ebp], 72		
lea	ecx, DWORD PTR _compLeft$[ebp]
mov	DWORD PTR _exprAnd$[ebp+12], ecx
lea	edx, DWORD PTR _compRight$[ebp]
mov	DWORD PTR _exprAnd$[ebp+16], edx
mov	BYTE PTR _compLeft$[ebp], 83		
lea	eax, DWORD PTR _exprX$[ebp]
mov	DWORD PTR _compLeft$[ebp+12], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, 24					
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+4]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _compLeft$[ebp+16], eax
mov	BYTE PTR _compRight$[ebp], 81		
lea	ecx, DWORD PTR _exprX$[ebp]
mov	DWORD PTR _compRight$[ebp+12], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, 24					
shl	ecx, 0
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _compRight$[ebp+16], eax
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
lea	edx, DWORD PTR _exprX$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
push	eax
lea	ecx, DWORD PTR _exprX$[ebp]
push	ecx
call	_exprToRegister
add	esp, 8
cmp	DWORD PTR _jumpIfTrue$[ebp], 0
je	SHORT $LN2@exprCodeBe
mov	edx, DWORD PTR _jumpIfNull$[ebp]
push	edx
mov	eax, DWORD PTR _dest$[ebp]
push	eax
lea	ecx, DWORD PTR _exprAnd$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprIfTrue
add	esp, 16					
jmp	SHORT $LN1@exprCodeBe
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
lea	edx, DWORD PTR _exprAnd$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprToRegister PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR [eax+38], dl
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax], 159			
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _iReg$[ebp]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, -4097				
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+4], ecx
pop	ebp
ret	0
ENDP
_sqlite3ExprCachePinRegister PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 116				
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 20					
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
cmp	ecx, DWORD PTR _iReg$[ebp]
jne	SHORT $LN1@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+6], 0
jmp	SHORT $LN3@sqlite3Exp
mov	esp, ebp
pop	ebp
ret	0
ENDP
_cacheEntryClear PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+6]
test	ecx, ecx
je	SHORT $LN3@cacheEntry
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+19]
cmp	eax, 8
jge	SHORT $LN1@cacheEntry
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+19]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+edx*4+24], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	al, BYTE PTR [edx+19]
add	al, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+19], al
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+6], 0
pop	ebp
ret	0
ENDP
_codeInteger PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 1024				
je	SHORT $LN7@codeIntege
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _i$5[ebp], edx
cmp	DWORD PTR _negFlag$[ebp], 0
je	SHORT $LN6@codeIntege
mov	eax, DWORD PTR _i$5[ebp]
neg	eax
mov	DWORD PTR _i$5[ebp], eax
mov	ecx, DWORD PTR _iMem$[ebp]
push	ecx
mov	edx, DWORD PTR _i$5[ebp]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN8@codeIntege
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _z$3[ebp], edx
push	1
mov	eax, DWORD PTR _z$3[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	ecx, DWORD PTR _value$1[ebp]
push	ecx
mov	edx, DWORD PTR _z$3[ebp]
push	edx
call	_sqlite3Atoi64
add	esp, 16					
mov	DWORD PTR _c$4[ebp], eax
cmp	DWORD PTR _c$4[ebp], 0
je	SHORT $LN3@codeIntege
cmp	DWORD PTR _c$4[ebp], 2
jne	SHORT $LN4@codeIntege
cmp	DWORD PTR _negFlag$[ebp], 0
je	SHORT $LN4@codeIntege
cmp	DWORD PTR _negFlag$[ebp], 0
je	SHORT $LN2@codeIntege
cmp	DWORD PTR _c$4[ebp], 2
jne	SHORT $LN10@codeIntege
mov	DWORD PTR tv89[ebp], 0
mov	DWORD PTR tv89[ebp+4], -2147483648	
jmp	SHORT $LN11@codeIntege
mov	eax, DWORD PTR _value$1[ebp]
neg	eax
mov	ecx, DWORD PTR _value$1[ebp+4]
adc	ecx, 0
neg	ecx
mov	DWORD PTR tv89[ebp], eax
mov	DWORD PTR tv89[ebp+4], ecx
mov	edx, DWORD PTR tv89[ebp]
mov	DWORD PTR _value$1[ebp], edx
mov	eax, DWORD PTR tv89[ebp+4]
mov	DWORD PTR _value$1[ebp+4], eax
lea	ecx, DWORD PTR _value$1[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_dup8bytes
add	esp, 8
mov	DWORD PTR _zV$2[ebp], eax
push	-13					
mov	eax, DWORD PTR _zV$2[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _iMem$[ebp]
push	ecx
push	0
push	26					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN8@codeIntege
mov	eax, DWORD PTR _iMem$[ebp]
push	eax
mov	ecx, DWORD PTR _negFlag$[ebp]
push	ecx
mov	edx, DWORD PTR _z$3[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_codeReal
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_codeReal PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN2@codeReal
push	1
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	ecx, DWORD PTR _value$1[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3AtoF
add	esp, 16					
cmp	DWORD PTR _negateFlag$[ebp], 0
je	SHORT $LN1@codeReal
movsd	xmm0, QWORD PTR _value$1[ebp]
xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
movsd	QWORD PTR _value$1[ebp], xmm0
lea	eax, DWORD PTR _value$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_dup8bytes
add	esp, 8
mov	DWORD PTR _zV$2[ebp], eax
push	-12					
mov	edx, DWORD PTR _zV$2[ebp]
push	edx
push	0
mov	eax, DWORD PTR _iMem$[ebp]
push	eax
push	0
push	133					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_dup8bytes PROC
push	ebp
mov	ebp, esp
push	ecx
push	8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeDb
add	esp, 4
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _out$[ebp], eax
cmp	DWORD PTR _out$[ebp], 0
je	SHORT $LN1@dup8bytes
push	8
mov	ecx, DWORD PTR _in$[ebp]
push	ecx
mov	edx, DWORD PTR _out$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _out$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeIN PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	DWORD PTR _rRhsHasNull$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
lea	edx, DWORD PTR _rRhsHasNull$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FindInIndex
add	esp, 12					
mov	DWORD PTR _eType$[ebp], eax
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
call	_comparisonAffinity
add	esp, 4
mov	BYTE PTR _affinity$[ebp], al
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePush
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$[ebp], eax
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCode
add	esp, 12					
mov	eax, DWORD PTR _destIfNull$[ebp]
cmp	eax, DWORD PTR _destIfFalse$[ebp]
jne	SHORT $LN7@sqlite3Exp
mov	ecx, DWORD PTR _destIfNull$[ebp]
push	ecx
mov	edx, DWORD PTR _r1$[ebp]
push	edx
push	76					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN6@sqlite3Exp
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
push	77					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr1$3[ebp], eax
mov	eax, DWORD PTR _destIfFalse$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _destIfNull$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addr1$3[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
cmp	DWORD PTR _eType$[ebp], 1
jne	SHORT $LN5@sqlite3Exp
mov	edx, DWORD PTR _destIfFalse$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
push	38					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _destIfFalse$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	67					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	$LN4@sqlite3Exp
push	1
lea	ecx, DWORD PTR _affinity$[ebp]
push	ecx
push	0
push	1
mov	edx, DWORD PTR _r1$[ebp]
push	edx
push	47					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
cmp	DWORD PTR _rRhsHasNull$[ebp], 0
je	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _destIfFalse$[ebp]
cmp	ecx, DWORD PTR _destIfNull$[ebp]
jne	SHORT $LN3@sqlite3Exp
push	1
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _destIfFalse$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	65					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
jmp	$LN4@sqlite3Exp
push	1
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	66					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	DWORD PTR _j1$1[ebp], eax
mov	edx, DWORD PTR _destIfNull$[ebp]
push	edx
mov	eax, DWORD PTR _rRhsHasNull$[ebp]
push	eax
push	44					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _destIfFalse$[ebp]
push	edx
mov	eax, DWORD PTR _rRhsHasNull$[ebp]
push	eax
push	45					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	edx, DWORD PTR _rRhsHasNull$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	66					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	DWORD PTR _j2$2[ebp], eax
mov	eax, DWORD PTR _rRhsHasNull$[ebp]
push	eax
push	0
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _destIfFalse$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _j2$2[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _rRhsHasNull$[ebp]
push	eax
push	1
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _destIfNull$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _j1$1[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePop
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isCandidateForInOpt PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN11@isCandidat
xor	eax, eax
jmp	$LN12@isCandidat
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN10@isCandidat
xor	eax, eax
jmp	$LN12@isCandidat
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+6]
and	edx, 5
je	SHORT $LN9@isCandidat
xor	eax, eax
jmp	$LN12@isCandidat
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN8@isCandidat
xor	eax, eax
jmp	$LN12@isCandidat
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+36], 0
je	SHORT $LN7@isCandidat
xor	eax, eax
jmp	$LN12@isCandidat
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _pSrc$[ebp], eax
mov	ecx, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [ecx], 1
je	SHORT $LN6@isCandidat
xor	eax, eax
jmp	SHORT $LN12@isCandidat
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pSrc$[ebp]
cmp	DWORD PTR [ecx+eax+28], 0
je	SHORT $LN5@isCandidat
xor	eax, eax
jmp	SHORT $LN12@isCandidat
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx+eax+24]
mov	DWORD PTR _pTab$[ebp], edx
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN4@isCandidat
xor	eax, eax
jmp	SHORT $LN12@isCandidat
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN3@isCandidat
xor	eax, eax
jmp	SHORT $LN12@isCandidat
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pEList$[ebp], eax
mov	ecx, DWORD PTR _pEList$[ebp]
cmp	DWORD PTR [ecx], 1
je	SHORT $LN2@isCandidat
xor	eax, eax
jmp	SHORT $LN12@isCandidat
mov	edx, 24					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
je	SHORT $LN1@isCandidat
xor	eax, eax
jmp	SHORT $LN12@isCandidat
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprIsConst PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	24					
push	0
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _initFlag$[ebp]
mov	DWORD PTR _w$[ebp+20], ecx
mov	DWORD PTR _w$[ebp], OFFSET _exprNodeIsConstant
mov	DWORD PTR _w$[ebp+4], OFFSET _selectNodeIsConstant
mov	edx, DWORD PTR _p$[ebp]
push	edx
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_sqlite3WalkExpr
add	esp, 8
mov	eax, DWORD PTR _w$[ebp+20]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_selectNodeIsConstant PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWalker$[ebp]
mov	DWORD PTR [eax+20], 0
mov	eax, 2
pop	ebp
ret	0
ENDP
_exprNodeIsConstant PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pWalker$[ebp]
cmp	DWORD PTR [eax+20], 3
jne	SHORT $LN8@exprNodeIs
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 1
je	SHORT $LN8@exprNodeIs
mov	eax, DWORD PTR _pWalker$[ebp]
mov	DWORD PTR [eax+20], 0
mov	eax, 2
jmp	SHORT $LN9@exprNodeIs
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv72[ebp], edx
mov	eax, DWORD PTR tv72[ebp]
sub	eax, 27					
mov	DWORD PTR tv72[ebp], eax
cmp	DWORD PTR tv72[ebp], 129		
ja	SHORT $LN1@exprNodeIs
mov	ecx, DWORD PTR tv72[ebp]
movzx	edx, BYTE PTR $LN11@exprNodeIs[ecx]
jmp	DWORD PTR $LN12@exprNodeIs[edx*4]
mov	eax, DWORD PTR _pWalker$[ebp]
cmp	DWORD PTR [eax+20], 2
je	SHORT $LN3@exprNodeIs
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 524288				
je	SHORT $LN2@exprNodeIs
xor	eax, eax
jmp	SHORT $LN9@exprNodeIs
mov	eax, DWORD PTR _pWalker$[ebp]
mov	DWORD PTR [eax+20], 0
mov	eax, 2
jmp	SHORT $LN9@exprNodeIs
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN2@exprNodeIs
DD	$LN5@exprNodeIs
DD	$LN1@exprNodeIs
DB	0
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	2
DB	1
DB	0
DB	0
DB	0
ENDP
_withDup PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _pRet$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
je	$LN5@withDup
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
shl	ecx, 4
add	ecx, 24					
mov	DWORD PTR _nByte$1[ebp], ecx
mov	edx, DWORD PTR _nByte$1[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pRet$[ebp], eax
cmp	DWORD PTR _pRet$[ebp], 0
je	$LN5@withDup
mov	ecx, DWORD PTR _pRet$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN3@withDup
mov	ecx, DWORD PTR _i$2[ebp]
add	ecx, 1
mov	DWORD PTR _i$2[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$2[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN5@withDup
push	0
mov	ecx, DWORD PTR _i$2[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+ecx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDup
add	esp, 12					
mov	edx, DWORD PTR _i$2[ebp]
shl	edx, 4
mov	ecx, DWORD PTR _pRet$[ebp]
mov	DWORD PTR [ecx+edx+16], eax
push	0
mov	edx, DWORD PTR _i$2[ebp]
shl	edx, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+edx+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDup
add	esp, 12					
mov	ecx, DWORD PTR _i$2[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _pRet$[ebp]
mov	DWORD PTR [edx+ecx+12], eax
mov	eax, DWORD PTR _i$2[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+eax+8]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _i$2[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _pRet$[ebp]
mov	DWORD PTR [edx+ecx+8], eax
jmp	$LN2@withDup
mov	eax, DWORD PTR _pRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprDup PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	DWORD PTR _pNew$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
je	$LN17@exprDup
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 1
mov	DWORD PTR _isReduced$5[ebp], eax
mov	DWORD PTR _staticFlag$3[ebp], 0
cmp	DWORD PTR _pzBuffer$[ebp], 0
je	SHORT $LN16@exprDup
mov	ecx, DWORD PTR _pzBuffer$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _zAlloc$8[ebp], edx
mov	DWORD PTR _staticFlag$3[ebp], 32768	
jmp	SHORT $LN15@exprDup
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_dupedExprSize
add	esp, 8
push	eax
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zAlloc$8[ebp], eax
mov	eax, DWORD PTR _zAlloc$8[ebp]
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
je	$LN17@exprDup
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_dupedExprStructSize
add	esp, 8
mov	DWORD PTR _nStructSize$4[ebp], eax
mov	eax, DWORD PTR _nStructSize$4[ebp]
and	eax, 4095				
mov	DWORD PTR _nNewSize$2[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 1024				
jne	SHORT $LN13@exprDup
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN13@exprDup
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
mov	DWORD PTR _nToken$6[ebp], eax
jmp	SHORT $LN12@exprDup
mov	DWORD PTR _nToken$6[ebp], 0
cmp	DWORD PTR _isReduced$5[ebp], 0
je	SHORT $LN11@exprDup
mov	eax, DWORD PTR _nNewSize$2[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _zAlloc$8[ebp]
push	edx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN10@exprDup
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_exprStructSize
add	esp, 4
mov	DWORD PTR _nSize$7[ebp], eax
mov	ecx, DWORD PTR _nSize$7[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _zAlloc$8[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, 48					
sub	ecx, DWORD PTR _nSize$7[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _zAlloc$8[ebp]
add	edx, DWORD PTR _nSize$7[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, -122881				
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _nStructSize$4[ebp]
and	eax, 24576				
mov	ecx, DWORD PTR _pNew$[ebp]
or	eax, DWORD PTR [ecx+4]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, DWORD PTR _staticFlag$3[ebp]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], ecx
cmp	DWORD PTR _nToken$6[ebp], 0
je	SHORT $LN9@exprDup
mov	eax, DWORD PTR _zAlloc$8[ebp]
add	eax, DWORD PTR _nNewSize$2[ebp]
mov	DWORD PTR tv147[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR tv147[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR tv147[ebp]
mov	DWORD PTR _zToken$1[ebp], eax
mov	ecx, DWORD PTR _nToken$6[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _zToken$1[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [edx+4]
or	ecx, DWORD PTR [eax+4]
and	ecx, 16384				
jne	SHORT $LN8@exprDup
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 2048				
je	SHORT $LN7@exprDup
mov	ecx, DWORD PTR _isReduced$5[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDup
add	esp, 12					
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+20], eax
jmp	SHORT $LN8@exprDup
mov	eax, DWORD PTR _isReduced$5[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 24576				
je	SHORT $LN5@exprDup
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_dupedExprNodeSize
add	esp, 8
add	eax, DWORD PTR _zAlloc$8[ebp]
mov	DWORD PTR _zAlloc$8[ebp], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 8192				
je	SHORT $LN4@exprDup
lea	edx, DWORD PTR _zAlloc$8[ebp]
push	edx
push	1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_exprDup
add	esp, 16					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+12], eax
lea	edx, DWORD PTR _zAlloc$8[ebp]
push	edx
push	1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_exprDup
add	esp, 16					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+16], eax
cmp	DWORD PTR _pzBuffer$[ebp], 0
je	SHORT $LN3@exprDup
mov	edx, DWORD PTR _pzBuffer$[ebp]
mov	eax, DWORD PTR _zAlloc$8[ebp]
mov	DWORD PTR [edx], eax
jmp	SHORT $LN17@exprDup
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 16384				
jne	SHORT $LN17@exprDup
push	0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+12], eax
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+16], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_dupedExprSize PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
mov	DWORD PTR _nByte$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@dupedExprS
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_dupedExprNodeSize
add	esp, 8
mov	DWORD PTR _nByte$[ebp], eax
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 1
je	SHORT $LN2@dupedExprS
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_dupedExprSize
add	esp, 8
mov	esi, eax
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_dupedExprSize
add	esp, 8
add	eax, DWORD PTR _nByte$[ebp]
add	eax, esi
mov	DWORD PTR _nByte$[ebp], eax
mov	eax, DWORD PTR _nByte$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_dupedExprNodeSize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_dupedExprStructSize
add	esp, 8
and	eax, 4095				
mov	DWORD PTR _nByte$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 1024				
jne	SHORT $LN1@dupedExprN
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN1@dupedExprN
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _nByte$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _nByte$[ebp], edx
mov	eax, DWORD PTR _nByte$[ebp]
add	eax, 7
and	eax, -8					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_dupedExprStructSize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 1
jne	SHORT $LN5@dupedExprS
mov	DWORD PTR _nSize$[ebp], 48		
jmp	SHORT $LN4@dupedExprS
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN2@dupedExprS
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+20], 0
je	SHORT $LN3@dupedExprS
mov	DWORD PTR _nSize$[ebp], 8220		
jmp	SHORT $LN4@dupedExprS
mov	DWORD PTR _nSize$[ebp], 16396		
mov	eax, DWORD PTR _nSize$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprStructSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 16384				
je	SHORT $LN2@exprStruct
mov	eax, 12					
jmp	SHORT $LN3@exprStruct
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 8192				
je	SHORT $LN1@exprStruct
mov	eax, 28					
jmp	SHORT $LN3@exprStruct
mov	eax, 48					
pop	ebp
ret	0
ENDP
_exprAlwaysFalse PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _v$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 1
je	SHORT $LN2@exprAlways
xor	eax, eax
jmp	SHORT $LN3@exprAlways
lea	edx, DWORD PTR _v$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
jne	SHORT $LN1@exprAlways
xor	eax, eax
jmp	SHORT $LN3@exprAlways
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN5@exprAlways
mov	DWORD PTR tv72[ebp], 1
jmp	SHORT $LN6@exprAlways
mov	DWORD PTR tv72[ebp], 0
mov	eax, DWORD PTR tv72[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprAlwaysTrue PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _v$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 1
je	SHORT $LN2@exprAlways
xor	eax, eax
jmp	SHORT $LN3@exprAlways
lea	edx, DWORD PTR _v$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
jne	SHORT $LN1@exprAlways
xor	eax, eax
jmp	SHORT $LN3@exprAlways
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN5@exprAlways
mov	DWORD PTR tv72[ebp], 1
jmp	SHORT $LN6@exprAlways
mov	DWORD PTR tv72[ebp], 0
mov	eax, DWORD PTR tv72[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_exprSetHeight PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _nHeight$[ebp], 0
lea	eax, DWORD PTR _nHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_heightOfExpr
add	esp, 8
lea	eax, DWORD PTR _nHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_heightOfExpr
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 2048				
je	SHORT $LN2@exprSetHei
lea	edx, DWORD PTR _nHeight$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
call	_heightOfSelect
add	esp, 8
jmp	SHORT $LN1@exprSetHei
lea	edx, DWORD PTR _nHeight$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
call	_heightOfExprList
add	esp, 8
mov	edx, DWORD PTR _nHeight$[ebp]
add	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+24], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_heightOfSelect PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	$LN2@heightOfSe
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+36]
push	edx
call	_heightOfExpr
add	esp, 8
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
call	_heightOfExpr
add	esp, 8
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_heightOfExpr
add	esp, 8
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_heightOfExpr
add	esp, 8
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_heightOfExprList
add	esp, 8
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	_heightOfExprList
add	esp, 8
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+48]
push	edx
call	_heightOfExprList
add	esp, 8
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
call	_heightOfSelect
add	esp, 8
pop	ebp
ret	0
ENDP
_heightOfExprList PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@heightOfEx
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN3@heightOfEx
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _i$1[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN5@heightOfEx
mov	eax, DWORD PTR _pnHeight$[ebp]
push	eax
imul	ecx, DWORD PTR _i$1[ebp], 24
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
call	_heightOfExpr
add	esp, 8
jmp	SHORT $LN2@heightOfEx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_heightOfExpr PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@heightOfEx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pnHeight$[ebp]
mov	edx, DWORD PTR [eax+24]
cmp	edx, DWORD PTR [ecx]
jle	SHORT $LN3@heightOfEx
mov	eax, DWORD PTR _pnHeight$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax], edx
pop	ebp
ret	0
ENDP
_codeCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pRight$[ebp]
push	eax
mov	ecx, DWORD PTR _pLeft$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BinaryCompareCollSeq
add	esp, 12					
mov	DWORD PTR _p4$[ebp], eax
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
mov	ecx, DWORD PTR _pRight$[ebp]
push	ecx
mov	edx, DWORD PTR _pLeft$[ebp]
push	edx
call	_binaryCompareP5
add	esp, 12					
movzx	eax, al
mov	DWORD PTR _p5$[ebp], eax
push	-4					
mov	ecx, DWORD PTR _p4$[ebp]
push	ecx
mov	edx, DWORD PTR _in1$[ebp]
push	edx
mov	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _in2$[ebp]
push	ecx
mov	edx, DWORD PTR _opcode$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	DWORD PTR _addr$[ebp], eax
movzx	edx, BYTE PTR _p5$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	eax, DWORD PTR _addr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_binaryCompareP5 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pExpr2$[ebp]
push	eax
call	_sqlite3ExprAffinity
add	esp, 4
mov	BYTE PTR _aff$[ebp], al
movzx	ecx, BYTE PTR _aff$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr1$[ebp]
push	edx
call	_sqlite3CompareAffinity
add	esp, 8
movzx	eax, al
movzx	ecx, BYTE PTR _jumpIfNull$[ebp]
or	eax, ecx
mov	BYTE PTR _aff$[ebp], al
mov	al, BYTE PTR _aff$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_comparisonAffinity PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3ExprAffinity
add	esp, 4
mov	BYTE PTR _aff$[ebp], al
mov	edx, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN5@comparison
movzx	eax, BYTE PTR _aff$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_sqlite3CompareAffinity
add	esp, 8
mov	BYTE PTR _aff$[ebp], al
jmp	SHORT $LN4@comparison
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 2048				
je	SHORT $LN3@comparison
movzx	edx, BYTE PTR _aff$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR [ecx]
mov	eax, 24					
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+4]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3CompareAffinity
add	esp, 8
mov	BYTE PTR _aff$[ebp], al
jmp	SHORT $LN4@comparison
movsx	ecx, BYTE PTR _aff$[ebp]
test	ecx, ecx
jne	SHORT $LN4@comparison
mov	BYTE PTR _aff$[ebp], 98			
mov	al, BYTE PTR _aff$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveSelectStep PROC
push	ebp
mov	ebp, esp
sub	esp, 104				
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 2
je	SHORT $LN39@resolveSel
mov	eax, 1
jmp	$LN40@resolveSel
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pOuterNC$[ebp], eax
mov	ecx, DWORD PTR _pWalker$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pParse$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 16					
jne	SHORT $LN38@resolveSel
mov	ecx, DWORD PTR _pOuterNC$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SelectPrep
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
jne	SHORT $LN42@resolveSel
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN42@resolveSel
mov	DWORD PTR tv83[ebp], 1
jmp	SHORT $LN43@resolveSel
mov	DWORD PTR tv83[ebp], 2
mov	eax, DWORD PTR tv83[ebp]
jmp	$LN40@resolveSel
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+52], 0
je	SHORT $LN44@resolveSel
mov	DWORD PTR tv86[ebp], 1
jmp	SHORT $LN45@resolveSel
mov	DWORD PTR tv86[ebp], 0
mov	edx, DWORD PTR tv86[ebp]
mov	DWORD PTR _isCompound$[ebp], edx
mov	DWORD PTR _nCompound$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pLeftmost$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	$LN36@resolveSel
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+6]
or	edx, 2
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+6], dx
push	32					
push	0
lea	ecx, DWORD PTR _sNC$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNC$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
jne	SHORT $LN34@resolveSel
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN35@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN33@resolveSel
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	$LN31@resolveSel
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
imul	eax, DWORD PTR _i$[ebp], 80
lea	ecx, DWORD PTR [edx+eax+8]
mov	DWORD PTR _pItem$5[ebp], ecx
mov	edx, DWORD PTR _pItem$5[ebp]
cmp	DWORD PTR [edx+20], 0
je	$LN30@resolveSel
mov	DWORD PTR _nRef$4[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+492]
mov	DWORD PTR _zSavedContext$2[ebp], ecx
mov	edx, DWORD PTR _pOuterNC$[ebp]
mov	DWORD PTR _pNC$6[ebp], edx
jmp	SHORT $LN29@resolveSel
mov	eax, DWORD PTR _pNC$6[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pNC$6[ebp], ecx
cmp	DWORD PTR _pNC$6[ebp], 0
je	SHORT $LN27@resolveSel
mov	edx, DWORD PTR _pNC$6[ebp]
mov	eax, DWORD PTR _nRef$4[ebp]
add	eax, DWORD PTR [edx+20]
mov	DWORD PTR _nRef$4[ebp], eax
jmp	SHORT $LN28@resolveSel
mov	ecx, DWORD PTR _pItem$5[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN26@resolveSel
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _pItem$5[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+492], ecx
mov	edx, DWORD PTR _pOuterNC$[ebp]
push	edx
mov	eax, DWORD PTR _pItem$5[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ResolveSelectNames
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _zSavedContext$2[ebp]
mov	DWORD PTR [eax+492], ecx
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+64], 0
jne	SHORT $LN24@resolveSel
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN25@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
mov	edx, DWORD PTR _pOuterNC$[ebp]
mov	DWORD PTR _pNC$6[ebp], edx
jmp	SHORT $LN23@resolveSel
mov	eax, DWORD PTR _pNC$6[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pNC$6[ebp], ecx
cmp	DWORD PTR _pNC$6[ebp], 0
je	SHORT $LN21@resolveSel
mov	edx, DWORD PTR _pNC$6[ebp]
mov	eax, DWORD PTR _nRef$4[ebp]
sub	eax, DWORD PTR [edx+20]
mov	DWORD PTR _nRef$4[ebp], eax
jmp	SHORT $LN22@resolveSel
cmp	DWORD PTR _nRef$4[ebp], 0
je	SHORT $LN46@resolveSel
mov	DWORD PTR tv173[ebp], 1
jmp	SHORT $LN47@resolveSel
mov	DWORD PTR tv173[ebp], 0
mov	ecx, DWORD PTR tv173[ebp]
and	ecx, 1
shl	ecx, 1
mov	edx, DWORD PTR _pItem$5[ebp]
mov	eax, DWORD PTR [edx+40]
and	eax, -3					
or	eax, ecx
mov	ecx, DWORD PTR _pItem$5[ebp]
mov	DWORD PTR [ecx+40], eax
jmp	$LN32@resolveSel
mov	BYTE PTR _sNC$[ebp+28], 1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _sNC$[ebp+4], eax
mov	ecx, DWORD PTR _pOuterNC$[ebp]
mov	DWORD PTR _sNC$[ebp+16], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pEList$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN20@resolveSel
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN18@resolveSel
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _pX$1[ebp], ecx
mov	edx, DWORD PTR _pX$1[ebp]
push	edx
lea	eax, DWORD PTR _sNC$[ebp]
push	eax
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN17@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
jmp	SHORT $LN19@resolveSel
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+40]
mov	DWORD PTR _pGroupBy$[ebp], edx
cmp	DWORD PTR _pGroupBy$[ebp], 0
jne	SHORT $LN15@resolveSel
movzx	eax, BYTE PTR _sNC$[ebp+28]
and	eax, 2
je	SHORT $LN16@resolveSel
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+6]
or	edx, 4
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+6], dx
jmp	SHORT $LN14@resolveSel
movzx	ecx, BYTE PTR _sNC$[ebp+28]
and	ecx, -2					
mov	BYTE PTR _sNC$[ebp+28], cl
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+44], 0
je	SHORT $LN13@resolveSel
cmp	DWORD PTR _pGroupBy$[ebp], 0
jne	SHORT $LN13@resolveSel
push	OFFSET $SG102952
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, 2
jmp	$LN40@resolveSel
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _sNC$[ebp+8], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN12@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN11@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
mov	DWORD PTR _sNC$[ebp+16], 0
movzx	eax, BYTE PTR _sNC$[ebp+28]
or	eax, 1
mov	BYTE PTR _sNC$[ebp+28], al
cmp	DWORD PTR _isCompound$[ebp], 0
jne	SHORT $LN10@resolveSel
push	OFFSET $SG102956
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+48]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
lea	ecx, DWORD PTR _sNC$[ebp]
push	ecx
call	_resolveOrderGroupBy
add	esp, 16					
test	eax, eax
je	SHORT $LN10@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN9@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
cmp	DWORD PTR _pGroupBy$[ebp], 0
je	$LN8@resolveSel
push	OFFSET $SG102962
mov	ecx, DWORD PTR _pGroupBy$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
lea	eax, DWORD PTR _sNC$[ebp]
push	eax
call	_resolveOrderGroupBy
add	esp, 16					
test	eax, eax
jne	SHORT $LN6@resolveSel
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN7@resolveSel
mov	eax, 2
jmp	$LN40@resolveSel
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pGroupBy$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$3[ebp], ecx
jmp	SHORT $LN5@resolveSel
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$3[ebp]
add	eax, 24					
mov	DWORD PTR _pItem$3[ebp], eax
mov	ecx, DWORD PTR _pGroupBy$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN8@resolveSel
mov	eax, DWORD PTR _pItem$3[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+4]
and	edx, 2
je	SHORT $LN2@resolveSel
push	OFFSET $SG102967
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, 2
jmp	SHORT $LN40@resolveSel
jmp	SHORT $LN4@resolveSel
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _nCompound$[ebp]
add	eax, 1
mov	DWORD PTR _nCompound$[ebp], eax
jmp	$LN37@resolveSel
cmp	DWORD PTR _isCompound$[ebp], 0
je	SHORT $LN1@resolveSel
mov	ecx, DWORD PTR _pLeftmost$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_resolveCompoundOrderBy
add	esp, 8
test	eax, eax
je	SHORT $LN1@resolveSel
mov	eax, 2
jmp	SHORT $LN40@resolveSel
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveOrderGroupBy PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
cmp	DWORD PTR _pOrderBy$[ebp], 0
jne	SHORT $LN14@resolveOrd
xor	eax, eax
jmp	$LN15@resolveOrd
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _nResult$[ebp], edx
mov	eax, DWORD PTR _pNC$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pParse$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$[ebp], eax
jmp	SHORT $LN13@resolveOrd
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 24					
mov	DWORD PTR _pItem$[ebp], edx
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	$LN11@resolveOrd
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pE$2[ebp], eax
mov	ecx, DWORD PTR _pE$2[ebp]
push	ecx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pE2$1[ebp], eax
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zType$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 71					
je	SHORT $LN10@resolveOrd
mov	eax, DWORD PTR _pE2$1[ebp]
push	eax
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_resolveAsName
add	esp, 12					
mov	DWORD PTR _iCol$[ebp], eax
cmp	DWORD PTR _iCol$[ebp], 0
jle	SHORT $LN10@resolveOrd
mov	ecx, DWORD PTR _pItem$[ebp]
mov	dx, WORD PTR _iCol$[ebp]
mov	WORD PTR [ecx+20], dx
jmp	SHORT $LN12@resolveOrd
lea	eax, DWORD PTR _iCol$[ebp]
push	eax
mov	ecx, DWORD PTR _pE2$1[ebp]
push	ecx
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
je	SHORT $LN8@resolveOrd
cmp	DWORD PTR _iCol$[ebp], 1
jl	SHORT $LN6@resolveOrd
cmp	DWORD PTR _iCol$[ebp], 65535		
jle	SHORT $LN7@resolveOrd
mov	edx, DWORD PTR _nResult$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _zType$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_resolveOutOfRangeError
add	esp, 16					
mov	eax, 1
jmp	$LN15@resolveOrd
mov	eax, DWORD PTR _pItem$[ebp]
mov	cx, WORD PTR _iCol$[ebp]
mov	WORD PTR [eax+20], cx
jmp	$LN12@resolveOrd
xor	edx, edx
mov	eax, DWORD PTR _pItem$[ebp]
mov	WORD PTR [eax+20], dx
mov	ecx, DWORD PTR _pE$2[ebp]
push	ecx
mov	edx, DWORD PTR _pNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN5@resolveOrd
mov	eax, 1
jmp	SHORT $LN15@resolveOrd
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN4@resolveOrd
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN2@resolveOrd
push	-1
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	edx, DWORD PTR [ecx]
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR [ecx+eax]
push	edx
mov	eax, DWORD PTR _pE$2[ebp]
push	eax
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@resolveOrd
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	edx, DWORD PTR _pItem$[ebp]
mov	WORD PTR [edx+20], cx
jmp	SHORT $LN3@resolveOrd
jmp	$LN12@resolveOrd
mov	eax, DWORD PTR _zType$[ebp]
push	eax
mov	ecx, DWORD PTR _pOrderBy$[ebp]
push	ecx
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ResolveOrderGroupBy
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveCompoundOrderBy PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	DWORD PTR _moreToDo$[ebp], 1
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _pOrderBy$[ebp], ecx
cmp	DWORD PTR _pOrderBy$[ebp], 0
jne	SHORT $LN28@resolveCom
xor	eax, eax
jmp	$LN29@resolveCom
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [edx]
cmp	edx, DWORD PTR [eax+ecx+88]
jle	SHORT $LN27@resolveCom
push	OFFSET $SG102799
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, 1
jmp	$LN29@resolveCom
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN26@resolveCom
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN24@resolveCom
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+16]
and	ecx, -2					
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [eax+4]
mov	DWORD PTR [eax+edx+16], ecx
jmp	SHORT $LN25@resolveCom
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	DWORD PTR [ecx+56], 0
mov	edx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [edx+52], 0
je	SHORT $LN21@resolveCom
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	edx, DWORD PTR _pSelect$[ebp]
mov	DWORD PTR [ecx+56], edx
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pSelect$[ebp], ecx
jmp	SHORT $LN23@resolveCom
cmp	DWORD PTR _pSelect$[ebp], 0
je	$LN20@resolveCom
cmp	DWORD PTR _moreToDo$[ebp], 0
je	$LN20@resolveCom
mov	DWORD PTR _moreToDo$[ebp], 0
mov	edx, DWORD PTR _pSelect$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pEList$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pOrderBy$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pItem$5[ebp], edx
jmp	SHORT $LN19@resolveCom
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pItem$5[ebp]
add	ecx, 24					
mov	DWORD PTR _pItem$5[ebp], ecx
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	$LN17@resolveCom
mov	DWORD PTR _iCol$4[ebp], -1
mov	ecx, DWORD PTR _pItem$5[ebp]
mov	edx, DWORD PTR [ecx+16]
and	edx, 1
je	SHORT $LN16@resolveCom
jmp	SHORT $LN18@resolveCom
mov	eax, DWORD PTR _pItem$5[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pE$2[ebp], eax
lea	edx, DWORD PTR _iCol$4[ebp]
push	edx
mov	eax, DWORD PTR _pE$2[ebp]
push	eax
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
je	SHORT $LN15@resolveCom
cmp	DWORD PTR _iCol$4[ebp], 0
jle	SHORT $LN13@resolveCom
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR _iCol$4[ebp]
cmp	edx, DWORD PTR [ecx]
jle	SHORT $LN14@resolveCom
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
push	edx
push	OFFSET $SG102821
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_resolveOutOfRangeError
add	esp, 16					
mov	eax, 1
jmp	$LN29@resolveCom
jmp	SHORT $LN12@resolveCom
mov	ecx, DWORD PTR _pE$2[ebp]
push	ecx
mov	edx, DWORD PTR _pEList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_resolveAsName
add	esp, 12					
mov	DWORD PTR _iCol$4[ebp], eax
cmp	DWORD PTR _iCol$4[ebp], 0
jne	SHORT $LN12@resolveCom
push	0
mov	ecx, DWORD PTR _pE$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pDup$1[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	SHORT $LN10@resolveCom
mov	edx, DWORD PTR _pDup$1[ebp]
push	edx
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_resolveOrderByTermToExprList
add	esp, 12					
mov	DWORD PTR _iCol$4[ebp], eax
mov	edx, DWORD PTR _pDup$1[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
cmp	DWORD PTR _iCol$4[ebp], 0
jle	$LN9@resolveCom
push	0
push	132					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Expr
add	esp, 12					
mov	DWORD PTR _pNew$3[ebp], eax
cmp	DWORD PTR _pNew$3[ebp], 0
jne	SHORT $LN8@resolveCom
mov	eax, 1
jmp	$LN29@resolveCom
mov	edx, DWORD PTR _pNew$3[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 1024				
mov	ecx, DWORD PTR _pNew$3[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pNew$3[ebp]
mov	eax, DWORD PTR _iCol$4[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pItem$5[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _pE$2[ebp]
jne	SHORT $LN7@resolveCom
mov	eax, DWORD PTR _pItem$5[ebp]
mov	ecx, DWORD PTR _pNew$3[ebp]
mov	DWORD PTR [eax], ecx
jmp	SHORT $LN6@resolveCom
mov	edx, DWORD PTR _pItem$5[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pNew$3[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pE$2[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, DWORD PTR _pItem$5[ebp]
mov	dx, WORD PTR _iCol$4[ebp]
mov	WORD PTR [ecx+20], dx
mov	eax, DWORD PTR _pItem$5[ebp]
mov	ecx, DWORD PTR [eax+16]
or	ecx, 1
mov	edx, DWORD PTR _pItem$5[ebp]
mov	DWORD PTR [edx+16], ecx
jmp	SHORT $LN5@resolveCom
mov	DWORD PTR _moreToDo$[ebp], 1
jmp	$LN18@resolveCom
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _pSelect$[ebp], ecx
jmp	$LN21@resolveCom
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@resolveCom
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN2@resolveCom
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+16]
and	edx, 1
jne	SHORT $LN1@resolveCom
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
push	eax
push	OFFSET $SG102839
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	SHORT $LN29@resolveCom
jmp	SHORT $LN3@resolveCom
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveOutOfRangeError PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _mx$[ebp]
push	eax
mov	ecx, DWORD PTR _zType$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
push	edx
push	OFFSET $SG102785
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 20					
pop	ebp
ret	0
ENDP
_resolveOrderByTermToExprList PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pEList$[ebp], ecx
push	32					
push	0
lea	edx, DWORD PTR _nc$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _nc$[ebp], eax
mov	ecx, DWORD PTR _pSelect$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _nc$[ebp+4], edx
mov	eax, DWORD PTR _pEList$[ebp]
mov	DWORD PTR _nc$[ebp+8], eax
mov	BYTE PTR _nc$[ebp+28], 1
mov	DWORD PTR _nc$[ebp+24], 0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	cl, BYTE PTR [eax+67]
mov	BYTE PTR _savedSuppErr$[ebp], cl
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+67], 1
mov	eax, DWORD PTR _pE$[ebp]
push	eax
lea	ecx, DWORD PTR _nc$[ebp]
push	ecx
call	_sqlite3ResolveExprNames
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR _savedSuppErr$[ebp]
mov	BYTE PTR [edx+67], al
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@resolveOrd
xor	eax, eax
jmp	SHORT $LN6@resolveOrd
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@resolveOrd
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN2@resolveOrd
push	-1
mov	ecx, DWORD PTR _pE$[ebp]
push	ecx
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
call	_sqlite3ExprCompare
add	esp, 12					
cmp	eax, 2
jge	SHORT $LN1@resolveOrd
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
jmp	SHORT $LN6@resolveOrd
jmp	SHORT $LN3@resolveOrd
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveAsName PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pE$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 27					
jne	SHORT $LN5@resolveAsN
mov	edx, DWORD PTR _pE$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _zCol$1[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@resolveAsN
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN5@resolveAsN
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _zAs$2[ebp], ecx
cmp	DWORD PTR _zAs$2[ebp], 0
je	SHORT $LN1@resolveAsN
mov	edx, DWORD PTR _zCol$1[ebp]
push	edx
mov	eax, DWORD PTR _zAs$2[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@resolveAsN
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
jmp	SHORT $LN6@resolveAsN
jmp	SHORT $LN3@resolveAsN
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveExprStep PROC
push	ebp
mov	ebp, esp
sub	esp, 88					
mov	eax, DWORD PTR _pWalker$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pNC$[ebp], ecx
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 4
je	SHORT $LN35@resolveExp
mov	eax, 1
jmp	$LN36@resolveExp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 4
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv74[ebp], ecx
mov	edx, DWORD PTR tv74[ebp]
sub	edx, 20					
mov	DWORD PTR tv74[ebp], edx
cmp	DWORD PTR tv74[ebp], 133		
ja	$LN33@resolveExp
mov	eax, DWORD PTR tv74[ebp]
movzx	ecx, BYTE PTR $LN44@resolveExp[eax]
jmp	DWORD PTR $LN45@resolveExp[ecx*4]
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pNC$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	0
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_lookupName
add	esp, 24					
jmp	$LN36@resolveExp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pRight$10[ebp], edx
mov	eax, DWORD PTR _pRight$10[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 27					
jne	SHORT $LN30@resolveExp
mov	DWORD PTR _zDb$6[ebp], 0
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _zTable$7[ebp], ecx
mov	edx, DWORD PTR _pRight$10[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _zColumn$8[ebp], eax
jmp	SHORT $LN29@resolveExp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _zDb$6[ebp], eax
mov	ecx, DWORD PTR _pRight$10[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _zTable$7[ebp], eax
mov	ecx, DWORD PTR _pRight$10[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _zColumn$8[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pNC$[ebp]
push	edx
mov	eax, DWORD PTR _zColumn$8[ebp]
push	eax
mov	ecx, DWORD PTR _zTable$7[ebp]
push	ecx
mov	edx, DWORD PTR _zDb$6[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_lookupName
add	esp, 24					
jmp	$LN36@resolveExp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pList$9[ebp], edx
cmp	DWORD PTR _pList$9[ebp], 0
je	SHORT $LN38@resolveExp
mov	eax, DWORD PTR _pList$9[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR tv138[ebp], ecx
jmp	SHORT $LN39@resolveExp
mov	DWORD PTR tv138[ebp], 0
mov	edx, DWORD PTR tv138[ebp]
mov	DWORD PTR _n$5[ebp], edx
mov	DWORD PTR _no_such_func$3[ebp], 0
mov	DWORD PTR _wrong_num_args$2[ebp], 0
mov	DWORD PTR _is_agg$11[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+eax+12]
mov	al, BYTE PTR [edx+77]
mov	BYTE PTR _enc$16[ebp], al
push	OFFSET $SG102697
mov	ecx, DWORD PTR _pNC$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_notValidPartIdxWhere
add	esp, 12					
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _zId$13[ebp], ecx
mov	edx, DWORD PTR _zId$13[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nId$12[ebp], eax
push	0
movzx	eax, BYTE PTR _enc$16[ebp]
push	eax
mov	ecx, DWORD PTR _n$5[ebp]
push	ecx
mov	edx, DWORD PTR _nId$12[ebp]
push	edx
mov	eax, DWORD PTR _zId$13[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3FindFunction
add	esp, 24					
mov	DWORD PTR _pDef$15[ebp], eax
cmp	DWORD PTR _pDef$15[ebp], 0
jne	SHORT $LN27@resolveExp
push	0
movzx	eax, BYTE PTR _enc$16[ebp]
push	eax
push	-2					
mov	ecx, DWORD PTR _nId$12[ebp]
push	ecx
mov	edx, DWORD PTR _zId$13[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3FindFunction
add	esp, 24					
mov	DWORD PTR _pDef$15[ebp], eax
cmp	DWORD PTR _pDef$15[ebp], 0
jne	SHORT $LN26@resolveExp
mov	DWORD PTR _no_such_func$3[ebp], 1
jmp	SHORT $LN25@resolveExp
mov	DWORD PTR _wrong_num_args$2[ebp], 1
jmp	$LN24@resolveExp
mov	edx, DWORD PTR _pDef$15[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN40@resolveExp
mov	DWORD PTR tv171[ebp], 1
jmp	SHORT $LN41@resolveExp
mov	DWORD PTR tv171[ebp], 0
mov	eax, DWORD PTR tv171[ebp]
mov	DWORD PTR _is_agg$11[ebp], eax
mov	ecx, DWORD PTR _pDef$15[ebp]
movzx	edx, WORD PTR [ecx+2]
and	edx, 1024				
je	SHORT $LN24@resolveExp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 266240				
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+4], ecx
cmp	DWORD PTR _n$5[ebp], 2
jne	SHORT $LN22@resolveExp
mov	eax, 24					
shl	eax, 0
mov	ecx, DWORD PTR _pList$9[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
call	_exprProbability
add	esp, 4
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [edx+28], 0
jge	SHORT $LN21@resolveExp
push	OFFSET $SG102705
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 1
mov	eax, DWORD PTR _pNC$[ebp]
mov	DWORD PTR [eax+24], edx
jmp	SHORT $LN24@resolveExp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+28], 62			
cmp	DWORD PTR _pDef$15[ebp], 0
je	SHORT $LN19@resolveExp
push	0
mov	edx, DWORD PTR _pDef$15[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
push	0
push	31					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
mov	DWORD PTR _auth$4[ebp], eax
cmp	DWORD PTR _auth$4[ebp], 0
je	SHORT $LN18@resolveExp
cmp	DWORD PTR _auth$4[ebp], 1
jne	SHORT $LN17@resolveExp
mov	edx, DWORD PTR _pDef$15[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
push	OFFSET $SG102710
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx+24]
add	eax, 1
mov	ecx, DWORD PTR _pNC$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [edx], 101			
mov	eax, 1
jmp	$LN36@resolveExp
mov	eax, DWORD PTR _pDef$15[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 2048				
je	SHORT $LN19@resolveExp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 524288				
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+4], eax
cmp	DWORD PTR _is_agg$11[ebp], 0
je	SHORT $LN15@resolveExp
mov	edx, DWORD PTR _pNC$[ebp]
movzx	eax, BYTE PTR [edx+28]
and	eax, 1
jne	SHORT $LN15@resolveExp
mov	ecx, DWORD PTR _zId$13[ebp]
push	ecx
mov	edx, DWORD PTR _nId$12[ebp]
push	edx
push	OFFSET $SG102713
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 1
mov	eax, DWORD PTR _pNC$[ebp]
mov	DWORD PTR [eax+24], edx
mov	DWORD PTR _is_agg$11[ebp], 0
jmp	SHORT $LN14@resolveExp
cmp	DWORD PTR _no_such_func$3[ebp], 0
je	SHORT $LN13@resolveExp
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
jne	SHORT $LN13@resolveExp
mov	ecx, DWORD PTR _zId$13[ebp]
push	ecx
mov	edx, DWORD PTR _nId$12[ebp]
push	edx
push	OFFSET $SG102716
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 1
mov	eax, DWORD PTR _pNC$[ebp]
mov	DWORD PTR [eax+24], edx
jmp	SHORT $LN14@resolveExp
cmp	DWORD PTR _wrong_num_args$2[ebp], 0
je	SHORT $LN14@resolveExp
mov	ecx, DWORD PTR _zId$13[ebp]
push	ecx
mov	edx, DWORD PTR _nId$12[ebp]
push	edx
push	OFFSET $SG102719
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 1
mov	eax, DWORD PTR _pNC$[ebp]
mov	DWORD PTR [eax+24], edx
cmp	DWORD PTR _is_agg$11[ebp], 0
je	SHORT $LN10@resolveExp
mov	ecx, DWORD PTR _pNC$[ebp]
movzx	edx, BYTE PTR [ecx+28]
and	edx, -2					
mov	eax, DWORD PTR _pNC$[ebp]
mov	BYTE PTR [eax+28], dl
mov	ecx, DWORD PTR _pList$9[ebp]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExprList
add	esp, 8
cmp	DWORD PTR _is_agg$11[ebp], 0
je	SHORT $LN9@resolveExp
mov	eax, DWORD PTR _pNC$[ebp]
mov	DWORD PTR _pNC2$14[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [ecx], 155			
mov	edx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [edx+38], 0
cmp	DWORD PTR _pNC2$14[ebp], 0
je	SHORT $LN7@resolveExp
mov	eax, DWORD PTR _pNC2$14[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
call	_sqlite3FunctionUsesThisSrc
add	esp, 8
test	eax, eax
jne	SHORT $LN7@resolveExp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	cl, BYTE PTR [eax+38]
add	cl, 1
mov	edx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [edx+38], cl
mov	eax, DWORD PTR _pNC2$14[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pNC2$14[ebp], ecx
jmp	SHORT $LN8@resolveExp
cmp	DWORD PTR _pNC2$14[ebp], 0
je	SHORT $LN6@resolveExp
mov	edx, DWORD PTR _pNC2$14[ebp]
movzx	eax, BYTE PTR [edx+28]
or	eax, 2
mov	ecx, DWORD PTR _pNC2$14[ebp]
mov	BYTE PTR [ecx+28], al
mov	edx, DWORD PTR _pNC$[ebp]
movzx	eax, BYTE PTR [edx+28]
or	eax, 1
mov	ecx, DWORD PTR _pNC$[ebp]
mov	BYTE PTR [ecx+28], al
mov	eax, 1
jmp	$LN36@resolveExp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 2048				
je	SHORT $LN3@resolveExp
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _nRef$1[ebp], edx
push	OFFSET $SG102731
mov	eax, DWORD PTR _pNC$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_notValidCheckConstraint
add	esp, 12					
push	OFFSET $SG102732
mov	edx, DWORD PTR _pNC$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_notValidPartIdxWhere
add	esp, 12					
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pWalker$[ebp]
push	eax
call	_sqlite3WalkSelect
add	esp, 8
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR _nRef$1[ebp]
cmp	edx, DWORD PTR [ecx+20]
je	SHORT $LN3@resolveExp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 32					
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+4], ecx
jmp	SHORT $LN33@resolveExp
push	OFFSET $SG102736
mov	eax, DWORD PTR _pNC$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_notValidCheckConstraint
add	esp, 12					
push	OFFSET $SG102737
mov	edx, DWORD PTR _pNC$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_notValidPartIdxWhere
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
jne	SHORT $LN42@resolveExp
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	SHORT $LN42@resolveExp
mov	DWORD PTR tv322[ebp], 0
jmp	SHORT $LN43@resolveExp
mov	DWORD PTR tv322[ebp], 2
mov	eax, DWORD PTR tv322[ebp]
mov	esp, ebp
pop	ebp
ret	0
DD	$LN4@resolveExp
DD	$LN32@resolveExp
DD	$LN31@resolveExp
DD	$LN1@resolveExp
DD	$LN28@resolveExp
DD	$LN33@resolveExp
DB	0
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	1
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	0
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	0
DB	5
DB	5
DB	2
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	3
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	4
ENDP
_exprProbability PROC
push	ebp
mov	ebp, esp
sub	esp, 8
movsd	xmm0, QWORD PTR __real@bff0000000000000
movsd	QWORD PTR _r$[ebp], xmm0
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 133				
je	SHORT $LN2@exprProbab
or	eax, -1
jmp	SHORT $LN3@exprProbab
push	1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	ecx, DWORD PTR _r$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3AtoF
add	esp, 16					
movsd	xmm0, QWORD PTR _r$[ebp]
comisd	xmm0, QWORD PTR __real@3ff0000000000000
jbe	SHORT $LN1@exprProbab
or	eax, -1
jmp	SHORT $LN3@exprProbab
movsd	xmm0, QWORD PTR _r$[ebp]
mulsd	xmm0, QWORD PTR __real@408f400000000000
cvttsd2si eax, xmm0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_notValidCheckConstraint PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pNC$[ebp]
movzx	ecx, BYTE PTR [eax+28]
and	ecx, 4
je	SHORT $LN2@notValidCh
mov	edx, DWORD PTR _zMsg$[ebp]
push	edx
push	OFFSET $SG102651
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
pop	ebp
ret	0
ENDP
_notValidPartIdxWhere PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pNC$[ebp]
movzx	ecx, BYTE PTR [eax+28]
and	ecx, 16					
je	SHORT $LN2@notValidPa
mov	edx, DWORD PTR _zMsg$[ebp]
push	edx
push	OFFSET $SG102641
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
pop	ebp
ret	0
ENDP
_lookupName PROC
push	ebp
mov	ebp, esp
sub	esp, 120				
mov	DWORD PTR _cnt$[ebp], 0
mov	DWORD PTR _cntTab$[ebp], 0
mov	DWORD PTR _nSubquery$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _pMatch$[ebp], 0
mov	edx, DWORD PTR _pNC$[ebp]
mov	DWORD PTR _pTopNC$[ebp], edx
mov	DWORD PTR _pSchema$[ebp], 0
mov	DWORD PTR _isTrigger$[ebp], 0
mov	DWORD PTR _pTab$[ebp], 0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [eax+28], -1
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+44], 0
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN64@lookupName
mov	edx, DWORD PTR _pNC$[ebp]
movzx	eax, BYTE PTR [edx+28]
and	eax, 20					
je	SHORT $LN70@lookupName
mov	DWORD PTR _zDb$[ebp], 0
jmp	SHORT $LN64@lookupName
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN68@lookupName
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN64@lookupName
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN65@lookupName
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
mov	DWORD PTR _pSchema$[ebp], eax
jmp	SHORT $LN64@lookupName
jmp	SHORT $LN67@lookupName
cmp	DWORD PTR _pNC$[ebp], 0
je	$LN63@lookupName
cmp	DWORD PTR _cnt$[ebp], 0
jne	$LN63@lookupName
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pSrcList$8[ebp], edx
cmp	DWORD PTR _pSrcList$8[ebp], 0
je	$LN62@lookupName
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pSrcList$8[ebp]
add	eax, 8
mov	DWORD PTR _pItem$[ebp], eax
jmp	SHORT $LN61@lookupName
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 80					
mov	DWORD PTR _pItem$[ebp], edx
mov	eax, DWORD PTR _pSrcList$8[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	$LN59@lookupName
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pTab$[ebp], eax
mov	ecx, DWORD PTR _pItem$[ebp]
cmp	DWORD PTR [ecx+20], 0
je	$LN58@lookupName
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+20]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 512				
je	$LN58@lookupName
mov	DWORD PTR _hit$4[ebp], 0
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pEList$9[ebp], ecx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN57@lookupName
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pEList$9[ebp]
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN55@lookupName
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _zTab$[ebp]
push	eax
mov	ecx, DWORD PTR _zCol$[ebp]
push	ecx
imul	edx, DWORD PTR _j$[ebp], 24
mov	eax, DWORD PTR _pEList$9[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+8]
push	edx
call	_sqlite3MatchSpanName
add	esp, 16					
test	eax, eax
je	SHORT $LN54@lookupName
mov	eax, DWORD PTR _cnt$[ebp]
add	eax, 1
mov	DWORD PTR _cnt$[ebp], eax
mov	DWORD PTR _cntTab$[ebp], 2
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR _pMatch$[ebp], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	ax, WORD PTR _j$[ebp]
mov	WORD PTR [edx+32], ax
mov	DWORD PTR _hit$4[ebp], 1
jmp	SHORT $LN56@lookupName
cmp	DWORD PTR _hit$4[ebp], 0
jne	SHORT $LN52@lookupName
cmp	DWORD PTR _zTab$[ebp], 0
jne	SHORT $LN58@lookupName
jmp	$LN60@lookupName
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN51@lookupName
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+68]
cmp	edx, DWORD PTR _pSchema$[ebp]
je	SHORT $LN51@lookupName
jmp	$LN60@lookupName
cmp	DWORD PTR _zTab$[ebp], 0
je	SHORT $LN50@lookupName
mov	eax, DWORD PTR _pItem$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN74@lookupName
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR tv163[ebp], edx
jmp	SHORT $LN75@lookupName
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR tv163[ebp], ecx
mov	edx, DWORD PTR tv163[ebp]
mov	DWORD PTR _zTabName$2[ebp], edx
mov	eax, DWORD PTR _zTab$[ebp]
push	eax
mov	ecx, DWORD PTR _zTabName$2[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN50@lookupName
jmp	$LN60@lookupName
mov	edx, DWORD PTR _cntTab$[ebp]
mov	DWORD PTR tv170[ebp], edx
mov	eax, DWORD PTR _cntTab$[ebp]
add	eax, 1
mov	DWORD PTR _cntTab$[ebp], eax
cmp	DWORD PTR tv170[ebp], 0
jne	SHORT $LN48@lookupName
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR _pMatch$[ebp], ecx
mov	DWORD PTR _j$[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pCol$[ebp], eax
jmp	SHORT $LN47@lookupName
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pCol$[ebp]
add	edx, 24					
mov	DWORD PTR _pCol$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _j$[ebp], ecx
jge	$LN45@lookupName
mov	edx, DWORD PTR _zCol$[ebp]
push	edx
mov	eax, DWORD PTR _pCol$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN44@lookupName
cmp	DWORD PTR _cnt$[ebp], 1
jne	SHORT $LN43@lookupName
mov	edx, DWORD PTR _pItem$[ebp]
movzx	eax, BYTE PTR [edx+36]
and	eax, 4
je	SHORT $LN42@lookupName
jmp	SHORT $LN46@lookupName
mov	ecx, DWORD PTR _zCol$[ebp]
push	ecx
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
call	_nameInUsingClause
add	esp, 8
test	eax, eax
je	SHORT $LN43@lookupName
jmp	SHORT $LN46@lookupName
mov	ecx, DWORD PTR _cnt$[ebp]
add	ecx, 1
mov	DWORD PTR _cnt$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR _pMatch$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+36]
cmp	DWORD PTR _j$[ebp], ecx
jne	SHORT $LN76@lookupName
mov	DWORD PTR tv198[ebp], -1
jmp	SHORT $LN77@lookupName
movsx	edx, WORD PTR _j$[ebp]
mov	DWORD PTR tv198[ebp], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	cx, WORD PTR tv198[ebp]
mov	WORD PTR [eax+32], cx
jmp	SHORT $LN45@lookupName
jmp	$LN46@lookupName
jmp	$LN60@lookupName
cmp	DWORD PTR _pMatch$[ebp], 0
je	SHORT $LN62@lookupName
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR _pMatch$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR [edx+28], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR _pMatch$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx+44], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _pSchema$[ebp], ecx
cmp	DWORD PTR _zDb$[ebp], 0
jne	$LN39@lookupName
cmp	DWORD PTR _zTab$[ebp], 0
je	$LN39@lookupName
cmp	DWORD PTR _cntTab$[ebp], 0
jne	$LN39@lookupName
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+412], 0
je	$LN39@lookupName
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+436]
mov	DWORD PTR _op$3[ebp], ecx
cmp	DWORD PTR _op$3[ebp], 109		
je	SHORT $LN38@lookupName
mov	edx, DWORD PTR _zTab$[ebp]
push	edx
push	OFFSET $SG102544
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN38@lookupName
mov	eax, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [eax+28], 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+412]
mov	DWORD PTR _pTab$[ebp], edx
jmp	SHORT $LN37@lookupName
cmp	DWORD PTR _op$3[ebp], 108		
je	SHORT $LN36@lookupName
mov	eax, DWORD PTR _zTab$[ebp]
push	eax
push	OFFSET $SG102547
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN36@lookupName
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+28], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+412]
mov	DWORD PTR _pTab$[ebp], eax
jmp	SHORT $LN37@lookupName
mov	DWORD PTR _pTab$[ebp], 0
cmp	DWORD PTR _pTab$[ebp], 0
je	$LN39@lookupName
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _pSchema$[ebp], edx
mov	eax, DWORD PTR _cntTab$[ebp]
add	eax, 1
mov	DWORD PTR _cntTab$[ebp], eax
mov	DWORD PTR _iCol$10[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$[ebp], edx
jmp	SHORT $LN33@lookupName
mov	eax, DWORD PTR _iCol$10[ebp]
add	eax, 1
mov	DWORD PTR _iCol$10[ebp], eax
mov	ecx, DWORD PTR _pCol$[ebp]
add	ecx, 24					
mov	DWORD PTR _pCol$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _iCol$10[ebp], eax
jge	SHORT $LN31@lookupName
mov	ecx, DWORD PTR _zCol$[ebp]
push	ecx
mov	edx, DWORD PTR _pCol$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN30@lookupName
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _iCol$10[ebp], edx
jne	SHORT $LN29@lookupName
mov	DWORD PTR _iCol$10[ebp], -1
jmp	SHORT $LN31@lookupName
jmp	SHORT $LN32@lookupName
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _iCol$10[ebp], ecx
jl	SHORT $LN28@lookupName
mov	edx, DWORD PTR _zCol$[ebp]
push	edx
call	_sqlite3IsRowid
add	esp, 4
test	eax, eax
je	SHORT $LN28@lookupName
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN28@lookupName
mov	DWORD PTR _iCol$10[ebp], -1
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _iCol$10[ebp], eax
jge	$LN39@lookupName
mov	ecx, DWORD PTR _cnt$[ebp]
add	ecx, 1
mov	DWORD PTR _cnt$[ebp], ecx
cmp	DWORD PTR _iCol$10[ebp], 0
jge	SHORT $LN26@lookupName
mov	edx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [edx+1], 100			
jmp	SHORT $LN25@lookupName
mov	eax, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [eax+28], 0
jne	SHORT $LN24@lookupName
cmp	DWORD PTR _iCol$10[ebp], 32		
jl	SHORT $LN78@lookupName
mov	DWORD PTR tv266[ebp], -1
jmp	SHORT $LN79@lookupName
mov	edx, 1
mov	ecx, DWORD PTR _iCol$10[ebp]
shl	edx, cl
mov	DWORD PTR tv266[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+428]
or	ecx, DWORD PTR tv266[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+428], ecx
jmp	SHORT $LN25@lookupName
cmp	DWORD PTR _iCol$10[ebp], 32		
jl	SHORT $LN80@lookupName
mov	DWORD PTR tv272[ebp], -1
jmp	SHORT $LN81@lookupName
mov	eax, 1
mov	ecx, DWORD PTR _iCol$10[ebp]
shl	eax, cl
mov	DWORD PTR tv272[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+432]
or	edx, DWORD PTR tv272[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+432], edx
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	dx, WORD PTR _iCol$10[ebp]
mov	WORD PTR [ecx+32], dx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [eax+44], ecx
mov	DWORD PTR _isTrigger$[ebp], 1
cmp	DWORD PTR _cnt$[ebp], 0
jne	SHORT $LN22@lookupName
cmp	DWORD PTR _cntTab$[ebp], 1
jne	SHORT $LN22@lookupName
cmp	DWORD PTR _pMatch$[ebp], 0
je	SHORT $LN22@lookupName
mov	edx, DWORD PTR _zCol$[ebp]
push	edx
call	_sqlite3IsRowid
add	esp, 4
test	eax, eax
je	SHORT $LN22@lookupName
mov	eax, DWORD PTR _pMatch$[ebp]
mov	ecx, DWORD PTR [eax+16]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN22@lookupName
mov	DWORD PTR _cnt$[ebp], 1
or	eax, -1
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	WORD PTR [ecx+32], ax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [edx+1], 100			
mov	eax, DWORD PTR _pNC$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pEList$9[ebp], ecx
cmp	DWORD PTR _pEList$9[ebp], 0
je	$LN21@lookupName
cmp	DWORD PTR _zTab$[ebp], 0
jne	$LN21@lookupName
cmp	DWORD PTR _cnt$[ebp], 0
jne	$LN21@lookupName
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN20@lookupName
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pEList$9[ebp]
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	$LN21@lookupName
imul	edx, DWORD PTR _j$[ebp], 24
mov	eax, DWORD PTR _pEList$9[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _zAs$7[ebp], edx
cmp	DWORD PTR _zAs$7[ebp], 0
je	$LN17@lookupName
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
mov	ecx, DWORD PTR _zAs$7[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN17@lookupName
imul	edx, DWORD PTR _j$[ebp], 24
mov	eax, DWORD PTR _pEList$9[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _pOrig$1[ebp], edx
mov	eax, DWORD PTR _pNC$[ebp]
movzx	ecx, BYTE PTR [eax+28]
and	ecx, 1
jne	SHORT $LN16@lookupName
mov	edx, DWORD PTR _pOrig$1[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 2
je	SHORT $LN16@lookupName
mov	ecx, DWORD PTR _zAs$7[ebp]
push	ecx
push	OFFSET $SG102577
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 2
jmp	$LN72@lookupName
mov	eax, DWORD PTR _nSubquery$[ebp]
push	eax
push	OFFSET $SG102578
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _pEList$9[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_resolveAlias
add	esp, 24					
mov	DWORD PTR _cnt$[ebp], 1
mov	DWORD PTR _pMatch$[ebp], 0
jmp	$lookupname_end$86
jmp	$LN19@lookupName
cmp	DWORD PTR _cnt$[ebp], 0
jne	SHORT $LN15@lookupName
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pNC$[ebp], eax
mov	ecx, DWORD PTR _nSubquery$[ebp]
add	ecx, 1
mov	DWORD PTR _nSubquery$[ebp], ecx
jmp	$LN64@lookupName
cmp	DWORD PTR _cnt$[ebp], 0
jne	SHORT $LN14@lookupName
cmp	DWORD PTR _zTab$[ebp], 0
jne	SHORT $LN14@lookupName
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 64					
je	SHORT $LN14@lookupName
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [ecx], 97			
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+44], 0
mov	eax, 1
jmp	$LN72@lookupName
cmp	DWORD PTR _cnt$[ebp], 1
je	$LN13@lookupName
cmp	DWORD PTR _cnt$[ebp], 0
jne	SHORT $LN82@lookupName
mov	DWORD PTR tv338[ebp], OFFSET $SG102585
jmp	SHORT $LN83@lookupName
mov	DWORD PTR tv338[ebp], OFFSET $SG102586
mov	eax, DWORD PTR tv338[ebp]
mov	DWORD PTR _zErr$6[ebp], eax
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN12@lookupName
mov	ecx, DWORD PTR _zCol$[ebp]
push	ecx
mov	edx, DWORD PTR _zTab$[ebp]
push	edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zErr$6[ebp]
push	ecx
push	OFFSET $SG102588
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 24					
jmp	SHORT $LN11@lookupName
cmp	DWORD PTR _zTab$[ebp], 0
je	SHORT $LN10@lookupName
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
mov	ecx, DWORD PTR _zTab$[ebp]
push	ecx
mov	edx, DWORD PTR _zErr$6[ebp]
push	edx
push	OFFSET $SG102591
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 20					
jmp	SHORT $LN11@lookupName
mov	ecx, DWORD PTR _zCol$[ebp]
push	ecx
mov	edx, DWORD PTR _zErr$6[ebp]
push	edx
push	OFFSET $SG102593
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+17], 1
mov	edx, DWORD PTR _pTopNC$[ebp]
mov	eax, DWORD PTR [edx+24]
add	eax, 1
mov	ecx, DWORD PTR _pTopNC$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _pExpr$[ebp]
movsx	eax, WORD PTR [edx+32]
test	eax, eax
jl	SHORT $LN8@lookupName
cmp	DWORD PTR _pMatch$[ebp], 0
je	SHORT $LN8@lookupName
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	DWORD PTR _n$5[ebp], edx
cmp	DWORD PTR _n$5[ebp], 64			
jl	SHORT $LN7@lookupName
mov	DWORD PTR _n$5[ebp], 63			
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR _n$5[ebp]
call	__allshl
mov	ecx, DWORD PTR _pMatch$[ebp]
or	eax, DWORD PTR [ecx+64]
or	edx, DWORD PTR [ecx+68]
mov	ecx, DWORD PTR _pMatch$[ebp]
mov	DWORD PTR [ecx+64], eax
mov	DWORD PTR [ecx+68], edx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [eax+16], 0
cmp	DWORD PTR _isTrigger$[ebp], 0
je	SHORT $LN84@lookupName
mov	DWORD PTR tv382[ebp], 62		
jmp	SHORT $LN85@lookupName
mov	DWORD PTR tv382[ebp], 154		
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	dl, BYTE PTR tv382[ebp]
mov	BYTE PTR [ecx], dl
cmp	DWORD PTR _cnt$[ebp], 1
jne	SHORT $LN6@lookupName
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 24					
je	SHORT $LN4@lookupName
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pSchema$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthRead
add	esp, 16					
mov	ecx, DWORD PTR _pTopNC$[ebp]
mov	edx, DWORD PTR [ecx+20]
add	edx, 1
mov	eax, DWORD PTR _pTopNC$[ebp]
mov	DWORD PTR [eax+20], edx
mov	ecx, DWORD PTR _pTopNC$[ebp]
cmp	ecx, DWORD PTR _pNC$[ebp]
jne	SHORT $LN2@lookupName
jmp	SHORT $LN3@lookupName
mov	edx, DWORD PTR _pTopNC$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pTopNC$[ebp], eax
jmp	SHORT $LN4@lookupName
mov	eax, 1
jmp	SHORT $LN72@lookupName
jmp	SHORT $LN72@lookupName
mov	eax, 2
mov	esp, ebp
pop	ebp
ret	0
ENDP
_nameInUsingClause PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pUsing$[ebp], 0
je	SHORT $LN5@nameInUsin
mov	DWORD PTR _k$1[ebp], 0
jmp	SHORT $LN4@nameInUsin
mov	eax, DWORD PTR _k$1[ebp]
add	eax, 1
mov	DWORD PTR _k$1[ebp], eax
mov	ecx, DWORD PTR _pUsing$[ebp]
mov	edx, DWORD PTR _k$1[ebp]
cmp	edx, DWORD PTR [ecx+4]
jge	SHORT $LN5@nameInUsin
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
mov	ecx, DWORD PTR _pUsing$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _k$1[ebp]
mov	ecx, DWORD PTR [edx+eax*8]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@nameInUsin
mov	eax, 1
jmp	SHORT $LN6@nameInUsin
jmp	SHORT $LN3@nameInUsin
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_resolveAlias PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
imul	eax, DWORD PTR _iCol$[ebp], 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _pOrig$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
push	0
mov	eax, DWORD PTR _pOrig$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pDup$[ebp], eax
cmp	DWORD PTR _pDup$[ebp], 0
jne	SHORT $LN6@resolveAli
jmp	$LN7@resolveAli
mov	edx, DWORD PTR _pOrig$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 154				
je	$LN5@resolveAli
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zType$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 71					
je	$LN5@resolveAli
mov	edx, DWORD PTR _nSubquery$[ebp]
push	edx
mov	eax, DWORD PTR _pDup$[ebp]
push	eax
call	_incrAggFunctionDepth
add	esp, 8
push	0
push	0
mov	ecx, DWORD PTR _pDup$[ebp]
push	ecx
push	24					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	DWORD PTR _pDup$[ebp], eax
cmp	DWORD PTR _pDup$[ebp], 0
jne	SHORT $LN4@resolveAli
jmp	$LN7@resolveAli
mov	eax, DWORD PTR _pDup$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 4096				
mov	edx, DWORD PTR _pDup$[ebp]
mov	DWORD PTR [edx+4], ecx
imul	eax, DWORD PTR _iCol$[ebp], 24
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, WORD PTR [edx+eax+22]
test	eax, eax
jne	SHORT $LN3@resolveAli
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+456]
add	edx, 1
mov	DWORD PTR tv137[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv137[ebp]
mov	DWORD PTR [eax+456], ecx
imul	edx, DWORD PTR _iCol$[ebp], 24
mov	eax, DWORD PTR _pEList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	ax, WORD PTR tv137[ebp]
mov	WORD PTR [ecx+edx+22], ax
imul	ecx, DWORD PTR _iCol$[ebp], 24
mov	edx, DWORD PTR _pEList$[ebp]
mov	eax, DWORD PTR [edx+4]
movzx	ecx, WORD PTR [eax+ecx+22]
mov	edx, DWORD PTR _pDup$[ebp]
mov	DWORD PTR [edx+28], ecx
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 95					
jne	SHORT $LN2@resolveAli
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pDup$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprAddCollateString
add	esp, 12					
mov	DWORD PTR _pDup$[ebp], eax
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 32768				
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
push	48					
mov	edx, DWORD PTR _pDup$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 1024				
jne	SHORT $LN1@resolveAli
mov	eax, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN1@resolveAli
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 65536				
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pDup$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_incrAggFunctionDepth PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
cmp	DWORD PTR _N$[ebp], 0
jle	SHORT $LN2@incrAggFun
push	24					
push	0
lea	eax, DWORD PTR _w$1[ebp]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _w$1[ebp], OFFSET _incrAggDepth
mov	ecx, DWORD PTR _N$[ebp]
mov	DWORD PTR _w$1[ebp+20], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
lea	eax, DWORD PTR _w$1[ebp]
push	eax
call	_sqlite3WalkExpr
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_incrAggDepth PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 155				
jne	SHORT $LN1@incrAggDep
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx+38]
mov	ecx, DWORD PTR _pWalker$[ebp]
add	eax, DWORD PTR [ecx+20]
mov	edx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [edx+38], al
xor	eax, eax
pop	ebp
ret	0
ENDP
_memjrnlFileSize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pJfd$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _pSize$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR [edx+12]
mov	DWORD PTR [ecx+4], edx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_memjrnlSync PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_memjrnlClose PROC
push	ebp
mov	ebp, esp
push	0
push	0
mov	eax, DWORD PTR _pJfd$[ebp]
push	eax
call	_memjrnlTruncate
add	esp, 12					
xor	eax, eax
pop	ebp
ret	0
ENDP
_memjrnlTruncate PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pJfd$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pChunk$[ebp], edx
cmp	DWORD PTR _pChunk$[ebp], 0
je	SHORT $LN1@memjrnlTru
mov	eax, DWORD PTR _pChunk$[ebp]
mov	DWORD PTR _pTmp$1[ebp], eax
mov	ecx, DWORD PTR _pChunk$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pChunk$[ebp], edx
mov	eax, DWORD PTR _pTmp$1[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN2@memjrnlTru
mov	ecx, DWORD PTR _pJfd$[ebp]
push	ecx
call	_sqlite3MemJournalOpen
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_memjrnlWrite PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pJfd$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _iAmt$[ebp]
mov	DWORD PTR _nWrite$[ebp], ecx
mov	edx, DWORD PTR _zBuf$[ebp]
mov	DWORD PTR _zWrite$[ebp], edx
cmp	DWORD PTR _nWrite$[ebp], 0
jle	$LN5@memjrnlWri
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pChunk$1[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	0
push	1020					
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR [edx+8]
push	ecx
call	__allrem
mov	DWORD PTR _iChunkOffset$3[ebp], eax
mov	edx, 1020				
sub	edx, DWORD PTR _iChunkOffset$3[ebp]
cmp	DWORD PTR _nWrite$[ebp], edx
jge	SHORT $LN9@memjrnlWri
mov	eax, DWORD PTR _nWrite$[ebp]
mov	DWORD PTR tv72[ebp], eax
jmp	SHORT $LN10@memjrnlWri
mov	ecx, 1020				
sub	ecx, DWORD PTR _iChunkOffset$3[ebp]
mov	DWORD PTR tv72[ebp], ecx
mov	edx, DWORD PTR tv72[ebp]
mov	DWORD PTR _iSpace$2[ebp], edx
cmp	DWORD PTR _iChunkOffset$3[ebp], 0
jne	SHORT $LN4@memjrnlWri
push	1024					
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _pNew$4[ebp], eax
cmp	DWORD PTR _pNew$4[ebp], 0
jne	SHORT $LN3@memjrnlWri
mov	eax, 3082				
jmp	SHORT $LN7@memjrnlWri
mov	eax, DWORD PTR _pNew$4[ebp]
mov	DWORD PTR [eax], 0
cmp	DWORD PTR _pChunk$1[ebp], 0
je	SHORT $LN2@memjrnlWri
mov	ecx, DWORD PTR _pChunk$1[ebp]
mov	edx, DWORD PTR _pNew$4[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN1@memjrnlWri
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pNew$4[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pNew$4[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _iSpace$2[ebp]
push	ecx
mov	edx, DWORD PTR _zWrite$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR _iChunkOffset$3[ebp]
lea	eax, DWORD PTR [ecx+edx+4]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _zWrite$[ebp]
add	ecx, DWORD PTR _iSpace$2[ebp]
mov	DWORD PTR _zWrite$[ebp], ecx
mov	edx, DWORD PTR _nWrite$[ebp]
sub	edx, DWORD PTR _iSpace$2[ebp]
mov	DWORD PTR _nWrite$[ebp], edx
mov	eax, DWORD PTR _iSpace$2[ebp]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+8]
adc	edx, DWORD PTR [ecx+12]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	DWORD PTR [ecx+12], edx
jmp	$LN6@memjrnlWri
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_memjrnlRead PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _pJfd$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _zBuf$[ebp]
mov	DWORD PTR _zOut$[ebp], ecx
mov	edx, DWORD PTR _iAmt$[ebp]
mov	DWORD PTR _nRead$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR tv133[ebp], eax
mov	ecx, DWORD PTR tv133[ebp]
mov	edx, DWORD PTR [ecx+24]
cmp	edx, DWORD PTR _iOfst$[ebp]
jne	SHORT $LN9@memjrnlRea
mov	eax, DWORD PTR tv133[ebp]
mov	ecx, DWORD PTR [eax+28]
cmp	ecx, DWORD PTR _iOfst$[ebp+4]
jne	SHORT $LN9@memjrnlRea
mov	edx, DWORD PTR _iOfst$[ebp]
or	edx, DWORD PTR _iOfst$[ebp+4]
jne	SHORT $LN10@memjrnlRea
xorpd	xmm0, xmm0
movlpd	QWORD PTR _iOff$1[ebp], xmm0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pChunk$[ebp], ecx
jmp	SHORT $LN8@memjrnlRea
mov	edx, DWORD PTR _pChunk$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pChunk$[ebp], eax
cmp	DWORD PTR _pChunk$[ebp], 0
je	SHORT $LN6@memjrnlRea
mov	ecx, DWORD PTR _iOff$1[ebp]
add	ecx, 1020				
mov	edx, DWORD PTR _iOff$1[ebp+4]
adc	edx, 0
mov	DWORD PTR tv152[ebp], ecx
mov	DWORD PTR tv152[ebp+4], edx
mov	eax, DWORD PTR tv152[ebp+4]
cmp	eax, DWORD PTR _iOfst$[ebp+4]
jg	SHORT $LN6@memjrnlRea
jl	SHORT $LN15@memjrnlRea
mov	ecx, DWORD PTR tv152[ebp]
cmp	ecx, DWORD PTR _iOfst$[ebp]
ja	SHORT $LN6@memjrnlRea
mov	edx, DWORD PTR _iOff$1[ebp]
add	edx, 1020				
mov	eax, DWORD PTR _iOff$1[ebp+4]
adc	eax, 0
mov	DWORD PTR _iOff$1[ebp], edx
mov	DWORD PTR _iOff$1[ebp+4], eax
jmp	SHORT $LN7@memjrnlRea
jmp	SHORT $LN5@memjrnlRea
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pChunk$[ebp], edx
push	0
push	1020					
mov	eax, DWORD PTR _iOfst$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOfst$[ebp]
push	ecx
call	__allrem
mov	DWORD PTR _iChunkOffset$[ebp], eax
mov	edx, 1020				
sub	edx, DWORD PTR _iChunkOffset$[ebp]
mov	DWORD PTR _iSpace$2[ebp], edx
mov	eax, 1020				
sub	eax, DWORD PTR _iChunkOffset$[ebp]
cmp	DWORD PTR _nRead$[ebp], eax
jge	SHORT $LN13@memjrnlRea
mov	ecx, DWORD PTR _nRead$[ebp]
mov	DWORD PTR tv80[ebp], ecx
jmp	SHORT $LN14@memjrnlRea
mov	edx, 1020				
sub	edx, DWORD PTR _iChunkOffset$[ebp]
mov	DWORD PTR tv80[ebp], edx
mov	eax, DWORD PTR tv80[ebp]
mov	DWORD PTR _nCopy$3[ebp], eax
mov	ecx, DWORD PTR _nCopy$3[ebp]
push	ecx
mov	edx, DWORD PTR _iChunkOffset$[ebp]
mov	eax, DWORD PTR _pChunk$[ebp]
lea	ecx, DWORD PTR [eax+edx+4]
push	ecx
mov	edx, DWORD PTR _zOut$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _zOut$[ebp]
add	eax, DWORD PTR _nCopy$3[ebp]
mov	DWORD PTR _zOut$[ebp], eax
mov	ecx, DWORD PTR _nRead$[ebp]
sub	ecx, DWORD PTR _iSpace$2[ebp]
mov	DWORD PTR _nRead$[ebp], ecx
mov	DWORD PTR _iChunkOffset$[ebp], 0
cmp	DWORD PTR _nRead$[ebp], 0
jl	SHORT $LN2@memjrnlRea
mov	edx, DWORD PTR _pChunk$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pChunk$[ebp], eax
cmp	DWORD PTR _pChunk$[ebp], 0
je	SHORT $LN2@memjrnlRea
cmp	DWORD PTR _nRead$[ebp], 0
jg	SHORT $LN4@memjrnlRea
mov	eax, DWORD PTR _iAmt$[ebp]
cdq
add	eax, DWORD PTR _iOfst$[ebp]
adc	edx, DWORD PTR _iOfst$[ebp+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	DWORD PTR [ecx+28], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pChunk$[ebp]
mov	DWORD PTR [edx+32], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterRowkey PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN2@vdbeSorter
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+40]
imul	ecx, DWORD PTR [eax+ecx], 48
mov	edx, DWORD PTR _pSorter$[ebp]
add	ecx, DWORD PTR [edx+36]
mov	DWORD PTR _pIter$1[ebp], ecx
mov	eax, DWORD PTR _pnKey$[ebp]
mov	ecx, DWORD PTR _pIter$1[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pIter$1[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pKey$[ebp], ecx
jmp	SHORT $LN1@vdbeSorter
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	ecx, DWORD PTR _pnKey$[ebp]
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pKey$[ebp], edx
mov	eax, DWORD PTR _pKey$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterInitMerge PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nByte$[ebp], xmm0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@vdbeSorter
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 16			
jge	SHORT $LN6@vdbeSorter
imul	eax, DWORD PTR _i$[ebp], 48
mov	ecx, DWORD PTR _pSorter$[ebp]
add	eax, DWORD PTR [ecx+36]
mov	DWORD PTR _pIter$1[ebp], eax
lea	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _pIter$1[ebp]
push	eax
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR [ecx+8]
push	eax
mov	ecx, DWORD PTR _pSorter$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterIterInit
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR _pIter$1[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR [eax+8], edx
mov	ecx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+12], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@vdbeSorter
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR tv149[ebp], edx
mov	DWORD PTR tv150[ebp], eax
mov	ecx, DWORD PTR tv149[ebp]
mov	edx, DWORD PTR tv150[ebp]
mov	eax, DWORD PTR [ecx+12]
cmp	eax, DWORD PTR [edx+4]
jl	SHORT $LN5@vdbeSorter
jg	SHORT $LN4@vdbeSorter
mov	ecx, DWORD PTR tv149[ebp]
mov	edx, DWORD PTR tv150[ebp]
mov	eax, DWORD PTR [ecx+8]
cmp	eax, DWORD PTR [edx]
jb	SHORT $LN5@vdbeSorter
jmp	SHORT $LN6@vdbeSorter
jmp	$LN7@vdbeSorter
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+20]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN3@vdbeSorter
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@vdbeSorter
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN1@vdbeSorter
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pCsr$[ebp]
push	edx
call	_vdbeSorterDoCompare
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN2@vdbeSorter
mov	eax, DWORD PTR _pnByte$[ebp]
mov	ecx, DWORD PTR _nByte$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _nByte$[ebp+4]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterListToPMA PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
push	40					
push	0
lea	edx, DWORD PTR _writer$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+16], 0
jne	SHORT $LN6@vdbeSorter
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN7@vdbeSorter
mov	ecx, DWORD PTR _pCsr$[ebp]
push	ecx
call	_vdbeSorterSort
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@vdbeSorter
mov	edx, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [edx+44], 0
jne	SHORT $LN5@vdbeSorter
mov	eax, DWORD PTR _pSorter$[ebp]
add	eax, 44					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_vdbeSorterOpenTempFile
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN4@vdbeSorter
mov	DWORD PTR _pNext$1[ebp], 0
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR [edx]
push	ecx
lea	edx, DWORD PTR _writer$[ebp]
push	edx
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_fileWriterInit
add	esp, 20					
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+24]
add	ecx, 1
mov	edx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [eax+16]
cdq
push	edx
push	eax
lea	ecx, DWORD PTR _writer$[ebp]
push	ecx
call	_fileWriterWriteVarint
add	esp, 12					
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _p$2[ebp], eax
jmp	SHORT $LN3@vdbeSorter
mov	ecx, DWORD PTR _pNext$1[ebp]
mov	DWORD PTR _p$2[ebp], ecx
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN1@vdbeSorter
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pNext$1[ebp], eax
mov	ecx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [ecx+4]
cdq
push	edx
push	eax
lea	edx, DWORD PTR _writer$[ebp]
push	edx
call	_fileWriterWriteVarint
add	esp, 12					
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx]
push	eax
lea	ecx, DWORD PTR _writer$[ebp]
push	ecx
call	_fileWriterWrite
add	esp, 12					
mov	edx, DWORD PTR _p$2[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@vdbeSorter
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR _p$2[ebp]
mov	DWORD PTR [ecx+48], edx
mov	eax, DWORD PTR _pSorter$[ebp]
push	eax
lea	ecx, DWORD PTR _writer$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_fileWriterFinish
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fileWriterWriteVarint PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _iVal$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iVal$[ebp]
push	ecx
lea	edx, DWORD PTR _aByte$[ebp]
push	edx
call	_sqlite3PutVarint
add	esp, 12					
mov	DWORD PTR _nByte$[ebp], eax
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
lea	ecx, DWORD PTR _aByte$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_fileWriterWrite
add	esp, 12					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fileWriterFinish PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN1@fileWriter
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN1@fileWriter
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [edx+16]
cmp	ecx, DWORD PTR [eax+12]
jle	SHORT $LN1@fileWriter
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+24]
adc	edx, DWORD PTR [ecx+28]
push	edx
push	eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [edx+16]
sub	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+12]
push	eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
call	_sqlite3OsWrite
add	esp, 20					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+24]
adc	edx, DWORD PTR [ecx+28]
mov	ecx, DWORD PTR _piEof$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _rc$[ebp], eax
push	40					
push	0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fileWriterWrite PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _nData$[ebp]
mov	DWORD PTR _nRem$[ebp], eax
cmp	DWORD PTR _nRem$[ebp], 0
jle	$LN5@fileWriter
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
jne	$LN5@fileWriter
mov	edx, DWORD PTR _nRem$[ebp]
mov	DWORD PTR _nCopy$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [eax+8]
sub	edx, DWORD PTR [ecx+16]
cmp	DWORD PTR _nCopy$1[ebp], edx
jle	SHORT $LN2@fileWriter
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [eax+8]
sub	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _nCopy$1[ebp], edx
mov	eax, DWORD PTR _nCopy$1[ebp]
push	eax
mov	ecx, DWORD PTR _nData$[ebp]
sub	ecx, DWORD PTR _nRem$[ebp]
add	ecx, DWORD PTR _pData$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+16]
push	eax
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
add	eax, DWORD PTR _nCopy$1[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [edx+16]
cmp	ecx, DWORD PTR [eax+8]
jne	SHORT $LN1@fileWriter
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+24]
adc	edx, DWORD PTR [ecx+28]
push	edx
push	eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [edx+16]
sub	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+12]
push	eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
call	_sqlite3OsWrite
add	esp, 20					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+8]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+24]
adc	edx, DWORD PTR [ecx+28]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	DWORD PTR [ecx+28], edx
mov	edx, DWORD PTR _nRem$[ebp]
sub	edx, DWORD PTR _nCopy$1[ebp]
mov	DWORD PTR _nRem$[ebp], edx
jmp	$LN4@fileWriter
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fileWriterInit PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR _nBuf$[ebp], eax
push	40					
push	0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _nBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN2@fileWriter
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], 7
jmp	SHORT $LN3@fileWriter
mov	eax, DWORD PTR _nBuf$[ebp]
cdq
push	edx
push	eax
mov	edx, DWORD PTR _iStart$[ebp+4]
push	edx
mov	eax, DWORD PTR _iStart$[ebp]
push	eax
call	__allrem
mov	DWORD PTR tv84[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR tv84[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR tv84[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
cdq
mov	ecx, DWORD PTR _iStart$[ebp]
sub	ecx, eax
mov	eax, DWORD PTR _iStart$[ebp+4]
sbb	eax, edx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	DWORD PTR [edx+28], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _nBuf$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx+32], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterSort PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
push	256					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _aSlot$[ebp], eax
cmp	DWORD PTR _aSlot$[ebp], 0
jne	SHORT $LN9@vdbeSorter
mov	eax, 7
jmp	$LN10@vdbeSorter
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN7@vdbeSorter
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pNext$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+8], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@vdbeSorter
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aSlot$[ebp]
cmp	DWORD PTR [eax+edx*4], 0
je	SHORT $LN4@vdbeSorter
lea	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aSlot$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pCsr$[ebp]
push	eax
call	_vdbeSorterMerge
add	esp, 16					
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aSlot$[ebp]
mov	DWORD PTR [edx+ecx*4], 0
jmp	SHORT $LN5@vdbeSorter
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aSlot$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+eax*4], edx
mov	eax, DWORD PTR _pNext$1[ebp]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN8@vdbeSorter
mov	DWORD PTR _p$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@vdbeSorter
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 64			
jge	SHORT $LN1@vdbeSorter
lea	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aSlot$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pCsr$[ebp]
push	ecx
call	_vdbeSorterMerge
add	esp, 16					
jmp	SHORT $LN2@vdbeSorter
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+48], eax
mov	ecx, DWORD PTR _aSlot$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterMerge PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _pFinal$[ebp], 0
lea	eax, DWORD PTR _pFinal$[ebp]
mov	DWORD PTR _pp$[ebp], eax
cmp	DWORD PTR _p2$[ebp], 0
je	SHORT $LN8@vdbeSorter
mov	ecx, DWORD PTR _p2$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR tv66[ebp], edx
jmp	SHORT $LN9@vdbeSorter
mov	DWORD PTR tv66[ebp], 0
mov	eax, DWORD PTR tv66[ebp]
mov	DWORD PTR _pVal2$[ebp], eax
cmp	DWORD PTR _p1$[ebp], 0
je	$LN4@vdbeSorter
cmp	DWORD PTR _p2$[ebp], 0
je	$LN4@vdbeSorter
lea	ecx, DWORD PTR _res$1[ebp]
push	ecx
mov	edx, DWORD PTR _p2$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pVal2$[ebp]
push	ecx
mov	edx, DWORD PTR _p1$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _p1$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
mov	eax, DWORD PTR _pCsr$[ebp]
push	eax
call	_vdbeSorterCompare
add	esp, 28					
cmp	DWORD PTR _res$1[ebp], 0
jg	SHORT $LN3@vdbeSorter
mov	ecx, DWORD PTR _pp$[ebp]
mov	edx, DWORD PTR _p1$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _p1$[ebp]
add	eax, 8
mov	DWORD PTR _pp$[ebp], eax
mov	ecx, DWORD PTR _p1$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _p1$[ebp], edx
mov	DWORD PTR _pVal2$[ebp], 0
jmp	SHORT $LN2@vdbeSorter
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR _p2$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _p2$[ebp]
add	edx, 8
mov	DWORD PTR _pp$[ebp], edx
mov	eax, DWORD PTR _p2$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p2$[ebp], ecx
cmp	DWORD PTR _p2$[ebp], 0
jne	SHORT $LN1@vdbeSorter
jmp	SHORT $LN4@vdbeSorter
mov	edx, DWORD PTR _p2$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pVal2$[ebp], eax
jmp	$LN5@vdbeSorter
cmp	DWORD PTR _p1$[ebp], 0
je	SHORT $LN10@vdbeSorter
mov	ecx, DWORD PTR _p1$[ebp]
mov	DWORD PTR tv87[ebp], ecx
jmp	SHORT $LN11@vdbeSorter
mov	edx, DWORD PTR _p2$[ebp]
mov	DWORD PTR tv87[ebp], edx
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR tv87[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _ppOut$[ebp]
mov	eax, DWORD PTR _pFinal$[ebp]
mov	DWORD PTR [edx], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterOpenTempFile PROC
push	ebp
mov	ebp, esp
push	ecx
lea	eax, DWORD PTR _dummy$[ebp]
push	eax
push	4126					
mov	ecx, DWORD PTR _ppFile$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3OsOpenMalloc
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterRecordFree PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pRecord$[ebp]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN3@vdbeSorter
mov	ecx, DWORD PTR _pNext$[ebp]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@vdbeSorter
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pNext$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@vdbeSorter
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterDoCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+20]
cdq
sub	eax, edx
sar	eax, 1
cmp	DWORD PTR _iOut$[ebp], eax
jl	SHORT $LN8@vdbeSorter
mov	eax, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [eax+20]
cdq
sub	eax, edx
sar	eax, 1
mov	ecx, DWORD PTR _iOut$[ebp]
sub	ecx, eax
shl	ecx, 1
mov	DWORD PTR _i1$[ebp], ecx
mov	edx, DWORD PTR _i1$[ebp]
add	edx, 1
mov	DWORD PTR _i2$[ebp], edx
jmp	SHORT $LN7@vdbeSorter
mov	eax, DWORD PTR _iOut$[ebp]
shl	eax, 1
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+40]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _i1$[ebp], eax
mov	ecx, DWORD PTR _iOut$[ebp]
shl	ecx, 1
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	ecx, DWORD PTR [eax+ecx*4+4]
mov	DWORD PTR _i2$[ebp], ecx
imul	edx, DWORD PTR _i1$[ebp], 48
mov	eax, DWORD PTR _pSorter$[ebp]
add	edx, DWORD PTR [eax+36]
mov	DWORD PTR _p1$[ebp], edx
imul	ecx, DWORD PTR _i2$[ebp], 48
mov	edx, DWORD PTR _pSorter$[ebp]
add	ecx, DWORD PTR [edx+36]
mov	DWORD PTR _p2$[ebp], ecx
mov	eax, DWORD PTR _p1$[ebp]
cmp	DWORD PTR [eax+24], 0
jne	SHORT $LN6@vdbeSorter
mov	ecx, DWORD PTR _i2$[ebp]
mov	DWORD PTR _iRes$[ebp], ecx
jmp	SHORT $LN5@vdbeSorter
mov	edx, DWORD PTR _p2$[ebp]
cmp	DWORD PTR [edx+24], 0
jne	SHORT $LN4@vdbeSorter
mov	eax, DWORD PTR _i1$[ebp]
mov	DWORD PTR _iRes$[ebp], eax
jmp	SHORT $LN5@vdbeSorter
lea	ecx, DWORD PTR _res$1[ebp]
push	ecx
mov	edx, DWORD PTR _p2$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _p2$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _p1$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _p1$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
push	0
mov	ecx, DWORD PTR _pCsr$[ebp]
push	ecx
call	_vdbeSorterCompare
add	esp, 28					
cmp	DWORD PTR _res$1[ebp], 0
jg	SHORT $LN2@vdbeSorter
mov	edx, DWORD PTR _i1$[ebp]
mov	DWORD PTR _iRes$[ebp], edx
jmp	SHORT $LN5@vdbeSorter
mov	eax, DWORD PTR _i2$[ebp]
mov	DWORD PTR _iRes$[ebp], eax
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+40]
mov	eax, DWORD PTR _iOut$[ebp]
mov	ecx, DWORD PTR _iRes$[ebp]
mov	DWORD PTR [edx+eax*4], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pKeyInfo$[ebp], ecx
mov	edx, DWORD PTR _pCsr$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR _pSorter$[ebp], eax
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _r2$[ebp], edx
cmp	DWORD PTR _pKey2$[ebp], 0
je	SHORT $LN6@vdbeSorter
mov	eax, DWORD PTR _r2$[ebp]
push	eax
mov	ecx, DWORD PTR _pKey2$[ebp]
push	ecx
mov	edx, DWORD PTR _nKey2$[ebp]
push	edx
mov	eax, DWORD PTR _pKeyInfo$[ebp]
push	eax
call	_sqlite3VdbeRecordUnpack
add	esp, 16					
cmp	DWORD PTR _nIgnore$[ebp], 0
je	SHORT $LN5@vdbeSorter
mov	ecx, DWORD PTR _pKeyInfo$[ebp]
movzx	edx, WORD PTR [ecx+6]
sub	edx, DWORD PTR _nIgnore$[ebp]
mov	eax, DWORD PTR _r2$[ebp]
mov	WORD PTR [eax+4], dx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@vdbeSorter
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _r2$[ebp]
movzx	eax, WORD PTR [edx+4]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN5@vdbeSorter
imul	ecx, DWORD PTR _i$[ebp], 40
mov	edx, DWORD PTR _r2$[ebp]
mov	eax, DWORD PTR [edx+8]
movzx	ecx, WORD PTR [eax+ecx+28]
and	ecx, 1
je	SHORT $LN1@vdbeSorter
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], -1
jmp	SHORT $LN7@vdbeSorter
jmp	SHORT $LN3@vdbeSorter
push	0
mov	eax, DWORD PTR _r2$[ebp]
push	eax
mov	ecx, DWORD PTR _pKey1$[ebp]
push	ecx
mov	edx, DWORD PTR _nKey1$[ebp]
push	edx
call	_sqlite3VdbeRecordCompare
add	esp, 16					
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterIterInit PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR _nBuf$[ebp], eax
mov	edx, DWORD PTR _pIter$[ebp]
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _pIter$[ebp]
mov	eax, DWORD PTR _iStart$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _iStart$[ebp+4]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pIter$[ebp]
mov	DWORD PTR [edx+16], 128			
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pIter$[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR _pIter$[ebp]
mov	eax, DWORD PTR _nBuf$[ebp]
mov	DWORD PTR [edx+40], eax
mov	ecx, DWORD PTR _nBuf$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pIter$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pIter$[ebp]
cmp	DWORD PTR [edx+36], 0
jne	SHORT $LN6@vdbeSorter
mov	DWORD PTR _rc$[ebp], 7
jmp	$LN5@vdbeSorter
mov	eax, DWORD PTR _nBuf$[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _iStart$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iStart$[ebp]
push	ecx
call	__allrem
mov	DWORD PTR _iBuf$2[ebp], eax
cmp	DWORD PTR _iBuf$2[ebp], 0
je	SHORT $LN4@vdbeSorter
mov	edx, DWORD PTR _nBuf$[ebp]
sub	edx, DWORD PTR _iBuf$2[ebp]
mov	DWORD PTR _nRead$3[ebp], edx
mov	eax, DWORD PTR _nRead$3[ebp]
cdq
add	eax, DWORD PTR _iStart$[ebp]
adc	edx, DWORD PTR _iStart$[ebp+4]
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR tv210[ebp], eax
mov	DWORD PTR tv210[ebp+4], edx
mov	DWORD PTR tv213[ebp], ecx
mov	edx, DWORD PTR tv213[ebp]
mov	eax, DWORD PTR tv210[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jl	SHORT $LN3@vdbeSorter
jg	SHORT $LN9@vdbeSorter
mov	ecx, DWORD PTR tv213[ebp]
mov	edx, DWORD PTR tv210[ebp]
cmp	edx, DWORD PTR [ecx]
jbe	SHORT $LN3@vdbeSorter
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _iStart$[ebp]
mov	edx, DWORD PTR [eax+4]
sbb	edx, DWORD PTR _iStart$[ebp+4]
mov	DWORD PTR _nRead$3[ebp], ecx
mov	eax, DWORD PTR _iStart$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iStart$[ebp]
push	ecx
mov	edx, DWORD PTR _nRead$3[ebp]
push	edx
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR [eax+36]
add	ecx, DWORD PTR _iBuf$2[ebp]
push	ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@vdbeSorter
mov	ecx, DWORD PTR _pIter$[ebp]
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+12], edx
lea	eax, DWORD PTR _nByte$1[ebp]
push	eax
mov	ecx, DWORD PTR _pIter$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterIterVarint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, DWORD PTR _nByte$1[ebp]
mov	edx, DWORD PTR [eax+4]
adc	edx, DWORD PTR _nByte$1[ebp+4]
mov	eax, DWORD PTR _pIter$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	DWORD PTR [eax+12], edx
mov	ecx, DWORD PTR _pnByte$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, DWORD PTR _nByte$1[ebp]
mov	eax, DWORD PTR [ecx+4]
adc	eax, DWORD PTR _nByte$1[ebp+4]
mov	ecx, DWORD PTR _pnByte$[ebp]
mov	DWORD PTR [ecx], edx
mov	DWORD PTR [ecx+4], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@vdbeSorter
mov	edx, DWORD PTR _pIter$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vdbeSorterIterNext
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterIterNext PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nRec$[ebp], xmm0
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR _pIter$[ebp]
mov	DWORD PTR tv86[ebp], eax
mov	DWORD PTR tv87[ebp], ecx
mov	edx, DWORD PTR tv86[ebp]
mov	eax, DWORD PTR tv87[ebp]
mov	ecx, DWORD PTR [edx+4]
cmp	ecx, DWORD PTR [eax+12]
jl	SHORT $LN2@vdbeSorter
jg	SHORT $LN5@vdbeSorter
mov	edx, DWORD PTR tv86[ebp]
mov	eax, DWORD PTR tv87[ebp]
mov	ecx, DWORD PTR [edx]
cmp	ecx, DWORD PTR [eax+8]
jb	SHORT $LN2@vdbeSorter
mov	edx, DWORD PTR _pIter$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vdbeSorterIterZero
add	esp, 8
xor	eax, eax
jmp	SHORT $LN3@vdbeSorter
lea	ecx, DWORD PTR _nRec$[ebp]
push	ecx
mov	edx, DWORD PTR _pIter$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vdbeSorterIterVarint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@vdbeSorter
mov	ecx, DWORD PTR _nRec$[ebp]
mov	edx, DWORD PTR _pIter$[ebp]
mov	DWORD PTR [edx+20], ecx
mov	eax, DWORD PTR _pIter$[ebp]
add	eax, 32					
push	eax
mov	ecx, DWORD PTR _nRec$[ebp]
push	ecx
mov	edx, DWORD PTR _pIter$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vdbeSorterIterRead
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterIterVarint PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+40]
cdq
mov	ecx, DWORD PTR _p$[ebp]
push	edx
push	eax
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR [ecx]
push	eax
call	__allrem
mov	DWORD PTR _iBuf$[ebp], eax
cmp	DWORD PTR _iBuf$[ebp], 0
je	SHORT $LN6@vdbeSorter
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+40]
sub	edx, DWORD PTR _iBuf$[ebp]
cmp	edx, 9
jl	SHORT $LN6@vdbeSorter
mov	eax, DWORD PTR _pnOut$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+36]
add	edx, DWORD PTR _iBuf$[ebp]
push	edx
call	_sqlite3GetVarint
add	esp, 8
movzx	eax, al
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	SHORT $LN5@vdbeSorter
mov	DWORD PTR _i$3[ebp], 0
lea	edx, DWORD PTR _a$1[ebp]
push	edx
push	1
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_vdbeSorterIterRead
add	esp, 16					
mov	DWORD PTR _rc$2[ebp], eax
cmp	DWORD PTR _rc$2[ebp], 0
je	SHORT $LN1@vdbeSorter
mov	eax, DWORD PTR _rc$2[ebp]
jmp	SHORT $LN7@vdbeSorter
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _i$3[ebp]
and	ecx, 15					
mov	edx, DWORD PTR _a$1[ebp]
mov	al, BYTE PTR [edx+eax]
mov	BYTE PTR _aVarint$4[ebp+ecx], al
mov	ecx, DWORD PTR _i$3[ebp]
add	ecx, 1
mov	DWORD PTR _i$3[ebp], ecx
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _a$1[ebp]
movzx	edx, BYTE PTR [ecx+eax]
and	edx, 128				
jne	SHORT $LN4@vdbeSorter
mov	eax, DWORD PTR _pnOut$[ebp]
push	eax
lea	ecx, DWORD PTR _aVarint$4[ebp]
push	ecx
call	_sqlite3GetVarint
add	esp, 8
xor	eax, eax
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterIterRead PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
push	esi
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+40]
cdq
mov	ecx, DWORD PTR _p$[ebp]
push	edx
push	eax
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR [ecx]
push	eax
call	__allrem
mov	DWORD PTR _iBuf$[ebp], eax
cmp	DWORD PTR _iBuf$[ebp], 0
jne	$LN14@vdbeSorter
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	esi, DWORD PTR [ecx+8]
sub	esi, DWORD PTR [edx]
mov	ecx, DWORD PTR [ecx+12]
sbb	ecx, DWORD PTR [edx+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+40]
cdq
mov	DWORD PTR tv220[ebp], esi
mov	DWORD PTR tv220[ebp+4], ecx
mov	DWORD PTR tv223[ebp], eax
mov	DWORD PTR tv223[ebp+4], edx
mov	eax, DWORD PTR tv220[ebp+4]
cmp	eax, DWORD PTR tv223[ebp+4]
jl	SHORT $LN13@vdbeSorter
jg	SHORT $LN17@vdbeSorter
mov	ecx, DWORD PTR tv220[ebp]
cmp	ecx, DWORD PTR tv223[ebp]
jbe	SHORT $LN13@vdbeSorter
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	DWORD PTR _nRead$4[ebp], eax
jmp	SHORT $LN12@vdbeSorter
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+8]
sub	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [ecx+12]
sbb	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _nRead$4[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR [edx]
push	ecx
mov	edx, DWORD PTR _nRead$4[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$3[ebp], eax
cmp	DWORD PTR _rc$3[ebp], 0
je	SHORT $LN14@vdbeSorter
mov	eax, DWORD PTR _rc$3[ebp]
jmp	$LN15@vdbeSorter
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+40]
sub	edx, DWORD PTR _iBuf$[ebp]
mov	DWORD PTR _nAvail$[ebp], edx
mov	eax, DWORD PTR _nByte$[ebp]
cmp	eax, DWORD PTR _nAvail$[ebp]
jg	SHORT $LN10@vdbeSorter
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+36]
add	edx, DWORD PTR _iBuf$[ebp]
mov	eax, DWORD PTR _ppOut$[ebp]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _nByte$[ebp]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	$LN9@vdbeSorter
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
cmp	eax, DWORD PTR _nByte$[ebp]
jge	SHORT $LN8@vdbeSorter
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
shl	edx, 1
mov	DWORD PTR _nNew$6[ebp], edx
mov	eax, DWORD PTR _nByte$[ebp]
cmp	eax, DWORD PTR _nNew$6[ebp]
jle	SHORT $LN6@vdbeSorter
mov	ecx, DWORD PTR _nNew$6[ebp]
shl	ecx, 1
mov	DWORD PTR _nNew$6[ebp], ecx
jmp	SHORT $LN7@vdbeSorter
mov	edx, DWORD PTR _nNew$6[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbReallocOrFree
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+28], 0
jne	SHORT $LN5@vdbeSorter
mov	eax, 7
jmp	$LN15@vdbeSorter
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _nNew$6[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _nAvail$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
add	ecx, DWORD PTR _iBuf$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _nAvail$[ebp]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _nByte$[ebp]
sub	edx, DWORD PTR _nAvail$[ebp]
mov	DWORD PTR _nRem$7[ebp], edx
cmp	DWORD PTR _nRem$7[ebp], 0
jle	SHORT $LN3@vdbeSorter
mov	eax, DWORD PTR _nRem$7[ebp]
mov	DWORD PTR _nCopy$5[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _nRem$7[ebp]
cmp	edx, DWORD PTR [ecx+40]
jle	SHORT $LN2@vdbeSorter
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	DWORD PTR _nCopy$5[ebp], ecx
lea	edx, DWORD PTR _aNext$1[ebp]
push	edx
mov	eax, DWORD PTR _nCopy$5[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterIterRead
add	esp, 16					
mov	DWORD PTR _rc$2[ebp], eax
cmp	DWORD PTR _rc$2[ebp], 0
je	SHORT $LN1@vdbeSorter
mov	eax, DWORD PTR _rc$2[ebp]
jmp	SHORT $LN15@vdbeSorter
mov	eax, DWORD PTR _nCopy$5[ebp]
push	eax
mov	ecx, DWORD PTR _aNext$1[ebp]
push	ecx
mov	edx, DWORD PTR _nByte$[ebp]
sub	edx, DWORD PTR _nRem$7[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
add	ecx, edx
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _nRem$7[ebp]
sub	edx, DWORD PTR _nCopy$5[ebp]
mov	DWORD PTR _nRem$7[ebp], edx
jmp	SHORT $LN4@vdbeSorter
mov	eax, DWORD PTR _ppOut$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	DWORD PTR [eax], edx
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeSorterIterZero PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
push	48					
push	0
mov	eax, DWORD PTR _pIter$[ebp]
push	eax
call	_memset
add	esp, 12					
pop	ebp
ret	0
ENDP
_blobReadWrite PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pBlob$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN8@blobReadWr
push	74274					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN9@blobReadWr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _n$[ebp], 0
jl	SHORT $LN6@blobReadWr
cmp	DWORD PTR _iOffset$[ebp], 0
jl	SHORT $LN6@blobReadWr
mov	ecx, DWORD PTR _iOffset$[ebp]
add	ecx, DWORD PTR _n$[ebp]
mov	edx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR [edx+4]
jle	SHORT $LN7@blobReadWr
mov	DWORD PTR _rc$[ebp], 1
push	0
push	1
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
jmp	SHORT $LN5@blobReadWr
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN4@blobReadWr
mov	DWORD PTR _rc$[ebp], 4
jmp	SHORT $LN5@blobReadWr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_sqlite3BtreeEnterCursor
add	esp, 4
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _iOffset$[ebp]
add	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	DWORD PTR _xCall$[ebp]
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_sqlite3BtreeLeaveCursor
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 4
jne	SHORT $LN2@blobReadWr
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeFinalize
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+20], 0
jmp	SHORT $LN5@blobReadWr
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx+52], edx
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax+80], ecx
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_blobSeekToRow PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _zErr$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, 40					
imul	eax, edx, 0
mov	ecx, DWORD PTR _v$[ebp]
mov	edx, DWORD PTR [ecx+60]
mov	ecx, DWORD PTR _iRow$[ebp]
mov	DWORD PTR [edx+eax+16], ecx
mov	ecx, DWORD PTR _iRow$[ebp+4]
mov	DWORD PTR [edx+eax+20], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
call	_sqlite3_step
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 100		
jne	$LN8@blobSeekTo
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [edx+ecx]
mov	DWORD PTR _pC$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _pC$1[ebp]
mov	eax, DWORD PTR [edx+ecx*4+88]
mov	DWORD PTR _type$2[ebp], eax
cmp	DWORD PTR _type$2[ebp], 12		
jae	SHORT $LN7@blobSeekTo
cmp	DWORD PTR _type$2[ebp], 0
jne	SHORT $LN13@blobSeekTo
mov	DWORD PTR tv85[ebp], OFFSET $SG101471
jmp	SHORT $LN14@blobSeekTo
cmp	DWORD PTR _type$2[ebp], 7
jne	SHORT $LN11@blobSeekTo
mov	DWORD PTR tv84[ebp], OFFSET $SG101472
jmp	SHORT $LN12@blobSeekTo
mov	DWORD PTR tv84[ebp], OFFSET $SG101473
mov	ecx, DWORD PTR tv84[ebp]
mov	DWORD PTR tv85[ebp], ecx
mov	edx, DWORD PTR tv85[ebp]
push	edx
push	OFFSET $SG101474
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zErr$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
call	_sqlite3_finalize
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+20], 0
jmp	SHORT $LN8@blobSeekTo
mov	edx, DWORD PTR _pC$1[ebp]
movsx	eax, WORD PTR [edx+20]
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+12]
mov	edx, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pC$1[ebp]
mov	eax, DWORD PTR [ecx+eax*4+88]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _type$2[ebp]
push	ecx
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pC$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_sqlite3BtreeIncrblobCursor
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 100		
jne	SHORT $LN5@blobSeekTo
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN4@blobSeekTo
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+20], 0
je	SHORT $LN4@blobSeekTo
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
call	_sqlite3_finalize
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+20], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@blobSeekTo
mov	eax, DWORD PTR _iRow$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iRow$[ebp]
push	ecx
push	OFFSET $SG101480
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zErr$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN4@blobSeekTo
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3_errmsg
add	esp, 4
push	eax
push	OFFSET $SG101482
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zErr$[ebp], eax
mov	edx, DWORD PTR _pzErr$[ebp]
mov	eax, DWORD PTR _zErr$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_numericType PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 12					
je	SHORT $LN4@numericTyp
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 12					
jmp	SHORT $LN5@numericTyp
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 18					
je	SHORT $LN3@numericTyp
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, BYTE PTR [edx+30]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
add	eax, 8
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3AtoF
add	esp, 16					
test	eax, eax
jne	SHORT $LN2@numericTyp
xor	eax, eax
jmp	SHORT $LN5@numericTyp
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, BYTE PTR [eax+30]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
add	ecx, 16					
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3Atoi64
add	esp, 16					
test	eax, eax
jne	SHORT $LN1@numericTyp
mov	eax, 4
jmp	SHORT $LN5@numericTyp
mov	eax, 8
jmp	SHORT $LN5@numericTyp
xor	eax, eax
pop	ebp
ret	0
ENDP
_applyAffinity PROC
push	ebp
mov	ebp, esp
movsx	eax, BYTE PTR _affinity$[ebp]
cmp	eax, 97					
jne	SHORT $LN5@applyAffin
mov	ecx, DWORD PTR _pRec$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 2
jne	SHORT $LN4@applyAffin
mov	eax, DWORD PTR _pRec$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 12					
je	SHORT $LN4@applyAffin
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
mov	eax, DWORD PTR _pRec$[ebp]
push	eax
call	_sqlite3VdbeMemStringify
add	esp, 8
mov	ecx, DWORD PTR _pRec$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -13				
mov	eax, DWORD PTR _pRec$[ebp]
mov	WORD PTR [eax+28], dx
jmp	SHORT $LN6@applyAffin
movsx	ecx, BYTE PTR _affinity$[ebp]
cmp	ecx, 98					
je	SHORT $LN6@applyAffin
mov	edx, DWORD PTR _pRec$[ebp]
push	edx
call	_applyNumericAffinity
add	esp, 4
mov	eax, DWORD PTR _pRec$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 8
je	SHORT $LN6@applyAffin
mov	edx, DWORD PTR _pRec$[ebp]
push	edx
call	_sqlite3VdbeIntegerAffinity
add	esp, 4
pop	ebp
ret	0
ENDP
_applyNumericAffinity PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pRec$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 12					
jne	$LN1@applyNumer
mov	edx, DWORD PTR _pRec$[ebp]
mov	al, BYTE PTR [edx+30]
mov	BYTE PTR _enc$3[ebp], al
mov	ecx, DWORD PTR _pRec$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 2
jne	SHORT $LN4@applyNumer
jmp	$LN1@applyNumer
movzx	eax, BYTE PTR _enc$3[ebp]
push	eax
mov	ecx, DWORD PTR _pRec$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
lea	eax, DWORD PTR _rValue$1[ebp]
push	eax
mov	ecx, DWORD PTR _pRec$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3AtoF
add	esp, 16					
test	eax, eax
jne	SHORT $LN3@applyNumer
jmp	SHORT $LN1@applyNumer
movzx	eax, BYTE PTR _enc$3[ebp]
push	eax
mov	ecx, DWORD PTR _pRec$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
lea	eax, DWORD PTR _iValue$2[ebp]
push	eax
mov	ecx, DWORD PTR _pRec$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3Atoi64
add	esp, 16					
test	eax, eax
jne	SHORT $LN2@applyNumer
mov	eax, DWORD PTR _pRec$[ebp]
mov	ecx, DWORD PTR _iValue$2[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _iValue$2[ebp+4]
mov	DWORD PTR [eax+20], edx
mov	eax, DWORD PTR _pRec$[ebp]
movzx	ecx, WORD PTR [eax+28]
or	ecx, 4
mov	edx, DWORD PTR _pRec$[ebp]
mov	WORD PTR [edx+28], cx
jmp	SHORT $LN1@applyNumer
mov	eax, DWORD PTR _pRec$[ebp]
movsd	xmm0, QWORD PTR _rValue$1[ebp]
movsd	QWORD PTR [eax+8], xmm0
mov	ecx, DWORD PTR _pRec$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, 8
mov	eax, DWORD PTR _pRec$[ebp]
mov	WORD PTR [eax+28], dx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_allocateCursor PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
sub	ecx, DWORD PTR _iCur$[ebp]
imul	edx, ecx, 40
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+8]
mov	DWORD PTR _pMem$[ebp], edx
mov	DWORD PTR _pCx$[ebp], 0
cmp	DWORD PTR _isBtreeCursor$[ebp], 0
je	SHORT $LN6@allocateCu
call	_sqlite3BtreeCursorSize
mov	DWORD PTR tv73[ebp], eax
jmp	SHORT $LN7@allocateCu
mov	DWORD PTR tv73[ebp], 0
mov	ecx, DWORD PTR _nField$[ebp]
mov	edx, DWORD PTR tv73[ebp]
lea	eax, DWORD PTR [edx+ecx*8+96]
mov	DWORD PTR _nByte$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR _iCur$[ebp]
cmp	DWORD PTR [edx+eax*4], 0
je	SHORT $LN3@allocateCu
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR _iCur$[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeFreeCursor
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR _iCur$[ebp]
mov	DWORD PTR [ecx+edx*4], 0
push	0
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
jne	SHORT $LN2@allocateCu
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pCx$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR _iCur$[ebp]
mov	ecx, DWORD PTR _pCx$[ebp]
mov	DWORD PTR [edx+eax*4], ecx
push	96					
push	0
mov	edx, DWORD PTR _pCx$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pCx$[ebp]
mov	cl, BYTE PTR _iDb$[ebp]
mov	BYTE PTR [eax+24], cl
mov	edx, DWORD PTR _pCx$[ebp]
mov	ax, WORD PTR _nField$[ebp]
mov	WORD PTR [edx+20], ax
cmp	DWORD PTR _isBtreeCursor$[ebp], 0
je	SHORT $LN2@allocateCu
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _nField$[ebp]
lea	ecx, DWORD PTR [edx+eax*8+96]
mov	edx, DWORD PTR _pCx$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _pCx$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeCursorZero
add	esp, 4
mov	eax, DWORD PTR _pCx$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findNextHostParameter PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _nTotal$[ebp], 0
mov	eax, DWORD PTR _pnToken$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zSql$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN2@findNextHo
lea	edx, DWORD PTR _tokenType$[ebp]
push	edx
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
call	_sqlite3GetToken
add	esp, 8
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _tokenType$[ebp], 135		
jne	SHORT $LN1@findNextHo
mov	ecx, DWORD PTR _pnToken$[ebp]
mov	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN2@findNextHo
mov	eax, DWORD PTR _nTotal$[ebp]
add	eax, DWORD PTR _n$[ebp]
mov	DWORD PTR _nTotal$[ebp], eax
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR _zSql$[ebp], ecx
jmp	SHORT $LN3@findNextHo
mov	eax, DWORD PTR _nTotal$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_bindText PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_vdbeUnbind
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN5@bindText
cmp	DWORD PTR _zData$[ebp], 0
je	$LN4@bindText
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
imul	ecx, eax, 40
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+60]
mov	DWORD PTR _pVar$[ebp], ecx
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
movzx	ecx, BYTE PTR _encoding$[ebp]
push	ecx
mov	edx, DWORD PTR _nData$[ebp]
push	edx
mov	eax, DWORD PTR _zData$[ebp]
push	eax
mov	ecx, DWORD PTR _pVar$[ebp]
push	ecx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@bindText
movzx	edx, BYTE PTR _encoding$[ebp]
test	edx, edx
je	SHORT $LN3@bindText
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+eax+12]
movzx	eax, BYTE PTR [edx+77]
push	eax
mov	ecx, DWORD PTR _pVar$[ebp]
push	ecx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
push	0
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3Error
add	esp, 12					
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN2@bindText
cmp	DWORD PTR _xDel$[ebp], 0
je	SHORT $LN2@bindText
cmp	DWORD PTR _xDel$[ebp], -1
je	SHORT $LN2@bindText
mov	edx, DWORD PTR _zData$[ebp]
push	edx
call	DWORD PTR _xDel$[ebp]
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeUnbind PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_vdbeSafetyNotNull
add	esp, 4
test	eax, eax
je	SHORT $LN8@vdbeUnbind
push	66775					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN9@vdbeUnbind
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+40], -1108210269		
jne	SHORT $LN6@vdbeUnbind
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+76], 0
jl	SHORT $LN7@vdbeUnbind
push	0
push	21					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3Error
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+168]
push	eax
push	OFFSET $SG99463
push	21					
call	_sqlite3_log
add	esp, 12					
push	66783					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN9@vdbeUnbind
cmp	DWORD PTR _i$[ebp], 1
jl	SHORT $LN4@vdbeUnbind
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+68]
cmp	DWORD PTR _i$[ebp], edx
jle	SHORT $LN5@vdbeUnbind
push	0
push	25					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3Error
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, 25					
jmp	$LN9@vdbeUnbind
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
imul	eax, DWORD PTR _i$[ebp], 40
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+60]
mov	DWORD PTR _pVar$[ebp], eax
mov	edx, DWORD PTR _pVar$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	eax, 1
mov	ecx, DWORD PTR _pVar$[ebp]
mov	WORD PTR [ecx+28], ax
push	0
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3Error
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 10					
and	edx, 1
je	SHORT $LN3@vdbeUnbind
cmp	DWORD PTR _i$[ebp], 32			
jge	SHORT $LN1@vdbeUnbind
mov	eax, 1
mov	ecx, DWORD PTR _i$[ebp]
shl	eax, cl
mov	ecx, DWORD PTR _p$[ebp]
and	eax, DWORD PTR [ecx+188]
jne	SHORT $LN2@vdbeUnbind
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+188], -1
jne	SHORT $LN3@vdbeUnbind
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 32					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_columnName PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _ret$[ebp], 0
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3_column_count
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _N$[ebp]
cmp	ecx, DWORD PTR _n$[ebp]
jge	SHORT $LN2@columnName
cmp	DWORD PTR _N$[ebp], 0
jl	SHORT $LN2@columnName
mov	edx, DWORD PTR _useType$[ebp]
imul	edx, DWORD PTR _n$[ebp]
add	edx, DWORD PTR _N$[ebp]
mov	DWORD PTR _N$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
imul	edx, DWORD PTR _N$[ebp], 40
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+16]
push	edx
call	DWORD PTR _xFunc$[ebp]
add	esp, 4
mov	DWORD PTR _ret$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN1@columnName
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 0
mov	DWORD PTR _ret$[ebp], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _ret$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_columnMallocFailure PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@columnMall
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ApiExit
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+80], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_columnMem PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _pVm$[ebp], eax
cmp	DWORD PTR _pVm$[ebp], 0
je	SHORT $LN3@columnMem
mov	ecx, DWORD PTR _pVm$[ebp]
cmp	DWORD PTR [ecx+20], 0
je	SHORT $LN3@columnMem
mov	edx, DWORD PTR _pVm$[ebp]
movzx	eax, WORD PTR [edx+84]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN3@columnMem
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN3@columnMem
mov	ecx, DWORD PTR _pVm$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
imul	ecx, DWORD PTR _i$[ebp], 40
mov	edx, DWORD PTR _pVm$[ebp]
add	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _pOut$[ebp], ecx
jmp	SHORT $LN2@columnMem
cmp	DWORD PTR _pVm$[ebp], 0
je	SHORT $LN1@columnMem
mov	eax, DWORD PTR _pVm$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN1@columnMem
mov	ecx, DWORD PTR _pVm$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
push	0
push	25					
mov	ecx, DWORD PTR _pVm$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3Error
add	esp, 12					
call	_columnNullValue
mov	DWORD PTR _pOut$[ebp], eax
mov	eax, DWORD PTR _pOut$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_columnNullValue PROC
push	ebp
mov	ebp, esp
mov	eax, OFFSET ?nullMem@?1??columnNullValue@@9@9
pop	ebp
ret	0
ENDP
_sqlite3Step PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+40], -1108210269		
je	SHORT $LN15@sqlite3Ste
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3_reset
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN14@sqlite3Ste
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+80], 7
mov	eax, 7
jmp	$LN16@sqlite3Ste
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+76], 0
jg	SHORT $LN13@sqlite3Ste
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
shr	eax, 5
and	eax, 1
je	SHORT $LN13@sqlite3Ste
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+80], 17			
mov	DWORD PTR _rc$[ebp], 1
jmp	$end_of_step$18
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+76], 0
jge	$LN12@sqlite3Ste
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+140], 0
jne	SHORT $LN11@sqlite3Ste
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+232], 0
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+172], 0
je	SHORT $LN10@sqlite3Ste
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
jne	SHORT $LN10@sqlite3Ste
mov	edx, DWORD PTR _p$[ebp]
add	edx, 128				
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3OsCurrentTimeInt64
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+140]
add	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+140], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
shr	eax, 8
and	eax, 1
jne	SHORT $LN9@sqlite3Ste
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+148]
add	edx, 1
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+148], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 9
and	edx, 1
je	SHORT $LN8@sqlite3Ste
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+144]
add	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+144], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+76], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, 3
je	SHORT $LN7@sqlite3Ste
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeList
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN6@sqlite3Ste
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+152]
add	edx, 1
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+152], edx
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeExec
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+152]
sub	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+152], eax
cmp	DWORD PTR _rc$[ebp], 100		
je	SHORT $LN5@sqlite3Ste
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+172], 0
je	SHORT $LN5@sqlite3Ste
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
jne	SHORT $LN5@sqlite3Ste
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+168], 0
je	SHORT $LN5@sqlite3Ste
lea	eax, DWORD PTR _iNow$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3OsCurrentTimeInt64
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _iNow$1[ebp]
sub	ecx, DWORD PTR [eax+128]
mov	edx, DWORD PTR _iNow$1[ebp+4]
sbb	edx, DWORD PTR [eax+132]
push	0
push	1000000					
push	edx
push	ecx
call	__allmul
push	edx
push	eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+168]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+176]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+172]
call	edx
add	esp, 16					
cmp	DWORD PTR _rc$[ebp], 101		
jne	SHORT $LN4@sqlite3Ste
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_doWalCallbacks
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+80], eax
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+80], 0
je	SHORT $LN4@sqlite3Ste
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax+52], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+80]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ApiExit
add	esp, 8
cmp	eax, 7
jne	SHORT $end_of_step$18
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+80], 7
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 10					
and	edx, 1
je	SHORT $LN1@sqlite3Ste
cmp	DWORD PTR _rc$[ebp], 100		
je	SHORT $LN1@sqlite3Ste
cmp	DWORD PTR _rc$[ebp], 101		
je	SHORT $LN1@sqlite3Ste
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeTransferError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
and	eax, DWORD PTR [ecx+56]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_doWalCallbacks PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@doWalCallb
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	$LN3@doWalCallb
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$2[ebp], eax
cmp	DWORD PTR _pBt$2[ebp], 0
je	SHORT $LN2@doWalCallb
mov	ecx, DWORD PTR _pBt$2[ebp]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerWalCallback
add	esp, 4
mov	DWORD PTR _nEntry$1[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+204], 0
je	SHORT $LN2@doWalCallb
cmp	DWORD PTR _nEntry$1[ebp], 0
jle	SHORT $LN2@doWalCallb
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@doWalCallb
mov	eax, DWORD PTR _nEntry$1[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+204]
call	eax
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN4@doWalCallb
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setResultStrOrError PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
movzx	ecx, BYTE PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _pCtx$[ebp]
add	ecx, 8
push	ecx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
cmp	eax, 18					
jne	SHORT $LN2@setResultS
mov	edx, DWORD PTR _pCtx$[ebp]
push	edx
call	_sqlite3_result_error_toobig
add	esp, 4
pop	ebp
ret	0
ENDP
_vdbeSafetyNotNull PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN2@vdbeSafety
push	OFFSET $SG98943
push	21					
call	_sqlite3_log
add	esp, 8
mov	eax, 1
jmp	SHORT $LN3@vdbeSafety
jmp	SHORT $LN3@vdbeSafety
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_vdbeSafety
add	esp, 4
pop	ebp
ret	0
ENDP
_vdbeSafety PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN2@vdbeSafety
push	OFFSET $SG98936
push	21					
call	_sqlite3_log
add	esp, 8
mov	eax, 1
jmp	SHORT $LN3@vdbeSafety
jmp	SHORT $LN3@vdbeSafety
xor	eax, eax
pop	ebp
ret	0
ENDP
_vdbeRecordCompareString PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pKey1$[ebp]
mov	DWORD PTR _aKey1$[ebp], eax
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey1$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
cmp	eax, 128				
jge	SHORT $LN18@vdbeRecord
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey1$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
mov	DWORD PTR _serial_type$[ebp], eax
mov	DWORD PTR tv77[ebp], 1
jmp	SHORT $LN19@vdbeRecord
lea	ecx, DWORD PTR _serial_type$[ebp]
push	ecx
mov	edx, 1
shl	edx, 0
add	edx, DWORD PTR _aKey1$[ebp]
push	edx
call	_sqlite3GetVarint32
add	esp, 8
movzx	eax, al
mov	DWORD PTR tv77[ebp], eax
cmp	DWORD PTR _serial_type$[ebp], 12	
jge	SHORT $LN15@vdbeRecord
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _res$[ebp], edx
jmp	$LN14@vdbeRecord
mov	eax, DWORD PTR _serial_type$[ebp]
and	eax, 1
jne	SHORT $LN13@vdbeRecord
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _res$[ebp], edx
jmp	$LN14@vdbeRecord
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey1$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
mov	DWORD PTR _szHdr$2[ebp], eax
mov	eax, DWORD PTR _serial_type$[ebp]
sub	eax, 12					
cdq
sub	eax, edx
sar	eax, 1
mov	DWORD PTR _nStr$3[ebp], eax
mov	ecx, DWORD PTR _szHdr$2[ebp]
add	ecx, DWORD PTR _nStr$3[ebp]
cmp	ecx, DWORD PTR _nKey1$[ebp]
jle	SHORT $LN11@vdbeRecord
push	65455					
call	_sqlite3CorruptError
add	esp, 4
mov	edx, DWORD PTR _pPKey2$[ebp]
mov	BYTE PTR [edx+7], al
xor	eax, eax
jmp	$LN16@vdbeRecord
mov	eax, 40					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pPKey2$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [eax+ecx+24]
cmp	ecx, DWORD PTR _nStr$3[ebp]
jge	SHORT $LN20@vdbeRecord
mov	edx, 40					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [edx+eax+24]
mov	DWORD PTR tv136[ebp], eax
jmp	SHORT $LN21@vdbeRecord
mov	ecx, DWORD PTR _nStr$3[ebp]
mov	DWORD PTR tv136[ebp], ecx
mov	edx, DWORD PTR tv136[ebp]
mov	DWORD PTR _nCmp$1[ebp], edx
mov	eax, DWORD PTR _nCmp$1[ebp]
push	eax
mov	ecx, 40					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pPKey2$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
mov	eax, DWORD PTR _aKey1$[ebp]
add	eax, DWORD PTR _szHdr$2[ebp]
push	eax
call	_memcmp
add	esp, 12					
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN10@vdbeRecord
mov	ecx, 40					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pPKey2$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	eax, DWORD PTR _nStr$3[ebp]
sub	eax, DWORD PTR [ecx+edx+24]
mov	DWORD PTR _res$[ebp], eax
jne	SHORT $LN9@vdbeRecord
mov	ecx, DWORD PTR _pPKey2$[ebp]
movzx	edx, WORD PTR [ecx+4]
cmp	edx, 1
jle	SHORT $LN8@vdbeRecord
push	1
mov	eax, DWORD PTR _pPKey2$[ebp]
push	eax
mov	ecx, DWORD PTR _pKey1$[ebp]
push	ecx
mov	edx, DWORD PTR _nKey1$[ebp]
push	edx
call	_sqlite3VdbeRecordCompare
add	esp, 16					
mov	DWORD PTR _res$[ebp], eax
jmp	SHORT $LN7@vdbeRecord
mov	eax, DWORD PTR _pPKey2$[ebp]
movsx	ecx, BYTE PTR [eax+6]
mov	DWORD PTR _res$[ebp], ecx
jmp	SHORT $LN6@vdbeRecord
cmp	DWORD PTR _res$[ebp], 0
jle	SHORT $LN5@vdbeRecord
mov	edx, DWORD PTR _pPKey2$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _res$[ebp], eax
jmp	SHORT $LN6@vdbeRecord
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _res$[ebp], edx
jmp	SHORT $LN14@vdbeRecord
cmp	DWORD PTR _res$[ebp], 0
jle	SHORT $LN2@vdbeRecord
mov	eax, DWORD PTR _pPKey2$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _res$[ebp], ecx
jmp	SHORT $LN14@vdbeRecord
mov	edx, DWORD PTR _pPKey2$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _res$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeRecordCompareInt PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
push	esi
push	edi
mov	eax, DWORD PTR _pKey1$[ebp]
movzx	ecx, BYTE PTR [eax]
and	ecx, 63					
add	ecx, DWORD PTR _pKey1$[ebp]
mov	DWORD PTR _aKey$[ebp], ecx
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _pKey1$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
mov	DWORD PTR _serial_type$[ebp], ecx
mov	edx, 40					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	ecx, DWORD PTR [edx+eax+16]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR [edx+eax+20]
mov	DWORD PTR _v$[ebp+4], edx
mov	eax, DWORD PTR _serial_type$[ebp]
mov	DWORD PTR tv75[ebp], eax
cmp	DWORD PTR tv75[ebp], 9
ja	$LN7@vdbeRecord
mov	ecx, DWORD PTR tv75[ebp]
jmp	DWORD PTR $LN23@vdbeRecord[ecx*4]
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [ecx+eax]
cdq
mov	DWORD PTR _lhs$[ebp], eax
mov	DWORD PTR _lhs$[ebp+4], edx
jmp	$LN17@vdbeRecord
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [ecx+eax]
shl	eax, 8
mov	edx, 1
shl	edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
cdq
mov	DWORD PTR _lhs$[ebp], eax
mov	DWORD PTR _lhs$[ebp+4], edx
jmp	$LN17@vdbeRecord
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
shl	eax, 16					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
shl	ecx, 8
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
cdq
mov	DWORD PTR _lhs$[ebp], eax
mov	DWORD PTR _lhs$[ebp+4], edx
jmp	$LN17@vdbeRecord
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
shl	eax, 24					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
shl	ecx, 16					
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
shl	edx, 8
or	eax, edx
mov	ecx, 1
imul	edx, ecx, 3
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
mov	DWORD PTR _y$[ebp], eax
mov	eax, DWORD PTR _y$[ebp]
cdq
mov	DWORD PTR _lhs$[ebp], eax
mov	DWORD PTR _lhs$[ebp+4], edx
jmp	$LN17@vdbeRecord
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	eax, BYTE PTR [edx+ecx+2]
shl	eax, 24					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx+2]
shl	ecx, 16					
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx+2]
shl	edx, 8
or	eax, edx
mov	ecx, 1
imul	edx, ecx, 3
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx+2]
or	eax, edx
mov	esi, eax
xor	edi, edi
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
shl	eax, 8
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
or	eax, ecx
cdq
push	1
push	0
push	edx
push	eax
call	__allmul
add	esi, eax
adc	edi, edx
mov	DWORD PTR _lhs$[ebp], esi
mov	DWORD PTR _lhs$[ebp+4], edi
jmp	$LN17@vdbeRecord
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
shl	edx, 24					
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	eax, BYTE PTR [ecx+eax]
shl	eax, 16					
or	edx, eax
mov	ecx, 1
shl	ecx, 1
mov	eax, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [eax+ecx]
shl	ecx, 8
or	edx, ecx
mov	eax, 1
imul	ecx, eax, 3
mov	eax, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [eax+ecx]
or	edx, ecx
xor	eax, eax
mov	DWORD PTR _x$[ebp], edx
mov	DWORD PTR _x$[ebp+4], eax
mov	eax, DWORD PTR _x$[ebp]
mov	edx, DWORD PTR _x$[ebp+4]
mov	cl, 32					
call	__allshl
mov	ecx, 1
imul	ecx, ecx, 0
mov	esi, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [esi+ecx+4]
shl	ecx, 24					
mov	esi, 1
shl	esi, 0
mov	edi, DWORD PTR _aKey$[ebp]
movzx	esi, BYTE PTR [edi+esi+4]
shl	esi, 16					
or	ecx, esi
mov	esi, 1
shl	esi, 1
mov	edi, DWORD PTR _aKey$[ebp]
movzx	esi, BYTE PTR [edi+esi+4]
shl	esi, 8
or	ecx, esi
mov	esi, 1
imul	esi, esi, 3
mov	edi, DWORD PTR _aKey$[ebp]
movzx	esi, BYTE PTR [edi+esi+4]
or	ecx, esi
xor	esi, esi
or	eax, ecx
or	edx, esi
mov	DWORD PTR _x$[ebp], eax
mov	DWORD PTR _x$[ebp+4], edx
mov	edx, DWORD PTR _x$[ebp]
mov	DWORD PTR _lhs$[ebp], edx
mov	eax, DWORD PTR _x$[ebp+4]
mov	DWORD PTR _lhs$[ebp+4], eax
jmp	SHORT $LN17@vdbeRecord
xorpd	xmm0, xmm0
movlpd	QWORD PTR _lhs$[ebp], xmm0
jmp	SHORT $LN17@vdbeRecord
mov	DWORD PTR _lhs$[ebp], 1
mov	DWORD PTR _lhs$[ebp+4], 0
jmp	SHORT $LN17@vdbeRecord
push	0
mov	ecx, DWORD PTR _pPKey2$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey1$[ebp]
push	edx
mov	eax, DWORD PTR _nKey1$[ebp]
push	eax
call	_sqlite3VdbeRecordCompare
add	esp, 16					
jmp	$LN19@vdbeRecord
push	0
mov	ecx, DWORD PTR _pPKey2$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey1$[ebp]
push	edx
mov	eax, DWORD PTR _nKey1$[ebp]
push	eax
call	_sqlite3VdbeRecordCompare
add	esp, 16					
jmp	SHORT $LN19@vdbeRecord
mov	ecx, DWORD PTR _v$[ebp+4]
cmp	ecx, DWORD PTR _lhs$[ebp+4]
jl	SHORT $LN6@vdbeRecord
jg	SHORT $LN21@vdbeRecord
mov	edx, DWORD PTR _v$[ebp]
cmp	edx, DWORD PTR _lhs$[ebp]
jbe	SHORT $LN6@vdbeRecord
mov	eax, DWORD PTR _pPKey2$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _res$[ebp], ecx
jmp	SHORT $LN5@vdbeRecord
mov	edx, DWORD PTR _v$[ebp+4]
cmp	edx, DWORD PTR _lhs$[ebp+4]
jg	SHORT $LN4@vdbeRecord
jl	SHORT $LN22@vdbeRecord
mov	eax, DWORD PTR _v$[ebp]
cmp	eax, DWORD PTR _lhs$[ebp]
jae	SHORT $LN4@vdbeRecord
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _res$[ebp], edx
jmp	SHORT $LN5@vdbeRecord
mov	eax, DWORD PTR _pPKey2$[ebp]
movzx	ecx, WORD PTR [eax+4]
cmp	ecx, 1
jle	SHORT $LN2@vdbeRecord
push	1
mov	edx, DWORD PTR _pPKey2$[ebp]
push	edx
mov	eax, DWORD PTR _pKey1$[ebp]
push	eax
mov	ecx, DWORD PTR _nKey1$[ebp]
push	ecx
call	_sqlite3VdbeRecordCompare
add	esp, 16					
mov	DWORD PTR _res$[ebp], eax
jmp	SHORT $LN5@vdbeRecord
mov	edx, DWORD PTR _pPKey2$[ebp]
movsx	eax, BYTE PTR [edx+6]
mov	DWORD PTR _res$[ebp], eax
mov	eax, DWORD PTR _res$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
DD	$LN8@vdbeRecord
DD	$LN16@vdbeRecord
DD	$LN15@vdbeRecord
DD	$LN14@vdbeRecord
DD	$LN13@vdbeRecord
DD	$LN12@vdbeRecord
DD	$LN11@vdbeRecord
DD	$LN8@vdbeRecord
DD	$LN10@vdbeRecord
DD	$LN9@vdbeRecord
ENDP
_vdbeRecordDecodeInt PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
push	edi
mov	eax, DWORD PTR _serial_type$[ebp]
mov	DWORD PTR tv64[ebp], eax
cmp	DWORD PTR tv64[ebp], 6
ja	$LN7@vdbeRecord
mov	ecx, DWORD PTR tv64[ebp]
jmp	DWORD PTR $LN11@vdbeRecord[ecx*4]
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [ecx+eax]
cdq
jmp	$LN9@vdbeRecord
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [ecx+eax]
shl	eax, 8
mov	edx, 1
shl	edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
cdq
jmp	$LN9@vdbeRecord
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
shl	eax, 16					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
shl	ecx, 8
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
cdq
jmp	$LN9@vdbeRecord
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
shl	eax, 24					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
shl	ecx, 16					
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
shl	edx, 8
or	eax, edx
mov	ecx, 1
imul	edx, ecx, 3
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
mov	DWORD PTR _y$[ebp], eax
mov	eax, DWORD PTR _y$[ebp]
cdq
jmp	$LN9@vdbeRecord
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	eax, BYTE PTR [edx+ecx+2]
shl	eax, 24					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx+2]
shl	ecx, 16					
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx+2]
shl	edx, 8
or	eax, edx
mov	ecx, 1
imul	edx, ecx, 3
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+edx+2]
or	eax, edx
mov	esi, eax
xor	edi, edi
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
shl	eax, 8
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
or	eax, ecx
cdq
push	1
push	0
push	edx
push	eax
call	__allmul
add	esi, eax
adc	edi, edx
mov	eax, esi
mov	edx, edi
jmp	$LN9@vdbeRecord
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
shl	edx, 24					
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	eax, BYTE PTR [ecx+eax]
shl	eax, 16					
or	edx, eax
mov	ecx, 1
shl	ecx, 1
mov	eax, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [eax+ecx]
shl	ecx, 8
or	edx, ecx
mov	eax, 1
imul	ecx, eax, 3
mov	eax, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [eax+ecx]
or	edx, ecx
xor	eax, eax
mov	DWORD PTR _x$1[ebp], edx
mov	DWORD PTR _x$1[ebp+4], eax
mov	eax, DWORD PTR _x$1[ebp]
mov	edx, DWORD PTR _x$1[ebp+4]
mov	cl, 32					
call	__allshl
mov	ecx, 1
imul	ecx, ecx, 0
mov	esi, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [esi+ecx+4]
shl	ecx, 24					
mov	esi, 1
shl	esi, 0
mov	edi, DWORD PTR _aKey$[ebp]
movzx	esi, BYTE PTR [edi+esi+4]
shl	esi, 16					
or	ecx, esi
mov	esi, 1
shl	esi, 1
mov	edi, DWORD PTR _aKey$[ebp]
movzx	esi, BYTE PTR [edi+esi+4]
shl	esi, 8
or	ecx, esi
mov	esi, 1
imul	esi, esi, 3
mov	edi, DWORD PTR _aKey$[ebp]
movzx	esi, BYTE PTR [edi+esi+4]
or	ecx, esi
xor	esi, esi
or	eax, ecx
or	edx, esi
mov	DWORD PTR _x$1[ebp], eax
mov	DWORD PTR _x$1[ebp+4], edx
mov	eax, DWORD PTR _x$1[ebp]
mov	edx, DWORD PTR _x$1[ebp+4]
jmp	SHORT $LN9@vdbeRecord
mov	eax, DWORD PTR _serial_type$[ebp]
sub	eax, 8
xor	edx, edx
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN6@vdbeRecord
DD	$LN6@vdbeRecord
DD	$LN5@vdbeRecord
DD	$LN4@vdbeRecord
DD	$LN3@vdbeRecord
DD	$LN2@vdbeRecord
DD	$LN1@vdbeRecord
ENDP
_vdbeCompareMemString PROC
push	ebp
mov	ebp, esp
sub	esp, 108				
mov	eax, DWORD PTR _pMem1$[ebp]
movzx	ecx, BYTE PTR [eax+30]
mov	edx, DWORD PTR _pColl$[ebp]
movzx	eax, BYTE PTR [edx+4]
cmp	ecx, eax
jne	SHORT $LN2@vdbeCompar
mov	ecx, DWORD PTR _pMem2$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pMem2$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pMem1$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pMem1$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pColl$[ebp]
mov	eax, DWORD PTR [edx+12]
call	eax
add	esp, 20					
jmp	$LN3@vdbeCompar
jmp	$LN3@vdbeCompar
push	40					
push	0
lea	ecx, DWORD PTR _c1$2[ebp]
push	ecx
call	_memset
add	esp, 12					
push	40					
push	0
lea	edx, DWORD PTR _c2$1[ebp]
push	edx
call	_memset
add	esp, 12					
push	4096					
mov	eax, DWORD PTR _pMem1$[ebp]
push	eax
lea	ecx, DWORD PTR _c1$2[ebp]
push	ecx
call	_sqlite3VdbeMemShallowCopy
add	esp, 12					
push	4096					
mov	edx, DWORD PTR _pMem2$[ebp]
push	edx
lea	eax, DWORD PTR _c2$1[ebp]
push	eax
call	_sqlite3VdbeMemShallowCopy
add	esp, 12					
mov	ecx, DWORD PTR _pColl$[ebp]
movzx	edx, BYTE PTR [ecx+4]
push	edx
lea	eax, DWORD PTR _c1$2[ebp]
push	eax
call	_sqlite3ValueText
add	esp, 8
mov	DWORD PTR _v1$6[ebp], eax
cmp	DWORD PTR _v1$6[ebp], 0
jne	SHORT $LN5@vdbeCompar
mov	DWORD PTR tv130[ebp], 0
jmp	SHORT $LN6@vdbeCompar
mov	ecx, DWORD PTR _c1$2[ebp+24]
mov	DWORD PTR tv130[ebp], ecx
mov	edx, DWORD PTR tv130[ebp]
mov	DWORD PTR _n1$4[ebp], edx
mov	eax, DWORD PTR _pColl$[ebp]
movzx	ecx, BYTE PTR [eax+4]
push	ecx
lea	edx, DWORD PTR _c2$1[ebp]
push	edx
call	_sqlite3ValueText
add	esp, 8
mov	DWORD PTR _v2$7[ebp], eax
cmp	DWORD PTR _v2$7[ebp], 0
jne	SHORT $LN7@vdbeCompar
mov	DWORD PTR tv136[ebp], 0
jmp	SHORT $LN8@vdbeCompar
mov	eax, DWORD PTR _c2$1[ebp+24]
mov	DWORD PTR tv136[ebp], eax
mov	ecx, DWORD PTR tv136[ebp]
mov	DWORD PTR _n2$5[ebp], ecx
mov	edx, DWORD PTR _v2$7[ebp]
push	edx
mov	eax, DWORD PTR _n2$5[ebp]
push	eax
mov	ecx, DWORD PTR _v1$6[ebp]
push	ecx
mov	edx, DWORD PTR _n1$4[ebp]
push	edx
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pColl$[ebp]
mov	eax, DWORD PTR [edx+12]
call	eax
add	esp, 20					
mov	DWORD PTR _rc$3[ebp], eax
lea	ecx, DWORD PTR _c1$2[ebp]
push	ecx
call	_sqlite3VdbeMemRelease
add	esp, 4
lea	edx, DWORD PTR _c2$1[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	eax, DWORD PTR _rc$3[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vdbeCommit PROC
push	ebp
mov	ebp, esp
sub	esp, 88					
mov	DWORD PTR _nTrans$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _needXcommit$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN49@vdbeCommit
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN47@vdbeCommit
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	SHORT $LN47@vdbeCommit
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pBt$13[ebp], edx
mov	eax, DWORD PTR _pBt$13[ebp]
push	eax
call	_sqlite3BtreeIsInTrans
add	esp, 4
test	eax, eax
je	SHORT $LN46@vdbeCommit
mov	DWORD PTR _needXcommit$[ebp], 1
cmp	DWORD PTR _i$[ebp], 1
je	SHORT $LN45@vdbeCommit
mov	ecx, DWORD PTR _nTrans$[ebp]
add	ecx, 1
mov	DWORD PTR _nTrans$[ebp], ecx
mov	edx, DWORD PTR _pBt$13[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$13[ebp]
push	eax
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerExclusiveLock
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pBt$13[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
jmp	$LN48@vdbeCommit
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN44@vdbeCommit
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN50@vdbeCommit
cmp	DWORD PTR _needXcommit$[ebp], 0
je	SHORT $LN43@vdbeCommit
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+184], 0
je	SHORT $LN43@vdbeCommit
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+180]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+184]
call	eax
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN43@vdbeCommit
mov	eax, 531				
jmp	$LN50@vdbeCommit
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3BtreeGetFilename
add	esp, 4
push	eax
call	_sqlite3Strlen30
add	esp, 4
test	eax, eax
je	SHORT $LN40@vdbeCommit
cmp	DWORD PTR _nTrans$[ebp], 1
jg	$LN41@vdbeCommit
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN39@vdbeCommit
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN37@vdbeCommit
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN37@vdbeCommit
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$9[ebp], eax
cmp	DWORD PTR _pBt$9[ebp], 0
je	SHORT $LN36@vdbeCommit
push	0
mov	ecx, DWORD PTR _pBt$9[ebp]
push	ecx
call	_sqlite3BtreeCommitPhaseOne
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN38@vdbeCommit
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN35@vdbeCommit
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN33@vdbeCommit
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	SHORT $LN33@vdbeCommit
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pBt$8[ebp], edx
cmp	DWORD PTR _pBt$8[ebp], 0
je	SHORT $LN32@vdbeCommit
push	0
mov	eax, DWORD PTR _pBt$8[ebp]
push	eax
call	_sqlite3BtreeCommitPhaseTwo
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN34@vdbeCommit
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN31@vdbeCommit
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabCommit
add	esp, 4
jmp	$LN30@vdbeCommit
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pVfs$15[ebp], eax
mov	DWORD PTR _needSync$10[ebp], 0
mov	DWORD PTR _zMaster$17[ebp], 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3BtreeGetFilename
add	esp, 4
mov	DWORD PTR _zMainFile$7[ebp], eax
mov	DWORD PTR _pMaster$16[ebp], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _offset$1[ebp], xmm0
mov	DWORD PTR _retryCount$14[ebp], 0
mov	eax, DWORD PTR _zMainFile$7[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nMainFile$3[ebp], eax
mov	ecx, DWORD PTR _zMainFile$7[ebp]
push	ecx
push	OFFSET $SG98132
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zMaster$17[ebp], eax
cmp	DWORD PTR _zMaster$17[ebp], 0
jne	SHORT $LN28@vdbeCommit
mov	eax, 7
jmp	$LN50@vdbeCommit
cmp	DWORD PTR _retryCount$14[ebp], 0
je	SHORT $LN25@vdbeCommit
cmp	DWORD PTR _retryCount$14[ebp], 100	
jle	SHORT $LN24@vdbeCommit
mov	eax, DWORD PTR _zMaster$17[ebp]
push	eax
push	OFFSET $SG98140
push	13					
call	_sqlite3_log
add	esp, 12					
push	0
mov	ecx, DWORD PTR _zMaster$17[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$15[ebp]
push	edx
call	_sqlite3OsDelete
add	esp, 12					
jmp	$LN26@vdbeCommit
jmp	SHORT $LN25@vdbeCommit
cmp	DWORD PTR _retryCount$14[ebp], 1
jne	SHORT $LN25@vdbeCommit
mov	eax, DWORD PTR _zMaster$17[ebp]
push	eax
push	OFFSET $SG98143
push	13					
call	_sqlite3_log
add	esp, 12					
mov	ecx, DWORD PTR _retryCount$14[ebp]
add	ecx, 1
mov	DWORD PTR _retryCount$14[ebp], ecx
lea	edx, DWORD PTR _iRandom$6[ebp]
push	edx
push	4
call	_sqlite3_randomness
add	esp, 8
mov	eax, DWORD PTR _iRandom$6[ebp]
and	eax, 255				
push	eax
mov	ecx, DWORD PTR _iRandom$6[ebp]
shr	ecx, 8
and	ecx, 16777215				
push	ecx
push	OFFSET $SG98144
mov	edx, DWORD PTR _zMaster$17[ebp]
add	edx, DWORD PTR _nMainFile$3[ebp]
push	edx
push	13					
call	_sqlite3_snprintf
add	esp, 20					
lea	eax, DWORD PTR _res$2[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _zMaster$17[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$15[ebp]
push	edx
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN26@vdbeCommit
cmp	DWORD PTR _res$2[ebp], 0
jne	$LN28@vdbeCommit
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN20@vdbeCommit
push	0
push	16406					
lea	eax, DWORD PTR _pMaster$16[ebp]
push	eax
mov	ecx, DWORD PTR _zMaster$17[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$15[ebp]
push	edx
call	_sqlite3OsOpenMalloc
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN19@vdbeCommit
mov	eax, DWORD PTR _zMaster$17[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN50@vdbeCommit
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN18@vdbeCommit
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	$LN16@vdbeCommit
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pBt$11[ebp], edx
mov	eax, DWORD PTR _pBt$11[ebp]
push	eax
call	_sqlite3BtreeIsInTrans
add	esp, 4
test	eax, eax
je	$LN15@vdbeCommit
mov	ecx, DWORD PTR _pBt$11[ebp]
push	ecx
call	_sqlite3BtreeGetJournalname
add	esp, 4
mov	DWORD PTR _zFile$12[ebp], eax
cmp	DWORD PTR _zFile$12[ebp], 0
jne	SHORT $LN14@vdbeCommit
jmp	SHORT $LN17@vdbeCommit
cmp	DWORD PTR _needSync$10[ebp], 0
jne	SHORT $LN13@vdbeCommit
mov	edx, DWORD PTR _pBt$11[ebp]
push	edx
call	_sqlite3BtreeSyncDisabled
add	esp, 4
test	eax, eax
jne	SHORT $LN13@vdbeCommit
mov	DWORD PTR _needSync$10[ebp], 1
mov	eax, DWORD PTR _offset$1[ebp+4]
push	eax
mov	ecx, DWORD PTR _offset$1[ebp]
push	ecx
mov	edx, DWORD PTR _zFile$12[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
push	eax
mov	eax, DWORD PTR _zFile$12[ebp]
push	eax
mov	ecx, DWORD PTR _pMaster$16[ebp]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _zFile$12[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
cdq
add	eax, DWORD PTR _offset$1[ebp]
adc	edx, DWORD PTR _offset$1[ebp+4]
mov	DWORD PTR _offset$1[ebp], eax
mov	DWORD PTR _offset$1[ebp+4], edx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@vdbeCommit
mov	eax, DWORD PTR _pMaster$16[ebp]
push	eax
call	_sqlite3OsCloseFree
add	esp, 4
push	0
mov	ecx, DWORD PTR _zMaster$17[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$15[ebp]
push	edx
call	_sqlite3OsDelete
add	esp, 12					
mov	eax, DWORD PTR _zMaster$17[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN50@vdbeCommit
jmp	$LN17@vdbeCommit
cmp	DWORD PTR _needSync$10[ebp], 0
je	SHORT $LN11@vdbeCommit
mov	edx, DWORD PTR _pMaster$16[ebp]
push	edx
call	_sqlite3OsDeviceCharacteristics
add	esp, 4
and	eax, 1024				
jne	SHORT $LN11@vdbeCommit
push	2
mov	eax, DWORD PTR _pMaster$16[ebp]
push	eax
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@vdbeCommit
mov	ecx, DWORD PTR _pMaster$16[ebp]
push	ecx
call	_sqlite3OsCloseFree
add	esp, 4
push	0
mov	edx, DWORD PTR _zMaster$17[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$15[ebp]
push	eax
call	_sqlite3OsDelete
add	esp, 12					
mov	ecx, DWORD PTR _zMaster$17[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN50@vdbeCommit
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN10@vdbeCommit
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@vdbeCommit
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN8@vdbeCommit
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$5[ebp], eax
cmp	DWORD PTR _pBt$5[ebp], 0
je	SHORT $LN7@vdbeCommit
mov	ecx, DWORD PTR _zMaster$17[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$5[ebp]
push	edx
call	_sqlite3BtreeCommitPhaseOne
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN9@vdbeCommit
mov	eax, DWORD PTR _pMaster$16[ebp]
push	eax
call	_sqlite3OsCloseFree
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@vdbeCommit
mov	ecx, DWORD PTR _zMaster$17[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN50@vdbeCommit
push	1
mov	eax, DWORD PTR _zMaster$17[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$15[ebp]
push	ecx
call	_sqlite3OsDelete
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _zMaster$17[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	DWORD PTR _zMaster$17[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@vdbeCommit
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN50@vdbeCommit
call	_sqlite3BeginBenignMalloc
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@vdbeCommit
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN2@vdbeCommit
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _pBt$4[ebp], ecx
cmp	DWORD PTR _pBt$4[ebp], 0
je	SHORT $LN1@vdbeCommit
push	1
mov	edx, DWORD PTR _pBt$4[ebp]
push	edx
call	_sqlite3BtreeCommitPhaseTwo
add	esp, 8
jmp	SHORT $LN3@vdbeCommit
call	_sqlite3EndBenignMalloc
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VtabCommit
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_Cleanup PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+44], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+20], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_closeAllCursors PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+176], 0
je	SHORT $LN12@closeAllCu
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+176]
mov	DWORD PTR _pFrame$3[ebp], edx
jmp	SHORT $LN11@closeAllCu
mov	eax, DWORD PTR _pFrame$3[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pFrame$3[ebp], ecx
mov	edx, DWORD PTR _pFrame$3[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN9@closeAllCu
jmp	SHORT $LN10@closeAllCu
mov	eax, DWORD PTR _pFrame$3[ebp]
push	eax
call	_sqlite3VdbeFrameRestore
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+176], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+184], 0
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+56], 0
je	SHORT $LN8@closeAllCu
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN7@closeAllCu
mov	ecx, DWORD PTR _i$4[ebp]
add	ecx, 1
mov	DWORD PTR _i$4[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$4[ebp]
cmp	eax, DWORD PTR [edx+36]
jge	SHORT $LN8@closeAllCu
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR _i$4[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$2[ebp], ecx
cmp	DWORD PTR _pC$2[ebp], 0
je	SHORT $LN4@closeAllCu
mov	edx, DWORD PTR _pC$2[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeFreeCursor
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR _i$4[ebp]
mov	DWORD PTR [edx+eax*4], 0
jmp	SHORT $LN6@closeAllCu
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN2@closeAllCu
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
mov	ecx, 40					
shl	ecx, 0
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+8]
push	ecx
call	_releaseMemArray
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+180], 0
je	SHORT $LN1@closeAllCu
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+180]
mov	DWORD PTR _pDel$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pDel$1[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax+180], edx
mov	eax, DWORD PTR _pDel$1[ebp]
push	eax
call	_sqlite3VdbeFrameDelete
add	esp, 4
jmp	SHORT $LN2@closeAllCu
push	0
push	-1
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeDeleteAuxData
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_allocSpace PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pBuf$[ebp], 0
je	SHORT $LN3@allocSpace
mov	eax, DWORD PTR _pBuf$[ebp]
jmp	SHORT $LN4@allocSpace
mov	eax, DWORD PTR _nByte$[ebp]
add	eax, 7
and	eax, -8					
mov	DWORD PTR _nByte$[ebp], eax
mov	ecx, DWORD PTR _ppFrom$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, DWORD PTR _nByte$[ebp]
cmp	edx, DWORD PTR _pEnd$[ebp]
ja	SHORT $LN2@allocSpace
mov	eax, DWORD PTR _ppFrom$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pBuf$[ebp], ecx
mov	edx, DWORD PTR _ppFrom$[ebp]
mov	eax, DWORD PTR [edx]
add	eax, DWORD PTR _nByte$[ebp]
mov	ecx, DWORD PTR _ppFrom$[ebp]
mov	DWORD PTR [ecx], eax
jmp	SHORT $LN1@allocSpace
mov	edx, DWORD PTR _pnByte$[ebp]
mov	eax, DWORD PTR [edx]
add	eax, DWORD PTR _nByte$[ebp]
mov	ecx, DWORD PTR _pnByte$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, DWORD PTR _pBuf$[ebp]
pop	ebp
ret	0
ENDP
_releaseMemArray PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _p$[ebp], 0
je	$LN12@releaseMem
cmp	DWORD PTR _N$[ebp], 0
je	$LN12@releaseMem
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$2[ebp], ecx
mov	edx, DWORD PTR _db$2[ebp]
mov	al, BYTE PTR [edx+64]
mov	BYTE PTR _malloc_failed$3[ebp], al
mov	ecx, DWORD PTR _db$2[ebp]
cmp	DWORD PTR [ecx+512], 0
je	SHORT $LN10@releaseMem
imul	edx, DWORD PTR _N$[ebp], 40
add	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pEnd$1[ebp], edx
jmp	SHORT $LN9@releaseMem
mov	eax, DWORD PTR _p$[ebp]
add	eax, 40					
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR _pEnd$1[ebp]
jae	SHORT $LN7@releaseMem
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _db$2[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN8@releaseMem
jmp	SHORT $LN12@releaseMem
imul	edx, DWORD PTR _N$[ebp], 40
add	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pEnd$1[ebp], edx
jmp	SHORT $LN6@releaseMem
mov	eax, DWORD PTR _p$[ebp]
add	eax, 40					
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR _pEnd$1[ebp]
jae	SHORT $LN4@releaseMem
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 9312				
je	SHORT $LN3@releaseMem
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeMemRelease
add	esp, 4
jmp	SHORT $LN2@releaseMem
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+36], 0
je	SHORT $LN2@releaseMem
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$2[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+36], 0
mov	ecx, 128				
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+28], cx
jmp	SHORT $LN5@releaseMem
mov	eax, DWORD PTR _db$2[ebp]
mov	cl, BYTE PTR _malloc_failed$3[ebp]
mov	BYTE PTR [eax+64], cl
mov	esp, ebp
pop	ebp
ret	0
ENDP
_displayP4 PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _zTemp$[ebp]
mov	DWORD PTR _zP4$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movsx	edx, BYTE PTR [ecx+1]
mov	DWORD PTR tv66[ebp], edx
mov	eax, DWORD PTR tv66[ebp]
add	eax, 19					
mov	DWORD PTR tv66[ebp], eax
cmp	DWORD PTR tv66[ebp], 15			
ja	$LN2@displayP4
mov	ecx, DWORD PTR tv66[ebp]
jmp	DWORD PTR $LN34@displayP4[ecx*4]
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pKeyInfo$6[ebp], eax
mov	ecx, DWORD PTR _pKeyInfo$6[ebp]
movzx	edx, WORD PTR [ecx+6]
push	edx
push	OFFSET $SG97754
mov	eax, DWORD PTR _zTemp$[ebp]
push	eax
mov	ecx, DWORD PTR _nTemp$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _zTemp$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _i$10[ebp], eax
mov	DWORD PTR _j$8[ebp], 0
jmp	SHORT $LN26@displayP4
mov	eax, DWORD PTR _j$8[ebp]
add	eax, 1
mov	DWORD PTR _j$8[ebp], eax
mov	ecx, DWORD PTR _pKeyInfo$6[ebp]
movzx	edx, WORD PTR [ecx+6]
cmp	DWORD PTR _j$8[ebp], edx
jge	$LN24@displayP4
mov	eax, DWORD PTR _j$8[ebp]
mov	ecx, DWORD PTR _pKeyInfo$6[ebp]
mov	edx, DWORD PTR [ecx+eax*4+20]
mov	DWORD PTR _pColl$4[ebp], edx
cmp	DWORD PTR _pColl$4[ebp], 0
je	SHORT $LN32@displayP4
mov	eax, DWORD PTR _pColl$4[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR tv85[ebp], ecx
jmp	SHORT $LN33@displayP4
mov	DWORD PTR tv85[ebp], OFFSET $SG97760
mov	edx, DWORD PTR tv85[ebp]
mov	DWORD PTR _zColl$5[ebp], edx
mov	eax, DWORD PTR _zColl$5[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$7[ebp], eax
cmp	DWORD PTR _n$7[ebp], 6
jne	SHORT $LN23@displayP4
push	6
push	OFFSET $SG97763
mov	ecx, DWORD PTR _zColl$5[ebp]
push	ecx
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN23@displayP4
mov	DWORD PTR _zColl$5[ebp], OFFSET $SG97764
mov	DWORD PTR _n$7[ebp], 1
mov	edx, DWORD PTR _i$10[ebp]
add	edx, DWORD PTR _n$7[ebp]
mov	eax, DWORD PTR _nTemp$[ebp]
sub	eax, 6
cmp	edx, eax
jle	SHORT $LN22@displayP4
push	4
push	OFFSET $SG97766
mov	ecx, DWORD PTR _zTemp$[ebp]
add	ecx, DWORD PTR _i$10[ebp]
push	ecx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN24@displayP4
mov	edx, DWORD PTR _zTemp$[ebp]
add	edx, DWORD PTR _i$10[ebp]
mov	BYTE PTR [edx], 44			
mov	eax, DWORD PTR _i$10[ebp]
add	eax, 1
mov	DWORD PTR _i$10[ebp], eax
mov	ecx, DWORD PTR _pKeyInfo$6[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR _j$8[ebp]
movzx	ecx, BYTE PTR [edx+eax]
test	ecx, ecx
je	SHORT $LN21@displayP4
mov	edx, DWORD PTR _zTemp$[ebp]
add	edx, DWORD PTR _i$10[ebp]
mov	BYTE PTR [edx], 45			
mov	eax, DWORD PTR _i$10[ebp]
add	eax, 1
mov	DWORD PTR _i$10[ebp], eax
mov	ecx, DWORD PTR _n$7[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _zColl$5[ebp]
push	edx
mov	eax, DWORD PTR _zTemp$[ebp]
add	eax, DWORD PTR _i$10[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _i$10[ebp]
add	ecx, DWORD PTR _n$7[ebp]
mov	DWORD PTR _i$10[ebp], ecx
jmp	$LN25@displayP4
mov	edx, DWORD PTR _zTemp$[ebp]
add	edx, DWORD PTR _i$10[ebp]
mov	BYTE PTR [edx], 41			
mov	eax, DWORD PTR _i$10[ebp]
add	eax, 1
mov	DWORD PTR _i$10[ebp], eax
mov	ecx, DWORD PTR _zTemp$[ebp]
add	ecx, DWORD PTR _i$10[ebp]
mov	BYTE PTR [ecx], 0
jmp	$LN28@displayP4
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pColl$1[ebp], eax
mov	ecx, DWORD PTR _pColl$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG97771
mov	eax, DWORD PTR _zTemp$[ebp]
push	eax
mov	ecx, DWORD PTR _nTemp$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 16					
jmp	$LN28@displayP4
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pDef$3[ebp], eax
mov	ecx, DWORD PTR _pDef$3[ebp]
movsx	edx, WORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pDef$3[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
push	OFFSET $SG97774
mov	edx, DWORD PTR _zTemp$[ebp]
push	edx
mov	eax, DWORD PTR _nTemp$[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 20					
jmp	$LN28@displayP4
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR [edx]
push	ecx
push	OFFSET $SG97776
mov	edx, DWORD PTR _zTemp$[ebp]
push	edx
mov	eax, DWORD PTR _nTemp$[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 20					
jmp	$LN28@displayP4
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
push	OFFSET $SG97778
mov	eax, DWORD PTR _zTemp$[ebp]
push	eax
mov	ecx, DWORD PTR _nTemp$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 16					
jmp	$LN28@displayP4
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax]
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG97780
mov	ecx, DWORD PTR _zTemp$[ebp]
push	ecx
mov	edx, DWORD PTR _nTemp$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 20					
jmp	$LN28@displayP4
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pMem$9[ebp], ecx
mov	edx, DWORD PTR _pMem$9[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 2
je	SHORT $LN14@displayP4
mov	ecx, DWORD PTR _pMem$9[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _zP4$[ebp], edx
jmp	$LN7@displayP4
mov	eax, DWORD PTR _pMem$9[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 4
je	SHORT $LN12@displayP4
mov	edx, DWORD PTR _pMem$9[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR [edx+16]
push	ecx
push	OFFSET $SG97786
mov	edx, DWORD PTR _zTemp$[ebp]
push	edx
mov	eax, DWORD PTR _nTemp$[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 20					
jmp	SHORT $LN7@displayP4
mov	ecx, DWORD PTR _pMem$9[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 8
je	SHORT $LN10@displayP4
mov	eax, DWORD PTR _pMem$9[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax+8]
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG97789
mov	ecx, DWORD PTR _zTemp$[ebp]
push	ecx
mov	edx, DWORD PTR _nTemp$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 20					
jmp	SHORT $LN7@displayP4
mov	eax, DWORD PTR _pMem$9[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 1
je	SHORT $LN8@displayP4
push	OFFSET $SG97792
mov	edx, DWORD PTR _zTemp$[ebp]
push	edx
mov	eax, DWORD PTR _nTemp$[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 12					
jmp	SHORT $LN7@displayP4
mov	DWORD PTR _zP4$[ebp], OFFSET $SG97795
jmp	$LN28@displayP4
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pVtab$2[ebp], eax
mov	ecx, DWORD PTR _pVtab$2[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pVtab$2[ebp]
push	eax
push	OFFSET $SG97798
mov	ecx, DWORD PTR _zTemp$[ebp]
push	ecx
mov	edx, DWORD PTR _nTemp$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 20					
jmp	SHORT $LN28@displayP4
push	OFFSET $SG97800
mov	eax, DWORD PTR _zTemp$[ebp]
push	eax
mov	ecx, DWORD PTR _nTemp$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 12					
jmp	SHORT $LN28@displayP4
push	OFFSET $SG97802
mov	edx, DWORD PTR _zTemp$[ebp]
push	edx
mov	eax, DWORD PTR _nTemp$[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 12					
jmp	SHORT $LN28@displayP4
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zTemp$[ebp]
mov	BYTE PTR [eax+edx], 0
jmp	SHORT $LN28@displayP4
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _zP4$[ebp], edx
cmp	DWORD PTR _zP4$[ebp], 0
jne	SHORT $LN1@displayP4
mov	eax, DWORD PTR _zTemp$[ebp]
mov	DWORD PTR _zP4$[ebp], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zTemp$[ebp]
mov	BYTE PTR [eax+edx], 0
mov	eax, DWORD PTR _zP4$[ebp]
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN3@displayP4
DD	$LN4@displayP4
DD	$LN2@displayP4
DD	$LN2@displayP4
DD	$LN5@displayP4
DD	$LN17@displayP4
DD	$LN18@displayP4
DD	$LN16@displayP4
DD	$LN2@displayP4
DD	$LN6@displayP4
DD	$LN2@displayP4
DD	$LN15@displayP4
DD	$LN2@displayP4
DD	$LN27@displayP4
DD	$LN19@displayP4
DD	$LN20@displayP4
ENDP
_freeP4	PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _p4$[ebp], 0
je	$LN15@freeP4
mov	eax, DWORD PTR _p4type$[ebp]
mov	DWORD PTR tv65[ebp], eax
mov	ecx, DWORD PTR tv65[ebp]
add	ecx, 15					
mov	DWORD PTR tv65[ebp], ecx
cmp	DWORD PTR tv65[ebp], 14			
ja	$LN15@freeP4
mov	edx, DWORD PTR tv65[ebp]
movzx	eax, BYTE PTR $LN17@freeP4[edx]
jmp	DWORD PTR $LN18@freeP4[eax*4]
mov	ecx, DWORD PTR _p4$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN15@freeP4
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+512], 0
jne	SHORT $LN9@freeP4
mov	ecx, DWORD PTR _p4$[ebp]
push	ecx
call	_sqlite3KeyInfoUnref
add	esp, 4
jmp	$LN15@freeP4
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+512], 0
jne	SHORT $LN7@freeP4
mov	eax, DWORD PTR _p4$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN15@freeP4
mov	ecx, DWORD PTR _p4$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_freeEphemeralFunction
add	esp, 8
jmp	SHORT $LN15@freeP4
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+512], 0
jne	SHORT $LN4@freeP4
mov	ecx, DWORD PTR _p4$[ebp]
push	ecx
call	_sqlite3ValueFree
add	esp, 4
jmp	SHORT $LN3@freeP4
mov	edx, DWORD PTR _p4$[ebp]
mov	DWORD PTR _p$1[ebp], edx
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _p$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN15@freeP4
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+512], 0
jne	SHORT $LN15@freeP4
mov	eax, DWORD PTR _p4$[ebp]
push	eax
call	_sqlite3VtabUnlock
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	$LN11@freeP4
DD	$LN8@freeP4
DD	$LN2@freeP4
DD	$LN5@freeP4
DD	$LN10@freeP4
DD	$LN6@freeP4
DD	$LN15@freeP4
DB	0
DB	6
DB	0
DB	0
DB	1
DB	2
DB	6
DB	3
DB	6
DB	4
DB	5
DB	6
DB	6
DB	6
DB	0
ENDP
_vdbeFreeOpArray PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _aOp$[ebp], 0
je	SHORT $LN4@vdbeFreeOp
mov	eax, DWORD PTR _aOp$[ebp]
mov	DWORD PTR _pOp$1[ebp], eax
jmp	SHORT $LN3@vdbeFreeOp
mov	ecx, DWORD PTR _pOp$1[ebp]
add	ecx, 20					
mov	DWORD PTR _pOp$1[ebp], ecx
imul	edx, DWORD PTR _nOp$[ebp], 20
add	edx, DWORD PTR _aOp$[ebp]
cmp	DWORD PTR _pOp$1[ebp], edx
jae	SHORT $LN4@vdbeFreeOp
mov	eax, DWORD PTR _pOp$1[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pOp$1[ebp]
movsx	eax, BYTE PTR [edx+1]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_freeP4
add	esp, 12					
jmp	SHORT $LN2@vdbeFreeOp
mov	edx, DWORD PTR _aOp$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_freeEphemeralFunction PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pDef$[ebp], 0
je	SHORT $LN2@freeEpheme
mov	eax, DWORD PTR _pDef$[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 16					
je	SHORT $LN2@freeEpheme
mov	edx, DWORD PTR _pDef$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_resolveP2Values PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pMaxFuncArgs$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nMaxArgs$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _pParse$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+112]
mov	DWORD PTR _aLabel$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 256				
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, -513				
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pOp$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN18@resolveP2V
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
add	edx, 20					
mov	DWORD PTR _pOp$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	$LN16@resolveP2V
mov	eax, DWORD PTR _pOp$[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR _opcode$2[ebp], cl
movzx	edx, BYTE PTR _opcode$2[ebp]
mov	DWORD PTR tv80[ebp], edx
mov	eax, DWORD PTR tv80[ebp]
sub	eax, 1
mov	DWORD PTR tv80[ebp], eax
cmp	DWORD PTR tv80[ebp], 14			
ja	$LN14@resolveP2V
mov	ecx, DWORD PTR tv80[ebp]
movzx	edx, BYTE PTR $LN21@resolveP2V[ecx]
jmp	DWORD PTR $LN22@resolveP2V[edx*4]
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
cmp	ecx, DWORD PTR _nMaxArgs$[ebp]
jle	SHORT $LN12@resolveP2V
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
mov	DWORD PTR _nMaxArgs$[ebp], eax
jmp	$LN14@resolveP2V
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN9@resolveP2V
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
and	eax, -257				
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
or	eax, 512				
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
jmp	$LN14@resolveP2V
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
and	eax, -257				
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
or	eax, 512				
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
jmp	SHORT $LN14@resolveP2V
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
cmp	eax, DWORD PTR _nMaxArgs$[ebp]
jle	SHORT $LN6@resolveP2V
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _nMaxArgs$[ebp], edx
jmp	SHORT $LN14@resolveP2V
mov	eax, 20					
imul	ecx, eax, -1
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+ecx+4]
mov	DWORD PTR _n$1[ebp], eax
mov	ecx, DWORD PTR _n$1[ebp]
cmp	ecx, DWORD PTR _nMaxArgs$[ebp]
jle	SHORT $LN4@resolveP2V
mov	edx, DWORD PTR _n$1[ebp]
mov	DWORD PTR _nMaxArgs$[ebp], edx
jmp	SHORT $LN14@resolveP2V
mov	eax, DWORD PTR _pOp$[ebp]
mov	DWORD PTR [eax+16], OFFSET _sqlite3BtreeNext
mov	ecx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [ecx+1], -19			
jmp	SHORT $LN14@resolveP2V
mov	edx, DWORD PTR _pOp$[ebp]
mov	DWORD PTR [edx+16], OFFSET _sqlite3BtreePrevious
mov	eax, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [eax+1], -19			
movzx	ecx, BYTE PTR _opcode$2[ebp]
mov	edx, DWORD PTR _pOp$[ebp]
mov	al, BYTE PTR _sqlite3OpcodeProperty[ecx]
mov	BYTE PTR [edx+2], al
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+2]
and	edx, 1
je	SHORT $LN1@resolveP2V
mov	eax, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [eax+8], 0
jge	SHORT $LN1@resolveP2V
mov	ecx, DWORD PTR _pOp$[ebp]
or	edx, -1
sub	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR _aLabel$[ebp]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR [eax+8], edx
jmp	$LN17@resolveP2V
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+112]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+112], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+108], 0
mov	eax, DWORD PTR _pMaxFuncArgs$[ebp]
mov	ecx, DWORD PTR _nMaxArgs$[ebp]
mov	DWORD PTR [eax], ecx
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	$LN13@resolveP2V
DD	$LN9@resolveP2V
DD	$LN11@resolveP2V
DD	$LN3@resolveP2V
DD	$LN2@resolveP2V
DD	$LN8@resolveP2V
DD	$LN5@resolveP2V
DD	$LN7@resolveP2V
DB	0
DB	1
DB	1
DB	2
DB	3
DB	4
DB	3
DB	4
DB	3
DB	0
DB	5
DB	5
DB	5
DB	6
DB	7
ENDP
_growOpArray PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+84], 0
je	SHORT $LN4@growOpArra
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+84]
shl	ecx, 1
mov	DWORD PTR tv69[ebp], ecx
jmp	SHORT $LN5@growOpArra
mov	DWORD PTR tv69[ebp], 51			
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR _nNew$[ebp], edx
imul	eax, DWORD PTR _nNew$[ebp], 20
push	eax
mov	ecx, DWORD PTR _v$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
je	SHORT $LN1@growOpArra
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbMallocSize
add	esp, 8
xor	edx, edx
mov	ecx, 20					
div	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+84], eax
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+4], ecx
cmp	DWORD PTR _pNew$[ebp], 0
je	SHORT $LN6@growOpArra
mov	DWORD PTR tv86[ebp], 0
jmp	SHORT $LN7@growOpArra
mov	DWORD PTR tv86[ebp], 7
mov	eax, DWORD PTR tv86[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_valueFromExpr PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
push	esi
mov	DWORD PTR _zVal$[ebp], 0
mov	DWORD PTR _pVal$[ebp], 0
mov	DWORD PTR _negInt$[ebp], 1
mov	DWORD PTR _zNeg$[ebp], OFFSET $SG97238
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN26@valueFromE
mov	eax, DWORD PTR _ppVal$[ebp]
mov	DWORD PTR [eax], 0
xor	eax, eax
jmp	$LN27@valueFromE
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _op$[ebp], edx
cmp	DWORD PTR _op$[ebp], 159		
jne	SHORT $LN25@valueFromE
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax+38]
mov	DWORD PTR _op$[ebp], ecx
cmp	DWORD PTR _op$[ebp], 157		
jne	SHORT $LN24@valueFromE
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 132				
je	SHORT $LN23@valueFromE
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 133				
jne	SHORT $LN24@valueFromE
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pExpr$[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _op$[ebp], edx
mov	DWORD PTR _negInt$[ebp], -1
mov	DWORD PTR _zNeg$[ebp], OFFSET $SG97244
cmp	DWORD PTR _op$[ebp], 97			
je	SHORT $LN21@valueFromE
cmp	DWORD PTR _op$[ebp], 133		
je	SHORT $LN21@valueFromE
cmp	DWORD PTR _op$[ebp], 132		
jne	$LN22@valueFromE
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_valueNew
add	esp, 8
mov	DWORD PTR _pVal$[ebp], eax
cmp	DWORD PTR _pVal$[ebp], 0
jne	SHORT $LN20@valueFromE
jmp	$no_mem$29
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 1024				
je	SHORT $LN19@valueFromE
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [ecx+8]
cdq
mov	ecx, eax
mov	esi, edx
mov	eax, DWORD PTR _negInt$[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
push	edx
push	eax
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
jmp	SHORT $LN18@valueFromE
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _zNeg$[ebp]
push	edx
push	OFFSET $SG97252
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zVal$[ebp], eax
cmp	DWORD PTR _zVal$[ebp], 0
jne	SHORT $LN17@valueFromE
jmp	$no_mem$29
push	OFFSET _sqlite3MallocSize
push	1
mov	ecx, DWORD PTR _zVal$[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3ValueSetStr
add	esp, 20					
cmp	DWORD PTR _op$[ebp], 132		
je	SHORT $LN15@valueFromE
cmp	DWORD PTR _op$[ebp], 133		
jne	SHORT $LN16@valueFromE
movzx	eax, BYTE PTR _affinity$[ebp]
cmp	eax, 98					
jne	SHORT $LN16@valueFromE
push	1
push	99					
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3ValueApplyAffinity
add	esp, 12					
jmp	SHORT $LN14@valueFromE
push	1
movzx	edx, BYTE PTR _affinity$[ebp]
push	edx
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueApplyAffinity
add	esp, 12					
mov	ecx, DWORD PTR _pVal$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 12					
je	SHORT $LN13@valueFromE
mov	eax, DWORD PTR _pVal$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, -3					
mov	edx, DWORD PTR _pVal$[ebp]
mov	WORD PTR [edx+28], cx
movzx	eax, BYTE PTR _enc$[ebp]
cmp	eax, 1
je	SHORT $LN12@valueFromE
movzx	ecx, BYTE PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN2@valueFromE
cmp	DWORD PTR _op$[ebp], 157		
jne	$LN10@valueFromE
lea	eax, DWORD PTR _pVal$[ebp]
push	eax
movzx	ecx, BYTE PTR _affinity$[ebp]
push	ecx
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ValueFromExpr
add	esp, 20					
test	eax, eax
jne	$LN9@valueFromE
cmp	DWORD PTR _pVal$[ebp], 0
je	$LN9@valueFromE
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3VdbeMemNumerify
add	esp, 4
mov	ecx, DWORD PTR _pVal$[ebp]
mov	DWORD PTR tv301[ebp], ecx
mov	edx, DWORD PTR tv301[ebp]
cmp	DWORD PTR [edx+16], 0
jne	SHORT $LN8@valueFromE
mov	eax, DWORD PTR tv301[ebp]
cmp	DWORD PTR [eax+20], -2147483648		
jne	SHORT $LN8@valueFromE
mov	ecx, DWORD PTR _pVal$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -5					
mov	eax, DWORD PTR _pVal$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pVal$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, 8
mov	eax, DWORD PTR _pVal$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pVal$[ebp]
movsd	xmm0, QWORD PTR __real@c3e0000000000000
movsd	QWORD PTR [ecx+8], xmm0
jmp	SHORT $LN7@valueFromE
mov	edx, DWORD PTR _pVal$[ebp]
mov	eax, DWORD PTR [edx+16]
neg	eax
mov	ecx, DWORD PTR [edx+20]
adc	ecx, 0
neg	ecx
mov	edx, DWORD PTR _pVal$[ebp]
mov	DWORD PTR [edx+16], eax
mov	DWORD PTR [edx+20], ecx
mov	eax, DWORD PTR _pVal$[ebp]
movsd	xmm0, QWORD PTR [eax+8]
xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
mov	ecx, DWORD PTR _pVal$[ebp]
movsd	QWORD PTR [ecx+8], xmm0
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
movzx	eax, BYTE PTR _affinity$[ebp]
push	eax
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3ValueApplyAffinity
add	esp, 12					
jmp	$LN2@valueFromE
cmp	DWORD PTR _op$[ebp], 101		
jne	SHORT $LN5@valueFromE
mov	edx, DWORD PTR _pCtx$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_valueNew
add	esp, 8
mov	DWORD PTR _pVal$[ebp], eax
cmp	DWORD PTR _pVal$[ebp], 0
jne	SHORT $LN4@valueFromE
jmp	$no_mem$29
jmp	SHORT $LN2@valueFromE
cmp	DWORD PTR _op$[ebp], 134		
jne	SHORT $LN2@valueFromE
mov	ecx, DWORD PTR _pCtx$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_valueNew
add	esp, 8
mov	DWORD PTR _pVal$[ebp], eax
cmp	DWORD PTR _pVal$[ebp], 0
jne	SHORT $LN1@valueFromE
jmp	SHORT $no_mem$29
mov	eax, 1
shl	eax, 1
mov	ecx, DWORD PTR _pExpr$[ebp]
add	eax, DWORD PTR [ecx+8]
mov	DWORD PTR _zVal$[ebp], eax
mov	edx, DWORD PTR _zVal$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
sub	eax, 1
mov	DWORD PTR _nVal$1[ebp], eax
push	OFFSET _sqlite3MallocSize
push	0
mov	eax, DWORD PTR _nVal$1[ebp]
cdq
sub	eax, edx
sar	eax, 1
push	eax
mov	eax, DWORD PTR _nVal$1[ebp]
push	eax
mov	ecx, DWORD PTR _zVal$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3HexToBlob
add	esp, 12					
push	eax
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3VdbeMemSetStr
add	esp, 20					
mov	ecx, DWORD PTR _ppVal$[ebp]
mov	edx, DWORD PTR _pVal$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN27@valueFromE
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	ecx, DWORD PTR _zVal$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueFree
add	esp, 4
mov	eax, 7
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_valueNew PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ValueNew
add	esp, 4
pop	ebp
ret	0
ENDP
_doubleToInt64 PROC
push	ebp
mov	ebp, esp
mov	edx, DWORD PTR ?minInt@?1??doubleToInt64@@9@9+4
mov	ecx, DWORD PTR ?minInt@?1??doubleToInt64@@9@9
call	__ltod3
comisd	xmm0, QWORD PTR _r$[ebp]
jb	SHORT $LN4@doubleToIn
mov	eax, DWORD PTR ?minInt@?1??doubleToInt64@@9@9
mov	edx, DWORD PTR ?minInt@?1??doubleToInt64@@9@9+4
jmp	SHORT $LN1@doubleToIn
jmp	SHORT $LN1@doubleToIn
mov	edx, DWORD PTR ?maxInt@?1??doubleToInt64@@9@9+4
mov	ecx, DWORD PTR ?maxInt@?1??doubleToInt64@@9@9
call	__ltod3
movsd	xmm1, QWORD PTR _r$[ebp]
comisd	xmm1, xmm0
jb	SHORT $LN2@doubleToIn
mov	eax, DWORD PTR ?maxInt@?1??doubleToInt64@@9@9
mov	edx, DWORD PTR ?maxInt@?1??doubleToInt64@@9@9+4
jmp	SHORT $LN1@doubleToIn
jmp	SHORT $LN1@doubleToIn
movsd	xmm0, QWORD PTR _r$[ebp]
call	__dtol3
pop	ebp
ret	0
ENDP
_attachBackupObject PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerBackupPtr
add	esp, 4
mov	DWORD PTR _pp$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+44], ecx
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+40], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_backupTruncateFile PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
lea	eax, DWORD PTR _iCurrent$[ebp]
push	eax
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@backupTrun
mov	edx, DWORD PTR _iCurrent$[ebp+4]
cmp	edx, DWORD PTR _iSize$[ebp+4]
jl	SHORT $LN1@backupTrun
jg	SHORT $LN4@backupTrun
mov	eax, DWORD PTR _iCurrent$[ebp]
cmp	eax, DWORD PTR _iSize$[ebp]
jbe	SHORT $LN1@backupTrun
mov	ecx, DWORD PTR _iSize$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iSize$[ebp]
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
push	eax
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_backupOnePage PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
push	esi
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pDestPager$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR _nSrcPgsz$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR _nDestPgsz$[ebp], eax
mov	eax, DWORD PTR _nSrcPgsz$[ebp]
cmp	eax, DWORD PTR _nDestPgsz$[ebp]
jge	SHORT $LN10@backupOneP
mov	ecx, DWORD PTR _nSrcPgsz$[ebp]
mov	DWORD PTR tv74[ebp], ecx
jmp	SHORT $LN11@backupOneP
mov	edx, DWORD PTR _nDestPgsz$[ebp]
mov	DWORD PTR tv74[ebp], edx
mov	eax, DWORD PTR tv74[ebp]
mov	DWORD PTR _nCopy$[ebp], eax
mov	ecx, DWORD PTR _iSrcPg$[ebp]
xor	esi, esi
mov	eax, DWORD PTR _nSrcPgsz$[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _iEnd$[ebp], eax
mov	DWORD PTR _iEnd$[ebp+4], edx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _nSrcPgsz$[ebp]
cmp	edx, DWORD PTR _nDestPgsz$[ebp]
je	SHORT $LN7@backupOneP
mov	eax, DWORD PTR _pDestPager$[ebp]
push	eax
call	_sqlite3PagerIsMemdb
add	esp, 4
test	eax, eax
je	SHORT $LN7@backupOneP
mov	DWORD PTR _rc$[ebp], 8
mov	eax, DWORD PTR _nSrcPgsz$[ebp]
cdq
mov	ecx, DWORD PTR _iEnd$[ebp]
sub	ecx, eax
mov	eax, DWORD PTR _iEnd$[ebp+4]
sbb	eax, edx
mov	DWORD PTR _iOff$[ebp], ecx
mov	DWORD PTR _iOff$[ebp+4], eax
jmp	SHORT $LN6@backupOneP
mov	eax, DWORD PTR _nDestPgsz$[ebp]
cdq
add	eax, DWORD PTR _iOff$[ebp]
adc	edx, DWORD PTR _iOff$[ebp+4]
mov	DWORD PTR _iOff$[ebp], eax
mov	DWORD PTR _iOff$[ebp+4], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN4@backupOneP
mov	ecx, DWORD PTR _iOff$[ebp+4]
cmp	ecx, DWORD PTR _iEnd$[ebp+4]
jg	$LN4@backupOneP
jl	SHORT $LN12@backupOneP
mov	edx, DWORD PTR _iOff$[ebp]
cmp	edx, DWORD PTR _iEnd$[ebp]
jae	$LN4@backupOneP
mov	DWORD PTR _pDestPg$5[ebp], 0
mov	eax, DWORD PTR _nDestPgsz$[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _iOff$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOff$[ebp]
push	ecx
call	__alldiv
add	eax, 1
mov	DWORD PTR _iDest$4[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _iDest$4[ebp], eax
jne	SHORT $LN3@backupOneP
jmp	SHORT $LN5@backupOneP
push	0
lea	edx, DWORD PTR _pDestPg$5[ebp]
push	edx
mov	eax, DWORD PTR _iDest$4[ebp]
push	eax
mov	ecx, DWORD PTR _pDestPager$[ebp]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN2@backupOneP
mov	edx, DWORD PTR _pDestPg$5[ebp]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN2@backupOneP
mov	eax, DWORD PTR _nSrcPgsz$[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _iOff$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOff$[ebp]
push	ecx
call	__allrem
push	0
push	1
push	edx
push	eax
call	__allmul
add	eax, DWORD PTR _zSrcData$[ebp]
mov	DWORD PTR _zIn$1[ebp], eax
mov	edx, DWORD PTR _pDestPg$5[ebp]
push	edx
call	_sqlite3PagerGetData
add	esp, 4
mov	DWORD PTR _zDestData$2[ebp], eax
mov	eax, DWORD PTR _nDestPgsz$[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _iOff$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOff$[ebp]
push	ecx
call	__allrem
push	0
push	1
push	edx
push	eax
call	__allmul
add	eax, DWORD PTR _zDestData$2[ebp]
mov	DWORD PTR _zOut$3[ebp], eax
mov	edx, DWORD PTR _nCopy$[ebp]
push	edx
mov	eax, DWORD PTR _zIn$1[ebp]
push	eax
mov	ecx, DWORD PTR _zOut$3[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pDestPg$5[ebp]
push	edx
call	_sqlite3PagerGetExtra
add	esp, 4
mov	ecx, 1
imul	edx, ecx, 0
mov	BYTE PTR [eax+edx], 0
mov	eax, DWORD PTR _iOff$[ebp]
or	eax, DWORD PTR _iOff$[ebp+4]
jne	SHORT $LN2@backupOneP
cmp	DWORD PTR _bUpdate$[ebp], 0
jne	SHORT $LN2@backupOneP
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3BtreeLastPage
add	esp, 4
push	eax
mov	eax, 1
imul	ecx, eax, 28
add	ecx, DWORD PTR _zOut$3[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pDestPg$5[ebp]
push	edx
call	_sqlite3PagerUnref
add	esp, 4
jmp	$LN5@backupOneP
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isFatalError PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@isFatalErr
cmp	DWORD PTR _rc$[ebp], 5
je	SHORT $LN3@isFatalErr
cmp	DWORD PTR _rc$[ebp], 6
je	SHORT $LN3@isFatalErr
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@isFatalErr
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setDestPgsz PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
push	-1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3BtreeGetPageSize
add	esp, 4
push	eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeSetPageSize
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findBtree PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pDb$[ebp]
push	ecx
call	_sqlite3FindDbName
add	esp, 8
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 1
jne	$LN6@findBtree
mov	DWORD PTR _rc$1[ebp], 0
push	536					
mov	edx, DWORD PTR _pErrorDb$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pParse$2[ebp], eax
cmp	DWORD PTR _pParse$2[ebp], 0
jne	SHORT $LN5@findBtree
push	OFFSET $SG96583
push	7
mov	eax, DWORD PTR _pErrorDb$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
mov	DWORD PTR _rc$1[ebp], 7
jmp	SHORT $LN4@findBtree
mov	ecx, DWORD PTR _pParse$2[ebp]
mov	edx, DWORD PTR _pDb$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pParse$2[ebp]
push	eax
call	_sqlite3OpenTempDatabase
add	esp, 4
test	eax, eax
je	SHORT $LN3@findBtree
mov	ecx, DWORD PTR _pParse$2[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
push	OFFSET $SG96586
mov	eax, DWORD PTR _pParse$2[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pErrorDb$[ebp]
push	edx
call	_sqlite3Error
add	esp, 16					
mov	DWORD PTR _rc$1[ebp], 1
mov	eax, DWORD PTR _pParse$2[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pErrorDb$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pParse$2[ebp]
push	eax
call	_sqlite3ParserReset
add	esp, 4
mov	ecx, DWORD PTR _pParse$2[ebp]
push	ecx
mov	edx, DWORD PTR _pErrorDb$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN6@findBtree
xor	eax, eax
jmp	SHORT $LN7@findBtree
cmp	DWORD PTR _i$[ebp], 0
jge	SHORT $LN1@findBtree
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
push	OFFSET $SG96589
push	1
mov	ecx, DWORD PTR _pErrorDb$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 16					
xor	eax, eax
jmp	SHORT $LN7@findBtree
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	eax, DWORD PTR [ecx+edx+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_checkTreePage PROC
push	ebp
mov	ebp, esp
sub	esp, 276				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
mov	DWORD PTR _hit$[ebp], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nMinKey$[ebp], xmm0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nMaxKey$[ebp], xmm0
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
push	OFFSET $SG96303
lea	ecx, DWORD PTR _zContext$[ebp]
push	ecx
push	100					
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _pCheck$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pBt$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+36]
mov	DWORD PTR _usableSize$[ebp], edx
cmp	DWORD PTR _iPage$[ebp], 0
jne	SHORT $LN52@checkTreeP
xor	eax, eax
jmp	$LN53@checkTreeP
mov	eax, DWORD PTR _zParentContext$[ebp]
push	eax
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkRef
add	esp, 12					
test	eax, eax
je	SHORT $LN51@checkTreeP
xor	eax, eax
jmp	$LN53@checkTreeP
push	0
lea	eax, DWORD PTR _pPage$[ebp]
push	eax
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN50@checkTreeP
mov	eax, DWORD PTR _rc$[ebp]
push	eax
push	OFFSET $SG96308
lea	ecx, DWORD PTR _zContext$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkAppendMsg
add	esp, 16					
xor	eax, eax
jmp	$LN53@checkTreeP
mov	eax, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_btreeInitPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN49@checkTreeP
mov	edx, DWORD PTR _rc$[ebp]
push	edx
push	OFFSET $SG96311
lea	eax, DWORD PTR _zContext$[ebp]
push	eax
mov	ecx, DWORD PTR _pCheck$[ebp]
push	ecx
call	_checkAppendMsg
add	esp, 16					
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_releasePage
add	esp, 4
xor	eax, eax
jmp	$LN53@checkTreeP
mov	DWORD PTR _depth$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN48@checkTreeP
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+16]
cmp	DWORD PTR _i$[ebp], edx
jge	$LN46@checkTreeP
mov	eax, DWORD PTR _pCheck$[ebp]
cmp	DWORD PTR [eax+16], 0
je	$LN46@checkTreeP
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
push	OFFSET $SG96318
lea	eax, DWORD PTR _zContext$[ebp]
push	eax
push	100					
call	_sqlite3_snprintf
add	esp, 20					
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _i$[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pCell$8[ebp], edx
lea	edx, DWORD PTR _info$1[ebp]
push	edx
mov	eax, DWORD PTR _pCell$8[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_btreeParseCellPtr
add	esp, 12					
mov	edx, DWORD PTR _info$1[ebp+12]
mov	DWORD PTR _sz$7[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+2]
test	ecx, ecx
jne	SHORT $LN45@checkTreeP
mov	edx, DWORD PTR _info$1[ebp]
add	edx, DWORD PTR _sz$7[ebp]
mov	DWORD PTR _sz$7[ebp], edx
jmp	$LN44@checkTreeP
cmp	DWORD PTR _i$[ebp], 0
jne	SHORT $LN43@checkTreeP
mov	eax, DWORD PTR _info$1[ebp]
mov	DWORD PTR _nMaxKey$[ebp], eax
mov	ecx, DWORD PTR _info$1[ebp+4]
mov	DWORD PTR _nMaxKey$[ebp+4], ecx
mov	edx, DWORD PTR _nMaxKey$[ebp]
mov	DWORD PTR _nMinKey$[ebp], edx
mov	eax, DWORD PTR _nMaxKey$[ebp+4]
mov	DWORD PTR _nMinKey$[ebp+4], eax
jmp	SHORT $LN44@checkTreeP
mov	ecx, DWORD PTR _info$1[ebp+4]
cmp	ecx, DWORD PTR _nMaxKey$[ebp+4]
jg	SHORT $LN41@checkTreeP
jl	SHORT $LN61@checkTreeP
mov	edx, DWORD PTR _info$1[ebp]
cmp	edx, DWORD PTR _nMaxKey$[ebp]
ja	SHORT $LN41@checkTreeP
mov	eax, DWORD PTR _nMaxKey$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nMaxKey$[ebp]
push	ecx
mov	edx, DWORD PTR _info$1[ebp+4]
push	edx
mov	eax, DWORD PTR _info$1[ebp]
push	eax
push	OFFSET $SG96325
lea	ecx, DWORD PTR _zContext$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkAppendMsg
add	esp, 28					
mov	eax, DWORD PTR _info$1[ebp]
mov	DWORD PTR _nMaxKey$[ebp], eax
mov	ecx, DWORD PTR _info$1[ebp+4]
mov	DWORD PTR _nMaxKey$[ebp+4], ecx
movzx	edx, WORD PTR _info$1[ebp+22]
cmp	DWORD PTR _sz$7[ebp], edx
jbe	$LN40@checkTreeP
movzx	eax, WORD PTR _info$1[ebp+24]
add	eax, DWORD PTR _pCell$8[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	ecx, DWORD PTR _pBt$[ebp]
add	edx, DWORD PTR [ecx+36]
cmp	eax, edx
ja	$LN40@checkTreeP
movzx	edx, WORD PTR _info$1[ebp+22]
mov	eax, DWORD PTR _sz$7[ebp]
sub	eax, edx
mov	ecx, DWORD PTR _usableSize$[ebp]
lea	eax, DWORD PTR [eax+ecx-5]
mov	ecx, DWORD PTR _usableSize$[ebp]
sub	ecx, 4
xor	edx, edx
div	ecx
mov	DWORD PTR _nPage$3[ebp], eax
movzx	edx, WORD PTR _info$1[ebp+24]
add	edx, DWORD PTR _pCell$8[ebp]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgnoOvfl$4[ebp], eax
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN39@checkTreeP
lea	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
push	3
mov	ecx, DWORD PTR _pgnoOvfl$4[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkPtrmap
add	esp, 20					
lea	eax, DWORD PTR _zContext$[ebp]
push	eax
mov	ecx, DWORD PTR _nPage$3[ebp]
push	ecx
mov	edx, DWORD PTR _pgnoOvfl$4[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkList
add	esp, 20					
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	$LN38@checkTreeP
mov	eax, DWORD PTR _pCell$8[ebp]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	SHORT $LN37@checkTreeP
lea	eax, DWORD PTR _zContext$[ebp]
push	eax
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
push	5
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkPtrmap
add	esp, 20					
cmp	DWORD PTR _i$[ebp], 0
jne	SHORT $LN55@checkTreeP
mov	DWORD PTR tv223[ebp], 0
jmp	SHORT $LN56@checkTreeP
lea	ecx, DWORD PTR _nMaxKey$[ebp]
mov	DWORD PTR tv223[ebp], ecx
mov	edx, DWORD PTR tv223[ebp]
push	edx
lea	eax, DWORD PTR _nMinKey$[ebp]
push	eax
lea	ecx, DWORD PTR _zContext$[ebp]
push	ecx
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkTreePage
add	esp, 20					
mov	DWORD PTR _d2$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN36@checkTreeP
mov	ecx, DWORD PTR _d2$[ebp]
cmp	ecx, DWORD PTR _depth$[ebp]
je	SHORT $LN36@checkTreeP
push	OFFSET $SG96335
lea	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 12					
mov	ecx, DWORD PTR _d2$[ebp]
mov	DWORD PTR _depth$[ebp], ecx
jmp	$LN47@checkTreeP
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
jne	$LN35@checkTreeP
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
lea	edx, DWORD PTR [ecx+edx+8]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
push	OFFSET $SG96337
lea	ecx, DWORD PTR _zContext$[ebp]
push	ecx
push	100					
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, BYTE PTR [edx+17]
test	eax, eax
je	SHORT $LN34@checkTreeP
lea	ecx, DWORD PTR _zContext$[ebp]
push	ecx
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
push	5
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pCheck$[ebp]
push	ecx
call	_checkPtrmap
add	esp, 20					
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+16]
test	eax, eax
jne	SHORT $LN57@checkTreeP
mov	DWORD PTR tv261[ebp], 1
jmp	SHORT $LN58@checkTreeP
mov	DWORD PTR tv261[ebp], 0
cmp	DWORD PTR tv261[ebp], 0
je	SHORT $LN59@checkTreeP
mov	DWORD PTR tv263[ebp], 0
jmp	SHORT $LN60@checkTreeP
lea	ecx, DWORD PTR _nMaxKey$[ebp]
mov	DWORD PTR tv263[ebp], ecx
mov	edx, DWORD PTR tv263[ebp]
push	edx
push	0
lea	eax, DWORD PTR _zContext$[ebp]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkTreePage
add	esp, 20					
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
je	$LN33@checkTreeP
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+2]
test	eax, eax
je	$LN33@checkTreeP
cmp	DWORD PTR _pnParentMinKey$[ebp], 0
je	$LN32@checkTreeP
cmp	DWORD PTR _pnParentMaxKey$[ebp], 0
jne	SHORT $LN31@checkTreeP
mov	ecx, DWORD PTR _pnParentMinKey$[ebp]
mov	DWORD PTR tv648[ebp], ecx
mov	edx, DWORD PTR tv648[ebp]
mov	eax, DWORD PTR _nMaxKey$[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jl	SHORT $LN30@checkTreeP
jg	SHORT $LN62@checkTreeP
mov	ecx, DWORD PTR tv648[ebp]
mov	edx, DWORD PTR _nMaxKey$[ebp]
cmp	edx, DWORD PTR [ecx]
jbe	SHORT $LN30@checkTreeP
mov	eax, DWORD PTR _pnParentMinKey$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
mov	eax, DWORD PTR _nMaxKey$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nMaxKey$[ebp]
push	ecx
push	OFFSET $SG96345
lea	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 28					
jmp	$LN29@checkTreeP
mov	ecx, DWORD PTR _pnParentMinKey$[ebp]
mov	DWORD PTR tv668[ebp], ecx
mov	edx, DWORD PTR tv668[ebp]
mov	eax, DWORD PTR _nMinKey$[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jg	SHORT $LN28@checkTreeP
jl	SHORT $LN63@checkTreeP
mov	ecx, DWORD PTR tv668[ebp]
mov	edx, DWORD PTR _nMinKey$[ebp]
cmp	edx, DWORD PTR [ecx]
ja	SHORT $LN28@checkTreeP
mov	eax, DWORD PTR _pnParentMinKey$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
mov	eax, DWORD PTR _nMinKey$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nMinKey$[ebp]
push	ecx
push	OFFSET $SG96348
lea	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 28					
mov	ecx, DWORD PTR _pnParentMaxKey$[ebp]
mov	DWORD PTR tv688[ebp], ecx
mov	edx, DWORD PTR tv688[ebp]
mov	eax, DWORD PTR _nMaxKey$[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jl	SHORT $LN27@checkTreeP
jg	SHORT $LN64@checkTreeP
mov	ecx, DWORD PTR tv688[ebp]
mov	edx, DWORD PTR _nMaxKey$[ebp]
cmp	edx, DWORD PTR [ecx]
jbe	SHORT $LN27@checkTreeP
mov	eax, DWORD PTR _pnParentMaxKey$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
mov	eax, DWORD PTR _nMaxKey$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nMaxKey$[ebp]
push	ecx
push	OFFSET $SG96350
lea	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 28					
mov	ecx, DWORD PTR _pnParentMinKey$[ebp]
mov	edx, DWORD PTR _nMaxKey$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _nMaxKey$[ebp+4]
mov	DWORD PTR [ecx+4], eax
jmp	SHORT $LN33@checkTreeP
cmp	DWORD PTR _pnParentMaxKey$[ebp], 0
je	SHORT $LN33@checkTreeP
mov	ecx, DWORD PTR _pnParentMaxKey$[ebp]
mov	DWORD PTR tv712[ebp], ecx
mov	edx, DWORD PTR tv712[ebp]
mov	eax, DWORD PTR _nMinKey$[ebp+4]
cmp	eax, DWORD PTR [edx+4]
jg	SHORT $LN33@checkTreeP
jl	SHORT $LN65@checkTreeP
mov	ecx, DWORD PTR tv712[ebp]
mov	edx, DWORD PTR _nMinKey$[ebp]
cmp	edx, DWORD PTR [ecx]
ja	SHORT $LN33@checkTreeP
mov	eax, DWORD PTR _pnParentMaxKey$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR [eax]
push	edx
mov	eax, DWORD PTR _nMinKey$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nMinKey$[ebp]
push	ecx
push	OFFSET $SG96354
lea	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 28					
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _data$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	DWORD PTR _hdr$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
call	_sqlite3PageMalloc
add	esp, 4
mov	DWORD PTR _hit$[ebp], eax
cmp	DWORD PTR _hit$[ebp], 0
jne	SHORT $LN23@checkTreeP
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	DWORD PTR [ecx+24], 1
jmp	$LN22@checkTreeP
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
sub	ecx, 1
and	ecx, 65535				
add	ecx, 1
mov	DWORD PTR _contentOffset$6[ebp], ecx
mov	eax, DWORD PTR _usableSize$[ebp]
sub	eax, DWORD PTR _contentOffset$6[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _hit$[ebp]
add	ecx, DWORD PTR _contentOffset$6[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _contentOffset$6[ebp]
push	edx
push	1
mov	eax, DWORD PTR _hit$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [edx+ecx+3]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [edx+ecx+3]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	DWORD PTR _nCell$[ebp], eax
mov	edx, DWORD PTR _hdr$[ebp]
add	edx, 12					
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+3]
shl	ecx, 2
sub	edx, ecx
mov	DWORD PTR _cellStart$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN21@checkTreeP
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nCell$[ebp]
jge	$LN19@checkTreeP
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _cellStart$[ebp]
lea	eax, DWORD PTR [edx+ecx*2]
add	eax, DWORD PTR _data$[ebp]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _cellStart$[ebp]
lea	ecx, DWORD PTR [edx+ecx*2]
add	ecx, DWORD PTR _data$[ebp]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	DWORD PTR _pc$9[ebp], eax
mov	DWORD PTR _size$5[ebp], 65536		
mov	edx, DWORD PTR _usableSize$[ebp]
sub	edx, 4
cmp	DWORD PTR _pc$9[ebp], edx
jg	SHORT $LN18@checkTreeP
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _pc$9[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_cellSizePtr
add	esp, 8
movzx	edx, ax
mov	DWORD PTR _size$5[ebp], edx
mov	eax, DWORD PTR _size$5[ebp]
mov	ecx, DWORD PTR _pc$9[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
cmp	edx, DWORD PTR _usableSize$[ebp]
jl	SHORT $LN17@checkTreeP
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
push	OFFSET $SG96369
push	0
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkAppendMsg
add	esp, 20					
jmp	SHORT $LN16@checkTreeP
mov	eax, DWORD PTR _size$5[ebp]
mov	ecx, DWORD PTR _pc$9[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
mov	DWORD PTR _j$10[ebp], edx
jmp	SHORT $LN15@checkTreeP
mov	eax, DWORD PTR _j$10[ebp]
sub	eax, 1
mov	DWORD PTR _j$10[ebp], eax
mov	ecx, DWORD PTR _j$10[ebp]
cmp	ecx, DWORD PTR _pc$9[ebp]
jl	SHORT $LN16@checkTreeP
mov	edx, DWORD PTR _hit$[ebp]
add	edx, DWORD PTR _j$10[ebp]
mov	al, BYTE PTR [edx]
add	al, 1
mov	ecx, DWORD PTR _hit$[ebp]
add	ecx, DWORD PTR _j$10[ebp]
mov	BYTE PTR [ecx], al
jmp	SHORT $LN14@checkTreeP
jmp	$LN20@checkTreeP
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+1]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 0
jle	$LN11@checkTreeP
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+eax+2]
mov	eax, 1
imul	ecx, eax, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [ecx+eax+2]
mov	ecx, 1
shl	ecx, 0
movzx	eax, BYTE PTR [eax+ecx]
or	edx, eax
mov	DWORD PTR _size$2[ebp], edx
mov	ecx, DWORD PTR _size$2[ebp]
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [edx+ecx-1]
mov	DWORD PTR _j$11[ebp], eax
jmp	SHORT $LN10@checkTreeP
mov	ecx, DWORD PTR _j$11[ebp]
sub	ecx, 1
mov	DWORD PTR _j$11[ebp], ecx
mov	edx, DWORD PTR _j$11[ebp]
cmp	edx, DWORD PTR _i$[ebp]
jl	SHORT $LN8@checkTreeP
mov	eax, DWORD PTR _hit$[ebp]
add	eax, DWORD PTR _j$11[ebp]
mov	cl, BYTE PTR [eax]
add	cl, 1
mov	edx, DWORD PTR _hit$[ebp]
add	edx, DWORD PTR _j$11[ebp]
mov	BYTE PTR [edx], cl
jmp	SHORT $LN9@checkTreeP
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _i$[ebp]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	DWORD PTR _j$11[ebp], eax
mov	edx, DWORD PTR _j$11[ebp]
mov	DWORD PTR _i$[ebp], edx
jmp	$LN12@checkTreeP
mov	DWORD PTR _cnt$[ebp], 0
mov	eax, DWORD PTR _cnt$[ebp]
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN7@checkTreeP
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _usableSize$[ebp]
jge	SHORT $LN5@checkTreeP
mov	eax, DWORD PTR _hit$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN4@checkTreeP
mov	edx, DWORD PTR _cnt$[ebp]
add	edx, 1
mov	DWORD PTR _cnt$[ebp], edx
jmp	SHORT $LN3@checkTreeP
mov	eax, DWORD PTR _hit$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 1
jle	SHORT $LN3@checkTreeP
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
push	OFFSET $SG96392
push	0
mov	ecx, DWORD PTR _pCheck$[ebp]
push	ecx
call	_checkAppendMsg
add	esp, 20					
jmp	SHORT $LN5@checkTreeP
jmp	SHORT $LN6@checkTreeP
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _hdr$[ebp]
movzx	eax, BYTE PTR [edx+7]
cmp	DWORD PTR _cnt$[ebp], eax
je	SHORT $LN22@checkTreeP
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _hdr$[ebp]
movzx	eax, BYTE PTR [edx+7]
push	eax
mov	ecx, DWORD PTR _cnt$[ebp]
push	ecx
push	OFFSET $SG96394
push	0
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkAppendMsg
add	esp, 24					
mov	eax, DWORD PTR _hit$[ebp]
push	eax
call	_sqlite3PageFree
add	esp, 4
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _depth$[ebp]
add	eax, 1
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_checkList PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _N$[ebp]
mov	DWORD PTR _expected$[ebp], eax
mov	ecx, DWORD PTR _iPage$[ebp]
mov	DWORD PTR _iFirst$[ebp], ecx
mov	edx, DWORD PTR _N$[ebp]
mov	DWORD PTR tv66[ebp], edx
mov	eax, DWORD PTR _N$[ebp]
sub	eax, 1
mov	DWORD PTR _N$[ebp], eax
cmp	DWORD PTR tv66[ebp], 0
jle	$LN16@checkList
mov	ecx, DWORD PTR _pCheck$[ebp]
cmp	DWORD PTR [ecx+16], 0
je	$LN16@checkList
cmp	DWORD PTR _iPage$[ebp], 1
jge	SHORT $LN13@checkList
mov	edx, DWORD PTR _iFirst$[ebp]
push	edx
mov	eax, DWORD PTR _expected$[ebp]
push	eax
mov	ecx, DWORD PTR _N$[ebp]
add	ecx, 1
push	ecx
push	OFFSET $SG96254
mov	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 24					
jmp	$LN16@checkList
mov	ecx, DWORD PTR _zContext$[ebp]
push	ecx
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkRef
add	esp, 12					
test	eax, eax
je	SHORT $LN12@checkList
jmp	$LN16@checkList
push	0
lea	ecx, DWORD PTR _pOvflPage$1[ebp]
push	ecx
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
test	eax, eax
je	SHORT $LN11@checkList
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
push	OFFSET $SG96258
mov	eax, DWORD PTR _zContext$[ebp]
push	eax
mov	ecx, DWORD PTR _pCheck$[ebp]
push	ecx
call	_checkAppendMsg
add	esp, 16					
jmp	$LN16@checkList
mov	edx, DWORD PTR _pOvflPage$1[ebp]
push	edx
call	_sqlite3PagerGetData
add	esp, 4
mov	DWORD PTR _pOvflData$4[ebp], eax
cmp	DWORD PTR _isFreeList$[ebp], 0
je	$LN10@checkList
mov	eax, 1
shl	eax, 2
add	eax, DWORD PTR _pOvflData$4[ebp]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _n$3[ebp], eax
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [ecx]
movzx	eax, BYTE PTR [edx+17]
test	eax, eax
je	SHORT $LN9@checkList
mov	ecx, DWORD PTR _zContext$[ebp]
push	ecx
push	0
push	2
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkPtrmap
add	esp, 20					
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+36]
cdq
and	edx, 3
add	eax, edx
sar	eax, 2
sub	eax, 2
cmp	DWORD PTR _n$3[ebp], eax
jle	SHORT $LN8@checkList
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
push	OFFSET $SG96265
mov	ecx, DWORD PTR _zContext$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkAppendMsg
add	esp, 16					
mov	eax, DWORD PTR _N$[ebp]
sub	eax, 1
mov	DWORD PTR _N$[ebp], eax
jmp	SHORT $LN7@checkList
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@checkList
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _n$3[ebp]
jge	SHORT $LN4@checkList
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pOvflData$4[ebp]
lea	edx, DWORD PTR [ecx+eax*4+8]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iFreePage$2[ebp], eax
mov	eax, DWORD PTR _pCheck$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	SHORT $LN3@checkList
mov	eax, DWORD PTR _zContext$[ebp]
push	eax
push	0
push	2
mov	ecx, DWORD PTR _iFreePage$2[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkPtrmap
add	esp, 20					
mov	eax, DWORD PTR _zContext$[ebp]
push	eax
mov	ecx, DWORD PTR _iFreePage$2[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkRef
add	esp, 12					
jmp	SHORT $LN5@checkList
mov	eax, DWORD PTR _N$[ebp]
sub	eax, DWORD PTR _n$3[ebp]
mov	DWORD PTR _N$[ebp], eax
jmp	SHORT $LN2@checkList
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [ecx]
movzx	eax, BYTE PTR [edx+17]
test	eax, eax
je	SHORT $LN2@checkList
cmp	DWORD PTR _N$[ebp], 0
jle	SHORT $LN2@checkList
mov	ecx, DWORD PTR _pOvflData$4[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _i$[ebp], eax
mov	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
push	4
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkPtrmap
add	esp, 20					
mov	eax, DWORD PTR _pOvflData$4[ebp]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iPage$[ebp], eax
mov	ecx, DWORD PTR _pOvflPage$1[ebp]
push	ecx
call	_sqlite3PagerUnref
add	esp, 4
jmp	$LN15@checkList
mov	esp, ebp
pop	ebp
ret	0
ENDP
_checkPtrmap PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
lea	eax, DWORD PTR _iPtrmapParent$[ebp]
push	eax
lea	ecx, DWORD PTR _ePtrmapType$[ebp]
push	ecx
mov	edx, DWORD PTR _iChild$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_ptrmapGet
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@checkPtrma
cmp	DWORD PTR _rc$[ebp], 7
je	SHORT $LN3@checkPtrma
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN4@checkPtrma
mov	edx, DWORD PTR _pCheck$[ebp]
mov	DWORD PTR [edx+24], 1
mov	eax, DWORD PTR _iChild$[ebp]
push	eax
push	OFFSET $SG96229
mov	ecx, DWORD PTR _zContext$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_checkAppendMsg
add	esp, 16					
jmp	SHORT $LN6@checkPtrma
movzx	eax, BYTE PTR _ePtrmapType$[ebp]
movzx	ecx, BYTE PTR _eType$[ebp]
cmp	eax, ecx
jne	SHORT $LN1@checkPtrma
mov	edx, DWORD PTR _iPtrmapParent$[ebp]
cmp	edx, DWORD PTR _iParent$[ebp]
je	SHORT $LN6@checkPtrma
mov	eax, DWORD PTR _iPtrmapParent$[ebp]
push	eax
movzx	ecx, BYTE PTR _ePtrmapType$[ebp]
push	ecx
mov	edx, DWORD PTR _iParent$[ebp]
push	edx
movzx	eax, BYTE PTR _eType$[ebp]
push	eax
mov	ecx, DWORD PTR _iChild$[ebp]
push	ecx
push	OFFSET $SG96232
mov	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 32					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_checkRef PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _iPage$[ebp], 0
jne	SHORT $LN3@checkRef
mov	eax, 1
jmp	SHORT $LN4@checkRef
mov	eax, DWORD PTR _pCheck$[ebp]
mov	ecx, DWORD PTR _iPage$[ebp]
cmp	ecx, DWORD PTR [eax+12]
jbe	SHORT $LN2@checkRef
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
push	OFFSET $SG96208
mov	eax, DWORD PTR _zContext$[ebp]
push	eax
mov	ecx, DWORD PTR _pCheck$[ebp]
push	ecx
call	_checkAppendMsg
add	esp, 16					
mov	eax, 1
jmp	SHORT $LN4@checkRef
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_getPageReferenced
add	esp, 8
test	eax, eax
je	SHORT $LN1@checkRef
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
push	OFFSET $SG96210
mov	edx, DWORD PTR _zContext$[ebp]
push	edx
mov	eax, DWORD PTR _pCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 16					
mov	eax, 1
jmp	SHORT $LN4@checkRef
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
push	edx
call	_setPageReferenced
add	esp, 8
xor	eax, eax
pop	ebp
ret	0
ENDP
_setPageReferenced PROC
push	ebp
mov	ebp, esp
push	esi
mov	eax, DWORD PTR _iPg$[ebp]
shr	eax, 3
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	ecx, DWORD PTR _iPg$[ebp]
and	ecx, 7
mov	esi, 1
shl	esi, cl
movzx	eax, BYTE PTR [edx+eax]
or	eax, esi
mov	ecx, DWORD PTR _iPg$[ebp]
shr	ecx, 3
mov	edx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [edx+8]
mov	BYTE PTR [edx+ecx], al
pop	esi
pop	ebp
ret	0
ENDP
_getPageReferenced PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iPg$[ebp]
shr	eax, 3
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [ecx+8]
movzx	eax, BYTE PTR [edx+eax]
mov	ecx, DWORD PTR _iPg$[ebp]
and	ecx, 7
mov	edx, 1
shl	edx, cl
and	eax, edx
pop	ebp
ret	0
ENDP
_checkAppendMsg PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCheck$[ebp]
cmp	DWORD PTR [eax+16], 0
jne	SHORT $LN4@checkAppen
jmp	$LN5@checkAppen
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [ecx+16]
sub	edx, 1
mov	eax, DWORD PTR _pCheck$[ebp]
mov	DWORD PTR [eax+16], edx
mov	ecx, DWORD PTR _pCheck$[ebp]
mov	edx, DWORD PTR [ecx+20]
add	edx, 1
mov	eax, DWORD PTR _pCheck$[ebp]
mov	DWORD PTR [eax+20], edx
lea	ecx, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _pCheck$[ebp]
cmp	DWORD PTR [edx+40], 0
je	SHORT $LN3@checkAppen
push	1
push	OFFSET $SG96180
mov	eax, DWORD PTR _pCheck$[ebp]
add	eax, 28					
push	eax
call	_sqlite3StrAccumAppend
add	esp, 12					
cmp	DWORD PTR _zMsg1$[ebp], 0
je	SHORT $LN2@checkAppen
mov	ecx, DWORD PTR _zMsg1$[ebp]
push	ecx
mov	edx, DWORD PTR _pCheck$[ebp]
add	edx, 28					
push	edx
call	_sqlite3StrAccumAppendAll
add	esp, 8
mov	eax, DWORD PTR _ap$[ebp]
push	eax
mov	ecx, DWORD PTR _zFormat$[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _pCheck$[ebp]
add	edx, 28					
push	edx
call	_sqlite3VXPrintf
add	esp, 16					
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _pCheck$[ebp]
movzx	ecx, BYTE PTR [eax+53]
cmp	ecx, 1
jne	SHORT $LN5@checkAppen
mov	edx, DWORD PTR _pCheck$[ebp]
mov	DWORD PTR [edx+24], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeDropTable PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _pPage$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN16@btreeDropT
mov	eax, 262				
jmp	$LN17@btreeDropT
push	0
lea	eax, DWORD PTR _pPage$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@btreeDropT
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@btreeDropT
push	0
mov	eax, DWORD PTR _iTable$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeClearTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@btreeDropT
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@btreeDropT
mov	eax, DWORD PTR _piMoved$[ebp]
mov	DWORD PTR [eax], 0
cmp	DWORD PTR _iTable$[ebp], 1
jbe	$LN13@btreeDropT
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	$LN12@btreeDropT
lea	eax, DWORD PTR _maxRootPgno$2[ebp]
push	eax
push	4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeGetMeta
add	esp, 12					
mov	edx, DWORD PTR _iTable$[ebp]
cmp	edx, DWORD PTR _maxRootPgno$2[ebp]
jne	SHORT $LN11@btreeDropT
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_freePage
add	esp, 8
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@btreeDropT
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@btreeDropT
jmp	$LN9@btreeDropT
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_releasePage
add	esp, 4
push	0
lea	ecx, DWORD PTR _pMove$1[ebp]
push	ecx
mov	edx, DWORD PTR _maxRootPgno$2[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@btreeDropT
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@btreeDropT
push	0
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
push	0
push	1
mov	edx, DWORD PTR _pMove$1[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_relocatePage
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pMove$1[ebp]
push	ecx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@btreeDropT
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@btreeDropT
mov	DWORD PTR _pMove$1[ebp], 0
push	0
lea	edx, DWORD PTR _pMove$1[ebp]
push	edx
mov	eax, DWORD PTR _maxRootPgno$2[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pMove$1[ebp]
push	eax
call	_freePage
add	esp, 8
mov	ecx, DWORD PTR _pMove$1[ebp]
push	ecx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@btreeDropT
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@btreeDropT
mov	edx, DWORD PTR _piMoved$[ebp]
mov	eax, DWORD PTR _maxRootPgno$2[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _maxRootPgno$2[ebp]
sub	ecx, 1
mov	DWORD PTR _maxRootPgno$2[ebp], ecx
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _maxRootPgno$2[ebp], eax
je	SHORT $LN3@btreeDropT
mov	edx, DWORD PTR _maxRootPgno$2[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _maxRootPgno$2[ebp]
jne	SHORT $LN4@btreeDropT
mov	ecx, DWORD PTR _maxRootPgno$2[ebp]
sub	ecx, 1
mov	DWORD PTR _maxRootPgno$2[ebp], ecx
jmp	SHORT $LN5@btreeDropT
mov	edx, DWORD PTR _maxRootPgno$2[ebp]
push	edx
push	4
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeUpdateMeta
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN2@btreeDropT
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_freePage
add	esp, 8
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_releasePage
add	esp, 4
jmp	SHORT $LN1@btreeDropT
push	9
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_zeroPage
add	esp, 8
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_clearDatabasePage PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
push	esi
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreePagecount
add	esp, 4
cmp	DWORD PTR _pgno$[ebp], eax
jbe	SHORT $LN15@clearDatab
push	58551					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN16@clearDatab
push	0
lea	ecx, DWORD PTR _pPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_getAndInitPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@clearDatab
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@clearDatab
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	DWORD PTR _hdr$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN13@clearDatab
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+16]
cmp	DWORD PTR _i$[ebp], edx
jge	$LN11@clearDatab
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+18]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [eax+edx*2]
mov	edx, 1
imul	edx, edx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	edx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [edx+64]
mov	esi, DWORD PTR _i$[ebp]
lea	edx, DWORD PTR [edx+esi*2]
mov	esi, 1
shl	esi, 0
movzx	edx, BYTE PTR [edx+esi]
or	eax, edx
and	ecx, eax
mov	eax, DWORD PTR _pPage$[ebp]
add	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _pCell$[ebp], ecx
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	SHORT $LN10@clearDatab
mov	eax, DWORD PTR _pnChange$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pCell$[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_clearDatabasePage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@clearDatab
jmp	$cleardatabasepage_out$18
mov	eax, DWORD PTR _pCell$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_clearCell
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@clearDatab
jmp	$cleardatabasepage_out$18
jmp	$LN12@clearDatab
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
jne	SHORT $LN7@clearDatab
mov	ecx, DWORD PTR _pnChange$[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR _hdr$[ebp]
lea	edx, DWORD PTR [eax+ecx+8]
push	edx
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_clearDatabasePage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@clearDatab
jmp	SHORT $cleardatabasepage_out$18
jmp	SHORT $LN5@clearDatab
cmp	DWORD PTR _pnChange$[ebp], 0
je	SHORT $LN5@clearDatab
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+16]
mov	eax, DWORD PTR _pnChange$[ebp]
add	edx, DWORD PTR [eax]
mov	ecx, DWORD PTR _pnChange$[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _freePageFlag$[ebp], 0
je	SHORT $LN3@clearDatab
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_freePage
add	esp, 8
jmp	SHORT $cleardatabasepage_out$18
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $cleardatabasepage_out$18
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR _hdr$[ebp]
movzx	eax, BYTE PTR [ecx+edx]
or	eax, 8
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_zeroPage
add	esp, 8
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeCreateTable PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, BYTE PTR [edx+17]
test	eax, eax
je	$LN21@btreeCreat
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_invalidateAllOverflowCache
add	esp, 4
lea	edx, DWORD PTR _pgnoRoot$[ebp]
push	edx
push	4
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeGetMeta
add	esp, 12					
mov	ecx, DWORD PTR _pgnoRoot$[ebp]
add	ecx, 1
mov	DWORD PTR _pgnoRoot$[ebp], ecx
mov	edx, DWORD PTR _pgnoRoot$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPageno
add	esp, 8
cmp	DWORD PTR _pgnoRoot$[ebp], eax
je	SHORT $LN18@btreeCreat
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _pgnoRoot$[ebp], eax
jne	SHORT $LN19@btreeCreat
mov	edx, DWORD PTR _pgnoRoot$[ebp]
add	edx, 1
mov	DWORD PTR _pgnoRoot$[ebp], edx
jmp	SHORT $LN20@btreeCreat
push	1
mov	eax, DWORD PTR _pgnoRoot$[ebp]
push	eax
lea	ecx, DWORD PTR _pgnoMove$3[ebp]
push	ecx
lea	edx, DWORD PTR _pPageMove$1[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN17@btreeCreat
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
mov	ecx, DWORD PTR _pgnoMove$3[ebp]
cmp	ecx, DWORD PTR _pgnoRoot$[ebp]
je	$LN16@btreeCreat
mov	BYTE PTR _eType$4[ebp], 0
mov	DWORD PTR _iPtrPage$2[ebp], 0
push	0
push	0
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_saveAllCursors
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPageMove$1[ebp]
push	eax
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@btreeCreat
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
push	0
lea	ecx, DWORD PTR _pRoot$[ebp]
push	ecx
mov	edx, DWORD PTR _pgnoRoot$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@btreeCreat
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
lea	ecx, DWORD PTR _iPtrPage$2[ebp]
push	ecx
lea	edx, DWORD PTR _eType$4[ebp]
push	edx
mov	eax, DWORD PTR _pgnoRoot$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapGet
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
movzx	edx, BYTE PTR _eType$4[ebp]
cmp	edx, 1
je	SHORT $LN12@btreeCreat
movzx	eax, BYTE PTR _eType$4[ebp]
cmp	eax, 2
jne	SHORT $LN13@btreeCreat
push	58462					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@btreeCreat
mov	ecx, DWORD PTR _pRoot$[ebp]
push	ecx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
push	0
mov	edx, DWORD PTR _pgnoMove$3[ebp]
push	edx
mov	eax, DWORD PTR _iPtrPage$2[ebp]
push	eax
movzx	ecx, BYTE PTR _eType$4[ebp]
push	ecx
mov	edx, DWORD PTR _pRoot$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_relocatePage
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pRoot$[ebp]
push	ecx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@btreeCreat
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
push	0
lea	edx, DWORD PTR _pRoot$[ebp]
push	edx
mov	eax, DWORD PTR _pgnoRoot$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@btreeCreat
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
mov	edx, DWORD PTR _pRoot$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@btreeCreat
mov	ecx, DWORD PTR _pRoot$[ebp]
push	ecx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
jmp	SHORT $LN7@btreeCreat
mov	edx, DWORD PTR _pPageMove$1[ebp]
mov	DWORD PTR _pRoot$[ebp], edx
lea	eax, DWORD PTR _rc$[ebp]
push	eax
push	0
push	1
mov	ecx, DWORD PTR _pgnoRoot$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapPut
add	esp, 20					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@btreeCreat
mov	eax, DWORD PTR _pRoot$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@btreeCreat
mov	ecx, DWORD PTR _pgnoRoot$[ebp]
push	ecx
push	4
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeUpdateMeta
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@btreeCreat
mov	eax, DWORD PTR _pRoot$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN22@btreeCreat
jmp	SHORT $LN4@btreeCreat
push	0
push	1
lea	ecx, DWORD PTR _pgnoRoot$[ebp]
push	ecx
lea	edx, DWORD PTR _pRoot$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@btreeCreat
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN22@btreeCreat
mov	ecx, DWORD PTR _createTabFlags$[ebp]
and	ecx, 1
je	SHORT $LN2@btreeCreat
mov	DWORD PTR _ptfFlags$[ebp], 13		
jmp	SHORT $LN1@btreeCreat
mov	DWORD PTR _ptfFlags$[ebp], 10		
mov	edx, DWORD PTR _ptfFlags$[ebp]
push	edx
mov	eax, DWORD PTR _pRoot$[ebp]
push	eax
call	_zeroPage
add	esp, 8
mov	ecx, DWORD PTR _pRoot$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerUnref
add	esp, 4
mov	eax, DWORD PTR _piTable$[ebp]
mov	ecx, DWORD PTR _pgnoRoot$[ebp]
mov	DWORD PTR [eax], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_balance PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [ecx+36]
shl	eax, 1
xor	edx, edx
mov	ecx, 3
div	ecx
mov	DWORD PTR _nMin$[ebp], eax
mov	DWORD PTR _pFree$[ebp], 0
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	DWORD PTR _iPage$3[ebp], eax
mov	ecx, DWORD PTR _iPage$3[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$5[ebp], eax
cmp	DWORD PTR _iPage$3[ebp], 0
jne	SHORT $LN12@balance
mov	ecx, DWORD PTR _pPage$5[ebp]
movzx	edx, BYTE PTR [ecx+1]
test	edx, edx
je	SHORT $LN11@balance
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pCur$[ebp]
lea	edx, DWORD PTR [ecx+eax+128]
push	edx
mov	eax, DWORD PTR _pPage$5[ebp]
push	eax
call	_balance_deeper
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@balance
mov	ecx, 1
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+84], cx
mov	eax, 2
imul	ecx, eax, 0
xor	edx, edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+ecx+86], dx
mov	ecx, 2
shl	ecx, 0
xor	edx, edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+ecx+86], dx
jmp	SHORT $LN9@balance
jmp	$LN13@balance
jmp	$LN14@balance
mov	ecx, DWORD PTR _pPage$5[ebp]
movzx	edx, BYTE PTR [ecx+1]
test	edx, edx
jne	SHORT $LN7@balance
mov	eax, DWORD PTR _pPage$5[ebp]
movzx	ecx, WORD PTR [eax+14]
cmp	ecx, DWORD PTR _nMin$[ebp]
jg	SHORT $LN7@balance
jmp	$LN13@balance
jmp	$LN14@balance
mov	edx, DWORD PTR _iPage$3[ebp]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+124]
mov	DWORD PTR _pParent$4[ebp], ecx
mov	edx, DWORD PTR _iPage$3[ebp]
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+edx*2+84]
mov	DWORD PTR _iIdx$2[ebp], ecx
mov	edx, DWORD PTR _pParent$4[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN5@balance
mov	ecx, DWORD PTR _pPage$5[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
je	SHORT $LN4@balance
mov	eax, DWORD PTR _pPage$5[ebp]
movzx	ecx, BYTE PTR [eax+1]
cmp	ecx, 1
jne	SHORT $LN4@balance
mov	edx, 2
imul	eax, edx, 0
mov	ecx, DWORD PTR _pPage$5[ebp]
movzx	edx, WORD PTR [ecx+eax+20]
mov	eax, DWORD PTR _pPage$5[ebp]
movzx	ecx, WORD PTR [eax+16]
cmp	edx, ecx
jne	SHORT $LN4@balance
mov	edx, DWORD PTR _pParent$4[ebp]
cmp	DWORD PTR [edx+72], 1
je	SHORT $LN4@balance
mov	eax, DWORD PTR _pParent$4[ebp]
movzx	ecx, WORD PTR [eax+16]
cmp	ecx, DWORD PTR _iIdx$2[ebp]
jne	SHORT $LN4@balance
lea	edx, DWORD PTR _aBalanceQuickSpace$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$5[ebp]
push	eax
mov	ecx, DWORD PTR _pParent$4[ebp]
push	ecx
call	_balance_quick
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN5@balance
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+32]
push	ecx
call	_sqlite3PageMalloc
add	esp, 4
mov	DWORD PTR _pSpace$1[ebp], eax
cmp	DWORD PTR _iPage$3[ebp], 1
jne	SHORT $LN18@balance
mov	DWORD PTR tv173[ebp], 1
jmp	SHORT $LN19@balance
mov	DWORD PTR tv173[ebp], 0
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+82]
push	eax
mov	ecx, DWORD PTR tv173[ebp]
push	ecx
mov	edx, DWORD PTR _pSpace$1[ebp]
push	edx
mov	eax, DWORD PTR _iIdx$2[ebp]
push	eax
mov	ecx, DWORD PTR _pParent$4[ebp]
push	ecx
call	_balance_nonroot
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _pFree$[ebp], 0
je	SHORT $LN2@balance
mov	edx, DWORD PTR _pFree$[ebp]
push	edx
call	_sqlite3PageFree
add	esp, 4
mov	eax, DWORD PTR _pSpace$1[ebp]
mov	DWORD PTR _pFree$[ebp], eax
mov	ecx, DWORD PTR _pPage$5[ebp]
mov	BYTE PTR [ecx+1], 0
mov	edx, DWORD PTR _pPage$5[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _pCur$[ebp]
mov	cx, WORD PTR [eax+84]
sub	cx, 1
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+84], cx
cmp	DWORD PTR _rc$[ebp], 0
je	$LN15@balance
cmp	DWORD PTR _pFree$[ebp], 0
je	SHORT $LN1@balance
mov	eax, DWORD PTR _pFree$[ebp]
push	eax
call	_sqlite3PageFree
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_balance_deeper PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _pChild$[ebp], 0
mov	DWORD PTR _pgnoChild$[ebp], 0
mov	eax, DWORD PTR _pRoot$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pRoot$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@balance_de
push	0
mov	ecx, DWORD PTR _pRoot$[ebp]
mov	edx, DWORD PTR [ecx+72]
push	edx
lea	eax, DWORD PTR _pgnoChild$[ebp]
push	eax
lea	ecx, DWORD PTR _pChild$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pChild$[ebp]
push	ecx
mov	edx, DWORD PTR _pRoot$[ebp]
push	edx
call	_copyNodeContent
add	esp, 12					
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN3@balance_de
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pRoot$[ebp]
mov	ecx, DWORD PTR [eax+72]
push	ecx
push	5
mov	edx, DWORD PTR _pgnoChild$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPut
add	esp, 20					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@balance_de
mov	ecx, DWORD PTR _ppChild$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _pChild$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN4@balance_de
mov	eax, DWORD PTR _pRoot$[ebp]
movzx	ecx, BYTE PTR [eax+1]
shl	ecx, 1
push	ecx
mov	edx, DWORD PTR _pRoot$[ebp]
add	edx, 20					
push	edx
mov	eax, DWORD PTR _pChild$[ebp]
add	eax, 20					
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pRoot$[ebp]
movzx	edx, BYTE PTR [ecx+1]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _pRoot$[ebp]
add	eax, 32					
push	eax
mov	ecx, DWORD PTR _pChild$[ebp]
add	ecx, 32					
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pChild$[ebp]
mov	eax, DWORD PTR _pRoot$[ebp]
mov	cl, BYTE PTR [eax+1]
mov	BYTE PTR [edx+1], cl
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _pChild$[ebp]
mov	edx, DWORD PTR [ecx+56]
movzx	eax, BYTE PTR [edx+eax]
and	eax, -9					
push	eax
mov	ecx, DWORD PTR _pRoot$[ebp]
push	ecx
call	_zeroPage
add	esp, 8
mov	edx, DWORD PTR _pgnoChild$[ebp]
push	edx
mov	eax, DWORD PTR _pRoot$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	edx, DWORD PTR _pRoot$[ebp]
mov	eax, DWORD PTR [edx+56]
lea	ecx, DWORD PTR [eax+ecx+8]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _ppChild$[ebp]
mov	eax, DWORD PTR _pChild$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_balance_nonroot PROC
push	ebp
mov	ebp, esp
sub	esp, 360				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
mov	DWORD PTR _nCell$[ebp], 0
mov	DWORD PTR _nMaxCells$[ebp], 0
mov	DWORD PTR _nNew$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _iSpace1$[ebp], 0
mov	DWORD PTR _iOvflSpace$[ebp], 0
mov	DWORD PTR _apCell$[ebp], 0
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pBt$[ebp], ecx
cmp	DWORD PTR _aOvflSpace$[ebp], 0
jne	SHORT $LN105@balance_no
mov	eax, 7
jmp	$LN106@balance_no
mov	edx, DWORD PTR _pParent$[ebp]
movzx	eax, BYTE PTR [edx+1]
mov	ecx, DWORD PTR _pParent$[ebp]
movzx	edx, WORD PTR [ecx+16]
add	eax, edx
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 2
jge	SHORT $LN104@balance_no
mov	DWORD PTR _nxDiv$[ebp], 0
jmp	SHORT $LN103@balance_no
cmp	DWORD PTR _iParentIdx$[ebp], 0
jne	SHORT $LN102@balance_no
mov	DWORD PTR _nxDiv$[ebp], 0
jmp	SHORT $LN101@balance_no
mov	eax, DWORD PTR _iParentIdx$[ebp]
cmp	eax, DWORD PTR _i$[ebp]
jne	SHORT $LN100@balance_no
mov	ecx, DWORD PTR _bBulk$[ebp]
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [edx+ecx-2]
mov	DWORD PTR _nxDiv$[ebp], eax
jmp	SHORT $LN101@balance_no
mov	ecx, DWORD PTR _iParentIdx$[ebp]
sub	ecx, 1
mov	DWORD PTR _nxDiv$[ebp], ecx
mov	edx, 2
sub	edx, DWORD PTR _bBulk$[ebp]
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _nOld$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR _nxDiv$[ebp]
mov	edx, DWORD PTR _pParent$[ebp]
movzx	eax, BYTE PTR [edx+1]
sub	ecx, eax
mov	edx, DWORD PTR _pParent$[ebp]
movzx	eax, WORD PTR [edx+16]
cmp	ecx, eax
jne	SHORT $LN98@balance_no
mov	ecx, DWORD PTR _pParent$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+56]
lea	edx, DWORD PTR [ecx+edx+8]
mov	DWORD PTR _pRight$[ebp], edx
jmp	SHORT $LN97@balance_no
mov	eax, DWORD PTR _pParent$[ebp]
movzx	ecx, WORD PTR [eax+18]
mov	edx, DWORD PTR _i$[ebp]
add	edx, DWORD PTR _nxDiv$[ebp]
mov	eax, DWORD PTR _pParent$[ebp]
movzx	eax, BYTE PTR [eax+1]
sub	edx, eax
mov	eax, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [eax+64]
lea	edx, DWORD PTR [eax+edx*2]
mov	eax, 1
imul	eax, eax, 0
movzx	edx, BYTE PTR [edx+eax]
shl	edx, 8
mov	eax, DWORD PTR _i$[ebp]
add	eax, DWORD PTR _nxDiv$[ebp]
mov	esi, DWORD PTR _pParent$[ebp]
movzx	esi, BYTE PTR [esi+1]
sub	eax, esi
mov	esi, DWORD PTR _pParent$[ebp]
mov	esi, DWORD PTR [esi+64]
lea	eax, DWORD PTR [esi+eax*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	edx, eax
and	ecx, edx
mov	edx, DWORD PTR _pParent$[ebp]
add	ecx, DWORD PTR [edx+56]
mov	DWORD PTR _pRight$[ebp], ecx
mov	eax, DWORD PTR _pRight$[ebp]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
mov	ecx, 1
test	ecx, ecx
je	$LN95@balance_no
push	0
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR _apOld$[ebp+edx*4]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_getAndInitPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN94@balance_no
mov	eax, DWORD PTR _i$[ebp]
lea	ecx, DWORD PTR [eax*4+4]
push	ecx
push	0
lea	edx, DWORD PTR _apOld$[ebp]
push	edx
call	_memset
add	esp, 12					
jmp	$balance_cleanup$118
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _apOld$[ebp+eax*4]
movzx	edx, WORD PTR [ecx+16]
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _apOld$[ebp+eax*4]
movzx	eax, BYTE PTR [ecx+1]
add	eax, DWORD PTR _nMaxCells$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	DWORD PTR _nMaxCells$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR tv182[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR tv182[ebp], 0
jne	SHORT $LN93@balance_no
jmp	$LN95@balance_no
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR _nxDiv$[ebp]
mov	edx, 2
imul	eax, edx, 0
mov	edx, DWORD PTR _pParent$[ebp]
movzx	eax, WORD PTR [edx+eax+20]
cmp	ecx, eax
jne	SHORT $LN92@balance_no
mov	ecx, DWORD PTR _pParent$[ebp]
movzx	edx, BYTE PTR [ecx+1]
test	edx, edx
je	SHORT $LN92@balance_no
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+ecx+32]
mov	DWORD PTR _apDiv$[ebp+edx*4], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apDiv$[ebp+edx*4]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apDiv$[ebp+ecx*4]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
push	eax
call	_cellSizePtr
add	esp, 8
movzx	ecx, ax
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR _szNew$[ebp+edx*4], ecx
mov	eax, DWORD PTR _pParent$[ebp]
mov	BYTE PTR [eax+1], 0
jmp	$LN91@balance_no
mov	ecx, DWORD PTR _pParent$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _i$[ebp]
add	eax, DWORD PTR _nxDiv$[ebp]
mov	ecx, DWORD PTR _pParent$[ebp]
movzx	ecx, BYTE PTR [ecx+1]
sub	eax, ecx
mov	ecx, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [ecx+64]
lea	eax, DWORD PTR [ecx+eax*2]
mov	ecx, 1
imul	ecx, ecx, 0
movzx	eax, BYTE PTR [eax+ecx]
shl	eax, 8
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR _nxDiv$[ebp]
mov	esi, DWORD PTR _pParent$[ebp]
movzx	esi, BYTE PTR [esi+1]
sub	ecx, esi
mov	esi, DWORD PTR _pParent$[ebp]
mov	esi, DWORD PTR [esi+64]
lea	ecx, DWORD PTR [esi+ecx*2]
mov	esi, 1
shl	esi, 0
movzx	ecx, BYTE PTR [ecx+esi]
or	eax, ecx
and	edx, eax
mov	eax, DWORD PTR _pParent$[ebp]
add	edx, DWORD PTR [eax+56]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _apDiv$[ebp+ecx*4], edx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apDiv$[ebp+edx*4]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apDiv$[ebp+ecx*4]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
push	eax
call	_cellSizePtr
add	esp, 8
movzx	ecx, ax
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR _szNew$[ebp+edx*4], ecx
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 4
je	$LN90@balance_no
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR _apDiv$[ebp+edx*4]
sub	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _iOff$9[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _iOff$9[ebp]
add	eax, DWORD PTR _szNew$[ebp+edx*4]
mov	ecx, DWORD PTR _pBt$[ebp]
cmp	eax, DWORD PTR [ecx+36]
jle	SHORT $LN89@balance_no
push	57387					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [edx*4+4]
push	eax
push	0
lea	ecx, DWORD PTR _apOld$[ebp]
push	ecx
call	_memset
add	esp, 12					
jmp	$balance_cleanup$118
jmp	SHORT $LN90@balance_no
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _szNew$[ebp+edx*4]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apDiv$[ebp+ecx*4]
push	edx
mov	eax, DWORD PTR _aOvflSpace$[ebp]
add	eax, DWORD PTR _iOff$9[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR _apDiv$[ebp+ecx*4]
sub	eax, DWORD PTR [edx+56]
add	eax, DWORD PTR _aOvflSpace$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _apDiv$[ebp+ecx*4], eax
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _szNew$[ebp+eax*4]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
add	edx, DWORD PTR _nxDiv$[ebp]
mov	eax, DWORD PTR _pParent$[ebp]
movzx	ecx, BYTE PTR [eax+1]
sub	edx, ecx
push	edx
mov	edx, DWORD PTR _pParent$[ebp]
push	edx
call	_dropCell
add	esp, 16					
jmp	$LN96@balance_no
mov	eax, DWORD PTR _nMaxCells$[ebp]
add	eax, 3
and	eax, -4					
mov	DWORD PTR _nMaxCells$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+32]
add	edx, 80					
mov	DWORD PTR _k$[ebp], edx
mov	eax, DWORD PTR _nMaxCells$[ebp]
shl	eax, 1
mov	ecx, DWORD PTR _nMaxCells$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	eax, DWORD PTR _pBt$[ebp]
add	edx, DWORD PTR [eax+32]
mov	ecx, DWORD PTR _k$[ebp]
imul	ecx, DWORD PTR _nOld$[ebp]
add	edx, ecx
mov	DWORD PTR _szScratch$[ebp], edx
mov	edx, DWORD PTR _szScratch$[ebp]
push	edx
call	_sqlite3ScratchMalloc
add	esp, 4
mov	DWORD PTR _apCell$[ebp], eax
cmp	DWORD PTR _apCell$[ebp], 0
jne	SHORT $LN87@balance_no
mov	DWORD PTR _rc$[ebp], 7
jmp	$balance_cleanup$118
mov	eax, DWORD PTR _nMaxCells$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
lea	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _szCell$[ebp], edx
mov	eax, DWORD PTR _nMaxCells$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
lea	edx, DWORD PTR [ecx+eax*2]
mov	DWORD PTR _aSpace1$[ebp], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _apOld$[ebp+ecx]
movzx	eax, BYTE PTR [edx+3]
shl	eax, 2
mov	WORD PTR _leafCorrection$[ebp], ax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _apOld$[ebp+edx]
movzx	ecx, BYTE PTR [eax+4]
mov	DWORD PTR _leafData$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN86@balance_no
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nOld$[ebp]
jge	$LN84@balance_no
mov	ecx, DWORD PTR _k$[ebp]
imul	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+32]
add	eax, ecx
mov	ecx, DWORD PTR _aSpace1$[ebp]
add	ecx, eax
mov	DWORD PTR tv336[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR tv336[ebp]
mov	DWORD PTR _apCopy$[ebp+edx*4], eax
mov	ecx, DWORD PTR tv336[ebp]
mov	DWORD PTR _pOld$29[ebp], ecx
push	76					
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apOld$[ebp+edx*4]
push	eax
mov	ecx, DWORD PTR _pOld$29[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, 76					
shl	edx, 0
add	edx, DWORD PTR _pOld$29[ebp]
mov	eax, DWORD PTR _pOld$29[ebp]
mov	DWORD PTR [eax+56], edx
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _apOld$[ebp+eax*4]
mov	edx, DWORD PTR [ecx+56]
push	edx
mov	eax, DWORD PTR _pOld$29[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pOld$29[ebp]
movzx	eax, WORD PTR [edx+16]
mov	ecx, DWORD PTR _pOld$29[ebp]
movzx	edx, BYTE PTR [ecx+1]
add	eax, edx
mov	DWORD PTR _limit$7[ebp], eax
mov	eax, DWORD PTR _pOld$29[ebp]
movzx	ecx, BYTE PTR [eax+1]
test	ecx, ecx
jle	SHORT $LN83@balance_no
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN82@balance_no
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
cmp	eax, DWORD PTR _limit$7[ebp]
jge	SHORT $LN80@balance_no
mov	ecx, DWORD PTR _j$[ebp]
push	ecx
mov	edx, DWORD PTR _pOld$29[ebp]
push	edx
call	_findOverflowCell
add	esp, 8
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _apCell$[ebp]
mov	DWORD PTR [edx+ecx*4], eax
mov	eax, DWORD PTR _nCell$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _pOld$29[ebp]
push	eax
call	_cellSizePtr
add	esp, 8
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _szCell$[ebp]
mov	WORD PTR [edx+ecx*2], ax
mov	eax, DWORD PTR _nCell$[ebp]
add	eax, 1
mov	DWORD PTR _nCell$[ebp], eax
jmp	SHORT $LN81@balance_no
jmp	$LN79@balance_no
mov	ecx, DWORD PTR _pOld$29[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _aData$14[ebp], edx
mov	eax, DWORD PTR _pOld$29[ebp]
mov	cx, WORD PTR [eax+18]
mov	WORD PTR _maskPage$11[ebp], cx
mov	edx, DWORD PTR _pOld$29[ebp]
mov	ax, WORD PTR [edx+12]
mov	WORD PTR _cellOffset$23[ebp], ax
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN78@balance_no
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR _limit$7[ebp]
jge	$LN79@balance_no
movzx	eax, WORD PTR _maskPage$11[ebp]
movzx	ecx, WORD PTR _cellOffset$23[ebp]
add	ecx, DWORD PTR _aData$14[ebp]
mov	edx, DWORD PTR _j$[ebp]
lea	ecx, DWORD PTR [ecx+edx*2]
mov	edx, 1
imul	edx, edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
shl	ecx, 8
movzx	edx, WORD PTR _cellOffset$23[ebp]
add	edx, DWORD PTR _aData$14[ebp]
mov	esi, DWORD PTR _j$[ebp]
lea	edx, DWORD PTR [edx+esi*2]
mov	esi, 1
shl	esi, 0
movzx	edx, BYTE PTR [edx+esi]
or	ecx, edx
and	eax, ecx
add	eax, DWORD PTR _aData$14[ebp]
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _apCell$[ebp]
mov	DWORD PTR [edx+ecx*4], eax
mov	eax, DWORD PTR _nCell$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _pOld$29[ebp]
push	eax
call	_cellSizePtr
add	esp, 8
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _szCell$[ebp]
mov	WORD PTR [edx+ecx*2], ax
mov	eax, DWORD PTR _nCell$[ebp]
add	eax, 1
mov	DWORD PTR _nCell$[ebp], eax
jmp	$LN77@balance_no
mov	ecx, DWORD PTR _nOld$[ebp]
sub	ecx, 1
cmp	DWORD PTR _i$[ebp], ecx
jge	$LN75@balance_no
cmp	DWORD PTR _leafData$[ebp], 0
jne	$LN75@balance_no
mov	edx, DWORD PTR _i$[ebp]
mov	ax, WORD PTR _szNew$[ebp+edx*4]
mov	WORD PTR _sz$27[ebp], ax
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _szCell$[ebp]
mov	ax, WORD PTR _sz$27[ebp]
mov	WORD PTR [edx+ecx*2], ax
mov	ecx, DWORD PTR _aSpace1$[ebp]
add	ecx, DWORD PTR _iSpace1$[ebp]
mov	DWORD PTR _pTemp$5[ebp], ecx
movzx	edx, WORD PTR _sz$27[ebp]
add	edx, DWORD PTR _iSpace1$[ebp]
mov	DWORD PTR _iSpace1$[ebp], edx
movzx	eax, WORD PTR _sz$27[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apDiv$[ebp+ecx*4]
push	edx
mov	eax, DWORD PTR _pTemp$5[ebp]
push	eax
call	_memcpy
add	esp, 12					
movzx	ecx, WORD PTR _leafCorrection$[ebp]
add	ecx, DWORD PTR _pTemp$5[ebp]
mov	edx, DWORD PTR _nCell$[ebp]
mov	eax, DWORD PTR _apCell$[ebp]
mov	DWORD PTR [eax+edx*4], ecx
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _szCell$[ebp]
movzx	eax, WORD PTR [edx+ecx*2]
movzx	ecx, WORD PTR _leafCorrection$[ebp]
sub	eax, ecx
mov	edx, DWORD PTR _nCell$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
mov	WORD PTR [ecx+edx*2], ax
mov	edx, DWORD PTR _pOld$29[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
jne	SHORT $LN74@balance_no
push	4
mov	ecx, 1
shl	ecx, 3
mov	edx, DWORD PTR _pOld$29[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
mov	eax, DWORD PTR _nCell$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN73@balance_no
mov	eax, DWORD PTR _nCell$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
cmp	edx, 4
jge	SHORT $LN73@balance_no
mov	eax, 4
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _szCell$[ebp]
mov	WORD PTR [edx+ecx*2], ax
mov	eax, DWORD PTR _nCell$[ebp]
add	eax, 1
mov	DWORD PTR _nCell$[ebp], eax
jmp	$LN85@balance_no
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+36]
movzx	eax, WORD PTR _leafCorrection$[ebp]
lea	ecx, DWORD PTR [edx+eax-12]
mov	DWORD PTR _usableSpace$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR _k$[ebp], edx
mov	eax, DWORD PTR _k$[ebp]
mov	DWORD PTR _subtotal$[ebp], eax
jmp	SHORT $LN71@balance_no
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nCell$[ebp]
jge	$LN69@balance_no
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
mov	eax, DWORD PTR _subtotal$[ebp]
lea	ecx, DWORD PTR [eax+edx+2]
mov	DWORD PTR _subtotal$[ebp], ecx
mov	edx, DWORD PTR _subtotal$[ebp]
cmp	edx, DWORD PTR _usableSpace$[ebp]
jle	SHORT $LN68@balance_no
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
mov	eax, DWORD PTR _subtotal$[ebp]
sub	eax, edx
mov	ecx, DWORD PTR _k$[ebp]
mov	DWORD PTR _szNew$[ebp+ecx*4], eax
mov	edx, DWORD PTR _k$[ebp]
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _cntNew$[ebp+edx*4], eax
cmp	DWORD PTR _leafData$[ebp], 0
je	SHORT $LN67@balance_no
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	DWORD PTR _subtotal$[ebp], 0
mov	edx, DWORD PTR _k$[ebp]
add	edx, 1
mov	DWORD PTR _k$[ebp], edx
cmp	DWORD PTR _k$[ebp], 4
jle	SHORT $LN68@balance_no
push	57526					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$balance_cleanup$118
jmp	$LN70@balance_no
mov	eax, DWORD PTR _k$[ebp]
mov	ecx, DWORD PTR _subtotal$[ebp]
mov	DWORD PTR _szNew$[ebp+eax*4], ecx
mov	edx, DWORD PTR _k$[ebp]
mov	eax, DWORD PTR _nCell$[ebp]
mov	DWORD PTR _cntNew$[ebp+edx*4], eax
mov	ecx, DWORD PTR _k$[ebp]
add	ecx, 1
mov	DWORD PTR _k$[ebp], ecx
mov	edx, DWORD PTR _k$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN65@balance_no
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jle	$LN63@balance_no
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _szNew$[ebp+ecx*4]
mov	DWORD PTR _szRight$21[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _szNew$[ebp+eax*4-4]
mov	DWORD PTR _szLeft$15[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _cntNew$[ebp+edx*4-4]
sub	eax, 1
mov	DWORD PTR _r$22[ebp], eax
mov	ecx, DWORD PTR _r$22[ebp]
add	ecx, 1
sub	ecx, DWORD PTR _leafData$[ebp]
mov	DWORD PTR _d$12[ebp], ecx
cmp	DWORD PTR _szRight$21[ebp], 0
je	SHORT $LN60@balance_no
cmp	DWORD PTR _bBulk$[ebp], 0
jne	$LN61@balance_no
mov	edx, DWORD PTR _d$12[ebp]
mov	eax, DWORD PTR _szCell$[ebp]
movzx	ecx, WORD PTR [eax+edx*2]
mov	edx, DWORD PTR _szRight$21[ebp]
lea	eax, DWORD PTR [edx+ecx+2]
mov	ecx, DWORD PTR _r$22[ebp]
mov	edx, DWORD PTR _szCell$[ebp]
movzx	ecx, WORD PTR [edx+ecx*2]
add	ecx, 2
mov	edx, DWORD PTR _szLeft$15[ebp]
sub	edx, ecx
cmp	eax, edx
jg	SHORT $LN61@balance_no
mov	eax, DWORD PTR _d$12[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
mov	eax, DWORD PTR _szRight$21[ebp]
lea	ecx, DWORD PTR [eax+edx+2]
mov	DWORD PTR _szRight$21[ebp], ecx
mov	edx, DWORD PTR _r$22[ebp]
mov	eax, DWORD PTR _szCell$[ebp]
movzx	ecx, WORD PTR [eax+edx*2]
add	ecx, 2
mov	edx, DWORD PTR _szLeft$15[ebp]
sub	edx, ecx
mov	DWORD PTR _szLeft$15[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _cntNew$[ebp+eax*4-4]
sub	ecx, 1
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR _cntNew$[ebp+edx*4-4], ecx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _cntNew$[ebp+eax*4-4]
sub	ecx, 1
mov	DWORD PTR _r$22[ebp], ecx
mov	edx, DWORD PTR _r$22[ebp]
add	edx, 1
sub	edx, DWORD PTR _leafData$[ebp]
mov	DWORD PTR _d$12[ebp], edx
jmp	$LN62@balance_no
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _szRight$21[ebp]
mov	DWORD PTR _szNew$[ebp+eax*4], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _szLeft$15[ebp]
mov	DWORD PTR _szNew$[ebp+edx*4-4], eax
jmp	$LN64@balance_no
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _apOld$[ebp+edx]
cmp	DWORD PTR [eax+72], 1
ja	SHORT $LN59@balance_no
push	57588					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$balance_cleanup$118
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _apOld$[ebp+edx]
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR [eax+56]
movzx	ecx, BYTE PTR [eax+edx]
mov	DWORD PTR _pageFlags$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN58@balance_no
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _k$[ebp]
jge	$LN49@balance_no
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nOld$[ebp]
jge	SHORT $LN55@balance_no
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _apOld$[ebp+eax*4]
mov	DWORD PTR _apNew$[ebp+edx*4], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apNew$[ebp+edx*4]
mov	DWORD PTR _pNew$17[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _apOld$[ebp+ecx*4], 0
mov	edx, DWORD PTR _pNew$17[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _nNew$[ebp]
add	ecx, 1
mov	DWORD PTR _nNew$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN54@balance_no
jmp	$balance_cleanup$118
jmp	$LN53@balance_no
cmp	DWORD PTR _bBulk$[ebp], 0
je	SHORT $LN108@balance_no
mov	DWORD PTR tv609[ebp], 1
jmp	SHORT $LN109@balance_no
mov	edx, DWORD PTR _pgno$[ebp]
mov	DWORD PTR tv609[ebp], edx
push	0
mov	eax, DWORD PTR tv609[ebp]
push	eax
lea	ecx, DWORD PTR _pgno$[ebp]
push	ecx
lea	edx, DWORD PTR _pNew$17[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN52@balance_no
jmp	$balance_cleanup$118
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pNew$17[ebp]
mov	DWORD PTR _apNew$[ebp+ecx*4], edx
mov	eax, DWORD PTR _nNew$[ebp]
add	eax, 1
mov	DWORD PTR _nNew$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	SHORT $LN53@balance_no
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pParent$[ebp]
mov	edx, DWORD PTR [ecx+72]
push	edx
push	5
mov	eax, DWORD PTR _pNew$17[ebp]
mov	ecx, DWORD PTR [eax+72]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapPut
add	esp, 20					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN53@balance_no
jmp	$balance_cleanup$118
jmp	$LN57@balance_no
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nOld$[ebp]
jge	SHORT $LN48@balance_no
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apOld$[ebp+edx*4]
push	eax
call	_freePage
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN47@balance_no
jmp	$balance_cleanup$118
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apOld$[ebp+ecx*4]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _apOld$[ebp+eax*4], 0
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN49@balance_no
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN46@balance_no
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _k$[ebp]
sub	eax, 1
cmp	DWORD PTR _i$[ebp], eax
jge	$LN44@balance_no
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apNew$[ebp+ecx*4]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR _minV$6[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _minI$19[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN43@balance_no
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR _k$[ebp]
jge	SHORT $LN41@balance_no
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR _apNew$[ebp+edx*4]
mov	ecx, DWORD PTR [eax+72]
cmp	ecx, DWORD PTR _minV$6[ebp]
jae	SHORT $LN40@balance_no
mov	edx, DWORD PTR _j$[ebp]
mov	DWORD PTR _minI$19[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _apNew$[ebp+eax*4]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _minV$6[ebp], edx
jmp	SHORT $LN42@balance_no
mov	eax, DWORD PTR _minI$19[ebp]
cmp	eax, DWORD PTR _i$[ebp]
jle	SHORT $LN39@balance_no
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apNew$[ebp+ecx*4]
mov	DWORD PTR _pT$4[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _minI$19[ebp]
mov	edx, DWORD PTR _apNew$[ebp+ecx*4]
mov	DWORD PTR _apNew$[ebp+eax*4], edx
mov	eax, DWORD PTR _minI$19[ebp]
mov	ecx, DWORD PTR _pT$4[ebp]
mov	DWORD PTR _apNew$[ebp+eax*4], ecx
jmp	$LN45@balance_no
mov	edx, DWORD PTR _nNew$[ebp]
mov	eax, DWORD PTR _apNew$[ebp+edx*4-4]
mov	ecx, DWORD PTR [eax+72]
push	ecx
mov	edx, DWORD PTR _pRight$[ebp]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	DWORD PTR _j$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN38@balance_no
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nNew$[ebp]
jge	$LN36@balance_no
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apNew$[ebp+edx*4]
mov	DWORD PTR _pNew$24[ebp], eax
mov	ecx, DWORD PTR _pageFlags$[ebp]
push	ecx
mov	edx, DWORD PTR _pNew$24[ebp]
push	edx
call	_zeroPage
add	esp, 8
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
lea	edx, DWORD PTR [ecx+eax*2]
push	edx
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
lea	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _cntNew$[ebp+eax*4]
sub	ecx, DWORD PTR _j$[ebp]
push	ecx
mov	edx, DWORD PTR _pNew$24[ebp]
push	edx
call	_assemblePage
add	esp, 16					
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _cntNew$[ebp+eax*4]
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR _nCell$[ebp]
jge	$LN35@balance_no
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _pCell$26[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
movzx	eax, WORD PTR _leafCorrection$[ebp]
add	edx, eax
mov	DWORD PTR _sz$16[ebp], edx
mov	ecx, DWORD PTR _aOvflSpace$[ebp]
add	ecx, DWORD PTR _iOvflSpace$[ebp]
mov	DWORD PTR _pTemp$13[ebp], ecx
mov	edx, DWORD PTR _pNew$24[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
jne	SHORT $LN34@balance_no
push	4
mov	ecx, DWORD PTR _pCell$26[ebp]
push	ecx
mov	edx, 1
shl	edx, 3
mov	eax, DWORD PTR _pNew$24[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_memcpy
add	esp, 12					
jmp	$LN33@balance_no
cmp	DWORD PTR _leafData$[ebp], 0
je	SHORT $LN32@balance_no
mov	ecx, DWORD PTR _j$[ebp]
sub	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
lea	edx, DWORD PTR _info$1[ebp]
push	edx
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _pNew$24[ebp]
push	eax
call	_btreeParseCellPtr
add	esp, 12					
mov	ecx, DWORD PTR _pTemp$13[ebp]
mov	DWORD PTR _pCell$26[ebp], ecx
mov	edx, DWORD PTR _info$1[ebp+4]
push	edx
mov	eax, DWORD PTR _info$1[ebp]
push	eax
mov	ecx, 1
shl	ecx, 2
add	ecx, DWORD PTR _pCell$26[ebp]
push	ecx
call	_sqlite3PutVarint
add	esp, 12					
add	eax, 4
mov	DWORD PTR _sz$16[ebp], eax
mov	DWORD PTR _pTemp$13[ebp], 0
jmp	SHORT $LN33@balance_no
mov	edx, DWORD PTR _pCell$26[ebp]
sub	edx, 4
mov	DWORD PTR _pCell$26[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
cmp	edx, 4
jne	SHORT $LN33@balance_no
mov	eax, DWORD PTR _pCell$26[ebp]
push	eax
mov	ecx, DWORD PTR _pParent$[ebp]
push	ecx
call	_cellSizePtr
add	esp, 8
movzx	edx, ax
mov	DWORD PTR _sz$16[ebp], edx
mov	eax, DWORD PTR _iOvflSpace$[ebp]
add	eax, DWORD PTR _sz$16[ebp]
mov	DWORD PTR _iOvflSpace$[ebp], eax
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _pNew$24[ebp]
mov	eax, DWORD PTR [edx+72]
push	eax
mov	ecx, DWORD PTR _pTemp$13[ebp]
push	ecx
mov	edx, DWORD PTR _sz$16[ebp]
push	edx
mov	eax, DWORD PTR _pCell$26[ebp]
push	eax
mov	ecx, DWORD PTR _nxDiv$[ebp]
push	ecx
mov	edx, DWORD PTR _pParent$[ebp]
push	edx
call	_insertCell
add	esp, 28					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN29@balance_no
jmp	$balance_cleanup$118
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _nxDiv$[ebp]
add	ecx, 1
mov	DWORD PTR _nxDiv$[ebp], ecx
jmp	$LN37@balance_no
mov	edx, DWORD PTR _pageFlags$[ebp]
and	edx, 8
jne	SHORT $LN28@balance_no
mov	eax, DWORD PTR _nOld$[ebp]
mov	ecx, DWORD PTR _apCopy$[ebp+eax*4-4]
mov	edx, 1
shl	edx, 3
add	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _zChild$3[ebp], edx
push	4
mov	eax, DWORD PTR _zChild$3[ebp]
push	eax
mov	ecx, DWORD PTR _nNew$[ebp]
mov	edx, DWORD PTR _apNew$[ebp+ecx*4-4]
mov	eax, 1
shl	eax, 3
add	eax, DWORD PTR [edx+56]
push	eax
call	_memcpy
add	esp, 12					
cmp	DWORD PTR _isRoot$[ebp], 0
je	SHORT $LN27@balance_no
mov	ecx, DWORD PTR _pParent$[ebp]
movzx	edx, WORD PTR [ecx+16]
test	edx, edx
jne	SHORT $LN27@balance_no
mov	eax, DWORD PTR _pParent$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	edx, 4
imul	eax, edx, 0
mov	edx, DWORD PTR _apNew$[ebp+eax]
movzx	eax, WORD PTR [edx+14]
cmp	ecx, eax
jg	SHORT $LN27@balance_no
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _pParent$[ebp]
push	edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _apNew$[ebp+ecx]
push	edx
call	_copyNodeContent
add	esp, 12					
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _apNew$[ebp+edx]
push	eax
call	_freePage
add	esp, 8
jmp	$balance_cleanup$118
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	$balance_cleanup$118
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _apNew$[ebp+ecx]
mov	DWORD PTR _pNew$20[ebp], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _apCopy$[ebp+ecx]
mov	DWORD PTR _pOld$28[ebp], edx
mov	eax, DWORD PTR _pOld$28[ebp]
movzx	ecx, BYTE PTR [eax+1]
mov	DWORD PTR _nOverflow$25[ebp], ecx
mov	edx, DWORD PTR _pOld$28[ebp]
movzx	eax, WORD PTR [edx+16]
add	eax, DWORD PTR _nOverflow$25[ebp]
mov	DWORD PTR _iNextOld$8[ebp], eax
cmp	DWORD PTR _nOverflow$25[ebp], 0
je	SHORT $LN110@balance_no
mov	ecx, 2
imul	edx, ecx, 0
mov	eax, DWORD PTR _pOld$28[ebp]
movzx	ecx, WORD PTR [eax+edx+20]
mov	DWORD PTR tv798[ebp], ecx
jmp	SHORT $LN111@balance_no
mov	DWORD PTR tv798[ebp], -1
mov	edx, DWORD PTR tv798[ebp]
mov	DWORD PTR _iOverflow$18[ebp], edx
mov	DWORD PTR _j$[ebp], 0
mov	DWORD PTR _k$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN24@balance_no
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nCell$[ebp]
jge	$LN22@balance_no
mov	DWORD PTR _isDivider$10[ebp], 0
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _iNextOld$8[ebp]
jne	$LN20@balance_no
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR _apCopy$[ebp+ecx*4]
mov	DWORD PTR _pOld$28[ebp], edx
cmp	DWORD PTR _leafData$[ebp], 0
jne	SHORT $LN112@balance_no
mov	DWORD PTR tv806[ebp], 1
jmp	SHORT $LN113@balance_no
mov	DWORD PTR tv806[ebp], 0
mov	eax, DWORD PTR _i$[ebp]
add	eax, DWORD PTR tv806[ebp]
mov	ecx, DWORD PTR _pOld$28[ebp]
movzx	edx, WORD PTR [ecx+16]
add	eax, edx
mov	ecx, DWORD PTR _pOld$28[ebp]
movzx	edx, BYTE PTR [ecx+1]
add	eax, edx
mov	DWORD PTR _iNextOld$8[ebp], eax
mov	eax, DWORD PTR _pOld$28[ebp]
movzx	ecx, BYTE PTR [eax+1]
test	ecx, ecx
je	SHORT $LN19@balance_no
mov	edx, DWORD PTR _pOld$28[ebp]
movzx	eax, BYTE PTR [edx+1]
mov	DWORD PTR _nOverflow$25[ebp], eax
cmp	DWORD PTR _leafData$[ebp], 0
jne	SHORT $LN114@balance_no
mov	DWORD PTR tv820[ebp], 1
jmp	SHORT $LN115@balance_no
mov	DWORD PTR tv820[ebp], 0
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR tv820[ebp]
mov	edx, 2
imul	eax, edx, 0
mov	edx, DWORD PTR _pOld$28[ebp]
movzx	eax, WORD PTR [edx+eax+20]
add	ecx, eax
mov	DWORD PTR _iOverflow$18[ebp], ecx
cmp	DWORD PTR _leafData$[ebp], 0
jne	SHORT $LN116@balance_no
mov	DWORD PTR tv828[ebp], 1
jmp	SHORT $LN117@balance_no
mov	DWORD PTR tv828[ebp], 0
mov	ecx, DWORD PTR tv828[ebp]
mov	DWORD PTR _isDivider$10[ebp], ecx
jmp	$LN21@balance_no
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _iOverflow$18[ebp]
jne	SHORT $LN18@balance_no
mov	DWORD PTR _isDivider$10[ebp], 1
mov	eax, DWORD PTR _nOverflow$25[ebp]
sub	eax, 1
mov	DWORD PTR _nOverflow$25[ebp], eax
cmp	DWORD PTR _nOverflow$25[ebp], 0
jle	SHORT $LN18@balance_no
mov	ecx, DWORD PTR _iOverflow$18[ebp]
add	ecx, 1
mov	DWORD PTR _iOverflow$18[ebp], ecx
mov	edx, DWORD PTR _k$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _cntNew$[ebp+edx*4]
jne	SHORT $LN16@balance_no
mov	ecx, DWORD PTR _k$[ebp]
add	ecx, 1
mov	DWORD PTR _k$[ebp], ecx
mov	edx, DWORD PTR _k$[ebp]
mov	eax, DWORD PTR _apNew$[ebp+edx*4]
mov	DWORD PTR _pNew$20[ebp], eax
cmp	DWORD PTR _leafData$[ebp], 0
jne	SHORT $LN16@balance_no
jmp	$LN23@balance_no
cmp	DWORD PTR _isDivider$10[ebp], 0
jne	SHORT $LN13@balance_no
mov	ecx, DWORD PTR _pOld$28[ebp]
mov	edx, DWORD PTR _pNew$20[ebp]
mov	eax, DWORD PTR [ecx+72]
cmp	eax, DWORD PTR [edx+72]
je	SHORT $LN14@balance_no
movzx	ecx, WORD PTR _leafCorrection$[ebp]
test	ecx, ecx
jne	SHORT $LN12@balance_no
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pNew$20[ebp]
mov	ecx, DWORD PTR [eax+72]
push	ecx
push	5
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apCell$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapPut
add	esp, 20					
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _szCell$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
mov	eax, DWORD PTR _pNew$20[ebp]
movzx	ecx, WORD PTR [eax+10]
cmp	edx, ecx
jle	SHORT $LN14@balance_no
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _apCell$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _pNew$20[ebp]
push	eax
call	_ptrmapPutOvflPtr
add	esp, 12					
jmp	$LN23@balance_no
movzx	ecx, WORD PTR _leafCorrection$[ebp]
test	ecx, ecx
jne	SHORT $balance_cleanup$118
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN9@balance_no
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nNew$[ebp]
jge	SHORT $balance_cleanup$118
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apNew$[ebp+ecx*4]
mov	eax, 1
shl	eax, 3
add	eax, DWORD PTR [edx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _key$2[ebp], eax
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apNew$[ebp+edx*4]
mov	ecx, DWORD PTR [eax+72]
push	ecx
push	5
mov	edx, DWORD PTR _key$2[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPut
add	esp, 20					
jmp	SHORT $LN8@balance_no
mov	ecx, DWORD PTR _apCell$[ebp]
push	ecx
call	_sqlite3ScratchFree
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@balance_no
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nOld$[ebp]
jge	SHORT $LN4@balance_no
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apOld$[ebp+ecx*4]
push	edx
call	_releasePage
add	esp, 4
jmp	SHORT $LN5@balance_no
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@balance_no
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nNew$[ebp]
jge	SHORT $LN1@balance_no
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apNew$[ebp+edx*4]
push	eax
call	_releasePage
add	esp, 4
jmp	SHORT $LN2@balance_no
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_copyNodeContent PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pRC$[ebp]
cmp	DWORD PTR [eax], 0
jne	$LN4@copyNodeCo
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pBt$2[ebp], edx
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _aFrom$7[ebp], ecx
mov	edx, DWORD PTR _pTo$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _aTo$4[ebp], eax
mov	ecx, DWORD PTR _pFrom$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	DWORD PTR _iFromHdr$5[ebp], edx
mov	eax, DWORD PTR _pTo$[ebp]
cmp	DWORD PTR [eax+72], 1
jne	SHORT $LN6@copyNodeCo
mov	DWORD PTR tv72[ebp], 100		
jmp	SHORT $LN7@copyNodeCo
mov	DWORD PTR tv72[ebp], 0
mov	ecx, DWORD PTR tv72[ebp]
mov	DWORD PTR _iToHdr$1[ebp], ecx
mov	edx, DWORD PTR _iFromHdr$5[ebp]
mov	eax, DWORD PTR _aFrom$7[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _iFromHdr$5[ebp]
mov	eax, DWORD PTR _aFrom$7[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	DWORD PTR _iData$6[ebp], ecx
mov	eax, DWORD PTR _pBt$2[ebp]
mov	ecx, DWORD PTR [eax+36]
sub	ecx, DWORD PTR _iData$6[ebp]
push	ecx
mov	edx, DWORD PTR _aFrom$7[ebp]
add	edx, DWORD PTR _iData$6[ebp]
push	edx
mov	eax, DWORD PTR _aTo$4[ebp]
add	eax, DWORD PTR _iData$6[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pFrom$[ebp]
movzx	edx, WORD PTR [ecx+12]
mov	eax, DWORD PTR _pFrom$[ebp]
movzx	ecx, WORD PTR [eax+16]
lea	edx, DWORD PTR [edx+ecx*2]
push	edx
mov	eax, DWORD PTR _aFrom$7[ebp]
add	eax, DWORD PTR _iFromHdr$5[ebp]
push	eax
mov	ecx, DWORD PTR _aTo$4[ebp]
add	ecx, DWORD PTR _iToHdr$1[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pTo$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _pTo$[ebp]
push	eax
call	_btreeInitPage
add	esp, 4
mov	DWORD PTR _rc$3[ebp], eax
cmp	DWORD PTR _rc$3[ebp], 0
je	SHORT $LN2@copyNodeCo
mov	ecx, DWORD PTR _pRC$[ebp]
mov	edx, DWORD PTR _rc$3[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN4@copyNodeCo
mov	eax, DWORD PTR _pBt$2[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN4@copyNodeCo
mov	edx, DWORD PTR _pTo$[ebp]
push	edx
call	_setChildPtrmaps
add	esp, 4
mov	ecx, DWORD PTR _pRC$[ebp]
mov	DWORD PTR [ecx], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_balance_quick PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
push	esi
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+16]
test	eax, eax
jne	SHORT $LN8@balance_qu
push	57050					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN9@balance_qu
push	0
push	0
lea	ecx, DWORD PTR _pgnoNew$[ebp]
push	ecx
lea	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN7@balance_qu
mov	ecx, 1
shl	ecx, 2
add	ecx, DWORD PTR _pSpace$[ebp]
mov	DWORD PTR _pOut$2[ebp], ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+eax+32]
mov	DWORD PTR _pCell$3[ebp], edx
mov	eax, DWORD PTR _pCell$3[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_cellSizePtr
add	esp, 8
mov	WORD PTR _szCell$4[ebp], ax
push	13					
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
call	_zeroPage
add	esp, 8
lea	eax, DWORD PTR _szCell$4[ebp]
push	eax
lea	ecx, DWORD PTR _pCell$3[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
call	_assemblePage
add	esp, 16					
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN6@balance_qu
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+72]
push	ecx
push	5
mov	edx, DWORD PTR _pgnoNew$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPut
add	esp, 20					
movzx	ecx, WORD PTR _szCell$4[ebp]
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, WORD PTR [edx+10]
cmp	ecx, eax
jle	SHORT $LN6@balance_qu
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _pCell$3[ebp]
push	edx
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
call	_ptrmapPutOvflPtr
add	esp, 12					
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+16]
mov	eax, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [eax+64]
lea	ecx, DWORD PTR [eax+ecx*2-2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [eax+16]
mov	esi, DWORD PTR _pPage$[ebp]
mov	esi, DWORD PTR [esi+64]
lea	eax, DWORD PTR [esi+eax*2-2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pCell$3[ebp], edx
mov	edx, 1
imul	eax, edx, 9
add	eax, DWORD PTR _pCell$3[ebp]
mov	DWORD PTR _pStop$1[ebp], eax
mov	ecx, DWORD PTR _pCell$3[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 128				
mov	DWORD PTR tv172[ebp], edx
mov	eax, DWORD PTR _pCell$3[ebp]
add	eax, 1
mov	DWORD PTR _pCell$3[ebp], eax
cmp	DWORD PTR tv172[ebp], 0
je	SHORT $LN3@balance_qu
mov	ecx, DWORD PTR _pCell$3[ebp]
cmp	ecx, DWORD PTR _pStop$1[ebp]
jae	SHORT $LN3@balance_qu
jmp	SHORT $LN4@balance_qu
mov	edx, 1
imul	eax, edx, 9
add	eax, DWORD PTR _pCell$3[ebp]
mov	DWORD PTR _pStop$1[ebp], eax
mov	ecx, DWORD PTR _pOut$2[ebp]
mov	edx, DWORD PTR _pCell$3[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR [ecx], al
mov	ecx, DWORD PTR _pOut$2[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 128				
mov	DWORD PTR tv181[ebp], edx
mov	eax, DWORD PTR _pOut$2[ebp]
add	eax, 1
mov	DWORD PTR _pOut$2[ebp], eax
mov	ecx, DWORD PTR _pCell$3[ebp]
add	ecx, 1
mov	DWORD PTR _pCell$3[ebp], ecx
cmp	DWORD PTR tv181[ebp], 0
je	SHORT $LN1@balance_qu
mov	edx, DWORD PTR _pCell$3[ebp]
cmp	edx, DWORD PTR _pStop$1[ebp]
jae	SHORT $LN1@balance_qu
jmp	SHORT $LN2@balance_qu
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+72]
push	edx
push	0
mov	eax, DWORD PTR _pOut$2[ebp]
sub	eax, DWORD PTR _pSpace$[ebp]
push	eax
mov	ecx, DWORD PTR _pSpace$[ebp]
push	ecx
mov	edx, DWORD PTR _pParent$[ebp]
movzx	eax, WORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pParent$[ebp]
push	ecx
call	_insertCell
add	esp, 28					
mov	edx, DWORD PTR _pgnoNew$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [edx+56]
lea	ecx, DWORD PTR [eax+ecx+8]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_assemblePage PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _data$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+5]
mov	DWORD PTR _hdr$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	eax, DWORD PTR [edx+36]
mov	DWORD PTR _nUsable$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	eax, DWORD PTR _nCell$[ebp]
lea	ecx, DWORD PTR [edx+eax*2]
mov	DWORD PTR _pCellptr$[ebp], ecx
mov	edx, DWORD PTR _nUsable$[ebp]
mov	DWORD PTR _cellbody$[ebp], edx
mov	eax, DWORD PTR _nCell$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN3@assemblePa
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN1@assemblePa
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aSize$[ebp]
mov	cx, WORD PTR [eax+edx*2]
mov	WORD PTR _sz$1[ebp], cx
mov	edx, DWORD PTR _pCellptr$[ebp]
sub	edx, 2
mov	DWORD PTR _pCellptr$[ebp], edx
movzx	eax, WORD PTR _sz$1[ebp]
mov	ecx, DWORD PTR _cellbody$[ebp]
sub	ecx, eax
mov	DWORD PTR _cellbody$[ebp], ecx
mov	edx, DWORD PTR _cellbody$[ebp]
sar	edx, 8
mov	eax, 1
imul	ecx, eax, 0
mov	eax, DWORD PTR _pCellptr$[ebp]
mov	BYTE PTR [eax+ecx], dl
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _pCellptr$[ebp]
mov	al, BYTE PTR _cellbody$[ebp]
mov	BYTE PTR [edx+ecx], al
movzx	ecx, WORD PTR _sz$1[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apCell$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _cellbody$[ebp]
push	edx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN2@assemblePa
mov	eax, DWORD PTR _nCell$[ebp]
sar	eax, 8
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [edx+ecx+3]
mov	edx, 1
imul	edx, edx, 0
mov	BYTE PTR [ecx+edx], al
mov	eax, DWORD PTR _hdr$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+eax+3]
mov	eax, 1
shl	eax, 0
mov	cl, BYTE PTR _nCell$[ebp]
mov	BYTE PTR [edx+eax], cl
mov	edx, DWORD PTR _cellbody$[ebp]
sar	edx, 8
mov	eax, DWORD PTR _hdr$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [ecx+eax+5]
mov	ecx, 1
imul	ecx, ecx, 0
mov	BYTE PTR [eax+ecx], dl
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
shl	edx, 0
mov	al, BYTE PTR _cellbody$[ebp]
mov	BYTE PTR [ecx+edx], al
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _nUsable$[ebp]
lea	eax, DWORD PTR [edx+ecx*2]
sub	eax, DWORD PTR _cellbody$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+14]
sub	edx, eax
mov	eax, DWORD PTR _pPage$[ebp]
mov	WORD PTR [eax+14], dx
mov	ecx, DWORD PTR _pPage$[ebp]
mov	dx, WORD PTR _nCell$[ebp]
mov	WORD PTR [ecx+16], dx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_insertCell PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	DWORD PTR _idx$[ebp], 0
cmp	DWORD PTR _iChild$[ebp], 0
je	SHORT $LN13@insertCell
mov	DWORD PTR tv65[ebp], 4
jmp	SHORT $LN14@insertCell
mov	DWORD PTR tv65[ebp], 0
mov	eax, DWORD PTR tv65[ebp]
mov	DWORD PTR _nSkip$[ebp], eax
mov	ecx, DWORD PTR _pRC$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN10@insertCell
jmp	$LN11@insertCell
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+1]
test	eax, eax
jne	SHORT $LN8@insertCell
mov	ecx, DWORD PTR _sz$[ebp]
add	ecx, 2
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+14]
cmp	ecx, eax
jle	SHORT $LN9@insertCell
cmp	DWORD PTR _pTemp$[ebp], 0
je	SHORT $LN7@insertCell
mov	ecx, DWORD PTR _sz$[ebp]
sub	ecx, DWORD PTR _nSkip$[ebp]
push	ecx
mov	edx, DWORD PTR _pCell$[ebp]
add	edx, DWORD PTR _nSkip$[ebp]
push	edx
mov	eax, DWORD PTR _pTemp$[ebp]
add	eax, DWORD PTR _nSkip$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pTemp$[ebp]
mov	DWORD PTR _pCell$[ebp], ecx
cmp	DWORD PTR _iChild$[ebp], 0
je	SHORT $LN6@insertCell
mov	edx, DWORD PTR _iChild$[ebp]
push	edx
mov	eax, DWORD PTR _pCell$[ebp]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+1]
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
mov	cl, BYTE PTR [eax+1]
add	cl, 1
mov	edx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [edx+1], cl
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR _pCell$[ebp]
mov	DWORD PTR [ecx+eax*4+32], edx
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	dx, WORD PTR _i$[ebp]
mov	WORD PTR [ecx+eax*2+20], dx
jmp	$LN11@insertCell
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN4@insertCell
mov	edx, DWORD PTR _pRC$[ebp]
mov	eax, DWORD PTR _rc$1[ebp]
mov	DWORD PTR [edx], eax
jmp	$LN11@insertCell
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _data$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+12]
mov	DWORD PTR _cellOffset$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+16]
mov	ecx, DWORD PTR _cellOffset$[ebp]
lea	edx, DWORD PTR [ecx+eax*2]
mov	DWORD PTR _end$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _cellOffset$[ebp]
lea	edx, DWORD PTR [ecx+eax*2]
mov	DWORD PTR _ins$[ebp], edx
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, DWORD PTR _sz$[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_allocateSpace
add	esp, 12					
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN3@insertCell
mov	eax, DWORD PTR _pRC$[ebp]
mov	ecx, DWORD PTR _rc$1[ebp]
mov	DWORD PTR [eax], ecx
jmp	$LN11@insertCell
mov	edx, DWORD PTR _pPage$[ebp]
mov	ax, WORD PTR [edx+16]
add	ax, 1
mov	ecx, DWORD PTR _pPage$[ebp]
mov	WORD PTR [ecx+16], ax
mov	edx, DWORD PTR _sz$[ebp]
add	edx, 2
movzx	eax, dx
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+14]
sub	edx, eax
mov	eax, DWORD PTR _pPage$[ebp]
mov	WORD PTR [eax+14], dx
mov	ecx, DWORD PTR _sz$[ebp]
sub	ecx, DWORD PTR _nSkip$[ebp]
push	ecx
mov	edx, DWORD PTR _pCell$[ebp]
add	edx, DWORD PTR _nSkip$[ebp]
push	edx
mov	eax, DWORD PTR _idx$[ebp]
add	eax, DWORD PTR _nSkip$[ebp]
add	eax, DWORD PTR _data$[ebp]
push	eax
call	_memcpy
add	esp, 12					
cmp	DWORD PTR _iChild$[ebp], 0
je	SHORT $LN2@insertCell
mov	ecx, DWORD PTR _iChild$[ebp]
push	ecx
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _idx$[ebp]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _end$[ebp]
sub	eax, DWORD PTR _ins$[ebp]
push	eax
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _ins$[ebp]
push	ecx
mov	edx, DWORD PTR _ins$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+2]
push	ecx
call	_memmove
add	esp, 12					
mov	edx, DWORD PTR _idx$[ebp]
sar	edx, 8
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _ins$[ebp]
mov	ecx, 1
imul	ecx, ecx, 0
mov	BYTE PTR [eax+ecx], dl
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _ins$[ebp]
mov	eax, 1
shl	eax, 0
mov	cl, BYTE PTR _idx$[ebp]
mov	BYTE PTR [edx+eax], cl
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+16]
sar	eax, 8
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+edx+3]
mov	ecx, 1
imul	ecx, ecx, 0
mov	BYTE PTR [edx+ecx], al
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+5]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+eax+3]
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _pPage$[ebp]
mov	cl, BYTE PTR [ecx+16]
mov	BYTE PTR [edx+eax], cl
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+52]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN11@insertCell
mov	edx, DWORD PTR _pRC$[ebp]
push	edx
mov	eax, DWORD PTR _pCell$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_ptrmapPutOvflPtr
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_dropCell PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pRC$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN4@dropCell
jmp	$LN5@dropCell
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _data$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	edx, DWORD PTR _idx$[ebp]
lea	eax, DWORD PTR [ecx+edx*2]
mov	DWORD PTR _ptr$[ebp], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _ptr$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
shl	ecx, 8
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _ptr$[ebp]
movzx	edx, BYTE PTR [eax+edx]
or	ecx, edx
mov	DWORD PTR _pc$[ebp], ecx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	DWORD PTR _hdr$[ebp], ecx
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
cmp	DWORD PTR _pc$[ebp], ecx
jb	SHORT $LN2@dropCell
mov	eax, DWORD PTR _pc$[ebp]
add	eax, DWORD PTR _sz$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
cmp	eax, DWORD PTR [edx+36]
jbe	SHORT $LN3@dropCell
push	56847					
call	_sqlite3CorruptError
add	esp, 4
mov	ecx, DWORD PTR _pRC$[ebp]
mov	DWORD PTR [ecx], eax
jmp	$LN5@dropCell
mov	edx, DWORD PTR _sz$[ebp]
push	edx
mov	eax, DWORD PTR _pc$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_freeSpace
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@dropCell
mov	edx, DWORD PTR _pRC$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx], eax
jmp	SHORT $LN5@dropCell
mov	ecx, DWORD PTR _pPage$[ebp]
mov	dx, WORD PTR [ecx+16]
sub	dx, 1
mov	eax, DWORD PTR _pPage$[ebp]
mov	WORD PTR [eax+16], dx
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+16]
sub	edx, DWORD PTR _idx$[ebp]
shl	edx, 1
push	edx
mov	eax, DWORD PTR _ptr$[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _ptr$[ebp]
push	ecx
call	_memmove
add	esp, 12					
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+16]
sar	eax, 8
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [edx+ecx+3]
mov	edx, 1
imul	edx, edx, 0
mov	BYTE PTR [ecx+edx], al
mov	eax, DWORD PTR _hdr$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+eax+3]
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _pPage$[ebp]
mov	cl, BYTE PTR [ecx+16]
mov	BYTE PTR [edx+eax], cl
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+14]
add	eax, 2
mov	ecx, DWORD PTR _pPage$[ebp]
mov	WORD PTR [ecx+14], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fillInCell PROC
push	ebp
mov	ebp, esp
sub	esp, 100				
mov	DWORD PTR _pOvfl$[ebp], 0
mov	DWORD PTR _pToRelease$[ebp], 0
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pBt$[ebp], ecx
mov	DWORD PTR _pgnoOvfl$[ebp], 0
mov	DWORD PTR _nHeader$[ebp], 0
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
jne	SHORT $LN22@fillInCell
mov	ecx, DWORD PTR _nHeader$[ebp]
add	ecx, 4
mov	DWORD PTR _nHeader$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+4]
test	eax, eax
je	SHORT $LN21@fillInCell
mov	ecx, DWORD PTR _nData$[ebp]
add	ecx, DWORD PTR _nZero$[ebp]
cmp	ecx, 128				
jae	SHORT $LN25@fillInCell
mov	edx, DWORD PTR _nData$[ebp]
add	edx, DWORD PTR _nZero$[ebp]
mov	eax, DWORD PTR _pCell$[ebp]
add	eax, DWORD PTR _nHeader$[ebp]
mov	BYTE PTR [eax], dl
mov	DWORD PTR tv84[ebp], 1
jmp	SHORT $LN26@fillInCell
mov	ecx, DWORD PTR _nData$[ebp]
add	ecx, DWORD PTR _nZero$[ebp]
push	ecx
mov	edx, DWORD PTR _pCell$[ebp]
add	edx, DWORD PTR _nHeader$[ebp]
push	edx
call	_sqlite3PutVarint32
add	esp, 8
mov	DWORD PTR tv84[ebp], eax
movzx	eax, BYTE PTR tv84[ebp]
add	eax, DWORD PTR _nHeader$[ebp]
mov	DWORD PTR _nHeader$[ebp], eax
jmp	SHORT $LN20@fillInCell
mov	DWORD PTR _nZero$[ebp], 0
mov	ecx, DWORD PTR _nZero$[ebp]
mov	DWORD PTR _nData$[ebp], ecx
mov	edx, DWORD PTR _nKey$[ebp+4]
push	edx
mov	eax, DWORD PTR _nKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pCell$[ebp]
add	ecx, DWORD PTR _nHeader$[ebp]
push	ecx
call	_sqlite3PutVarint
add	esp, 12					
add	eax, DWORD PTR _nHeader$[ebp]
mov	DWORD PTR _nHeader$[ebp], eax
lea	edx, DWORD PTR _info$[ebp]
push	edx
mov	eax, DWORD PTR _pCell$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_btreeParseCellPtr
add	esp, 12					
mov	edx, DWORD PTR _nData$[ebp]
add	edx, DWORD PTR _nZero$[ebp]
mov	DWORD PTR _nPayload$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+2]
test	ecx, ecx
je	SHORT $LN19@fillInCell
mov	edx, DWORD PTR _pData$[ebp]
mov	DWORD PTR _pSrc$[ebp], edx
mov	eax, DWORD PTR _nData$[ebp]
mov	DWORD PTR _nSrc$[ebp], eax
mov	DWORD PTR _nData$[ebp], 0
jmp	SHORT $LN18@fillInCell
cmp	DWORD PTR _nKey$[ebp+4], 0
jg	SHORT $LN16@fillInCell
jl	SHORT $LN30@fillInCell
cmp	DWORD PTR _nKey$[ebp], 2147483647	
ja	SHORT $LN16@fillInCell
cmp	DWORD PTR _pKey$[ebp], 0
jne	SHORT $LN17@fillInCell
push	56721					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN23@fillInCell
mov	ecx, DWORD PTR _nKey$[ebp]
add	ecx, DWORD PTR _nPayload$[ebp]
mov	DWORD PTR _nPayload$[ebp], ecx
mov	edx, DWORD PTR _pKey$[ebp]
mov	DWORD PTR _pSrc$[ebp], edx
mov	eax, DWORD PTR _nKey$[ebp]
mov	DWORD PTR _nSrc$[ebp], eax
movzx	ecx, WORD PTR _info$[ebp+26]
mov	edx, DWORD PTR _pnSize$[ebp]
mov	DWORD PTR [edx], ecx
movzx	eax, WORD PTR _info$[ebp+22]
mov	DWORD PTR _spaceLeft$[ebp], eax
mov	ecx, DWORD PTR _pCell$[ebp]
add	ecx, DWORD PTR _nHeader$[ebp]
mov	DWORD PTR _pPayload$[ebp], ecx
movzx	edx, WORD PTR _info$[ebp+24]
add	edx, DWORD PTR _pCell$[ebp]
mov	DWORD PTR _pPrior$[ebp], edx
cmp	DWORD PTR _nPayload$[ebp], 0
jle	$LN14@fillInCell
cmp	DWORD PTR _spaceLeft$[ebp], 0
jne	$LN13@fillInCell
mov	eax, DWORD PTR _pgnoOvfl$[ebp]
mov	DWORD PTR _pgnoPtrmap$1[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	SHORT $LN12@fillInCell
mov	eax, DWORD PTR _pgnoOvfl$[ebp]
add	eax, 1
mov	DWORD PTR _pgnoOvfl$[ebp], eax
mov	ecx, DWORD PTR _pgnoOvfl$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _pgnoOvfl$[ebp]
je	SHORT $LN11@fillInCell
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _pgnoOvfl$[ebp], eax
je	SHORT $LN11@fillInCell
push	0
mov	edx, DWORD PTR _pgnoOvfl$[ebp]
push	edx
lea	eax, DWORD PTR _pgnoOvfl$[ebp]
push	eax
lea	ecx, DWORD PTR _pOvfl$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN8@fillInCell
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@fillInCell
cmp	DWORD PTR _pgnoPtrmap$1[ebp], 0
je	SHORT $LN27@fillInCell
mov	DWORD PTR tv172[ebp], 4
jmp	SHORT $LN28@fillInCell
mov	DWORD PTR tv172[ebp], 3
mov	dl, BYTE PTR tv172[ebp]
mov	BYTE PTR _eType$2[ebp], dl
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pgnoPtrmap$1[ebp]
push	ecx
movzx	edx, BYTE PTR _eType$2[ebp]
push	edx
mov	eax, DWORD PTR _pgnoOvfl$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPut
add	esp, 20					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@fillInCell
mov	edx, DWORD PTR _pOvfl$[ebp]
push	edx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@fillInCell
mov	eax, DWORD PTR _pToRelease$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN23@fillInCell
mov	ecx, DWORD PTR _pgnoOvfl$[ebp]
push	ecx
mov	edx, DWORD PTR _pPrior$[ebp]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _pToRelease$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	ecx, DWORD PTR _pOvfl$[ebp]
mov	DWORD PTR _pToRelease$[ebp], ecx
mov	edx, DWORD PTR _pOvfl$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _pPrior$[ebp], eax
push	0
mov	ecx, DWORD PTR _pPrior$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, 1
shl	edx, 2
mov	eax, DWORD PTR _pOvfl$[ebp]
add	edx, DWORD PTR [eax+56]
mov	DWORD PTR _pPayload$[ebp], edx
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+36]
sub	edx, 4
mov	DWORD PTR _spaceLeft$[ebp], edx
mov	eax, DWORD PTR _nPayload$[ebp]
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
cmp	ecx, DWORD PTR _spaceLeft$[ebp]
jle	SHORT $LN5@fillInCell
mov	edx, DWORD PTR _spaceLeft$[ebp]
mov	DWORD PTR _n$[ebp], edx
cmp	DWORD PTR _nSrc$[ebp], 0
jle	SHORT $LN4@fillInCell
mov	eax, DWORD PTR _n$[ebp]
cmp	eax, DWORD PTR _nSrc$[ebp]
jle	SHORT $LN3@fillInCell
mov	ecx, DWORD PTR _nSrc$[ebp]
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _pPayload$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN2@fillInCell
mov	edx, DWORD PTR _n$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pPayload$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _nPayload$[ebp]
sub	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR _nPayload$[ebp], ecx
mov	edx, DWORD PTR _pPayload$[ebp]
add	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR _pPayload$[ebp], edx
mov	eax, DWORD PTR _pSrc$[ebp]
add	eax, DWORD PTR _n$[ebp]
mov	DWORD PTR _pSrc$[ebp], eax
mov	ecx, DWORD PTR _nSrc$[ebp]
sub	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR _nSrc$[ebp], ecx
mov	edx, DWORD PTR _spaceLeft$[ebp]
sub	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR _spaceLeft$[ebp], edx
cmp	DWORD PTR _nSrc$[ebp], 0
jne	SHORT $LN1@fillInCell
mov	eax, DWORD PTR _nData$[ebp]
mov	DWORD PTR _nSrc$[ebp], eax
mov	ecx, DWORD PTR _pData$[ebp]
mov	DWORD PTR _pSrc$[ebp], ecx
jmp	$LN15@fillInCell
mov	edx, DWORD PTR _pToRelease$[ebp]
push	edx
call	_releasePage
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_clearCell PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pBt$[ebp], ecx
lea	edx, DWORD PTR _info$[ebp]
push	edx
mov	eax, DWORD PTR _pCell$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_btreeParseCellPtr
add	esp, 12					
movzx	edx, WORD PTR _info$[ebp+24]
test	edx, edx
jne	SHORT $LN13@clearCell
xor	eax, eax
jmp	$LN14@clearCell
movzx	eax, WORD PTR _info$[ebp+24]
mov	ecx, DWORD PTR _pCell$[ebp]
lea	edx, DWORD PTR [ecx+eax+3]
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+18]
mov	eax, DWORD PTR _pPage$[ebp]
add	ecx, DWORD PTR [eax+56]
cmp	edx, ecx
jbe	SHORT $LN12@clearCell
push	56609					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN14@clearCell
movzx	ecx, WORD PTR _info$[ebp+24]
add	ecx, DWORD PTR _pCell$[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _ovflPgno$[ebp], eax
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+36]
sub	eax, 4
mov	DWORD PTR _ovflPageSize$[ebp], eax
movzx	ecx, WORD PTR _info$[ebp+22]
mov	edx, DWORD PTR _info$[ebp+16]
sub	edx, ecx
mov	eax, DWORD PTR _ovflPageSize$[ebp]
lea	eax, DWORD PTR [edx+eax-1]
xor	edx, edx
div	DWORD PTR _ovflPageSize$[ebp]
mov	DWORD PTR _nOvfl$[ebp], eax
mov	ecx, DWORD PTR _nOvfl$[ebp]
mov	DWORD PTR tv94[ebp], ecx
mov	edx, DWORD PTR _nOvfl$[ebp]
sub	edx, 1
mov	DWORD PTR _nOvfl$[ebp], edx
cmp	DWORD PTR tv94[ebp], 0
je	$LN10@clearCell
mov	DWORD PTR _iNext$1[ebp], 0
mov	DWORD PTR _pOvfl$2[ebp], 0
cmp	DWORD PTR _ovflPgno$[ebp], 2
jb	SHORT $LN8@clearCell
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreePagecount
add	esp, 4
cmp	DWORD PTR _ovflPgno$[ebp], eax
jbe	SHORT $LN9@clearCell
push	56623					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN14@clearCell
cmp	DWORD PTR _nOvfl$[ebp], 0
je	SHORT $LN7@clearCell
lea	ecx, DWORD PTR _iNext$1[ebp]
push	ecx
lea	edx, DWORD PTR _pOvfl$2[ebp]
push	edx
mov	eax, DWORD PTR _ovflPgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_getOverflowPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@clearCell
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN14@clearCell
cmp	DWORD PTR _pOvfl$2[ebp], 0
jne	SHORT $LN4@clearCell
mov	edx, DWORD PTR _ovflPgno$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreePageLookup
add	esp, 8
mov	DWORD PTR _pOvfl$2[ebp], eax
cmp	DWORD PTR _pOvfl$2[ebp], 0
je	SHORT $LN5@clearCell
mov	ecx, DWORD PTR _pOvfl$2[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerPageRefcount
add	esp, 4
cmp	eax, 1
je	SHORT $LN5@clearCell
push	56643					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@clearCell
mov	eax, DWORD PTR _ovflPgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pOvfl$2[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_freePage2
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _pOvfl$2[ebp], 0
je	SHORT $LN2@clearCell
mov	eax, DWORD PTR _pOvfl$2[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerUnref
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@clearCell
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN14@clearCell
mov	edx, DWORD PTR _iNext$1[ebp]
mov	DWORD PTR _ovflPgno$[ebp], edx
jmp	$LN11@clearCell
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_freePage PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pRC$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN2@freePage
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+72]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
call	_freePage2
add	esp, 12					
mov	ecx, DWORD PTR _pRC$[ebp]
mov	DWORD PTR [ecx], eax
pop	ebp
ret	0
ENDP
_freePage2 PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _pTrunk$[ebp], 0
mov	DWORD PTR _iTrunk$[ebp], 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pPage1$[ebp], ecx
cmp	DWORD PTR _pMemPage$[ebp], 0
je	SHORT $LN18@freePage2
mov	edx, DWORD PTR _pMemPage$[ebp]
mov	DWORD PTR _pPage$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerRef
add	esp, 4
jmp	SHORT $LN17@freePage2
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreePageLookup
add	esp, 8
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pPage1$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN16@freePage2
jmp	$freepage_out$21
mov	eax, 1
imul	ecx, eax, 36
mov	edx, DWORD PTR _pPage1$[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nFree$[ebp], eax
mov	eax, DWORD PTR _nFree$[ebp]
add	eax, 1
push	eax
mov	ecx, 1
imul	edx, ecx, 36
mov	eax, DWORD PTR _pPage1$[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
and	edx, 4
je	SHORT $LN15@freePage2
cmp	DWORD PTR _pPage$[ebp], 0
jne	SHORT $LN12@freePage2
push	0
lea	eax, DWORD PTR _pPage$[ebp]
push	eax
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN13@freePage2
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@freePage2
jmp	$freepage_out$21
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	ecx, DWORD PTR [eax+32]
push	ecx
push	0
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	SHORT $LN11@freePage2
lea	eax, DWORD PTR _rc$[ebp]
push	eax
push	0
push	2
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapPut
add	esp, 20					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@freePage2
jmp	$freepage_out$21
cmp	DWORD PTR _nFree$[ebp], 0
je	$LN9@freePage2
mov	eax, 1
shl	eax, 5
mov	ecx, DWORD PTR _pPage1$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iTrunk$[ebp], eax
push	0
lea	edx, DWORD PTR _pTrunk$[ebp]
push	edx
mov	eax, DWORD PTR _iTrunk$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@freePage2
jmp	$freepage_out$21
mov	edx, 1
shl	edx, 2
mov	eax, DWORD PTR _pTrunk$[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nLeaf$1[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+36]
shr	edx, 2
sub	edx, 2
cmp	DWORD PTR _nLeaf$1[ebp], edx
jbe	SHORT $LN7@freePage2
push	56528					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$freepage_out$21
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+36]
shr	ecx, 2
sub	ecx, 8
cmp	DWORD PTR _nLeaf$1[ebp], ecx
jae	$LN9@freePage2
mov	edx, DWORD PTR _pTrunk$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@freePage2
mov	ecx, DWORD PTR _nLeaf$1[ebp]
add	ecx, 1
push	ecx
mov	edx, 1
shl	edx, 2
mov	eax, DWORD PTR _pTrunk$[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pTrunk$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR _nLeaf$1[ebp]
lea	edx, DWORD PTR [eax+ecx*4+8]
push	edx
call	_sqlite3Put4byte
add	esp, 8
cmp	DWORD PTR _pPage$[ebp], 0
je	SHORT $LN4@freePage2
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 4
jne	SHORT $LN4@freePage2
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerDontWrite
add	esp, 4
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeSetHasContent
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$freepage_out$21
cmp	DWORD PTR _pPage$[ebp], 0
jne	SHORT $LN3@freePage2
push	0
lea	eax, DWORD PTR _pPage$[ebp]
push	eax
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@freePage2
jmp	SHORT $freepage_out$21
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@freePage2
jmp	SHORT $freepage_out$21
mov	edx, DWORD PTR _iTrunk$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
push	0
mov	edx, 1
shl	edx, 2
mov	eax, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, 1
shl	edx, 5
mov	eax, DWORD PTR _pPage1$[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
cmp	DWORD PTR _pPage$[ebp], 0
je	SHORT $LN1@freePage2
mov	ecx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [ecx], 0
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _pTrunk$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_moveToRightmost PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _pPage$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@moveToRigh
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	SHORT $LN2@moveToRigh
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+56]
lea	ecx, DWORD PTR [eax+ecx+8]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	dx, WORD PTR [edx+16]
mov	WORD PTR [ecx+eax*2+86], dx
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@moveToRigh
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@moveToRigh
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+16]
sub	eax, 1
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [ecx+edx*2+86], ax
xor	edx, edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+50], dx
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, -3					
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+80], dl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_moveToLeftmost PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	esi
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN1@moveToLeft
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	$LN1@moveToLeft
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+18]
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, WORD PTR [edx+eax*2+86]
mov	edx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [edx+64]
lea	eax, DWORD PTR [edx+eax*2]
mov	edx, 1
imul	edx, edx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	edx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [edx+84]
mov	esi, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [esi+edx*2+86]
mov	esi, DWORD PTR _pPage$[ebp]
mov	esi, DWORD PTR [esi+64]
lea	edx, DWORD PTR [esi+edx*2]
mov	esi, 1
shl	esi, 0
movzx	edx, BYTE PTR [edx+esi]
or	eax, edx
and	ecx, eax
mov	eax, DWORD PTR _pPage$[ebp]
add	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN2@moveToLeft
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_moveToRoot PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 3
jl	SHORT $LN16@moveToRoot
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
cmp	eax, 4
jne	SHORT $LN15@moveToRoot
mov	ecx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [ecx+76]
jmp	$LN17@moveToRoot
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_sqlite3BtreeClearCursor
add	esp, 4
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
test	ecx, ecx
jl	SHORT $LN14@moveToRoot
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
test	eax, eax
je	SHORT $LN12@moveToRoot
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+128]
mov	DWORD PTR tv86[ebp], ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	ax, WORD PTR [edx+84]
sub	ax, 1
mov	ecx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [ecx+84], ax
mov	edx, DWORD PTR tv86[ebp]
push	edx
call	_releasePage
add	esp, 4
jmp	SHORT $LN13@moveToRoot
jmp	$LN11@moveToRoot
mov	eax, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [eax+68], 0
jne	SHORT $LN10@moveToRoot
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+81], 0
xor	eax, eax
jmp	$LN17@moveToRoot
jmp	SHORT $LN11@moveToRoot
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, 1
jne	SHORT $LN19@moveToRoot
mov	DWORD PTR tv128[ebp], 2
jmp	SHORT $LN20@moveToRoot
mov	DWORD PTR tv128[ebp], 0
mov	ecx, DWORD PTR tv128[ebp]
push	ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pCur$[ebp]
lea	edx, DWORD PTR [ecx+eax+128]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_getAndInitPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@moveToRoot
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+81], 0
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@moveToRoot
xor	eax, eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [ecx+84], ax
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+eax+128]
mov	DWORD PTR _pRoot$[ebp], edx
mov	eax, DWORD PTR _pRoot$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN6@moveToRoot
mov	edx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [edx+16], 0
jne	SHORT $LN21@moveToRoot
mov	DWORD PTR tv152[ebp], 1
jmp	SHORT $LN22@moveToRoot
mov	DWORD PTR tv152[ebp], 0
mov	eax, DWORD PTR _pRoot$[ebp]
movzx	ecx, BYTE PTR [eax+2]
cmp	DWORD PTR tv152[ebp], ecx
je	SHORT $LN7@moveToRoot
push	55559					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN17@moveToRoot
mov	edx, 2
imul	eax, edx, 0
xor	ecx, ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+eax+86], cx
xor	eax, eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [ecx+50], ax
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, -15				
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+80], al
mov	edx, DWORD PTR _pRoot$[ebp]
movzx	eax, WORD PTR [edx+16]
test	eax, eax
jle	SHORT $LN5@moveToRoot
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+81], 1
jmp	SHORT $LN4@moveToRoot
mov	edx, DWORD PTR _pRoot$[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
jne	SHORT $LN3@moveToRoot
mov	ecx, DWORD PTR _pRoot$[ebp]
cmp	DWORD PTR [ecx+72], 1
je	SHORT $LN2@moveToRoot
push	55570					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN17@moveToRoot
mov	edx, DWORD PTR _pRoot$[ebp]
movzx	eax, BYTE PTR [edx+5]
mov	ecx, DWORD PTR _pRoot$[ebp]
mov	edx, DWORD PTR [ecx+56]
lea	eax, DWORD PTR [edx+eax+8]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _subpage$1[ebp], eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+81], 1
mov	edx, DWORD PTR _subpage$1[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN4@moveToRoot
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+81], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_moveToParent PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
push	eax
call	_releasePage
add	esp, 4
mov	ecx, DWORD PTR _pCur$[ebp]
mov	dx, WORD PTR [ecx+84]
sub	dx, 1
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+84], dx
xor	ecx, ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+50], cx
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
and	ecx, -7					
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+80], cl
pop	ebp
ret	0
ENDP
_moveToChild PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$[ebp], eax
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
cmp	edx, 19					
jl	SHORT $LN4@moveToChil
push	55422					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN5@moveToChil
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
and	ecx, 1
jne	SHORT $LN7@moveToChil
mov	DWORD PTR tv77[ebp], 2
jmp	SHORT $LN8@moveToChil
mov	DWORD PTR tv77[ebp], 0
mov	edx, DWORD PTR tv77[ebp]
push	edx
lea	eax, DWORD PTR _pNewPage$[ebp]
push	eax
mov	ecx, DWORD PTR _newPgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_getAndInitPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@moveToChil
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN5@moveToChil
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR _pNewPage$[ebp]
mov	DWORD PTR [ecx+eax*4+132], edx
xor	eax, eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+ecx*2+88], ax
mov	eax, DWORD PTR _pCur$[ebp]
mov	cx, WORD PTR [eax+84]
add	cx, 1
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+84], cx
xor	eax, eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [ecx+50], ax
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, -7					
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+80], al
mov	edx, DWORD PTR _pNewPage$[ebp]
movzx	eax, WORD PTR [edx+16]
cmp	eax, 1
jl	SHORT $LN1@moveToChil
mov	ecx, DWORD PTR _pNewPage$[ebp]
movzx	edx, BYTE PTR [ecx+2]
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [ecx+eax*4+128]
movzx	ecx, BYTE PTR [eax+2]
cmp	edx, ecx
je	SHORT $LN2@moveToChil
push	55434					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN5@moveToChil
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_fetchPayload PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+46]
mov	edx, DWORD PTR _pAmt$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _pCur$[ebp]
movzx	eax, WORD PTR [eax+44]
mov	ecx, DWORD PTR _pCur$[ebp]
add	eax, DWORD PTR [ecx+32]
pop	ebp
ret	0
ENDP
_accessPayload PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _iIdx$[ebp], 0
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pBt$[ebp], edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_getCellInfo
add	esp, 4
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+44]
mov	eax, DWORD PTR _pCur$[ebp]
add	edx, DWORD PTR [eax+32]
mov	DWORD PTR _aPayload$[ebp], edx
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+2]
test	edx, edx
je	SHORT $LN26@accessPayl
mov	DWORD PTR tv80[ebp], 0
jmp	SHORT $LN27@accessPayl
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR tv80[ebp], ecx
mov	edx, DWORD PTR tv80[ebp]
mov	DWORD PTR _nKey$[ebp], edx
mov	eax, DWORD PTR _offset$[ebp]
add	eax, DWORD PTR _amt$[ebp]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR _nKey$[ebp]
add	edx, DWORD PTR [ecx+36]
cmp	eax, edx
ja	SHORT $LN22@accessPayl
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+46]
add	ecx, DWORD PTR _aPayload$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	edx, DWORD PTR _pBt$[ebp]
add	eax, DWORD PTR [edx+36]
cmp	ecx, eax
jbe	SHORT $LN23@accessPayl
push	55144					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN24@accessPayl
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+46]
cmp	DWORD PTR _offset$[ebp], ecx
jae	SHORT $LN21@accessPayl
mov	edx, DWORD PTR _amt$[ebp]
mov	DWORD PTR _a$5[ebp], edx
mov	eax, DWORD PTR _a$5[ebp]
add	eax, DWORD PTR _offset$[ebp]
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+46]
cmp	eax, edx
jbe	SHORT $LN20@accessPayl
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+46]
sub	ecx, DWORD PTR _offset$[ebp]
mov	DWORD PTR _a$5[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _eOp$[ebp]
and	ecx, 1
push	ecx
mov	edx, DWORD PTR _a$5[ebp]
push	edx
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _aPayload$[ebp]
add	ecx, DWORD PTR _offset$[ebp]
push	ecx
call	_copyPayload
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _offset$[ebp], 0
mov	edx, DWORD PTR _pBuf$[ebp]
add	edx, DWORD PTR _a$5[ebp]
mov	DWORD PTR _pBuf$[ebp], edx
mov	eax, DWORD PTR _amt$[ebp]
sub	eax, DWORD PTR _a$5[ebp]
mov	DWORD PTR _amt$[ebp], eax
jmp	SHORT $LN19@accessPayl
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+46]
mov	eax, DWORD PTR _offset$[ebp]
sub	eax, edx
mov	DWORD PTR _offset$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN18@accessPayl
cmp	DWORD PTR _amt$[ebp], 0
jbe	$LN18@accessPayl
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+36]
sub	edx, 4
mov	DWORD PTR _ovflSize$7[ebp], edx
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+46]
add	ecx, DWORD PTR _aPayload$[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nextPage$6[ebp], eax
cmp	DWORD PTR _eOp$[ebp], 2
je	$LN17@accessPayl
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, 4
jne	$LN17@accessPayl
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+46]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+40]
sub	ecx, edx
mov	edx, DWORD PTR _ovflSize$7[ebp]
lea	eax, DWORD PTR [ecx+edx-1]
xor	edx, edx
div	DWORD PTR _ovflSize$7[ebp]
mov	DWORD PTR _nOvfl$3[ebp], eax
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR _nOvfl$3[ebp]
cmp	ecx, DWORD PTR [eax+72]
jle	SHORT $LN16@accessPayl
mov	edx, DWORD PTR _nOvfl$3[ebp]
shl	edx, 1
shl	edx, 2
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _aNew$1[ebp], eax
cmp	DWORD PTR _aNew$1[ebp], 0
jne	SHORT $LN15@accessPayl
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN16@accessPayl
mov	edx, DWORD PTR _nOvfl$3[ebp]
shl	edx, 1
mov	eax, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [eax+72], edx
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR _aNew$1[ebp]
mov	DWORD PTR [ecx+20], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN17@accessPayl
mov	eax, DWORD PTR _nOvfl$3[ebp]
shl	eax, 2
push	eax
push	0
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
or	ecx, 4
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+80], cl
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
and	ecx, 4
je	SHORT $LN12@accessPayl
mov	eax, DWORD PTR _offset$[ebp]
xor	edx, edx
div	DWORD PTR _ovflSize$7[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [edx+20]
cmp	DWORD PTR [ecx+eax*4], 0
je	SHORT $LN12@accessPayl
mov	eax, DWORD PTR _offset$[ebp]
xor	edx, edx
div	DWORD PTR _ovflSize$7[ebp]
mov	DWORD PTR _iIdx$[ebp], eax
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR _iIdx$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _nextPage$6[ebp], edx
mov	eax, DWORD PTR _offset$[ebp]
xor	edx, edx
div	DWORD PTR _ovflSize$7[ebp]
mov	DWORD PTR _offset$[ebp], edx
jmp	SHORT $LN11@accessPayl
mov	eax, DWORD PTR _iIdx$[ebp]
add	eax, 1
mov	DWORD PTR _iIdx$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN18@accessPayl
cmp	DWORD PTR _amt$[ebp], 0
jbe	$LN18@accessPayl
cmp	DWORD PTR _nextPage$6[ebp], 0
je	$LN18@accessPayl
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, 4
je	SHORT $LN8@accessPayl
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR _iIdx$[ebp]
mov	eax, DWORD PTR _nextPage$6[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	ecx, DWORD PTR _offset$[ebp]
cmp	ecx, DWORD PTR _ovflSize$7[ebp]
jb	SHORT $LN7@accessPayl
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR _iIdx$[ebp]
cmp	DWORD PTR [eax+ecx*4+4], 0
je	SHORT $LN6@accessPayl
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR _iIdx$[ebp]
mov	edx, DWORD PTR [eax+ecx*4+4]
mov	DWORD PTR _nextPage$6[ebp], edx
jmp	SHORT $LN5@accessPayl
lea	eax, DWORD PTR _nextPage$6[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _nextPage$6[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_getOverflowPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _offset$[ebp]
sub	eax, DWORD PTR _ovflSize$7[ebp]
mov	DWORD PTR _offset$[ebp], eax
jmp	$LN4@accessPayl
mov	ecx, DWORD PTR _amt$[ebp]
mov	DWORD PTR _a$4[ebp], ecx
mov	edx, DWORD PTR _a$4[ebp]
add	edx, DWORD PTR _offset$[ebp]
cmp	edx, DWORD PTR _ovflSize$7[ebp]
jbe	SHORT $LN3@accessPayl
mov	eax, DWORD PTR _ovflSize$7[ebp]
sub	eax, DWORD PTR _offset$[ebp]
mov	DWORD PTR _a$4[ebp], eax
mov	ecx, DWORD PTR _eOp$[ebp]
and	ecx, 1
jne	SHORT $LN28@accessPayl
mov	DWORD PTR tv248[ebp], 2
jmp	SHORT $LN29@accessPayl
mov	DWORD PTR tv248[ebp], 0
mov	edx, DWORD PTR tv248[ebp]
push	edx
lea	eax, DWORD PTR _pDbPage$2[ebp]
push	eax
mov	ecx, DWORD PTR _nextPage$6[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@accessPayl
mov	ecx, DWORD PTR _pDbPage$2[ebp]
push	ecx
call	_sqlite3PagerGetData
add	esp, 4
mov	DWORD PTR _aPayload$[ebp], eax
mov	edx, DWORD PTR _aPayload$[ebp]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nextPage$6[ebp], eax
mov	eax, DWORD PTR _pDbPage$2[ebp]
push	eax
mov	ecx, DWORD PTR _eOp$[ebp]
and	ecx, 1
push	ecx
mov	edx, DWORD PTR _a$4[ebp]
push	edx
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _aPayload$[ebp]
lea	eax, DWORD PTR [edx+ecx+4]
push	eax
call	_copyPayload
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pDbPage$2[ebp]
push	ecx
call	_sqlite3PagerUnref
add	esp, 4
mov	DWORD PTR _offset$[ebp], 0
mov	edx, DWORD PTR _amt$[ebp]
sub	edx, DWORD PTR _a$4[ebp]
mov	DWORD PTR _amt$[ebp], edx
mov	eax, DWORD PTR _pBuf$[ebp]
add	eax, DWORD PTR _a$4[ebp]
mov	DWORD PTR _pBuf$[ebp], eax
jmp	$LN10@accessPayl
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@accessPayl
cmp	DWORD PTR _amt$[ebp], 0
jbe	SHORT $LN1@accessPayl
push	55292					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN24@accessPayl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_copyPayload PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _eOp$[ebp], 0
je	SHORT $LN3@copyPayloa
mov	eax, DWORD PTR _pDbPage$[ebp]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN2@copyPayloa
mov	eax, DWORD PTR _rc$1[ebp]
jmp	SHORT $LN4@copyPayloa
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuf$[ebp]
push	edx
mov	eax, DWORD PTR _pPayload$[ebp]
push	eax
call	_memcpy
add	esp, 12					
jmp	SHORT $LN1@copyPayloa
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _pPayload$[ebp]
push	edx
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
call	_memcpy
add	esp, 12					
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getOverflowPage PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	DWORD PTR _next$[ebp], 0
mov	DWORD PTR _pPage$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	$LN10@getOverflo
mov	edx, DWORD PTR _ovfl$[ebp]
add	edx, 1
mov	DWORD PTR _iGuess$2[ebp], edx
mov	eax, DWORD PTR _iGuess$2[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _iGuess$2[ebp]
je	SHORT $LN7@getOverflo
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _iGuess$2[ebp], eax
jne	SHORT $LN8@getOverflo
mov	edx, DWORD PTR _iGuess$2[ebp]
add	edx, 1
mov	DWORD PTR _iGuess$2[ebp], edx
jmp	SHORT $LN9@getOverflo
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreePagecount
add	esp, 4
cmp	DWORD PTR _iGuess$2[ebp], eax
ja	SHORT $LN10@getOverflo
lea	ecx, DWORD PTR _pgno$1[ebp]
push	ecx
lea	edx, DWORD PTR _eType$3[ebp]
push	edx
mov	eax, DWORD PTR _iGuess$2[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapGet
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@getOverflo
movzx	edx, BYTE PTR _eType$3[ebp]
cmp	edx, 4
jne	SHORT $LN10@getOverflo
mov	eax, DWORD PTR _pgno$1[ebp]
cmp	eax, DWORD PTR _ovfl$[ebp]
jne	SHORT $LN10@getOverflo
mov	ecx, DWORD PTR _iGuess$2[ebp]
mov	DWORD PTR _next$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 101		
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@getOverflo
cmp	DWORD PTR _ppPage$[ebp], 0
jne	SHORT $LN13@getOverflo
mov	DWORD PTR tv92[ebp], 2
jmp	SHORT $LN14@getOverflo
mov	DWORD PTR tv92[ebp], 0
mov	edx, DWORD PTR tv92[ebp]
push	edx
lea	eax, DWORD PTR _pPage$[ebp]
push	eax
mov	ecx, DWORD PTR _ovfl$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@getOverflo
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _next$[ebp], eax
mov	edx, DWORD PTR _pPgnoNext$[ebp]
mov	eax, DWORD PTR _next$[ebp]
mov	DWORD PTR [edx], eax
cmp	DWORD PTR _ppPage$[ebp], 0
je	SHORT $LN2@getOverflo
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN1@getOverflo
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 101		
jne	SHORT $LN15@getOverflo
mov	DWORD PTR tv136[ebp], 0
jmp	SHORT $LN16@getOverflo
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR tv136[ebp], ecx
mov	eax, DWORD PTR tv136[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getCellInfo PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+50]
test	ecx, ecx
jne	SHORT $LN3@getCellInf
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	DWORD PTR _iPage$1[ebp], eax
mov	ecx, DWORD PTR _pCur$[ebp]
add	ecx, 24					
push	ecx
mov	edx, DWORD PTR _iPage$1[ebp]
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+edx*2+86]
push	ecx
mov	edx, DWORD PTR _iPage$1[ebp]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+128]
push	ecx
call	_btreeParseCell
add	esp, 12					
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
or	eax, 2
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+80], al
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeCursor PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
cmp	DWORD PTR _wrFlag$[ebp], 0
je	SHORT $LN3@btreeCurso
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, 1
je	SHORT $LN3@btreeCurso
mov	eax, 8
jmp	$LN4@btreeCurso
cmp	DWORD PTR _iTable$[ebp], 1
jne	SHORT $LN2@btreeCurso
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreePagecount
add	esp, 4
test	eax, eax
jne	SHORT $LN2@btreeCurso
mov	DWORD PTR _iTable$[ebp], 0
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR _iTable$[ebp]
mov	DWORD PTR [edx+68], eax
or	ecx, -1
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+84], cx
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR _pKeyInfo$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	cl, BYTE PTR _wrFlag$[ebp]
mov	BYTE PTR [eax+80], cl
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN1@btreeCurso
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+81], 0
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeEndTransaction PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [ecx+19], 0
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+8]
test	eax, eax
jle	SHORT $LN4@btreeEndTr
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+144], 1
jle	SHORT $LN4@btreeEndTr
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_downgradeAllSharedCacheTableLocks
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+8], 1
jmp	SHORT $LN5@btreeEndTr
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+8]
test	edx, edx
je	SHORT $LN2@btreeEndTr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_clearAllSharedCacheTableLocks
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+40]
sub	edx, 1
mov	eax, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [eax+40], edx
mov	ecx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [ecx+40], 0
jne	SHORT $LN2@btreeEndTr
mov	edx, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [edx+20], 0
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+8], 0
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_unlockBtreeIfUnused
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_autoVacuumCommit PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_invalidateAllOverflowCache
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	$LN11@autoVacuum
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreePagecount
add	esp, 4
mov	DWORD PTR _nOrig$4[ebp], eax
mov	eax, DWORD PTR _nOrig$4[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _nOrig$4[ebp]
je	SHORT $LN9@autoVacuum
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _nOrig$4[ebp], eax
jne	SHORT $LN10@autoVacuum
push	54366					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN12@autoVacuum
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, 1
imul	edx, ecx, 36
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nFree$1[ebp], eax
mov	eax, DWORD PTR _nFree$1[ebp]
push	eax
mov	ecx, DWORD PTR _nOrig$4[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_finalDbSize
add	esp, 12					
mov	DWORD PTR _nFin$3[ebp], eax
mov	eax, DWORD PTR _nFin$3[ebp]
cmp	eax, DWORD PTR _nOrig$4[ebp]
jbe	SHORT $LN8@autoVacuum
push	54371					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN12@autoVacuum
mov	ecx, DWORD PTR _nFin$3[ebp]
cmp	ecx, DWORD PTR _nOrig$4[ebp]
jae	SHORT $LN7@autoVacuum
push	0
push	0
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_saveAllCursors
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _nOrig$4[ebp]
mov	DWORD PTR _iFree$2[ebp], eax
jmp	SHORT $LN6@autoVacuum
mov	ecx, DWORD PTR _iFree$2[ebp]
sub	ecx, 1
mov	DWORD PTR _iFree$2[ebp], ecx
mov	edx, DWORD PTR _iFree$2[ebp]
cmp	edx, DWORD PTR _nFin$3[ebp]
jbe	SHORT $LN4@autoVacuum
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@autoVacuum
push	1
mov	eax, DWORD PTR _iFree$2[ebp]
push	eax
mov	ecx, DWORD PTR _nFin$3[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_incrVacuumStep
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN5@autoVacuum
cmp	DWORD PTR _rc$[ebp], 101		
je	SHORT $LN2@autoVacuum
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN3@autoVacuum
cmp	DWORD PTR _nFree$1[ebp], 0
jbe	SHORT $LN3@autoVacuum
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
push	0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, 1
shl	edx, 5
add	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
push	0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, 1
imul	eax, edx, 36
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _nFin$3[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, 1
imul	edx, ecx, 28
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [eax+19], 1
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _nFin$3[ebp]
mov	DWORD PTR [ecx+44], edx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@autoVacuum
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerRollback
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_finalDbSize PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	esi
mov	eax, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [eax+36]
xor	edx, edx
mov	ecx, 5
div	ecx
mov	DWORD PTR _nEntry$[ebp], eax
mov	esi, DWORD PTR _nFree$[ebp]
sub	esi, DWORD PTR _nOrig$[ebp]
mov	edx, DWORD PTR _nOrig$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPageno
add	esp, 8
add	esi, DWORD PTR _nEntry$[ebp]
add	eax, esi
xor	edx, edx
div	DWORD PTR _nEntry$[ebp]
mov	DWORD PTR _nPtrmap$[ebp], eax
mov	ecx, DWORD PTR _nOrig$[ebp]
sub	ecx, DWORD PTR _nFree$[ebp]
sub	ecx, DWORD PTR _nPtrmap$[ebp]
mov	DWORD PTR _nFin$[ebp], ecx
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _nOrig$[ebp], eax
jbe	SHORT $LN3@finalDbSiz
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _nFin$[ebp], eax
jae	SHORT $LN3@finalDbSiz
mov	edx, DWORD PTR _nFin$[ebp]
sub	edx, 1
mov	DWORD PTR _nFin$[ebp], edx
mov	eax, DWORD PTR _nFin$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _nFin$[ebp]
je	SHORT $LN1@finalDbSiz
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _nFin$[ebp], eax
jne	SHORT $LN2@finalDbSiz
mov	edx, DWORD PTR _nFin$[ebp]
sub	edx, 1
mov	DWORD PTR _nFin$[ebp], edx
jmp	SHORT $LN3@finalDbSiz
mov	eax, DWORD PTR _nFin$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_incrVacuumStep PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, DWORD PTR _iLastPg$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _iLastPg$[ebp]
je	$LN20@incrVacuum
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _iLastPg$[ebp], eax
je	$LN20@incrVacuum
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, 1
imul	edx, ecx, 36
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nFreeList$[ebp], eax
cmp	DWORD PTR _nFreeList$[ebp], 0
jne	SHORT $LN19@incrVacuum
mov	eax, 101				
jmp	$LN21@incrVacuum
lea	eax, DWORD PTR _iPtrPage$2[ebp]
push	eax
lea	ecx, DWORD PTR _eType$9[ebp]
push	ecx
mov	edx, DWORD PTR _iLastPg$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapGet
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN18@incrVacuum
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN21@incrVacuum
movzx	ecx, BYTE PTR _eType$9[ebp]
cmp	ecx, 1
jne	SHORT $LN17@incrVacuum
push	54203					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN21@incrVacuum
movzx	edx, BYTE PTR _eType$9[ebp]
cmp	edx, 2
jne	SHORT $LN16@incrVacuum
cmp	DWORD PTR _bCommit$[ebp], 0
jne	SHORT $LN15@incrVacuum
push	1
mov	eax, DWORD PTR _iLastPg$[ebp]
push	eax
lea	ecx, DWORD PTR _iFreePg$1[ebp]
push	ecx
lea	edx, DWORD PTR _pFreePg$4[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@incrVacuum
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN21@incrVacuum
mov	ecx, DWORD PTR _pFreePg$4[ebp]
push	ecx
call	_releasePage
add	esp, 4
jmp	$LN20@incrVacuum
mov	BYTE PTR _eMode$8[ebp], 0
mov	DWORD PTR _iNear$6[ebp], 0
push	0
lea	edx, DWORD PTR _pLastPg$7[ebp]
push	edx
mov	eax, DWORD PTR _iLastPg$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@incrVacuum
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN21@incrVacuum
cmp	DWORD PTR _bCommit$[ebp], 0
jne	SHORT $LN10@incrVacuum
mov	BYTE PTR _eMode$8[ebp], 2
mov	edx, DWORD PTR _nFin$[ebp]
mov	DWORD PTR _iNear$6[ebp], edx
movzx	eax, BYTE PTR _eMode$8[ebp]
push	eax
mov	ecx, DWORD PTR _iNear$6[ebp]
push	ecx
lea	edx, DWORD PTR _iFreePg$5[ebp]
push	edx
lea	eax, DWORD PTR _pFreePg$3[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_allocateBtreePage
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@incrVacuum
mov	edx, DWORD PTR _pLastPg$7[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN21@incrVacuum
mov	eax, DWORD PTR _pFreePg$3[ebp]
push	eax
call	_releasePage
add	esp, 4
cmp	DWORD PTR _bCommit$[ebp], 0
je	SHORT $LN8@incrVacuum
mov	ecx, DWORD PTR _iFreePg$5[ebp]
cmp	ecx, DWORD PTR _nFin$[ebp]
ja	SHORT $LN10@incrVacuum
mov	edx, DWORD PTR _bCommit$[ebp]
push	edx
mov	eax, DWORD PTR _iFreePg$5[ebp]
push	eax
mov	ecx, DWORD PTR _iPtrPage$2[ebp]
push	ecx
movzx	edx, BYTE PTR _eType$9[ebp]
push	edx
mov	eax, DWORD PTR _pLastPg$7[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_relocatePage
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pLastPg$7[ebp]
push	edx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN20@incrVacuum
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN21@incrVacuum
cmp	DWORD PTR _bCommit$[ebp], 0
jne	SHORT $LN4@incrVacuum
mov	eax, DWORD PTR _iLastPg$[ebp]
sub	eax, 1
mov	DWORD PTR _iLastPg$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _iLastPg$[ebp], eax
je	SHORT $LN3@incrVacuum
mov	edx, DWORD PTR _iLastPg$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _iLastPg$[ebp]
je	SHORT $LN3@incrVacuum
mov	ecx, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [ecx+19], 1
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _iLastPg$[ebp]
mov	DWORD PTR [edx+44], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_allocateBtreePage PROC
push	ebp
mov	ebp, esp
sub	esp, 92					
mov	DWORD PTR _pTrunk$[ebp], 0
mov	DWORD PTR _pPrevTrunk$[ebp], 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pPage1$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreePagecount
add	esp, 4
mov	DWORD PTR _mxPage$[ebp], eax
mov	eax, 1
imul	ecx, eax, 36
mov	edx, DWORD PTR _pPage1$[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	eax, DWORD PTR _n$[ebp]
cmp	eax, DWORD PTR _mxPage$[ebp]
jb	SHORT $LN70@allocateBt
push	56167					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN71@allocateBt
cmp	DWORD PTR _n$[ebp], 0
jbe	$LN69@allocateBt
mov	BYTE PTR _searchList$14[ebp], 0
movzx	ecx, BYTE PTR _eMode$[ebp]
cmp	ecx, 1
jne	SHORT $LN68@allocateBt
mov	edx, DWORD PTR _nearby$[ebp]
cmp	edx, DWORD PTR _mxPage$[ebp]
ja	SHORT $LN67@allocateBt
push	0
lea	eax, DWORD PTR _eType$13[ebp]
push	eax
mov	ecx, DWORD PTR _nearby$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapGet
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN66@allocateBt
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN71@allocateBt
movzx	eax, BYTE PTR _eType$13[ebp]
cmp	eax, 2
jne	SHORT $LN67@allocateBt
mov	BYTE PTR _searchList$14[ebp], 1
jmp	SHORT $LN64@allocateBt
movzx	ecx, BYTE PTR _eMode$[ebp]
cmp	ecx, 2
jne	SHORT $LN64@allocateBt
mov	BYTE PTR _searchList$14[ebp], 1
mov	edx, DWORD PTR _pPage1$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN62@allocateBt
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN71@allocateBt
mov	ecx, DWORD PTR _n$[ebp]
sub	ecx, 1
push	ecx
mov	edx, 1
imul	eax, edx, 36
mov	ecx, DWORD PTR _pPage1$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pTrunk$[ebp]
mov	DWORD PTR _pPrevTrunk$[ebp], edx
cmp	DWORD PTR _pPrevTrunk$[ebp], 0
je	SHORT $LN58@allocateBt
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pPrevTrunk$[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iTrunk$11[ebp], eax
jmp	SHORT $LN57@allocateBt
mov	eax, 1
shl	eax, 5
mov	ecx, DWORD PTR _pPage1$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iTrunk$11[ebp], eax
mov	edx, DWORD PTR _iTrunk$11[ebp]
cmp	edx, DWORD PTR _mxPage$[ebp]
jbe	SHORT $LN56@allocateBt
push	56216					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN55@allocateBt
push	0
lea	eax, DWORD PTR _pTrunk$[ebp]
push	eax
mov	ecx, DWORD PTR _iTrunk$11[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN54@allocateBt
mov	DWORD PTR _pTrunk$[ebp], 0
jmp	$end_allocate_page$79
mov	eax, 1
shl	eax, 2
mov	ecx, DWORD PTR _pTrunk$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _k$[ebp], eax
cmp	DWORD PTR _k$[ebp], 0
jne	SHORT $LN53@allocateBt
movzx	edx, BYTE PTR _searchList$14[ebp]
test	edx, edx
jne	SHORT $LN53@allocateBt
mov	eax, DWORD PTR _pTrunk$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN52@allocateBt
jmp	$end_allocate_page$79
mov	edx, DWORD PTR _pPgno$[ebp]
mov	eax, DWORD PTR _iTrunk$11[ebp]
mov	DWORD PTR [edx], eax
push	4
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _pTrunk$[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
mov	ecx, 1
shl	ecx, 5
mov	edx, DWORD PTR _pPage1$[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _ppPage$[ebp]
mov	ecx, DWORD PTR _pTrunk$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR _pTrunk$[ebp], 0
jmp	$LN51@allocateBt
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+36]
shr	eax, 2
sub	eax, 2
cmp	DWORD PTR _k$[ebp], eax
jbe	SHORT $LN50@allocateBt
push	56244					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$end_allocate_page$79
jmp	$LN51@allocateBt
movzx	ecx, BYTE PTR _searchList$14[ebp]
test	ecx, ecx
je	$LN48@allocateBt
mov	edx, DWORD PTR _nearby$[ebp]
cmp	edx, DWORD PTR _iTrunk$11[ebp]
je	SHORT $LN47@allocateBt
mov	eax, DWORD PTR _iTrunk$11[ebp]
cmp	eax, DWORD PTR _nearby$[ebp]
jae	$LN48@allocateBt
movzx	ecx, BYTE PTR _eMode$[ebp]
cmp	ecx, 2
jne	$LN48@allocateBt
mov	edx, DWORD PTR _pPgno$[ebp]
mov	eax, DWORD PTR _iTrunk$11[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	edx, DWORD PTR _pTrunk$[ebp]
mov	DWORD PTR [ecx], edx
mov	BYTE PTR _searchList$14[ebp], 0
mov	eax, DWORD PTR _pTrunk$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN46@allocateBt
jmp	$end_allocate_page$79
cmp	DWORD PTR _k$[ebp], 0
jne	SHORT $LN45@allocateBt
cmp	DWORD PTR _pPrevTrunk$[ebp], 0
jne	SHORT $LN44@allocateBt
push	4
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTrunk$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
mov	edx, 1
shl	edx, 5
mov	eax, DWORD PTR _pPage1$[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN43@allocateBt
mov	ecx, DWORD PTR _pPrevTrunk$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN42@allocateBt
jmp	$end_allocate_page$79
push	4
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTrunk$[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pPrevTrunk$[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_memcpy
add	esp, 12					
jmp	$LN41@allocateBt
mov	eax, 1
shl	eax, 3
mov	ecx, DWORD PTR _pTrunk$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iNewTrunk$6[ebp], eax
mov	edx, DWORD PTR _iNewTrunk$6[ebp]
cmp	edx, DWORD PTR _mxPage$[ebp]
jbe	SHORT $LN40@allocateBt
push	56278					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$end_allocate_page$79
push	0
lea	eax, DWORD PTR _pNewTrunk$9[ebp]
push	eax
mov	ecx, DWORD PTR _iNewTrunk$6[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN39@allocateBt
jmp	$end_allocate_page$79
mov	eax, DWORD PTR _pNewTrunk$9[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN38@allocateBt
mov	edx, DWORD PTR _pNewTrunk$9[ebp]
push	edx
call	_releasePage
add	esp, 4
jmp	$end_allocate_page$79
push	4
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTrunk$[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pNewTrunk$9[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _k$[ebp]
sub	eax, 1
push	eax
mov	ecx, 1
shl	ecx, 2
mov	edx, DWORD PTR _pNewTrunk$9[ebp]
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _k$[ebp]
lea	ecx, DWORD PTR [eax*4-4]
push	ecx
mov	edx, 1
imul	eax, edx, 12
mov	ecx, DWORD PTR _pTrunk$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
mov	edx, 1
shl	edx, 3
mov	eax, DWORD PTR _pNewTrunk$9[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pNewTrunk$9[ebp]
push	ecx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _pPrevTrunk$[ebp], 0
jne	SHORT $LN37@allocateBt
mov	edx, DWORD PTR _iNewTrunk$6[ebp]
push	edx
mov	eax, 1
shl	eax, 5
mov	ecx, DWORD PTR _pPage1$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Put4byte
add	esp, 8
jmp	SHORT $LN41@allocateBt
mov	edx, DWORD PTR _pPrevTrunk$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN35@allocateBt
jmp	$end_allocate_page$79
mov	ecx, DWORD PTR _iNewTrunk$6[ebp]
push	ecx
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _pPrevTrunk$[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	DWORD PTR _pTrunk$[ebp], 0
jmp	$LN51@allocateBt
cmp	DWORD PTR _k$[ebp], 0
jbe	$LN51@allocateBt
mov	edx, DWORD PTR _pTrunk$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _aData$10[ebp], eax
cmp	DWORD PTR _nearby$[ebp], 0
jbe	$LN32@allocateBt
mov	DWORD PTR _closest$7[ebp], 0
movzx	ecx, BYTE PTR _eMode$[ebp]
cmp	ecx, 2
jne	SHORT $LN31@allocateBt
mov	DWORD PTR _i$12[ebp], 0
jmp	SHORT $LN30@allocateBt
mov	edx, DWORD PTR _i$12[ebp]
add	edx, 1
mov	DWORD PTR _i$12[ebp], edx
mov	eax, DWORD PTR _i$12[ebp]
cmp	eax, DWORD PTR _k$[ebp]
jae	SHORT $LN28@allocateBt
mov	ecx, DWORD PTR _i$12[ebp]
mov	edx, DWORD PTR _aData$10[ebp]
lea	eax, DWORD PTR [edx+ecx*4+8]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iPage$8[ebp], eax
mov	ecx, DWORD PTR _iPage$8[ebp]
cmp	ecx, DWORD PTR _nearby$[ebp]
ja	SHORT $LN27@allocateBt
mov	edx, DWORD PTR _i$12[ebp]
mov	DWORD PTR _closest$7[ebp], edx
jmp	SHORT $LN28@allocateBt
jmp	SHORT $LN29@allocateBt
jmp	SHORT $LN26@allocateBt
mov	eax, 1
shl	eax, 3
add	eax, DWORD PTR _aData$10[ebp]
push	eax
call	_sqlite3Get4byte
add	esp, 4
sub	eax, DWORD PTR _nearby$[ebp]
push	eax
call	_sqlite3AbsInt32
add	esp, 4
mov	DWORD PTR _dist$3[ebp], eax
mov	DWORD PTR _i$12[ebp], 1
jmp	SHORT $LN25@allocateBt
mov	ecx, DWORD PTR _i$12[ebp]
add	ecx, 1
mov	DWORD PTR _i$12[ebp], ecx
mov	edx, DWORD PTR _i$12[ebp]
cmp	edx, DWORD PTR _k$[ebp]
jae	SHORT $LN26@allocateBt
mov	eax, DWORD PTR _i$12[ebp]
mov	ecx, DWORD PTR _aData$10[ebp]
lea	edx, DWORD PTR [ecx+eax*4+8]
push	edx
call	_sqlite3Get4byte
add	esp, 4
sub	eax, DWORD PTR _nearby$[ebp]
push	eax
call	_sqlite3AbsInt32
add	esp, 4
mov	DWORD PTR _d2$4[ebp], eax
mov	eax, DWORD PTR _d2$4[ebp]
cmp	eax, DWORD PTR _dist$3[ebp]
jge	SHORT $LN22@allocateBt
mov	ecx, DWORD PTR _i$12[ebp]
mov	DWORD PTR _closest$7[ebp], ecx
mov	edx, DWORD PTR _d2$4[ebp]
mov	DWORD PTR _dist$3[ebp], edx
jmp	SHORT $LN24@allocateBt
jmp	SHORT $LN21@allocateBt
mov	DWORD PTR _closest$7[ebp], 0
mov	eax, DWORD PTR _closest$7[ebp]
mov	ecx, DWORD PTR _aData$10[ebp]
lea	edx, DWORD PTR [ecx+eax*4+8]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _iPage$8[ebp], eax
mov	eax, DWORD PTR _iPage$8[ebp]
cmp	eax, DWORD PTR _mxPage$[ebp]
jbe	SHORT $LN20@allocateBt
push	56343					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$end_allocate_page$79
movzx	ecx, BYTE PTR _searchList$14[ebp]
test	ecx, ecx
je	SHORT $LN18@allocateBt
mov	edx, DWORD PTR _iPage$8[ebp]
cmp	edx, DWORD PTR _nearby$[ebp]
je	SHORT $LN18@allocateBt
mov	eax, DWORD PTR _iPage$8[ebp]
cmp	eax, DWORD PTR _nearby$[ebp]
jae	$LN51@allocateBt
movzx	ecx, BYTE PTR _eMode$[ebp]
cmp	ecx, 2
jne	$LN51@allocateBt
mov	edx, DWORD PTR _pPgno$[ebp]
mov	eax, DWORD PTR _iPage$8[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pTrunk$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN16@allocateBt
jmp	$end_allocate_page$79
mov	eax, DWORD PTR _k$[ebp]
sub	eax, 1
cmp	DWORD PTR _closest$7[ebp], eax
jae	SHORT $LN15@allocateBt
push	4
mov	ecx, DWORD PTR _k$[ebp]
mov	edx, DWORD PTR _aData$10[ebp]
lea	eax, DWORD PTR [edx+ecx*4+4]
push	eax
mov	ecx, DWORD PTR _closest$7[ebp]
mov	edx, DWORD PTR _aData$10[ebp]
lea	eax, DWORD PTR [edx+ecx*4+8]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _k$[ebp]
sub	ecx, 1
push	ecx
mov	edx, 1
shl	edx, 2
add	edx, DWORD PTR _aData$10[ebp]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _pPgno$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetHasContent
add	esp, 8
test	eax, eax
jne	SHORT $LN73@allocateBt
mov	DWORD PTR tv347[ebp], 1
jmp	SHORT $LN74@allocateBt
mov	DWORD PTR tv347[ebp], 0
cmp	DWORD PTR tv347[ebp], 0
je	SHORT $LN75@allocateBt
mov	DWORD PTR tv349[ebp], 1
jmp	SHORT $LN76@allocateBt
mov	DWORD PTR tv349[ebp], 0
mov	eax, DWORD PTR tv349[ebp]
mov	DWORD PTR _noContent$1[ebp], eax
mov	ecx, DWORD PTR _noContent$1[ebp]
push	ecx
mov	edx, DWORD PTR _ppPage$[ebp]
push	edx
mov	eax, DWORD PTR _pPgno$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN14@allocateBt
mov	eax, DWORD PTR _ppPage$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@allocateBt
mov	eax, DWORD PTR _ppPage$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_releasePage
add	esp, 4
mov	BYTE PTR _searchList$14[ebp], 0
mov	edx, DWORD PTR _pPrevTrunk$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	DWORD PTR _pPrevTrunk$[ebp], 0
movzx	eax, BYTE PTR _searchList$14[ebp]
test	eax, eax
jne	$LN61@allocateBt
jmp	$end_allocate_page$79
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+19]
test	edx, edx
jne	SHORT $LN77@allocateBt
mov	DWORD PTR tv367[ebp], 1
jmp	SHORT $LN78@allocateBt
mov	DWORD PTR tv367[ebp], 0
mov	eax, DWORD PTR tv367[ebp]
mov	DWORD PTR _bNoContent$2[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@allocateBt
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN71@allocateBt
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+44]
add	edx, 1
mov	eax, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [eax+44], edx
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+44], eax
jne	SHORT $LN10@allocateBt
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+44]
add	ecx, 1
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+44], ecx
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	$LN9@allocateBt
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPageno
add	esp, 8
mov	edx, DWORD PTR _pBt$[ebp]
cmp	eax, DWORD PTR [edx+44]
jne	$LN9@allocateBt
mov	DWORD PTR _pPg$5[ebp], 0
mov	eax, DWORD PTR _bNoContent$2[ebp]
push	eax
lea	ecx, DWORD PTR _pPg$5[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@allocateBt
mov	edx, DWORD PTR _pPg$5[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPg$5[ebp]
push	ecx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@allocateBt
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN71@allocateBt
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+44]
add	eax, 1
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+44], eax
jne	SHORT $LN9@allocateBt
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+44]
add	ecx, 1
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+44], ecx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+56]
add	ecx, 28					
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pPgno$[ebp]
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _bNoContent$2[ebp]
push	edx
mov	eax, DWORD PTR _ppPage$[ebp]
push	eax
mov	ecx, DWORD PTR _pPgno$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@allocateBt
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN71@allocateBt
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $end_allocate_page$79
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _pTrunk$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	ecx, DWORD PTR _pPrevTrunk$[ebp]
push	ecx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@allocateBt
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerPageRefcount
add	esp, 4
cmp	eax, 1
jle	SHORT $LN2@allocateBt
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_releasePage
add	esp, 4
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	DWORD PTR [ecx], 0
push	56442					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN71@allocateBt
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR [edx]
mov	BYTE PTR [eax], 0
jmp	SHORT $LN1@allocateBt
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	DWORD PTR [ecx], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_relocatePage PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pDbPage$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR _iDbPage$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pPager$[ebp], eax
mov	ecx, DWORD PTR _isCommit$[ebp]
push	ecx
mov	edx, DWORD PTR _iFreePage$[ebp]
push	edx
mov	eax, DWORD PTR _pDbPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_sqlite3PagerMovepage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@relocatePa
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN12@relocatePa
mov	eax, DWORD PTR _pDbPage$[ebp]
mov	ecx, DWORD PTR _iFreePage$[ebp]
mov	DWORD PTR [eax+72], ecx
movzx	edx, BYTE PTR _eType$[ebp]
cmp	edx, 5
je	SHORT $LN9@relocatePa
movzx	eax, BYTE PTR _eType$[ebp]
cmp	eax, 1
jne	SHORT $LN10@relocatePa
mov	ecx, DWORD PTR _pDbPage$[ebp]
push	ecx
call	_setChildPtrmaps
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@relocatePa
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN12@relocatePa
jmp	SHORT $LN7@relocatePa
mov	edx, DWORD PTR _pDbPage$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nextOvfl$1[ebp], eax
cmp	DWORD PTR _nextOvfl$1[ebp], 0
je	SHORT $LN7@relocatePa
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _iFreePage$[ebp]
push	edx
push	4
mov	eax, DWORD PTR _nextOvfl$1[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPut
add	esp, 20					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@relocatePa
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN12@relocatePa
movzx	edx, BYTE PTR _eType$[ebp]
cmp	edx, 1
je	$LN4@relocatePa
push	0
lea	eax, DWORD PTR _pPtrPage$[ebp]
push	eax
mov	ecx, DWORD PTR _iPtrPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@relocatePa
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN12@relocatePa
mov	eax, DWORD PTR _pPtrPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@relocatePa
mov	edx, DWORD PTR _pPtrPage$[ebp]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN12@relocatePa
movzx	eax, BYTE PTR _eType$[ebp]
push	eax
mov	ecx, DWORD PTR _iFreePage$[ebp]
push	ecx
mov	edx, DWORD PTR _iDbPage$[ebp]
push	edx
mov	eax, DWORD PTR _pPtrPage$[ebp]
push	eax
call	_modifyPagePointer
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPtrPage$[ebp]
push	ecx
call	_releasePage
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@relocatePa
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _iPtrPage$[ebp]
push	eax
movzx	ecx, BYTE PTR _eType$[ebp]
push	ecx
mov	edx, DWORD PTR _iFreePage$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPut
add	esp, 20					
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_modifyPagePointer PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
push	esi
movzx	eax, BYTE PTR _eType$[ebp]
cmp	eax, 4
jne	SHORT $LN13@modifyPage
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3Get4byte
add	esp, 4
cmp	eax, DWORD PTR _iFrom$[ebp]
je	SHORT $LN12@modifyPage
push	54035					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN14@modifyPage
mov	eax, DWORD PTR _iTo$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
jmp	$LN11@modifyPage
mov	eax, DWORD PTR _pPage$[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR _isInitOrig$5[ebp], cl
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_btreeInitPage
add	esp, 4
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+16]
mov	DWORD PTR _nCell$2[ebp], ecx
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN10@modifyPage
mov	edx, DWORD PTR _i$3[ebp]
add	edx, 1
mov	DWORD PTR _i$3[ebp], edx
mov	eax, DWORD PTR _i$3[ebp]
cmp	eax, DWORD PTR _nCell$2[ebp]
jge	$LN8@modifyPage
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _i$3[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _i$3[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pCell$4[ebp], edx
movzx	edx, BYTE PTR _eType$[ebp]
cmp	edx, 3
jne	SHORT $LN7@modifyPage
lea	eax, DWORD PTR _info$1[ebp]
push	eax
mov	ecx, DWORD PTR _pCell$4[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_btreeParseCellPtr
add	esp, 12					
movzx	eax, WORD PTR _info$1[ebp+24]
test	eax, eax
je	SHORT $LN6@modifyPage
movzx	ecx, WORD PTR _info$1[ebp+24]
mov	edx, DWORD PTR _pCell$4[ebp]
lea	eax, DWORD PTR [edx+ecx+3]
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	ecx, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [ecx+56]
cmp	eax, edx
ja	SHORT $LN6@modifyPage
movzx	edx, WORD PTR _info$1[ebp+24]
add	edx, DWORD PTR _pCell$4[ebp]
push	edx
call	_sqlite3Get4byte
add	esp, 4
cmp	DWORD PTR _iFrom$[ebp], eax
jne	SHORT $LN6@modifyPage
mov	eax, DWORD PTR _iTo$[ebp]
push	eax
movzx	ecx, WORD PTR _info$1[ebp+24]
add	ecx, DWORD PTR _pCell$4[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
jmp	SHORT $LN8@modifyPage
jmp	SHORT $LN5@modifyPage
mov	edx, DWORD PTR _pCell$4[ebp]
push	edx
call	_sqlite3Get4byte
add	esp, 4
cmp	eax, DWORD PTR _iFrom$[ebp]
jne	SHORT $LN5@modifyPage
mov	eax, DWORD PTR _iTo$[ebp]
push	eax
mov	ecx, DWORD PTR _pCell$4[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
jmp	SHORT $LN8@modifyPage
jmp	$LN9@modifyPage
mov	edx, DWORD PTR _i$3[ebp]
cmp	edx, DWORD PTR _nCell$2[ebp]
jne	SHORT $LN3@modifyPage
movzx	eax, BYTE PTR _eType$[ebp]
cmp	eax, 5
jne	SHORT $LN1@modifyPage
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
lea	edx, DWORD PTR [ecx+edx+8]
push	edx
call	_sqlite3Get4byte
add	esp, 4
cmp	eax, DWORD PTR _iFrom$[ebp]
je	SHORT $LN2@modifyPage
push	54069					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN14@modifyPage
mov	eax, DWORD PTR _iTo$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
lea	edx, DWORD PTR [ecx+edx+8]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	cl, BYTE PTR _isInitOrig$5[ebp]
mov	BYTE PTR [eax], cl
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setChildPtrmaps PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
push	esi
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR _isInitOrig$[ebp], al
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _pgno$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_btreeInitPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@setChildPt
jmp	$set_child_ptrmaps_out$9
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+16]
mov	DWORD PTR _nCell$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@setChildPt
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nCell$[ebp]
jge	$LN3@setChildPt
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+18]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	ecx, DWORD PTR _i$[ebp]
lea	edx, DWORD PTR [edx+ecx*2]
mov	ecx, 1
imul	ecx, ecx, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	ecx, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [ecx+64]
mov	esi, DWORD PTR _i$[ebp]
lea	ecx, DWORD PTR [ecx+esi*2]
mov	esi, 1
shl	esi, 0
movzx	ecx, BYTE PTR [ecx+esi]
or	edx, ecx
and	eax, edx
mov	edx, DWORD PTR _pPage$[ebp]
add	eax, DWORD PTR [edx+56]
mov	DWORD PTR _pCell$3[ebp], eax
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pCell$3[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_ptrmapPutOvflPtr
add	esp, 12					
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
jne	SHORT $LN2@setChildPt
mov	edx, DWORD PTR _pCell$3[ebp]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _childPgno$2[ebp], eax
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
push	5
mov	edx, DWORD PTR _childPgno$2[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPut
add	esp, 20					
jmp	$LN4@setChildPt
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	SHORT $set_child_ptrmaps_out$9
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+56]
lea	ecx, DWORD PTR [eax+ecx+8]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _childPgno$1[ebp], eax
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
push	5
mov	ecx, DWORD PTR _childPgno$1[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapPut
add	esp, 20					
mov	eax, DWORD PTR _pPage$[ebp]
mov	cl, BYTE PTR _isInitOrig$[ebp]
mov	BYTE PTR [eax], cl
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_newDatabase PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax+44], 0
jbe	SHORT $LN2@newDatabas
xor	eax, eax
jmp	$LN3@newDatabas
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pP1$[ebp], edx
mov	eax, DWORD PTR _pP1$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _data$[ebp], ecx
mov	edx, DWORD PTR _pP1$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@newDatabas
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN3@newDatabas
push	16					
push	OFFSET _zMagicHeader
mov	ecx, DWORD PTR _data$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+32]
shr	eax, 8
and	eax, 255				
mov	ecx, 1
shl	ecx, 4
mov	edx, DWORD PTR _data$[ebp]
mov	BYTE PTR [edx+ecx], al
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+32]
shr	ecx, 16					
and	ecx, 255				
mov	edx, 1
imul	eax, edx, 17
mov	edx, DWORD PTR _data$[ebp]
mov	BYTE PTR [edx+eax], cl
mov	eax, 1
imul	ecx, eax, 18
mov	edx, DWORD PTR _data$[ebp]
mov	BYTE PTR [edx+ecx], 1
mov	eax, 1
imul	ecx, eax, 19
mov	edx, DWORD PTR _data$[ebp]
mov	BYTE PTR [edx+ecx], 1
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [eax+32]
sub	edx, DWORD PTR [ecx+36]
mov	eax, 1
imul	ecx, eax, 20
mov	eax, DWORD PTR _data$[ebp]
mov	BYTE PTR [eax+ecx], dl
mov	ecx, 1
imul	edx, ecx, 21
mov	eax, DWORD PTR _data$[ebp]
mov	BYTE PTR [eax+edx], 64			
mov	ecx, 1
imul	edx, ecx, 22
mov	eax, DWORD PTR _data$[ebp]
mov	BYTE PTR [eax+edx], 32			
mov	ecx, 1
imul	edx, ecx, 23
mov	eax, DWORD PTR _data$[ebp]
mov	BYTE PTR [eax+edx], 32			
push	76					
push	0
mov	ecx, 1
imul	edx, ecx, 24
add	edx, DWORD PTR _data$[ebp]
push	edx
call	_memset
add	esp, 12					
push	13					
mov	eax, DWORD PTR _pP1$[ebp]
push	eax
call	_zeroPage
add	esp, 8
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
or	edx, 2
mov	eax, DWORD PTR _pBt$[ebp]
mov	WORD PTR [eax+22], dx
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
push	edx
mov	eax, 1
imul	ecx, eax, 52
add	ecx, DWORD PTR _data$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, BYTE PTR [edx+18]
push	eax
mov	ecx, 1
shl	ecx, 6
add	ecx, DWORD PTR _data$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+44], 1
mov	eax, 1
imul	ecx, eax, 31
mov	edx, DWORD PTR _data$[ebp]
mov	BYTE PTR [edx+ecx], 1
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_unlockBtreeIfUnused PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+20]
test	ecx, ecx
jne	SHORT $LN2@unlockBtre
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN2@unlockBtre
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_releasePage
add	esp, 4
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+12], 0
pop	ebp
ret	0
ENDP
_lockBtree PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	DWORD PTR _nPageFile$[ebp], 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerSharedLock
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN20@lockBtree
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN21@lockBtree
push	0
lea	edx, DWORD PTR _pPage1$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN19@lockBtree
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN21@lockBtree
mov	ecx, DWORD PTR _pPage1$[ebp]
mov	edx, DWORD PTR [ecx+56]
add	edx, 28					
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nPageHeader$[ebp], eax
mov	eax, DWORD PTR _nPageHeader$[ebp]
mov	DWORD PTR _nPage$[ebp], eax
lea	ecx, DWORD PTR _nPageFile$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3PagerPagecount
add	esp, 8
cmp	DWORD PTR _nPage$[ebp], 0
je	SHORT $LN17@lockBtree
push	4
mov	ecx, DWORD PTR _pPage1$[ebp]
mov	edx, DWORD PTR [ecx+56]
add	edx, 92					
push	edx
mov	eax, DWORD PTR _pPage1$[ebp]
mov	ecx, DWORD PTR [eax+56]
add	ecx, 24					
push	ecx
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN18@lockBtree
mov	edx, DWORD PTR _nPageFile$[ebp]
mov	DWORD PTR _nPage$[ebp], edx
cmp	DWORD PTR _nPage$[ebp], 0
jle	$LN16@lockBtree
mov	eax, DWORD PTR _pPage1$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _page1$4[ebp], ecx
mov	DWORD PTR _rc$[ebp], 26			
push	16					
push	OFFSET _zMagicHeader
mov	edx, DWORD PTR _page1$4[ebp]
push	edx
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN15@lockBtree
jmp	$page1_init_failed$27
mov	eax, 1
imul	ecx, eax, 18
mov	edx, DWORD PTR _page1$4[ebp]
movzx	eax, BYTE PTR [edx+ecx]
cmp	eax, 2
jle	SHORT $LN14@lockBtree
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
or	edx, 1
mov	eax, DWORD PTR _pBt$[ebp]
mov	WORD PTR [eax+22], dx
mov	ecx, 1
imul	edx, ecx, 19
mov	eax, DWORD PTR _page1$4[ebp]
movzx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 2
jle	SHORT $LN13@lockBtree
jmp	$page1_init_failed$27
mov	edx, 1
imul	eax, edx, 19
mov	ecx, DWORD PTR _page1$4[ebp]
movzx	edx, BYTE PTR [ecx+eax]
cmp	edx, 2
jne	SHORT $LN12@lockBtree
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 16					
jne	SHORT $LN12@lockBtree
mov	DWORD PTR _isOpen$1[ebp], 0
lea	edx, DWORD PTR _isOpen$1[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerOpenWal
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@lockBtree
jmp	$page1_init_failed$27
jmp	SHORT $LN10@lockBtree
cmp	DWORD PTR _isOpen$1[ebp], 0
jne	SHORT $LN10@lockBtree
mov	edx, DWORD PTR _pPage1$[ebp]
push	edx
call	_releasePage
add	esp, 4
xor	eax, eax
jmp	$LN21@lockBtree
mov	DWORD PTR _rc$[ebp], 26			
push	3
push	OFFSET $SG94212
mov	eax, 1
imul	ecx, eax, 21
add	ecx, DWORD PTR _page1$4[ebp]
push	ecx
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN8@lockBtree
jmp	$page1_init_failed$27
mov	edx, 1
shl	edx, 4
mov	eax, DWORD PTR _page1$4[ebp]
movzx	ecx, BYTE PTR [eax+edx]
shl	ecx, 8
mov	edx, 1
imul	eax, edx, 17
mov	edx, DWORD PTR _page1$4[ebp]
movzx	eax, BYTE PTR [edx+eax]
shl	eax, 16					
or	ecx, eax
mov	DWORD PTR _pageSize$3[ebp], ecx
mov	ecx, DWORD PTR _pageSize$3[ebp]
sub	ecx, 1
and	ecx, DWORD PTR _pageSize$3[ebp]
jne	SHORT $LN6@lockBtree
cmp	DWORD PTR _pageSize$3[ebp], 65536	
ja	SHORT $LN6@lockBtree
cmp	DWORD PTR _pageSize$3[ebp], 256		
ja	SHORT $LN7@lockBtree
jmp	$page1_init_failed$27
mov	edx, 1
imul	eax, edx, 20
mov	ecx, DWORD PTR _page1$4[ebp]
movzx	edx, BYTE PTR [ecx+eax]
mov	eax, DWORD PTR _pageSize$3[ebp]
sub	eax, edx
mov	DWORD PTR _usableSize$2[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _pageSize$3[ebp]
cmp	edx, DWORD PTR [ecx+32]
je	SHORT $LN5@lockBtree
mov	eax, DWORD PTR _pPage1$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _usableSize$2[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _pageSize$3[ebp]
mov	DWORD PTR [eax+32], ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_freeTempSpace
add	esp, 4
mov	eax, DWORD PTR _pageSize$3[ebp]
sub	eax, DWORD PTR _usableSize$2[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
add	ecx, 32					
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3PagerSetPagesize
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN21@lockBtree
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+24]
and	eax, 65536				
jne	SHORT $LN4@lockBtree
mov	ecx, DWORD PTR _nPage$[ebp]
cmp	ecx, DWORD PTR _nPageFile$[ebp]
jle	SHORT $LN4@lockBtree
push	53650					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$page1_init_failed$27
cmp	DWORD PTR _usableSize$2[ebp], 480	
jae	SHORT $LN3@lockBtree
jmp	$page1_init_failed$27
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _pageSize$3[ebp]
mov	DWORD PTR [edx+32], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _usableSize$2[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, 1
imul	ecx, eax, 52
add	ecx, DWORD PTR _page1$4[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
test	eax, eax
je	SHORT $LN23@lockBtree
mov	DWORD PTR tv212[ebp], 1
jmp	SHORT $LN24@lockBtree
mov	DWORD PTR tv212[ebp], 0
mov	edx, DWORD PTR _pBt$[ebp]
mov	al, BYTE PTR tv212[ebp]
mov	BYTE PTR [edx+17], al
mov	ecx, 1
shl	ecx, 6
add	ecx, DWORD PTR _page1$4[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
test	eax, eax
je	SHORT $LN25@lockBtree
mov	DWORD PTR tv220[ebp], 1
jmp	SHORT $LN26@lockBtree
mov	DWORD PTR tv220[ebp], 0
mov	edx, DWORD PTR _pBt$[ebp]
mov	al, BYTE PTR tv220[ebp]
mov	BYTE PTR [edx+18], al
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [ecx+36]
sub	eax, 12					
shl	eax, 6
xor	edx, edx
mov	ecx, 255				
div	ecx
sub	eax, 23					
mov	edx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [edx+24], ax
mov	eax, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [eax+36]
sub	eax, 12					
shl	eax, 5
xor	edx, edx
mov	ecx, 255				
div	ecx
sub	eax, 23					
mov	edx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [edx+26], ax
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+36]
sub	ecx, 35					
mov	edx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [eax+36]
sub	eax, 12					
shl	eax, 5
xor	edx, edx
mov	ecx, 255				
div	ecx
sub	eax, 23					
mov	edx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [edx+30], ax
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+24]
cmp	ecx, 127				
jle	SHORT $LN2@lockBtree
mov	edx, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [edx+21], 127			
jmp	SHORT $LN1@lockBtree
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dl, BYTE PTR [ecx+24]
mov	BYTE PTR [eax+21], dl
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _pPage1$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _nPage$[ebp]
mov	DWORD PTR [edx+44], eax
xor	eax, eax
jmp	SHORT $LN21@lockBtree
mov	ecx, DWORD PTR _pPage1$[ebp]
push	ecx
call	_releasePage
add	esp, 4
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_freeTempSpace PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	_sqlite3PageFree
add	esp, 4
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+80], 0
pop	ebp
ret	0
ENDP
_allocateTempSpace PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax+80], 0
jne	SHORT $LN3@allocateTe
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
call	_sqlite3PageMalloc
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+80], eax
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+80], 0
je	SHORT $LN3@allocateTe
push	4
push	0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
call	_memset
add	esp, 12					
pop	ebp
ret	0
ENDP
_removeFromSharingList PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _removed$[ebp], 0
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _pMaster$[ebp], eax
mov	eax, DWORD PTR _pMaster$[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+64]
sub	edx, 1
mov	eax, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [eax+64], edx
mov	ecx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [ecx+64], 0
jg	SHORT $LN7@removeFrom
mov	edx, DWORD PTR _sqlite3SharedCacheList
cmp	edx, DWORD PTR _pBt$[ebp]
jne	SHORT $LN6@removeFrom
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _sqlite3SharedCacheList, ecx
jmp	SHORT $LN5@removeFrom
mov	edx, DWORD PTR _sqlite3SharedCacheList
mov	DWORD PTR _pList$[ebp], edx
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN3@removeFrom
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+68]
cmp	ecx, DWORD PTR _pBt$[ebp]
je	SHORT $LN3@removeFrom
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _pList$[ebp], eax
jmp	SHORT $LN4@removeFrom
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN5@removeFrom
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR [ecx+68], eax
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN1@removeFrom
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
call	_sqlite3_mutex_free
add	esp, 4
mov	DWORD PTR _removed$[ebp], 1
mov	ecx, DWORD PTR _pMaster$[ebp]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _removed$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeInvokeBusyHandler PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pArg$[ebp]
mov	DWORD PTR _pBt$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+4]
add	edx, 436				
push	edx
call	_sqlite3InvokeBusyHandler
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pageReinit PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pData$[ebp]
push	eax
call	_sqlite3PagerGetExtra
add	esp, 4
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN3@pageReinit
mov	eax, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _pData$[ebp]
push	ecx
call	_sqlite3PagerPageRefcount
add	esp, 4
cmp	eax, 1
jle	SHORT $LN3@pageReinit
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_btreeInitPage
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getAndInitPage PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_btreePagecount
add	esp, 4
cmp	DWORD PTR _pgno$[ebp], eax
jbe	SHORT $LN4@getAndInit
push	52811					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@getAndInit
mov	ecx, DWORD PTR _bReadonly$[ebp]
push	ecx
mov	edx, DWORD PTR _ppPage$[ebp]
push	edx
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreeGetPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@getAndInit
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR [edx]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN3@getAndInit
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_btreeInitPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@getAndInit
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreePagecount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [eax+44]
pop	ebp
ret	0
ENDP
_btreePageLookup PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerLookup
add	esp, 8
mov	DWORD PTR _pDbPage$[ebp], eax
cmp	DWORD PTR _pDbPage$[ebp], 0
je	SHORT $LN1@btreePageL
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pDbPage$[ebp]
push	edx
call	_btreePageFromDbPage
add	esp, 12					
jmp	SHORT $LN2@btreePageL
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeGetPage PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _flags$[ebp]
push	eax
lea	ecx, DWORD PTR _pDbPage$[ebp]
push	ecx
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@btreeGetPa
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN2@btreeGetPa
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pDbPage$[ebp]
push	ecx
call	_btreePageFromDbPage
add	esp, 12					
mov	edx, DWORD PTR _ppPage$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreePageFromDbPage PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pDbPage$[ebp]
push	eax
call	_sqlite3PagerGetExtra
add	esp, 4
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pDbPage$[ebp]
push	ecx
call	_sqlite3PagerGetData
add	esp, 4
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+56], eax
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _pDbPage$[ebp]
mov	DWORD PTR [eax+68], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+52], eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR _pgno$[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR _pPage$[ebp]
cmp	DWORD PTR [eax+72], 1
jne	SHORT $LN3@btreePageF
mov	DWORD PTR tv75[ebp], 100		
jmp	SHORT $LN4@btreePageF
mov	DWORD PTR tv75[ebp], 0
mov	ecx, DWORD PTR _pPage$[ebp]
mov	dl, BYTE PTR tv75[ebp]
mov	BYTE PTR [ecx+5], dl
mov	eax, DWORD PTR _pPage$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_zeroPage PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _data$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pBt$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	dl, BYTE PTR [ecx+5]
mov	BYTE PTR _hdr$[ebp], dl
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 4
je	SHORT $LN1@zeroPage
movzx	edx, BYTE PTR _hdr$[ebp]
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+36]
sub	ecx, edx
push	ecx
push	0
movzx	edx, BYTE PTR _hdr$[ebp]
add	edx, DWORD PTR _data$[ebp]
push	edx
call	_memset
add	esp, 12					
movzx	eax, BYTE PTR _hdr$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
mov	dl, BYTE PTR _flags$[ebp]
mov	BYTE PTR [ecx+eax], dl
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 8
jne	SHORT $LN4@zeroPage
mov	DWORD PTR tv86[ebp], 12			
jmp	SHORT $LN5@zeroPage
mov	DWORD PTR tv86[ebp], 8
movzx	ecx, BYTE PTR _hdr$[ebp]
add	ecx, DWORD PTR tv86[ebp]
mov	WORD PTR _first$[ebp], cx
push	4
push	0
movzx	edx, BYTE PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
push	ecx
call	_memset
add	esp, 12					
movzx	edx, BYTE PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
mov	BYTE PTR [eax+edx+7], 0
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+36]
shr	edx, 8
movzx	eax, BYTE PTR _hdr$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [ecx+eax+5]
mov	ecx, 1
imul	ecx, ecx, 0
mov	BYTE PTR [eax+ecx], dl
movzx	edx, BYTE PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	al, BYTE PTR [eax+36]
mov	BYTE PTR [ecx+edx], al
movzx	ecx, WORD PTR _first$[ebp]
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+36]
sub	eax, ecx
mov	ecx, DWORD PTR _pPage$[ebp]
mov	WORD PTR [ecx+14], ax
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_decodeFlags
add	esp, 8
mov	ecx, DWORD PTR _pPage$[ebp]
mov	dx, WORD PTR _first$[ebp]
mov	WORD PTR [ecx+12], dx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR [eax+36]
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+60], ecx
movzx	eax, WORD PTR _first$[ebp]
add	eax, DWORD PTR _data$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [ecx+64], eax
mov	edx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [edx+1], 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+32]
sub	ecx, 1
mov	edx, DWORD PTR _pPage$[ebp]
mov	WORD PTR [edx+18], cx
xor	eax, eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	WORD PTR [ecx+16], ax
mov	edx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [edx], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeInitPage PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
push	esi
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	$LN11@btreeInitP
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pBt$4[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	dl, BYTE PTR [ecx+5]
mov	BYTE PTR _hdr$12[ebp], dl
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _data$7[ebp], ecx
movzx	edx, BYTE PTR _hdr$12[ebp]
mov	eax, DWORD PTR _data$7[ebp]
movzx	ecx, BYTE PTR [eax+edx]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_decodeFlags
add	esp, 8
test	eax, eax
je	SHORT $LN10@btreeInitP
push	52602					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN12@btreeInitP
mov	eax, DWORD PTR _pBt$4[ebp]
mov	ecx, DWORD PTR [eax+32]
sub	ecx, 1
mov	edx, DWORD PTR _pPage$[ebp]
mov	WORD PTR [edx+18], cx
mov	eax, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [eax+1], 0
mov	ecx, DWORD PTR _pBt$4[ebp]
mov	edx, DWORD PTR [ecx+36]
mov	DWORD PTR _usableSize$6[ebp], edx
movzx	eax, BYTE PTR _hdr$12[ebp]
add	eax, 12					
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
shl	edx, 2
sub	eax, edx
mov	WORD PTR _cellOffset$10[ebp], ax
mov	eax, DWORD PTR _pPage$[ebp]
mov	cx, WORD PTR _cellOffset$10[ebp]
mov	WORD PTR [eax+12], cx
mov	edx, DWORD PTR _data$7[ebp]
add	edx, DWORD PTR _usableSize$6[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [eax+60], edx
movzx	ecx, WORD PTR _cellOffset$10[ebp]
add	ecx, DWORD PTR _data$7[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+64], ecx
movzx	eax, BYTE PTR _hdr$12[ebp]
mov	ecx, DWORD PTR _data$7[ebp]
lea	edx, DWORD PTR [ecx+eax+5]
mov	eax, 1
imul	ecx, eax, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
movzx	eax, BYTE PTR _hdr$12[ebp]
mov	ecx, DWORD PTR _data$7[ebp]
lea	eax, DWORD PTR [ecx+eax+5]
mov	ecx, 1
shl	ecx, 0
movzx	eax, BYTE PTR [eax+ecx]
or	edx, eax
sub	edx, 1
and	edx, 65535				
add	edx, 1
mov	DWORD PTR _top$2[ebp], edx
movzx	ecx, BYTE PTR _hdr$12[ebp]
mov	edx, DWORD PTR _data$7[ebp]
lea	eax, DWORD PTR [edx+ecx+3]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
movzx	ecx, BYTE PTR _hdr$12[ebp]
mov	edx, DWORD PTR _data$7[ebp]
lea	ecx, DWORD PTR [edx+ecx+3]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	WORD PTR [edx+16], ax
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+16]
mov	edx, DWORD PTR _pBt$4[ebp]
mov	eax, DWORD PTR [edx+32]
sub	eax, 8
xor	edx, edx
mov	esi, 6
div	esi
cmp	ecx, eax
jbe	SHORT $LN9@btreeInitP
push	52614					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN12@btreeInitP
movzx	eax, WORD PTR _cellOffset$10[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+16]
lea	eax, DWORD PTR [eax+edx*2]
mov	DWORD PTR _iCellFirst$3[ebp], eax
mov	ecx, DWORD PTR _usableSize$6[ebp]
sub	ecx, 4
mov	DWORD PTR _iCellLast$1[ebp], ecx
movzx	edx, BYTE PTR _hdr$12[ebp]
mov	eax, DWORD PTR _data$7[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
movzx	edx, BYTE PTR _hdr$12[ebp]
mov	eax, DWORD PTR _data$7[ebp]
lea	edx, DWORD PTR [eax+edx+1]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	WORD PTR _pc$11[ebp], cx
movzx	eax, BYTE PTR _hdr$12[ebp]
mov	ecx, DWORD PTR _data$7[ebp]
movzx	edx, BYTE PTR [ecx+eax+7]
add	edx, DWORD PTR _top$2[ebp]
mov	DWORD PTR _nFree$5[ebp], edx
movzx	eax, WORD PTR _pc$11[ebp]
test	eax, eax
jle	$LN7@btreeInitP
movzx	ecx, WORD PTR _pc$11[ebp]
cmp	ecx, DWORD PTR _iCellFirst$3[ebp]
jl	SHORT $LN5@btreeInitP
movzx	edx, WORD PTR _pc$11[ebp]
cmp	edx, DWORD PTR _iCellLast$1[ebp]
jle	SHORT $LN6@btreeInitP
push	52657					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN12@btreeInitP
movzx	eax, WORD PTR _pc$11[ebp]
add	eax, DWORD PTR _data$7[ebp]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
movzx	ecx, WORD PTR _pc$11[ebp]
add	ecx, DWORD PTR _data$7[ebp]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	WORD PTR _next$8[ebp], ax
movzx	edx, WORD PTR _pc$11[ebp]
mov	eax, DWORD PTR _data$7[ebp]
lea	ecx, DWORD PTR [eax+edx+2]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
movzx	edx, WORD PTR _pc$11[ebp]
mov	eax, DWORD PTR _data$7[ebp]
lea	edx, DWORD PTR [eax+edx+2]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	WORD PTR _size$9[ebp], cx
movzx	eax, WORD PTR _next$8[ebp]
test	eax, eax
jle	SHORT $LN2@btreeInitP
movzx	ecx, WORD PTR _next$8[ebp]
movzx	edx, WORD PTR _pc$11[ebp]
movzx	eax, WORD PTR _size$9[ebp]
lea	edx, DWORD PTR [edx+eax+3]
cmp	ecx, edx
jle	SHORT $LN3@btreeInitP
movzx	eax, WORD PTR _pc$11[ebp]
movzx	ecx, WORD PTR _size$9[ebp]
add	eax, ecx
cmp	eax, DWORD PTR _usableSize$6[ebp]
jle	SHORT $LN4@btreeInitP
push	52664					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN12@btreeInitP
movzx	edx, WORD PTR _size$9[ebp]
add	edx, DWORD PTR _nFree$5[ebp]
mov	DWORD PTR _nFree$5[ebp], edx
mov	ax, WORD PTR _next$8[ebp]
mov	WORD PTR _pc$11[ebp], ax
jmp	$LN8@btreeInitP
mov	ecx, DWORD PTR _nFree$5[ebp]
cmp	ecx, DWORD PTR _usableSize$6[ebp]
jle	SHORT $LN1@btreeInitP
push	52678					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN12@btreeInitP
mov	edx, DWORD PTR _nFree$5[ebp]
sub	edx, DWORD PTR _iCellFirst$3[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	WORD PTR [eax+14], dx
mov	ecx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [ecx], 1
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_decodeFlags PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _flagByte$[ebp]
sar	eax, 3
mov	ecx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [ecx+3], al
mov	edx, DWORD PTR _flagByte$[ebp]
and	edx, -9					
mov	DWORD PTR _flagByte$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+3]
shl	ecx, 2
mov	edx, 4
sub	edx, ecx
mov	eax, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [eax+6], dl
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pBt$[ebp], edx
cmp	DWORD PTR _flagByte$[ebp], 5
jne	SHORT $LN4@decodeFlag
mov	eax, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [eax+2], 1
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	al, BYTE PTR [edx+3]
mov	BYTE PTR [ecx+4], al
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR _pBt$[ebp]
mov	ax, WORD PTR [edx+28]
mov	WORD PTR [ecx+8], ax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR _pBt$[ebp]
mov	ax, WORD PTR [edx+30]
mov	WORD PTR [ecx+10], ax
jmp	SHORT $LN3@decodeFlag
cmp	DWORD PTR _flagByte$[ebp], 2
jne	SHORT $LN2@decodeFlag
mov	ecx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [ecx+2], 0
mov	edx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [edx+4], 0
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dx, WORD PTR [ecx+24]
mov	WORD PTR [eax+8], dx
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dx, WORD PTR [ecx+26]
mov	WORD PTR [eax+10], dx
jmp	SHORT $LN3@decodeFlag
push	52563					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN5@decodeFlag
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dl, BYTE PTR [ecx+21]
mov	BYTE PTR [eax+7], dl
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_freeSpace PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
push	esi
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _data$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+52]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 4
je	SHORT $LN12@freeSpace
mov	edx, DWORD PTR _size$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _start$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	DWORD PTR _hdr$[ebp], edx
mov	eax, DWORD PTR _hdr$[ebp]
add	eax, 1
mov	DWORD PTR _addr$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	eax, DWORD PTR [edx+36]
sub	eax, 4
mov	DWORD PTR _iLast$[ebp], eax
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _addr$[ebp]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _addr$[ebp]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	DWORD PTR _pbegin$[ebp], ecx
mov	eax, DWORD PTR _pbegin$[ebp]
cmp	eax, DWORD PTR _start$[ebp]
jge	SHORT $LN10@freeSpace
cmp	DWORD PTR _pbegin$[ebp], 0
jle	SHORT $LN10@freeSpace
mov	ecx, DWORD PTR _addr$[ebp]
add	ecx, 4
cmp	DWORD PTR _pbegin$[ebp], ecx
jge	SHORT $LN9@freeSpace
push	52483					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN13@freeSpace
mov	edx, DWORD PTR _pbegin$[ebp]
mov	DWORD PTR _addr$[ebp], edx
jmp	SHORT $LN11@freeSpace
mov	eax, DWORD PTR _pbegin$[ebp]
cmp	eax, DWORD PTR _iLast$[ebp]
jle	SHORT $LN8@freeSpace
push	52488					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN13@freeSpace
mov	ecx, DWORD PTR _start$[ebp]
sar	ecx, 8
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _addr$[ebp]
mov	eax, 1
imul	eax, eax, 0
mov	BYTE PTR [edx+eax], cl
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _addr$[ebp]
mov	edx, 1
shl	edx, 0
mov	al, BYTE PTR _start$[ebp]
mov	BYTE PTR [ecx+edx], al
mov	ecx, DWORD PTR _pbegin$[ebp]
sar	ecx, 8
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _start$[ebp]
mov	eax, 1
imul	eax, eax, 0
mov	BYTE PTR [edx+eax], cl
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _start$[ebp]
mov	edx, 1
shl	edx, 0
mov	al, BYTE PTR _pbegin$[ebp]
mov	BYTE PTR [ecx+edx], al
mov	ecx, DWORD PTR _size$[ebp]
sar	ecx, 8
mov	edx, DWORD PTR _start$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+2]
mov	eax, 1
imul	eax, eax, 0
mov	BYTE PTR [edx+eax], cl
mov	ecx, DWORD PTR _start$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [edx+ecx+2]
mov	ecx, 1
shl	ecx, 0
mov	dl, BYTE PTR _size$[ebp]
mov	BYTE PTR [eax+ecx], dl
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+14]
movzx	edx, WORD PTR _size$[ebp]
add	ecx, edx
mov	eax, DWORD PTR _pPage$[ebp]
mov	WORD PTR [eax+14], cx
mov	ecx, DWORD PTR _hdr$[ebp]
add	ecx, 1
mov	DWORD PTR _addr$[ebp], ecx
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _addr$[ebp]
mov	eax, 1
imul	ecx, eax, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _addr$[ebp]
mov	ecx, 1
shl	ecx, 0
movzx	eax, BYTE PTR [eax+ecx]
or	edx, eax
mov	DWORD PTR _pbegin$[ebp], edx
jle	$LN6@freeSpace
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _pbegin$[ebp]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _pbegin$[ebp]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	DWORD PTR _pnext$5[ebp], ecx
mov	eax, DWORD PTR _pbegin$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+eax+2]
mov	eax, 1
imul	ecx, eax, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	eax, DWORD PTR _pbegin$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [ecx+eax+2]
mov	ecx, 1
shl	ecx, 0
movzx	eax, BYTE PTR [eax+ecx]
or	edx, eax
mov	DWORD PTR _psize$2[ebp], edx
mov	ecx, DWORD PTR _psize$2[ebp]
mov	edx, DWORD PTR _pbegin$[ebp]
lea	eax, DWORD PTR [edx+ecx+3]
cmp	eax, DWORD PTR _pnext$5[ebp]
jl	$LN5@freeSpace
cmp	DWORD PTR _pnext$5[ebp], 0
jle	$LN5@freeSpace
mov	ecx, DWORD PTR _pbegin$[ebp]
add	ecx, DWORD PTR _psize$2[ebp]
mov	edx, DWORD PTR _pnext$5[ebp]
sub	edx, ecx
mov	DWORD PTR _frag$3[ebp], edx
js	SHORT $LN3@freeSpace
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _hdr$[ebp]
movzx	ecx, BYTE PTR [eax+7]
cmp	DWORD PTR _frag$3[ebp], ecx
jle	SHORT $LN4@freeSpace
push	52507					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN13@freeSpace
movzx	edx, BYTE PTR _frag$3[ebp]
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _hdr$[ebp]
movzx	ecx, BYTE PTR [eax+7]
sub	ecx, edx
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _hdr$[ebp]
mov	BYTE PTR [edx+7], cl
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _pnext$5[ebp]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _pnext$5[ebp]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	DWORD PTR _x$4[ebp], eax
mov	edx, DWORD PTR _x$4[ebp]
sar	edx, 8
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _pbegin$[ebp]
mov	ecx, 1
imul	ecx, ecx, 0
mov	BYTE PTR [eax+ecx], dl
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _pbegin$[ebp]
mov	eax, 1
shl	eax, 0
mov	cl, BYTE PTR _x$4[ebp]
mov	BYTE PTR [edx+eax], cl
mov	edx, DWORD PTR _pnext$5[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+2]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _pnext$5[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+2]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
add	ecx, DWORD PTR _pnext$5[ebp]
sub	ecx, DWORD PTR _pbegin$[ebp]
mov	DWORD PTR _x$4[ebp], ecx
mov	eax, DWORD PTR _x$4[ebp]
sar	eax, 8
mov	ecx, DWORD PTR _pbegin$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [edx+ecx+2]
mov	edx, 1
imul	edx, edx, 0
mov	BYTE PTR [ecx+edx], al
mov	eax, DWORD PTR _pbegin$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+eax+2]
mov	eax, 1
shl	eax, 0
mov	cl, BYTE PTR _x$4[ebp]
mov	BYTE PTR [edx+eax], cl
jmp	SHORT $LN2@freeSpace
mov	edx, DWORD PTR _pbegin$[ebp]
mov	DWORD PTR _addr$[ebp], edx
jmp	$LN7@freeSpace
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _hdr$[ebp]
movzx	ecx, BYTE PTR [eax+1]
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _hdr$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	ecx, eax
jne	$LN1@freeSpace
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _hdr$[ebp]
movzx	edx, BYTE PTR [ecx+2]
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _hdr$[ebp]
movzx	ecx, BYTE PTR [eax+6]
cmp	edx, ecx
jne	$LN1@freeSpace
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+1]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	DWORD PTR _pbegin$[ebp], ecx
push	2
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _pbegin$[ebp]
push	eax
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [edx+ecx+5]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [edx+ecx+5]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	edx, DWORD PTR _pbegin$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+edx+2]
mov	ecx, 1
imul	ecx, ecx, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	ecx, DWORD PTR _pbegin$[ebp]
mov	esi, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [esi+ecx+2]
mov	esi, 1
shl	esi, 0
movzx	ecx, BYTE PTR [ecx+esi]
or	edx, ecx
add	eax, edx
mov	DWORD PTR _top$1[ebp], eax
mov	edx, DWORD PTR _top$1[ebp]
sar	edx, 8
mov	eax, DWORD PTR _hdr$[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [ecx+eax+5]
mov	ecx, 1
imul	ecx, ecx, 0
mov	BYTE PTR [eax+ecx], dl
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
shl	edx, 0
mov	al, BYTE PTR _top$1[ebp]
mov	BYTE PTR [ecx+edx], al
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_allocateSpace PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+5]
mov	DWORD PTR _hdr$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _data$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	eax, DWORD PTR [edx+36]
mov	DWORD PTR _usableSize$[ebp], eax
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _hdr$[ebp]
movzx	edx, BYTE PTR [ecx+7]
mov	DWORD PTR _nFrag$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+12]
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+16]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	DWORD PTR _gap$[ebp], ecx
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
sub	ecx, 1
and	ecx, 65535				
add	ecx, 1
mov	DWORD PTR _top$[ebp], ecx
mov	eax, DWORD PTR _gap$[ebp]
cmp	eax, DWORD PTR _top$[ebp]
jle	SHORT $LN17@allocateSp
push	52373					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN18@allocateSp
cmp	DWORD PTR _nFrag$[ebp], 60		
jl	SHORT $LN16@allocateSp
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_defragmentPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@allocateSp
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN18@allocateSp
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
sub	ecx, 1
and	ecx, 65535				
add	ecx, 1
mov	DWORD PTR _top$[ebp], ecx
jmp	$LN14@allocateSp
mov	eax, DWORD PTR _gap$[ebp]
add	eax, 2
cmp	eax, DWORD PTR _top$[ebp]
jg	$LN14@allocateSp
mov	ecx, DWORD PTR _hdr$[ebp]
add	ecx, 1
mov	DWORD PTR _addr$3[ebp], ecx
jmp	SHORT $LN12@allocateSp
mov	edx, DWORD PTR _pc$4[ebp]
mov	DWORD PTR _addr$3[ebp], edx
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _addr$3[ebp]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _addr$3[ebp]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	DWORD PTR _pc$4[ebp], eax
jle	$LN14@allocateSp
mov	edx, DWORD PTR _usableSize$[ebp]
sub	edx, 4
cmp	DWORD PTR _pc$4[ebp], edx
jg	SHORT $LN8@allocateSp
mov	eax, DWORD PTR _addr$3[ebp]
add	eax, 4
cmp	DWORD PTR _pc$4[ebp], eax
jge	SHORT $LN9@allocateSp
push	52392					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN18@allocateSp
mov	ecx, DWORD PTR _pc$4[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [edx+ecx+2]
mov	ecx, 1
imul	edx, ecx, 0
movzx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, DWORD PTR _pc$4[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [edx+ecx+2]
mov	edx, 1
shl	edx, 0
movzx	ecx, BYTE PTR [ecx+edx]
or	eax, ecx
mov	DWORD PTR _size$1[ebp], eax
mov	edx, DWORD PTR _size$1[ebp]
cmp	edx, DWORD PTR _nByte$[ebp]
jl	$LN7@allocateSp
mov	eax, DWORD PTR _size$1[ebp]
sub	eax, DWORD PTR _nByte$[ebp]
mov	DWORD PTR _x$2[ebp], eax
cmp	DWORD PTR _x$2[ebp], 4
jge	SHORT $LN6@allocateSp
push	2
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _pc$4[ebp]
push	ecx
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _addr$3[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _nFrag$[ebp]
add	eax, DWORD PTR _x$2[ebp]
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _hdr$[ebp]
mov	BYTE PTR [ecx+7], al
jmp	SHORT $LN5@allocateSp
mov	edx, DWORD PTR _size$1[ebp]
add	edx, DWORD PTR _pc$4[ebp]
cmp	edx, DWORD PTR _usableSize$[ebp]
jle	SHORT $LN4@allocateSp
push	52405					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN18@allocateSp
jmp	SHORT $LN5@allocateSp
mov	eax, DWORD PTR _x$2[ebp]
sar	eax, 8
mov	ecx, DWORD PTR _pc$4[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [edx+ecx+2]
mov	edx, 1
imul	edx, edx, 0
mov	BYTE PTR [ecx+edx], al
mov	eax, DWORD PTR _pc$4[ebp]
mov	ecx, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [ecx+eax+2]
mov	eax, 1
shl	eax, 0
mov	cl, BYTE PTR _x$2[ebp]
mov	BYTE PTR [edx+eax], cl
mov	edx, DWORD PTR _pc$4[ebp]
add	edx, DWORD PTR _x$2[ebp]
mov	eax, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [eax], edx
xor	eax, eax
jmp	$LN18@allocateSp
jmp	$LN11@allocateSp
mov	ecx, DWORD PTR _nByte$[ebp]
mov	edx, DWORD PTR _gap$[ebp]
lea	eax, DWORD PTR [edx+ecx+2]
cmp	eax, DWORD PTR _top$[ebp]
jle	SHORT $LN2@allocateSp
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_defragmentPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@allocateSp
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN18@allocateSp
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
sub	ecx, 1
and	ecx, 65535				
add	ecx, 1
mov	DWORD PTR _top$[ebp], ecx
mov	eax, DWORD PTR _top$[ebp]
sub	eax, DWORD PTR _nByte$[ebp]
mov	DWORD PTR _top$[ebp], eax
mov	ecx, DWORD PTR _top$[ebp]
sar	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
imul	eax, eax, 0
mov	BYTE PTR [edx+eax], cl
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [edx+ecx+5]
mov	ecx, 1
shl	ecx, 0
mov	dl, BYTE PTR _top$[ebp]
mov	BYTE PTR [eax+ecx], dl
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR _top$[ebp]
mov	DWORD PTR [eax], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_defragmentPage PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerTempSpace
add	esp, 4
mov	DWORD PTR _temp$[ebp], eax
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _data$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+5]
mov	DWORD PTR _hdr$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+12]
mov	DWORD PTR _cellOffset$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+16]
mov	DWORD PTR _nCell$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR _usableSize$[ebp], ecx
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	ecx, DWORD PTR [eax+edx+5]
mov	edx, 1
imul	eax, edx, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
shl	eax, 0
movzx	edx, BYTE PTR [edx+eax]
or	ecx, edx
mov	DWORD PTR _cbrk$[ebp], ecx
mov	eax, DWORD PTR _usableSize$[ebp]
sub	eax, DWORD PTR _cbrk$[ebp]
push	eax
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _cbrk$[ebp]
push	ecx
mov	edx, DWORD PTR _temp$[ebp]
add	edx, DWORD PTR _cbrk$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _usableSize$[ebp]
mov	DWORD PTR _cbrk$[ebp], eax
mov	ecx, DWORD PTR _nCell$[ebp]
mov	edx, DWORD PTR _cellOffset$[ebp]
lea	eax, DWORD PTR [edx+ecx*2]
mov	DWORD PTR _iCellFirst$[ebp], eax
mov	ecx, DWORD PTR _usableSize$[ebp]
sub	ecx, 4
mov	DWORD PTR _iCellLast$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@defragment
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nCell$[ebp]
jge	$LN6@defragment
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _cellOffset$[ebp]
lea	eax, DWORD PTR [edx+ecx*2]
add	eax, DWORD PTR _data$[ebp]
mov	DWORD PTR _pAddr$1[ebp], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _pAddr$1[ebp]
movzx	ecx, BYTE PTR [eax+edx]
shl	ecx, 8
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _pAddr$1[ebp]
movzx	edx, BYTE PTR [eax+edx]
or	ecx, edx
mov	DWORD PTR _pc$[ebp], ecx
mov	eax, DWORD PTR _pc$[ebp]
cmp	eax, DWORD PTR _iCellFirst$[ebp]
jl	SHORT $LN4@defragment
mov	ecx, DWORD PTR _pc$[ebp]
cmp	ecx, DWORD PTR _iCellLast$[ebp]
jle	SHORT $LN5@defragment
push	52304					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN9@defragment
mov	edx, DWORD PTR _temp$[ebp]
add	edx, DWORD PTR _pc$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_cellSizePtr
add	esp, 8
movzx	ecx, ax
mov	DWORD PTR _size$[ebp], ecx
mov	edx, DWORD PTR _cbrk$[ebp]
sub	edx, DWORD PTR _size$[ebp]
mov	DWORD PTR _cbrk$[ebp], edx
mov	eax, DWORD PTR _cbrk$[ebp]
cmp	eax, DWORD PTR _iCellFirst$[ebp]
jl	SHORT $LN2@defragment
mov	ecx, DWORD PTR _pc$[ebp]
add	ecx, DWORD PTR _size$[ebp]
cmp	ecx, DWORD PTR _usableSize$[ebp]
jle	SHORT $LN3@defragment
push	52316					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN9@defragment
mov	edx, DWORD PTR _size$[ebp]
push	edx
mov	eax, DWORD PTR _temp$[ebp]
add	eax, DWORD PTR _pc$[ebp]
push	eax
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _cbrk$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _cbrk$[ebp]
sar	edx, 8
mov	eax, 1
imul	ecx, eax, 0
mov	eax, DWORD PTR _pAddr$1[ebp]
mov	BYTE PTR [eax+ecx], dl
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _pAddr$1[ebp]
mov	al, BYTE PTR _cbrk$[ebp]
mov	BYTE PTR [edx+ecx], al
jmp	$LN7@defragment
mov	ecx, DWORD PTR _cbrk$[ebp]
sar	ecx, 8
mov	edx, DWORD PTR _hdr$[ebp]
mov	eax, DWORD PTR _data$[ebp]
lea	edx, DWORD PTR [eax+edx+5]
mov	eax, 1
imul	eax, eax, 0
mov	BYTE PTR [edx+eax], cl
mov	ecx, DWORD PTR _hdr$[ebp]
mov	edx, DWORD PTR _data$[ebp]
lea	eax, DWORD PTR [edx+ecx+5]
mov	ecx, 1
shl	ecx, 0
mov	dl, BYTE PTR _cbrk$[ebp]
mov	BYTE PTR [eax+ecx], dl
mov	eax, DWORD PTR _data$[ebp]
add	eax, DWORD PTR _hdr$[ebp]
mov	BYTE PTR [eax+1], 0
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _hdr$[ebp]
mov	BYTE PTR [ecx+2], 0
mov	edx, DWORD PTR _data$[ebp]
add	edx, DWORD PTR _hdr$[ebp]
mov	BYTE PTR [edx+7], 0
mov	eax, DWORD PTR _cbrk$[ebp]
sub	eax, DWORD PTR _iCellFirst$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _data$[ebp]
add	ecx, DWORD PTR _iCellFirst$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _cbrk$[ebp]
sub	edx, DWORD PTR _iCellFirst$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+14]
cmp	edx, ecx
je	SHORT $LN1@defragment
push	52333					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN9@defragment
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_ptrmapPutOvflPtr PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pRC$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN2@ptrmapPutO
jmp	SHORT $LN3@ptrmapPutO
lea	ecx, DWORD PTR _info$[ebp]
push	ecx
mov	edx, DWORD PTR _pCell$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_btreeParseCellPtr
add	esp, 12					
movzx	ecx, WORD PTR _info$[ebp+24]
test	ecx, ecx
je	SHORT $LN3@ptrmapPutO
movzx	edx, WORD PTR _info$[ebp+24]
add	edx, DWORD PTR _pCell$[ebp]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _ovfl$1[ebp], eax
mov	eax, DWORD PTR _pRC$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+72]
push	edx
push	3
mov	eax, DWORD PTR _ovfl$1[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
call	_ptrmapPut
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_cellSizePtr PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+6]
add	ecx, DWORD PTR _pCell$[ebp]
mov	DWORD PTR _pIter$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+2]
test	eax, eax
je	$LN9@cellSizePt
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
je	SHORT $LN8@cellSizePt
mov	eax, DWORD PTR _pIter$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 128				
jge	SHORT $LN12@cellSizePt
mov	edx, DWORD PTR _pIter$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _nSize$[ebp], eax
mov	DWORD PTR tv81[ebp], 1
jmp	SHORT $LN13@cellSizePt
lea	ecx, DWORD PTR _nSize$[ebp]
push	ecx
mov	edx, DWORD PTR _pIter$[ebp]
push	edx
call	_sqlite3GetVarint32
add	esp, 8
movzx	eax, al
mov	DWORD PTR tv81[ebp], eax
movzx	ecx, BYTE PTR tv81[ebp]
add	ecx, DWORD PTR _pIter$[ebp]
mov	DWORD PTR _pIter$[ebp], ecx
jmp	SHORT $LN7@cellSizePt
mov	DWORD PTR _nSize$[ebp], 0
mov	edx, 1
imul	eax, edx, 9
add	eax, DWORD PTR _pIter$[ebp]
mov	DWORD PTR _pEnd$1[ebp], eax
mov	ecx, DWORD PTR _pIter$[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 128				
mov	DWORD PTR tv91[ebp], edx
mov	eax, DWORD PTR _pIter$[ebp]
add	eax, 1
mov	DWORD PTR _pIter$[ebp], eax
cmp	DWORD PTR tv91[ebp], 0
je	SHORT $LN5@cellSizePt
mov	ecx, DWORD PTR _pIter$[ebp]
cmp	ecx, DWORD PTR _pEnd$1[ebp]
jae	SHORT $LN5@cellSizePt
jmp	SHORT $LN6@cellSizePt
jmp	SHORT $LN4@cellSizePt
mov	edx, DWORD PTR _pIter$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 128				
jge	SHORT $LN14@cellSizePt
mov	ecx, DWORD PTR _pIter$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _nSize$[ebp], edx
mov	DWORD PTR tv132[ebp], 1
jmp	SHORT $LN15@cellSizePt
lea	eax, DWORD PTR _nSize$[ebp]
push	eax
mov	ecx, DWORD PTR _pIter$[ebp]
push	ecx
call	_sqlite3GetVarint32
add	esp, 8
movzx	edx, al
mov	DWORD PTR tv132[ebp], edx
movzx	eax, BYTE PTR tv132[ebp]
add	eax, DWORD PTR _pIter$[ebp]
mov	DWORD PTR _pIter$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+8]
cmp	DWORD PTR _nSize$[ebp], edx
jbe	SHORT $LN3@cellSizePt
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+10]
mov	DWORD PTR _minLocal$2[ebp], ecx
mov	eax, DWORD PTR _nSize$[ebp]
sub	eax, DWORD PTR _minLocal$2[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [edx+52]
mov	ecx, DWORD PTR [ecx+36]
sub	ecx, 4
xor	edx, edx
div	ecx
add	edx, DWORD PTR _minLocal$2[ebp]
mov	DWORD PTR _nSize$[ebp], edx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+8]
cmp	DWORD PTR _nSize$[ebp], eax
jbe	SHORT $LN2@cellSizePt
mov	ecx, DWORD PTR _minLocal$2[ebp]
mov	DWORD PTR _nSize$[ebp], ecx
mov	edx, DWORD PTR _nSize$[ebp]
add	edx, 4
mov	DWORD PTR _nSize$[ebp], edx
mov	eax, DWORD PTR _pIter$[ebp]
sub	eax, DWORD PTR _pCell$[ebp]
add	eax, DWORD PTR _nSize$[ebp]
mov	DWORD PTR _nSize$[ebp], eax
cmp	DWORD PTR _nSize$[ebp], 4
jae	SHORT $LN1@cellSizePt
mov	DWORD PTR _nSize$[ebp], 4
mov	ax, WORD PTR _nSize$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeParseCell PROC
push	ebp
mov	ebp, esp
push	esi
mov	eax, DWORD PTR _pInfo$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _iCell$[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _iCell$[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [ecx+56]
push	edx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_btreeParseCellPtr
add	esp, 12					
pop	esi
pop	ebp
ret	0
ENDP
_btreeParseCellPtr PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR _pCell$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	ax, BYTE PTR [edx+6]
mov	WORD PTR _n$[ebp], ax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+2]
test	edx, edx
je	SHORT $LN9@btreeParse
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+4]
test	ecx, ecx
je	SHORT $LN8@btreeParse
mov	edx, DWORD PTR _pCell$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 128				
jge	SHORT $LN12@btreeParse
mov	ecx, DWORD PTR _pCell$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _nPayload$[ebp], edx
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN13@btreeParse
lea	eax, DWORD PTR _nPayload$[ebp]
push	eax
mov	ecx, DWORD PTR _pCell$[ebp]
push	ecx
call	_sqlite3GetVarint32
add	esp, 8
movzx	edx, al
mov	DWORD PTR tv80[ebp], edx
movzx	ax, BYTE PTR tv80[ebp]
mov	WORD PTR _n$[ebp], ax
jmp	SHORT $LN7@btreeParse
mov	DWORD PTR _nPayload$[ebp], 0
mov	ecx, DWORD PTR _pInfo$[ebp]
push	ecx
movzx	edx, WORD PTR _n$[ebp]
add	edx, DWORD PTR _pCell$[ebp]
push	edx
call	_sqlite3GetVarint
add	esp, 8
movzx	eax, al
movzx	ecx, WORD PTR _n$[ebp]
add	ecx, eax
mov	WORD PTR _n$[ebp], cx
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR _nPayload$[ebp]
mov	DWORD PTR [edx+12], eax
jmp	SHORT $LN6@btreeParse
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	DWORD PTR [ecx+12], 0
movzx	edx, WORD PTR _n$[ebp]
mov	eax, DWORD PTR _pCell$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 128				
jge	SHORT $LN14@btreeParse
movzx	edx, WORD PTR _n$[ebp]
mov	eax, DWORD PTR _pCell$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
mov	DWORD PTR _nPayload$[ebp], ecx
mov	DWORD PTR tv144[ebp], 1
jmp	SHORT $LN15@btreeParse
lea	edx, DWORD PTR _nPayload$[ebp]
push	edx
movzx	eax, WORD PTR _n$[ebp]
add	eax, DWORD PTR _pCell$[ebp]
push	eax
call	_sqlite3GetVarint32
add	esp, 8
movzx	ecx, al
mov	DWORD PTR tv144[ebp], ecx
movzx	edx, BYTE PTR tv144[ebp]
movzx	eax, WORD PTR _n$[ebp]
add	eax, edx
mov	WORD PTR _n$[ebp], ax
mov	ecx, DWORD PTR _nPayload$[ebp]
xor	edx, edx
mov	eax, DWORD PTR _pInfo$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	edx, DWORD PTR _nPayload$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _pInfo$[ebp]
mov	cx, WORD PTR _n$[ebp]
mov	WORD PTR [eax+20], cx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+8]
cmp	DWORD PTR _nPayload$[ebp], eax
ja	SHORT $LN5@btreeParse
movzx	ecx, WORD PTR _n$[ebp]
add	ecx, DWORD PTR _nPayload$[ebp]
mov	DWORD PTR tv159[ebp], ecx
mov	edx, DWORD PTR _pInfo$[ebp]
mov	ax, WORD PTR tv159[ebp]
mov	WORD PTR [edx+26], ax
movzx	ecx, WORD PTR tv159[ebp]
cmp	ecx, 4
jge	SHORT $LN4@btreeParse
mov	edx, 4
mov	eax, DWORD PTR _pInfo$[ebp]
mov	WORD PTR [eax+26], dx
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	dx, WORD PTR _nPayload$[ebp]
mov	WORD PTR [ecx+22], dx
xor	eax, eax
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	WORD PTR [ecx+24], ax
jmp	SHORT $LN10@btreeParse
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+10]
mov	DWORD PTR _minLocal$3[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+8]
mov	DWORD PTR _maxLocal$1[ebp], edx
mov	eax, DWORD PTR _nPayload$[ebp]
sub	eax, DWORD PTR _minLocal$3[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	ecx, DWORD PTR [edx+36]
sub	ecx, 4
xor	edx, edx
div	ecx
add	edx, DWORD PTR _minLocal$3[ebp]
mov	DWORD PTR _surplus$2[ebp], edx
mov	edx, DWORD PTR _surplus$2[ebp]
cmp	edx, DWORD PTR _maxLocal$1[ebp]
jg	SHORT $LN2@btreeParse
mov	eax, DWORD PTR _pInfo$[ebp]
mov	cx, WORD PTR _surplus$2[ebp]
mov	WORD PTR [eax+22], cx
jmp	SHORT $LN1@btreeParse
mov	edx, DWORD PTR _pInfo$[ebp]
mov	ax, WORD PTR _minLocal$3[ebp]
mov	WORD PTR [edx+22], ax
mov	ecx, DWORD PTR _pInfo$[ebp]
movzx	edx, WORD PTR [ecx+22]
movzx	eax, WORD PTR _n$[ebp]
add	edx, eax
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	WORD PTR [ecx+24], dx
mov	edx, DWORD PTR _pInfo$[ebp]
movzx	eax, WORD PTR [edx+24]
add	eax, 4
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	WORD PTR [ecx+26], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findOverflowCell PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	esi
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+1]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN5@findOverfl
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN3@findOverfl
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+eax*2+20]
mov	DWORD PTR _k$1[ebp], edx
mov	eax, DWORD PTR _k$1[ebp]
cmp	eax, DWORD PTR _iCell$[ebp]
jg	SHORT $LN2@findOverfl
mov	ecx, DWORD PTR _k$1[ebp]
cmp	ecx, DWORD PTR _iCell$[ebp]
jne	SHORT $LN1@findOverfl
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [eax+edx*4+32]
jmp	SHORT $LN6@findOverfl
mov	ecx, DWORD PTR _iCell$[ebp]
sub	ecx, 1
mov	DWORD PTR _iCell$[ebp], ecx
jmp	SHORT $LN4@findOverfl
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+18]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	ecx, DWORD PTR _iCell$[ebp]
lea	edx, DWORD PTR [edx+ecx*2]
mov	ecx, 1
imul	ecx, ecx, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	ecx, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [ecx+64]
mov	esi, DWORD PTR _iCell$[ebp]
lea	ecx, DWORD PTR [ecx+esi*2]
mov	esi, 1
shl	esi, 0
movzx	ecx, BYTE PTR [ecx+esi]
or	edx, ecx
and	eax, edx
mov	edx, DWORD PTR _pPage$[ebp]
add	eax, DWORD PTR [edx+56]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_ptrmapGet PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _key$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_ptrmapPageno
add	esp, 8
mov	DWORD PTR _iPtrmap$[ebp], eax
push	0
lea	edx, DWORD PTR _pDbPage$[ebp]
push	edx
mov	eax, DWORD PTR _iPtrmap$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@ptrmapGet
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN6@ptrmapGet
mov	eax, DWORD PTR _pDbPage$[ebp]
push	eax
call	_sqlite3PagerGetData
add	esp, 4
mov	DWORD PTR _pPtrmap$[ebp], eax
mov	ecx, DWORD PTR _key$[ebp]
sub	ecx, DWORD PTR _iPtrmap$[ebp]
sub	ecx, 1
imul	edx, ecx, 5
mov	DWORD PTR _offset$[ebp], edx
cmp	DWORD PTR _offset$[ebp], 0
jge	SHORT $LN4@ptrmapGet
mov	eax, DWORD PTR _pDbPage$[ebp]
push	eax
call	_sqlite3PagerUnref
add	esp, 4
push	52032					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN6@ptrmapGet
mov	ecx, DWORD PTR _pPtrmap$[ebp]
add	ecx, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _pEType$[ebp]
mov	al, BYTE PTR [ecx]
mov	BYTE PTR [edx], al
cmp	DWORD PTR _pPgno$[ebp], 0
je	SHORT $LN3@ptrmapGet
mov	ecx, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _pPtrmap$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	ecx, DWORD PTR _pPgno$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pDbPage$[ebp]
push	edx
call	_sqlite3PagerUnref
add	esp, 4
mov	eax, DWORD PTR _pEType$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 1
jl	SHORT $LN1@ptrmapGet
mov	edx, DWORD PTR _pEType$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 5
jle	SHORT $LN2@ptrmapGet
push	52040					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN6@ptrmapGet
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_ptrmapPut PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pRC$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN7@ptrmapPut
jmp	$LN8@ptrmapPut
cmp	DWORD PTR _key$[ebp], 0
jne	SHORT $LN6@ptrmapPut
push	51976					
call	_sqlite3CorruptError
add	esp, 4
mov	ecx, DWORD PTR _pRC$[ebp]
mov	DWORD PTR [ecx], eax
jmp	$LN8@ptrmapPut
mov	edx, DWORD PTR _key$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPageno
add	esp, 8
mov	DWORD PTR _iPtrmap$[ebp], eax
push	0
lea	ecx, DWORD PTR _pDbPage$[ebp]
push	ecx
mov	edx, DWORD PTR _iPtrmap$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@ptrmapPut
mov	edx, DWORD PTR _pRC$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx], eax
jmp	$LN8@ptrmapPut
mov	ecx, DWORD PTR _key$[ebp]
sub	ecx, DWORD PTR _iPtrmap$[ebp]
sub	ecx, 1
imul	edx, ecx, 5
mov	DWORD PTR _offset$[ebp], edx
cmp	DWORD PTR _offset$[ebp], 0
jge	SHORT $LN4@ptrmapPut
push	51987					
call	_sqlite3CorruptError
add	esp, 4
mov	ecx, DWORD PTR _pRC$[ebp]
mov	DWORD PTR [ecx], eax
jmp	SHORT $ptrmap_exit$10
mov	edx, DWORD PTR _pDbPage$[ebp]
push	edx
call	_sqlite3PagerGetData
add	esp, 4
mov	DWORD PTR _pPtrmap$[ebp], eax
movzx	eax, BYTE PTR _eType$[ebp]
mov	ecx, DWORD PTR _pPtrmap$[ebp]
add	ecx, DWORD PTR _offset$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	eax, edx
jne	SHORT $LN2@ptrmapPut
mov	eax, DWORD PTR _offset$[ebp]
mov	ecx, DWORD PTR _pPtrmap$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
call	_sqlite3Get4byte
add	esp, 4
cmp	eax, DWORD PTR _parent$[ebp]
je	SHORT $ptrmap_exit$10
mov	eax, DWORD PTR _pDbPage$[ebp]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pRC$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $ptrmap_exit$10
mov	eax, DWORD PTR _pPtrmap$[ebp]
add	eax, DWORD PTR _offset$[ebp]
mov	cl, BYTE PTR _eType$[ebp]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _parent$[ebp]
push	edx
mov	eax, DWORD PTR _offset$[ebp]
mov	ecx, DWORD PTR _pPtrmap$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _pDbPage$[ebp]
push	eax
call	_sqlite3PagerUnref
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_ptrmapPageno PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _pgno$[ebp], 2
jae	SHORT $LN2@ptrmapPage
xor	eax, eax
jmp	SHORT $LN3@ptrmapPage
mov	eax, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [eax+36]
xor	edx, edx
mov	ecx, 5
div	ecx
add	eax, 1
mov	DWORD PTR _nPagesPerMapPage$[ebp], eax
mov	eax, DWORD PTR _pgno$[ebp]
sub	eax, 2
xor	edx, edx
div	DWORD PTR _nPagesPerMapPage$[ebp]
mov	DWORD PTR _iPtrMap$[ebp], eax
mov	edx, DWORD PTR _iPtrMap$[ebp]
imul	edx, DWORD PTR _nPagesPerMapPage$[ebp]
add	edx, 2
mov	DWORD PTR _ret$[ebp], edx
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _ret$[ebp], eax
jne	SHORT $LN1@ptrmapPage
mov	edx, DWORD PTR _ret$[ebp]
add	edx, 1
mov	DWORD PTR _ret$[ebp], edx
mov	eax, DWORD PTR _ret$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeRestoreCursorPosition PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 4
jne	SHORT $LN3@btreeResto
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+76]
jmp	SHORT $LN4@btreeResto
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+81], 0
mov	ecx, DWORD PTR _pCur$[ebp]
add	ecx, 76					
push	ecx
push	0
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
mov	ecx, DWORD PTR [edx+56]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_btreeMoveto
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@btreeResto
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [ecx+64], 0
mov	edx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [edx+76], 0
je	SHORT $LN2@btreeResto
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
jne	SHORT $LN2@btreeResto
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+81], 2
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeMoveto PROC
push	ebp
mov	ebp, esp
sub	esp, 216				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _pFree$[ebp], 0
cmp	DWORD PTR _pKey$[ebp], 0
je	$LN5@btreeMovet
lea	eax, DWORD PTR _pFree$[ebp]
push	eax
push	200					
lea	ecx, DWORD PTR _aSpace$[ebp]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_sqlite3VdbeAllocUnpackedRecord
add	esp, 16					
mov	DWORD PTR _pIdxKey$[ebp], eax
cmp	DWORD PTR _pIdxKey$[ebp], 0
jne	SHORT $LN4@btreeMovet
mov	eax, 7
jmp	$LN6@btreeMovet
mov	ecx, DWORD PTR _pIdxKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
mov	eax, DWORD PTR _nKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_sqlite3VdbeRecordUnpack
add	esp, 16					
mov	eax, DWORD PTR _pIdxKey$[ebp]
movzx	ecx, WORD PTR [eax+4]
test	ecx, ecx
jne	SHORT $LN3@btreeMovet
mov	edx, DWORD PTR _pFree$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3DbFree
add	esp, 8
push	51847					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN6@btreeMovet
jmp	SHORT $LN2@btreeMovet
mov	DWORD PTR _pIdxKey$[ebp], 0
mov	eax, DWORD PTR _pRes$[ebp]
push	eax
mov	ecx, DWORD PTR _bias$[ebp]
push	ecx
mov	edx, DWORD PTR _nKey$[ebp+4]
push	edx
mov	eax, DWORD PTR _nKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pIdxKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _pFree$[ebp], 0
je	SHORT $LN1@btreeMovet
mov	eax, DWORD PTR _pFree$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_saveAllCursors PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN8@saveAllCur
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN6@saveAllCur
mov	ecx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR _pExcept$[ebp]
je	SHORT $LN5@saveAllCur
cmp	DWORD PTR _iRoot$[ebp], 0
je	SHORT $LN4@saveAllCur
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+68]
cmp	eax, DWORD PTR _iRoot$[ebp]
jne	SHORT $LN5@saveAllCur
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+81]
cmp	edx, 1
jne	SHORT $LN3@saveAllCur
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_saveCursorPosition
add	esp, 4
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN2@saveAllCur
mov	eax, DWORD PTR _rc$1[ebp]
jmp	SHORT $LN9@saveAllCur
jmp	SHORT $LN5@saveAllCur
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_btreeReleaseAllCursorPages
add	esp, 4
jmp	SHORT $LN7@saveAllCur
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_saveCursorPosition PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pCur$[ebp]
add	eax, 56					
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_sqlite3BtreeKeySize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+eax+128]
movzx	eax, BYTE PTR [edx+2]
test	eax, eax
jne	SHORT $LN6@saveCursor
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _pKey$1[ebp], eax
cmp	DWORD PTR _pKey$1[ebp], 0
je	SHORT $LN5@saveCursor
mov	eax, DWORD PTR _pKey$1[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
push	0
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_sqlite3BtreeKey
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@saveCursor
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR _pKey$1[ebp]
mov	DWORD PTR [ecx+64], edx
jmp	SHORT $LN3@saveCursor
mov	eax, DWORD PTR _pKey$1[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN6@saveCursor
mov	DWORD PTR _rc$[ebp], 7
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@saveCursor
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_btreeReleaseAllCursorPages
add	esp, 4
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+81], 3
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
and	ecx, -5					
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+80], cl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeReleaseAllCursorPages PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@btreeRelea
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
cmp	DWORD PTR _i$[ebp], edx
jg	SHORT $LN1@btreeRelea
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+128]
push	edx
call	_releasePage
add	esp, 4
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [ecx+eax*4+128], 0
jmp	SHORT $LN2@btreeRelea
or	edx, -1
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+84], dx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeClearHasContent PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3BitvecDestroy
add	esp, 4
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+60], 0
pop	ebp
ret	0
ENDP
_btreeGetHasContent PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@btreeGetHa
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BitvecSize
add	esp, 4
cmp	DWORD PTR _pgno$[ebp], eax
ja	SHORT $LN3@btreeGetHa
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BitvecTest
add	esp, 8
test	eax, eax
je	SHORT $LN4@btreeGetHa
mov	DWORD PTR tv73[ebp], 1
jmp	SHORT $LN5@btreeGetHa
mov	DWORD PTR tv73[ebp], 0
mov	eax, DWORD PTR tv73[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_btreeSetHasContent PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax+60], 0
jne	SHORT $LN3@btreeSetHa
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
call	_sqlite3BitvecCreate
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+60], eax
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+60], 0
jne	SHORT $LN3@btreeSetHa
mov	DWORD PTR _rc$[ebp], 7
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@btreeSetHa
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3BitvecSize
add	esp, 4
cmp	DWORD PTR _pgno$[ebp], eax
ja	SHORT $LN1@btreeSetHa
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3BitvecSet
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_invalidateIncrblobCursors PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pBtree$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN5@invalidate
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN6@invalidate
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+80]
and	ecx, 16					
je	SHORT $LN2@invalidate
cmp	DWORD PTR _isClearTable$[ebp], 0
jne	SHORT $LN1@invalidate
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv84[ebp], edx
mov	eax, DWORD PTR tv84[ebp]
mov	ecx, DWORD PTR [eax+24]
cmp	ecx, DWORD PTR _iRow$[ebp]
jne	SHORT $LN2@invalidate
mov	edx, DWORD PTR tv84[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR _iRow$[ebp+4]
jne	SHORT $LN2@invalidate
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+81], 0
jmp	SHORT $LN4@invalidate
mov	esp, ebp
pop	ebp
ret	0
ENDP
_invalidateAllOverflowCache PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@invalidate
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@invalidate
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, -5					
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+80], dl
jmp	SHORT $LN2@invalidate
mov	esp, ebp
pop	ebp
ret	0
ENDP
_releasePage PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pPage$[ebp], 0
je	SHORT $LN2@releasePag
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerUnrefNotNull
add	esp, 4
pop	ebp
ret	0
ENDP
_downgradeAllSharedCacheTableLocks PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+76]
cmp	eax, DWORD PTR _p$[ebp]
jne	SHORT $LN5@downgradeA
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+76], 0
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, -97				
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR _pLock$1[ebp], eax
jmp	SHORT $LN3@downgradeA
mov	ecx, DWORD PTR _pLock$1[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pLock$1[ebp], edx
cmp	DWORD PTR _pLock$1[ebp], 0
je	SHORT $LN5@downgradeA
mov	eax, DWORD PTR _pLock$1[ebp]
mov	BYTE PTR [eax+8], 1
jmp	SHORT $LN2@downgradeA
mov	esp, ebp
pop	ebp
ret	0
ENDP
_clearAllSharedCacheTableLocks PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
add	edx, 72					
mov	DWORD PTR _ppIter$[ebp], edx
mov	eax, DWORD PTR _ppIter$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN7@clearAllSh
mov	ecx, DWORD PTR _ppIter$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pLock$1[ebp], edx
mov	eax, DWORD PTR _pLock$1[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _p$[ebp]
jne	SHORT $LN6@clearAllSh
mov	edx, DWORD PTR _ppIter$[ebp]
mov	eax, DWORD PTR _pLock$1[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _pLock$1[ebp]
cmp	DWORD PTR [edx+4], 1
je	SHORT $LN5@clearAllSh
mov	eax, DWORD PTR _pLock$1[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN4@clearAllSh
mov	ecx, DWORD PTR _pLock$1[ebp]
add	ecx, 12					
mov	DWORD PTR _ppIter$[ebp], ecx
jmp	SHORT $LN8@clearAllSh
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+76]
cmp	eax, DWORD PTR _p$[ebp]
jne	SHORT $LN3@clearAllSh
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+76], 0
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, -97				
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
jmp	SHORT $LN9@clearAllSh
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+40], 2
jne	SHORT $LN9@clearAllSh
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, -65				
mov	edx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [edx+22], cx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setSharedCacheTableLock PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	DWORD PTR _pLock$[ebp], 0
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR _pIter$[ebp], eax
jmp	SHORT $LN7@setSharedC
mov	ecx, DWORD PTR _pIter$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pIter$[ebp], edx
cmp	DWORD PTR _pIter$[ebp], 0
je	SHORT $LN5@setSharedC
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _iTable$[ebp]
jne	SHORT $LN4@setSharedC
mov	edx, DWORD PTR _pIter$[ebp]
mov	eax, DWORD PTR [edx]
cmp	eax, DWORD PTR _p$[ebp]
jne	SHORT $LN4@setSharedC
mov	ecx, DWORD PTR _pIter$[ebp]
mov	DWORD PTR _pLock$[ebp], ecx
jmp	SHORT $LN5@setSharedC
jmp	SHORT $LN6@setSharedC
cmp	DWORD PTR _pLock$[ebp], 0
jne	SHORT $LN3@setSharedC
push	16					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pLock$[ebp], eax
cmp	DWORD PTR _pLock$[ebp], 0
jne	SHORT $LN2@setSharedC
mov	eax, 7
jmp	SHORT $LN8@setSharedC
mov	edx, DWORD PTR _pLock$[ebp]
mov	eax, DWORD PTR _iTable$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pLock$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pLock$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR [eax+12], edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _pLock$[ebp]
mov	DWORD PTR [eax+72], ecx
movzx	edx, BYTE PTR _eLock$[ebp]
mov	eax, DWORD PTR _pLock$[ebp]
movzx	ecx, BYTE PTR [eax+8]
cmp	edx, ecx
jle	SHORT $LN1@setSharedC
mov	edx, DWORD PTR _pLock$[ebp]
mov	al, BYTE PTR _eLock$[ebp]
mov	BYTE PTR [edx+8], al
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_querySharedCacheTableLock PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+9]
test	eax, eax
jne	SHORT $LN7@queryShare
xor	eax, eax
jmp	$LN8@queryShare
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+76]
cmp	edx, DWORD PTR _p$[ebp]
je	SHORT $LN6@queryShare
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 32					
je	SHORT $LN6@queryShare
mov	eax, 262				
jmp	SHORT $LN8@queryShare
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR _pIter$[ebp], eax
jmp	SHORT $LN5@queryShare
mov	ecx, DWORD PTR _pIter$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pIter$[ebp], edx
cmp	DWORD PTR _pIter$[ebp], 0
je	SHORT $LN3@queryShare
mov	eax, DWORD PTR _pIter$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _p$[ebp]
je	SHORT $LN2@queryShare
mov	edx, DWORD PTR _pIter$[ebp]
mov	eax, DWORD PTR [edx+4]
cmp	eax, DWORD PTR _iTab$[ebp]
jne	SHORT $LN2@queryShare
mov	ecx, DWORD PTR _pIter$[ebp]
movzx	edx, BYTE PTR [ecx+8]
movzx	eax, BYTE PTR _eLock$[ebp]
cmp	edx, eax
je	SHORT $LN2@queryShare
movzx	ecx, BYTE PTR _eLock$[ebp]
cmp	ecx, 2
jne	SHORT $LN1@queryShare
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
or	eax, 64					
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
mov	eax, 262				
jmp	SHORT $LN8@queryShare
jmp	SHORT $LN4@queryShare
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_unlockBtreeMutex PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+10], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_lockBtreeMutex PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+10], 1
pop	ebp
ret	0
ENDP
_walWriteOneFrame PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pData$[ebp], ecx
lea	edx, DWORD PTR _aFrame$[ebp]
push	edx
mov	eax, DWORD PTR _pData$[ebp]
push	eax
mov	ecx, DWORD PTR _nTruncate$[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_walEncodeFrame
add	esp, 20					
mov	eax, DWORD PTR _iOffset$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOffset$[ebp]
push	ecx
push	24					
lea	edx, DWORD PTR _aFrame$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_walWriteToLog
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@walWriteOn
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN2@walWriteOn
mov	ecx, DWORD PTR _iOffset$[ebp]
add	ecx, 24					
mov	edx, DWORD PTR _iOffset$[ebp+4]
adc	edx, 0
push	edx
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pData$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_walWriteToLog
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walWriteToLog PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR tv131[ebp], eax
mov	ecx, DWORD PTR tv131[ebp]
mov	edx, DWORD PTR _iOffset$[ebp+4]
cmp	edx, DWORD PTR [ecx+12]
jg	$LN4@walWriteTo
jl	SHORT $LN7@walWriteTo
mov	eax, DWORD PTR tv131[ebp]
mov	ecx, DWORD PTR _iOffset$[ebp]
cmp	ecx, DWORD PTR [eax+8]
jae	$LN4@walWriteTo
mov	eax, DWORD PTR _iAmt$[ebp]
cdq
add	eax, DWORD PTR _iOffset$[ebp]
adc	edx, DWORD PTR _iOffset$[ebp+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv148[ebp], eax
mov	DWORD PTR tv148[ebp+4], edx
mov	DWORD PTR tv151[ebp], ecx
mov	edx, DWORD PTR tv151[ebp]
mov	eax, DWORD PTR tv148[ebp+4]
cmp	eax, DWORD PTR [edx+12]
jl	$LN4@walWriteTo
jg	SHORT $LN8@walWriteTo
mov	ecx, DWORD PTR tv151[ebp]
mov	edx, DWORD PTR tv148[ebp]
cmp	edx, DWORD PTR [ecx+8]
jb	$LN4@walWriteTo
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, DWORD PTR _iOffset$[ebp]
mov	edx, DWORD PTR [eax+12]
sbb	edx, DWORD PTR _iOffset$[ebp+4]
mov	DWORD PTR _iFirstAmt$1[ebp], ecx
mov	eax, DWORD PTR _iOffset$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOffset$[ebp]
push	ecx
mov	edx, DWORD PTR _iFirstAmt$1[ebp]
push	edx
mov	eax, DWORD PTR _pContent$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@walWriteTo
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN5@walWriteTo
mov	eax, DWORD PTR _iFirstAmt$1[ebp]
cdq
add	eax, DWORD PTR _iOffset$[ebp]
adc	edx, DWORD PTR _iOffset$[ebp+4]
mov	DWORD PTR _iOffset$[ebp], eax
mov	DWORD PTR _iOffset$[ebp+4], edx
mov	eax, DWORD PTR _iAmt$[ebp]
sub	eax, DWORD PTR _iFirstAmt$1[ebp]
mov	DWORD PTR _iAmt$[ebp], eax
mov	ecx, DWORD PTR _pContent$[ebp]
add	ecx, DWORD PTR _iFirstAmt$1[ebp]
mov	DWORD PTR _pContent$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
and	eax, 19					
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _iAmt$[ebp], 0
je	SHORT $LN1@walWriteTo
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@walWriteTo
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN5@walWriteTo
mov	eax, DWORD PTR _iOffset$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOffset$[ebp]
push	ecx
mov	edx, DWORD PTR _iAmt$[ebp]
push	edx
mov	eax, DWORD PTR _pContent$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walRestartLog PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
movsx	ecx, WORD PTR [eax+40]
test	ecx, ecx
jne	$LN11@walRestart
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walCkptInfo
add	esp, 4
mov	DWORD PTR _pInfo$4[ebp], eax
mov	eax, DWORD PTR _pInfo$4[ebp]
cmp	DWORD PTR [eax], 0
jbe	$LN10@walRestart
lea	ecx, DWORD PTR _salt1$2[ebp]
push	ecx
push	4
call	_sqlite3_randomness
add	esp, 8
push	4
push	4
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walLockExclusive
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN9@walRestart
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 84					
mov	DWORD PTR _aSalt$3[ebp], eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+104]
add	edx, 1
mov	eax, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [eax+104], edx
mov	ecx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [ecx+68], 0
mov	edx, 4
imul	eax, edx, 0
add	eax, DWORD PTR _aSalt$3[ebp]
push	eax
call	_sqlite3Get4byte
add	esp, 4
add	eax, 1
push	eax
mov	ecx, 4
imul	edx, ecx, 0
add	edx, DWORD PTR _aSalt$3[ebp]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _aSalt$3[ebp]
mov	edx, DWORD PTR _salt1$2[ebp]
mov	DWORD PTR [ecx+eax], edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexWriteHdr
add	esp, 4
mov	ecx, DWORD PTR _pInfo$4[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pInfo$4[ebp]
mov	DWORD PTR [eax+edx+4], 0
mov	DWORD PTR _i$5[ebp], 2
jmp	SHORT $LN8@walRestart
mov	ecx, DWORD PTR _i$5[ebp]
add	ecx, 1
mov	DWORD PTR _i$5[ebp], ecx
cmp	DWORD PTR _i$5[ebp], 5
jge	SHORT $LN6@walRestart
mov	edx, DWORD PTR _i$5[ebp]
mov	eax, DWORD PTR _pInfo$4[ebp]
mov	DWORD PTR [eax+edx*4+4], -1
jmp	SHORT $LN7@walRestart
push	4
push	4
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walUnlockExclusive
add	esp, 12					
jmp	SHORT $LN10@walRestart
cmp	DWORD PTR _rc$[ebp], 5
je	SHORT $LN10@walRestart
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN12@walRestart
push	3
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockShared
add	esp, 8
or	eax, -1
mov	ecx, DWORD PTR _pWal$[ebp]
mov	WORD PTR [ecx+40], ax
mov	DWORD PTR _cnt$[ebp], 0
mov	edx, DWORD PTR _cnt$[ebp]
add	edx, 1
mov	DWORD PTR _cnt$[ebp], edx
mov	eax, DWORD PTR _cnt$[ebp]
push	eax
push	1
lea	ecx, DWORD PTR _notUsed$1[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walTryBeginRead
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], -1
je	SHORT $LN3@walRestart
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walTryBeginRead PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _cnt$[ebp], 5
jle	SHORT $LN33@walTryBegi
mov	DWORD PTR _nDelay$1[ebp], 1
cmp	DWORD PTR _cnt$[ebp], 100		
jle	SHORT $LN32@walTryBegi
mov	eax, 15					
jmp	$LN34@walTryBegi
cmp	DWORD PTR _cnt$[ebp], 10		
jl	SHORT $LN31@walTryBegi
mov	eax, DWORD PTR _cnt$[ebp]
sub	eax, 9
imul	ecx, eax, 238
mov	DWORD PTR _nDelay$1[ebp], ecx
mov	edx, DWORD PTR _nDelay$1[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3OsSleep
add	esp, 8
cmp	DWORD PTR _useWal$[ebp], 0
jne	SHORT $LN30@walTryBegi
mov	edx, DWORD PTR _pChanged$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexReadHdr
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN29@walTryBegi
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
cmp	DWORD PTR [edx+ecx], 0
jne	SHORT $LN28@walTryBegi
mov	DWORD PTR _rc$[ebp], -1
jmp	SHORT $LN29@walTryBegi
push	2
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walLockShared
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN26@walTryBegi
push	2
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walUnlockShared
add	esp, 8
mov	DWORD PTR _rc$[ebp], -1
jmp	SHORT $LN29@walTryBegi
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN29@walTryBegi
mov	DWORD PTR _rc$[ebp], 261		
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN30@walTryBegi
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN34@walTryBegi
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walCkptInfo
add	esp, 4
mov	DWORD PTR _pInfo$[ebp], eax
cmp	DWORD PTR _useWal$[ebp], 0
jne	$LN22@walTryBegi
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pWal$[ebp]
cmp	eax, DWORD PTR [ecx+68]
jne	SHORT $LN22@walTryBegi
push	3
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walLockShared
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walShmBarrier
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN21@walTryBegi
push	48					
mov	ecx, DWORD PTR _pWal$[ebp]
add	ecx, 52					
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walIndexHdr
add	esp, 4
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN20@walTryBegi
push	3
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walUnlockShared
add	esp, 8
or	eax, -1
jmp	$LN34@walTryBegi
xor	ecx, ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	WORD PTR [edx+40], cx
xor	eax, eax
jmp	$LN34@walTryBegi
jmp	SHORT $LN22@walTryBegi
cmp	DWORD PTR _rc$[ebp], 5
je	SHORT $LN22@walTryBegi
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN34@walTryBegi
mov	DWORD PTR _mxReadMark$[ebp], 0
mov	DWORD PTR _mxI$[ebp], 0
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN17@walTryBegi
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 5
jge	SHORT $LN15@walTryBegi
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+4]
mov	DWORD PTR _thisMark$2[ebp], eax
mov	ecx, DWORD PTR _mxReadMark$[ebp]
cmp	ecx, DWORD PTR _thisMark$2[ebp]
ja	SHORT $LN14@walTryBegi
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR _thisMark$2[ebp]
cmp	eax, DWORD PTR [edx+68]
ja	SHORT $LN14@walTryBegi
mov	ecx, DWORD PTR _thisMark$2[ebp]
mov	DWORD PTR _mxReadMark$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR _mxI$[ebp], edx
jmp	SHORT $LN16@walTryBegi
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+46]
and	ecx, 2
jne	$LN13@walTryBegi
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR _mxReadMark$[ebp]
cmp	eax, DWORD PTR [edx+68]
jb	SHORT $LN12@walTryBegi
cmp	DWORD PTR _mxI$[ebp], 0
jne	$LN13@walTryBegi
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN11@walTryBegi
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 5
jge	SHORT $LN13@walTryBegi
push	1
mov	edx, DWORD PTR _i$[ebp]
add	edx, 3
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walLockExclusive
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@walTryBegi
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pInfo$[ebp]
lea	eax, DWORD PTR [edx+ecx*4+4]
mov	DWORD PTR tv173[ebp], eax
mov	ecx, DWORD PTR tv173[ebp]
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR tv173[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _mxReadMark$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _mxI$[ebp], eax
push	1
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 3
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockExclusive
add	esp, 12					
jmp	SHORT $LN13@walTryBegi
jmp	SHORT $LN7@walTryBegi
cmp	DWORD PTR _rc$[ebp], 5
je	SHORT $LN7@walTryBegi
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN34@walTryBegi
jmp	SHORT $LN10@walTryBegi
cmp	DWORD PTR _mxI$[ebp], 0
jne	SHORT $LN5@walTryBegi
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN36@walTryBegi
mov	DWORD PTR tv181[ebp], -1
jmp	SHORT $LN37@walTryBegi
mov	DWORD PTR tv181[ebp], 520		
mov	eax, DWORD PTR tv181[ebp]
jmp	$LN34@walTryBegi
mov	eax, DWORD PTR _mxI$[ebp]
add	eax, 3
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walLockShared
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@walTryBegi
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN38@walTryBegi
mov	DWORD PTR tv188[ebp], -1
jmp	SHORT $LN39@walTryBegi
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR tv188[ebp], edx
mov	eax, DWORD PTR tv188[ebp]
jmp	SHORT $LN34@walTryBegi
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walShmBarrier
add	esp, 4
mov	ecx, DWORD PTR _mxI$[ebp]
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+4]
cmp	eax, DWORD PTR _mxReadMark$[ebp]
jne	SHORT $LN2@walTryBegi
push	48					
mov	ecx, DWORD PTR _pWal$[ebp]
add	ecx, 52					
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walIndexHdr
add	esp, 4
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN3@walTryBegi
mov	eax, DWORD PTR _mxI$[ebp]
add	eax, 3
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walUnlockShared
add	esp, 8
or	eax, -1
jmp	SHORT $LN34@walTryBegi
jmp	SHORT $LN1@walTryBegi
mov	edx, DWORD PTR _pWal$[ebp]
mov	ax, WORD PTR _mxI$[ebp]
mov	WORD PTR [edx+40], ax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIndexReadHdr PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
lea	eax, DWORD PTR _page0$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walIndexPage
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@walIndexRe
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN10@walIndexRe
cmp	DWORD PTR _page0$[ebp], 0
je	SHORT $LN12@walIndexRe
mov	edx, DWORD PTR _pChanged$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexTryHdr
add	esp, 8
mov	DWORD PTR tv73[ebp], eax
jmp	SHORT $LN13@walIndexRe
mov	DWORD PTR tv73[ebp], 1
mov	ecx, DWORD PTR tv73[ebp]
mov	DWORD PTR _badHdr$[ebp], ecx
cmp	DWORD PTR _badHdr$[ebp], 0
je	$LN8@walIndexRe
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+46]
and	eax, 2
je	SHORT $LN7@walIndexRe
push	0
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walLockShared
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@walIndexRe
push	0
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockShared
add	esp, 8
mov	DWORD PTR _rc$[ebp], 264		
jmp	$LN8@walIndexRe
push	1
push	0
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walLockExclusive
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@walIndexRe
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+44], 1
lea	edx, DWORD PTR _page0$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexPage
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@walIndexRe
mov	ecx, DWORD PTR _pChanged$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walIndexTryHdr
add	esp, 8
mov	DWORD PTR _badHdr$[ebp], eax
cmp	DWORD PTR _badHdr$[ebp], 0
je	SHORT $LN3@walIndexRe
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexRecover
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pChanged$[ebp]
mov	DWORD PTR [ecx], 1
mov	edx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [edx+44], 0
push	1
push	0
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walUnlockExclusive
add	esp, 12					
cmp	DWORD PTR _badHdr$[ebp], 0
jne	SHORT $LN1@walIndexRe
mov	ecx, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [ecx+52], 3007000		
je	SHORT $LN1@walIndexRe
push	49109					
call	_sqlite3CantopenError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIndexTryHdr PROC
push	ebp
mov	ebp, esp
sub	esp, 112				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexHdr
add	esp, 4
mov	DWORD PTR _aHdr$[ebp], eax
push	48					
mov	ecx, 48					
imul	edx, ecx, 0
add	edx, DWORD PTR _aHdr$[ebp]
push	edx
lea	eax, DWORD PTR _h1$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walShmBarrier
add	esp, 4
push	48					
mov	edx, 48					
shl	edx, 0
add	edx, DWORD PTR _aHdr$[ebp]
push	edx
lea	eax, DWORD PTR _h2$[ebp]
push	eax
call	_memcpy
add	esp, 12					
push	48					
lea	ecx, DWORD PTR _h2$[ebp]
push	ecx
lea	edx, DWORD PTR _h1$[ebp]
push	edx
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN5@walIndexTr
mov	eax, 1
jmp	$LN6@walIndexTr
movzx	eax, BYTE PTR _h1$[ebp+12]
test	eax, eax
jne	SHORT $LN4@walIndexTr
mov	eax, 1
jmp	$LN6@walIndexTr
lea	ecx, DWORD PTR _aCksum$[ebp]
push	ecx
push	0
push	40					
lea	edx, DWORD PTR _h1$[ebp]
push	edx
push	1
call	_walChecksumBytes
add	esp, 20					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aCksum$[ebp+ecx]
cmp	ecx, DWORD PTR _h1$[ebp+eax+40]
jne	SHORT $LN2@walIndexTr
mov	edx, 4
shl	edx, 0
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _aCksum$[ebp+edx]
cmp	ecx, DWORD PTR _h1$[ebp+eax+40]
je	SHORT $LN3@walIndexTr
mov	eax, 1
jmp	SHORT $LN6@walIndexTr
push	48					
lea	edx, DWORD PTR _h1$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 52					
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN1@walIndexTr
mov	ecx, DWORD PTR _pChanged$[ebp]
mov	DWORD PTR [ecx], 1
push	48					
lea	edx, DWORD PTR _h1$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 52					
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pWal$[ebp]
movzx	edx, WORD PTR [ecx+66]
and	edx, 65024				
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, WORD PTR [eax+66]
and	ecx, 1
shl	ecx, 16					
add	edx, ecx
mov	eax, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [eax+36], edx
xor	eax, eax
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walLimitSize PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
call	_sqlite3BeginBenignMalloc
lea	eax, DWORD PTR _sz$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rx$[ebp], eax
cmp	DWORD PTR _rx$[ebp], 0
jne	SHORT $LN2@walLimitSi
mov	eax, DWORD PTR _sz$[ebp+4]
cmp	eax, DWORD PTR _nMax$[ebp+4]
jl	SHORT $LN2@walLimitSi
jg	SHORT $LN5@walLimitSi
mov	ecx, DWORD PTR _sz$[ebp]
cmp	ecx, DWORD PTR _nMax$[ebp]
jbe	SHORT $LN2@walLimitSi
mov	edx, DWORD PTR _nMax$[ebp+4]
push	edx
mov	eax, DWORD PTR _nMax$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rx$[ebp], eax
call	_sqlite3EndBenignMalloc
cmp	DWORD PTR _rx$[ebp], 0
je	SHORT $LN3@walLimitSi
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+100]
push	ecx
push	OFFSET $SG92600
mov	edx, DWORD PTR _rx$[ebp]
push	edx
call	_sqlite3_log
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walCheckpoint PROC
push	ebp
mov	ebp, esp
sub	esp, 84					
push	esi
mov	DWORD PTR _pIter$[ebp], 0
mov	DWORD PTR _iDbpage$[ebp], 0
mov	DWORD PTR _iFrame$[ebp], 0
mov	DWORD PTR _xBusy$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walPagesize
add	esp, 4
mov	DWORD PTR _szPage$[ebp], eax
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walCkptInfo
add	esp, 4
mov	DWORD PTR _pInfo$[ebp], eax
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pWal$[ebp]
cmp	eax, DWORD PTR [ecx+68]
jb	SHORT $LN31@walCheckpo
xor	eax, eax
jmp	$LN32@walCheckpo
lea	edx, DWORD PTR _pIter$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIteratorInit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN30@walCheckpo
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN32@walCheckpo
cmp	DWORD PTR _eMode$[ebp], 0
je	SHORT $LN29@walCheckpo
mov	ecx, DWORD PTR _xBusyCall$[ebp]
mov	DWORD PTR _xBusy$[ebp], ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _mxSafeFrame$[ebp], eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _mxPage$[ebp], edx
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN28@walCheckpo
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 5
jge	$LN26@walCheckpo
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+4]
mov	DWORD PTR _y$6[ebp], eax
mov	ecx, DWORD PTR _mxSafeFrame$[ebp]
cmp	ecx, DWORD PTR _y$6[ebp]
jbe	SHORT $LN25@walCheckpo
push	1
mov	edx, DWORD PTR _i$[ebp]
add	edx, 3
push	edx
mov	eax, DWORD PTR _pBusyArg$[ebp]
push	eax
mov	ecx, DWORD PTR _xBusy$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walBusyLock
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN24@walCheckpo
cmp	DWORD PTR _i$[ebp], 1
jne	SHORT $LN34@walCheckpo
mov	eax, DWORD PTR _mxSafeFrame$[ebp]
mov	DWORD PTR tv130[ebp], eax
jmp	SHORT $LN35@walCheckpo
mov	DWORD PTR tv130[ebp], -1
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pInfo$[ebp]
mov	eax, DWORD PTR tv130[ebp]
mov	DWORD PTR [edx+ecx*4+4], eax
push	1
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 3
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockExclusive
add	esp, 12					
jmp	SHORT $LN25@walCheckpo
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN22@walCheckpo
mov	eax, DWORD PTR _y$6[ebp]
mov	DWORD PTR _mxSafeFrame$[ebp], eax
mov	DWORD PTR _xBusy$[ebp], 0
jmp	SHORT $LN25@walCheckpo
jmp	$walcheckpoint_out$38
jmp	$LN27@walCheckpo
mov	ecx, DWORD PTR _pInfo$[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _mxSafeFrame$[ebp]
jae	$LN20@walCheckpo
push	1
push	3
mov	eax, DWORD PTR _pBusyArg$[ebp]
push	eax
mov	ecx, DWORD PTR _xBusy$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walBusyLock
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN20@walCheckpo
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nBackfill$5[ebp], ecx
cmp	DWORD PTR _sync_flags$[ebp], 0
je	SHORT $LN19@walCheckpo
mov	edx, DWORD PTR _sync_flags$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN16@walCheckpo
mov	ecx, DWORD PTR _mxPage$[ebp]
xor	esi, esi
mov	eax, DWORD PTR _szPage$[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _nReq$3[ebp], eax
mov	DWORD PTR _nReq$3[ebp+4], edx
lea	edx, DWORD PTR _nSize$1[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN16@walCheckpo
mov	edx, DWORD PTR _nSize$1[ebp+4]
cmp	edx, DWORD PTR _nReq$3[ebp+4]
jg	SHORT $LN16@walCheckpo
jl	SHORT $LN37@walCheckpo
mov	eax, DWORD PTR _nSize$1[ebp]
cmp	eax, DWORD PTR _nReq$3[ebp]
jae	SHORT $LN16@walCheckpo
lea	ecx, DWORD PTR _nReq$3[ebp]
push	ecx
push	5
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3OsFileControlHint
add	esp, 12					
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN15@walCheckpo
lea	ecx, DWORD PTR _iFrame$[ebp]
push	ecx
lea	edx, DWORD PTR _iDbpage$[ebp]
push	edx
mov	eax, DWORD PTR _pIter$[ebp]
push	eax
call	_walIteratorNext
add	esp, 12					
test	eax, eax
jne	$LN15@walCheckpo
mov	ecx, DWORD PTR _iFrame$[ebp]
cmp	ecx, DWORD PTR _nBackfill$5[ebp]
jbe	SHORT $LN13@walCheckpo
mov	edx, DWORD PTR _iFrame$[ebp]
cmp	edx, DWORD PTR _mxSafeFrame$[ebp]
ja	SHORT $LN13@walCheckpo
mov	eax, DWORD PTR _iDbpage$[ebp]
cmp	eax, DWORD PTR _mxPage$[ebp]
jbe	SHORT $LN14@walCheckpo
jmp	SHORT $LN16@walCheckpo
mov	ecx, DWORD PTR _iFrame$[ebp]
sub	ecx, 1
xor	esi, esi
mov	eax, DWORD PTR _szPage$[ebp]
add	eax, 24					
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
add	eax, 56					
adc	edx, 0
mov	DWORD PTR _iOffset$4[ebp], eax
mov	DWORD PTR _iOffset$4[ebp+4], edx
mov	edx, DWORD PTR _iOffset$4[ebp+4]
push	edx
mov	eax, DWORD PTR _iOffset$4[ebp]
push	eax
mov	ecx, DWORD PTR _szPage$[ebp]
push	ecx
mov	edx, DWORD PTR _zBuf$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@walCheckpo
jmp	SHORT $LN15@walCheckpo
mov	ecx, DWORD PTR _iDbpage$[ebp]
sub	ecx, 1
xor	esi, esi
mov	eax, DWORD PTR _szPage$[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _iOffset$4[ebp], eax
mov	DWORD PTR _iOffset$4[ebp+4], edx
mov	edx, DWORD PTR _iOffset$4[ebp+4]
push	edx
mov	eax, DWORD PTR _iOffset$4[ebp]
push	eax
mov	ecx, DWORD PTR _szPage$[ebp]
push	ecx
mov	edx, DWORD PTR _zBuf$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@walCheckpo
jmp	SHORT $LN15@walCheckpo
jmp	$LN16@walCheckpo
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@walCheckpo
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walIndexHdr
add	esp, 4
mov	eax, DWORD PTR [eax+16]
cmp	DWORD PTR _mxSafeFrame$[ebp], eax
jne	SHORT $LN9@walCheckpo
mov	ecx, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [ecx+72]
xor	esi, esi
mov	eax, DWORD PTR _szPage$[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _szDb$2[ebp], eax
mov	DWORD PTR _szDb$2[ebp+4], edx
mov	edx, DWORD PTR _szDb$2[ebp+4]
push	edx
mov	eax, DWORD PTR _szDb$2[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN9@walCheckpo
cmp	DWORD PTR _sync_flags$[ebp], 0
je	SHORT $LN9@walCheckpo
mov	eax, DWORD PTR _sync_flags$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@walCheckpo
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR _mxSafeFrame$[ebp]
mov	DWORD PTR [eax], ecx
push	1
push	3
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockExclusive
add	esp, 12					
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN6@walCheckpo
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $walcheckpoint_out$38
cmp	DWORD PTR _eMode$[ebp], 0
je	SHORT $walcheckpoint_out$38
mov	eax, DWORD PTR _pInfo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _pWal$[ebp]
cmp	ecx, DWORD PTR [edx+68]
jae	SHORT $LN4@walCheckpo
mov	DWORD PTR _rc$[ebp], 5
jmp	SHORT $walcheckpoint_out$38
cmp	DWORD PTR _eMode$[ebp], 2
jne	SHORT $walcheckpoint_out$38
push	4
push	4
mov	eax, DWORD PTR _pBusyArg$[ebp]
push	eax
mov	ecx, DWORD PTR _xBusy$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walBusyLock
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $walcheckpoint_out$38
push	4
push	4
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walUnlockExclusive
add	esp, 12					
mov	ecx, DWORD PTR _pIter$[ebp]
push	ecx
call	_walIteratorFree
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walPagesize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWal$[ebp]
movzx	eax, WORD PTR [eax+66]
and	eax, 65024				
mov	ecx, DWORD PTR _pWal$[ebp]
movzx	edx, WORD PTR [ecx+66]
and	edx, 1
shl	edx, 16					
add	eax, edx
pop	ebp
ret	0
ENDP
_walBusyLock PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _lockIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walLockExclusive
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _xBusy$[ebp], 0
je	SHORT $LN2@walBusyLoc
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN2@walBusyLoc
mov	eax, DWORD PTR _pBusyArg$[ebp]
push	eax
call	DWORD PTR _xBusy$[ebp]
add	esp, 4
test	eax, eax
jne	SHORT $LN4@walBusyLoc
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIteratorInit PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iLast$[ebp], ecx
mov	edx, DWORD PTR _iLast$[ebp]
push	edx
call	_walFramePage
add	esp, 4
add	eax, 1
mov	DWORD PTR _nSegment$[ebp], eax
mov	eax, DWORD PTR _nSegment$[ebp]
sub	eax, 1
imul	ecx, eax, 20
mov	edx, DWORD PTR _iLast$[ebp]
lea	eax, DWORD PTR [ecx+edx*2+28]
mov	DWORD PTR _nByte$[ebp], eax
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
call	_sqlite3ScratchMalloc
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN12@walIterato
mov	eax, 7
jmp	$LN13@walIterato
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _nSegment$[ebp]
mov	DWORD PTR [ecx+4], edx
cmp	DWORD PTR _iLast$[ebp], 4096		
jbe	SHORT $LN15@walIterato
mov	DWORD PTR tv82[ebp], 4096		
jmp	SHORT $LN16@walIterato
mov	eax, DWORD PTR _iLast$[ebp]
mov	DWORD PTR tv82[ebp], eax
mov	ecx, DWORD PTR tv82[ebp]
shl	ecx, 1
push	ecx
call	_sqlite3ScratchMalloc
add	esp, 4
mov	DWORD PTR _aTmp$[ebp], eax
cmp	DWORD PTR _aTmp$[ebp], 0
jne	SHORT $LN11@walIterato
mov	DWORD PTR _rc$[ebp], 7
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN10@walIterato
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN8@walIterato
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nSegment$[ebp]
jge	$LN8@walIterato
lea	ecx, DWORD PTR _iZero$5[ebp]
push	ecx
lea	edx, DWORD PTR _aPgno$4[ebp]
push	edx
lea	eax, DWORD PTR _aHash$1[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walHashGet
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN7@walIterato
mov	eax, DWORD PTR _aPgno$4[ebp]
add	eax, 4
mov	DWORD PTR _aPgno$4[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
cmp	ecx, DWORD PTR _nSegment$[ebp]
jne	SHORT $LN6@walIterato
mov	edx, DWORD PTR _iLast$[ebp]
sub	edx, DWORD PTR _iZero$5[ebp]
mov	DWORD PTR _nEntry$3[ebp], edx
jmp	SHORT $LN5@walIterato
mov	eax, DWORD PTR _aHash$1[ebp]
sub	eax, DWORD PTR _aPgno$4[ebp]
sar	eax, 2
mov	DWORD PTR _nEntry$3[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
imul	edx, DWORD PTR [ecx+4], 20
mov	eax, DWORD PTR _p$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
mov	edx, DWORD PTR _iZero$5[ebp]
lea	eax, DWORD PTR [ecx+edx*2]
mov	DWORD PTR _aIndex$2[ebp], eax
mov	ecx, DWORD PTR _iZero$5[ebp]
add	ecx, 1
mov	DWORD PTR _iZero$5[ebp], ecx
mov	DWORD PTR _j$6[ebp], 0
jmp	SHORT $LN4@walIterato
mov	edx, DWORD PTR _j$6[ebp]
add	edx, 1
mov	DWORD PTR _j$6[ebp], edx
mov	eax, DWORD PTR _j$6[ebp]
cmp	eax, DWORD PTR _nEntry$3[ebp]
jge	SHORT $LN2@walIterato
mov	ecx, DWORD PTR _j$6[ebp]
mov	edx, DWORD PTR _aIndex$2[ebp]
mov	ax, WORD PTR _j$6[ebp]
mov	WORD PTR [edx+ecx*2], ax
jmp	SHORT $LN3@walIterato
lea	ecx, DWORD PTR _nEntry$3[ebp]
push	ecx
mov	edx, DWORD PTR _aIndex$2[ebp]
push	edx
mov	eax, DWORD PTR _aTmp$[ebp]
push	eax
mov	ecx, DWORD PTR _aPgno$4[ebp]
push	ecx
call	_walMergesort
add	esp, 16					
imul	edx, DWORD PTR _i$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _iZero$5[ebp]
mov	DWORD PTR [eax+edx+24], ecx
imul	edx, DWORD PTR _i$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _nEntry$3[ebp]
mov	DWORD PTR [eax+edx+20], ecx
imul	edx, DWORD PTR _i$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _aIndex$2[ebp]
mov	DWORD PTR [eax+edx+12], ecx
imul	edx, DWORD PTR _i$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _aPgno$4[ebp]
mov	DWORD PTR [eax+edx+16], ecx
jmp	$LN9@walIterato
mov	edx, DWORD PTR _aTmp$[ebp]
push	edx
call	_sqlite3ScratchFree
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@walIterato
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_walIteratorFree
add	esp, 4
mov	ecx, DWORD PTR _pp$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIteratorFree PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3ScratchFree
add	esp, 4
pop	ebp
ret	0
ENDP
_walMergesort PROC
push	ebp
mov	ebp, esp
sub	esp, 136				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pnList$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nList$[ebp], ecx
mov	DWORD PTR _nMerge$[ebp], 0
mov	DWORD PTR _aMerge$[ebp], 0
mov	DWORD PTR _iSub$[ebp], 0
push	104					
push	0
lea	edx, DWORD PTR _aSub$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	DWORD PTR _iList$[ebp], 0
jmp	SHORT $LN10@walMergeso
mov	eax, DWORD PTR _iList$[ebp]
add	eax, 1
mov	DWORD PTR _iList$[ebp], eax
mov	ecx, DWORD PTR _iList$[ebp]
cmp	ecx, DWORD PTR _nList$[ebp]
jge	$LN8@walMergeso
mov	DWORD PTR _nMerge$[ebp], 1
mov	edx, DWORD PTR _iList$[ebp]
mov	eax, DWORD PTR _aList$[ebp]
lea	ecx, DWORD PTR [eax+edx*2]
mov	DWORD PTR _aMerge$[ebp], ecx
mov	DWORD PTR _iSub$[ebp], 0
jmp	SHORT $LN7@walMergeso
mov	edx, DWORD PTR _iSub$[ebp]
add	edx, 1
mov	DWORD PTR _iSub$[ebp], edx
mov	eax, 1
mov	ecx, DWORD PTR _iSub$[ebp]
shl	eax, cl
and	eax, DWORD PTR _iList$[ebp]
je	SHORT $LN5@walMergeso
mov	ecx, DWORD PTR _iSub$[ebp]
lea	edx, DWORD PTR _aSub$[ebp+ecx*8]
mov	DWORD PTR _p$1[ebp], edx
mov	eax, DWORD PTR _aBuffer$[ebp]
push	eax
lea	ecx, DWORD PTR _nMerge$[ebp]
push	ecx
lea	edx, DWORD PTR _aMerge$[ebp]
push	edx
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _aContent$[ebp]
push	ecx
call	_walMerge
add	esp, 24					
jmp	SHORT $LN6@walMergeso
mov	edx, DWORD PTR _iSub$[ebp]
mov	eax, DWORD PTR _aMerge$[ebp]
mov	DWORD PTR _aSub$[ebp+edx*8+4], eax
mov	ecx, DWORD PTR _iSub$[ebp]
mov	edx, DWORD PTR _nMerge$[ebp]
mov	DWORD PTR _aSub$[ebp+ecx*8], edx
jmp	$LN9@walMergeso
mov	eax, DWORD PTR _iSub$[ebp]
add	eax, 1
mov	DWORD PTR _iSub$[ebp], eax
jmp	SHORT $LN4@walMergeso
mov	ecx, DWORD PTR _iSub$[ebp]
add	ecx, 1
mov	DWORD PTR _iSub$[ebp], ecx
cmp	DWORD PTR _iSub$[ebp], 13		
jge	SHORT $LN2@walMergeso
mov	edx, 1
mov	ecx, DWORD PTR _iSub$[ebp]
shl	edx, cl
and	edx, DWORD PTR _nList$[ebp]
je	SHORT $LN1@walMergeso
mov	eax, DWORD PTR _iSub$[ebp]
lea	ecx, DWORD PTR _aSub$[ebp+eax*8]
mov	DWORD PTR _p$2[ebp], ecx
mov	edx, DWORD PTR _aBuffer$[ebp]
push	edx
lea	eax, DWORD PTR _nMerge$[ebp]
push	eax
lea	ecx, DWORD PTR _aMerge$[ebp]
push	ecx
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _p$2[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _aContent$[ebp]
push	eax
call	_walMerge
add	esp, 24					
jmp	SHORT $LN3@walMergeso
mov	ecx, DWORD PTR _pnList$[ebp]
mov	edx, DWORD PTR _nMerge$[ebp]
mov	DWORD PTR [ecx], edx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walMerge PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
mov	DWORD PTR _iLeft$[ebp], 0
mov	DWORD PTR _iRight$[ebp], 0
mov	DWORD PTR _iOut$[ebp], 0
mov	eax, DWORD PTR _pnRight$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nRight$[ebp], ecx
mov	edx, DWORD PTR _paRight$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _aRight$[ebp], eax
mov	ecx, DWORD PTR _iRight$[ebp]
cmp	ecx, DWORD PTR _nRight$[ebp]
jl	SHORT $LN5@walMerge
mov	edx, DWORD PTR _iLeft$[ebp]
cmp	edx, DWORD PTR _nLeft$[ebp]
jge	$LN6@walMerge
mov	eax, DWORD PTR _iLeft$[ebp]
cmp	eax, DWORD PTR _nLeft$[ebp]
jge	SHORT $LN4@walMerge
mov	ecx, DWORD PTR _iRight$[ebp]
cmp	ecx, DWORD PTR _nRight$[ebp]
jge	SHORT $LN3@walMerge
mov	edx, DWORD PTR _iLeft$[ebp]
mov	eax, DWORD PTR _aLeft$[ebp]
movzx	ecx, WORD PTR [eax+edx*2]
mov	edx, DWORD PTR _iRight$[ebp]
mov	eax, DWORD PTR _aRight$[ebp]
movzx	edx, WORD PTR [eax+edx*2]
mov	eax, DWORD PTR _aContent$[ebp]
mov	esi, DWORD PTR _aContent$[ebp]
mov	ecx, DWORD PTR [eax+ecx*4]
cmp	ecx, DWORD PTR [esi+edx*4]
jae	SHORT $LN4@walMerge
mov	edx, DWORD PTR _iLeft$[ebp]
mov	eax, DWORD PTR _aLeft$[ebp]
mov	cx, WORD PTR [eax+edx*2]
mov	WORD PTR _logpage$2[ebp], cx
mov	edx, DWORD PTR _iLeft$[ebp]
add	edx, 1
mov	DWORD PTR _iLeft$[ebp], edx
jmp	SHORT $LN2@walMerge
mov	eax, DWORD PTR _iRight$[ebp]
mov	ecx, DWORD PTR _aRight$[ebp]
mov	dx, WORD PTR [ecx+eax*2]
mov	WORD PTR _logpage$2[ebp], dx
mov	eax, DWORD PTR _iRight$[ebp]
add	eax, 1
mov	DWORD PTR _iRight$[ebp], eax
movzx	ecx, WORD PTR _logpage$2[ebp]
mov	edx, DWORD PTR _aContent$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
mov	DWORD PTR _dbpage$1[ebp], eax
mov	ecx, DWORD PTR _iOut$[ebp]
mov	edx, DWORD PTR _aTmp$[ebp]
mov	ax, WORD PTR _logpage$2[ebp]
mov	WORD PTR [edx+ecx*2], ax
mov	ecx, DWORD PTR _iOut$[ebp]
add	ecx, 1
mov	DWORD PTR _iOut$[ebp], ecx
mov	edx, DWORD PTR _iLeft$[ebp]
cmp	edx, DWORD PTR _nLeft$[ebp]
jge	SHORT $LN1@walMerge
mov	eax, DWORD PTR _iLeft$[ebp]
mov	ecx, DWORD PTR _aLeft$[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
mov	eax, DWORD PTR _aContent$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
cmp	ecx, DWORD PTR _dbpage$1[ebp]
jne	SHORT $LN1@walMerge
mov	edx, DWORD PTR _iLeft$[ebp]
add	edx, 1
mov	DWORD PTR _iLeft$[ebp], edx
jmp	$LN7@walMerge
mov	eax, DWORD PTR _paRight$[ebp]
mov	ecx, DWORD PTR _aLeft$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pnRight$[ebp]
mov	eax, DWORD PTR _iOut$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _iOut$[ebp]
shl	ecx, 1
push	ecx
mov	edx, DWORD PTR _aTmp$[ebp]
push	edx
mov	eax, DWORD PTR _aLeft$[ebp]
push	eax
call	_memcpy
add	esp, 12					
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIteratorNext PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _iRet$[ebp], -1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _iMin$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN7@walIterato
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN5@walIterato
imul	edx, DWORD PTR _i$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _pSegment$2[ebp], ecx
mov	edx, DWORD PTR _pSegment$2[ebp]
mov	eax, DWORD PTR _pSegment$2[ebp]
mov	ecx, DWORD PTR [edx]
cmp	ecx, DWORD PTR [eax+12]
jge	SHORT $LN3@walIterato
mov	edx, DWORD PTR _pSegment$2[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pSegment$2[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, WORD PTR [edx+eax*2]
mov	ecx, DWORD PTR _pSegment$2[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _iPg$1[ebp], eax
mov	ecx, DWORD PTR _iPg$1[ebp]
cmp	ecx, DWORD PTR _iMin$[ebp]
jbe	SHORT $LN2@walIterato
mov	edx, DWORD PTR _iPg$1[ebp]
cmp	edx, DWORD PTR _iRet$[ebp]
jae	SHORT $LN1@walIterato
mov	eax, DWORD PTR _iPg$1[ebp]
mov	DWORD PTR _iRet$[ebp], eax
mov	ecx, DWORD PTR _pSegment$2[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _pSegment$2[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, WORD PTR [ecx+edx*2]
mov	eax, DWORD PTR _pSegment$2[ebp]
add	edx, DWORD PTR [eax+16]
mov	ecx, DWORD PTR _piFrame$[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN3@walIterato
mov	edx, DWORD PTR _pSegment$2[ebp]
mov	eax, DWORD PTR [edx]
add	eax, 1
mov	ecx, DWORD PTR _pSegment$2[ebp]
mov	DWORD PTR [ecx], eax
jmp	SHORT $LN4@walIterato
jmp	$LN6@walIterato
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _iRet$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _piPage$[ebp]
mov	edx, DWORD PTR _iRet$[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _iRet$[ebp], -1
jne	SHORT $LN10@walIterato
mov	DWORD PTR tv130[ebp], 1
jmp	SHORT $LN11@walIterato
mov	DWORD PTR tv130[ebp], 0
mov	eax, DWORD PTR tv130[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIndexClose PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
cmp	ecx, 2
jne	SHORT $LN5@walIndexCl
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN4@walIndexCl
mov	edx, DWORD PTR _i$1[ebp]
add	edx, 1
mov	DWORD PTR _i$1[ebp], edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR _i$1[ebp]
cmp	ecx, DWORD PTR [eax+24]
jge	SHORT $LN2@walIndexCl
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _i$1[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _i$1[ebp]
mov	DWORD PTR [ecx+edx*4], 0
jmp	SHORT $LN3@walIndexCl
jmp	SHORT $LN6@walIndexCl
mov	eax, DWORD PTR _isDelete$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsShmUnmap
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIndexRecover PROC
push	ebp
mov	ebp, esp
sub	esp, 132				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
mov	DWORD PTR _aFrameCksum$[ebp], 0
mov	DWORD PTR _aFrameCksum$[ebp+4], 0
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+45]
add	ecx, 1
mov	DWORD PTR _iLock$[ebp], ecx
mov	edx, 8
sub	edx, DWORD PTR _iLock$[ebp]
mov	DWORD PTR _nLock$[ebp], edx
mov	eax, DWORD PTR _nLock$[ebp]
push	eax
mov	ecx, DWORD PTR _iLock$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walLockExclusive
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN23@walIndexRe
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN24@walIndexRe
push	48					
push	0
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 52					
push	eax
call	_memset
add	esp, 12					
lea	ecx, DWORD PTR _nSize$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN22@walIndexRe
jmp	$recovery_error$30
cmp	DWORD PTR _nSize$[ebp+4], 0
jl	$finished$31
jg	SHORT $LN28@walIndexRe
cmp	DWORD PTR _nSize$[ebp], 32		
jbe	$finished$31
mov	DWORD PTR _aFrame$12[ebp], 0
push	0
push	0
push	32					
lea	ecx, DWORD PTR _aBuf$14[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN20@walIndexRe
jmp	$recovery_error$30
mov	ecx, 1
imul	edx, ecx, 0
lea	eax, DWORD PTR _aBuf$14[ebp+edx]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _magic$5[ebp], eax
mov	ecx, 1
shl	ecx, 3
lea	edx, DWORD PTR _aBuf$14[ebp+ecx]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _szPage$13[ebp], eax
mov	eax, DWORD PTR _magic$5[ebp]
and	eax, -2					
cmp	eax, 931071618				
jne	SHORT $LN18@walIndexRe
mov	ecx, DWORD PTR _szPage$13[ebp]
sub	ecx, 1
and	ecx, DWORD PTR _szPage$13[ebp]
jne	SHORT $LN18@walIndexRe
cmp	DWORD PTR _szPage$13[ebp], 65536	
jg	SHORT $LN18@walIndexRe
cmp	DWORD PTR _szPage$13[ebp], 512		
jge	SHORT $LN19@walIndexRe
jmp	$finished$31
mov	edx, DWORD PTR _magic$5[ebp]
and	edx, 1
mov	eax, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [eax+65], dl
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _szPage$13[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, 1
imul	ecx, eax, 12
lea	edx, DWORD PTR _aBuf$14[ebp+ecx]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	ecx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [ecx+104], eax
push	8
mov	edx, 1
shl	edx, 4
lea	eax, DWORD PTR _aBuf$14[ebp+edx]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
add	ecx, 84					
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+65]
test	eax, eax
jne	SHORT $LN26@walIndexRe
mov	DWORD PTR tv160[ebp], 1
jmp	SHORT $LN27@walIndexRe
mov	DWORD PTR tv160[ebp], 0
mov	ecx, DWORD PTR _pWal$[ebp]
add	ecx, 76					
push	ecx
push	0
push	24					
lea	edx, DWORD PTR _aBuf$14[ebp]
push	edx
mov	eax, DWORD PTR tv160[ebp]
push	eax
call	_walChecksumBytes
add	esp, 20					
mov	ecx, 4
imul	esi, ecx, 0
mov	edx, 1
imul	eax, edx, 24
lea	ecx, DWORD PTR _aBuf$14[ebp+eax]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	edx, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [edx+esi+76], eax
jne	SHORT $LN16@walIndexRe
mov	esi, 4
shl	esi, 0
mov	eax, 1
imul	ecx, eax, 28
lea	edx, DWORD PTR _aBuf$14[ebp+ecx]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	ecx, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [ecx+esi+76], eax
je	SHORT $LN17@walIndexRe
jmp	$finished$31
mov	edx, 1
shl	edx, 2
lea	eax, DWORD PTR _aBuf$14[ebp+edx]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _version$3[ebp], eax
cmp	DWORD PTR _version$3[ebp], 3007000	
je	SHORT $LN15@walIndexRe
push	48238					
call	_sqlite3CantopenError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$finished$31
mov	ecx, DWORD PTR _szPage$13[ebp]
add	ecx, 24					
mov	DWORD PTR _szFrame$7[ebp], ecx
mov	edx, DWORD PTR _szFrame$7[ebp]
push	edx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _aFrame$12[ebp], eax
cmp	DWORD PTR _aFrame$12[ebp], 0
jne	SHORT $LN14@walIndexRe
mov	DWORD PTR _rc$[ebp], 7
jmp	$recovery_error$30
mov	eax, 1
imul	ecx, eax, 24
add	ecx, DWORD PTR _aFrame$12[ebp]
mov	DWORD PTR _aData$1[ebp], ecx
mov	DWORD PTR _iFrame$11[ebp], 0
mov	DWORD PTR _iOffset$8[ebp], 32		
mov	DWORD PTR _iOffset$8[ebp+4], 0
jmp	SHORT $LN13@walIndexRe
mov	eax, DWORD PTR _szFrame$7[ebp]
cdq
add	eax, DWORD PTR _iOffset$8[ebp]
adc	edx, DWORD PTR _iOffset$8[ebp+4]
mov	DWORD PTR _iOffset$8[ebp], eax
mov	DWORD PTR _iOffset$8[ebp+4], edx
mov	eax, DWORD PTR _szFrame$7[ebp]
cdq
add	eax, DWORD PTR _iOffset$8[ebp]
adc	edx, DWORD PTR _iOffset$8[ebp+4]
mov	DWORD PTR tv347[ebp], eax
mov	DWORD PTR tv347[ebp+4], edx
mov	edx, DWORD PTR tv347[ebp+4]
cmp	edx, DWORD PTR _nSize$[ebp+4]
jg	$LN11@walIndexRe
jl	SHORT $LN29@walIndexRe
mov	eax, DWORD PTR tv347[ebp]
cmp	eax, DWORD PTR _nSize$[ebp]
ja	$LN11@walIndexRe
mov	ecx, DWORD PTR _iFrame$11[ebp]
add	ecx, 1
mov	DWORD PTR _iFrame$11[ebp], ecx
mov	edx, DWORD PTR _iOffset$8[ebp+4]
push	edx
mov	eax, DWORD PTR _iOffset$8[ebp]
push	eax
mov	ecx, DWORD PTR _szFrame$7[ebp]
push	ecx
mov	edx, DWORD PTR _aFrame$12[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@walIndexRe
jmp	$LN11@walIndexRe
mov	edx, DWORD PTR _aFrame$12[ebp]
push	edx
mov	eax, DWORD PTR _aData$1[ebp]
push	eax
lea	ecx, DWORD PTR _nTruncate$6[ebp]
push	ecx
lea	edx, DWORD PTR _pgno$4[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walDecodeFrame
add	esp, 20					
mov	DWORD PTR _isValid$2[ebp], eax
cmp	DWORD PTR _isValid$2[ebp], 0
jne	SHORT $LN9@walIndexRe
jmp	$LN11@walIndexRe
mov	ecx, DWORD PTR _pgno$4[ebp]
push	ecx
mov	edx, DWORD PTR _iFrame$11[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexAppend
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@walIndexRe
jmp	SHORT $LN11@walIndexRe
cmp	DWORD PTR _nTruncate$6[ebp], 0
je	SHORT $LN7@walIndexRe
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _iFrame$11[ebp]
mov	DWORD PTR [ecx+68], edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR _nTruncate$6[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR _szPage$13[ebp]
and	edx, 65280				
mov	eax, DWORD PTR _szPage$13[ebp]
sar	eax, 16					
or	edx, eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	WORD PTR [ecx+66], dx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [ecx+eax+76]
mov	DWORD PTR _aFrameCksum$[ebp+edx], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+ecx+76]
mov	DWORD PTR _aFrameCksum$[ebp+edx], ecx
jmp	$LN12@walIndexRe
mov	edx, DWORD PTR _aFrame$12[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
jne	$recovery_error$30
mov	eax, 4
imul	ecx, eax, 0
mov	edx, 4
imul	eax, edx, 0
mov	edx, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR _aFrameCksum$[ebp+ecx]
mov	DWORD PTR [edx+eax+76], ecx
mov	edx, 4
shl	edx, 0
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _aFrameCksum$[ebp+edx]
mov	DWORD PTR [ecx+eax+76], edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexWriteHdr
add	esp, 4
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walCkptInfo
add	esp, 4
mov	DWORD PTR _pInfo$10[ebp], eax
mov	edx, DWORD PTR _pInfo$10[ebp]
mov	DWORD PTR [edx], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pInfo$10[ebp]
mov	DWORD PTR [edx+ecx+4], 0
mov	DWORD PTR _i$9[ebp], 1
jmp	SHORT $LN5@walIndexRe
mov	eax, DWORD PTR _i$9[ebp]
add	eax, 1
mov	DWORD PTR _i$9[ebp], eax
cmp	DWORD PTR _i$9[ebp], 5
jge	SHORT $LN3@walIndexRe
mov	ecx, DWORD PTR _i$9[ebp]
mov	edx, DWORD PTR _pInfo$10[ebp]
mov	DWORD PTR [edx+ecx*4+4], -1
jmp	SHORT $LN4@walIndexRe
mov	eax, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [eax+68], 0
je	SHORT $LN2@walIndexRe
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _pInfo$10[ebp]
mov	eax, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [eax+68]
mov	DWORD PTR [edx+ecx+4], eax
mov	ecx, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [ecx+72], 0
je	SHORT $recovery_error$30
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+100]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
push	OFFSET $SG92302
push	283					
call	_sqlite3_log
add	esp, 16					
mov	eax, DWORD PTR _nLock$[ebp]
push	eax
mov	ecx, DWORD PTR _iLock$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockExclusive
add	esp, 12					
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIndexAppend PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	DWORD PTR _iZero$[ebp], 0
mov	DWORD PTR _aPgno$[ebp], 0
mov	DWORD PTR _aHash$[ebp], 0
lea	eax, DWORD PTR _iZero$[ebp]
push	eax
lea	ecx, DWORD PTR _aPgno$[ebp]
push	ecx
lea	edx, DWORD PTR _aHash$[ebp]
push	edx
mov	eax, DWORD PTR _iFrame$[ebp]
push	eax
call	_walFramePage
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walHashGet
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN7@walIndexAp
mov	edx, DWORD PTR _iFrame$[ebp]
sub	edx, DWORD PTR _iZero$[ebp]
mov	DWORD PTR _idx$4[ebp], edx
cmp	DWORD PTR _idx$4[ebp], 1
jne	SHORT $LN6@walIndexAp
mov	eax, 2
shl	eax, 13					
add	eax, DWORD PTR _aHash$[ebp]
mov	ecx, 4
shl	ecx, 0
add	ecx, DWORD PTR _aPgno$[ebp]
sub	eax, ecx
mov	DWORD PTR _nByte$1[ebp], eax
mov	edx, DWORD PTR _nByte$1[ebp]
push	edx
push	0
mov	eax, 4
shl	eax, 0
add	eax, DWORD PTR _aPgno$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _idx$4[ebp]
mov	edx, DWORD PTR _aPgno$[ebp]
cmp	DWORD PTR [edx+ecx*4], 0
je	SHORT $LN5@walIndexAp
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walCleanupHash
add	esp, 4
mov	ecx, DWORD PTR _idx$4[ebp]
mov	DWORD PTR _nCollide$2[ebp], ecx
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
call	_walHash
add	esp, 4
mov	DWORD PTR _iKey$3[ebp], eax
jmp	SHORT $LN4@walIndexAp
mov	eax, DWORD PTR _iKey$3[ebp]
push	eax
call	_walNextHash
add	esp, 4
mov	DWORD PTR _iKey$3[ebp], eax
mov	ecx, DWORD PTR _iKey$3[ebp]
mov	edx, DWORD PTR _aHash$[ebp]
movzx	eax, WORD PTR [edx+ecx*2]
test	eax, eax
je	SHORT $LN2@walIndexAp
mov	ecx, DWORD PTR _nCollide$2[ebp]
mov	DWORD PTR tv133[ebp], ecx
mov	edx, DWORD PTR _nCollide$2[ebp]
sub	edx, 1
mov	DWORD PTR _nCollide$2[ebp], edx
cmp	DWORD PTR tv133[ebp], 0
jne	SHORT $LN1@walIndexAp
push	48107					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN8@walIndexAp
jmp	SHORT $LN3@walIndexAp
mov	eax, DWORD PTR _idx$4[ebp]
mov	ecx, DWORD PTR _aPgno$[ebp]
mov	edx, DWORD PTR _iPage$[ebp]
mov	DWORD PTR [ecx+eax*4], edx
mov	eax, DWORD PTR _iKey$3[ebp]
mov	ecx, DWORD PTR _aHash$[ebp]
mov	dx, WORD PTR _idx$4[ebp]
mov	WORD PTR [ecx+eax*2], dx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walCleanupHash PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _aHash$[ebp], 0
mov	DWORD PTR _aPgno$[ebp], 0
mov	DWORD PTR _iZero$[ebp], 0
mov	DWORD PTR _iLimit$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [eax+68], 0
jne	SHORT $LN5@walCleanup
jmp	$LN6@walCleanup
lea	ecx, DWORD PTR _iZero$[ebp]
push	ecx
lea	edx, DWORD PTR _aPgno$[ebp]
push	edx
lea	eax, DWORD PTR _aHash$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_walFramePage
add	esp, 4
push	eax
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walHashGet
add	esp, 20					
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+68]
sub	edx, DWORD PTR _iZero$[ebp]
mov	DWORD PTR _iLimit$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@walCleanup
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 8192		
jge	SHORT $LN2@walCleanup
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aHash$[ebp]
movzx	eax, WORD PTR [edx+ecx*2]
cmp	eax, DWORD PTR _iLimit$[ebp]
jle	SHORT $LN1@walCleanup
xor	ecx, ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aHash$[ebp]
mov	WORD PTR [eax+edx*2], cx
jmp	SHORT $LN3@walCleanup
mov	ecx, DWORD PTR _iLimit$[ebp]
mov	edx, DWORD PTR _aPgno$[ebp]
lea	eax, DWORD PTR [edx+ecx*4+4]
mov	ecx, DWORD PTR _aHash$[ebp]
sub	ecx, eax
mov	DWORD PTR _nByte$[ebp], ecx
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _iLimit$[ebp]
mov	ecx, DWORD PTR _aPgno$[ebp]
lea	edx, DWORD PTR [ecx+eax*4+4]
push	edx
call	_memset
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walFramePgno PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
mov	eax, DWORD PTR _iFrame$[ebp]
push	eax
call	_walFramePage
add	esp, 4
mov	DWORD PTR _iHash$[ebp], eax
cmp	DWORD PTR _iHash$[ebp], 0
jne	SHORT $LN1@walFramePg
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR [ecx+edx]
mov	eax, DWORD PTR _iFrame$[ebp]
mov	eax, DWORD PTR [edx+eax*4+132]
jmp	SHORT $LN2@walFramePg
mov	ecx, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _iFrame$[ebp]
sub	eax, 4063				
xor	edx, edx
mov	esi, 4096				
div	esi
mov	eax, DWORD PTR _iHash$[ebp]
mov	ecx, DWORD PTR [ecx+eax*4]
mov	eax, DWORD PTR [ecx+edx*4]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walFramePage PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _iFrame$[ebp]
add	eax, 33					
shr	eax, 12					
mov	DWORD PTR _iHash$[ebp], eax
mov	eax, DWORD PTR _iHash$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walHashGet PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
lea	eax, DWORD PTR _aPgno$[ebp]
push	eax
mov	ecx, DWORD PTR _iHash$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walIndexPage
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@walHashGet
mov	eax, 4
shl	eax, 12					
add	eax, DWORD PTR _aPgno$[ebp]
mov	DWORD PTR _aHash$1[ebp], eax
cmp	DWORD PTR _iHash$[ebp], 0
jne	SHORT $LN2@walHashGet
mov	ecx, 4
imul	edx, ecx, 34
add	edx, DWORD PTR _aPgno$[ebp]
mov	DWORD PTR _aPgno$[ebp], edx
mov	DWORD PTR _iZero$2[ebp], 0
jmp	SHORT $LN1@walHashGet
mov	eax, DWORD PTR _iHash$[ebp]
sub	eax, 1
shl	eax, 12					
add	eax, 4062				
mov	DWORD PTR _iZero$2[ebp], eax
mov	ecx, 4
imul	edx, ecx, -1
add	edx, DWORD PTR _aPgno$[ebp]
mov	eax, DWORD PTR _paPgno$[ebp]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _paHash$[ebp]
mov	edx, DWORD PTR _aHash$1[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _piZero$[ebp]
mov	ecx, DWORD PTR _iZero$2[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walNextHash PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iPriorHash$[ebp]
add	eax, 1
and	eax, 8191				
pop	ebp
ret	0
ENDP
_walHash PROC
push	ebp
mov	ebp, esp
imul	eax, DWORD PTR _iPage$[ebp], 383
and	eax, 8191				
pop	ebp
ret	0
ENDP
_walUnlockExclusive PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
test	ecx, ecx
je	SHORT $LN1@walUnlockE
jmp	SHORT $LN2@walUnlockE
push	9
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _lockIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsShmLock
add	esp, 16					
pop	ebp
ret	0
ENDP
_walLockExclusive PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
test	ecx, ecx
je	SHORT $LN1@walLockExc
xor	eax, eax
jmp	SHORT $LN2@walLockExc
push	10					
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _lockIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsShmLock
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walUnlockShared PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
test	ecx, ecx
je	SHORT $LN1@walUnlockS
jmp	SHORT $LN2@walUnlockS
push	5
push	1
mov	edx, DWORD PTR _lockIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3OsShmLock
add	esp, 16					
pop	ebp
ret	0
ENDP
_walLockShared PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
test	ecx, ecx
je	SHORT $LN1@walLockSha
xor	eax, eax
jmp	SHORT $LN2@walLockSha
push	6
push	1
mov	edx, DWORD PTR _lockIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3OsShmLock
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walDecodeFrame PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 76					
mov	DWORD PTR _aCksum$[ebp], eax
push	8
mov	ecx, 1
shl	ecx, 3
add	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
add	edx, 84					
push	edx
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN4@walDecodeF
xor	eax, eax
jmp	$LN5@walDecodeF
mov	eax, 1
imul	ecx, eax, 0
add	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _pgno$[ebp], eax
cmp	DWORD PTR _pgno$[ebp], 0
jne	SHORT $LN3@walDecodeF
xor	eax, eax
jmp	$LN5@walDecodeF
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+65]
test	eax, eax
jne	SHORT $LN7@walDecodeF
mov	DWORD PTR tv81[ebp], 1
jmp	SHORT $LN8@walDecodeF
mov	DWORD PTR tv81[ebp], 0
mov	ecx, DWORD PTR tv81[ebp]
mov	DWORD PTR _nativeCksum$[ebp], ecx
mov	edx, DWORD PTR _aCksum$[ebp]
push	edx
mov	eax, DWORD PTR _aCksum$[ebp]
push	eax
push	8
mov	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
mov	edx, DWORD PTR _nativeCksum$[ebp]
push	edx
call	_walChecksumBytes
add	esp, 20					
mov	eax, DWORD PTR _aCksum$[ebp]
push	eax
mov	ecx, DWORD PTR _aCksum$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _aData$[ebp]
push	ecx
mov	edx, DWORD PTR _nativeCksum$[ebp]
push	edx
call	_walChecksumBytes
add	esp, 20					
mov	eax, 4
imul	esi, eax, 0
mov	ecx, 1
shl	ecx, 4
add	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	edx, DWORD PTR _aCksum$[ebp]
cmp	DWORD PTR [edx+esi], eax
jne	SHORT $LN1@walDecodeF
mov	esi, 4
shl	esi, 0
mov	eax, 1
imul	ecx, eax, 20
add	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	edx, DWORD PTR _aCksum$[ebp]
cmp	DWORD PTR [edx+esi], eax
je	SHORT $LN2@walDecodeF
xor	eax, eax
jmp	SHORT $LN5@walDecodeF
mov	eax, DWORD PTR _piPage$[ebp]
mov	ecx, DWORD PTR _pgno$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, 1
shl	edx, 2
add	edx, DWORD PTR _aFrame$[ebp]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	ecx, DWORD PTR _pnTruncate$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, 1
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walEncodeFrame PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 76					
mov	DWORD PTR _aCksum$[ebp], eax
mov	ecx, DWORD PTR _iPage$[ebp]
push	ecx
mov	edx, 1
imul	eax, edx, 0
add	eax, DWORD PTR _aFrame$[ebp]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _nTruncate$[ebp]
push	ecx
mov	edx, 1
shl	edx, 2
add	edx, DWORD PTR _aFrame$[ebp]
push	edx
call	_sqlite3Put4byte
add	esp, 8
push	8
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 84					
push	eax
mov	ecx, 1
shl	ecx, 3
add	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+65]
test	eax, eax
jne	SHORT $LN3@walEncodeF
mov	DWORD PTR tv82[ebp], 1
jmp	SHORT $LN4@walEncodeF
mov	DWORD PTR tv82[ebp], 0
mov	ecx, DWORD PTR tv82[ebp]
mov	DWORD PTR _nativeCksum$[ebp], ecx
mov	edx, DWORD PTR _aCksum$[ebp]
push	edx
mov	eax, DWORD PTR _aCksum$[ebp]
push	eax
push	8
mov	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
mov	edx, DWORD PTR _nativeCksum$[ebp]
push	edx
call	_walChecksumBytes
add	esp, 20					
mov	eax, DWORD PTR _aCksum$[ebp]
push	eax
mov	ecx, DWORD PTR _aCksum$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _aData$[ebp]
push	ecx
mov	edx, DWORD PTR _nativeCksum$[ebp]
push	edx
call	_walChecksumBytes
add	esp, 20					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _aCksum$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, 1
shl	ecx, 4
add	ecx, DWORD PTR _aFrame$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _aCksum$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
mov	edx, 1
imul	eax, edx, 20
add	eax, DWORD PTR _aFrame$[ebp]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIndexWriteHdr PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexHdr
add	esp, 4
mov	DWORD PTR _aHdr$[ebp], eax
mov	DWORD PTR _nCksum$[ebp], 40		
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+64], 1
mov	edx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [edx+52], 3007000		
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 92					
push	eax
push	0
mov	ecx, DWORD PTR _nCksum$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
add	edx, 52					
push	edx
push	1
call	_walChecksumBytes
add	esp, 20					
push	48					
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 52					
push	eax
mov	ecx, 48					
shl	ecx, 0
add	ecx, DWORD PTR _aHdr$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walShmBarrier
add	esp, 4
push	48					
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 52					
push	eax
mov	ecx, 48					
imul	edx, ecx, 0
add	edx, DWORD PTR _aHdr$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walShmBarrier PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
cmp	ecx, 2
je	SHORT $LN2@walShmBarr
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3OsShmBarrier
add	esp, 4
pop	ebp
ret	0
ENDP
_walChecksumBytes PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _a$[ebp]
mov	DWORD PTR _aData$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
add	ecx, DWORD PTR _nByte$[ebp]
mov	DWORD PTR _aEnd$[ebp], ecx
cmp	DWORD PTR _aIn$[ebp], 0
je	SHORT $LN10@walChecksu
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aIn$[ebp]
mov	edx, DWORD PTR [ecx+eax]
mov	DWORD PTR _s1$[ebp], edx
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _aIn$[ebp]
mov	edx, DWORD PTR [ecx+eax]
mov	DWORD PTR _s2$[ebp], edx
jmp	SHORT $LN9@walChecksu
mov	DWORD PTR _s2$[ebp], 0
mov	eax, DWORD PTR _s2$[ebp]
mov	DWORD PTR _s1$[ebp], eax
cmp	DWORD PTR _nativeCksum$[ebp], 0
je	SHORT $LN3@walChecksu
mov	ecx, DWORD PTR _aData$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, DWORD PTR _s2$[ebp]
add	edx, DWORD PTR _s1$[ebp]
mov	DWORD PTR _s1$[ebp], edx
mov	eax, DWORD PTR _aData$[ebp]
add	eax, 4
mov	DWORD PTR _aData$[ebp], eax
mov	ecx, DWORD PTR _aData$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, DWORD PTR _s1$[ebp]
add	edx, DWORD PTR _s2$[ebp]
mov	DWORD PTR _s2$[ebp], edx
mov	eax, DWORD PTR _aData$[ebp]
add	eax, 4
mov	DWORD PTR _aData$[ebp], eax
mov	ecx, DWORD PTR _aData$[ebp]
cmp	ecx, DWORD PTR _aEnd$[ebp]
jb	SHORT $LN7@walChecksu
jmp	$LN4@walChecksu
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aData$[ebp]
mov	edx, DWORD PTR [ecx+eax]
and	edx, 255				
shl	edx, 24					
mov	eax, 4
imul	ecx, eax, 0
mov	eax, DWORD PTR _aData$[ebp]
mov	ecx, DWORD PTR [eax+ecx]
and	ecx, 65280				
shl	ecx, 8
add	edx, ecx
mov	eax, 4
imul	ecx, eax, 0
mov	eax, DWORD PTR _aData$[ebp]
mov	ecx, DWORD PTR [eax+ecx]
and	ecx, 16711680				
shr	ecx, 8
add	edx, ecx
mov	eax, 4
imul	ecx, eax, 0
mov	eax, DWORD PTR _aData$[ebp]
mov	ecx, DWORD PTR [eax+ecx]
and	ecx, -16777216				
shr	ecx, 24					
add	edx, DWORD PTR _s2$[ebp]
add	ecx, edx
add	ecx, DWORD PTR _s1$[ebp]
mov	DWORD PTR _s1$[ebp], ecx
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _aData$[ebp]
mov	ecx, DWORD PTR [eax+edx]
and	ecx, 255				
shl	ecx, 24					
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _aData$[ebp]
mov	edx, DWORD PTR [eax+edx]
and	edx, 65280				
shl	edx, 8
add	ecx, edx
mov	eax, 4
shl	eax, 0
mov	edx, DWORD PTR _aData$[ebp]
mov	eax, DWORD PTR [edx+eax]
and	eax, 16711680				
shr	eax, 8
add	ecx, eax
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _aData$[ebp]
mov	edx, DWORD PTR [eax+edx]
and	edx, -16777216				
shr	edx, 24					
add	ecx, DWORD PTR _s1$[ebp]
add	edx, ecx
add	edx, DWORD PTR _s2$[ebp]
mov	DWORD PTR _s2$[ebp], edx
mov	eax, DWORD PTR _aData$[ebp]
add	eax, 8
mov	DWORD PTR _aData$[ebp], eax
mov	ecx, DWORD PTR _aData$[ebp]
cmp	ecx, DWORD PTR _aEnd$[ebp]
jb	$LN3@walChecksu
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aOut$[ebp]
mov	edx, DWORD PTR _s1$[ebp]
mov	DWORD PTR [ecx+eax], edx
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _aOut$[ebp]
mov	edx, DWORD PTR _s2$[ebp]
mov	DWORD PTR [ecx+eax], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_walIndexHdr PROC
push	ebp
mov	ebp, esp
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	eax, DWORD PTR [ecx+eax]
pop	ebp
ret	0
ENDP
_walCkptInfo PROC
push	ebp
mov	ebp, esp
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	edx, 4
imul	edx, edx, 24
add	edx, DWORD PTR [eax+ecx]
mov	eax, edx
pop	ebp
ret	0
ENDP
_walIndexPage PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+24]
cmp	ecx, DWORD PTR _iPage$[ebp]
jg	SHORT $LN7@walIndexPa
mov	edx, DWORD PTR _iPage$[ebp]
lea	eax, DWORD PTR [edx*4+4]
mov	DWORD PTR _nByte$1[ebp], eax
mov	ecx, DWORD PTR _nByte$1[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _apNew$2[ebp], eax
cmp	DWORD PTR _apNew$2[ebp], 0
jne	SHORT $LN6@walIndexPa
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	DWORD PTR [ecx], 0
mov	eax, 7
jmp	$LN8@walIndexPa
mov	edx, DWORD PTR _iPage$[ebp]
add	edx, 1
mov	eax, DWORD PTR _pWal$[ebp]
sub	edx, DWORD PTR [eax+24]
shl	edx, 2
push	edx
push	0
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR _apNew$2[ebp]
lea	ecx, DWORD PTR [eax+edx*4]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR _apNew$2[ebp]
mov	DWORD PTR [edx+32], eax
mov	ecx, DWORD PTR _iPage$[ebp]
add	ecx, 1
mov	edx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _iPage$[ebp]
cmp	DWORD PTR [ecx+edx*4], 0
jne	$LN5@walIndexPa
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
cmp	ecx, 2
jne	SHORT $LN4@walIndexPa
push	32768					
call	_sqlite3MallocZero
add	esp, 4
mov	edx, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [edx+32]
mov	edx, DWORD PTR _iPage$[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _iPage$[ebp]
cmp	DWORD PTR [ecx+edx*4], 0
jne	SHORT $LN3@walIndexPa
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN5@walIndexPa
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _iPage$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
movzx	edx, BYTE PTR [ecx+44]
push	edx
push	32768					
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsShmMap
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 8
jne	SHORT $LN5@walIndexPa
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+46]
or	ecx, 2
mov	edx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [edx+46], cl
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR _iPage$[ebp]
mov	ecx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerOpenWal PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+4]
test	ecx, ecx
je	SHORT $LN2@pagerOpenW
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerExclusiveLock
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@pagerOpenW
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 208				
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+164]
push	edx
mov	eax, DWORD PTR [ecx+160]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+212]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3WalOpen
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerFixMaplimit
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerExclusiveLock PROC
push	ebp
mov	ebp, esp
push	ecx
push	4
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerLockDb
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@pagerExclu
push	1
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUnlockDb
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_incr_changecounter PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	$LN7@pager_incr
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+24], 0
jbe	$LN7@pager_incr
push	0
lea	eax, DWORD PTR _pPgHdr$3[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, 1
test	edx, edx
je	SHORT $LN6@pager_incr
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@pager_incr
mov	eax, DWORD PTR _pPgHdr$3[ebp]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN5@pager_incr
mov	ecx, DWORD PTR _pPgHdr$3[ebp]
push	ecx
call	_pager_write_changecounter
add	esp, 4
xor	edx, edx
je	$LN4@pager_incr
mov	eax, DWORD PTR _pPgHdr$3[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _zBuf$2[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@pager_incr
push	0
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
push	eax
mov	ecx, DWORD PTR _zBuf$2[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+ecx+184]
add	eax, 1
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+ecx+184], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@pager_incr
mov	eax, 1
imul	ecx, eax, 24
add	ecx, DWORD PTR _zBuf$2[ebp]
mov	DWORD PTR _pCopy$1[ebp], ecx
push	16					
mov	edx, DWORD PTR _pCopy$1[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 100				
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+18], 1
jmp	SHORT $LN5@pager_incr
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+18], 1
mov	eax, DWORD PTR _pPgHdr$3[ebp]
push	eax
call	_sqlite3PagerUnref
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_write PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPager$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	eax, 2
jne	SHORT $LN15@pager_writ
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_open_journal
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@pager_writ
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@pager_writ
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_sqlite3PcacheMakeDirty
add	esp, 4
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pageInJournal
add	esp, 8
mov	DWORD PTR _inJournal$[ebp], eax
cmp	DWORD PTR _inJournal$[ebp], 0
je	SHORT $LN13@pager_writ
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+96], 0
je	SHORT $LN12@pager_writ
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_subjRequiresPage
add	esp, 4
test	eax, eax
jne	SHORT $LN13@pager_writ
jmp	$LN11@pager_writ
cmp	DWORD PTR _inJournal$[ebp], 0
jne	$LN10@pager_writ
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
jne	$LN10@pager_writ
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [edx+20]
cmp	ecx, DWORD PTR [eax+28]
ja	$LN9@pager_writ
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
cmp	DWORD PTR [eax], 0
je	$LN9@pager_writ
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _iOff$1[ebp], edx
mov	eax, DWORD PTR [ecx+76]
mov	DWORD PTR _iOff$1[ebp+4], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pData2$3[ebp], edx
mov	eax, DWORD PTR _pData2$3[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_cksum
add	esp, 8
mov	DWORD PTR _cksum$2[ebp], eax
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
or	eax, 4
mov	ecx, DWORD PTR _pPg$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _iOff$1[ebp+4]
push	ecx
mov	edx, DWORD PTR _iOff$1[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_write32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@pager_writ
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@pager_writ
mov	edx, DWORD PTR _iOff$1[ebp]
add	edx, 4
mov	eax, DWORD PTR _iOff$1[ebp+4]
adc	eax, 0
push	eax
push	edx
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+152]
push	edx
mov	eax, DWORD PTR _pData2$3[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@pager_writ
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@pager_writ
mov	eax, DWORD PTR _cksum$2[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+152]
cdq
add	eax, DWORD PTR _iOff$1[ebp]
adc	edx, DWORD PTR _iOff$1[ebp+4]
add	eax, 4
adc	edx, 0
push	edx
push	eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_write32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@pager_writ
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@pager_writ
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+152]
add	eax, 8
cdq
mov	ecx, DWORD PTR _pPager$[ebp]
add	eax, DWORD PTR [ecx+72]
adc	edx, DWORD PTR [ecx+76]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	DWORD PTR [ecx+76], edx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+44]
add	eax, 1
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3BitvecSet
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_addToSavepointBitvecs
add	esp, 8
or	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR _rc$[ebp], eax
je	SHORT $LN5@pager_writ
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN16@pager_writ
jmp	SHORT $LN10@pager_writ
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 4
je	SHORT $LN10@pager_writ
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
or	eax, 4
mov	ecx, DWORD PTR _pPg$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+96], 0
jle	SHORT $LN11@pager_writ
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_subjRequiresPage
add	esp, 4
test	eax, eax
je	SHORT $LN11@pager_writ
mov	ecx, DWORD PTR _pPg$[ebp]
push	ecx
call	_subjournalPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [edx+24]
cmp	ecx, DWORD PTR [eax+20]
jae	SHORT $LN1@pager_writ
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_open_journal PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pVfs$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+40], 0
je	SHORT $LN10@pager_open
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+40]
jmp	$LN11@pager_open
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
jne	$LN9@pager_open
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 2
je	$LN9@pager_open
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3BitvecCreate
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+56], eax
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+56], 0
jne	SHORT $LN8@pager_open
mov	eax, 7
jmp	$LN11@pager_open
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN7@pager_open
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 4
jne	SHORT $LN6@pager_open
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3MemJournalOpen
add	esp, 4
jmp	SHORT $LN7@pager_open
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
je	SHORT $LN13@pager_open
mov	DWORD PTR tv91[ebp], 4104		
jmp	SHORT $LN14@pager_open
mov	DWORD PTR tv91[ebp], 2048		
mov	edx, DWORD PTR tv91[ebp]
or	edx, 6
mov	DWORD PTR _flags$1[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_databaseIsUnmoved
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@pager_open
push	0
mov	ecx, DWORD PTR _flags$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+172]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN9@pager_open
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+44], 0
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+72], 0
mov	DWORD PTR [edx+76], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+19], 0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+80], 0
mov	DWORD PTR [ecx+84], 0
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_writeJournalHdr
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@pager_open
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3BitvecDestroy
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+56], 0
jmp	SHORT $LN1@pager_open
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+16], 3
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerUnlockIfUnused PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+120], 0
jne	SHORT $LN2@pagerUnloc
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+204]
push	edx
call	_sqlite3PcacheRefCount
add	esp, 4
test	eax, eax
jne	SHORT $LN2@pagerUnloc
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUnlockAndRollback
add	esp, 4
pop	ebp
ret	0
ENDP
_hasHotJournal PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pVfs$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _exists$[ebp], 1
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
cmp	DWORD PTR [eax], 0
je	SHORT $LN17@hasHotJour
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN18@hasHotJour
mov	DWORD PTR tv68[ebp], 0
mov	ecx, DWORD PTR tv68[ebp]
mov	DWORD PTR _jrnlOpen$[ebp], ecx
mov	edx, DWORD PTR _pExists$[ebp]
mov	DWORD PTR [edx], 0
cmp	DWORD PTR _jrnlOpen$[ebp], 0
jne	SHORT $LN14@hasHotJour
lea	eax, DWORD PTR _exists$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+172]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN13@hasHotJour
cmp	DWORD PTR _exists$[ebp], 0
je	$LN13@hasHotJour
mov	DWORD PTR _locked$3[ebp], 0
lea	ecx, DWORD PTR _locked$3[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsCheckReservedLock
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN13@hasHotJour
cmp	DWORD PTR _locked$3[ebp], 0
jne	$LN13@hasHotJour
lea	ecx, DWORD PTR _nPage$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerPagecount
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN13@hasHotJour
cmp	DWORD PTR _nPage$1[ebp], 0
jne	SHORT $LN10@hasHotJour
cmp	DWORD PTR _jrnlOpen$[ebp], 0
jne	SHORT $LN10@hasHotJour
call	_sqlite3BeginBenignMalloc
push	2
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerLockDb
add	esp, 8
test	eax, eax
jne	SHORT $LN9@hasHotJour
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+172]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsDelete
add	esp, 12					
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
jne	SHORT $LN9@hasHotJour
push	1
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUnlockDb
add	esp, 8
call	_sqlite3EndBenignMalloc
jmp	$LN13@hasHotJour
cmp	DWORD PTR _jrnlOpen$[ebp], 0
jne	SHORT $LN6@hasHotJour
mov	DWORD PTR _f$2[ebp], 2049		
lea	ecx, DWORD PTR _f$2[ebp]
push	ecx
mov	edx, DWORD PTR _f$2[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+172]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@hasHotJour
mov	BYTE PTR _first$4[ebp], 0
push	0
push	0
push	1
lea	edx, DWORD PTR _first$4[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 522		
jne	SHORT $LN4@hasHotJour
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _jrnlOpen$[ebp], 0
jne	SHORT $LN3@hasHotJour
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3OsClose
add	esp, 4
movzx	ecx, BYTE PTR _first$4[ebp]
test	ecx, ecx
je	SHORT $LN19@hasHotJour
mov	DWORD PTR tv157[ebp], 1
jmp	SHORT $LN20@hasHotJour
mov	DWORD PTR tv157[ebp], 0
mov	edx, DWORD PTR _pExists$[ebp]
mov	eax, DWORD PTR tv157[ebp]
mov	DWORD PTR [edx], eax
jmp	SHORT $LN13@hasHotJour
cmp	DWORD PTR _rc$[ebp], 14			
jne	SHORT $LN13@hasHotJour
mov	ecx, DWORD PTR _pExists$[ebp]
mov	DWORD PTR [ecx], 1
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_databaseIsUnmoved PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _bHasMoved$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
je	SHORT $LN5@databaseIs
xor	eax, eax
jmp	SHORT $LN6@databaseIs
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+24], 0
jne	SHORT $LN4@databaseIs
xor	eax, eax
jmp	SHORT $LN6@databaseIs
lea	eax, DWORD PTR _bHasMoved$[ebp]
push	eax
push	20					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsFileControl
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 12			
jne	SHORT $LN3@databaseIs
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN2@databaseIs
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@databaseIs
cmp	DWORD PTR _bHasMoved$[ebp], 0
je	SHORT $LN2@databaseIs
mov	DWORD PTR _rc$[ebp], 1032		
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerStress PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pPager$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [ecx+40], 0
je	SHORT $LN12@pagerStres
xor	eax, eax
jmp	$LN13@pagerStres
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+20]
test	eax, eax
je	SHORT $LN11@pagerStres
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+20]
and	edx, 3
jne	SHORT $LN10@pagerStres
mov	eax, DWORD PTR _pPg$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 4
je	SHORT $LN11@pagerStres
xor	eax, eax
jmp	$LN13@pagerStres
mov	edx, DWORD PTR _pPg$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN9@pagerStres
mov	ecx, DWORD PTR _pPg$[ebp]
push	ecx
call	_subjRequiresPage
add	esp, 4
test	eax, eax
je	SHORT $LN8@pagerStres
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_subjournalPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@pagerStres
push	0
push	0
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerWalFrames
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN6@pagerStres
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, 4
jne	SHORT $LN4@pagerStres
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+16]
cmp	edx, 3
jne	SHORT $LN5@pagerStres
push	1
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_syncJournal
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@pagerStres
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+20]
cmp	eax, DWORD PTR [edx+24]
jbe	SHORT $LN3@pagerStres
mov	ecx, DWORD PTR _pPg$[ebp]
push	ecx
call	_subjRequiresPage
add	esp, 4
test	eax, eax
je	SHORT $LN3@pagerStres
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_subjournalPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@pagerStres
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_write_pagelist
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@pagerStres
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_sqlite3PcacheMakeClean
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_error
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_subjournalPage PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 2
je	$LN4@subjournal
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_openSubJournal
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN4@subjournal
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pData$3[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [ecx+52]
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
add	eax, 4
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _offset$1[ebp], eax
mov	DWORD PTR _offset$1[ebp+4], edx
mov	eax, DWORD PTR _pData$3[ebp]
mov	DWORD PTR _pData2$2[ebp], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _offset$1[ebp+4]
push	eax
mov	ecx, DWORD PTR _offset$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_write32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@subjournal
mov	ecx, DWORD PTR _offset$1[ebp]
add	ecx, 4
mov	edx, DWORD PTR _offset$1[ebp+4]
adc	edx, 0
push	edx
push	ecx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
mov	edx, DWORD PTR _pData2$2[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@subjournal
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+52]
add	eax, 1
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+52], eax
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_addToSavepointBitvecs
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_openSubJournal PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+68]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN4@openSubJou
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 4
je	SHORT $LN2@openSubJou
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+21]
test	edx, edx
je	SHORT $LN3@openSubJou
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3MemJournalOpen
add	esp, 4
jmp	SHORT $LN4@openSubJou
push	8192					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerOpentemp
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_write_pagelist PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN10@pager_writ
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+144]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerOpentemp
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@pager_writ
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+36]
cmp	eax, DWORD PTR [edx+24]
jae	SHORT $LN7@pager_writ
mov	ecx, DWORD PTR _pList$[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN8@pager_writ
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [edx+20]
cmp	ecx, DWORD PTR [eax+36]
jbe	SHORT $LN7@pager_writ
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
mov	ecx, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [ecx+24]
xor	esi, esi
push	esi
push	ecx
push	edx
push	eax
call	__allmul
mov	DWORD PTR _szFile$1[ebp], eax
mov	DWORD PTR _szFile$1[ebp+4], edx
lea	edx, DWORD PTR _szFile$1[ebp]
push	edx
push	5
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsFileControlHint
add	esp, 12					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR [edx+36], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN6@pager_writ
cmp	DWORD PTR _pList$[ebp], 0
je	$LN6@pager_writ
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pgno$4[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pgno$4[ebp]
cmp	edx, DWORD PTR [ecx+24]
ja	$LN1@pager_writ
mov	eax, DWORD PTR _pList$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 32					
jne	$LN1@pager_writ
mov	ecx, DWORD PTR _pgno$4[ebp]
sub	ecx, 1
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _offset$2[ebp], eax
mov	DWORD PTR _offset$2[ebp+4], edx
mov	eax, DWORD PTR _pList$[ebp]
cmp	DWORD PTR [eax+20], 1
jne	SHORT $LN4@pager_writ
mov	ecx, DWORD PTR _pList$[ebp]
push	ecx
call	_pager_write_changecounter
add	esp, 4
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pData$3[ebp], eax
mov	ecx, DWORD PTR _offset$2[ebp+4]
push	ecx
mov	edx, DWORD PTR _offset$2[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
mov	edx, DWORD PTR _pData$3[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _pgno$4[ebp], 1
jne	SHORT $LN3@pager_writ
push	16					
mov	edx, 1
imul	eax, edx, 24
add	eax, DWORD PTR _pData$3[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
add	ecx, 100				
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pgno$4[ebp]
cmp	eax, DWORD PTR [edx+32]
jbe	SHORT $LN2@pager_writ
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pgno$4[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, 4
shl	eax, 1
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+eax+184]
add	edx, 1
mov	eax, 4
shl	eax, 1
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+eax+184], edx
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pgno$4[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+88]
push	eax
call	_sqlite3BackupUpdate
add	esp, 12					
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pList$[ebp], edx
jmp	$LN7@pager_writ
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_syncJournal PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerExclusiveLock
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@syncJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@syncJourna
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+7]
test	edx, edx
jne	$LN13@syncJourna
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
cmp	DWORD PTR [ecx], 0
je	$LN12@syncJourna
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 4
je	$LN12@syncJourna
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsDeviceCharacteristics
add	esp, 4
mov	DWORD PTR _iDc$2[ebp], eax
mov	eax, DWORD PTR _iDc$2[ebp]
and	eax, 512				
jne	$LN11@syncJourna
push	8
push	OFFSET _aJournalMagic
lea	ecx, DWORD PTR _zHeader$4[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, 1
shl	ecx, 3
lea	edx, DWORD PTR _zHeader$4[ebp+ecx]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_journalHdrOffset
add	esp, 4
mov	DWORD PTR _iNextHdrOffset$1[ebp], eax
mov	DWORD PTR _iNextHdrOffset$1[ebp+4], edx
mov	ecx, DWORD PTR _iNextHdrOffset$1[ebp+4]
push	ecx
mov	edx, DWORD PTR _iNextHdrOffset$1[ebp]
push	edx
push	8
lea	eax, DWORD PTR _aMagic$3[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@syncJourna
push	8
push	OFFSET _aJournalMagic
lea	eax, DWORD PTR _aMagic$3[ebp]
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN10@syncJourna
mov	ecx, DWORD PTR _iNextHdrOffset$1[ebp+4]
push	ecx
mov	edx, DWORD PTR _iNextHdrOffset$1[ebp]
push	edx
push	1
push	OFFSET ?zerobyte@?5??syncJournal@@9@9
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@syncJourna
cmp	DWORD PTR _rc$[ebp], 522		
je	SHORT $LN9@syncJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@syncJourna
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+8]
test	eax, eax
je	SHORT $LN8@syncJourna
mov	ecx, DWORD PTR _iDc$2[ebp]
and	ecx, 1024				
jne	SHORT $LN8@syncJourna
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+11]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@syncJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@syncJourna
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+84]
push	ecx
mov	edx, DWORD PTR [eax+80]
push	edx
push	12					
lea	eax, DWORD PTR _zHeader$4[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@syncJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@syncJourna
mov	eax, DWORD PTR _iDc$2[ebp]
and	eax, 1024				
jne	SHORT $LN5@syncJourna
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+11]
cmp	edx, 3
jne	SHORT $LN17@syncJourna
mov	DWORD PTR tv171[ebp], 16		
jmp	SHORT $LN18@syncJourna
mov	DWORD PTR tv171[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+11]
or	ecx, DWORD PTR tv171[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@syncJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN15@syncJourna
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR [ecx+80], eax
mov	edx, DWORD PTR [edx+76]
mov	DWORD PTR [ecx+84], edx
cmp	DWORD PTR _newHdr$[ebp], 0
je	SHORT $LN3@syncJourna
mov	eax, DWORD PTR _iDc$2[ebp]
and	eax, 512				
jne	SHORT $LN3@syncJourna
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+44], 0
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_writeJournalHdr
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@syncJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN15@syncJourna
jmp	SHORT $LN13@syncJourna
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR [eax+80], edx
mov	ecx, DWORD PTR [ecx+76]
mov	DWORD PTR [eax+84], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheClearSyncFlags
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+16], 4
xor	eax, eax
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerFreeMapHdrs PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+136]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@pagerFreeM
mov	edx, DWORD PTR _pNext$[ebp]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@pagerFreeM
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pNext$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN2@pagerFreeM
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerReleaseMapPage PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+120]
sub	eax, 1
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+120], eax
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+136]
mov	DWORD PTR [edx+12], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pPg$[ebp]
mov	DWORD PTR [edx+136], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
sub	ecx, 1
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
push	edx
push	eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsUnfetch
add	esp, 16					
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerAcquireMapPage PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+136], 0
je	SHORT $LN3@pagerAcqui
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+136]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _ppPage$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR [edx+136], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, WORD PTR [eax+140]
push	ecx
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_memset
add	esp, 12					
jmp	$LN2@pagerAcqui
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, WORD PTR [ecx+140]
add	edx, 40					
push	edx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
mov	eax, DWORD PTR _ppPage$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax], ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@pagerAcqui
mov	edx, DWORD PTR _pData$[ebp]
push	edx
mov	ecx, DWORD PTR _pgno$[ebp]
sub	ecx, 1
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
push	edx
push	eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsUnfetch
add	esp, 16					
mov	eax, 7
jmp	SHORT $LN4@pagerAcqui
mov	edx, 40					
shl	edx, 0
add	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+8], edx
mov	ecx, 64					
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+24], cx
mov	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+26], ax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pgno$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pData$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+120]
add	eax, 1
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+120], eax
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerSyncHotJournal PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
jne	SHORT $LN2@pagerSyncH
push	2
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@pagerSyncH
mov	ecx, DWORD PTR _pPager$[ebp]
add	ecx, 80					
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_wait_on_lock PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _locktype$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerLockDb
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN2@pager_wait
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+180]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+176]
call	edx
add	esp, 4
test	eax, eax
jne	SHORT $LN4@pager_wait
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerOpentemp PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _vfsFlags$[ebp]
or	eax, 30					
mov	DWORD PTR _vfsFlags$[ebp], eax
push	0
mov	ecx, DWORD PTR _vfsFlags$[ebp]
push	ecx
mov	edx, DWORD PTR _pFile$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerFixMaplimit PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	DWORD PTR _fd$[ebp], ecx
mov	edx, DWORD PTR _fd$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN2@pagerFixMa
mov	eax, DWORD PTR _fd$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	DWORD PTR [ecx], 3
jl	SHORT $LN2@pagerFixMa
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+128]
mov	DWORD PTR _sz$1[ebp], eax
mov	ecx, DWORD PTR [edx+132]
mov	DWORD PTR _sz$1[ebp+4], ecx
cmp	DWORD PTR _sz$1[ebp+4], 0
jl	SHORT $LN4@pagerFixMa
jg	SHORT $LN6@pagerFixMa
cmp	DWORD PTR _sz$1[ebp], 0
jbe	SHORT $LN4@pagerFixMa
mov	DWORD PTR tv73[ebp], 1
jmp	SHORT $LN5@pagerFixMa
mov	DWORD PTR tv73[ebp], 0
mov	edx, DWORD PTR _pPager$[ebp]
mov	al, BYTE PTR tv73[ebp]
mov	BYTE PTR [edx+116], al
lea	ecx, DWORD PTR _sz$1[ebp]
push	ecx
push	18					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsFileControlHint
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerPlaybackSavepoint PROC
push	ebp
mov	ebp, esp
sub	esp, 88					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _pDone$[ebp], 0
cmp	DWORD PTR _pSavepoint$[ebp], 0
je	SHORT $LN19@pagerPlayb
mov	eax, DWORD PTR _pSavepoint$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
call	_sqlite3BitvecCreate
add	esp, 4
mov	DWORD PTR _pDone$[ebp], eax
cmp	DWORD PTR _pDone$[ebp], 0
jne	SHORT $LN19@pagerPlayb
mov	eax, 7
jmp	$LN20@pagerPlayb
cmp	DWORD PTR _pSavepoint$[ebp], 0
je	SHORT $LN22@pagerPlayb
mov	edx, DWORD PTR _pSavepoint$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR tv73[ebp], eax
jmp	SHORT $LN23@pagerPlayb
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	DWORD PTR tv73[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR tv73[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	cl, BYTE PTR [eax+12]
mov	BYTE PTR [edx+18], cl
cmp	DWORD PTR _pSavepoint$[ebp], 0
jne	SHORT $LN17@pagerPlayb
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN17@pagerPlayb
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerRollbackWal
add	esp, 4
jmp	$LN20@pagerPlayb
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _szJ$[ebp], edx
mov	eax, DWORD PTR [ecx+76]
mov	DWORD PTR _szJ$[ebp+4], eax
cmp	DWORD PTR _pSavepoint$[ebp], 0
je	$LN16@pagerPlayb
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
jne	$LN16@pagerPlayb
mov	edx, DWORD PTR _pSavepoint$[ebp]
mov	DWORD PTR tv227[ebp], edx
mov	eax, DWORD PTR tv227[ebp]
mov	ecx, DWORD PTR tv227[ebp]
mov	edx, DWORD PTR [eax+8]
or	edx, DWORD PTR [ecx+12]
je	SHORT $LN24@pagerPlayb
mov	eax, DWORD PTR _pSavepoint$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR tv90[ebp], ecx
mov	edx, DWORD PTR [eax+12]
mov	DWORD PTR tv90[ebp+4], edx
jmp	SHORT $LN25@pagerPlayb
mov	eax, DWORD PTR _szJ$[ebp]
mov	DWORD PTR tv90[ebp], eax
mov	ecx, DWORD PTR _szJ$[ebp+4]
mov	DWORD PTR tv90[ebp+4], ecx
mov	edx, DWORD PTR tv90[ebp]
mov	DWORD PTR _iHdrOff$[ebp], edx
mov	eax, DWORD PTR tv90[ebp+4]
mov	DWORD PTR _iHdrOff$[ebp+4], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pSavepoint$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+76], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN14@pagerPlayb
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv250[ebp], eax
mov	ecx, DWORD PTR tv250[ebp]
mov	edx, DWORD PTR [ecx+76]
cmp	edx, DWORD PTR _iHdrOff$[ebp+4]
jg	SHORT $LN14@pagerPlayb
jl	SHORT $LN26@pagerPlayb
mov	eax, DWORD PTR tv250[ebp]
mov	ecx, DWORD PTR [eax+72]
cmp	ecx, DWORD PTR _iHdrOff$[ebp]
jae	SHORT $LN14@pagerPlayb
push	1
push	1
mov	edx, DWORD PTR _pDone$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 72					
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_playback_one_page
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN15@pagerPlayb
jmp	SHORT $LN12@pagerPlayb
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+72], 0
mov	DWORD PTR [edx+76], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN11@pagerPlayb
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv264[ebp], eax
mov	ecx, DWORD PTR tv264[ebp]
mov	edx, DWORD PTR [ecx+76]
cmp	edx, DWORD PTR _szJ$[ebp+4]
jg	$LN11@pagerPlayb
jl	SHORT $LN27@pagerPlayb
mov	eax, DWORD PTR tv264[ebp]
mov	ecx, DWORD PTR [eax+72]
cmp	ecx, DWORD PTR _szJ$[ebp]
jae	$LN11@pagerPlayb
mov	DWORD PTR _nJRec$5[ebp], 0
lea	edx, DWORD PTR _dummy$2[ebp]
push	edx
lea	eax, DWORD PTR _nJRec$5[ebp]
push	eax
mov	ecx, DWORD PTR _szJ$[ebp+4]
push	ecx
mov	edx, DWORD PTR _szJ$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_readJournalHdr
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _nJRec$5[ebp], 0
jne	SHORT $LN10@pagerPlayb
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+148]
xor	eax, eax
mov	ecx, DWORD PTR _pPager$[ebp]
add	edx, DWORD PTR [ecx+80]
adc	eax, DWORD PTR [ecx+84]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv288[ebp], edx
mov	DWORD PTR tv288[ebp+4], eax
mov	DWORD PTR tv291[ebp], ecx
mov	edx, DWORD PTR tv291[ebp]
mov	eax, DWORD PTR tv288[ebp]
cmp	eax, DWORD PTR [edx+72]
jne	SHORT $LN10@pagerPlayb
mov	ecx, DWORD PTR tv291[ebp]
mov	edx, DWORD PTR tv288[ebp+4]
cmp	edx, DWORD PTR [ecx+76]
jne	SHORT $LN10@pagerPlayb
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _szJ$[ebp]
sub	ecx, DWORD PTR [eax+72]
mov	esi, DWORD PTR _szJ$[ebp+4]
sbb	esi, DWORD PTR [eax+76]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
add	eax, 8
cdq
push	edx
push	eax
push	esi
push	ecx
call	__alldiv
mov	DWORD PTR _nJRec$5[ebp], eax
mov	DWORD PTR _ii$4[ebp], 0
jmp	SHORT $LN9@pagerPlayb
mov	eax, DWORD PTR _ii$4[ebp]
add	eax, 1
mov	DWORD PTR _ii$4[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@pagerPlayb
mov	ecx, DWORD PTR _ii$4[ebp]
cmp	ecx, DWORD PTR _nJRec$5[ebp]
jae	SHORT $LN7@pagerPlayb
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv325[ebp], edx
mov	eax, DWORD PTR tv325[ebp]
mov	ecx, DWORD PTR [eax+76]
cmp	ecx, DWORD PTR _szJ$[ebp+4]
jg	SHORT $LN7@pagerPlayb
jl	SHORT $LN28@pagerPlayb
mov	edx, DWORD PTR tv325[ebp]
mov	eax, DWORD PTR [edx+72]
cmp	eax, DWORD PTR _szJ$[ebp]
jae	SHORT $LN7@pagerPlayb
push	1
push	1
mov	ecx, DWORD PTR _pDone$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
add	edx, 72					
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_playback_one_page
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN8@pagerPlayb
jmp	$LN12@pagerPlayb
cmp	DWORD PTR _pSavepoint$[ebp], 0
je	$LN6@pagerPlayb
mov	ecx, DWORD PTR _pSavepoint$[ebp]
mov	ecx, DWORD PTR [ecx+24]
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
add	eax, 4
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _offset$1[ebp], eax
mov	DWORD PTR _offset$1[ebp+4], edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN5@pagerPlayb
mov	ecx, DWORD PTR _pSavepoint$[ebp]
add	ecx, 28					
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalSavepointUndo
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pSavepoint$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _ii$3[ebp], edx
jmp	SHORT $LN4@pagerPlayb
mov	eax, DWORD PTR _ii$3[ebp]
add	eax, 1
mov	DWORD PTR _ii$3[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@pagerPlayb
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _ii$3[ebp]
cmp	edx, DWORD PTR [ecx+52]
jae	SHORT $LN6@pagerPlayb
push	1
push	0
mov	eax, DWORD PTR _pDone$[ebp]
push	eax
lea	ecx, DWORD PTR _offset$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_playback_one_page
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@pagerPlayb
mov	eax, DWORD PTR _pDone$[ebp]
push	eax
call	_sqlite3BitvecDestroy
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@pagerPlayb
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _szJ$[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR _szJ$[ebp+4]
mov	DWORD PTR [ecx+76], eax
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerOpenWalIfPresent PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
jne	$LN9@pagerOpenW
lea	edx, DWORD PTR _nPage$1[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerPagecount
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@pagerOpenW
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN10@pagerOpenW
cmp	DWORD PTR _nPage$1[ebp], 0
jne	SHORT $LN7@pagerOpenW
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+212]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3OsDelete
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 5898		
jne	SHORT $LN6@pagerOpenW
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _isWal$2[ebp], 0
jmp	SHORT $LN5@pagerOpenW
lea	edx, DWORD PTR _isWal$2[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+212]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN9@pagerOpenW
cmp	DWORD PTR _isWal$2[ebp], 0
je	SHORT $LN3@pagerOpenW
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3PagerOpenWal
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN9@pagerOpenW
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 5
jne	SHORT $LN9@pagerOpenW
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+5], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerPagecount PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalDbsize
add	esp, 4
mov	DWORD PTR _nPage$[ebp], eax
cmp	DWORD PTR _nPage$[ebp], 0
jne	SHORT $LN4@pagerPagec
xorpd	xmm0, xmm0
movlpd	QWORD PTR _n$1[ebp], xmm0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
cmp	DWORD PTR [eax], 0
je	SHORT $LN3@pagerPagec
lea	ecx, DWORD PTR _n$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$2[ebp], eax
cmp	DWORD PTR _rc$2[ebp], 0
je	SHORT $LN3@pagerPagec
mov	eax, DWORD PTR _rc$2[ebp]
jmp	SHORT $LN5@pagerPagec
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+152]
cdq
mov	ecx, eax
mov	esi, edx
add	ecx, DWORD PTR _n$1[ebp]
adc	esi, DWORD PTR _n$1[ebp+4]
sub	ecx, 1
sbb	esi, 0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__alldiv
mov	DWORD PTR _nPage$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _nPage$[ebp]
cmp	ecx, DWORD PTR [eax+156]
jbe	SHORT $LN1@pagerPagec
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _nPage$[ebp]
mov	DWORD PTR [edx+156], eax
mov	ecx, DWORD PTR _pnPage$[ebp]
mov	edx, DWORD PTR _nPage$[ebp]
mov	DWORD PTR [ecx], edx
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerBeginReadTransaction PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _changed$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalEndReadTransaction
add	esp, 4
lea	edx, DWORD PTR _changed$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalBeginReadTransaction
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@pagerBegin
cmp	DWORD PTR _changed$[ebp], 0
je	SHORT $LN3@pagerBegin
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_reset
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+116]
test	ecx, ecx
je	SHORT $LN3@pagerBegin
push	0
push	0
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsUnfetch
add	esp, 16					
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerWalFrames PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
cmp	DWORD PTR _isCommit$[ebp], 0
je	SHORT $LN11@pagerWalFr
lea	eax, DWORD PTR _pList$[ebp]
mov	DWORD PTR _ppNext$1[ebp], eax
mov	DWORD PTR _nList$[ebp], 0
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR _p$3[ebp], ecx
jmp	SHORT $LN10@pagerWalFr
mov	edx, DWORD PTR _p$3[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _p$3[ebp], eax
mov	ecx, DWORD PTR _ppNext$1[ebp]
mov	edx, DWORD PTR _p$3[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _p$3[ebp], 0
je	SHORT $LN8@pagerWalFr
mov	eax, DWORD PTR _p$3[ebp]
mov	ecx, DWORD PTR [eax+20]
cmp	ecx, DWORD PTR _nTruncate$[ebp]
ja	SHORT $LN7@pagerWalFr
mov	edx, DWORD PTR _p$3[ebp]
add	edx, 12					
mov	DWORD PTR _ppNext$1[ebp], edx
mov	eax, DWORD PTR _nList$[ebp]
add	eax, 1
mov	DWORD PTR _nList$[ebp], eax
jmp	SHORT $LN9@pagerWalFr
jmp	SHORT $LN6@pagerWalFr
mov	DWORD PTR _nList$[ebp], 1
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+ecx+184]
add	eax, DWORD PTR _nList$[ebp]
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+ecx+184], eax
mov	eax, DWORD PTR _pList$[ebp]
cmp	DWORD PTR [eax+20], 1
jne	SHORT $LN5@pagerWalFr
mov	ecx, DWORD PTR _pList$[ebp]
push	ecx
call	_pager_write_changecounter
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+10]
push	eax
mov	ecx, DWORD PTR _isCommit$[ebp]
push	ecx
mov	edx, DWORD PTR _nTruncate$[ebp]
push	edx
mov	eax, DWORD PTR _pList$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+152]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalFrames
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@pagerWalFr
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+88], 0
je	SHORT $LN4@pagerWalFr
mov	eax, DWORD PTR _pList$[ebp]
mov	DWORD PTR _p$2[ebp], eax
jmp	SHORT $LN3@pagerWalFr
mov	ecx, DWORD PTR _p$2[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _p$2[ebp], edx
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN4@pagerWalFr
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+88]
push	edx
call	_sqlite3BackupUpdate
add	esp, 12					
jmp	SHORT $LN2@pagerWalFr
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerRollbackWal PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	DWORD PTR [eax+24], edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
push	OFFSET _pagerUndoCallback
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+208]
push	edx
call	_sqlite3WalUndo
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
call	_sqlite3PcacheDirtyList
add	esp, 4
mov	DWORD PTR _pList$[ebp], eax
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN1@pagerRollb
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@pagerRollb
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pNext$1[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUndoCallback
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pNext$1[ebp]
mov	DWORD PTR _pList$[ebp], ecx
jmp	SHORT $LN2@pagerRollb
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerUndoCallback PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pCtx$[ebp]
mov	DWORD PTR _pPager$[ebp], eax
mov	ecx, DWORD PTR _iPg$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_sqlite3PagerLookup
add	esp, 8
mov	DWORD PTR _pPg$[ebp], eax
cmp	DWORD PTR _pPg$[ebp], 0
je	$LN5@pagerUndoC
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_sqlite3PcachePageRefcount
add	esp, 4
cmp	eax, 1
jne	SHORT $LN4@pagerUndoC
mov	ecx, DWORD PTR _pPg$[ebp]
push	ecx
call	_sqlite3PcacheDrop
add	esp, 4
jmp	SHORT $LN5@pagerUndoC
mov	DWORD PTR _iFrame$1[ebp], 0
lea	edx, DWORD PTR _iFrame$1[ebp]
push	edx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalFindFrame
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@pagerUndoC
mov	ecx, DWORD PTR _iFrame$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_readDbPage
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@pagerUndoC
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+196]
call	edx
add	esp, 4
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_sqlite3PagerUnrefNotNull
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+88]
push	edx
call	_sqlite3BackupRestart
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_write_changecounter PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
add	ecx, 100				
push	ecx
call	_sqlite3Get4byte
add	esp, 4
add	eax, 1
mov	DWORD PTR _change_counter$[ebp], eax
mov	edx, DWORD PTR _change_counter$[ebp]
push	edx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 24					
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _change_counter$[ebp]
push	edx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 92					
push	ecx
call	_sqlite3Put4byte
add	esp, 8
push	3008005					
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 96					
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_readDbPage PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pgno$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+152]
mov	DWORD PTR _pgsz$[ebp], edx
cmp	DWORD PTR _iFrame$[ebp], 0
je	SHORT $LN6@readDbPage
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pgsz$[ebp]
push	edx
mov	eax, DWORD PTR _iFrame$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+208]
push	edx
call	_sqlite3WalReadFrame
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN5@readDbPage
mov	ecx, DWORD PTR _pgno$[ebp]
sub	ecx, 1
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _iOffset$1[ebp], eax
mov	DWORD PTR _iOffset$1[ebp+4], edx
mov	eax, DWORD PTR _iOffset$1[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOffset$1[ebp]
push	ecx
mov	edx, DWORD PTR _pgsz$[ebp]
push	edx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 522		
jne	SHORT $LN5@readDbPage
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _pgno$[ebp], 1
jne	SHORT $LN3@readDbPage
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@readDbPage
push	16					
push	255					
mov	ecx, DWORD PTR _pPager$[ebp]
add	ecx, 100				
push	ecx
call	_memset
add	esp, 12					
jmp	SHORT $LN3@readDbPage
mov	edx, 1
imul	eax, edx, 24
mov	ecx, DWORD PTR _pPg$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _dbFileVers$2[ebp], eax
push	16					
mov	edx, DWORD PTR _dbFileVers$2[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 100				
push	eax
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_playback PROC
push	ebp
mov	ebp, esp
sub	esp, 72					
push	esi
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pVfs$[ebp], ecx
mov	DWORD PTR _mxPg$[ebp], 0
mov	DWORD PTR _res$[ebp], 1
mov	DWORD PTR _zMaster$[ebp], 0
mov	DWORD PTR _nPlayback$[ebp], 0
lea	edx, DWORD PTR _szJ$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN28@pager_play
jmp	$end_playback$33
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+200]
mov	DWORD PTR _zMaster$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+8]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _zMaster$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_readMasterJournal
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN27@pager_play
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zMaster$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN27@pager_play
lea	edx, DWORD PTR _res$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _zMaster$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _zMaster$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN25@pager_play
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN26@pager_play
jmp	$end_playback$33
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+72], 0
mov	DWORD PTR [edx+76], 0
mov	eax, DWORD PTR _isHot$[ebp]
mov	DWORD PTR _needPagerReset$[ebp], eax
mov	ecx, 1
test	ecx, ecx
je	$end_playback$33
lea	edx, DWORD PTR _mxPg$[ebp]
push	edx
lea	eax, DWORD PTR _nRec$[ebp]
push	eax
mov	ecx, DWORD PTR _szJ$[ebp+4]
push	ecx
mov	edx, DWORD PTR _szJ$[ebp]
push	edx
mov	eax, DWORD PTR _isHot$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_readJournalHdr
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN22@pager_play
cmp	DWORD PTR _rc$[ebp], 101		
jne	SHORT $LN21@pager_play
mov	DWORD PTR _rc$[ebp], 0
jmp	$end_playback$33
cmp	DWORD PTR _nRec$[ebp], -1
jne	SHORT $LN20@pager_play
mov	edx, DWORD PTR _pPager$[ebp]
xor	eax, eax
mov	ecx, DWORD PTR _szJ$[ebp]
sub	ecx, DWORD PTR [edx+148]
mov	esi, DWORD PTR _szJ$[ebp+4]
sbb	esi, eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
add	eax, 8
cdq
push	edx
push	eax
push	esi
push	ecx
call	__alldiv
mov	DWORD PTR _nRec$[ebp], eax
cmp	DWORD PTR _nRec$[ebp], 0
jne	SHORT $LN19@pager_play
cmp	DWORD PTR _isHot$[ebp], 0
jne	SHORT $LN19@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+148]
xor	edx, edx
mov	eax, DWORD PTR _pPager$[ebp]
add	ecx, DWORD PTR [eax+80]
adc	edx, DWORD PTR [eax+84]
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv304[ebp], ecx
mov	DWORD PTR tv304[ebp+4], edx
mov	DWORD PTR tv307[ebp], eax
mov	ecx, DWORD PTR tv307[ebp]
mov	edx, DWORD PTR tv304[ebp]
cmp	edx, DWORD PTR [ecx+72]
jne	SHORT $LN19@pager_play
mov	eax, DWORD PTR tv307[ebp]
mov	ecx, DWORD PTR tv304[ebp+4]
cmp	ecx, DWORD PTR [eax+76]
jne	SHORT $LN19@pager_play
mov	edx, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _szJ$[ebp]
sub	ecx, DWORD PTR [edx+72]
mov	esi, DWORD PTR _szJ$[ebp+4]
sbb	esi, DWORD PTR [edx+76]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
add	eax, 8
cdq
push	edx
push	eax
push	esi
push	ecx
call	__alldiv
mov	DWORD PTR _nRec$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+148]
xor	edx, edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv342[ebp], eax
mov	DWORD PTR tv343[ebp], ecx
mov	DWORD PTR tv343[ebp+4], edx
mov	ecx, DWORD PTR tv342[ebp]
mov	edx, DWORD PTR [ecx+72]
cmp	edx, DWORD PTR tv343[ebp]
jne	SHORT $LN18@pager_play
mov	eax, DWORD PTR tv342[ebp]
mov	ecx, DWORD PTR [eax+76]
cmp	ecx, DWORD PTR tv343[ebp+4]
jne	SHORT $LN18@pager_play
mov	edx, DWORD PTR _mxPg$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_truncate
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN17@pager_play
jmp	$end_playback$33
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _mxPg$[ebp]
mov	DWORD PTR [ecx+24], edx
mov	DWORD PTR _u$[ebp], 0
jmp	SHORT $LN16@pager_play
mov	eax, DWORD PTR _u$[ebp]
add	eax, 1
mov	DWORD PTR _u$[ebp], eax
mov	ecx, DWORD PTR _u$[ebp]
cmp	ecx, DWORD PTR _nRec$[ebp]
jae	SHORT $LN14@pager_play
cmp	DWORD PTR _needPagerReset$[ebp], 0
je	SHORT $LN13@pager_play
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_reset
add	esp, 4
mov	DWORD PTR _needPagerReset$[ebp], 0
push	0
push	1
push	0
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 72					
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_playback_one_page
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN12@pager_play
mov	edx, DWORD PTR _nPlayback$[ebp]
add	edx, 1
mov	DWORD PTR _nPlayback$[ebp], edx
jmp	SHORT $LN11@pager_play
cmp	DWORD PTR _rc$[ebp], 101		
jne	SHORT $LN10@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _szJ$[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR _szJ$[ebp+4]
mov	DWORD PTR [eax+76], edx
jmp	SHORT $LN14@pager_play
jmp	SHORT $LN11@pager_play
cmp	DWORD PTR _rc$[ebp], 522		
jne	SHORT $LN8@pager_play
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $end_playback$33
jmp	SHORT $LN11@pager_play
jmp	SHORT $end_playback$33
jmp	$LN15@pager_play
jmp	$LN24@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR [ecx+12]
mov	BYTE PTR [eax+18], dl
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+200]
mov	DWORD PTR _zMaster$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+8]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _zMaster$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_readMasterJournal
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@pager_play
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	eax, 4
jge	SHORT $LN4@pager_play
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+16]
test	edx, edx
jne	SHORT $LN5@pager_play
push	0
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@pager_play
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zMaster$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN31@pager_play
mov	DWORD PTR tv211[ebp], 1
jmp	SHORT $LN32@pager_play
mov	DWORD PTR tv211[ebp], 0
push	0
mov	edx, DWORD PTR tv211[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_end_transaction
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@pager_play
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zMaster$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN2@pager_play
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN2@pager_play
mov	edx, DWORD PTR _zMaster$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_delmaster
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _isHot$[ebp], 0
je	SHORT $LN1@pager_play
cmp	DWORD PTR _nPlayback$[ebp], 0
je	SHORT $LN1@pager_play
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+172]
push	edx
mov	eax, DWORD PTR _nPlayback$[ebp]
push	eax
push	OFFSET $SG90611
push	539					
call	_sqlite3_log
add	esp, 16					
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_setSectorSize
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setSectorSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
jne	SHORT $LN2@setSectorS
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsDeviceCharacteristics
add	esp, 4
and	eax, 4096				
je	SHORT $LN3@setSectorS
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+148], 512		
jmp	SHORT $LN4@setSectorS
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3SectorSize
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+148], eax
pop	ebp
ret	0
ENDP
_pager_delmaster PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pVfs$[ebp], ecx
mov	DWORD PTR _zMasterJournal$[ebp], 0
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+4]
shl	eax, 1
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pMaster$[ebp], eax
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR _pMaster$[ebp]
add	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pJournal$[ebp], edx
cmp	DWORD PTR _pMaster$[ebp], 0
jne	SHORT $LN14@pager_delm
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN13@pager_delm
mov	DWORD PTR _flags$4[ebp], 16385		
push	0
mov	eax, DWORD PTR _flags$4[ebp]
push	eax
mov	ecx, DWORD PTR _pMaster$[ebp]
push	ecx
mov	edx, DWORD PTR _zMaster$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@pager_delm
jmp	$delmaster_out$20
lea	ecx, DWORD PTR _nMasterJournal$[ebp]
push	ecx
mov	edx, DWORD PTR _pMaster$[ebp]
push	edx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@pager_delm
jmp	$delmaster_out$20
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+8]
add	ecx, 1
mov	DWORD PTR _nMasterPtr$[ebp], ecx
mov	edx, DWORD PTR _nMasterJournal$[ebp]
mov	eax, DWORD PTR _nMasterPtr$[ebp]
lea	ecx, DWORD PTR [edx+eax+1]
push	ecx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _zMasterJournal$[ebp], eax
cmp	DWORD PTR _zMasterJournal$[ebp], 0
jne	SHORT $LN10@pager_delm
mov	DWORD PTR _rc$[ebp], 7
jmp	$delmaster_out$20
mov	edx, DWORD PTR _nMasterJournal$[ebp]
add	edx, 1
mov	eax, DWORD PTR _nMasterJournal$[ebp+4]
adc	eax, 0
push	0
push	1
push	eax
push	edx
call	__allmul
add	eax, DWORD PTR _zMasterJournal$[ebp]
mov	DWORD PTR _zMasterPtr$[ebp], eax
push	0
push	0
mov	ecx, DWORD PTR _nMasterJournal$[ebp]
push	ecx
mov	edx, DWORD PTR _zMasterJournal$[ebp]
push	edx
mov	eax, DWORD PTR _pMaster$[ebp]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@pager_delm
jmp	$delmaster_out$20
push	0
push	1
mov	ecx, DWORD PTR _nMasterJournal$[ebp+4]
push	ecx
mov	edx, DWORD PTR _nMasterJournal$[ebp]
push	edx
call	__allmul
mov	ecx, DWORD PTR _zMasterJournal$[ebp]
mov	BYTE PTR [ecx+eax], 0
mov	edx, DWORD PTR _zMasterJournal$[ebp]
mov	DWORD PTR _zJournal$[ebp], edx
mov	eax, DWORD PTR _zJournal$[ebp]
sub	eax, DWORD PTR _zMasterJournal$[ebp]
cdq
mov	DWORD PTR tv246[ebp], eax
mov	DWORD PTR tv246[ebp+4], edx
mov	eax, DWORD PTR tv246[ebp+4]
cmp	eax, DWORD PTR _nMasterJournal$[ebp+4]
jg	$LN7@pager_delm
jl	SHORT $LN19@pager_delm
mov	ecx, DWORD PTR tv246[ebp]
cmp	ecx, DWORD PTR _nMasterJournal$[ebp]
jae	$LN7@pager_delm
lea	edx, DWORD PTR _exists$3[ebp]
push	edx
push	0
mov	eax, DWORD PTR _zJournal$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@pager_delm
jmp	$delmaster_out$20
cmp	DWORD PTR _exists$3[ebp], 0
je	$LN5@pager_delm
mov	DWORD PTR _flags$2[ebp], 2049		
push	0
mov	edx, DWORD PTR _flags$2[ebp]
push	edx
mov	eax, DWORD PTR _pJournal$[ebp]
push	eax
mov	ecx, DWORD PTR _zJournal$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@pager_delm
jmp	$delmaster_out$20
mov	eax, DWORD PTR _nMasterPtr$[ebp]
push	eax
mov	ecx, DWORD PTR _zMasterPtr$[ebp]
push	ecx
mov	edx, DWORD PTR _pJournal$[ebp]
push	edx
call	_readMasterJournal
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pJournal$[ebp]
push	eax
call	_sqlite3OsClose
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@pager_delm
jmp	$delmaster_out$20
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zMasterPtr$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN17@pager_delm
mov	edx, DWORD PTR _zMaster$[ebp]
push	edx
mov	eax, DWORD PTR _zMasterPtr$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN17@pager_delm
mov	DWORD PTR tv168[ebp], 1
jmp	SHORT $LN18@pager_delm
mov	DWORD PTR tv168[ebp], 0
mov	ecx, DWORD PTR tv168[ebp]
mov	DWORD PTR _c$1[ebp], ecx
cmp	DWORD PTR _c$1[ebp], 0
je	SHORT $LN5@pager_delm
jmp	SHORT $delmaster_out$20
mov	edx, DWORD PTR _zJournal$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _zJournal$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _zJournal$[ebp], edx
jmp	$LN8@pager_delm
mov	eax, DWORD PTR _pMaster$[ebp]
push	eax
call	_sqlite3OsClose
add	esp, 4
push	0
mov	ecx, DWORD PTR _zMaster$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3OsDelete
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _zMasterJournal$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _pMaster$[ebp], 0
je	SHORT $LN1@pager_delm
mov	ecx, DWORD PTR _pMaster$[ebp]
push	ecx
call	_sqlite3OsClose
add	esp, 4
mov	edx, DWORD PTR _pMaster$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_playback_one_page PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
push	esi
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+200]
mov	DWORD PTR _aData$[ebp], ecx
cmp	DWORD PTR _isMainJrnl$[ebp], 0
je	SHORT $LN29@pager_play
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR tv68[ebp], eax
jmp	SHORT $LN30@pager_play
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR tv68[ebp], edx
mov	eax, DWORD PTR tv68[ebp]
mov	DWORD PTR _jfd$[ebp], eax
lea	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pOffset$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR [edx]
push	ecx
mov	edx, DWORD PTR _jfd$[ebp]
push	edx
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN26@pager_play
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@pager_play
mov	eax, DWORD PTR _pOffset$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 4
mov	edx, DWORD PTR [eax+4]
adc	edx, 0
push	edx
push	ecx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
mov	edx, DWORD PTR _aData$[ebp]
push	edx
mov	eax, DWORD PTR _jfd$[ebp]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN25@pager_play
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@pager_play
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+152]
mov	eax, DWORD PTR _isMainJrnl$[ebp]
lea	eax, DWORD PTR [edx+eax*4+4]
cdq
mov	ecx, DWORD PTR _pOffset$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _pOffset$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
cmp	DWORD PTR _pgno$[ebp], 0
je	SHORT $LN23@pager_play
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
cdq
idiv	DWORD PTR [ecx+152]
add	eax, 1
cmp	DWORD PTR _pgno$[ebp], eax
jne	SHORT $LN24@pager_play
mov	eax, 101				
jmp	$LN27@pager_play
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pgno$[ebp]
cmp	eax, DWORD PTR [edx+24]
ja	SHORT $LN21@pager_play
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pDone$[ebp]
push	edx
call	_sqlite3BitvecTest
add	esp, 8
test	eax, eax
je	SHORT $LN22@pager_play
xor	eax, eax
jmp	$LN27@pager_play
cmp	DWORD PTR _isMainJrnl$[ebp], 0
je	SHORT $LN20@pager_play
lea	eax, DWORD PTR _cksum$[ebp]
push	eax
mov	ecx, DWORD PTR _pOffset$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 4
mov	eax, DWORD PTR [ecx+4]
sbb	eax, 0
push	eax
push	edx
mov	ecx, DWORD PTR _jfd$[ebp]
push	ecx
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN19@pager_play
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@pager_play
cmp	DWORD PTR _isSavepnt$[ebp], 0
jne	SHORT $LN20@pager_play
mov	edx, DWORD PTR _aData$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_cksum
add	esp, 8
cmp	eax, DWORD PTR _cksum$[ebp]
je	SHORT $LN20@pager_play
mov	eax, 101				
jmp	$LN27@pager_play
cmp	DWORD PTR _pDone$[ebp], 0
je	SHORT $LN17@pager_play
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pDone$[ebp]
push	edx
call	_sqlite3BitvecSet
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN17@pager_play
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@pager_play
cmp	DWORD PTR _pgno$[ebp], 1
jne	SHORT $LN16@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
movsx	ecx, WORD PTR [eax+142]
mov	edx, 1
imul	eax, edx, 20
mov	edx, DWORD PTR _aData$[ebp]
movzx	eax, BYTE PTR [edx+eax]
cmp	ecx, eax
je	SHORT $LN16@pager_play
mov	ecx, 1
imul	edx, ecx, 20
mov	eax, DWORD PTR _aData$[ebp]
movzx	cx, BYTE PTR [eax+edx]
mov	edx, DWORD PTR _pPager$[ebp]
mov	WORD PTR [edx+142], cx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN15@pager_play
mov	DWORD PTR _pPg$[ebp], 0
jmp	SHORT $LN14@pager_play
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_lookup
add	esp, 8
mov	DWORD PTR _pPg$[ebp], eax
cmp	DWORD PTR _isMainJrnl$[ebp], 0
je	SHORT $LN13@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
jne	SHORT $LN31@pager_play
mov	edx, DWORD PTR _pOffset$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv350[ebp], edx
mov	DWORD PTR tv351[ebp], eax
mov	ecx, DWORD PTR tv350[ebp]
mov	edx, DWORD PTR tv351[ebp]
mov	eax, DWORD PTR [ecx+4]
cmp	eax, DWORD PTR [edx+84]
jl	SHORT $LN31@pager_play
jg	SHORT $LN35@pager_play
mov	ecx, DWORD PTR tv350[ebp]
mov	edx, DWORD PTR tv351[ebp]
mov	eax, DWORD PTR [ecx]
cmp	eax, DWORD PTR [edx+80]
jbe	SHORT $LN31@pager_play
mov	DWORD PTR tv171[ebp], 0
jmp	SHORT $LN32@pager_play
mov	DWORD PTR tv171[ebp], 1
mov	ecx, DWORD PTR tv171[ebp]
mov	DWORD PTR _isSynced$[ebp], ecx
jmp	SHORT $LN12@pager_play
cmp	DWORD PTR _pPg$[ebp], 0
je	SHORT $LN33@pager_play
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, 4
je	SHORT $LN33@pager_play
mov	DWORD PTR tv177[ebp], 0
jmp	SHORT $LN34@pager_play
mov	DWORD PTR tv177[ebp], 1
mov	ecx, DWORD PTR tv177[ebp]
mov	DWORD PTR _isSynced$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
cmp	DWORD PTR [eax], 0
je	$LN11@pager_play
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+16]
cmp	edx, 4
jge	SHORT $LN10@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
test	ecx, ecx
jne	$LN11@pager_play
cmp	DWORD PTR _isSynced$[ebp], 0
je	$LN11@pager_play
mov	ecx, DWORD PTR _pgno$[ebp]
sub	ecx, 1
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _ofst$1[ebp], eax
mov	DWORD PTR _ofst$1[ebp+4], edx
mov	eax, DWORD PTR _ofst$1[ebp+4]
push	eax
mov	ecx, DWORD PTR _ofst$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
push	eax
mov	ecx, DWORD PTR _aData$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pgno$[ebp]
cmp	edx, DWORD PTR [ecx+32]
jbe	SHORT $LN9@pager_play
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pgno$[ebp]
mov	DWORD PTR [eax+32], ecx
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+88], 0
je	SHORT $LN8@pager_play
mov	eax, DWORD PTR _aData$[ebp]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+88]
push	eax
call	_sqlite3BackupUpdate
add	esp, 12					
mov	ecx, DWORD PTR _aData$[ebp]
mov	DWORD PTR _aData$[ebp], ecx
jmp	SHORT $LN7@pager_play
cmp	DWORD PTR _isMainJrnl$[ebp], 0
jne	SHORT $LN7@pager_play
cmp	DWORD PTR _pPg$[ebp], 0
jne	SHORT $LN7@pager_play
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+20]
or	eax, 2
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+20], al
push	1
lea	edx, DWORD PTR _pPg$[ebp]
push	edx
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+20]
and	eax, -3					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+20], al
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@pager_play
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@pager_play
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, -9					
mov	ecx, DWORD PTR _pPg$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_sqlite3PcacheMakeDirty
add	esp, 4
cmp	DWORD PTR _pPg$[ebp], 0
je	$LN4@pager_play
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pData$2[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
push	eax
mov	ecx, DWORD PTR _aData$[ebp]
push	ecx
mov	edx, DWORD PTR _pData$2[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+196]
call	edx
add	esp, 4
cmp	DWORD PTR _isMainJrnl$[ebp], 0
je	SHORT $LN3@pager_play
cmp	DWORD PTR _isSavepnt$[ebp], 0
je	SHORT $LN2@pager_play
mov	eax, DWORD PTR _pOffset$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv430[ebp], eax
mov	DWORD PTR tv431[ebp], ecx
mov	edx, DWORD PTR tv430[ebp]
mov	eax, DWORD PTR tv431[ebp]
mov	ecx, DWORD PTR [edx+4]
cmp	ecx, DWORD PTR [eax+84]
jg	SHORT $LN3@pager_play
jl	SHORT $LN2@pager_play
mov	edx, DWORD PTR tv430[ebp]
mov	eax, DWORD PTR tv431[ebp]
mov	ecx, DWORD PTR [edx]
cmp	ecx, DWORD PTR [eax+80]
ja	SHORT $LN3@pager_play
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_sqlite3PcacheMakeClean
add	esp, 4
cmp	DWORD PTR _pgno$[ebp], 1
jne	SHORT $LN1@pager_play
push	16					
mov	eax, 1
imul	ecx, eax, 24
add	ecx, DWORD PTR _pData$2[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
add	edx, 100				
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_sqlite3PcacheRelease
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_cksum PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _cksum$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
sub	eax, 200				
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN1@pager_cksu
mov	ecx, DWORD PTR _aData$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
add	edx, DWORD PTR _cksum$[ebp]
mov	DWORD PTR _cksum$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 200				
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN2@pager_cksu
mov	eax, DWORD PTR _cksum$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerUnlockAndRollback PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 6
je	SHORT $LN4@pagerUnloc
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
test	eax, eax
je	SHORT $LN4@pagerUnloc
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+16]
cmp	edx, 2
jl	SHORT $LN3@pagerUnloc
call	_sqlite3BeginBenignMalloc
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerRollback
add	esp, 4
call	_sqlite3EndBenignMalloc
jmp	SHORT $LN4@pagerUnloc
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
jne	SHORT $LN4@pagerUnloc
push	0
push	0
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_end_transaction
add	esp, 12					
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_unlock
add	esp, 4
pop	ebp
ret	0
ENDP
_pager_end_transaction PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _rc2$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 2
jge	SHORT $LN19@pager_end_
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+17]
cmp	eax, 2
jge	SHORT $LN19@pager_end_
xor	eax, eax
jmp	$LN20@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_releaseAllSavepoints
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
cmp	DWORD PTR [eax], 0
je	$LN18@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3IsMemJournal
add	esp, 4
test	eax, eax
je	SHORT $LN17@pager_end_
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsClose
add	esp, 4
jmp	$LN18@pager_end_
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 3
jne	SHORT $LN15@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv218[ebp], ecx
mov	edx, DWORD PTR tv218[ebp]
mov	eax, DWORD PTR tv218[ebp]
mov	ecx, DWORD PTR [edx+72]
or	ecx, DWORD PTR [eax+76]
jne	SHORT $LN14@pager_end_
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN13@pager_end_
push	0
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], 0
mov	DWORD PTR [ecx+76], 0
jmp	$LN18@pager_end_
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 1
je	SHORT $LN10@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
je	SHORT $LN11@pager_end_
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+5]
cmp	ecx, 5
je	SHORT $LN11@pager_end_
mov	edx, DWORD PTR _hasMaster$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_zeroJournalHdr
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], 0
mov	DWORD PTR [ecx+76], 0
jmp	SHORT $LN18@pager_end_
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+12]
test	eax, eax
jne	SHORT $LN22@pager_end_
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN22@pager_end_
mov	DWORD PTR tv139[ebp], 1
jmp	SHORT $LN23@pager_end_
mov	DWORD PTR tv139[ebp], 0
mov	edx, DWORD PTR tv139[ebp]
mov	DWORD PTR _bDelete$1[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsClose
add	esp, 4
cmp	DWORD PTR _bDelete$1[ebp], 0
je	SHORT $LN18@pager_end_
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+172]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3OsDelete
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3BitvecDestroy
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+56], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [eax+44], 0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+204]
push	edx
call	_sqlite3PcacheCleanAll
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheTruncate
add	esp, 8
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN7@pager_end_
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalEndWriteTransaction
add	esp, 4
mov	DWORD PTR _rc2$[ebp], eax
jmp	SHORT $LN6@pager_end_
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@pager_end_
cmp	DWORD PTR _bCommit$[ebp], 0
je	SHORT $LN6@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+32]
cmp	eax, DWORD PTR [edx+24]
jbe	SHORT $LN6@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_truncate
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@pager_end_
cmp	DWORD PTR _bCommit$[ebp], 0
je	SHORT $LN4@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
cmp	DWORD PTR [edx], 0
je	SHORT $LN4@pager_end_
push	0
push	22					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsFileControl
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 12			
jne	SHORT $LN4@pager_end_
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+4]
test	eax, eax
jne	SHORT $LN2@pager_end_
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN1@pager_end_
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalExclusiveMode
add	esp, 8
test	eax, eax
je	SHORT $LN2@pager_end_
push	1
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUnlockDb
add	esp, 8
mov	DWORD PTR _rc2$[ebp], eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+18], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+16], 1
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+19], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN24@pager_end_
mov	edx, DWORD PTR _rc2$[ebp]
mov	DWORD PTR tv203[ebp], edx
jmp	SHORT $LN25@pager_end_
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR tv203[ebp], eax
mov	eax, DWORD PTR tv203[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_truncate PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
cmp	DWORD PTR [ecx], 0
je	$LN7@pager_trun
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	eax, 4
jge	SHORT $LN6@pager_trun
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+16]
test	edx, edx
jne	$LN7@pager_trun
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
mov	DWORD PTR _szPage$4[ebp], ecx
lea	edx, DWORD PTR _currentSize$1[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _szPage$4[ebp]
cdq
mov	ecx, DWORD PTR _nPage$[ebp]
xor	esi, esi
push	esi
push	ecx
push	edx
push	eax
call	__allmul
mov	DWORD PTR _newSize$2[ebp], eax
mov	DWORD PTR _newSize$2[ebp+4], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN7@pager_trun
mov	edx, DWORD PTR _currentSize$1[ebp]
cmp	edx, DWORD PTR _newSize$2[ebp]
jne	SHORT $LN10@pager_trun
mov	eax, DWORD PTR _currentSize$1[ebp+4]
cmp	eax, DWORD PTR _newSize$2[ebp+4]
je	$LN7@pager_trun
mov	ecx, DWORD PTR _currentSize$1[ebp+4]
cmp	ecx, DWORD PTR _newSize$2[ebp+4]
jl	SHORT $LN4@pager_trun
jg	SHORT $LN11@pager_trun
mov	edx, DWORD PTR _currentSize$1[ebp]
cmp	edx, DWORD PTR _newSize$2[ebp]
jbe	SHORT $LN4@pager_trun
mov	eax, DWORD PTR _newSize$2[ebp+4]
push	eax
mov	ecx, DWORD PTR _newSize$2[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@pager_trun
mov	eax, DWORD PTR _szPage$4[ebp]
cdq
add	eax, DWORD PTR _currentSize$1[ebp]
adc	edx, DWORD PTR _currentSize$1[ebp+4]
mov	DWORD PTR tv189[ebp], eax
mov	DWORD PTR tv189[ebp+4], edx
mov	ecx, DWORD PTR tv189[ebp+4]
cmp	ecx, DWORD PTR _newSize$2[ebp+4]
jg	SHORT $LN3@pager_trun
jl	SHORT $LN12@pager_trun
mov	edx, DWORD PTR tv189[ebp]
cmp	edx, DWORD PTR _newSize$2[ebp]
ja	SHORT $LN3@pager_trun
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+200]
mov	DWORD PTR _pTmp$3[ebp], ecx
mov	edx, DWORD PTR _szPage$4[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pTmp$3[ebp]
push	eax
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _szPage$4[ebp]
cdq
mov	ecx, DWORD PTR _newSize$2[ebp]
sub	ecx, eax
mov	eax, DWORD PTR _newSize$2[ebp+4]
sbb	eax, edx
push	eax
push	ecx
mov	ecx, DWORD PTR _szPage$4[ebp]
push	ecx
mov	edx, DWORD PTR _pTmp$3[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@pager_trun
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _nPage$[ebp]
mov	DWORD PTR [edx+32], eax
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_error PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _rc$[ebp]
and	eax, 255				
mov	DWORD PTR _rc2$[ebp], eax
cmp	DWORD PTR _rc2$[ebp], 13		
je	SHORT $LN1@pager_erro
cmp	DWORD PTR _rc2$[ebp], 10		
jne	SHORT $LN2@pager_erro
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx+40], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+16], 6
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_unlock PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3BitvecDestroy
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+56], 0
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_releaseAllSavepoints
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN8@pager_unlo
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalEndReadTransaction
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+16], 0
jmp	$LN7@pager_unlo
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+4]
test	eax, eax
jne	$LN7@pager_unlo
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
cmp	DWORD PTR [edx], 0
je	SHORT $LN11@pager_unlo
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsDeviceCharacteristics
add	esp, 4
mov	DWORD PTR tv83[ebp], eax
jmp	SHORT $LN12@pager_unlo
mov	DWORD PTR tv83[ebp], 0
mov	edx, DWORD PTR tv83[ebp]
mov	DWORD PTR _iDc$2[ebp], edx
mov	eax, DWORD PTR _iDc$2[ebp]
and	eax, 2048				
je	SHORT $LN4@pager_unlo
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+5]
and	edx, 5
cmp	edx, 1
je	SHORT $LN5@pager_unlo
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsClose
add	esp, 4
push	0
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerUnlockDb
add	esp, 8
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN3@pager_unlo
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 6
jne	SHORT $LN3@pager_unlo
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+17], 5
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+18], 0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+16], 0
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+40], 0
je	SHORT $LN2@pager_unlo
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_reset
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	al, BYTE PTR [edx+12]
mov	BYTE PTR [ecx+18], al
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+16], 0
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+40], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+116]
test	ecx, ecx
je	SHORT $LN2@pager_unlo
push	0
push	0
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsUnfetch
add	esp, 16					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], 0
mov	DWORD PTR [ecx+76], 0
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+80], 0
mov	DWORD PTR [edx+84], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+19], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_addToSavepointBitvecs PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN4@addToSavep
mov	eax, DWORD PTR _ii$[ebp]
add	eax, 1
mov	DWORD PTR _ii$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _ii$[ebp]
cmp	edx, DWORD PTR [ecx+96]
jge	SHORT $LN2@addToSavep
imul	eax, DWORD PTR _ii$[ebp], 48
mov	ecx, DWORD PTR _pPager$[ebp]
add	eax, DWORD PTR [ecx+92]
mov	DWORD PTR _p$1[ebp], eax
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR _pgno$[ebp]
cmp	eax, DWORD PTR [edx+20]
ja	SHORT $LN1@addToSavep
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_sqlite3BitvecSet
add	esp, 8
or	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@addToSavep
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_releaseAllSavepoints PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN5@releaseAll
mov	eax, DWORD PTR _ii$[ebp]
add	eax, 1
mov	DWORD PTR _ii$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _ii$[ebp]
cmp	edx, DWORD PTR [ecx+96]
jge	SHORT $LN3@releaseAll
imul	eax, DWORD PTR _ii$[ebp], 48
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+92]
mov	eax, DWORD PTR [edx+eax+16]
push	eax
call	_sqlite3BitvecDestroy
add	esp, 4
jmp	SHORT $LN4@releaseAll
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
je	SHORT $LN1@releaseAll
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3IsMemJournal
add	esp, 4
test	eax, eax
je	SHORT $LN2@releaseAll
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3OsClose
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [eax+92], 0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+96], 0
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+52], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pager_reset PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
call	_sqlite3BackupRestart
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheClear
add	esp, 4
pop	ebp
ret	0
ENDP
_pager_lookup PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _p$[ebp], 0
lea	eax, DWORD PTR _p$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheFetch
add	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_writeMasterJournal PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
push	esi
mov	DWORD PTR _cksum$[ebp], 0
cmp	DWORD PTR _zMaster$[ebp], 0
je	SHORT $LN8@writeMaste
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+5]
cmp	ecx, 4
je	SHORT $LN8@writeMaste
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN9@writeMaste
xor	eax, eax
jmp	$LN10@writeMaste
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+19], 1
mov	DWORD PTR _nMaster$[ebp], 0
jmp	SHORT $LN7@writeMaste
mov	edx, DWORD PTR _nMaster$[ebp]
add	edx, 1
mov	DWORD PTR _nMaster$[ebp], edx
mov	eax, DWORD PTR _zMaster$[ebp]
add	eax, DWORD PTR _nMaster$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN5@writeMaste
mov	edx, DWORD PTR _zMaster$[ebp]
add	edx, DWORD PTR _nMaster$[ebp]
movsx	eax, BYTE PTR [edx]
add	eax, DWORD PTR _cksum$[ebp]
mov	DWORD PTR _cksum$[ebp], eax
jmp	SHORT $LN6@writeMaste
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+8]
test	edx, edx
je	SHORT $LN4@writeMaste
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_journalHdrOffset
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	DWORD PTR [ecx+76], edx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR _iHdrOff$[ebp], eax
mov	ecx, DWORD PTR [edx+76]
mov	DWORD PTR _iHdrOff$[ebp+4], ecx
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
cdq
idiv	DWORD PTR [ecx+152]
add	eax, 1
push	eax
mov	edx, DWORD PTR _iHdrOff$[ebp+4]
push	edx
mov	eax, DWORD PTR _iHdrOff$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_write32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN2@writeMaste
mov	eax, DWORD PTR _iHdrOff$[ebp]
add	eax, 4
mov	ecx, DWORD PTR _iHdrOff$[ebp+4]
adc	ecx, 0
push	ecx
push	eax
mov	edx, DWORD PTR _nMaster$[ebp]
push	edx
mov	eax, DWORD PTR _zMaster$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN2@writeMaste
mov	eax, DWORD PTR _nMaster$[ebp]
push	eax
mov	ecx, DWORD PTR _iHdrOff$[ebp]
add	ecx, 4
mov	esi, DWORD PTR _iHdrOff$[ebp+4]
adc	esi, 0
mov	eax, DWORD PTR _nMaster$[ebp]
cdq
add	ecx, eax
adc	esi, edx
push	esi
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_write32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@writeMaste
mov	ecx, DWORD PTR _cksum$[ebp]
push	ecx
mov	ecx, DWORD PTR _iHdrOff$[ebp]
add	ecx, 4
mov	esi, DWORD PTR _iHdrOff$[ebp+4]
adc	esi, 0
mov	eax, DWORD PTR _nMaster$[ebp]
cdq
add	ecx, eax
adc	esi, edx
add	ecx, 4
adc	esi, 0
push	esi
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_write32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@writeMaste
mov	ecx, DWORD PTR _iHdrOff$[ebp]
add	ecx, 4
mov	esi, DWORD PTR _iHdrOff$[ebp+4]
adc	esi, 0
mov	eax, DWORD PTR _nMaster$[ebp]
cdq
add	ecx, eax
adc	esi, edx
add	ecx, 8
adc	esi, 0
push	esi
push	ecx
push	8
push	OFFSET _aJournalMagic
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@writeMaste
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN10@writeMaste
mov	eax, DWORD PTR _nMaster$[ebp]
add	eax, 20					
cdq
mov	ecx, DWORD PTR _pPager$[ebp]
add	eax, DWORD PTR [ecx+72]
adc	edx, DWORD PTR [ecx+76]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	DWORD PTR [ecx+76], edx
lea	edx, DWORD PTR _jrnlSize$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@writeMaste
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv314[ebp], edx
mov	eax, DWORD PTR tv314[ebp]
mov	ecx, DWORD PTR _jrnlSize$[ebp+4]
cmp	ecx, DWORD PTR [eax+76]
jl	SHORT $LN1@writeMaste
jg	SHORT $LN12@writeMaste
mov	edx, DWORD PTR tv314[ebp]
mov	eax, DWORD PTR _jrnlSize$[ebp]
cmp	eax, DWORD PTR [edx+72]
jbe	SHORT $LN1@writeMaste
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+76]
push	edx
mov	eax, DWORD PTR [ecx+72]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_readJournalHdr PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_journalHdrOffset
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	DWORD PTR [ecx+76], edx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+148]
xor	ecx, ecx
mov	edx, DWORD PTR _pPager$[ebp]
add	eax, DWORD PTR [edx+72]
adc	ecx, DWORD PTR [edx+76]
mov	DWORD PTR tv196[ebp], eax
mov	DWORD PTR tv196[ebp+4], ecx
mov	eax, DWORD PTR tv196[ebp+4]
cmp	eax, DWORD PTR _journalSize$[ebp+4]
jl	SHORT $LN13@readJourna
jg	SHORT $LN16@readJourna
mov	ecx, DWORD PTR tv196[ebp]
cmp	ecx, DWORD PTR _journalSize$[ebp]
jbe	SHORT $LN13@readJourna
mov	eax, 101				
jmp	$LN14@readJourna
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR _iHdrOff$[ebp], eax
mov	ecx, DWORD PTR [edx+76]
mov	DWORD PTR _iHdrOff$[ebp+4], ecx
cmp	DWORD PTR _isHot$[ebp], 0
jne	SHORT $LN11@readJourna
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv209[ebp], edx
mov	eax, DWORD PTR tv209[ebp]
mov	ecx, DWORD PTR _iHdrOff$[ebp]
cmp	ecx, DWORD PTR [eax+80]
jne	SHORT $LN11@readJourna
mov	edx, DWORD PTR tv209[ebp]
mov	eax, DWORD PTR _iHdrOff$[ebp+4]
cmp	eax, DWORD PTR [edx+84]
je	SHORT $LN12@readJourna
mov	ecx, DWORD PTR _iHdrOff$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iHdrOff$[ebp]
push	edx
push	8
lea	eax, DWORD PTR _aMagic$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@readJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN14@readJourna
push	8
push	OFFSET _aJournalMagic
lea	eax, DWORD PTR _aMagic$[ebp]
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN12@readJourna
mov	eax, 101				
jmp	$LN14@readJourna
mov	ecx, DWORD PTR _pNRec$[ebp]
push	ecx
mov	edx, DWORD PTR _iHdrOff$[ebp]
add	edx, 8
mov	eax, DWORD PTR _iHdrOff$[ebp+4]
adc	eax, 0
push	eax
push	edx
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@readJourna
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 48					
push	eax
mov	ecx, DWORD PTR _iHdrOff$[ebp]
add	ecx, 12					
mov	edx, DWORD PTR _iHdrOff$[ebp+4]
adc	edx, 0
push	edx
push	ecx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@readJourna
mov	edx, DWORD PTR _pDbSize$[ebp]
push	edx
mov	eax, DWORD PTR _iHdrOff$[ebp]
add	eax, 16					
mov	ecx, DWORD PTR _iHdrOff$[ebp+4]
adc	ecx, 0
push	ecx
push	eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@readJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN14@readJourna
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv262[ebp], ecx
mov	edx, DWORD PTR tv262[ebp]
mov	eax, DWORD PTR tv262[ebp]
mov	ecx, DWORD PTR [edx+72]
or	ecx, DWORD PTR [eax+76]
jne	$LN6@readJourna
lea	edx, DWORD PTR _iSectorSize$1[ebp]
push	edx
mov	eax, DWORD PTR _iHdrOff$[ebp]
add	eax, 20					
mov	ecx, DWORD PTR _iHdrOff$[ebp+4]
adc	ecx, 0
push	ecx
push	eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@readJourna
lea	ecx, DWORD PTR _iPageSize$2[ebp]
push	ecx
mov	edx, DWORD PTR _iHdrOff$[ebp]
add	edx, 24					
mov	eax, DWORD PTR _iHdrOff$[ebp+4]
adc	eax, 0
push	eax
push	edx
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@readJourna
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN14@readJourna
cmp	DWORD PTR _iPageSize$2[ebp], 0
jne	SHORT $LN3@readJourna
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
mov	DWORD PTR _iPageSize$2[ebp], ecx
cmp	DWORD PTR _iPageSize$2[ebp], 512	
jb	SHORT $LN1@readJourna
cmp	DWORD PTR _iSectorSize$1[ebp], 32	
jb	SHORT $LN1@readJourna
cmp	DWORD PTR _iPageSize$2[ebp], 65536	
ja	SHORT $LN1@readJourna
cmp	DWORD PTR _iSectorSize$1[ebp], 65536	
ja	SHORT $LN1@readJourna
mov	edx, DWORD PTR _iPageSize$2[ebp]
sub	edx, 1
and	edx, DWORD PTR _iPageSize$2[ebp]
jne	SHORT $LN1@readJourna
mov	eax, DWORD PTR _iSectorSize$1[ebp]
sub	eax, 1
and	eax, DWORD PTR _iSectorSize$1[ebp]
je	SHORT $LN2@readJourna
mov	eax, 101				
jmp	SHORT $LN14@readJourna
push	-1
lea	ecx, DWORD PTR _iPageSize$2[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_sqlite3PagerSetPagesize
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _iSectorSize$1[ebp]
mov	DWORD PTR [eax+148], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+148]
xor	ecx, ecx
mov	edx, DWORD PTR _pPager$[ebp]
add	eax, DWORD PTR [edx+72]
adc	ecx, DWORD PTR [edx+76]
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+72], eax
mov	DWORD PTR [edx+76], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_writeJournalHdr PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+200]
mov	DWORD PTR _zHeader$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
mov	DWORD PTR _nHeader$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _nHeader$[ebp]
cmp	edx, DWORD PTR [ecx+148]
jbe	SHORT $LN11@writeJourn
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+148]
mov	DWORD PTR _nHeader$[ebp], ecx
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN10@writeJourn
mov	edx, DWORD PTR _ii$[ebp]
add	edx, 1
mov	DWORD PTR _ii$[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _ii$[ebp]
cmp	ecx, DWORD PTR [eax+96]
jge	SHORT $LN8@writeJourn
imul	edx, DWORD PTR _ii$[ebp], 48
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+92]
mov	DWORD PTR tv197[ebp], ecx
mov	DWORD PTR tv198[ebp], edx
mov	edx, DWORD PTR tv198[ebp]
mov	eax, DWORD PTR tv197[ebp]
mov	ecx, DWORD PTR tv198[ebp]
mov	esi, DWORD PTR tv197[ebp]
mov	edx, DWORD PTR [eax+edx+8]
or	edx, DWORD PTR [esi+ecx+12]
jne	SHORT $LN7@writeJourn
imul	eax, DWORD PTR _ii$[ebp], 48
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+92]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	esi, DWORD PTR [ecx+72]
mov	DWORD PTR [edx+eax+8], esi
mov	ecx, DWORD PTR [ecx+76]
mov	DWORD PTR [edx+eax+12], ecx
jmp	SHORT $LN9@writeJourn
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_journalHdrOffset
add	esp, 4
mov	DWORD PTR tv84[ebp], eax
mov	DWORD PTR tv84[ebp+4], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR tv84[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv84[ebp+4]
mov	DWORD PTR [eax+76], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR tv84[ebp]
mov	DWORD PTR [eax+80], ecx
mov	edx, DWORD PTR tv84[ebp+4]
mov	DWORD PTR [eax+84], edx
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
jne	SHORT $LN5@writeJourn
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
cmp	eax, 4
je	SHORT $LN5@writeJourn
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsDeviceCharacteristics
add	esp, 4
and	eax, 512				
je	SHORT $LN6@writeJourn
push	8
push	OFFSET _aJournalMagic
mov	eax, DWORD PTR _zHeader$[ebp]
push	eax
call	_memcpy
add	esp, 12					
push	-1
mov	ecx, 1
shl	ecx, 3
add	ecx, DWORD PTR _zHeader$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
jmp	SHORT $LN4@writeJourn
push	12					
push	0
mov	edx, DWORD PTR _zHeader$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 48					
push	eax
push	4
call	_sqlite3_randomness
add	esp, 8
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+48]
push	edx
mov	eax, 1
imul	ecx, eax, 12
add	ecx, DWORD PTR _zHeader$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
mov	ecx, 1
shl	ecx, 4
add	ecx, DWORD PTR _zHeader$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+148]
push	eax
mov	ecx, 1
imul	edx, ecx, 20
add	edx, DWORD PTR _zHeader$[ebp]
push	edx
call	_sqlite3Put4byte
add	esp, 8
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
mov	edx, 1
imul	eax, edx, 24
add	eax, DWORD PTR _zHeader$[ebp]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _nHeader$[ebp]
sub	ecx, 28					
push	ecx
push	0
mov	edx, 1
imul	eax, edx, 28
add	eax, DWORD PTR _zHeader$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _nWrite$[ebp], 0
jmp	SHORT $LN3@writeJourn
mov	ecx, DWORD PTR _nWrite$[ebp]
add	ecx, DWORD PTR _nHeader$[ebp]
mov	DWORD PTR _nWrite$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@writeJourn
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _nWrite$[ebp]
cmp	eax, DWORD PTR [edx+148]
jae	SHORT $LN1@writeJourn
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+76]
push	edx
mov	eax, DWORD PTR [ecx+72]
push	eax
mov	ecx, DWORD PTR _nHeader$[ebp]
push	ecx
mov	edx, DWORD PTR _zHeader$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _nHeader$[ebp]
xor	eax, eax
mov	ecx, DWORD PTR _pPager$[ebp]
add	edx, DWORD PTR [ecx+72]
adc	eax, DWORD PTR [ecx+76]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], edx
mov	DWORD PTR [ecx+76], eax
jmp	SHORT $LN2@writeJourn
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_zeroJournalHdr PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv135[ebp], eax
mov	ecx, DWORD PTR tv135[ebp]
mov	edx, DWORD PTR tv135[ebp]
mov	eax, DWORD PTR [ecx+72]
or	eax, DWORD PTR [edx+76]
je	$LN7@zeroJourna
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+160]
mov	DWORD PTR _iLimit$2[ebp], edx
mov	eax, DWORD PTR [ecx+164]
mov	DWORD PTR _iLimit$2[ebp+4], eax
cmp	DWORD PTR _doTruncate$[ebp], 0
jne	SHORT $LN5@zeroJourna
mov	ecx, DWORD PTR _iLimit$2[ebp]
or	ecx, DWORD PTR _iLimit$2[ebp+4]
jne	SHORT $LN6@zeroJourna
push	0
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN4@zeroJourna
push	0
push	0
push	28					
push	OFFSET ?zeroHdr@?4??zeroJournalHdr@@9@9
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@zeroJourna
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
jne	SHORT $LN3@zeroJourna
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+11]
or	eax, 16					
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@zeroJourna
cmp	DWORD PTR _iLimit$2[ebp+4], 0
jl	SHORT $LN7@zeroJourna
jg	SHORT $LN10@zeroJourna
cmp	DWORD PTR _iLimit$2[ebp], 0
jbe	SHORT $LN7@zeroJourna
lea	eax, DWORD PTR _sz$1[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@zeroJourna
mov	eax, DWORD PTR _sz$1[ebp+4]
cmp	eax, DWORD PTR _iLimit$2[ebp+4]
jl	SHORT $LN7@zeroJourna
jg	SHORT $LN11@zeroJourna
mov	ecx, DWORD PTR _sz$1[ebp]
cmp	ecx, DWORD PTR _iLimit$2[ebp]
jbe	SHORT $LN7@zeroJourna
mov	edx, DWORD PTR _iLimit$2[ebp+4]
push	edx
mov	eax, DWORD PTR _iLimit$2[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_journalHdrOffset PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
xorpd	xmm0, xmm0
movlpd	QWORD PTR _offset$[ebp], xmm0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR [eax+76]
mov	DWORD PTR _c$[ebp+4], edx
mov	eax, DWORD PTR _c$[ebp]
or	eax, DWORD PTR _c$[ebp+4]
je	SHORT $LN1@journalHdr
mov	ecx, DWORD PTR _c$[ebp]
sub	ecx, 1
mov	edx, DWORD PTR _c$[ebp+4]
sbb	edx, 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+148]
xor	esi, esi
push	esi
push	eax
push	edx
push	ecx
call	__alldiv
add	eax, 1
adc	edx, 0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [ecx+148]
xor	esi, esi
push	esi
push	ecx
push	edx
push	eax
call	__allmul
mov	DWORD PTR _offset$[ebp], eax
mov	DWORD PTR _offset$[ebp+4], edx
mov	eax, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _offset$[ebp+4]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_readMasterJournal PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zMaster$[ebp]
mov	BYTE PTR [edx+ecx], 0
lea	eax, DWORD PTR _szJ$[ebp]
push	eax
mov	ecx, DWORD PTR _pJrnl$[ebp]
push	ecx
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN5@readMaster
cmp	DWORD PTR _szJ$[ebp+4], 0
jl	$LN5@readMaster
jg	SHORT $LN9@readMaster
cmp	DWORD PTR _szJ$[ebp], 16		
jb	$LN5@readMaster
lea	edx, DWORD PTR _len$[ebp]
push	edx
mov	eax, DWORD PTR _szJ$[ebp]
sub	eax, 16					
mov	ecx, DWORD PTR _szJ$[ebp+4]
sbb	ecx, 0
push	ecx
push	eax
mov	edx, DWORD PTR _pJrnl$[ebp]
push	edx
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN5@readMaster
mov	eax, DWORD PTR _len$[ebp]
cmp	eax, DWORD PTR _nMaster$[ebp]
jae	$LN5@readMaster
cmp	DWORD PTR _len$[ebp], 0
je	$LN5@readMaster
lea	ecx, DWORD PTR _cksum$[ebp]
push	ecx
mov	edx, DWORD PTR _szJ$[ebp]
sub	edx, 12					
mov	eax, DWORD PTR _szJ$[ebp+4]
sbb	eax, 0
push	eax
push	edx
mov	ecx, DWORD PTR _pJrnl$[ebp]
push	ecx
call	_read32bits
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@readMaster
mov	edx, DWORD PTR _szJ$[ebp]
sub	edx, 8
mov	eax, DWORD PTR _szJ$[ebp+4]
sbb	eax, 0
push	eax
push	edx
push	8
lea	ecx, DWORD PTR _aMagic$[ebp]
push	ecx
mov	edx, DWORD PTR _pJrnl$[ebp]
push	edx
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@readMaster
push	8
push	OFFSET _aJournalMagic
lea	eax, DWORD PTR _aMagic$[ebp]
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN5@readMaster
mov	ecx, DWORD PTR _szJ$[ebp]
sub	ecx, 16					
mov	edx, DWORD PTR _szJ$[ebp+4]
sbb	edx, 0
xor	eax, eax
sub	ecx, DWORD PTR _len$[ebp]
sbb	edx, eax
push	edx
push	ecx
mov	ecx, DWORD PTR _len$[ebp]
push	ecx
mov	edx, DWORD PTR _zMaster$[ebp]
push	edx
mov	eax, DWORD PTR _pJrnl$[ebp]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@readMaster
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN7@readMaster
mov	DWORD PTR _u$[ebp], 0
jmp	SHORT $LN4@readMaster
mov	ecx, DWORD PTR _u$[ebp]
add	ecx, 1
mov	DWORD PTR _u$[ebp], ecx
mov	edx, DWORD PTR _u$[ebp]
cmp	edx, DWORD PTR _len$[ebp]
jae	SHORT $LN2@readMaster
mov	eax, DWORD PTR _zMaster$[ebp]
add	eax, DWORD PTR _u$[ebp]
movsx	ecx, BYTE PTR [eax]
mov	edx, DWORD PTR _cksum$[ebp]
sub	edx, ecx
mov	DWORD PTR _cksum$[ebp], edx
jmp	SHORT $LN3@readMaster
cmp	DWORD PTR _cksum$[ebp], 0
je	SHORT $LN1@readMaster
mov	DWORD PTR _len$[ebp], 0
mov	eax, DWORD PTR _zMaster$[ebp]
add	eax, DWORD PTR _len$[ebp]
mov	BYTE PTR [eax], 0
xor	eax, eax
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerLockDb PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+17]
cmp	ecx, DWORD PTR _eLock$[ebp]
jl	SHORT $LN3@pagerLockD
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+17]
cmp	eax, 5
jne	SHORT $LN4@pagerLockD
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+13]
test	edx, edx
je	SHORT $LN7@pagerLockD
mov	DWORD PTR tv77[ebp], 0
jmp	SHORT $LN8@pagerLockD
mov	eax, DWORD PTR _eLock$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsLock
add	esp, 8
mov	DWORD PTR tv77[ebp], eax
mov	eax, DWORD PTR tv77[ebp]
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@pagerLockD
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+17]
cmp	edx, 5
jne	SHORT $LN1@pagerLockD
cmp	DWORD PTR _eLock$[ebp], 4
jne	SHORT $LN4@pagerLockD
mov	eax, DWORD PTR _pPager$[ebp]
mov	cl, BYTE PTR _eLock$[ebp]
mov	BYTE PTR [eax+17], cl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerUnlockDb PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN2@pagerUnloc
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+13]
test	eax, eax
je	SHORT $LN5@pagerUnloc
mov	DWORD PTR tv74[ebp], 0
jmp	SHORT $LN6@pagerUnloc
mov	ecx, DWORD PTR _eLock$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsUnlock
add	esp, 8
mov	DWORD PTR tv74[ebp], eax
mov	ecx, DWORD PTR tv74[ebp]
mov	DWORD PTR _rc$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+17]
cmp	eax, 5
je	SHORT $LN2@pagerUnloc
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR _eLock$[ebp]
mov	BYTE PTR [ecx+17], dl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_write32bits PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _val$[ebp]
push	eax
lea	ecx, DWORD PTR _ac$[ebp]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _offset$[ebp+4]
push	edx
mov	eax, DWORD PTR _offset$[ebp]
push	eax
push	4
lea	ecx, DWORD PTR _ac$[ebp]
push	ecx
mov	edx, DWORD PTR _fd$[ebp]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_read32bits PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _offset$[ebp+4]
push	eax
mov	ecx, DWORD PTR _offset$[ebp]
push	ecx
push	4
lea	edx, DWORD PTR _ac$[ebp]
push	edx
mov	eax, DWORD PTR _fd$[ebp]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@read32bits
lea	ecx, DWORD PTR _ac$[ebp]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pageInJournal PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
call	_sqlite3BitvecTest
add	esp, 8
pop	ebp
ret	0
ENDP
_subjRequiresPage PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pgno$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@subjRequir
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+96]
jge	SHORT $LN2@subjRequir
imul	ecx, DWORD PTR _i$[ebp], 48
mov	edx, DWORD PTR _pPager$[ebp]
add	ecx, DWORD PTR [edx+92]
mov	DWORD PTR _p$[ebp], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
cmp	ecx, DWORD PTR _pgno$[ebp]
jb	SHORT $LN1@subjRequir
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_sqlite3BitvecTest
add	esp, 8
test	eax, eax
jne	SHORT $LN1@subjRequir
mov	eax, 1
jmp	SHORT $LN5@subjRequir
jmp	SHORT $LN3@subjRequir
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pagerUseWal PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+208], 0
je	SHORT $LN3@pagerUseWa
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN4@pagerUseWa
mov	DWORD PTR tv66[ebp], 0
mov	eax, DWORD PTR tv66[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalHeapMemory PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pWal$[ebp], 0
je	SHORT $LN3@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
cmp	ecx, 2
jne	SHORT $LN3@sqlite3Wal
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@sqlite3Wal
mov	DWORD PTR tv68[ebp], 0
mov	eax, DWORD PTR tv68[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalExclusiveMode PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _op$[ebp], 0
jne	SHORT $LN7@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+43]
test	ecx, ecx
je	SHORT $LN6@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [edx+43], 0
mov	eax, DWORD PTR _pWal$[ebp]
movsx	ecx, WORD PTR [eax+40]
add	ecx, 3
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walLockShared
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [eax+43], 1
mov	ecx, DWORD PTR _pWal$[ebp]
movzx	edx, BYTE PTR [ecx+43]
test	edx, edx
jne	SHORT $LN10@sqlite3Wal
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN11@sqlite3Wal
mov	DWORD PTR tv80[ebp], 0
mov	eax, DWORD PTR tv80[ebp]
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN4@sqlite3Wal
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN3@sqlite3Wal
cmp	DWORD PTR _op$[ebp], 0
jle	SHORT $LN2@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
movsx	edx, WORD PTR [ecx+40]
add	edx, 3
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walUnlockShared
add	esp, 8
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+43], 1
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN3@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+43]
test	eax, eax
jne	SHORT $LN12@sqlite3Wal
mov	DWORD PTR tv91[ebp], 1
jmp	SHORT $LN13@sqlite3Wal
mov	DWORD PTR tv91[ebp], 0
mov	ecx, DWORD PTR tv91[ebp]
mov	DWORD PTR _rc$[ebp], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalCallback PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _ret$[ebp], 0
cmp	DWORD PTR _pWal$[ebp], 0
je	SHORT $LN1@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _ret$[ebp], ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _ret$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalCheckpoint PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _isChanged$[ebp], 0
mov	eax, DWORD PTR _eMode$[ebp]
mov	DWORD PTR _eMode2$[ebp], eax
mov	ecx, DWORD PTR _pWal$[ebp]
movzx	edx, BYTE PTR [ecx+46]
test	edx, edx
je	SHORT $LN16@sqlite3Wal
mov	eax, 8
jmp	$LN17@sqlite3Wal
push	1
push	1
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walLockExclusive
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+45], 1
cmp	DWORD PTR _eMode$[ebp], 0
je	SHORT $LN14@sqlite3Wal
push	1
push	0
mov	edx, DWORD PTR _pBusyArg$[ebp]
push	edx
mov	eax, DWORD PTR _xBusy$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walBusyLock
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN13@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [edx+44], 1
jmp	SHORT $LN14@sqlite3Wal
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN14@sqlite3Wal
mov	DWORD PTR _eMode2$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@sqlite3Wal
lea	eax, DWORD PTR _isChanged$[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walIndexReadHdr
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _isChanged$[ebp], 0
je	SHORT $LN10@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
cmp	DWORD PTR [ecx], 3
jl	SHORT $LN10@sqlite3Wal
push	0
push	0
push	0
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3OsUnfetch
add	esp, 16					
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN8@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [ecx+68], 0
je	SHORT $LN7@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walPagesize
add	esp, 4
cmp	eax, DWORD PTR _nBuf$[ebp]
je	SHORT $LN7@sqlite3Wal
push	50063					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN6@sqlite3Wal
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _sync_flags$[ebp]
push	ecx
mov	edx, DWORD PTR _pBusyArg$[ebp]
push	edx
mov	eax, DWORD PTR _xBusy$[ebp]
push	eax
mov	ecx, DWORD PTR _eMode2$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walCheckpoint
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Wal
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN8@sqlite3Wal
cmp	DWORD PTR _pnLog$[ebp], 0
je	SHORT $LN3@sqlite3Wal
mov	eax, DWORD PTR _pnLog$[ebp]
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR [eax], edx
cmp	DWORD PTR _pnCkpt$[ebp], 0
je	SHORT $LN8@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walCkptInfo
add	esp, 4
mov	ecx, DWORD PTR _pnCkpt$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _isChanged$[ebp], 0
je	SHORT $LN1@sqlite3Wal
push	48					
push	0
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 52					
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_sqlite3WalEndWriteTransaction
add	esp, 4
push	1
push	1
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockExclusive
add	esp, 12					
mov	eax, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [eax+45], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN19@sqlite3Wal
mov	ecx, DWORD PTR _eMode$[ebp]
cmp	ecx, DWORD PTR _eMode2$[ebp]
je	SHORT $LN19@sqlite3Wal
mov	DWORD PTR tv164[ebp], 5
jmp	SHORT $LN20@sqlite3Wal
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR tv164[ebp], edx
mov	eax, DWORD PTR tv164[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalFrames PROC
push	ebp
mov	ebp, esp
sub	esp, 136				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
mov	DWORD PTR _pLast$[ebp], 0
mov	DWORD PTR _nExtra$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walRestartLog
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN26@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _iFrame$[ebp], edx
cmp	DWORD PTR _iFrame$[ebp], 0
jne	$LN25@sqlite3Wal
push	931071618				
mov	eax, 1
imul	ecx, eax, 0
lea	edx, DWORD PTR _aWalHdr$5[ebp+ecx]
push	edx
call	_sqlite3Put4byte
add	esp, 8
push	3007000					
mov	eax, 1
shl	eax, 2
lea	ecx, DWORD PTR _aWalHdr$5[ebp+eax]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _szPage$[ebp]
push	edx
mov	eax, 1
shl	eax, 3
lea	ecx, DWORD PTR _aWalHdr$5[ebp+eax]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+104]
push	eax
mov	ecx, 1
imul	edx, ecx, 12
lea	eax, DWORD PTR _aWalHdr$5[ebp+edx]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _pWal$[ebp]
cmp	DWORD PTR [ecx+104], 0
jne	SHORT $LN24@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
add	edx, 84					
push	edx
push	8
call	_sqlite3_randomness
add	esp, 8
push	8
mov	eax, DWORD PTR _pWal$[ebp]
add	eax, 84					
push	eax
mov	ecx, 1
shl	ecx, 4
lea	edx, DWORD PTR _aWalHdr$5[ebp+ecx]
push	edx
call	_memcpy
add	esp, 12					
lea	eax, DWORD PTR _aCksum$2[ebp]
push	eax
push	0
push	24					
lea	ecx, DWORD PTR _aWalHdr$5[ebp]
push	ecx
push	1
call	_walChecksumBytes
add	esp, 20					
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aCksum$2[ebp+eax]
push	ecx
mov	edx, 1
imul	eax, edx, 24
lea	ecx, DWORD PTR _aWalHdr$5[ebp+eax]
push	ecx
call	_sqlite3Put4byte
add	esp, 8
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _aCksum$2[ebp+edx]
push	eax
mov	ecx, 1
imul	edx, ecx, 28
lea	eax, DWORD PTR _aWalHdr$5[ebp+edx]
push	eax
call	_sqlite3Put4byte
add	esp, 8
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _szPage$[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [eax+65], 0
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, 4
imul	ecx, eax, 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _aCksum$2[ebp+edx]
mov	DWORD PTR [eax+ecx+76], edx
mov	eax, 4
shl	eax, 0
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR _aCksum$2[ebp+eax]
mov	DWORD PTR [edx+ecx+76], eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+47], 1
push	0
push	0
push	32					
lea	edx, DWORD PTR _aWalHdr$5[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN23@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+48]
test	eax, eax
je	SHORT $LN25@sqlite3Wal
cmp	DWORD PTR _sync_flags$[ebp], 0
je	SHORT $LN25@sqlite3Wal
mov	ecx, DWORD PTR _sync_flags$[ebp]
and	ecx, 19					
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN25@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR _w$[ebp], ecx
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _w$[ebp+4], eax
xorpd	xmm0, xmm0
movlpd	QWORD PTR _w$[ebp+8], xmm0
mov	ecx, DWORD PTR _sync_flags$[ebp]
mov	DWORD PTR _w$[ebp+16], ecx
mov	edx, DWORD PTR _szPage$[ebp]
mov	DWORD PTR _w$[ebp+20], edx
mov	ecx, DWORD PTR _iFrame$[ebp]
xor	esi, esi
mov	eax, DWORD PTR _szPage$[ebp]
add	eax, 24					
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
add	eax, 32					
adc	edx, 0
mov	DWORD PTR _iOffset$[ebp], eax
mov	DWORD PTR _iOffset$[ebp+4], edx
mov	edx, DWORD PTR _szPage$[ebp]
add	edx, 24					
mov	DWORD PTR _szFrame$[ebp], edx
mov	eax, DWORD PTR _pList$[ebp]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN20@sqlite3Wal
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN18@sqlite3Wal
mov	eax, DWORD PTR _iFrame$[ebp]
add	eax, 1
mov	DWORD PTR _iFrame$[ebp], eax
cmp	DWORD PTR _isCommit$[ebp], 0
je	SHORT $LN29@sqlite3Wal
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN29@sqlite3Wal
mov	edx, DWORD PTR _nTruncate$[ebp]
mov	DWORD PTR tv191[ebp], edx
jmp	SHORT $LN30@sqlite3Wal
mov	DWORD PTR tv191[ebp], 0
mov	eax, DWORD PTR tv191[ebp]
mov	DWORD PTR _nDbSize$1[ebp], eax
mov	ecx, DWORD PTR _iOffset$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iOffset$[ebp]
push	edx
mov	eax, DWORD PTR _nDbSize$1[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
lea	edx, DWORD PTR _w$[ebp]
push	edx
call	_walWriteOneFrame
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN17@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pLast$[ebp], eax
mov	eax, DWORD PTR _szFrame$[ebp]
cdq
add	eax, DWORD PTR _iOffset$[ebp]
adc	edx, DWORD PTR _iOffset$[ebp+4]
mov	DWORD PTR _iOffset$[ebp], eax
mov	DWORD PTR _iOffset$[ebp+4], edx
jmp	$LN19@sqlite3Wal
cmp	DWORD PTR _isCommit$[ebp], 0
je	$LN16@sqlite3Wal
mov	ecx, DWORD PTR _sync_flags$[ebp]
and	ecx, 32					
je	$LN16@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+49]
test	eax, eax
je	$LN15@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3SectorSize
add	esp, 4
mov	DWORD PTR _sectorSize$4[ebp], eax
mov	eax, DWORD PTR _sectorSize$4[ebp]
cdq
mov	ecx, eax
mov	esi, edx
add	ecx, DWORD PTR _iOffset$[ebp]
adc	esi, DWORD PTR _iOffset$[ebp+4]
sub	ecx, 1
sbb	esi, 0
mov	eax, DWORD PTR _sectorSize$4[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__alldiv
mov	ecx, eax
mov	esi, edx
mov	eax, DWORD PTR _sectorSize$4[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _w$[ebp+8], eax
mov	DWORD PTR _w$[ebp+12], edx
mov	edx, DWORD PTR _iOffset$[ebp+4]
cmp	edx, DWORD PTR _w$[ebp+12]
jg	SHORT $LN13@sqlite3Wal
jl	SHORT $LN31@sqlite3Wal
mov	eax, DWORD PTR _iOffset$[ebp]
cmp	eax, DWORD PTR _w$[ebp+8]
jae	SHORT $LN13@sqlite3Wal
mov	ecx, DWORD PTR _iOffset$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iOffset$[ebp]
push	edx
mov	eax, DWORD PTR _nTruncate$[ebp]
push	eax
mov	ecx, DWORD PTR _pLast$[ebp]
push	ecx
lea	edx, DWORD PTR _w$[ebp]
push	edx
call	_walWriteOneFrame
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@sqlite3Wal
mov	eax, DWORD PTR _szFrame$[ebp]
cdq
add	eax, DWORD PTR _iOffset$[ebp]
adc	edx, DWORD PTR _iOffset$[ebp+4]
mov	DWORD PTR _iOffset$[ebp], eax
mov	DWORD PTR _iOffset$[ebp+4], edx
mov	eax, DWORD PTR _nExtra$[ebp]
add	eax, 1
mov	DWORD PTR _nExtra$[ebp], eax
jmp	SHORT $LN14@sqlite3Wal
jmp	SHORT $LN16@sqlite3Wal
mov	ecx, DWORD PTR _sync_flags$[ebp]
and	ecx, 19					
push	ecx
mov	edx, DWORD PTR _w$[ebp+4]
push	edx
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _isCommit$[ebp], 0
je	$LN10@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+47]
test	ecx, ecx
je	$LN10@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR tv510[ebp], edx
mov	eax, DWORD PTR tv510[ebp]
cmp	DWORD PTR [eax+20], 0
jl	$LN10@sqlite3Wal
jg	SHORT $LN32@sqlite3Wal
mov	ecx, DWORD PTR tv510[ebp]
cmp	DWORD PTR [ecx+16], 0
jb	$LN10@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _sz$3[ebp], eax
mov	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _sz$3[ebp+4], ecx
mov	ecx, DWORD PTR _iFrame$[ebp]
add	ecx, DWORD PTR _nExtra$[ebp]
xor	esi, esi
mov	eax, DWORD PTR _szPage$[ebp]
add	eax, 24					
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
add	eax, 32					
adc	edx, 0
mov	ecx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR tv544[ebp], eax
mov	DWORD PTR tv544[ebp+4], edx
mov	DWORD PTR tv547[ebp], ecx
mov	edx, DWORD PTR tv547[ebp]
mov	eax, DWORD PTR tv544[ebp+4]
cmp	eax, DWORD PTR [edx+20]
jl	SHORT $LN9@sqlite3Wal
jg	SHORT $LN33@sqlite3Wal
mov	ecx, DWORD PTR tv547[ebp]
mov	edx, DWORD PTR tv544[ebp]
cmp	edx, DWORD PTR [ecx+16]
jbe	SHORT $LN9@sqlite3Wal
mov	ecx, DWORD PTR _iFrame$[ebp]
add	ecx, DWORD PTR _nExtra$[ebp]
xor	esi, esi
mov	eax, DWORD PTR _szPage$[ebp]
add	eax, 24					
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
add	eax, 32					
adc	edx, 0
mov	DWORD PTR _sz$3[ebp], eax
mov	DWORD PTR _sz$3[ebp+4], edx
mov	edx, DWORD PTR _sz$3[ebp+4]
push	edx
mov	eax, DWORD PTR _sz$3[ebp]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walLimitSize
add	esp, 12					
mov	edx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [edx+47], 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iFrame$[ebp], ecx
mov	edx, DWORD PTR _pList$[ebp]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN8@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@sqlite3Wal
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Wal
mov	edx, DWORD PTR _iFrame$[ebp]
add	edx, 1
mov	DWORD PTR _iFrame$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _iFrame$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexAppend
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN7@sqlite3Wal
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@sqlite3Wal
cmp	DWORD PTR _nExtra$[ebp], 0
jle	SHORT $LN4@sqlite3Wal
mov	ecx, DWORD PTR _iFrame$[ebp]
add	ecx, 1
mov	DWORD PTR _iFrame$[ebp], ecx
mov	edx, DWORD PTR _nExtra$[ebp]
sub	edx, 1
mov	DWORD PTR _nExtra$[ebp], edx
mov	eax, DWORD PTR _pLast$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _iFrame$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walIndexAppend
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN5@sqlite3Wal
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@sqlite3Wal
mov	ecx, DWORD PTR _szPage$[ebp]
and	ecx, 65280				
mov	edx, DWORD PTR _szPage$[ebp]
sar	edx, 16					
or	ecx, edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	WORD PTR [eax+66], cx
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _iFrame$[ebp]
mov	DWORD PTR [ecx+68], edx
cmp	DWORD PTR _isCommit$[ebp], 0
je	SHORT $LN2@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+60]
add	ecx, 1
mov	edx, DWORD PTR _pWal$[ebp]
mov	DWORD PTR [edx+60], ecx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR _nTruncate$[ebp]
mov	DWORD PTR [eax+72], ecx
cmp	DWORD PTR _isCommit$[ebp], 0
je	SHORT $LN3@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walIndexWriteHdr
add	esp, 4
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR _iFrame$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalSavepointUndo PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	eax, 4
imul	ecx, eax, 3
mov	edx, DWORD PTR _aWalData$[ebp]
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [edx+ecx]
cmp	ecx, DWORD PTR [eax+104]
je	SHORT $LN2@sqlite3Wal
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aWalData$[ebp]
mov	DWORD PTR [ecx+eax], 0
mov	edx, 4
imul	eax, edx, 3
mov	ecx, DWORD PTR _aWalData$[ebp]
mov	edx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [edx+104]
mov	DWORD PTR [ecx+eax], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _aWalData$[ebp]
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [edx+ecx]
cmp	ecx, DWORD PTR [eax+68]
jae	SHORT $LN1@sqlite3Wal
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _aWalData$[ebp]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR [ecx+68], eax
mov	ecx, 4
shl	ecx, 0
mov	edx, 4
imul	eax, edx, 0
mov	edx, DWORD PTR _pWal$[ebp]
mov	esi, DWORD PTR _aWalData$[ebp]
mov	ecx, DWORD PTR [esi+ecx]
mov	DWORD PTR [edx+eax+76], ecx
mov	edx, 4
shl	edx, 1
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pWal$[ebp]
mov	esi, DWORD PTR _aWalData$[ebp]
mov	edx, DWORD PTR [esi+edx]
mov	DWORD PTR [ecx+eax+76], edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walCleanupHash
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalSavepoint PROC
push	ebp
mov	ebp, esp
push	esi
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _aWalData$[ebp]
mov	eax, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [eax+68]
mov	DWORD PTR [edx+ecx], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _aWalData$[ebp]
mov	esi, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [esi+edx+76]
mov	DWORD PTR [ecx+eax], edx
mov	eax, 4
shl	eax, 0
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _aWalData$[ebp]
mov	esi, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [esi+eax+76]
mov	DWORD PTR [edx+ecx], eax
mov	ecx, 4
imul	edx, ecx, 3
mov	eax, DWORD PTR _aWalData$[ebp]
mov	ecx, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [ecx+104]
mov	DWORD PTR [eax+edx], ecx
pop	esi
pop	ebp
ret	0
ENDP
_sqlite3WalUndo PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+44]
test	ecx, ecx
je	$LN5@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _iMax$1[ebp], eax
push	48					
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walIndexHdr
add	esp, 4
push	eax
mov	edx, DWORD PTR _pWal$[ebp]
add	edx, 52					
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	DWORD PTR _iFrame$2[ebp], ecx
jmp	SHORT $LN4@sqlite3Wal
mov	edx, DWORD PTR _iFrame$2[ebp]
add	edx, 1
mov	DWORD PTR _iFrame$2[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Wal
mov	eax, DWORD PTR _iFrame$2[ebp]
cmp	eax, DWORD PTR _iMax$1[ebp]
ja	SHORT $LN2@sqlite3Wal
mov	ecx, DWORD PTR _iFrame$2[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walFramePgno
add	esp, 8
push	eax
mov	eax, DWORD PTR _pUndoCtx$[ebp]
push	eax
call	DWORD PTR _xUndo$[ebp]
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR _iMax$1[ebp]
cmp	edx, DWORD PTR [ecx+68]
je	SHORT $LN5@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walCleanupHash
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalEndWriteTransaction PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+44]
test	ecx, ecx
je	SHORT $LN1@sqlite3Wal
push	1
push	0
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockExclusive
add	esp, 12					
mov	eax, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [eax+44], 0
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+47], 0
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3WalBeginWriteTransaction PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, BYTE PTR [eax+46]
test	ecx, ecx
je	SHORT $LN3@sqlite3Wal
mov	eax, 8
jmp	SHORT $LN4@sqlite3Wal
push	1
push	0
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walLockExclusive
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN4@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [eax+44], 1
push	48					
mov	ecx, DWORD PTR _pWal$[ebp]
push	ecx
call	_walIndexHdr
add	esp, 4
push	eax
mov	edx, DWORD PTR _pWal$[ebp]
add	edx, 52					
push	edx
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Wal
push	1
push	0
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walUnlockExclusive
add	esp, 12					
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+44], 0
mov	DWORD PTR _rc$[ebp], 517		
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalDbsize PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pWal$[ebp], 0
je	SHORT $LN1@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
movsx	ecx, WORD PTR [eax+40]
test	ecx, ecx
jl	SHORT $LN1@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+72]
jmp	SHORT $LN2@sqlite3Wal
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3WalReadFrame PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
mov	eax, DWORD PTR _pWal$[ebp]
movzx	ecx, WORD PTR [eax+66]
mov	DWORD PTR _sz$[ebp], ecx
mov	edx, DWORD PTR _sz$[ebp]
and	edx, 65024				
mov	eax, DWORD PTR _sz$[ebp]
and	eax, 1
shl	eax, 16					
add	edx, eax
mov	DWORD PTR _sz$[ebp], edx
mov	ecx, DWORD PTR _iRead$[ebp]
sub	ecx, 1
xor	esi, esi
mov	eax, DWORD PTR _sz$[ebp]
add	eax, 24					
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
add	eax, 56					
adc	edx, 0
mov	DWORD PTR _iOffset$[ebp], eax
mov	DWORD PTR _iOffset$[ebp+4], edx
mov	edx, DWORD PTR _nOut$[ebp]
cmp	edx, DWORD PTR _sz$[ebp]
jle	SHORT $LN3@sqlite3Wal
mov	eax, DWORD PTR _sz$[ebp]
mov	DWORD PTR tv80[ebp], eax
jmp	SHORT $LN4@sqlite3Wal
mov	ecx, DWORD PTR _nOut$[ebp]
mov	DWORD PTR tv80[ebp], ecx
mov	edx, DWORD PTR _iOffset$[ebp+4]
push	edx
mov	eax, DWORD PTR _iOffset$[ebp]
push	eax
mov	ecx, DWORD PTR tv80[ebp]
push	ecx
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3OsRead
add	esp, 20					
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalFindFrame PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	DWORD PTR _iRead$[ebp], 0
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iLast$[ebp], ecx
cmp	DWORD PTR _iLast$[ebp], 0
je	SHORT $LN10@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
movsx	eax, WORD PTR [edx+40]
test	eax, eax
jne	SHORT $LN11@sqlite3Wal
mov	ecx, DWORD PTR _piRead$[ebp]
mov	DWORD PTR [ecx], 0
xor	eax, eax
jmp	$LN12@sqlite3Wal
mov	edx, DWORD PTR _iLast$[ebp]
push	edx
call	_walFramePage
add	esp, 4
mov	DWORD PTR _iHash$[ebp], eax
jmp	SHORT $LN9@sqlite3Wal
mov	eax, DWORD PTR _iHash$[ebp]
sub	eax, 1
mov	DWORD PTR _iHash$[ebp], eax
cmp	DWORD PTR _iHash$[ebp], 0
jl	$LN7@sqlite3Wal
cmp	DWORD PTR _iRead$[ebp], 0
jne	$LN7@sqlite3Wal
lea	ecx, DWORD PTR _iZero$2[ebp]
push	ecx
lea	edx, DWORD PTR _aPgno$1[ebp]
push	edx
lea	eax, DWORD PTR _aHash$6[ebp]
push	eax
mov	ecx, DWORD PTR _iHash$[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walHashGet
add	esp, 20					
mov	DWORD PTR _rc$4[ebp], eax
cmp	DWORD PTR _rc$4[ebp], 0
je	SHORT $LN6@sqlite3Wal
mov	eax, DWORD PTR _rc$4[ebp]
jmp	$LN12@sqlite3Wal
mov	DWORD PTR _nCollide$5[ebp], 8192	
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
call	_walHash
add	esp, 4
mov	DWORD PTR _iKey$7[ebp], eax
jmp	SHORT $LN5@sqlite3Wal
mov	ecx, DWORD PTR _iKey$7[ebp]
push	ecx
call	_walNextHash
add	esp, 4
mov	DWORD PTR _iKey$7[ebp], eax
mov	edx, DWORD PTR _iKey$7[ebp]
mov	eax, DWORD PTR _aHash$6[ebp]
movzx	ecx, WORD PTR [eax+edx*2]
test	ecx, ecx
je	SHORT $LN3@sqlite3Wal
mov	edx, DWORD PTR _iKey$7[ebp]
mov	eax, DWORD PTR _aHash$6[ebp]
movzx	ecx, WORD PTR [eax+edx*2]
add	ecx, DWORD PTR _iZero$2[ebp]
mov	DWORD PTR _iFrame$3[ebp], ecx
mov	edx, DWORD PTR _iFrame$3[ebp]
cmp	edx, DWORD PTR _iLast$[ebp]
ja	SHORT $LN2@sqlite3Wal
mov	eax, DWORD PTR _iKey$7[ebp]
mov	ecx, DWORD PTR _aHash$6[ebp]
movzx	edx, WORD PTR [ecx+eax*2]
mov	eax, DWORD PTR _aPgno$1[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
cmp	ecx, DWORD PTR _pgno$[ebp]
jne	SHORT $LN2@sqlite3Wal
mov	edx, DWORD PTR _iFrame$3[ebp]
mov	DWORD PTR _iRead$[ebp], edx
mov	eax, DWORD PTR _nCollide$5[ebp]
mov	DWORD PTR tv138[ebp], eax
mov	ecx, DWORD PTR _nCollide$5[ebp]
sub	ecx, 1
mov	DWORD PTR _nCollide$5[ebp], ecx
cmp	DWORD PTR tv138[ebp], 0
jne	SHORT $LN1@sqlite3Wal
push	49462					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN12@sqlite3Wal
jmp	SHORT $LN4@sqlite3Wal
jmp	$LN8@sqlite3Wal
mov	edx, DWORD PTR _piRead$[ebp]
mov	eax, DWORD PTR _iRead$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalEndReadTransaction PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_sqlite3WalEndWriteTransaction
add	esp, 4
mov	ecx, DWORD PTR _pWal$[ebp]
movsx	edx, WORD PTR [ecx+40]
test	edx, edx
jl	SHORT $LN2@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
movsx	ecx, WORD PTR [eax+40]
add	ecx, 3
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walUnlockShared
add	esp, 8
or	eax, -1
mov	ecx, DWORD PTR _pWal$[ebp]
mov	WORD PTR [ecx+40], ax
pop	ebp
ret	0
ENDP
_sqlite3WalBeginReadTransaction PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _cnt$[ebp], 0
mov	eax, DWORD PTR _cnt$[ebp]
add	eax, 1
mov	DWORD PTR _cnt$[ebp], eax
mov	ecx, DWORD PTR _cnt$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pChanged$[ebp]
push	edx
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walTryBeginRead
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], -1
je	SHORT $LN3@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalLimit PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pWal$[ebp], 0
je	SHORT $LN2@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR _iLimit$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _iLimit$[ebp+4]
mov	DWORD PTR [eax+20], edx
pop	ebp
ret	0
ENDP
_sqlite3WalClose PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _pWal$[ebp], 0
je	$LN8@sqlite3Wal
mov	DWORD PTR _isDelete$2[ebp], 0
push	4
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3OsLock
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN7@sqlite3Wal
mov	edx, DWORD PTR _pWal$[ebp]
movzx	eax, BYTE PTR [edx+43]
test	eax, eax
jne	SHORT $LN6@sqlite3Wal
mov	ecx, DWORD PTR _pWal$[ebp]
mov	BYTE PTR [ecx+43], 1
push	0
push	0
mov	edx, DWORD PTR _zBuf$[ebp]
push	edx
mov	eax, DWORD PTR _nBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _sync_flags$[ebp]
push	ecx
push	0
push	0
push	0
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_sqlite3WalCheckpoint
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Wal
mov	DWORD PTR _bPersist$1[ebp], -1
lea	eax, DWORD PTR _bPersist$1[ebp]
push	eax
push	10					
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3OsFileControlHint
add	esp, 12					
cmp	DWORD PTR _bPersist$1[ebp], 1
je	SHORT $LN4@sqlite3Wal
mov	DWORD PTR _isDelete$2[ebp], 1
jmp	SHORT $LN7@sqlite3Wal
mov	eax, DWORD PTR _pWal$[ebp]
mov	DWORD PTR tv153[ebp], eax
mov	ecx, DWORD PTR tv153[ebp]
cmp	DWORD PTR [ecx+20], 0
jl	SHORT $LN7@sqlite3Wal
jg	SHORT $LN11@sqlite3Wal
mov	edx, DWORD PTR tv153[ebp]
cmp	DWORD PTR [edx+16], 0
jb	SHORT $LN7@sqlite3Wal
push	0
push	0
mov	eax, DWORD PTR _pWal$[ebp]
push	eax
call	_walLimitSize
add	esp, 12					
mov	ecx, DWORD PTR _isDelete$2[ebp]
push	ecx
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_walIndexClose
add	esp, 8
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3OsClose
add	esp, 4
cmp	DWORD PTR _isDelete$2[ebp], 0
je	SHORT $LN1@sqlite3Wal
call	_sqlite3BeginBenignMalloc
push	0
mov	edx, DWORD PTR _pWal$[ebp]
mov	eax, DWORD PTR [edx+100]
push	eax
mov	ecx, DWORD PTR _pWal$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3OsDelete
add	esp, 12					
call	_sqlite3EndBenignMalloc
mov	eax, DWORD PTR _pWal$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _pWal$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalOpen PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _ppWal$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR [ecx+4]
add	edx, 112				
push	edx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pRet$[ebp], eax
cmp	DWORD PTR _pRet$[ebp], 0
jne	SHORT $LN6@sqlite3Wal
mov	eax, 7
jmp	$LN7@sqlite3Wal
mov	eax, DWORD PTR _pRet$[ebp]
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, 112				
shl	edx, 0
add	edx, DWORD PTR _pRet$[ebp]
mov	eax, DWORD PTR _pRet$[ebp]
mov	DWORD PTR [eax+8], edx
mov	ecx, DWORD PTR _pRet$[ebp]
mov	edx, DWORD PTR _pDbFd$[ebp]
mov	DWORD PTR [ecx+4], edx
or	eax, -1
mov	ecx, DWORD PTR _pRet$[ebp]
mov	WORD PTR [ecx+40], ax
mov	edx, DWORD PTR _pRet$[ebp]
mov	eax, DWORD PTR _mxWalSize$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _mxWalSize$[ebp+4]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _pRet$[ebp]
mov	eax, DWORD PTR _zWalName$[ebp]
mov	DWORD PTR [edx+100], eax
mov	ecx, DWORD PTR _pRet$[ebp]
mov	BYTE PTR [ecx+48], 1
mov	edx, DWORD PTR _pRet$[ebp]
mov	BYTE PTR [edx+49], 1
cmp	DWORD PTR _bNoShm$[ebp], 0
je	SHORT $LN9@sqlite3Wal
mov	DWORD PTR tv81[ebp], 2
jmp	SHORT $LN10@sqlite3Wal
mov	DWORD PTR tv81[ebp], 0
mov	eax, DWORD PTR _pRet$[ebp]
mov	cl, BYTE PTR tv81[ebp]
mov	BYTE PTR [eax+43], cl
mov	DWORD PTR _flags$[ebp], 524294		
lea	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _pRet$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _zWalName$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Wal
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 1
je	SHORT $LN5@sqlite3Wal
mov	eax, DWORD PTR _pRet$[ebp]
mov	BYTE PTR [eax+46], 1
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Wal
push	0
mov	ecx, DWORD PTR _pRet$[ebp]
push	ecx
call	_walIndexClose
add	esp, 8
mov	edx, DWORD PTR _pRet$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3OsClose
add	esp, 4
mov	ecx, DWORD PTR _pRet$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN3@sqlite3Wal
mov	edx, DWORD PTR _pDbFd$[ebp]
push	edx
call	_sqlite3OsDeviceCharacteristics
add	esp, 4
mov	DWORD PTR _iDC$1[ebp], eax
mov	eax, DWORD PTR _iDC$1[ebp]
and	eax, 1024				
je	SHORT $LN2@sqlite3Wal
mov	ecx, DWORD PTR _pRet$[ebp]
mov	BYTE PTR [ecx+48], 0
mov	edx, DWORD PTR _iDC$1[ebp]
and	edx, 4096				
je	SHORT $LN1@sqlite3Wal
mov	eax, DWORD PTR _pRet$[ebp]
mov	BYTE PTR [eax+49], 0
mov	ecx, DWORD PTR _ppWal$[ebp]
mov	edx, DWORD PTR _pRet$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_rowSetToList PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+26]
and	ecx, 1
jne	SHORT $LN1@rowSetToLi
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_rowSetEntrySort
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+26]
or	eax, 2
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+26], ax
pop	ebp
ret	0
ENDP
_rowSetListToTree PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pList$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pList$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], 0
mov	DWORD PTR _iDepth$[ebp], 1
jmp	SHORT $LN3@rowSetList
mov	edx, DWORD PTR _iDepth$[ebp]
add	edx, 1
mov	DWORD PTR _iDepth$[ebp], edx
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN1@rowSetList
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pLeft$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pList$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pLeft$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _iDepth$[ebp]
push	eax
lea	ecx, DWORD PTR _pList$[ebp]
push	ecx
call	_rowSetNDeepTree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], eax
jmp	SHORT $LN2@rowSetList
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_rowSetNDeepTree PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _ppList$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN3@rowSetNDee
xor	eax, eax
jmp	$LN4@rowSetNDee
cmp	DWORD PTR _iDepth$[ebp], 1
jne	SHORT $LN2@rowSetNDee
mov	ecx, DWORD PTR _ppList$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _ppList$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], 0
mov	eax, DWORD PTR _p$[ebp]
jmp	SHORT $LN4@rowSetNDee
mov	edx, DWORD PTR _iDepth$[ebp]
sub	edx, 1
push	edx
mov	eax, DWORD PTR _ppList$[ebp]
push	eax
call	_rowSetNDeepTree
add	esp, 8
mov	DWORD PTR _pLeft$[ebp], eax
mov	ecx, DWORD PTR _ppList$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@rowSetNDee
mov	eax, DWORD PTR _pLeft$[ebp]
jmp	SHORT $LN4@rowSetNDee
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pLeft$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _ppList$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _iDepth$[ebp]
sub	edx, 1
push	edx
mov	eax, DWORD PTR _ppList$[ebp]
push	eax
call	_rowSetNDeepTree
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_rowSetTreeToList PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pIn$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN4@rowSetTree
lea	ecx, DWORD PTR _p$1[ebp]
push	ecx
mov	edx, DWORD PTR _ppFirst$[ebp]
push	edx
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_rowSetTreeToList
add	esp, 12					
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR _pIn$[ebp]
mov	DWORD PTR [edx+8], eax
jmp	SHORT $LN3@rowSetTree
mov	ecx, DWORD PTR _ppFirst$[ebp]
mov	edx, DWORD PTR _pIn$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pIn$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN2@rowSetTree
mov	ecx, DWORD PTR _ppLast$[ebp]
push	ecx
mov	edx, DWORD PTR _pIn$[ebp]
add	edx, 8
push	edx
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_rowSetTreeToList
add	esp, 12					
jmp	SHORT $LN5@rowSetTree
mov	edx, DWORD PTR _ppLast$[ebp]
mov	eax, DWORD PTR _pIn$[ebp]
mov	DWORD PTR [edx], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_rowSetEntrySort PROC
push	ebp
mov	ebp, esp
sub	esp, 172				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	160					
push	0
lea	eax, DWORD PTR _aBucket$[ebp]
push	eax
call	_memset
add	esp, 12					
cmp	DWORD PTR _pIn$[ebp], 0
je	$LN7@rowSetEntr
mov	ecx, DWORD PTR _pIn$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pNext$[ebp], edx
mov	eax, DWORD PTR _pIn$[ebp]
mov	DWORD PTR [eax+8], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@rowSetEntr
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	DWORD PTR _aBucket$[ebp+edx*4], 0
je	SHORT $LN4@rowSetEntr
mov	eax, DWORD PTR _pIn$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aBucket$[ebp+ecx*4]
push	edx
call	_rowSetEntryMerge
add	esp, 8
mov	DWORD PTR _pIn$[ebp], eax
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _aBucket$[ebp+eax*4], 0
jmp	SHORT $LN5@rowSetEntr
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pIn$[ebp]
mov	DWORD PTR _aBucket$[ebp+ecx*4], edx
mov	eax, DWORD PTR _pNext$[ebp]
mov	DWORD PTR _pIn$[ebp], eax
jmp	$LN8@rowSetEntr
mov	DWORD PTR _pIn$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@rowSetEntr
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 40			
jae	SHORT $LN1@rowSetEntr
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aBucket$[ebp+edx*4]
push	eax
mov	ecx, DWORD PTR _pIn$[ebp]
push	ecx
call	_rowSetEntryMerge
add	esp, 8
mov	DWORD PTR _pIn$[ebp], eax
jmp	SHORT $LN2@rowSetEntr
mov	eax, DWORD PTR _pIn$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_rowSetEntryMerge PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
lea	eax, DWORD PTR _head$[ebp]
mov	DWORD PTR _pTail$[ebp], eax
cmp	DWORD PTR _pA$[ebp], 0
je	$LN7@rowSetEntr
cmp	DWORD PTR _pB$[ebp], 0
je	$LN7@rowSetEntr
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR _pB$[ebp]
mov	DWORD PTR tv85[ebp], ecx
mov	DWORD PTR tv86[ebp], edx
mov	eax, DWORD PTR tv85[ebp]
mov	ecx, DWORD PTR tv86[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
jg	SHORT $LN6@rowSetEntr
jl	SHORT $LN11@rowSetEntr
mov	eax, DWORD PTR tv85[ebp]
mov	ecx, DWORD PTR tv86[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx]
jae	SHORT $LN6@rowSetEntr
mov	eax, DWORD PTR _pTail$[ebp]
mov	ecx, DWORD PTR _pA$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pA$[ebp], eax
mov	ecx, DWORD PTR _pTail$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTail$[ebp], edx
jmp	SHORT $LN5@rowSetEntr
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR _pA$[ebp]
mov	DWORD PTR tv135[ebp], eax
mov	DWORD PTR tv136[ebp], ecx
mov	edx, DWORD PTR tv135[ebp]
mov	eax, DWORD PTR tv136[ebp]
mov	ecx, DWORD PTR [edx+4]
cmp	ecx, DWORD PTR [eax+4]
jg	SHORT $LN4@rowSetEntr
jl	SHORT $LN12@rowSetEntr
mov	edx, DWORD PTR tv135[ebp]
mov	eax, DWORD PTR tv136[ebp]
mov	ecx, DWORD PTR [edx]
cmp	ecx, DWORD PTR [eax]
jae	SHORT $LN4@rowSetEntr
mov	edx, DWORD PTR _pTail$[ebp]
mov	eax, DWORD PTR _pB$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pB$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pB$[ebp], edx
mov	eax, DWORD PTR _pTail$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pTail$[ebp], ecx
jmp	SHORT $LN5@rowSetEntr
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pA$[ebp], eax
jmp	$LN8@rowSetEntr
cmp	DWORD PTR _pA$[ebp], 0
je	SHORT $LN2@rowSetEntr
mov	ecx, DWORD PTR _pTail$[ebp]
mov	edx, DWORD PTR _pA$[ebp]
mov	DWORD PTR [ecx+8], edx
jmp	SHORT $LN1@rowSetEntr
mov	eax, DWORD PTR _pTail$[ebp]
mov	ecx, DWORD PTR _pB$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	eax, DWORD PTR _head$[ebp+8]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_rowSetEntryAlloc PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+24]
test	ecx, ecx
jne	SHORT $LN2@rowSetEntr
push	1016					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$1[ebp], eax
cmp	DWORD PTR _pNew$1[ebp], 0
jne	SHORT $LN1@rowSetEntr
xor	eax, eax
jmp	SHORT $LN3@rowSetEntr
mov	ecx, DWORD PTR _pNew$1[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pNew$1[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pNew$1[ebp]
add	eax, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, 63					
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+24], dx
mov	ecx, DWORD PTR _p$[ebp]
mov	dx, WORD PTR [ecx+24]
sub	dx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+24], dx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR tv86[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
add	ecx, 16					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], ecx
mov	eax, DWORD PTR tv86[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Destroy PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pGroup$[ebp], edx
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
push	0
mov	edx, DWORD PTR _pCache$[ebp]
push	edx
call	_pcache1TruncateUnsafe
add	esp, 8
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [eax+4]
sub	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [ecx+8]
sub	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pGroup$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 10					
mov	ecx, DWORD PTR _pGroup$[ebp]
sub	eax, DWORD PTR [ecx+8]
mov	edx, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _pGroup$[ebp]
push	eax
call	_pcache1EnforceMaxPage
add	esp, 4
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _pCache$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Truncate PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _iLimit$[ebp]
cmp	edx, DWORD PTR [ecx+28]
ja	SHORT $LN1@pcache1Tru
mov	eax, DWORD PTR _iLimit$[ebp]
push	eax
mov	ecx, DWORD PTR _pCache$[ebp]
push	ecx
call	_pcache1TruncateUnsafe
add	esp, 8
mov	edx, DWORD PTR _iLimit$[ebp]
sub	edx, 1
mov	eax, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [eax+28], edx
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Rekey PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	DWORD PTR _pPage$[ebp], ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _iOld$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+40]
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _h$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pp$[ebp], edx
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _pPage$[ebp]
je	SHORT $LN2@pcache1Rek
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR [edx]
add	eax, 16					
mov	DWORD PTR _pp$[ebp], eax
jmp	SHORT $LN3@pcache1Rek
mov	ecx, DWORD PTR _pp$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _iNew$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+40]
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR _iNew$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _h$[ebp]
mov	edx, DWORD PTR [edx+ecx*4]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _h$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _iNew$[ebp]
cmp	edx, DWORD PTR [ecx+28]
jbe	SHORT $LN1@pcache1Rek
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR _iNew$[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Unpin PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	DWORD PTR _pPage$[ebp], ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pGroup$[ebp], eax
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _reuseUnlikely$[ebp], 0
jne	SHORT $LN4@pcache1Unp
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [eax+16]
cmp	edx, DWORD PTR [ecx+4]
jbe	SHORT $LN5@pcache1Unp
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_pcache1RemoveFromHash
add	esp, 4
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_pcache1FreePage
add	esp, 4
jmp	SHORT $LN3@pcache1Unp
mov	edx, DWORD PTR _pGroup$[ebp]
cmp	DWORD PTR [edx+20], 0
je	SHORT $LN2@pcache1Unp
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR [eax+24], edx
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [eax+20], ecx
jmp	SHORT $LN1@pcache1Unp
mov	edx, DWORD PTR _pGroup$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+24], eax
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+32]
add	ecx, 1
mov	edx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [edx+32], ecx
mov	eax, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [eax+12], 0
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Fetch PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	DWORD PTR _pPage$[ebp], 0
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pGroup$[ebp], edx
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [edx+40], 0
jbe	SHORT $LN19@pcache1Fet
mov	ecx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _iKey$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+40]
mov	DWORD PTR _h$1[ebp], edx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _h$1[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pPage$[ebp], edx
jmp	SHORT $LN18@pcache1Fet
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPage$[ebp], ecx
cmp	DWORD PTR _pPage$[ebp], 0
je	SHORT $LN19@pcache1Fet
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+8]
cmp	eax, DWORD PTR _iKey$[ebp]
je	SHORT $LN19@pcache1Fet
jmp	SHORT $LN17@pcache1Fet
cmp	DWORD PTR _pPage$[ebp], 0
je	SHORT $LN15@pcache1Fet
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+12]
test	edx, edx
jne	SHORT $LN14@pcache1Fet
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_pcache1PinPage
add	esp, 4
jmp	$fetch_out$22
cmp	DWORD PTR _createFlag$[ebp], 0
jne	SHORT $LN13@pcache1Fet
jmp	$fetch_out$22
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [ecx+36]
sub	eax, DWORD PTR [edx+32]
mov	DWORD PTR _nPinned$[ebp], eax
cmp	DWORD PTR _createFlag$[ebp], 1
jne	SHORT $LN12@pcache1Fet
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR _nPinned$[ebp]
cmp	edx, DWORD PTR [ecx+12]
jae	SHORT $LN11@pcache1Fet
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR _nPinned$[ebp]
cmp	ecx, DWORD PTR [eax+24]
jae	SHORT $LN11@pcache1Fet
mov	edx, DWORD PTR _pCache$[ebp]
push	edx
call	_pcache1UnderMemoryPressure
add	esp, 4
test	eax, eax
je	SHORT $LN12@pcache1Fet
jmp	$fetch_out$22
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [eax+36]
cmp	edx, DWORD PTR [ecx+40]
jb	SHORT $LN10@pcache1Fet
mov	eax, DWORD PTR _pCache$[ebp]
push	eax
call	_pcache1ResizeHash
add	esp, 4
test	eax, eax
je	SHORT $LN10@pcache1Fet
jmp	$fetch_out$22
mov	ecx, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	$LN9@pcache1Fet
mov	edx, DWORD PTR _pGroup$[ebp]
cmp	DWORD PTR [edx+24], 0
je	$LN9@pcache1Fet
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+36]
add	ecx, 1
mov	edx, DWORD PTR _pCache$[ebp]
cmp	ecx, DWORD PTR [edx+20]
jae	SHORT $LN8@pcache1Fet
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [eax+16]
cmp	edx, DWORD PTR [ecx+4]
jae	SHORT $LN8@pcache1Fet
mov	eax, DWORD PTR _pCache$[ebp]
push	eax
call	_pcache1UnderMemoryPressure
add	esp, 4
test	eax, eax
je	SHORT $LN9@pcache1Fet
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _pPage$[ebp], edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_pcache1RemoveFromHash
add	esp, 4
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_pcache1PinPage
add	esp, 4
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pOther$3[ebp], eax
mov	ecx, DWORD PTR _pOther$3[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _pOther$3[ebp]
add	edx, DWORD PTR [eax+8]
mov	ecx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _pCache$[ebp]
add	eax, DWORD PTR [ecx+8]
cmp	edx, eax
je	SHORT $LN7@pcache1Fet
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_pcache1FreePage
add	esp, 4
mov	DWORD PTR _pPage$[ebp], 0
jmp	SHORT $LN9@pcache1Fet
mov	eax, DWORD PTR _pOther$3[ebp]
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [eax+12]
sub	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR [eax+16]
sub	ecx, edx
mov	edx, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [edx+16], ecx
cmp	DWORD PTR _pPage$[ebp], 0
jne	SHORT $LN5@pcache1Fet
cmp	DWORD PTR _createFlag$[ebp], 1
jne	SHORT $LN4@pcache1Fet
call	_sqlite3BeginBenignMalloc
mov	eax, DWORD PTR _pCache$[ebp]
push	eax
call	_pcache1AllocPage
add	esp, 4
mov	DWORD PTR _pPage$[ebp], eax
cmp	DWORD PTR _createFlag$[ebp], 1
jne	SHORT $LN5@pcache1Fet
call	_sqlite3EndBenignMalloc
cmp	DWORD PTR _pPage$[ebp], 0
je	SHORT $fetch_out$22
mov	ecx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _iKey$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+40]
mov	DWORD PTR _h$2[ebp], edx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+36]
add	eax, 1
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR _iKey$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _h$2[ebp]
mov	edx, DWORD PTR [edx+ecx*4]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+28], 0
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [eax+24], 0
mov	ecx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [ecx+12], 1
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	eax, DWORD PTR _h$2[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+eax*4], ecx
cmp	DWORD PTR _pPage$[ebp], 0
je	SHORT $LN1@pcache1Fet
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _iKey$[ebp]
cmp	eax, DWORD PTR [edx+28]
jbe	SHORT $LN1@pcache1Fet
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _iKey$[ebp]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pPage$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Pagecount PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+36]
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _n$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Shrink PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	ecx, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN2@pcache1Shr
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pGroup$2[ebp], eax
mov	ecx, DWORD PTR _pGroup$2[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _pGroup$2[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _savedMaxPage$1[ebp], ecx
mov	edx, DWORD PTR _pGroup$2[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pGroup$2[ebp]
push	eax
call	_pcache1EnforceMaxPage
add	esp, 4
mov	ecx, DWORD PTR _pGroup$2[ebp]
mov	edx, DWORD PTR _savedMaxPage$1[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pGroup$2[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Cachesize PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pCache$[ebp], eax
mov	ecx, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN2@pcache1Cac
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pGroup$1[ebp], eax
mov	ecx, DWORD PTR _pGroup$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR _nMax$[ebp]
sub	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR _pGroup$1[ebp]
add	ecx, DWORD PTR [edx+4]
mov	eax, DWORD PTR _pGroup$1[ebp]
mov	DWORD PTR [eax+4], ecx
mov	ecx, DWORD PTR _pGroup$1[ebp]
mov	edx, DWORD PTR [ecx+4]
add	edx, 10					
mov	eax, DWORD PTR _pGroup$1[ebp]
sub	edx, DWORD PTR [eax+8]
mov	ecx, DWORD PTR _pGroup$1[ebp]
mov	DWORD PTR [ecx+12], edx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _nMax$[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, DWORD PTR _pCache$[ebp]
imul	eax, DWORD PTR [ecx+20], 9
xor	edx, edx
mov	ecx, 10					
div	ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [edx+24], eax
mov	eax, DWORD PTR _pGroup$1[ebp]
push	eax
call	_pcache1EnforceMaxPage
add	esp, 4
mov	ecx, DWORD PTR _pGroup$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Create PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
cmp	DWORD PTR _sqlite3Config+4, 0
jle	SHORT $LN7@pcache1Cre
mov	DWORD PTR tv65[ebp], 1
jmp	SHORT $LN8@pcache1Cre
mov	DWORD PTR tv65[ebp], 0
mov	eax, DWORD PTR tv65[ebp]
mov	DWORD PTR _separateCache$[ebp], eax
imul	ecx, DWORD PTR _separateCache$[ebp], 28
add	ecx, 48					
mov	DWORD PTR _sz$[ebp], ecx
mov	edx, DWORD PTR _sz$[ebp]
push	edx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pCache$[ebp], eax
cmp	DWORD PTR _pCache$[ebp], 0
je	$LN4@pcache1Cre
cmp	DWORD PTR _separateCache$[ebp], 0
je	SHORT $LN3@pcache1Cre
mov	eax, 48					
shl	eax, 0
add	eax, DWORD PTR _pCache$[ebp]
mov	DWORD PTR _pGroup$[ebp], eax
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [ecx+12], 10			
jmp	SHORT $LN2@pcache1Cre
mov	DWORD PTR _pGroup$[ebp], OFFSET _pcache1_g
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _szPage$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR _szExtra$[ebp]
mov	DWORD PTR [eax+8], ecx
cmp	DWORD PTR _bPurgeable$[ebp], 0
je	SHORT $LN9@pcache1Cre
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN10@pcache1Cre
mov	DWORD PTR tv80[ebp], 0
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR tv80[ebp]
mov	DWORD PTR [edx+12], eax
cmp	DWORD PTR _bPurgeable$[ebp], 0
je	SHORT $LN4@pcache1Cre
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+16], 10			
mov	edx, DWORD PTR _pGroup$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _pCache$[ebp]
add	edx, DWORD PTR [eax+16]
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	edx, DWORD PTR _pGroup$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 10					
mov	ecx, DWORD PTR _pGroup$[ebp]
sub	eax, DWORD PTR [ecx+8]
mov	edx, DWORD PTR _pGroup$[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pCache$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Shutdown PROC
push	ebp
mov	ebp, esp
push	68					
push	0
push	OFFSET _pcache1_g
call	_memset
add	esp, 12					
pop	ebp
ret	0
ENDP
_pcache1Init PROC
push	ebp
mov	ebp, esp
push	68					
push	0
push	OFFSET _pcache1_g
call	_memset
add	esp, 12					
cmp	DWORD PTR _sqlite3Config+4, 0
je	SHORT $LN1@pcache1Ini
push	6
call	_sqlite3_mutex_alloc
add	esp, 4
mov	DWORD PTR _pcache1_g, eax
push	7
call	_sqlite3_mutex_alloc
add	esp, 4
mov	DWORD PTR _pcache1_g+52, eax
mov	DWORD PTR _pcache1_g+12, 10		
mov	DWORD PTR _pcache1_g+28, 1
xor	eax, eax
pop	ebp
ret	0
ENDP
_pcache1TruncateUnsafe PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _h$[ebp], 0
jmp	SHORT $LN8@pcache1Tru
mov	eax, DWORD PTR _h$[ebp]
add	eax, 1
mov	DWORD PTR _h$[ebp], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _h$[ebp]
cmp	edx, DWORD PTR [ecx+40]
jae	SHORT $LN9@pcache1Tru
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR _h$[ebp]
lea	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pp$1[ebp], eax
mov	ecx, DWORD PTR _pp$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pPage$2[ebp], edx
cmp	DWORD PTR _pPage$2[ebp], 0
je	SHORT $LN4@pcache1Tru
mov	eax, DWORD PTR _pPage$2[ebp]
mov	ecx, DWORD PTR [eax+8]
cmp	ecx, DWORD PTR _iLimit$[ebp]
jb	SHORT $LN3@pcache1Tru
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+36]
sub	eax, 1
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pp$1[ebp]
mov	eax, DWORD PTR _pPage$2[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _pPage$2[ebp]
movzx	eax, BYTE PTR [edx+12]
test	eax, eax
jne	SHORT $LN2@pcache1Tru
mov	ecx, DWORD PTR _pPage$2[ebp]
push	ecx
call	_pcache1PinPage
add	esp, 4
mov	edx, DWORD PTR _pPage$2[ebp]
push	edx
call	_pcache1FreePage
add	esp, 4
jmp	SHORT $LN1@pcache1Tru
mov	eax, DWORD PTR _pPage$2[ebp]
add	eax, 16					
mov	DWORD PTR _pp$1[ebp], eax
jmp	SHORT $LN5@pcache1Tru
jmp	$LN7@pcache1Tru
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1EnforceMaxPage PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [eax+16]
cmp	edx, DWORD PTR [ecx+4]
jbe	SHORT $LN3@pcache1Enf
mov	eax, DWORD PTR _pGroup$[ebp]
cmp	DWORD PTR [eax+24], 0
je	SHORT $LN3@pcache1Enf
mov	ecx, DWORD PTR _pGroup$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _p$1[ebp], edx
mov	eax, DWORD PTR _p$1[ebp]
push	eax
call	_pcache1PinPage
add	esp, 4
mov	ecx, DWORD PTR _p$1[ebp]
push	ecx
call	_pcache1RemoveFromHash
add	esp, 4
mov	edx, DWORD PTR _p$1[ebp]
push	edx
call	_pcache1FreePage
add	esp, 4
jmp	SHORT $LN2@pcache1Enf
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1RemoveFromHash PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pCache$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+8]
xor	edx, edx
div	DWORD PTR [ecx+40]
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _h$[ebp]
lea	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pp$[ebp], edx
jmp	SHORT $LN3@pcache1Rem
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 16					
mov	DWORD PTR _pp$[ebp], ecx
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR [edx]
cmp	eax, DWORD PTR _pPage$[ebp]
je	SHORT $LN1@pcache1Rem
jmp	SHORT $LN2@pcache1Rem
mov	ecx, DWORD PTR _pp$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR [edx+16]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+36]
sub	eax, 1
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1PinPage PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pCache$[ebp], ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pGroup$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
cmp	DWORD PTR [ecx+28], 0
je	SHORT $LN4@pcache1Pin
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax+24], edx
jmp	SHORT $LN3@pcache1Pin
mov	eax, DWORD PTR _pGroup$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax+20], edx
mov	eax, DWORD PTR _pPage$[ebp]
cmp	DWORD PTR [eax+24], 0
je	SHORT $LN2@pcache1Pin
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR [edx+28], ecx
jmp	SHORT $LN1@pcache1Pin
mov	edx, DWORD PTR _pGroup$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+24], 0
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [eax+28], 0
mov	ecx, DWORD PTR _pPage$[ebp]
mov	BYTE PTR [ecx+12], 1
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+32]
sub	eax, 1
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+32], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1ResizeHash PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+40]
shl	ecx, 1
mov	DWORD PTR _nNew$[ebp], ecx
cmp	DWORD PTR _nNew$[ebp], 256		
jae	SHORT $LN9@pcache1Res
mov	DWORD PTR _nNew$[ebp], 256		
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+40], 0
je	SHORT $LN8@pcache1Res
call	_sqlite3BeginBenignMalloc
mov	eax, DWORD PTR _nNew$[ebp]
shl	eax, 2
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _apNew$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+40], 0
je	SHORT $LN7@pcache1Res
call	_sqlite3EndBenignMalloc
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _apNew$[ebp], 0
je	$LN6@pcache1Res
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@pcache1Res
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+40]
jae	SHORT $LN3@pcache1Res
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pNext$2[ebp], edx
mov	eax, DWORD PTR _pNext$2[ebp]
mov	DWORD PTR _pPage$3[ebp], eax
cmp	DWORD PTR _pPage$3[ebp], 0
je	SHORT $LN1@pcache1Res
mov	ecx, DWORD PTR _pPage$3[ebp]
mov	eax, DWORD PTR [ecx+8]
xor	edx, edx
div	DWORD PTR _nNew$[ebp]
mov	DWORD PTR _h$1[ebp], edx
mov	edx, DWORD PTR _pPage$3[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pNext$2[ebp], eax
mov	ecx, DWORD PTR _pPage$3[ebp]
mov	edx, DWORD PTR _h$1[ebp]
mov	eax, DWORD PTR _apNew$[ebp]
mov	edx, DWORD PTR [eax+edx*4]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _h$1[ebp]
mov	ecx, DWORD PTR _apNew$[ebp]
mov	edx, DWORD PTR _pPage$3[ebp]
mov	DWORD PTR [ecx+eax*4], edx
jmp	SHORT $LN2@pcache1Res
jmp	SHORT $LN4@pcache1Res
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _apNew$[ebp]
mov	DWORD PTR [edx+44], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _nNew$[ebp]
mov	DWORD PTR [ecx+40], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+44], 0
je	SHORT $LN12@pcache1Res
mov	DWORD PTR tv134[ebp], 0
jmp	SHORT $LN13@pcache1Res
mov	DWORD PTR tv134[ebp], 7
mov	eax, DWORD PTR tv134[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1UnderMemoryPressure PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pcache1_g+36, 0
je	SHORT $LN2@pcache1Und
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pCache$[ebp]
add	ecx, DWORD PTR [edx+8]
cmp	ecx, DWORD PTR _pcache1_g+32
jg	SHORT $LN2@pcache1Und
mov	eax, DWORD PTR _pcache1_g+64
jmp	SHORT $LN3@pcache1Und
jmp	SHORT $LN3@pcache1Und
call	_sqlite3HeapNearlyFull
pop	ebp
ret	0
ENDP
_pcache1FreePage PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@pcache1Fre
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pCache$1[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_pcache1Free
add	esp, 4
mov	ecx, DWORD PTR _pCache$1[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN3@pcache1Fre
mov	edx, DWORD PTR _pCache$1[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+16]
sub	ecx, 1
mov	edx, DWORD PTR _pCache$1[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [eax+16], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1AllocPage PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _p$[ebp], 0
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+8]
lea	ecx, DWORD PTR [ecx+eax+32]
push	ecx
call	_pcache1Alloc
add	esp, 4
mov	DWORD PTR _pPg$[ebp], eax
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _pPg$[ebp]
add	eax, DWORD PTR [edx+4]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _pPg$[ebp], 0
je	SHORT $LN2@pcache1All
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pPg$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, 32					
shl	eax, 0
add	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN1@pcache1All
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+16]
add	edx, 1
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _p$[ebp]
jmp	SHORT $LN3@pcache1All
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Free PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _nFreed$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN3@pcache1Fre
xor	eax, eax
jmp	$LN4@pcache1Fre
mov	eax, DWORD PTR _p$[ebp]
cmp	eax, DWORD PTR _pcache1_g+44
jb	$LN2@pcache1Fre
mov	ecx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR _pcache1_g+48
jae	SHORT $LN2@pcache1Fre
mov	edx, DWORD PTR _pcache1_g+52
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
push	-1
push	1
call	_sqlite3StatusAdd
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pSlot$1[ebp], eax
mov	ecx, DWORD PTR _pSlot$1[ebp]
mov	edx, DWORD PTR _pcache1_g+56
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pSlot$1[ebp]
mov	DWORD PTR _pcache1_g+56, eax
mov	ecx, DWORD PTR _pcache1_g+60
add	ecx, 1
mov	DWORD PTR _pcache1_g+60, ecx
mov	edx, DWORD PTR _pcache1_g+60
cmp	edx, DWORD PTR _pcache1_g+40
jge	SHORT $LN6@pcache1Fre
mov	DWORD PTR tv73[ebp], 1
jmp	SHORT $LN7@pcache1Fre
mov	DWORD PTR tv73[ebp], 0
mov	eax, DWORD PTR tv73[ebp]
mov	DWORD PTR _pcache1_g+64, eax
mov	ecx, DWORD PTR _pcache1_g+52
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN1@pcache1Fre
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3MallocSize
add	esp, 4
mov	DWORD PTR _nFreed$[ebp], eax
mov	eax, DWORD PTR _pcache1_g+52
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _nFreed$[ebp]
neg	ecx
push	ecx
push	2
call	_sqlite3StatusAdd
add	esp, 8
mov	edx, DWORD PTR _pcache1_g+52
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _nFreed$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcache1Alloc PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _p$[ebp], 0
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
push	7
call	_sqlite3StatusSet
add	esp, 8
mov	ecx, DWORD PTR _nByte$[ebp]
cmp	ecx, DWORD PTR _pcache1_g+32
jg	SHORT $LN4@pcache1All
mov	edx, DWORD PTR _pcache1_g+52
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _pcache1_g+56
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@pcache1All
mov	ecx, DWORD PTR _pcache1_g+56
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pcache1_g+56, edx
mov	eax, DWORD PTR _pcache1_g+60
sub	eax, 1
mov	DWORD PTR _pcache1_g+60, eax
mov	ecx, DWORD PTR _pcache1_g+60
cmp	ecx, DWORD PTR _pcache1_g+40
jge	SHORT $LN7@pcache1All
mov	DWORD PTR tv72[ebp], 1
jmp	SHORT $LN8@pcache1All
mov	DWORD PTR tv72[ebp], 0
mov	edx, DWORD PTR tv72[ebp]
mov	DWORD PTR _pcache1_g+64, edx
push	1
push	1
call	_sqlite3StatusAdd
add	esp, 8
mov	eax, DWORD PTR _pcache1_g+52
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN2@pcache1All
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@pcache1All
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3MallocSize
add	esp, 4
mov	DWORD PTR _sz$1[ebp], eax
mov	eax, DWORD PTR _pcache1_g+52
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _sz$1[ebp]
push	ecx
push	2
call	_sqlite3StatusAdd
add	esp, 8
mov	edx, DWORD PTR _pcache1_g+52
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcacheSortDirtyList PROC
push	ebp
mov	ebp, esp
sub	esp, 140				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	128					
push	0
lea	eax, DWORD PTR _a$[ebp]
push	eax
call	_memset
add	esp, 12					
cmp	DWORD PTR _pIn$[ebp], 0
je	$LN10@pcacheSort
mov	ecx, DWORD PTR _pIn$[ebp]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pIn$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN9@pcacheSort
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 31			
jge	SHORT $LN7@pcacheSort
mov	eax, DWORD PTR _i$[ebp]
cmp	DWORD PTR _a$[ebp+eax*4], 0
jne	SHORT $LN6@pcacheSort
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR _a$[ebp+ecx*4], edx
jmp	SHORT $LN7@pcacheSort
jmp	SHORT $LN5@pcacheSort
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _a$[ebp+ecx*4]
push	edx
call	_pcacheMergeDirtyList
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _a$[ebp+eax*4], 0
jmp	SHORT $LN8@pcacheSort
cmp	DWORD PTR _i$[ebp], 31			
jne	SHORT $LN4@pcacheSort
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _a$[ebp+edx*4]
push	eax
call	_pcacheMergeDirtyList
add	esp, 8
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _a$[ebp+ecx*4], eax
jmp	$LN11@pcacheSort
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _a$[ebp+eax]
mov	DWORD PTR _p$[ebp], ecx
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN3@pcacheSort
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 32			
jge	SHORT $LN1@pcacheSort
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _a$[ebp+eax*4]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_pcacheMergeDirtyList
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN2@pcacheSort
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcacheMergeDirtyList PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
lea	eax, DWORD PTR _result$[ebp]
mov	DWORD PTR _pTail$[ebp], eax
cmp	DWORD PTR _pA$[ebp], 0
je	SHORT $LN7@pcacheMerg
cmp	DWORD PTR _pB$[ebp], 0
je	SHORT $LN7@pcacheMerg
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [ecx+20]
cmp	eax, DWORD PTR [edx+20]
jae	SHORT $LN6@pcacheMerg
mov	ecx, DWORD PTR _pTail$[ebp]
mov	edx, DWORD PTR _pA$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pA$[ebp]
mov	DWORD PTR _pTail$[ebp], eax
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pA$[ebp], edx
jmp	SHORT $LN5@pcacheMerg
mov	eax, DWORD PTR _pTail$[ebp]
mov	ecx, DWORD PTR _pB$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pB$[ebp]
mov	DWORD PTR _pTail$[ebp], edx
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pB$[ebp], ecx
jmp	SHORT $LN8@pcacheMerg
cmp	DWORD PTR _pA$[ebp], 0
je	SHORT $LN4@pcacheMerg
mov	edx, DWORD PTR _pTail$[ebp]
mov	eax, DWORD PTR _pA$[ebp]
mov	DWORD PTR [edx+12], eax
jmp	SHORT $LN3@pcacheMerg
cmp	DWORD PTR _pB$[ebp], 0
je	SHORT $LN2@pcacheMerg
mov	ecx, DWORD PTR _pTail$[ebp]
mov	edx, DWORD PTR _pB$[ebp]
mov	DWORD PTR [ecx+12], edx
jmp	SHORT $LN3@pcacheMerg
mov	eax, DWORD PTR _pTail$[ebp]
mov	DWORD PTR [eax+12], 0
mov	eax, DWORD PTR _result$[ebp+12]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_numberOfCachePages PROC
push	ebp
mov	ebp, esp
push	esi
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+16], 0
jl	SHORT $LN2@numberOfCa
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+16]
jmp	SHORT $LN3@numberOfCa
jmp	SHORT $LN3@numberOfCa
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
cdq
push	-1
push	-1024					
push	edx
push	eax
call	__allmul
mov	ecx, eax
mov	esi, edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	edx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [edx+24]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__alldiv
pop	esi
pop	ebp
ret	0
ENDP
_pcacheUnpin PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pCache$[ebp], ecx
mov	edx, DWORD PTR _pCache$[ebp]
movzx	eax, BYTE PTR [edx+28]
test	eax, eax
je	SHORT $LN3@pcacheUnpi
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+20], 1
jne	SHORT $LN1@pcacheUnpi
mov	edx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [edx+44], 0
push	0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
call	DWORD PTR _sqlite3Config+136
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcacheAddToDirtyList PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+32], ecx
mov	edx, DWORD PTR _pPage$[ebp]
cmp	DWORD PTR [edx+32], 0
je	SHORT $LN5@pcacheAddT
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [ecx+36], edx
jmp	SHORT $LN4@pcacheAddT
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+28]
test	ecx, ecx
je	SHORT $LN4@pcacheAddT
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+29], 1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+4], 0
jne	SHORT $LN2@pcacheAddT
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+8], 0
jne	SHORT $LN6@pcacheAddT
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 4
jne	SHORT $LN6@pcacheAddT
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+8], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_pcacheRemoveFromDirtyList PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
cmp	eax, DWORD PTR _pPage$[ebp]
jne	SHORT $LN8@pcacheRemo
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+36]
mov	DWORD PTR _pSynced$1[ebp], edx
cmp	DWORD PTR _pSynced$1[ebp], 0
je	SHORT $LN6@pcacheRemo
mov	eax, DWORD PTR _pSynced$1[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 4
je	SHORT $LN6@pcacheRemo
mov	edx, DWORD PTR _pSynced$1[ebp]
mov	eax, DWORD PTR [edx+36]
mov	DWORD PTR _pSynced$1[ebp], eax
jmp	SHORT $LN7@pcacheRemo
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pSynced$1[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pPage$[ebp]
cmp	DWORD PTR [eax+32], 0
je	SHORT $LN5@pcacheRemo
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR [edx+36], ecx
jmp	SHORT $LN4@pcacheRemo
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pPage$[ebp]
cmp	DWORD PTR [edx+36], 0
je	SHORT $LN3@pcacheRemo
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR [ecx+32], eax
jmp	SHORT $LN2@pcacheRemo
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN2@pcacheRemo
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+28]
test	eax, eax
je	SHORT $LN2@pcacheRemo
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+29], 2
mov	edx, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx+32], 0
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [eax+36], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winGetLastError PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _nBuf$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
call	_winGetLastErrorMsg
add	esp, 12					
pop	ebp
ret	0
ENDP
_winCurrentTime PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
lea	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_winCurrentTimeInt64
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@winCurrent
mov	edx, DWORD PTR _i$[ebp+4]
mov	ecx, DWORD PTR _i$[ebp]
call	__ltod3
divsd	xmm0, QWORD PTR __real@4194997000000000
mov	edx, DWORD PTR _prNow$[ebp]
movsd	QWORD PTR [edx], xmm0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winCurrentTimeInt64 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
lea	eax, DWORD PTR _ft$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 30
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	ecx, DWORD PTR _ft$[ebp+4]
xor	edx, edx
mov	eax, DWORD PTR ?max32BitValue@?1??winCurrentTimeInt64@@9@9+4
push	eax
mov	eax, DWORD PTR ?max32BitValue@?1??winCurrentTimeInt64@@9@9
push	eax
push	edx
push	ecx
call	__allmul
xor	ecx, ecx
add	eax, DWORD PTR _ft$[ebp]
adc	edx, ecx
push	0
push	10000					
push	edx
push	eax
call	__alldiv
add	eax, DWORD PTR ?winFiletimeEpoch@?1??winCurrentTimeInt64@@9@9
adc	edx, DWORD PTR ?winFiletimeEpoch@?1??winCurrentTimeInt64@@9@9+4
mov	ecx, DWORD PTR _piNow$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winSleep PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _microsec$[ebp]
add	eax, 999				
cdq
mov	ecx, 1000				
idiv	ecx
push	eax
call	_sqlite3_win32_sleep
add	esp, 4
mov	eax, DWORD PTR _microsec$[ebp]
add	eax, 999				
cdq
mov	ecx, 1000				
idiv	ecx
imul	eax, eax, 1000
pop	ebp
ret	0
ENDP
_winRandomness PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _n$[ebp], 0
mov	eax, DWORD PTR _nBuf$[ebp]
sub	eax, DWORD PTR _n$[ebp]
cmp	eax, 16					
jb	SHORT $LN4@winRandomn
lea	ecx, DWORD PTR _x$4[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 29
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	16					
lea	edx, DWORD PTR _x$4[ebp]
push	edx
mov	eax, DWORD PTR _zBuf$[ebp]
add	eax, DWORD PTR _n$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 16					
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _nBuf$[ebp]
sub	edx, DWORD PTR _n$[ebp]
cmp	edx, 4
jb	SHORT $LN3@winRandomn
mov	eax, 12					
imul	ecx, eax, 17
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _pid$2[ebp], eax
push	4
lea	eax, DWORD PTR _pid$2[ebp]
push	eax
mov	ecx, DWORD PTR _zBuf$[ebp]
add	ecx, DWORD PTR _n$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _n$[ebp]
add	edx, 4
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _nBuf$[ebp]
sub	eax, DWORD PTR _n$[ebp]
cmp	eax, 4
jb	SHORT $LN2@winRandomn
mov	ecx, 12					
imul	edx, ecx, 33
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _cnt$3[ebp], eax
push	4
lea	ecx, DWORD PTR _cnt$3[ebp]
push	ecx
mov	edx, DWORD PTR _zBuf$[ebp]
add	edx, DWORD PTR _n$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _n$[ebp]
add	eax, 4
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _nBuf$[ebp]
sub	ecx, DWORD PTR _n$[ebp]
cmp	ecx, 8
jb	SHORT $LN1@winRandomn
lea	edx, DWORD PTR _i$1[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 51
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
push	8
lea	eax, DWORD PTR _i$1[ebp]
push	eax
mov	ecx, DWORD PTR _zBuf$[ebp]
add	ecx, DWORD PTR _n$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _n$[ebp]
add	edx, 8
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _n$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winDlClose PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pHandle$[ebp]
push	eax
mov	ecx, 12					
shl	ecx, 4
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
pop	ebp
ret	0
ENDP
_winDlSym PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _zSym$[ebp]
push	eax
mov	ecx, DWORD PTR _pH$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 27
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _proc$[ebp], eax
mov	eax, DWORD PTR _proc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winDlError PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zBufOut$[ebp]
push	eax
mov	ecx, DWORD PTR _nBuf$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
call	_winGetLastErrorMsg
add	esp, 12					
pop	ebp
ret	0
ENDP
_winDlOpen PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_winConvertFromUtf8Filename
add	esp, 4
mov	DWORD PTR _zConverted$[ebp], eax
cmp	DWORD PTR _zConverted$[ebp], 0
jne	SHORT $LN3@winDlOpen
xor	eax, eax
jmp	SHORT $LN4@winDlOpen
call	_osIsNT
test	eax, eax
je	SHORT $LN2@winDlOpen
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 45
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _h$[ebp], eax
jmp	SHORT $LN1@winDlOpen
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 44
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _h$[ebp], eax
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _h$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winFullPathname PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zRelative$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 47					
jne	SHORT $LN13@winFullPat
mov	ecx, DWORD PTR _zRelative$[ebp]
add	ecx, 1
push	ecx
call	_winIsDriveLetterAndColon
add	esp, 4
test	eax, eax
je	SHORT $LN13@winFullPat
mov	edx, DWORD PTR _zRelative$[ebp]
add	edx, 1
mov	DWORD PTR _zRelative$[ebp], edx
cmp	DWORD PTR _sqlite3_data_directory, 0
je	SHORT $LN12@winFullPat
mov	eax, DWORD PTR _zRelative$[ebp]
push	eax
call	_winIsVerbatimPathname
add	esp, 4
test	eax, eax
jne	SHORT $LN12@winFullPat
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR _nFull$[ebp]
cmp	edx, DWORD PTR [ecx+8]
jge	SHORT $LN16@winFullPat
mov	eax, DWORD PTR _nFull$[ebp]
mov	DWORD PTR tv86[ebp], eax
jmp	SHORT $LN17@winFullPat
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR tv86[ebp], edx
mov	eax, DWORD PTR _zRelative$[ebp]
push	eax
push	92					
mov	ecx, DWORD PTR _sqlite3_data_directory
push	ecx
push	OFFSET $SG88628
mov	edx, DWORD PTR _zFull$[ebp]
push	edx
mov	eax, DWORD PTR tv86[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 24					
xor	eax, eax
jmp	$LN14@winFullPat
mov	ecx, DWORD PTR _zRelative$[ebp]
push	ecx
call	_winConvertFromUtf8Filename
add	esp, 4
mov	DWORD PTR _zConverted$[ebp], eax
cmp	DWORD PTR _zConverted$[ebp], 0
jne	SHORT $LN11@winFullPat
mov	eax, 3082				
jmp	$LN14@winFullPat
call	_osIsNT
test	eax, eax
je	$LN10@winFullPat
push	0
push	0
push	0
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 25
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN9@winFullPat
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
push	36752					
mov	ecx, DWORD PTR _zRelative$[ebp]
push	ecx
push	OFFSET $SG88641
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
push	782					
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN14@winFullPat
mov	edx, DWORD PTR _nByte$[ebp]
add	edx, 3
mov	DWORD PTR _nByte$[ebp], edx
mov	eax, DWORD PTR _nByte$[ebp]
shl	eax, 1
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zTemp$2[ebp], eax
cmp	DWORD PTR _zTemp$2[ebp], 0
jne	SHORT $LN8@winFullPat
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN14@winFullPat
push	0
mov	edx, DWORD PTR _zTemp$2[ebp]
push	edx
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 25
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN7@winFullPat
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zTemp$2[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
push	36765					
mov	ecx, DWORD PTR _zRelative$[ebp]
push	ecx
push	OFFSET $SG88652
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
push	782					
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN14@winFullPat
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zTemp$2[ebp]
push	eax
call	_winUnicodeToUtf8
add	esp, 4
mov	DWORD PTR _zOut$[ebp], eax
mov	ecx, DWORD PTR _zTemp$2[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
jmp	$LN6@winFullPat
push	0
push	0
push	0
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 24
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN5@winFullPat
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
push	36778					
mov	ecx, DWORD PTR _zRelative$[ebp]
push	ecx
push	OFFSET $SG88664
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
push	782					
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN14@winFullPat
mov	edx, DWORD PTR _nByte$[ebp]
add	edx, 3
mov	DWORD PTR _nByte$[ebp], edx
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zTemp$1[ebp], eax
cmp	DWORD PTR _zTemp$1[ebp], 0
jne	SHORT $LN4@winFullPat
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN14@winFullPat
push	0
mov	edx, DWORD PTR _zTemp$1[ebp]
push	edx
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 24
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN3@winFullPat
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zTemp$1[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
push	36791					
mov	ecx, DWORD PTR _zRelative$[ebp]
push	ecx
push	OFFSET $SG88675
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
push	782					
call	_winLogErrorAtLine
add	esp, 20					
jmp	SHORT $LN14@winFullPat
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zTemp$1[ebp]
push	eax
call	_sqlite3_win32_mbcs_to_utf8
add	esp, 4
mov	DWORD PTR _zOut$[ebp], eax
mov	ecx, DWORD PTR _zTemp$1[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _zOut$[ebp], 0
je	SHORT $LN2@winFullPat
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR _nFull$[ebp]
cmp	eax, DWORD PTR [edx+8]
jge	SHORT $LN18@winFullPat
mov	ecx, DWORD PTR _nFull$[ebp]
mov	DWORD PTR tv233[ebp], ecx
jmp	SHORT $LN19@winFullPat
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR tv233[ebp], eax
mov	ecx, DWORD PTR _zOut$[ebp]
push	ecx
push	OFFSET $SG88677
mov	edx, DWORD PTR _zFull$[ebp]
push	edx
mov	eax, DWORD PTR tv233[ebp]
push	eax
call	_sqlite3_snprintf
add	esp, 16					
mov	ecx, DWORD PTR _zOut$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
xor	eax, eax
jmp	SHORT $LN14@winFullPat
jmp	SHORT $LN14@winFullPat
mov	eax, 3082				
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winIsVerbatimPathname PROC
push	ebp
mov	ebp, esp
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zPathname$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 47					
je	SHORT $LN2@winIsVerba
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zPathname$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 92					
jne	SHORT $LN3@winIsVerba
mov	eax, 1
jmp	SHORT $LN4@winIsVerba
mov	edx, DWORD PTR _zPathname$[ebp]
push	edx
call	_winIsDriveLetterAndColon
add	esp, 4
test	eax, eax
je	SHORT $LN1@winIsVerba
mov	eax, 1
jmp	SHORT $LN4@winIsVerba
xor	eax, eax
pop	ebp
ret	0
ENDP
_winAccess PROC
push	ebp
mov	ebp, esp
sub	esp, 72					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _lastErrno$[ebp], 0
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_winConvertFromUtf8Filename
add	esp, 4
mov	DWORD PTR _zConverted$[ebp], eax
cmp	DWORD PTR _zConverted$[ebp], 0
jne	SHORT $LN16@winAccess
mov	eax, 3082				
jmp	$LN17@winAccess
call	_osIsNT
test	eax, eax
je	$LN15@winAccess
mov	DWORD PTR _cnt$1[ebp], 0
push	36					
push	0
lea	ecx, DWORD PTR _sAttrData$2[ebp]
push	ecx
call	_memset
add	esp, 12					
lea	edx, DWORD PTR _sAttrData$2[ebp]
push	edx
push	0
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 22
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN13@winAccess
lea	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
lea	edx, DWORD PTR _cnt$1[ebp]
push	edx
call	_winRetryIoerr
add	esp, 8
test	eax, eax
je	SHORT $LN13@winAccess
jmp	SHORT $LN14@winAccess
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@winAccess
cmp	DWORD PTR _flags$[ebp], 0
jne	SHORT $LN11@winAccess
cmp	DWORD PTR _sAttrData$2[ebp+28], 0
jne	SHORT $LN11@winAccess
cmp	DWORD PTR _sAttrData$2[ebp+32], 0
jne	SHORT $LN11@winAccess
mov	DWORD PTR _attr$[ebp], -1
jmp	SHORT $LN10@winAccess
mov	eax, DWORD PTR _sAttrData$2[ebp]
mov	DWORD PTR _attr$[ebp], eax
jmp	SHORT $LN9@winAccess
mov	ecx, DWORD PTR _cnt$1[ebp]
push	ecx
call	_winLogIoerr
add	esp, 4
cmp	DWORD PTR _lastErrno$[ebp], 2
je	SHORT $LN8@winAccess
cmp	DWORD PTR _lastErrno$[ebp], 3
je	SHORT $LN8@winAccess
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
push	36548					
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
push	OFFSET $SG88585
mov	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
push	3338					
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN17@winAccess
jmp	SHORT $LN9@winAccess
mov	DWORD PTR _attr$[ebp], -1
jmp	SHORT $LN6@winAccess
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 20
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _attr$[ebp], eax
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _flags$[ebp]
mov	DWORD PTR tv136[ebp], ecx
cmp	DWORD PTR tv136[ebp], 0
je	SHORT $LN3@winAccess
cmp	DWORD PTR tv136[ebp], 1
je	SHORT $LN2@winAccess
cmp	DWORD PTR tv136[ebp], 2
je	SHORT $LN3@winAccess
jmp	SHORT $LN4@winAccess
cmp	DWORD PTR _attr$[ebp], -1
je	SHORT $LN19@winAccess
mov	DWORD PTR tv138[ebp], 1
jmp	SHORT $LN20@winAccess
mov	DWORD PTR tv138[ebp], 0
mov	edx, DWORD PTR tv138[ebp]
mov	DWORD PTR _rc$[ebp], edx
jmp	SHORT $LN4@winAccess
cmp	DWORD PTR _attr$[ebp], -1
je	SHORT $LN21@winAccess
mov	eax, DWORD PTR _attr$[ebp]
and	eax, 1
jne	SHORT $LN21@winAccess
mov	DWORD PTR tv142[ebp], 1
jmp	SHORT $LN22@winAccess
mov	DWORD PTR tv142[ebp], 0
mov	ecx, DWORD PTR tv142[ebp]
mov	DWORD PTR _rc$[ebp], ecx
mov	edx, DWORD PTR _pResOut$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winMakeEndInDirSep PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _zBuf$[ebp], 0
je	SHORT $LN6@winMakeEnd
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nLen$1[ebp], eax
cmp	DWORD PTR _nLen$1[ebp], 0
jle	SHORT $LN6@winMakeEnd
mov	ecx, DWORD PTR _zBuf$[ebp]
add	ecx, DWORD PTR _nLen$1[ebp]
movsx	edx, BYTE PTR [ecx-1]
cmp	edx, 47					
je	SHORT $LN3@winMakeEnd
mov	eax, DWORD PTR _zBuf$[ebp]
add	eax, DWORD PTR _nLen$1[ebp]
movsx	ecx, BYTE PTR [eax-1]
cmp	ecx, 92					
jne	SHORT $LN4@winMakeEnd
mov	eax, 1
jmp	SHORT $LN7@winMakeEnd
jmp	SHORT $LN6@winMakeEnd
mov	edx, DWORD PTR _nLen$1[ebp]
add	edx, 1
cmp	edx, DWORD PTR _nBuf$[ebp]
jge	SHORT $LN6@winMakeEnd
mov	eax, DWORD PTR _zBuf$[ebp]
add	eax, DWORD PTR _nLen$1[ebp]
mov	BYTE PTR [eax], 92			
mov	ecx, DWORD PTR _zBuf$[ebp]
add	ecx, DWORD PTR _nLen$1[ebp]
mov	BYTE PTR [ecx+1], 0
mov	eax, 1
jmp	SHORT $LN7@winMakeEnd
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winConvertFromUtf8Filename PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _zConverted$[ebp], 0
call	_osIsNT
test	eax, eax
je	SHORT $LN2@winConvert
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_winUtf8ToUnicode
add	esp, 4
mov	DWORD PTR _zConverted$[ebp], eax
jmp	SHORT $LN1@winConvert
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
call	_sqlite3_win32_utf8_to_mbcs
add	esp, 4
mov	DWORD PTR _zConverted$[ebp], eax
mov	eax, DWORD PTR _zConverted$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUnfetch PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _fd$[ebp]
mov	DWORD PTR _pFd$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@winUnfetch
mov	ecx, DWORD PTR _pFd$[ebp]
mov	edx, DWORD PTR [ecx+36]
sub	edx, 1
mov	eax, DWORD PTR _pFd$[ebp]
mov	DWORD PTR [eax+36], edx
jmp	SHORT $LN1@winUnfetch
mov	ecx, DWORD PTR _pFd$[ebp]
push	ecx
call	_winUnmapfile
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winFetch PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _fd$[ebp]
mov	DWORD PTR _pFd$[ebp], eax
mov	ecx, DWORD PTR _pp$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR tv89[ebp], edx
mov	eax, DWORD PTR tv89[ebp]
cmp	DWORD PTR [eax+68], 0
jl	$LN4@winFetch
jg	SHORT $LN7@winFetch
mov	ecx, DWORD PTR tv89[ebp]
cmp	DWORD PTR [ecx+64], 0
jbe	$LN4@winFetch
mov	edx, DWORD PTR _pFd$[ebp]
cmp	DWORD PTR [edx+44], 0
jne	SHORT $LN3@winFetch
push	-1
push	-1
mov	eax, DWORD PTR _pFd$[ebp]
push	eax
call	_winMapfile
add	esp, 12					
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN3@winFetch
mov	eax, DWORD PTR _rc$1[ebp]
jmp	SHORT $LN5@winFetch
mov	eax, DWORD PTR _nAmt$[ebp]
cdq
add	eax, DWORD PTR _iOff$[ebp]
adc	edx, DWORD PTR _iOff$[ebp+4]
mov	ecx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR tv142[ebp], ecx
mov	DWORD PTR tv143[ebp], eax
mov	DWORD PTR tv143[ebp+4], edx
mov	edx, DWORD PTR tv142[ebp]
mov	eax, DWORD PTR [edx+52]
cmp	eax, DWORD PTR tv143[ebp+4]
jl	SHORT $LN4@winFetch
jg	SHORT $LN8@winFetch
mov	ecx, DWORD PTR tv142[ebp]
mov	edx, DWORD PTR [ecx+48]
cmp	edx, DWORD PTR tv143[ebp]
jb	SHORT $LN4@winFetch
push	0
push	1
mov	eax, DWORD PTR _iOff$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iOff$[ebp]
push	ecx
call	__allmul
mov	edx, DWORD PTR _pFd$[ebp]
add	eax, DWORD PTR [edx+44]
mov	ecx, DWORD PTR _pp$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pFd$[ebp]
mov	eax, DWORD PTR [edx+36]
add	eax, 1
mov	ecx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR [ecx+36], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winShmMap PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	eax, DWORD PTR _fd$[ebp]
mov	DWORD PTR _pDbFd$[ebp], eax
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _p$[ebp], edx
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN15@winShmMap
mov	eax, DWORD PTR _pDbFd$[ebp]
push	eax
call	_winOpenSharedMemory
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@winShmMap
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@winShmMap
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pShmNode$[ebp], ecx
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+84]
cmp	edx, DWORD PTR _iRegion$[ebp]
jg	$shmpage_out$19
mov	eax, DWORD PTR _iRegion$[ebp]
add	eax, 1
imul	eax, DWORD PTR _szRegion$[ebp]
mov	DWORD PTR _nByte$9[ebp], eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR _szRegion$[ebp]
mov	DWORD PTR [ecx+80], edx
lea	eax, DWORD PTR _sz$1[ebp]
push	eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
add	ecx, 8
push	ecx
call	_winFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@winShmMap
push	35417					
mov	edx, DWORD PTR _pDbFd$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG88131
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
push	eax
push	4874					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	$shmpage_out$19
mov	eax, DWORD PTR _nByte$9[ebp]
cdq
mov	DWORD PTR tv265[ebp], eax
mov	DWORD PTR tv265[ebp+4], edx
mov	ecx, DWORD PTR _sz$1[ebp+4]
cmp	ecx, DWORD PTR tv265[ebp+4]
jg	SHORT $LN11@winShmMap
jl	SHORT $LN18@winShmMap
mov	edx, DWORD PTR _sz$1[ebp]
cmp	edx, DWORD PTR tv265[ebp]
jae	SHORT $LN11@winShmMap
cmp	DWORD PTR _isWrite$[ebp], 0
jne	SHORT $LN10@winShmMap
jmp	$shmpage_out$19
mov	eax, DWORD PTR _nByte$9[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _pShmNode$[ebp]
add	eax, 8
push	eax
call	_winTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@winShmMap
push	35432					
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	OFFSET $SG88139
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
push	eax
push	4874					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	$shmpage_out$19
mov	eax, DWORD PTR _iRegion$[ebp]
lea	ecx, DWORD PTR [eax*8+8]
push	ecx
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx+88]
push	eax
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _apNew$7[ebp], eax
cmp	DWORD PTR _apNew$7[ebp], 0
jne	SHORT $LN8@winShmMap
mov	DWORD PTR _rc$[ebp], 3082		
jmp	$shmpage_out$19
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR _apNew$7[ebp]
mov	DWORD PTR [ecx+88], edx
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR [eax+84]
cmp	ecx, DWORD PTR _iRegion$[ebp]
jg	$shmpage_out$19
mov	DWORD PTR _hMap$10[ebp], 0
mov	DWORD PTR _pMap$8[ebp], 0
push	0
mov	edx, DWORD PTR _nByte$9[ebp]
push	edx
push	0
push	4
push	0
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, 12					
imul	eax, edx, 7
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _hMap$10[ebp], eax
cmp	DWORD PTR _hMap$10[ebp], 0
je	SHORT $LN5@winShmMap
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx+84]
imul	eax, DWORD PTR _szRegion$[ebp]
mov	DWORD PTR _iOffset$6[ebp], eax
mov	eax, DWORD PTR _iOffset$6[ebp]
xor	edx, edx
div	DWORD PTR _winSysInfo+28
mov	DWORD PTR _iOffsetShift$5[ebp], edx
mov	ecx, DWORD PTR _szRegion$[ebp]
add	ecx, DWORD PTR _iOffsetShift$5[ebp]
push	ecx
mov	edx, DWORD PTR _iOffset$6[ebp]
sub	edx, DWORD PTR _iOffsetShift$5[ebp]
push	edx
push	0
push	6
mov	eax, DWORD PTR _hMap$10[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 49
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _pMap$8[ebp], eax
cmp	DWORD PTR _pMap$8[ebp], 0
jne	SHORT $LN4@winShmMap
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR [ecx+92], eax
push	35486					
mov	edx, DWORD PTR _pDbFd$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG88169
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+92]
push	edx
push	5386					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _hMap$10[ebp], 0
je	SHORT $LN3@winShmMap
mov	eax, DWORD PTR _hMap$10[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 3
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
jmp	SHORT $shmpage_out$19
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+84]
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	eax, DWORD PTR _pMap$8[ebp]
mov	DWORD PTR [ecx+edx*8+4], eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+84]
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	eax, DWORD PTR _hMap$10[ebp]
mov	DWORD PTR [ecx+edx*8], eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+84]
add	edx, 1
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR [eax+84], edx
jmp	$LN7@winShmMap
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+84]
cmp	edx, DWORD PTR _iRegion$[ebp]
jle	SHORT $LN2@winShmMap
mov	eax, DWORD PTR _iRegion$[ebp]
imul	eax, DWORD PTR _szRegion$[ebp]
mov	DWORD PTR _iOffset$4[ebp], eax
mov	eax, DWORD PTR _iOffset$4[ebp]
xor	edx, edx
div	DWORD PTR _winSysInfo+28
mov	DWORD PTR _iOffsetShift$2[ebp], edx
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+88]
mov	eax, DWORD PTR _iRegion$[ebp]
mov	ecx, DWORD PTR [edx+eax*8+4]
mov	DWORD PTR _p$3[ebp], ecx
mov	edx, DWORD PTR _p$3[ebp]
add	edx, DWORD PTR _iOffsetShift$2[ebp]
mov	eax, DWORD PTR _pp$[ebp]
mov	DWORD PTR [eax], edx
jmp	SHORT $LN1@winShmMap
mov	ecx, DWORD PTR _pp$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winShmBarrier PROC
push	ebp
mov	ebp, esp
call	_winShmEnterMutex
call	_winShmLeaveMutex
pop	ebp
ret	0
ENDP
_winShmLock PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _fd$[ebp]
mov	DWORD PTR _pDbFd$[ebp], eax
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pShmNode$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, DWORD PTR _ofst$[ebp]
add	ecx, DWORD PTR _n$[ebp]
mov	edx, 1
shl	edx, cl
mov	eax, 1
mov	ecx, DWORD PTR _ofst$[ebp]
shl	eax, cl
sub	edx, eax
mov	WORD PTR _mask$[ebp], dx
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 1
je	$LN26@winShmLock
xor	ecx, ecx
mov	WORD PTR _allMask$2[ebp], cx
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx+100]
mov	DWORD PTR _pX$[ebp], eax
jmp	SHORT $LN25@winShmLock
mov	ecx, DWORD PTR _pX$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pX$[ebp], edx
cmp	DWORD PTR _pX$[ebp], 0
je	SHORT $LN23@winShmLock
mov	eax, DWORD PTR _pX$[ebp]
cmp	eax, DWORD PTR _p$[ebp]
jne	SHORT $LN22@winShmLock
jmp	SHORT $LN24@winShmLock
mov	ecx, DWORD PTR _pX$[ebp]
movzx	edx, WORD PTR [ecx+10]
movzx	eax, WORD PTR _allMask$2[ebp]
or	eax, edx
mov	WORD PTR _allMask$2[ebp], ax
jmp	SHORT $LN24@winShmLock
movzx	ecx, WORD PTR _mask$[ebp]
movzx	edx, WORD PTR _allMask$2[ebp]
and	ecx, edx
jne	SHORT $LN21@winShmLock
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _ofst$[ebp]
add	ecx, 120				
push	ecx
push	1
mov	edx, DWORD PTR _pShmNode$[ebp]
push	edx
call	_winShmSystemLock
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN20@winShmLock
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN19@winShmLock
movzx	eax, WORD PTR _mask$[ebp]
not	eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+12]
and	edx, eax
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+12], dx
movzx	ecx, WORD PTR _mask$[ebp]
not	ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+10]
and	eax, ecx
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+10], ax
jmp	$LN18@winShmLock
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 4
je	$LN17@winShmLock
xor	eax, eax
mov	WORD PTR _allShared$1[ebp], ax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+100]
mov	DWORD PTR _pX$[ebp], edx
jmp	SHORT $LN16@winShmLock
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pX$[ebp], ecx
cmp	DWORD PTR _pX$[ebp], 0
je	SHORT $LN14@winShmLock
mov	edx, DWORD PTR _pX$[ebp]
movzx	eax, WORD PTR [edx+12]
movzx	ecx, WORD PTR _mask$[ebp]
and	eax, ecx
je	SHORT $LN13@winShmLock
mov	DWORD PTR _rc$[ebp], 5
jmp	SHORT $LN14@winShmLock
mov	edx, DWORD PTR _pX$[ebp]
movzx	eax, WORD PTR [edx+10]
movzx	ecx, WORD PTR _allShared$1[ebp]
or	ecx, eax
mov	WORD PTR _allShared$1[ebp], cx
jmp	SHORT $LN15@winShmLock
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN12@winShmLock
movzx	edx, WORD PTR _allShared$1[ebp]
movzx	eax, WORD PTR _mask$[ebp]
and	edx, eax
jne	SHORT $LN11@winShmLock
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _ofst$[ebp]
add	edx, 120				
push	edx
push	2
mov	eax, DWORD PTR _pShmNode$[ebp]
push	eax
call	_winShmSystemLock
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN12@winShmLock
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN9@winShmLock
movzx	ecx, WORD PTR _mask$[ebp]
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+10]
or	eax, ecx
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+10], ax
jmp	SHORT $LN18@winShmLock
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx+100]
mov	DWORD PTR _pX$[ebp], eax
jmp	SHORT $LN7@winShmLock
mov	ecx, DWORD PTR _pX$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pX$[ebp], edx
cmp	DWORD PTR _pX$[ebp], 0
je	SHORT $LN5@winShmLock
mov	eax, DWORD PTR _pX$[ebp]
movzx	ecx, WORD PTR [eax+12]
movzx	edx, WORD PTR _mask$[ebp]
and	ecx, edx
jne	SHORT $LN3@winShmLock
mov	eax, DWORD PTR _pX$[ebp]
movzx	ecx, WORD PTR [eax+10]
movzx	edx, WORD PTR _mask$[ebp]
and	ecx, edx
je	SHORT $LN4@winShmLock
mov	DWORD PTR _rc$[ebp], 5
jmp	SHORT $LN5@winShmLock
jmp	SHORT $LN6@winShmLock
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN18@winShmLock
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _ofst$[ebp]
add	ecx, 120				
push	ecx
push	3
mov	edx, DWORD PTR _pShmNode$[ebp]
push	edx
call	_winShmSystemLock
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN18@winShmLock
movzx	eax, WORD PTR _mask$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+12]
or	edx, eax
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+12], dx
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winShmUnmap PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _fd$[ebp]
mov	DWORD PTR _pDbFd$[ebp], eax
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN5@winShmUnma
xor	eax, eax
jmp	$LN6@winShmUnma
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pShmNode$[ebp], ecx
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pShmNode$[ebp]
add	ecx, 100				
mov	DWORD PTR _pp$[ebp], ecx
jmp	SHORT $LN4@winShmUnma
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR [edx]
add	eax, 4
mov	DWORD PTR _pp$[ebp], eax
mov	ecx, DWORD PTR _pp$[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _p$[ebp]
je	SHORT $LN2@winShmUnma
jmp	SHORT $LN3@winShmUnma
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	DWORD PTR [ecx+24], 0
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
call	_winShmEnterMutex
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+96]
sub	edx, 1
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR [eax+96], edx
mov	ecx, DWORD PTR _pShmNode$[ebp]
cmp	DWORD PTR [ecx+96], 0
jne	SHORT $LN1@winShmUnma
mov	edx, DWORD PTR _deleteFlag$[ebp]
push	edx
mov	eax, DWORD PTR _pDbFd$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_winShmPurge
add	esp, 8
call	_winShmLeaveMutex
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winOpenSharedMemory PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _pShmNode$[ebp], 0
push	16					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN14@winOpenSha
mov	eax, 3082				
jmp	$LN15@winOpenSha
mov	eax, DWORD PTR _pDbFd$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	edx, DWORD PTR _nName$[ebp]
add	edx, 129				
push	edx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN13@winOpenSha
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN15@winOpenSha
mov	ecx, 112				
shl	ecx, 0
add	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pDbFd$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	OFFSET $SG88006
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _nName$[ebp]
add	ecx, 15					
push	ecx
call	_sqlite3_snprintf
add	esp, 16					
call	_winShmEnterMutex
mov	edx, DWORD PTR _winShmNodeList
mov	DWORD PTR _pShmNode$[ebp], edx
jmp	SHORT $LN12@winOpenSha
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR [eax+104]
mov	DWORD PTR _pShmNode$[ebp], ecx
cmp	DWORD PTR _pShmNode$[ebp], 0
je	SHORT $LN10@winOpenSha
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN9@winOpenSha
jmp	SHORT $LN10@winOpenSha
jmp	SHORT $LN11@winOpenSha
cmp	DWORD PTR _pShmNode$[ebp], 0
je	SHORT $LN8@winOpenSha
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	$LN7@winOpenSha
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR _pShmNode$[ebp], ecx
mov	DWORD PTR _pNew$[ebp], 0
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR [edx+16], -1
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR _winShmNodeList
mov	DWORD PTR [eax+104], ecx
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR _winShmNodeList, edx
push	0
call	_sqlite3_mutex_alloc
add	esp, 4
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pShmNode$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $LN6@winOpenSha
mov	DWORD PTR _rc$[ebp], 3082		
jmp	$shm_open_err$17
push	0
push	524294					
mov	eax, DWORD PTR _pShmNode$[ebp]
add	eax, 8
push	eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pDbFd$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_winOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@winOpenSha
jmp	$shm_open_err$17
push	1
push	128					
push	3
mov	edx, DWORD PTR _pShmNode$[ebp]
push	edx
call	_winShmSystemLock
add	esp, 16					
test	eax, eax
jne	SHORT $LN4@winOpenSha
push	0
push	0
mov	eax, DWORD PTR _pShmNode$[ebp]
add	eax, 8
push	eax
call	_winTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@winOpenSha
push	35157					
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	OFFSET $SG88025
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
push	eax
push	4618					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@winOpenSha
push	1
push	128					
push	1
mov	eax, DWORD PTR _pShmNode$[ebp]
push	eax
call	_winShmSystemLock
add	esp, 16					
push	1
push	128					
push	2
mov	ecx, DWORD PTR _pShmNode$[ebp]
push	ecx
call	_winShmSystemLock
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@winOpenSha
jmp	SHORT $shm_open_err$17
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx+96]
add	edx, 1
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	DWORD PTR [eax+96], edx
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], edx
call	_winShmLeaveMutex
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pShmNode$[ebp]
mov	ecx, DWORD PTR [eax+100]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pShmNode$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+100], eax
mov	ecx, DWORD PTR _pShmNode$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
jmp	SHORT $LN15@winOpenSha
push	1
push	128					
push	1
mov	eax, DWORD PTR _pShmNode$[ebp]
push	eax
call	_winShmSystemLock
add	esp, 16					
push	0
mov	ecx, DWORD PTR _pDbFd$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_winShmPurge
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
call	_winShmLeaveMutex
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winShmPurge PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _pp$[ebp], OFFSET _winShmNodeList
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	$LN11@winShmPurg
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+96], 0
jne	$LN8@winShmPurg
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN7@winShmPurg
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_mutex_free
add	esp, 4
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN6@winShmPurg
mov	eax, DWORD PTR _i$2[ebp]
add	eax, 1
mov	DWORD PTR _i$2[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _i$2[ebp]
cmp	edx, DWORD PTR [ecx+84]
jge	SHORT $LN4@winShmPurg
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	edx, DWORD PTR _i$2[ebp]
mov	eax, DWORD PTR [ecx+edx*8+4]
push	eax
mov	ecx, 12					
imul	edx, ecx, 59
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _bRc$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
mov	eax, DWORD PTR _i$2[ebp]
mov	ecx, DWORD PTR [edx+eax*8]
push	ecx
mov	edx, 12					
imul	eax, edx, 3
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _bRc$1[ebp], eax
jmp	SHORT $LN5@winShmPurg
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN3@winShmPurg
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+16], -1
je	SHORT $LN3@winShmPurg
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 8
push	ecx
call	_winClose
add	esp, 4
cmp	DWORD PTR _deleteFlag$[ebp], 0
je	SHORT $LN2@winShmPurg
call	_sqlite3BeginBenignMalloc
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_winDelete
add	esp, 12					
call	_sqlite3EndBenignMalloc
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+104]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN1@winShmPurg
mov	edx, DWORD PTR _p$[ebp]
add	edx, 104				
mov	DWORD PTR _pp$[ebp], edx
jmp	$LN10@winShmPurg
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _cnt$[ebp], 0
mov	DWORD PTR _lastErrno$[ebp], 0
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_winConvertFromUtf8Filename
add	esp, 4
mov	DWORD PTR _zConverted$[ebp], eax
cmp	DWORD PTR _zConverted$[ebp], 0
jne	SHORT $LN25@winDelete
mov	eax, 3082				
jmp	$LN26@winDelete
call	_osIsNT
test	eax, eax
je	$LN12@winDelete
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 21
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _attr$[ebp], eax
cmp	DWORD PTR _attr$[ebp], -1
jne	SHORT $LN20@winDelete
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _lastErrno$[ebp], 2
je	SHORT $LN18@winDelete
cmp	DWORD PTR _lastErrno$[ebp], 3
jne	SHORT $LN19@winDelete
mov	DWORD PTR _rc$[ebp], 5898		
jmp	SHORT $LN17@winDelete
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN21@winDelete
mov	edx, DWORD PTR _attr$[ebp]
and	edx, 16					
je	SHORT $LN16@winDelete
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN21@winDelete
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 10
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
test	eax, eax
je	SHORT $LN15@winDelete
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN21@winDelete
lea	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
lea	edx, DWORD PTR _cnt$[ebp]
push	edx
call	_winRetryIoerr
add	esp, 8
test	eax, eax
jne	SHORT $LN22@winDelete
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN21@winDelete
mov	eax, 1
test	eax, eax
jne	$LN23@winDelete
jmp	$LN13@winDelete
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 20
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _attr$[ebp], eax
cmp	DWORD PTR _attr$[ebp], -1
jne	SHORT $LN9@winDelete
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _lastErrno$[ebp], 2
je	SHORT $LN7@winDelete
cmp	DWORD PTR _lastErrno$[ebp], 3
jne	SHORT $LN8@winDelete
mov	DWORD PTR _rc$[ebp], 5898		
jmp	SHORT $LN6@winDelete
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN13@winDelete
mov	edx, DWORD PTR _attr$[ebp]
and	edx, 16					
je	SHORT $LN5@winDelete
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN13@winDelete
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 9
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
test	eax, eax
je	SHORT $LN4@winDelete
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN13@winDelete
lea	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
lea	edx, DWORD PTR _cnt$[ebp]
push	edx
call	_winRetryIoerr
add	esp, 8
test	eax, eax
jne	SHORT $LN11@winDelete
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN13@winDelete
mov	eax, 1
test	eax, eax
jne	$LN12@winDelete
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@winDelete
cmp	DWORD PTR _rc$[ebp], 5898		
je	SHORT $LN2@winDelete
push	36492					
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
push	OFFSET $SG88550
mov	edx, DWORD PTR _lastErrno$[ebp]
push	edx
push	2570					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN1@winDelete
mov	eax, DWORD PTR _cnt$[ebp]
push	eax
call	_winLogIoerr
add	esp, 4
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winOpen PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	DWORD PTR _lastErrno$[ebp], 0
mov	DWORD PTR _dwFlagsAndAttributes$[ebp], 0
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	ecx, DWORD PTR _zName$[ebp]
mov	DWORD PTR _zUtf8Name$[ebp], ecx
mov	DWORD PTR _cnt$[ebp], 0
mov	DWORD PTR _zTmpname$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 16					
mov	DWORD PTR _isExclusive$[ebp], edx
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 8
mov	DWORD PTR _isDelete$[ebp], eax
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 4
mov	DWORD PTR _isCreate$[ebp], ecx
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 1
mov	DWORD PTR _isReadonly$[ebp], edx
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 2
mov	DWORD PTR _isReadWrite$[ebp], eax
push	72					
push	0
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx+8], -1
cmp	DWORD PTR _zUtf8Name$[ebp], 0
jne	SHORT $LN26@winOpen
lea	eax, DWORD PTR _zTmpname$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_winGetTempname
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN25@winOpen
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN27@winOpen
mov	edx, DWORD PTR _zTmpname$[ebp]
mov	DWORD PTR _zUtf8Name$[ebp], edx
mov	eax, DWORD PTR _zUtf8Name$[ebp]
push	eax
call	_winConvertFromUtf8Filename
add	esp, 4
mov	DWORD PTR _zConverted$[ebp], eax
cmp	DWORD PTR _zConverted$[ebp], 0
jne	SHORT $LN24@winOpen
mov	ecx, DWORD PTR _zTmpname$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN27@winOpen
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
call	_winIsDir
add	esp, 4
test	eax, eax
je	SHORT $LN23@winOpen
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _zTmpname$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, 526				
jmp	$LN27@winOpen
cmp	DWORD PTR _isReadWrite$[ebp], 0
je	SHORT $LN22@winOpen
mov	DWORD PTR _dwDesiredAccess$[ebp], -1073741824 
jmp	SHORT $LN21@winOpen
mov	DWORD PTR _dwDesiredAccess$[ebp], -2147483648 
cmp	DWORD PTR _isExclusive$[ebp], 0
je	SHORT $LN20@winOpen
mov	DWORD PTR _dwCreationDisposition$[ebp], 1
jmp	SHORT $LN19@winOpen
cmp	DWORD PTR _isCreate$[ebp], 0
je	SHORT $LN18@winOpen
mov	DWORD PTR _dwCreationDisposition$[ebp], 4
jmp	SHORT $LN19@winOpen
mov	DWORD PTR _dwCreationDisposition$[ebp], 3
mov	DWORD PTR _dwShareMode$[ebp], 3
cmp	DWORD PTR _isDelete$[ebp], 0
je	SHORT $LN16@winOpen
mov	DWORD PTR _dwFlagsAndAttributes$[ebp], 67109122 
jmp	SHORT $LN15@winOpen
mov	DWORD PTR _dwFlagsAndAttributes$[ebp], 128 
call	_osIsNT
test	eax, eax
je	SHORT $LN10@winOpen
push	0
mov	edx, DWORD PTR _dwFlagsAndAttributes$[ebp]
push	edx
mov	eax, DWORD PTR _dwCreationDisposition$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _dwShareMode$[ebp]
push	ecx
mov	edx, DWORD PTR _dwDesiredAccess$[ebp]
push	edx
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 5
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _h$[ebp], eax
cmp	DWORD PTR _h$[ebp], -1
jne	SHORT $LN12@winOpen
lea	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
lea	edx, DWORD PTR _cnt$[ebp]
push	edx
call	_winRetryIoerr
add	esp, 8
test	eax, eax
je	SHORT $LN12@winOpen
jmp	SHORT $LN13@winOpen
jmp	SHORT $LN11@winOpen
push	0
mov	eax, DWORD PTR _dwFlagsAndAttributes$[ebp]
push	eax
mov	ecx, DWORD PTR _dwCreationDisposition$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _dwShareMode$[ebp]
push	edx
mov	eax, DWORD PTR _dwDesiredAccess$[ebp]
push	eax
mov	ecx, DWORD PTR _zConverted$[ebp]
push	ecx
mov	edx, 12					
shl	edx, 2
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _h$[ebp], eax
cmp	DWORD PTR _h$[ebp], -1
jne	SHORT $LN11@winOpen
lea	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
lea	edx, DWORD PTR _cnt$[ebp]
push	edx
call	_winRetryIoerr
add	esp, 8
test	eax, eax
je	SHORT $LN11@winOpen
jmp	SHORT $LN10@winOpen
mov	eax, DWORD PTR _cnt$[ebp]
push	eax
call	_winLogIoerr
add	esp, 4
cmp	DWORD PTR _h$[ebp], -1
jne	$LN8@winOpen
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR _lastErrno$[ebp]
mov	DWORD PTR [ecx+20], edx
push	36317					
mov	eax, DWORD PTR _zUtf8Name$[ebp]
push	eax
push	OFFSET $SG88488
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	14					
call	_winLogErrorAtLine
add	esp, 20					
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _zTmpname$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _isReadWrite$[ebp], 0
je	SHORT $LN7@winOpen
cmp	DWORD PTR _isExclusive$[ebp], 0
jne	SHORT $LN7@winOpen
mov	edx, DWORD PTR _pOutFlags$[ebp]
push	edx
mov	eax, DWORD PTR _flags$[ebp]
or	eax, 1
and	eax, -7					
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_winOpen
add	esp, 20					
jmp	$LN27@winOpen
jmp	SHORT $LN8@winOpen
push	36326					
call	_sqlite3CantopenError
add	esp, 4
jmp	$LN27@winOpen
cmp	DWORD PTR _pOutFlags$[ebp], 0
je	SHORT $LN5@winOpen
cmp	DWORD PTR _isReadWrite$[ebp], 0
je	SHORT $LN4@winOpen
mov	ecx, DWORD PTR _pOutFlags$[ebp]
mov	DWORD PTR [ecx], 2
jmp	SHORT $LN5@winOpen
mov	edx, DWORD PTR _pOutFlags$[ebp]
mov	DWORD PTR [edx], 1
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _zTmpname$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx], OFFSET _winIoMethod
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR _h$[ebp]
mov	DWORD PTR [edx+8], eax
cmp	DWORD PTR _isReadonly$[ebp], 0
je	SHORT $LN2@winOpen
mov	ecx, DWORD PTR _pFile$[ebp]
movzx	edx, BYTE PTR [ecx+16]
or	edx, 2
mov	eax, DWORD PTR _pFile$[ebp]
mov	BYTE PTR [eax+16], dl
push	1
push	OFFSET $SG88496
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
call	_sqlite3_uri_boolean
add	esp, 12					
test	eax, eax
je	SHORT $LN1@winOpen
mov	edx, DWORD PTR _pFile$[ebp]
movzx	eax, BYTE PTR [edx+16]
or	eax, 16					
mov	ecx, DWORD PTR _pFile$[ebp]
mov	BYTE PTR [ecx+16], al
mov	edx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx+20], 0
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR _zName$[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx+40], 0
mov	eax, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [eax+44], 0
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [ecx+48], 0
mov	DWORD PTR [ecx+52], 0
mov	edx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx+56], 0
mov	DWORD PTR [edx+60], 0
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR _sqlite3Config+176
mov	DWORD PTR [eax+64], ecx
mov	edx, DWORD PTR _sqlite3Config+180
mov	DWORD PTR [eax+68], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winShmSystemLock PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _lockType$[ebp], 1
jne	SHORT $LN5@winShmSyst
push	0
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _ofst$[ebp]
push	ecx
mov	edx, DWORD PTR _pFile$[ebp]
add	edx, 16					
push	edx
call	_winUnlockFile
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN4@winShmSyst
mov	DWORD PTR _dwFlags$1[ebp], 1
cmp	DWORD PTR _lockType$[ebp], 3
jne	SHORT $LN3@winShmSyst
mov	eax, DWORD PTR _dwFlags$1[ebp]
or	eax, 2
mov	DWORD PTR _dwFlags$1[ebp], eax
push	0
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _ofst$[ebp]
push	edx
mov	eax, DWORD PTR _dwFlags$1[ebp]
push	eax
mov	ecx, DWORD PTR _pFile$[ebp]
add	ecx, 16					
push	ecx
call	_winLockFile
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@winShmSyst
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN1@winShmSyst
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	edx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx+92], eax
mov	DWORD PTR _rc$[ebp], 5
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winShmLeaveMutex PROC
push	ebp
mov	ebp, esp
push	2
call	_sqlite3MutexAlloc
add	esp, 4
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
pop	ebp
ret	0
ENDP
_winShmEnterMutex PROC
push	ebp
mov	ebp, esp
push	2
call	_sqlite3MutexAlloc
add	esp, 4
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
pop	ebp
ret	0
ENDP
_winDeviceCharacteristics PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+16]
and	edx, 16					
je	SHORT $LN3@winDeviceC
mov	DWORD PTR tv68[ebp], 4096		
jmp	SHORT $LN4@winDeviceC
mov	DWORD PTR tv68[ebp], 0
mov	eax, DWORD PTR tv68[ebp]
or	eax, 2048				
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winSectorSize PROC
push	ebp
mov	ebp, esp
mov	eax, 4096				
pop	ebp
ret	0
ENDP
_winFileControl PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	ecx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv64[ebp], ecx
mov	edx, DWORD PTR tv64[ebp]
sub	edx, 1
mov	DWORD PTR tv64[ebp], edx
cmp	DWORD PTR tv64[ebp], 17			
ja	$LN22@winFileCon
mov	eax, DWORD PTR tv64[ebp]
movzx	ecx, BYTE PTR $LN26@winFileCon[eax]
jmp	DWORD PTR $LN32@winFileCon[ecx*4]
mov	edx, DWORD PTR _pFile$[ebp]
movzx	eax, BYTE PTR [edx+12]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [ecx], eax
xor	eax, eax
jmp	$LN24@winFileCon
mov	edx, DWORD PTR _pArg$[ebp]
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [edx], ecx
xor	eax, eax
jmp	$LN24@winFileCon
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR _pArg$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+32], ecx
xor	eax, eax
jmp	$LN24@winFileCon
mov	edx, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [edx+32], 0
jle	SHORT $LN17@winFileCon
lea	eax, DWORD PTR _oldSz$1[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
call	_winFileSize
add	esp, 8
mov	DWORD PTR _rc$7[ebp], eax
cmp	DWORD PTR _rc$7[ebp], 0
jne	SHORT $LN16@winFileCon
mov	edx, DWORD PTR _pArg$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _newSz$2[ebp], eax
mov	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _newSz$2[ebp+4], ecx
mov	edx, DWORD PTR _newSz$2[ebp+4]
cmp	edx, DWORD PTR _oldSz$1[ebp+4]
jl	SHORT $LN16@winFileCon
jg	SHORT $LN27@winFileCon
mov	eax, DWORD PTR _newSz$2[ebp]
cmp	eax, DWORD PTR _oldSz$1[ebp]
jbe	SHORT $LN16@winFileCon
mov	ecx, DWORD PTR _newSz$2[ebp+4]
push	ecx
mov	edx, DWORD PTR _newSz$2[ebp]
push	edx
mov	eax, DWORD PTR _id$[ebp]
push	eax
call	_winTruncate
add	esp, 12					
mov	DWORD PTR _rc$7[ebp], eax
mov	eax, DWORD PTR _rc$7[ebp]
jmp	$LN24@winFileCon
xor	eax, eax
jmp	$LN24@winFileCon
mov	ecx, DWORD PTR _pArg$[ebp]
push	ecx
push	4
mov	edx, DWORD PTR _pFile$[ebp]
push	edx
call	_winModeBit
add	esp, 12					
xor	eax, eax
jmp	$LN24@winFileCon
mov	eax, DWORD PTR _pArg$[ebp]
push	eax
push	16					
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_winModeBit
add	esp, 12					
xor	eax, eax
jmp	$LN24@winFileCon
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+16]
push	ecx
push	OFFSET $SG87873
call	_sqlite3_mprintf
add	esp, 8
mov	edx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
jmp	$LN24@winFileCon
mov	eax, DWORD PTR _pArg$[ebp]
mov	DWORD PTR _a$8[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _a$8[ebp]
cmp	DWORD PTR [eax+edx], 0
jle	SHORT $LN10@winFileCon
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _a$8[ebp]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _winIoerrRetry, ecx
jmp	SHORT $LN9@winFileCon
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _a$8[ebp]
mov	edx, DWORD PTR _winIoerrRetry
mov	DWORD PTR [ecx+eax], edx
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _a$8[ebp]
cmp	DWORD PTR [ecx+eax], 0
jle	SHORT $LN8@winFileCon
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _a$8[ebp]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _winIoerrRetryDelay, ecx
jmp	SHORT $LN7@winFileCon
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _a$8[ebp]
mov	ecx, DWORD PTR _winIoerrRetryDelay
mov	DWORD PTR [eax+edx], ecx
xor	eax, eax
jmp	$LN24@winFileCon
mov	DWORD PTR _zTFile$6[ebp], 0
lea	edx, DWORD PTR _zTFile$6[ebp]
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_winGetTempname
add	esp, 8
mov	DWORD PTR _rc$5[ebp], eax
cmp	DWORD PTR _rc$5[ebp], 0
jne	SHORT $LN5@winFileCon
mov	edx, DWORD PTR _pArg$[ebp]
mov	eax, DWORD PTR _zTFile$6[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _rc$5[ebp]
jmp	$LN24@winFileCon
mov	ecx, DWORD PTR _pArg$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _newLimit$3[ebp], edx
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _newLimit$3[ebp+4], eax
mov	DWORD PTR _rc$4[ebp], 0
mov	ecx, DWORD PTR _newLimit$3[ebp+4]
cmp	ecx, DWORD PTR _sqlite3Config+188
jl	SHORT $LN3@winFileCon
jg	SHORT $LN28@winFileCon
mov	edx, DWORD PTR _newLimit$3[ebp]
cmp	edx, DWORD PTR _sqlite3Config+184
jbe	SHORT $LN3@winFileCon
mov	eax, DWORD PTR _sqlite3Config+184
mov	DWORD PTR _newLimit$3[ebp], eax
mov	ecx, DWORD PTR _sqlite3Config+188
mov	DWORD PTR _newLimit$3[ebp+4], ecx
mov	edx, DWORD PTR _pArg$[ebp]
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR [eax+68]
mov	DWORD PTR [edx+4], eax
cmp	DWORD PTR _newLimit$3[ebp+4], 0
jl	SHORT $LN2@winFileCon
jg	SHORT $LN29@winFileCon
cmp	DWORD PTR _newLimit$3[ebp], 0
jb	SHORT $LN2@winFileCon
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR tv249[ebp], ecx
mov	edx, DWORD PTR tv249[ebp]
mov	eax, DWORD PTR _newLimit$3[ebp]
cmp	eax, DWORD PTR [edx+64]
jne	SHORT $LN30@winFileCon
mov	ecx, DWORD PTR tv249[ebp]
mov	edx, DWORD PTR _newLimit$3[ebp+4]
cmp	edx, DWORD PTR [ecx+68]
je	SHORT $LN2@winFileCon
mov	eax, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [eax+36], 0
jne	SHORT $LN2@winFileCon
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR _newLimit$3[ebp]
mov	DWORD PTR [ecx+64], edx
mov	eax, DWORD PTR _newLimit$3[ebp+4]
mov	DWORD PTR [ecx+68], eax
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR tv261[ebp], ecx
mov	edx, DWORD PTR tv261[ebp]
cmp	DWORD PTR [edx+52], 0
jl	SHORT $LN2@winFileCon
jg	SHORT $LN31@winFileCon
mov	eax, DWORD PTR tv261[ebp]
cmp	DWORD PTR [eax+48], 0
jbe	SHORT $LN2@winFileCon
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_winUnmapfile
add	esp, 4
push	-1
push	-1
mov	edx, DWORD PTR _pFile$[ebp]
push	edx
call	_winMapfile
add	esp, 12					
mov	DWORD PTR _rc$4[ebp], eax
mov	eax, DWORD PTR _rc$4[ebp]
jmp	SHORT $LN24@winFileCon
mov	eax, 12					
mov	esp, ebp
pop	ebp
ret	0
DD	$LN21@winFileCon
DD	$LN20@winFileCon
DD	$LN18@winFileCon
DD	$LN19@winFileCon
DD	$LN11@winFileCon
DD	$LN14@winFileCon
DD	$LN12@winFileCon
DD	$LN13@winFileCon
DD	$LN6@winFileCon
DD	$LN4@winFileCon
DD	$LN22@winFileCon
DB	0
DB	10					
DB	10					
DB	1
DB	2
DB	3
DB	10					
DB	10					
DB	4
DB	5
DB	10					
DB	6
DB	7
DB	10					
DB	10					
DB	8
DB	10					
DB	9
ENDP
_winIsDriveLetterAndColon PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zPathname$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 2
je	SHORT $LN3@winIsDrive
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _zPathname$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 58					
jne	SHORT $LN3@winIsDrive
mov	DWORD PTR tv76[ebp], 1
jmp	SHORT $LN4@winIsDrive
mov	DWORD PTR tv76[ebp], 0
mov	eax, DWORD PTR tv76[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winIsDir PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
call	_osIsNT
test	eax, eax
je	SHORT $LN5@winIsDir
mov	DWORD PTR _cnt$1[ebp], 0
push	36					
push	0
lea	eax, DWORD PTR _sAttrData$2[ebp]
push	eax
call	_memset
add	esp, 12					
lea	ecx, DWORD PTR _sAttrData$2[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _zConverted$[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 22
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@winIsDir
lea	eax, DWORD PTR _lastErrno$[ebp]
push	eax
lea	ecx, DWORD PTR _cnt$1[ebp]
push	ecx
call	_winRetryIoerr
add	esp, 8
test	eax, eax
je	SHORT $LN3@winIsDir
jmp	SHORT $LN4@winIsDir
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@winIsDir
xor	eax, eax
jmp	SHORT $LN6@winIsDir
mov	edx, DWORD PTR _sAttrData$2[ebp]
mov	DWORD PTR _attr$[ebp], edx
jmp	SHORT $LN1@winIsDir
mov	eax, DWORD PTR _zConverted$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 20
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _attr$[ebp], eax
cmp	DWORD PTR _attr$[ebp], -1
je	SHORT $LN8@winIsDir
mov	ecx, DWORD PTR _attr$[ebp]
and	ecx, 16					
je	SHORT $LN8@winIsDir
mov	DWORD PTR tv90[ebp], 1
jmp	SHORT $LN9@winIsDir
mov	DWORD PTR tv90[ebp], 0
mov	eax, DWORD PTR tv90[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winGetTempname PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
push	OFFSET $SG88317
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nPre$[ebp], eax
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _nMax$[ebp], ecx
mov	edx, DWORD PTR _nMax$[ebp]
add	edx, 2
mov	DWORD PTR _nBuf$[ebp], edx
mov	eax, DWORD PTR _nBuf$[ebp]
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zBuf$[ebp], eax
cmp	DWORD PTR _zBuf$[ebp], 0
jne	SHORT $LN21@winGetTemp
mov	eax, 3082				
jmp	$LN22@winGetTemp
mov	ecx, DWORD PTR _nPre$[ebp]
add	ecx, 15					
mov	edx, DWORD PTR _nMax$[ebp]
sub	edx, ecx
mov	DWORD PTR _nDir$[ebp], edx
cmp	DWORD PTR _sqlite3_temp_directory, 0
je	$LN20@winGetTemp
mov	eax, DWORD PTR _sqlite3_temp_directory
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nDirLen$5[ebp], eax
cmp	DWORD PTR _nDirLen$5[ebp], 0
jle	SHORT $LN19@winGetTemp
mov	ecx, DWORD PTR _sqlite3_temp_directory
add	ecx, DWORD PTR _nDirLen$5[ebp]
movsx	edx, BYTE PTR [ecx-1]
cmp	edx, 47					
je	SHORT $LN18@winGetTemp
mov	eax, DWORD PTR _sqlite3_temp_directory
add	eax, DWORD PTR _nDirLen$5[ebp]
movsx	ecx, BYTE PTR [eax-1]
cmp	ecx, 92					
je	SHORT $LN18@winGetTemp
mov	edx, DWORD PTR _nDirLen$5[ebp]
add	edx, 1
mov	DWORD PTR _nDirLen$5[ebp], edx
mov	eax, DWORD PTR _nDirLen$5[ebp]
cmp	eax, DWORD PTR _nDir$[ebp]
jle	SHORT $LN17@winGetTemp
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
push	35888					
push	0
push	OFFSET $SG88330
push	0
push	1
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN22@winGetTemp
mov	edx, DWORD PTR _sqlite3_temp_directory
push	edx
push	OFFSET $SG88331
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _nMax$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 16					
jmp	$LN16@winGetTemp
call	_osIsNT
test	eax, eax
je	$LN15@winGetTemp
mov	edx, DWORD PTR _nMax$[ebp]
shl	edx, 1
push	edx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zWidePath$4[ebp], eax
cmp	DWORD PTR _zWidePath$4[ebp], 0
jne	SHORT $LN14@winGetTemp
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN22@winGetTemp
mov	ecx, DWORD PTR _zWidePath$4[ebp]
push	ecx
mov	edx, DWORD PTR _nMax$[ebp]
push	edx
mov	eax, 12					
shl	eax, 5
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
test	eax, eax
jne	SHORT $LN13@winGetTemp
mov	edx, DWORD PTR _zWidePath$4[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
push	35987					
push	0
push	OFFSET $SG88344
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
push	eax
push	6410					
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN22@winGetTemp
mov	ecx, DWORD PTR _zWidePath$4[ebp]
push	ecx
call	_winUnicodeToUtf8
add	esp, 4
mov	DWORD PTR _zMulti$3[ebp], eax
cmp	DWORD PTR _zMulti$3[ebp], 0
je	SHORT $LN12@winGetTemp
mov	edx, DWORD PTR _zMulti$3[ebp]
push	edx
push	OFFSET $SG88346
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _nMax$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _zMulti$3[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zWidePath$4[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN11@winGetTemp
mov	ecx, DWORD PTR _zWidePath$4[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _zBuf$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN22@winGetTemp
jmp	$LN16@winGetTemp
mov	eax, DWORD PTR _nMax$[ebp]
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zMbcsPath$2[ebp], eax
cmp	DWORD PTR _zMbcsPath$2[ebp], 0
jne	SHORT $LN9@winGetTemp
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN22@winGetTemp
mov	edx, DWORD PTR _zMbcsPath$2[ebp]
push	edx
mov	eax, DWORD PTR _nMax$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 31
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
test	eax, eax
jne	SHORT $LN8@winGetTemp
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
push	36014					
push	0
push	OFFSET $SG88358
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
push	6410					
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN22@winGetTemp
mov	edx, DWORD PTR _zMbcsPath$2[ebp]
push	edx
call	_sqlite3_win32_mbcs_to_utf8
add	esp, 4
mov	DWORD PTR _zUtf8$1[ebp], eax
cmp	DWORD PTR _zUtf8$1[ebp], 0
je	SHORT $LN7@winGetTemp
mov	eax, DWORD PTR _zUtf8$1[ebp]
push	eax
push	OFFSET $SG88360
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
mov	edx, DWORD PTR _nMax$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 16					
mov	eax, DWORD PTR _zUtf8$1[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN16@winGetTemp
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, 3082				
jmp	$LN22@winGetTemp
mov	edx, DWORD PTR _zBuf$[ebp]
push	edx
mov	eax, DWORD PTR _nDir$[ebp]
add	eax, 1
push	eax
call	_winMakeEndInDirSep
add	esp, 8
test	eax, eax
jne	SHORT $LN5@winGetTemp
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
push	36037					
push	0
push	OFFSET $SG88363
push	0
push	1
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN22@winGetTemp
mov	edx, DWORD PTR _zBuf$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nLen$[ebp], eax
mov	eax, DWORD PTR _nPre$[ebp]
mov	ecx, DWORD PTR _nLen$[ebp]
lea	edx, DWORD PTR [ecx+eax+17]
cmp	edx, DWORD PTR _nBuf$[ebp]
jle	SHORT $LN4@winGetTemp
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
push	36055					
push	0
push	OFFSET $SG88365
push	0
push	1
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN22@winGetTemp
push	OFFSET $SG88366
mov	ecx, DWORD PTR _zBuf$[ebp]
add	ecx, DWORD PTR _nLen$[ebp]
push	ecx
mov	edx, DWORD PTR _nBuf$[ebp]
sub	edx, 16					
sub	edx, DWORD PTR _nLen$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 12					
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _zBuf$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
push	15					
call	_sqlite3_randomness
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@winGetTemp
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
cmp	DWORD PTR _i$[ebp], 15			
jae	SHORT $LN1@winGetTemp
mov	ecx, DWORD PTR _zBuf$[ebp]
add	ecx, DWORD PTR _j$[ebp]
movzx	eax, BYTE PTR [ecx]
xor	edx, edx
mov	ecx, 62					
div	ecx
mov	eax, DWORD PTR _zBuf$[ebp]
add	eax, DWORD PTR _j$[ebp]
mov	cl, BYTE PTR ?zChars@?1??winGetTempname@@9@9[edx]
mov	BYTE PTR [eax], cl
jmp	SHORT $LN2@winGetTemp
mov	edx, DWORD PTR _zBuf$[ebp]
add	edx, DWORD PTR _j$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _zBuf$[ebp]
add	eax, DWORD PTR _j$[ebp]
mov	BYTE PTR [eax+1], 0
mov	ecx, DWORD PTR _pzBuf$[ebp]
mov	edx, DWORD PTR _zBuf$[ebp]
mov	DWORD PTR [ecx], edx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winModeBit PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pArg$[ebp]
cmp	DWORD PTR [eax], 0
jge	SHORT $LN4@winModeBit
mov	ecx, DWORD PTR _pFile$[ebp]
movzx	edx, BYTE PTR [ecx+16]
movzx	eax, BYTE PTR _mask$[ebp]
and	edx, eax
je	SHORT $LN7@winModeBit
mov	DWORD PTR tv70[ebp], 1
jmp	SHORT $LN8@winModeBit
mov	DWORD PTR tv70[ebp], 0
mov	ecx, DWORD PTR _pArg$[ebp]
mov	edx, DWORD PTR tv70[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN5@winModeBit
mov	eax, DWORD PTR _pArg$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN2@winModeBit
movzx	ecx, BYTE PTR _mask$[ebp]
not	ecx
mov	edx, DWORD PTR _pFile$[ebp]
movzx	eax, BYTE PTR [edx+16]
and	eax, ecx
mov	ecx, DWORD PTR _pFile$[ebp]
mov	BYTE PTR [ecx+16], al
jmp	SHORT $LN5@winModeBit
movzx	edx, BYTE PTR _mask$[ebp]
mov	eax, DWORD PTR _pFile$[ebp]
movzx	ecx, BYTE PTR [eax+16]
or	ecx, edx
mov	edx, DWORD PTR _pFile$[ebp]
mov	BYTE PTR [edx+16], cl
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUnlock PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, DWORD PTR _pFile$[ebp]
movzx	edx, BYTE PTR [ecx+12]
mov	DWORD PTR _type$[ebp], edx
cmp	DWORD PTR _type$[ebp], 4
jl	SHORT $LN5@winUnlock
push	0
push	510					
push	0
mov	eax, DWORD PTR _sqlite3PendingByte
add	eax, 2
push	eax
mov	ecx, DWORD PTR _pFile$[ebp]
add	ecx, 8
push	ecx
call	_winUnlockFile
add	esp, 20					
cmp	DWORD PTR _locktype$[ebp], 1
jne	SHORT $LN5@winUnlock
mov	edx, DWORD PTR _pFile$[ebp]
push	edx
call	_winGetReadLock
add	esp, 4
test	eax, eax
jne	SHORT $LN5@winUnlock
push	34696					
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	OFFSET $SG87814
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
push	eax
push	2058					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _type$[ebp], 2
jl	SHORT $LN3@winUnlock
push	0
push	1
push	0
mov	edx, DWORD PTR _sqlite3PendingByte
add	edx, 1
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winUnlockFile
add	esp, 20					
cmp	DWORD PTR _locktype$[ebp], 0
jne	SHORT $LN2@winUnlock
cmp	DWORD PTR _type$[ebp], 1
jl	SHORT $LN2@winUnlock
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_winUnlockReadLock
add	esp, 4
cmp	DWORD PTR _type$[ebp], 3
jl	SHORT $LN1@winUnlock
push	0
push	1
push	0
mov	edx, DWORD PTR _sqlite3PendingByte
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winUnlockFile
add	esp, 20					
mov	ecx, DWORD PTR _pFile$[ebp]
mov	dl, BYTE PTR _locktype$[ebp]
mov	BYTE PTR [ecx+12], dl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winCheckReservedLock PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	ecx, DWORD PTR _pFile$[ebp]
movzx	edx, BYTE PTR [ecx+12]
cmp	edx, 2
jl	SHORT $LN3@winCheckRe
mov	DWORD PTR _res$[ebp], 1
jmp	SHORT $LN2@winCheckRe
push	0
push	1
push	0
mov	eax, DWORD PTR _sqlite3PendingByte
add	eax, 1
push	eax
push	1
mov	ecx, DWORD PTR _pFile$[ebp]
add	ecx, 8
push	ecx
call	_winLockFile
add	esp, 24					
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN1@winCheckRe
push	0
push	1
push	0
mov	edx, DWORD PTR _sqlite3PendingByte
add	edx, 1
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winUnlockFile
add	esp, 20					
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN6@winCheckRe
mov	DWORD PTR tv85[ebp], 1
jmp	SHORT $LN7@winCheckRe
mov	DWORD PTR tv85[ebp], 0
mov	ecx, DWORD PTR tv85[ebp]
mov	DWORD PTR _res$[ebp], ecx
mov	edx, DWORD PTR _pResOut$[ebp]
mov	eax, DWORD PTR _res$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winLock PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _res$[ebp], 1
mov	DWORD PTR _gotPendingLock$[ebp], 0
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	DWORD PTR _lastErrno$[ebp], 0
mov	ecx, DWORD PTR _pFile$[ebp]
movzx	edx, BYTE PTR [ecx+12]
cmp	edx, DWORD PTR _locktype$[ebp]
jl	SHORT $LN21@winLock
xor	eax, eax
jmp	$LN22@winLock
mov	eax, DWORD PTR _pFile$[ebp]
movzx	ecx, BYTE PTR [eax+12]
mov	DWORD PTR _newLocktype$[ebp], ecx
mov	edx, DWORD PTR _pFile$[ebp]
movzx	eax, BYTE PTR [edx+12]
test	eax, eax
je	SHORT $LN19@winLock
cmp	DWORD PTR _locktype$[ebp], 4
jne	$LN20@winLock
mov	ecx, DWORD PTR _pFile$[ebp]
movzx	edx, BYTE PTR [ecx+12]
cmp	edx, 2
jne	$LN20@winLock
mov	DWORD PTR _cnt$1[ebp], 3
mov	eax, DWORD PTR _cnt$1[ebp]
mov	DWORD PTR tv78[ebp], eax
mov	ecx, DWORD PTR _cnt$1[ebp]
sub	ecx, 1
mov	DWORD PTR _cnt$1[ebp], ecx
cmp	DWORD PTR tv78[ebp], 0
jle	SHORT $LN17@winLock
push	0
push	1
push	0
mov	edx, DWORD PTR _sqlite3PendingByte
push	edx
push	3
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winLockFile
add	esp, 24					
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN17@winLock
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _lastErrno$[ebp], 6
jne	SHORT $LN16@winLock
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR _lastErrno$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	DWORD PTR _rc$[ebp], 3850		
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN22@winLock
cmp	DWORD PTR _cnt$1[ebp], 0
je	SHORT $LN15@winLock
push	1
call	_sqlite3_win32_sleep
add	esp, 4
jmp	SHORT $LN18@winLock
mov	eax, DWORD PTR _res$[ebp]
mov	DWORD PTR _gotPendingLock$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN20@winLock
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _locktype$[ebp], 1
jne	SHORT $LN13@winLock
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN13@winLock
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_winGetReadLock
add	esp, 4
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN12@winLock
mov	DWORD PTR _newLocktype$[ebp], 1
jmp	SHORT $LN13@winLock
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _locktype$[ebp], 2
jne	SHORT $LN10@winLock
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN10@winLock
push	0
push	1
push	0
mov	edx, DWORD PTR _sqlite3PendingByte
add	edx, 1
push	edx
push	3
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winLockFile
add	esp, 24					
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN9@winLock
mov	DWORD PTR _newLocktype$[ebp], 2
jmp	SHORT $LN10@winLock
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _locktype$[ebp], 4
jne	SHORT $LN7@winLock
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN7@winLock
mov	DWORD PTR _newLocktype$[ebp], 3
mov	DWORD PTR _gotPendingLock$[ebp], 0
cmp	DWORD PTR _locktype$[ebp], 4
jne	SHORT $LN6@winLock
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN6@winLock
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_winUnlockReadLock
add	esp, 4
mov	DWORD PTR _res$[ebp], eax
push	0
push	510					
push	0
mov	edx, DWORD PTR _sqlite3PendingByte
add	edx, 2
push	edx
push	3
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winLockFile
add	esp, 24					
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN5@winLock
mov	DWORD PTR _newLocktype$[ebp], 4
jmp	SHORT $LN6@winLock
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _lastErrno$[ebp], eax
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_winGetReadLock
add	esp, 4
cmp	DWORD PTR _gotPendingLock$[ebp], 0
je	SHORT $LN3@winLock
cmp	DWORD PTR _locktype$[ebp], 1
jne	SHORT $LN3@winLock
push	0
push	1
push	0
mov	edx, DWORD PTR _sqlite3PendingByte
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winUnlockFile
add	esp, 20					
cmp	DWORD PTR _res$[ebp], 0
je	SHORT $LN2@winLock
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN1@winLock
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR _lastErrno$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	DWORD PTR _rc$[ebp], 5
mov	eax, DWORD PTR _pFile$[ebp]
mov	cl, BYTE PTR _newLocktype$[ebp]
mov	BYTE PTR [eax+12], cl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUnlockReadLock PROC
push	ebp
mov	ebp, esp
sub	esp, 8
call	_osIsNT
test	eax, eax
je	SHORT $LN3@winUnlockR
push	0
push	510					
push	0
mov	eax, DWORD PTR _sqlite3PendingByte
add	eax, 2
push	eax
mov	ecx, DWORD PTR _pFile$[ebp]
add	ecx, 8
push	ecx
call	_winUnlockFile
add	esp, 20					
mov	DWORD PTR _res$[ebp], eax
jmp	SHORT $LN2@winUnlockR
push	0
push	1
push	0
mov	edx, DWORD PTR _pFile$[ebp]
movsx	eax, WORD PTR [edx+14]
mov	ecx, DWORD PTR _sqlite3PendingByte
lea	edx, DWORD PTR [ecx+eax+2]
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
add	eax, 8
push	eax
call	_winUnlockFile
add	esp, 20					
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN1@winUnlockR
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _lastErrno$[ebp], 158		
je	SHORT $LN1@winUnlockR
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR _lastErrno$[ebp]
mov	DWORD PTR [ecx+20], edx
push	34475					
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	OFFSET $SG87730
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
push	2058					
call	_winLogErrorAtLine
add	esp, 20					
mov	eax, DWORD PTR _res$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winGetReadLock PROC
push	ebp
mov	ebp, esp
sub	esp, 8
call	_osIsNT
test	eax, eax
je	SHORT $LN3@winGetRead
push	0
push	510					
push	0
mov	eax, DWORD PTR _sqlite3PendingByte
add	eax, 2
push	eax
push	1
mov	ecx, DWORD PTR _pFile$[ebp]
add	ecx, 8
push	ecx
call	_winLockFile
add	esp, 24					
mov	DWORD PTR _res$[ebp], eax
jmp	SHORT $LN2@winGetRead
lea	edx, DWORD PTR _lk$1[ebp]
push	edx
push	4
call	_sqlite3_randomness
add	esp, 8
mov	eax, DWORD PTR _lk$1[ebp]
and	eax, 2147483647				
cdq
mov	ecx, 509				
idiv	ecx
mov	eax, DWORD PTR _pFile$[ebp]
mov	WORD PTR [eax+14], dx
push	0
push	1
push	0
mov	ecx, DWORD PTR _pFile$[ebp]
movsx	edx, WORD PTR [ecx+14]
mov	eax, DWORD PTR _sqlite3PendingByte
lea	ecx, DWORD PTR [eax+edx+2]
push	ecx
push	3
mov	edx, DWORD PTR _pFile$[ebp]
add	edx, 8
push	edx
call	_winLockFile
add	esp, 24					
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN1@winGetRead
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	eax, DWORD PTR _res$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winFileSize PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
lea	ecx, DWORD PTR _upperBits$1[ebp]
push	ecx
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, 12					
imul	edx, ecx, 23
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _lowerBits$3[ebp], eax
xor	edx, edx
mov	eax, DWORD PTR _upperBits$1[ebp]
mov	cl, 32					
call	__allshl
xor	ecx, ecx
add	eax, DWORD PTR _lowerBits$3[ebp]
adc	edx, ecx
mov	ecx, DWORD PTR _pSize$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
cmp	DWORD PTR _lowerBits$3[ebp], -1
jne	SHORT $LN1@winFileSiz
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _lastErrno$2[ebp], eax
cmp	DWORD PTR _lastErrno$2[ebp], 0
je	SHORT $LN1@winFileSiz
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR _lastErrno$2[ebp]
mov	DWORD PTR [edx+20], eax
push	34380					
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	OFFSET $SG87706
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
push	1802					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winSync PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, 12					
imul	ecx, eax, 13
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@winSync
xor	eax, eax
jmp	SHORT $LN3@winSync
jmp	SHORT $LN3@winSync
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [ecx+20], eax
push	34339					
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG87683
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	1034					
call	_winLogErrorAtLine
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winTruncate PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [ecx+32], 0
jle	SHORT $LN5@winTruncat
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+32]
cdq
mov	ecx, eax
mov	esi, edx
add	ecx, DWORD PTR _nByte$[ebp]
adc	esi, DWORD PTR _nByte$[ebp+4]
sub	ecx, 1
sbb	esi, 0
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+32]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__alldiv
mov	ecx, eax
mov	esi, edx
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+32]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _nByte$[ebp], eax
mov	DWORD PTR _nByte$[ebp+4], edx
mov	eax, DWORD PTR _nByte$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _pFile$[ebp]
push	edx
call	_winSeekFile
add	esp, 12					
test	eax, eax
je	SHORT $LN4@winTruncat
push	34248					
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	OFFSET $SG87656
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
push	1546					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@winTruncat
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, 12					
imul	ecx, eax, 53
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
test	eax, eax
jne	SHORT $LN3@winTruncat
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _lastErrno$[ebp], 1224	
je	SHORT $LN3@winTruncat
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR _lastErrno$[ebp]
mov	DWORD PTR [eax+20], ecx
push	34253					
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG87663
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	1546					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [eax+44], 0
je	SHORT $LN1@winTruncat
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR tv225[ebp], ecx
mov	edx, DWORD PTR tv225[ebp]
mov	eax, DWORD PTR _nByte$[ebp+4]
cmp	eax, DWORD PTR [edx+52]
jg	SHORT $LN1@winTruncat
jl	SHORT $LN8@winTruncat
mov	ecx, DWORD PTR tv225[ebp]
mov	edx, DWORD PTR _nByte$[ebp]
cmp	edx, DWORD PTR [ecx+48]
jae	SHORT $LN1@winTruncat
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR _nByte$[ebp]
mov	DWORD PTR [eax+48], ecx
mov	edx, DWORD PTR _nByte$[ebp+4]
mov	DWORD PTR [eax+52], edx
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winWrite PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	DWORD PTR _nRetry$[ebp], 0
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR tv191[ebp], ecx
mov	edx, DWORD PTR tv191[ebp]
mov	eax, DWORD PTR _offset$[ebp+4]
cmp	eax, DWORD PTR [edx+52]
jg	$LN14@winWrite
jl	SHORT $LN18@winWrite
mov	ecx, DWORD PTR tv191[ebp]
mov	edx, DWORD PTR _offset$[ebp]
cmp	edx, DWORD PTR [ecx+48]
jae	$LN14@winWrite
mov	eax, DWORD PTR _amt$[ebp]
cdq
add	eax, DWORD PTR _offset$[ebp]
adc	edx, DWORD PTR _offset$[ebp+4]
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR tv208[ebp], eax
mov	DWORD PTR tv208[ebp+4], edx
mov	DWORD PTR tv211[ebp], ecx
mov	edx, DWORD PTR tv211[ebp]
mov	eax, DWORD PTR tv208[ebp+4]
cmp	eax, DWORD PTR [edx+52]
jg	SHORT $LN13@winWrite
jl	SHORT $LN19@winWrite
mov	ecx, DWORD PTR tv211[ebp]
mov	edx, DWORD PTR tv208[ebp]
cmp	edx, DWORD PTR [ecx+48]
ja	SHORT $LN13@winWrite
mov	eax, DWORD PTR _amt$[ebp]
push	eax
mov	ecx, DWORD PTR _pBuf$[ebp]
push	ecx
push	0
push	1
mov	edx, DWORD PTR _offset$[ebp+4]
push	edx
mov	eax, DWORD PTR _offset$[ebp]
push	eax
call	__allmul
mov	ecx, DWORD PTR _pFile$[ebp]
add	eax, DWORD PTR [ecx+44]
push	eax
call	_memcpy
add	esp, 12					
xor	eax, eax
jmp	$LN15@winWrite
jmp	SHORT $LN14@winWrite
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+48]
sub	eax, DWORD PTR _offset$[ebp]
mov	ecx, DWORD PTR [edx+52]
sbb	ecx, DWORD PTR _offset$[ebp+4]
mov	DWORD PTR _nCopy$4[ebp], eax
mov	edx, DWORD PTR _nCopy$4[ebp]
push	edx
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
push	0
push	1
mov	ecx, DWORD PTR _offset$[ebp+4]
push	ecx
mov	edx, DWORD PTR _offset$[ebp]
push	edx
call	__allmul
mov	ecx, DWORD PTR _pFile$[ebp]
add	eax, DWORD PTR [ecx+44]
push	eax
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pBuf$[ebp]
add	edx, DWORD PTR _nCopy$4[ebp]
mov	DWORD PTR _pBuf$[ebp], edx
mov	eax, DWORD PTR _amt$[ebp]
sub	eax, DWORD PTR _nCopy$4[ebp]
mov	DWORD PTR _amt$[ebp], eax
mov	eax, DWORD PTR _nCopy$4[ebp]
cdq
add	eax, DWORD PTR _offset$[ebp]
adc	edx, DWORD PTR _offset$[ebp+4]
mov	DWORD PTR _offset$[ebp], eax
mov	DWORD PTR _offset$[ebp+4], edx
mov	ecx, DWORD PTR _pBuf$[ebp]
mov	DWORD PTR _aRem$3[ebp], ecx
mov	edx, DWORD PTR _amt$[ebp]
mov	DWORD PTR _nRem$6[ebp], edx
mov	DWORD PTR _lastErrno$2[ebp], 0
push	20					
push	0
lea	eax, DWORD PTR _overlapped$1[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _offset$[ebp+4]
and	edx, 0
mov	DWORD PTR _overlapped$1[ebp+8], ecx
mov	eax, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _offset$[ebp+4]
mov	cl, 32					
call	__allshr
and	eax, 2147483647				
and	edx, 0
mov	DWORD PTR _overlapped$1[ebp+12], eax
cmp	DWORD PTR _nRem$6[ebp], 0
jle	$LN10@winWrite
lea	eax, DWORD PTR _overlapped$1[ebp]
push	eax
lea	ecx, DWORD PTR _nWrite$5[ebp]
push	ecx
mov	edx, DWORD PTR _nRem$6[ebp]
push	edx
mov	eax, DWORD PTR _aRem$3[ebp]
push	eax
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, 12					
imul	ecx, eax, 61
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
test	eax, eax
jne	SHORT $LN9@winWrite
lea	eax, DWORD PTR _lastErrno$2[ebp]
push	eax
lea	ecx, DWORD PTR _nRetry$[ebp]
push	ecx
call	_winRetryIoerr
add	esp, 8
test	eax, eax
je	SHORT $LN8@winWrite
jmp	SHORT $LN11@winWrite
jmp	SHORT $LN10@winWrite
cmp	DWORD PTR _nWrite$5[ebp], 0
je	SHORT $LN6@winWrite
mov	edx, DWORD PTR _nWrite$5[ebp]
cmp	edx, DWORD PTR _nRem$6[ebp]
jbe	SHORT $LN7@winWrite
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _lastErrno$2[ebp], eax
jmp	SHORT $LN10@winWrite
mov	eax, DWORD PTR _nWrite$5[ebp]
xor	ecx, ecx
add	eax, DWORD PTR _offset$[ebp]
adc	ecx, DWORD PTR _offset$[ebp+4]
mov	DWORD PTR _offset$[ebp], eax
mov	DWORD PTR _offset$[ebp+4], ecx
mov	edx, DWORD PTR _offset$[ebp]
mov	eax, DWORD PTR _offset$[ebp+4]
and	eax, 0
mov	DWORD PTR _overlapped$1[ebp+8], edx
mov	eax, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _offset$[ebp+4]
mov	cl, 32					
call	__allshr
and	eax, 2147483647				
and	edx, 0
mov	DWORD PTR _overlapped$1[ebp+12], eax
mov	ecx, DWORD PTR _aRem$3[ebp]
add	ecx, DWORD PTR _nWrite$5[ebp]
mov	DWORD PTR _aRem$3[ebp], ecx
mov	edx, DWORD PTR _nRem$6[ebp]
sub	edx, DWORD PTR _nWrite$5[ebp]
mov	DWORD PTR _nRem$6[ebp], edx
jmp	$LN11@winWrite
cmp	DWORD PTR _nRem$6[ebp], 0
jle	SHORT $LN5@winWrite
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR _lastErrno$2[ebp]
mov	DWORD PTR [eax+20], ecx
mov	DWORD PTR _rc$[ebp], 1
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@winWrite
mov	edx, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [edx+20], 39			
je	SHORT $LN2@winWrite
mov	eax, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [eax+20], 112			
jne	SHORT $LN3@winWrite
push	34211					
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	OFFSET $SG87640
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
push	13					
call	_winLogErrorAtLine
add	esp, 20					
jmp	SHORT $LN15@winWrite
push	34215					
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG87641
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	778					
call	_winLogErrorAtLine
add	esp, 20					
jmp	SHORT $LN15@winWrite
jmp	SHORT $LN1@winWrite
mov	eax, DWORD PTR _nRetry$[ebp]
push	eax
call	_winLogIoerr
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winRead PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	DWORD PTR _nRetry$[ebp], 0
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR tv173[ebp], ecx
mov	edx, DWORD PTR tv173[ebp]
mov	eax, DWORD PTR _offset$[ebp+4]
cmp	eax, DWORD PTR [edx+52]
jg	$LN7@winRead
jl	SHORT $LN10@winRead
mov	ecx, DWORD PTR tv173[ebp]
mov	edx, DWORD PTR _offset$[ebp]
cmp	edx, DWORD PTR [ecx+48]
jae	$LN7@winRead
mov	eax, DWORD PTR _amt$[ebp]
cdq
add	eax, DWORD PTR _offset$[ebp]
adc	edx, DWORD PTR _offset$[ebp+4]
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR tv190[ebp], eax
mov	DWORD PTR tv190[ebp+4], edx
mov	DWORD PTR tv193[ebp], ecx
mov	edx, DWORD PTR tv193[ebp]
mov	eax, DWORD PTR tv190[ebp+4]
cmp	eax, DWORD PTR [edx+52]
jg	SHORT $LN6@winRead
jl	SHORT $LN11@winRead
mov	ecx, DWORD PTR tv193[ebp]
mov	edx, DWORD PTR tv190[ebp]
cmp	edx, DWORD PTR [ecx+48]
ja	SHORT $LN6@winRead
mov	eax, DWORD PTR _amt$[ebp]
push	eax
push	0
push	1
mov	ecx, DWORD PTR _offset$[ebp+4]
push	ecx
mov	edx, DWORD PTR _offset$[ebp]
push	edx
call	__allmul
mov	ecx, DWORD PTR _pFile$[ebp]
add	eax, DWORD PTR [ecx+44]
push	eax
mov	edx, DWORD PTR _pBuf$[ebp]
push	edx
call	_memcpy
add	esp, 12					
xor	eax, eax
jmp	$LN8@winRead
jmp	SHORT $LN7@winRead
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+48]
sub	ecx, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR [eax+52]
sbb	edx, DWORD PTR _offset$[ebp+4]
mov	DWORD PTR _nCopy$2[ebp], ecx
mov	eax, DWORD PTR _nCopy$2[ebp]
push	eax
push	0
push	1
mov	ecx, DWORD PTR _offset$[ebp+4]
push	ecx
mov	edx, DWORD PTR _offset$[ebp]
push	edx
call	__allmul
mov	ecx, DWORD PTR _pFile$[ebp]
add	eax, DWORD PTR [ecx+44]
push	eax
mov	edx, DWORD PTR _pBuf$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pBuf$[ebp]
add	eax, DWORD PTR _nCopy$2[ebp]
mov	DWORD PTR _pBuf$[ebp], eax
mov	ecx, DWORD PTR _amt$[ebp]
sub	ecx, DWORD PTR _nCopy$2[ebp]
mov	DWORD PTR _amt$[ebp], ecx
mov	eax, DWORD PTR _nCopy$2[ebp]
cdq
add	eax, DWORD PTR _offset$[ebp]
adc	edx, DWORD PTR _offset$[ebp+4]
mov	DWORD PTR _offset$[ebp], eax
mov	DWORD PTR _offset$[ebp+4], edx
push	20					
push	0
lea	edx, DWORD PTR _overlapped$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _offset$[ebp]
mov	ecx, DWORD PTR _offset$[ebp+4]
and	ecx, 0
mov	DWORD PTR _overlapped$[ebp+8], eax
mov	eax, DWORD PTR _offset$[ebp]
mov	edx, DWORD PTR _offset$[ebp+4]
mov	cl, 32					
call	__allshr
and	eax, 2147483647				
and	edx, 0
mov	DWORD PTR _overlapped$[ebp+12], eax
lea	edx, DWORD PTR _overlapped$[ebp]
push	edx
lea	eax, DWORD PTR _nRead$[ebp]
push	eax
mov	ecx, DWORD PTR _amt$[ebp]
push	ecx
mov	edx, DWORD PTR _pBuf$[ebp]
push	edx
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, 12					
imul	eax, edx, 52
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
test	eax, eax
jne	SHORT $LN3@winRead
mov	edx, 12					
imul	eax, edx, 26
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
cmp	eax, 38					
je	SHORT $LN3@winRead
lea	edx, DWORD PTR _lastErrno$1[ebp]
push	edx
lea	eax, DWORD PTR _nRetry$[ebp]
push	eax
call	_winRetryIoerr
add	esp, 8
test	eax, eax
je	SHORT $LN2@winRead
jmp	SHORT $LN4@winRead
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR _lastErrno$1[ebp]
mov	DWORD PTR [ecx+20], edx
push	34104					
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	OFFSET $SG87580
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
push	266					
call	_winLogErrorAtLine
add	esp, 20					
jmp	SHORT $LN8@winRead
jmp	$LN4@winRead
mov	ecx, DWORD PTR _nRetry$[ebp]
push	ecx
call	_winLogIoerr
add	esp, 4
mov	edx, DWORD PTR _nRead$[ebp]
cmp	edx, DWORD PTR _amt$[ebp]
jae	SHORT $LN1@winRead
mov	eax, DWORD PTR _amt$[ebp]
sub	eax, DWORD PTR _nRead$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pBuf$[ebp]
add	ecx, DWORD PTR _nRead$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	eax, 522				
jmp	SHORT $LN8@winRead
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winClose PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _cnt$[ebp], 0
mov	eax, DWORD PTR _id$[ebp]
mov	DWORD PTR _pFile$[ebp], eax
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_winUnmapfile
add	esp, 4
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, 12					
imul	edx, ecx, 3
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@winClose
mov	ecx, DWORD PTR _cnt$[ebp]
add	ecx, 1
mov	DWORD PTR _cnt$[ebp], ecx
cmp	DWORD PTR _cnt$[ebp], 3
jge	SHORT $LN3@winClose
push	100					
call	_sqlite3_win32_sleep
add	esp, 4
mov	edx, 1
test	edx, edx
jne	SHORT $LN5@winClose
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@winClose
mov	eax, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [eax+8], 0
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@winClose
mov	DWORD PTR tv90[ebp], 0
jmp	SHORT $LN9@winClose
push	34040					
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	OFFSET $SG87537
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
push	eax
push	4106					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR tv90[ebp], eax
mov	eax, DWORD PTR tv90[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUnmapfile PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [eax+44], 0
je	$LN4@winUnmapfi
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, 12					
imul	ecx, eax, 59
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
test	eax, eax
jne	SHORT $LN3@winUnmapfi
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [ecx+20], eax
push	35534					
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG88190
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	6154					
call	_winLogErrorAtLine
add	esp, 20					
jmp	$LN5@winUnmapfi
mov	eax, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [eax+44], 0
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [ecx+48], 0
mov	DWORD PTR [ecx+52], 0
mov	edx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx+56], 0
mov	DWORD PTR [edx+60], 0
mov	eax, DWORD PTR _pFile$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN2@winUnmapfi
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
mov	eax, 12					
imul	ecx, eax, 3
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
test	eax, eax
jne	SHORT $LN1@winUnmapfi
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	ecx, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [ecx+20], eax
push	35546					
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG88198
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	6154					
call	_winLogErrorAtLine
add	esp, 20					
jmp	SHORT $LN5@winUnmapfi
mov	eax, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [eax+40], 0
xor	eax, eax
pop	ebp
ret	0
ENDP
_winMapfile PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _nByte$[ebp]
mov	DWORD PTR _nMap$[ebp], eax
mov	ecx, DWORD PTR _nByte$[ebp+4]
mov	DWORD PTR _nMap$[ebp+4], ecx
mov	edx, DWORD PTR _pFd$[ebp]
cmp	DWORD PTR [edx+36], 0
jle	SHORT $LN9@winMapfile
xor	eax, eax
jmp	$LN10@winMapfile
cmp	DWORD PTR _nMap$[ebp+4], 0
jg	SHORT $LN8@winMapfile
jl	SHORT $LN12@winMapfile
cmp	DWORD PTR _nMap$[ebp], 0
jae	SHORT $LN8@winMapfile
lea	eax, DWORD PTR _nMap$[ebp]
push	eax
mov	ecx, DWORD PTR _pFd$[ebp]
push	ecx
call	_winFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@winMapfile
mov	eax, 1802				
jmp	$LN10@winMapfile
mov	edx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR tv199[ebp], edx
mov	eax, DWORD PTR tv199[ebp]
mov	ecx, DWORD PTR _nMap$[ebp+4]
cmp	ecx, DWORD PTR [eax+68]
jl	SHORT $LN6@winMapfile
jg	SHORT $LN13@winMapfile
mov	edx, DWORD PTR tv199[ebp]
mov	eax, DWORD PTR _nMap$[ebp]
cmp	eax, DWORD PTR [edx+64]
jbe	SHORT $LN6@winMapfile
mov	ecx, DWORD PTR _pFd$[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	DWORD PTR _nMap$[ebp], edx
mov	eax, DWORD PTR [ecx+68]
mov	DWORD PTR _nMap$[ebp+4], eax
mov	ecx, DWORD PTR _winSysInfo+4
sub	ecx, 1
xor	edx, edx
not	ecx
not	edx
and	ecx, DWORD PTR _nMap$[ebp]
and	edx, DWORD PTR _nMap$[ebp+4]
mov	DWORD PTR _nMap$[ebp], ecx
mov	DWORD PTR _nMap$[ebp+4], edx
mov	eax, DWORD PTR _nMap$[ebp]
or	eax, DWORD PTR _nMap$[ebp+4]
jne	SHORT $LN5@winMapfile
mov	ecx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR tv221[ebp], ecx
mov	edx, DWORD PTR tv221[ebp]
cmp	DWORD PTR [edx+52], 0
jl	SHORT $LN5@winMapfile
jg	SHORT $LN14@winMapfile
mov	eax, DWORD PTR tv221[ebp]
cmp	DWORD PTR [eax+48], 0
jbe	SHORT $LN5@winMapfile
mov	ecx, DWORD PTR _pFd$[ebp]
push	ecx
call	_winUnmapfile
add	esp, 4
mov	edx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR tv228[ebp], edx
mov	eax, DWORD PTR tv228[ebp]
mov	ecx, DWORD PTR _nMap$[ebp]
cmp	ecx, DWORD PTR [eax+48]
jne	SHORT $LN15@winMapfile
mov	edx, DWORD PTR tv228[ebp]
mov	eax, DWORD PTR _nMap$[ebp+4]
cmp	eax, DWORD PTR [edx+52]
je	$LN4@winMapfile
mov	DWORD PTR _pNew$2[ebp], 0
mov	DWORD PTR _protect$1[ebp], 2
mov	DWORD PTR _flags$3[ebp], 4
mov	ecx, DWORD PTR _pFd$[ebp]
push	ecx
call	_winUnmapfile
add	esp, 4
mov	edx, DWORD PTR _pFd$[ebp]
movzx	eax, BYTE PTR [edx+16]
and	eax, 2
jne	SHORT $LN3@winMapfile
mov	DWORD PTR _protect$1[ebp], 4
mov	ecx, DWORD PTR _flags$3[ebp]
or	ecx, 2
mov	DWORD PTR _flags$3[ebp], ecx
push	0
mov	edx, DWORD PTR _nMap$[ebp]
mov	eax, DWORD PTR _nMap$[ebp+4]
and	eax, 0
push	edx
mov	eax, DWORD PTR _nMap$[ebp]
mov	edx, DWORD PTR _nMap$[ebp+4]
mov	cl, 32					
call	__allshr
and	edx, 0
push	eax
mov	ecx, DWORD PTR _protect$1[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pFd$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, 12					
imul	edx, ecx, 7
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	ecx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR [ecx+40], eax
mov	edx, DWORD PTR _pFd$[ebp]
cmp	DWORD PTR [edx+40], 0
jne	SHORT $LN2@winMapfile
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	ecx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR [ecx+20], eax
push	35621					
mov	edx, DWORD PTR _pFd$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG88235
mov	ecx, DWORD PTR _pFd$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	6154					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
xor	eax, eax
jmp	$LN10@winMapfile
mov	eax, DWORD PTR _nMap$[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _flags$3[ebp]
push	ecx
mov	edx, DWORD PTR _pFd$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
mov	ecx, 12					
imul	edx, ecx, 49
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _pNew$2[ebp], eax
cmp	DWORD PTR _pNew$2[ebp], 0
jne	SHORT $LN1@winMapfile
mov	ecx, DWORD PTR _pFd$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
mov	eax, 12					
imul	ecx, eax, 3
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	eax, DWORD PTR _pFd$[ebp]
mov	DWORD PTR [eax+40], 0
mov	ecx, 12					
imul	edx, ecx, 26
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	ecx, DWORD PTR _pFd$[ebp]
mov	DWORD PTR [ecx+20], eax
push	35639					
mov	edx, DWORD PTR _pFd$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG88252
mov	ecx, DWORD PTR _pFd$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	6154					
call	_winLogErrorAtLine
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
xor	eax, eax
jmp	SHORT $LN10@winMapfile
mov	eax, DWORD PTR _pFd$[ebp]
mov	ecx, DWORD PTR _pNew$2[ebp]
mov	DWORD PTR [eax+44], ecx
mov	edx, DWORD PTR _pFd$[ebp]
mov	eax, DWORD PTR _nMap$[ebp]
mov	DWORD PTR [edx+48], eax
mov	ecx, DWORD PTR _nMap$[ebp+4]
mov	DWORD PTR [edx+52], ecx
mov	edx, DWORD PTR _pFd$[ebp]
mov	eax, DWORD PTR _nMap$[ebp]
mov	DWORD PTR [edx+56], eax
mov	ecx, DWORD PTR _nMap$[ebp+4]
mov	DWORD PTR [edx+60], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winSeekFile PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _iOffset$[ebp]
mov	edx, DWORD PTR _iOffset$[ebp+4]
mov	cl, 32					
call	__allshr
and	eax, 2147483647				
and	edx, 0
mov	DWORD PTR _upperBits$[ebp], eax
mov	eax, DWORD PTR _iOffset$[ebp]
mov	ecx, DWORD PTR _iOffset$[ebp+4]
and	ecx, 0
mov	DWORD PTR _lowerBits$[ebp], eax
push	0
lea	edx, DWORD PTR _upperBits$[ebp]
push	edx
mov	eax, DWORD PTR _lowerBits$[ebp]
push	eax
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, 12					
imul	ecx, eax, 54
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _dwRet$[ebp], eax
cmp	DWORD PTR _dwRet$[ebp], -1
jne	SHORT $LN1@winSeekFil
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _lastErrno$[ebp], eax
cmp	DWORD PTR _lastErrno$[ebp], 0
je	SHORT $LN1@winSeekFil
mov	eax, DWORD PTR _pFile$[ebp]
mov	ecx, DWORD PTR _lastErrno$[ebp]
mov	DWORD PTR [eax+20], ecx
push	33951					
mov	edx, DWORD PTR _pFile$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	OFFSET $SG87510
mov	ecx, DWORD PTR _pFile$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	5642					
call	_winLogErrorAtLine
add	esp, 20					
mov	eax, 1
jmp	SHORT $LN2@winSeekFil
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUnlockFile PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
call	_osIsNT
test	eax, eax
je	SHORT $LN2@winUnlockF
push	20					
push	0
lea	eax, DWORD PTR _ovlp$1[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _offsetLow$[ebp]
mov	DWORD PTR _ovlp$1[ebp+8], ecx
mov	edx, DWORD PTR _offsetHigh$[ebp]
mov	DWORD PTR _ovlp$1[ebp+12], edx
lea	eax, DWORD PTR _ovlp$1[ebp]
push	eax
mov	ecx, DWORD PTR _numBytesHigh$[ebp]
push	ecx
mov	edx, DWORD PTR _numBytesLow$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _phFile$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, 12					
imul	eax, edx, 58
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
jmp	SHORT $LN3@winUnlockF
jmp	SHORT $LN3@winUnlockF
mov	edx, DWORD PTR _numBytesHigh$[ebp]
push	edx
mov	eax, DWORD PTR _numBytesLow$[ebp]
push	eax
mov	ecx, DWORD PTR _offsetHigh$[ebp]
push	ecx
mov	edx, DWORD PTR _offsetLow$[ebp]
push	edx
mov	eax, DWORD PTR _phFile$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, 12					
imul	eax, edx, 57
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winLockFile PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
call	_osIsNT
test	eax, eax
je	SHORT $LN2@winLockFil
push	20					
push	0
lea	eax, DWORD PTR _ovlp$1[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _offsetLow$[ebp]
mov	DWORD PTR _ovlp$1[ebp+8], ecx
mov	edx, DWORD PTR _offsetHigh$[ebp]
mov	DWORD PTR _ovlp$1[ebp+12], edx
lea	eax, DWORD PTR _ovlp$1[ebp]
push	eax
mov	ecx, DWORD PTR _numBytesHigh$[ebp]
push	ecx
mov	edx, DWORD PTR _numBytesLow$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _phFile$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, 12					
imul	ecx, eax, 48
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
jmp	SHORT $LN3@winLockFil
jmp	SHORT $LN3@winLockFil
mov	eax, DWORD PTR _numBytesHigh$[ebp]
push	eax
mov	ecx, DWORD PTR _numBytesLow$[ebp]
push	ecx
mov	edx, DWORD PTR _offsetHigh$[ebp]
push	edx
mov	eax, DWORD PTR _offsetLow$[ebp]
push	eax
mov	ecx, DWORD PTR _phFile$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, 12					
imul	ecx, eax, 47
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winLogIoerr PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _nRetry$[ebp], 0
je	SHORT $LN2@winLogIoer
mov	eax, DWORD PTR _winIoerrRetryDelay
imul	eax, DWORD PTR _nRetry$[ebp]
mov	ecx, DWORD PTR _nRetry$[ebp]
add	ecx, 1
imul	eax, ecx
cdq
sub	eax, edx
sar	eax, 1
push	eax
push	OFFSET $SG87429
push	10					
call	_sqlite3_log
add	esp, 12					
pop	ebp
ret	0
ENDP
_winRetryIoerr PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, 12					
imul	ecx, eax, 26
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _e$[ebp], eax
mov	eax, DWORD PTR _pnRetry$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _winIoerrRetry
jl	SHORT $LN5@winRetryIo
cmp	DWORD PTR _pError$[ebp], 0
je	SHORT $LN4@winRetryIo
mov	edx, DWORD PTR _pError$[ebp]
mov	eax, DWORD PTR _e$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
jmp	SHORT $LN6@winRetryIo
cmp	DWORD PTR _e$[ebp], 5
je	SHORT $LN2@winRetryIo
cmp	DWORD PTR _e$[ebp], 32			
je	SHORT $LN2@winRetryIo
cmp	DWORD PTR _e$[ebp], 33			
je	SHORT $LN2@winRetryIo
cmp	DWORD PTR _e$[ebp], 55			
je	SHORT $LN2@winRetryIo
cmp	DWORD PTR _e$[ebp], 64			
je	SHORT $LN2@winRetryIo
cmp	DWORD PTR _e$[ebp], 121			
je	SHORT $LN2@winRetryIo
cmp	DWORD PTR _e$[ebp], 1231		
jne	SHORT $LN3@winRetryIo
mov	ecx, DWORD PTR _pnRetry$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 1
imul	edx, DWORD PTR _winIoerrRetryDelay
push	edx
call	_sqlite3_win32_sleep
add	esp, 4
mov	eax, DWORD PTR _pnRetry$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	edx, DWORD PTR _pnRetry$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, 1
jmp	SHORT $LN6@winRetryIo
cmp	DWORD PTR _pError$[ebp], 0
je	SHORT $LN1@winRetryIo
mov	eax, DWORD PTR _pError$[ebp]
mov	ecx, DWORD PTR _e$[ebp]
mov	DWORD PTR [eax], ecx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winLogErrorAtLine PROC
push	ebp
mov	ebp, esp
sub	esp, 516				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, 1
imul	ecx, eax, 0
mov	DWORD PTR $T2[ebp], ecx
cmp	DWORD PTR $T2[ebp], 500			
jae	SHORT $LN7@winLogErro
jmp	SHORT $LN8@winLogErro
call	___report_rangecheckfailure
mov	edx, DWORD PTR $T2[ebp]
mov	BYTE PTR _zMsg$[ebp+edx], 0
lea	eax, DWORD PTR _zMsg$[ebp]
push	eax
push	500					
mov	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
call	_winGetLastErrorMsg
add	esp, 12					
cmp	DWORD PTR _zPath$[ebp], 0
jne	SHORT $LN4@winLogErro
mov	DWORD PTR _zPath$[ebp], OFFSET $SG87402
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@winLogErro
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR _zMsg$[ebp+eax]
test	ecx, ecx
je	SHORT $LN1@winLogErro
mov	edx, DWORD PTR _i$[ebp]
movsx	eax, BYTE PTR _zMsg$[ebp+edx]
cmp	eax, 13					
je	SHORT $LN1@winLogErro
mov	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR _zMsg$[ebp+ecx]
cmp	edx, 10					
je	SHORT $LN1@winLogErro
jmp	SHORT $LN2@winLogErro
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR $T1[ebp], eax
cmp	DWORD PTR $T1[ebp], 500			
jae	SHORT $LN9@winLogErro
jmp	SHORT $LN10@winLogErro
call	___report_rangecheckfailure
mov	ecx, DWORD PTR $T1[ebp]
mov	BYTE PTR _zMsg$[ebp+ecx], 0
lea	edx, DWORD PTR _zMsg$[ebp]
push	edx
mov	eax, DWORD PTR _zPath$[ebp]
push	eax
mov	ecx, DWORD PTR _zFunc$[ebp]
push	ecx
mov	edx, DWORD PTR _lastErrno$[ebp]
push	edx
mov	eax, DWORD PTR _iLine$[ebp]
push	eax
push	OFFSET $SG87407
mov	ecx, DWORD PTR _errcode$[ebp]
push	ecx
call	_sqlite3_log
add	esp, 28					
mov	eax, DWORD PTR _errcode$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winGetLastErrorMsg PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _dwLen$[ebp], 0
mov	DWORD PTR _zOut$[ebp], 0
call	_osIsNT
test	eax, eax
je	SHORT $LN6@winGetLast
mov	DWORD PTR _zTempWide$2[ebp], 0
push	0
push	0
lea	eax, DWORD PTR _zTempWide$2[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _lastErrno$[ebp]
push	ecx
push	0
push	4864					
mov	edx, 12					
imul	eax, edx, 15
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _dwLen$[ebp], eax
cmp	DWORD PTR _dwLen$[ebp], 0
jbe	SHORT $LN5@winGetLast
call	_sqlite3BeginBenignMalloc
mov	edx, DWORD PTR _zTempWide$2[ebp]
push	edx
call	_winUnicodeToUtf8
add	esp, 4
mov	DWORD PTR _zOut$[ebp], eax
call	_sqlite3EndBenignMalloc
mov	eax, DWORD PTR _zTempWide$2[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 46
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
jmp	SHORT $LN4@winGetLast
mov	DWORD PTR _zTemp$1[ebp], 0
push	0
push	0
lea	ecx, DWORD PTR _zTemp$1[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _lastErrno$[ebp]
push	edx
push	0
push	4864					
mov	eax, 12					
imul	ecx, eax, 14
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _dwLen$[ebp], eax
cmp	DWORD PTR _dwLen$[ebp], 0
jbe	SHORT $LN4@winGetLast
call	_sqlite3BeginBenignMalloc
mov	eax, DWORD PTR _zTemp$1[ebp]
push	eax
call	_sqlite3_win32_mbcs_to_utf8
add	esp, 4
mov	DWORD PTR _zOut$[ebp], eax
call	_sqlite3EndBenignMalloc
mov	ecx, DWORD PTR _zTemp$1[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 46
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
cmp	DWORD PTR _dwLen$[ebp], 0
jne	SHORT $LN2@winGetLast
mov	edx, DWORD PTR _lastErrno$[ebp]
push	edx
mov	eax, DWORD PTR _lastErrno$[ebp]
push	eax
push	OFFSET $SG87382
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
mov	edx, DWORD PTR _nBuf$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 20					
jmp	SHORT $LN1@winGetLast
mov	eax, DWORD PTR _zOut$[ebp]
push	eax
push	OFFSET $SG87384
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
mov	edx, DWORD PTR _nBuf$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 16					
mov	eax, DWORD PTR _zOut$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_win32_set_directory PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _ppDirectory$[ebp], 0
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@sqlite3_wi
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN8@sqlite3_wi
cmp	DWORD PTR _type$[ebp], 1
jne	SHORT $LN6@sqlite3_wi
mov	DWORD PTR _ppDirectory$[ebp], OFFSET _sqlite3_data_directory
jmp	SHORT $LN5@sqlite3_wi
cmp	DWORD PTR _type$[ebp], 2
jne	SHORT $LN5@sqlite3_wi
mov	DWORD PTR _ppDirectory$[ebp], OFFSET _sqlite3_temp_directory
cmp	DWORD PTR _ppDirectory$[ebp], 0
je	SHORT $LN3@sqlite3_wi
mov	DWORD PTR _zValueUtf8$1[ebp], 0
cmp	DWORD PTR _zValue$[ebp], 0
je	SHORT $LN2@sqlite3_wi
mov	eax, 2
imul	ecx, eax, 0
mov	edx, DWORD PTR _zValue$[ebp]
movzx	eax, WORD PTR [edx+ecx]
test	eax, eax
je	SHORT $LN2@sqlite3_wi
mov	ecx, DWORD PTR _zValue$[ebp]
push	ecx
call	_winUnicodeToUtf8
add	esp, 4
mov	DWORD PTR _zValueUtf8$1[ebp], eax
cmp	DWORD PTR _zValueUtf8$1[ebp], 0
jne	SHORT $LN2@sqlite3_wi
mov	eax, 7
jmp	SHORT $LN8@sqlite3_wi
mov	edx, DWORD PTR _ppDirectory$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _ppDirectory$[ebp]
mov	edx, DWORD PTR _zValueUtf8$1[ebp]
mov	DWORD PTR [ecx], edx
xor	eax, eax
jmp	SHORT $LN8@sqlite3_wi
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_win32_utf8_to_mbcs PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_winUtf8ToUnicode
add	esp, 4
mov	DWORD PTR _zTmpWide$[ebp], eax
cmp	DWORD PTR _zTmpWide$[ebp], 0
jne	SHORT $LN1@sqlite3_wi
xor	eax, eax
jmp	SHORT $LN2@sqlite3_wi
mov	ecx, DWORD PTR _zTmpWide$[ebp]
push	ecx
call	_winUnicodeToMbcs
add	esp, 4
mov	DWORD PTR _zFilenameMbcs$[ebp], eax
mov	edx, DWORD PTR _zTmpWide$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zFilenameMbcs$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_win32_mbcs_to_utf8 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_winMbcsToUnicode
add	esp, 4
mov	DWORD PTR _zTmpWide$[ebp], eax
cmp	DWORD PTR _zTmpWide$[ebp], 0
jne	SHORT $LN1@sqlite3_wi
xor	eax, eax
jmp	SHORT $LN2@sqlite3_wi
mov	ecx, DWORD PTR _zTmpWide$[ebp]
push	ecx
call	_winUnicodeToUtf8
add	esp, 4
mov	DWORD PTR _zFilenameUtf8$[ebp], eax
mov	edx, DWORD PTR _zTmpWide$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _zFilenameUtf8$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUnicodeToMbcs PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, 12					
imul	ecx, eax, 0
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
test	eax, eax
je	SHORT $LN6@winUnicode
mov	DWORD PTR tv69[ebp], 0
jmp	SHORT $LN7@winUnicode
mov	DWORD PTR tv69[ebp], 1
mov	eax, DWORD PTR tv69[ebp]
mov	DWORD PTR _codepage$[ebp], eax
push	0
push	0
push	0
push	0
push	-1
mov	ecx, DWORD PTR _zWideFilename$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _codepage$[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 60
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN3@winUnicode
xor	eax, eax
jmp	SHORT $LN4@winUnicode
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zFilename$[ebp], eax
cmp	DWORD PTR _zFilename$[ebp], 0
jne	SHORT $LN2@winUnicode
xor	eax, eax
jmp	SHORT $LN4@winUnicode
push	0
push	0
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _zFilename$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _zWideFilename$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _codepage$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 60
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN1@winUnicode
mov	edx, DWORD PTR _zFilename$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _zFilename$[ebp], 0
mov	eax, DWORD PTR _zFilename$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winMbcsToUnicode PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, 12					
imul	ecx, eax, 0
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
test	eax, eax
je	SHORT $LN6@winMbcsToU
mov	DWORD PTR tv69[ebp], 0
jmp	SHORT $LN7@winMbcsToU
mov	DWORD PTR tv69[ebp], 1
mov	eax, DWORD PTR tv69[ebp]
mov	DWORD PTR _codepage$[ebp], eax
push	0
push	0
push	-1
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _codepage$[ebp]
push	edx
mov	eax, 12					
imul	ecx, eax, 50
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
shl	eax, 1
mov	DWORD PTR _nByte$[ebp], eax
jne	SHORT $LN3@winMbcsToU
xor	eax, eax
jmp	SHORT $LN4@winMbcsToU
mov	eax, DWORD PTR _nByte$[ebp]
shl	eax, 1
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zMbcsFilename$[ebp], eax
cmp	DWORD PTR _zMbcsFilename$[ebp], 0
jne	SHORT $LN2@winMbcsToU
xor	eax, eax
jmp	SHORT $LN4@winMbcsToU
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _zMbcsFilename$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _codepage$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 50
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN1@winMbcsToU
mov	edx, DWORD PTR _zMbcsFilename$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _zMbcsFilename$[ebp], 0
mov	eax, DWORD PTR _zMbcsFilename$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUnicodeToUtf8 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	0
push	0
push	0
push	0
push	-1
mov	eax, DWORD PTR _zWideFilename$[ebp]
push	eax
push	0
push	65001					
mov	ecx, 12					
imul	edx, ecx, 60
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN3@winUnicode
xor	eax, eax
jmp	SHORT $LN4@winUnicode
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zFilename$[ebp], eax
cmp	DWORD PTR _zFilename$[ebp], 0
jne	SHORT $LN2@winUnicode
xor	eax, eax
jmp	SHORT $LN4@winUnicode
push	0
push	0
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _zWideFilename$[ebp]
push	ecx
push	0
push	65001					
mov	edx, 12					
imul	eax, edx, 60
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jne	SHORT $LN1@winUnicode
mov	edx, DWORD PTR _zFilename$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _zFilename$[ebp], 0
mov	eax, DWORD PTR _zFilename$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winUtf8ToUnicode PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	0
push	0
push	-1
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
push	0
push	65001					
mov	ecx, 12					
imul	edx, ecx, 50
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
mov	DWORD PTR _nChar$[ebp], eax
cmp	DWORD PTR _nChar$[ebp], 0
jne	SHORT $LN3@winUtf8ToU
xor	eax, eax
jmp	SHORT $LN4@winUtf8ToU
mov	ecx, DWORD PTR _nChar$[ebp]
shl	ecx, 1
push	ecx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _zWideFilename$[ebp], eax
cmp	DWORD PTR _zWideFilename$[ebp], 0
jne	SHORT $LN2@winUtf8ToU
xor	eax, eax
jmp	SHORT $LN4@winUtf8ToU
mov	edx, DWORD PTR _nChar$[ebp]
push	edx
mov	eax, DWORD PTR _zWideFilename$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
push	0
push	65001					
mov	edx, 12					
imul	eax, edx, 50
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	DWORD PTR _nChar$[ebp], eax
cmp	DWORD PTR _nChar$[ebp], 0
jne	SHORT $LN1@winUtf8ToU
mov	edx, DWORD PTR _zWideFilename$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _zWideFilename$[ebp], 0
mov	eax, DWORD PTR _zWideFilename$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_osIsNT	PROC
push	ebp
mov	ebp, esp
sub	esp, 160				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
cmp	DWORD PTR _sqlite3_os_type, 0
jne	SHORT $LN1@osIsNT
mov	DWORD PTR _sInfo$1[ebp], 148		
lea	eax, DWORD PTR _sInfo$1[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 34
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
cmp	DWORD PTR _sInfo$1[ebp+16], 2
jne	SHORT $LN4@osIsNT
mov	DWORD PTR tv70[ebp], 2
jmp	SHORT $LN5@osIsNT
mov	DWORD PTR tv70[ebp], 1
mov	ecx, DWORD PTR tv70[ebp]
mov	DWORD PTR _sqlite3_os_type, ecx
cmp	DWORD PTR _sqlite3_os_type, 2
jne	SHORT $LN6@osIsNT
mov	DWORD PTR tv72[ebp], 1
jmp	SHORT $LN7@osIsNT
mov	DWORD PTR tv72[ebp], 0
mov	eax, DWORD PTR tv72[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_win32_write_debug PROC
push	ebp
mov	ebp, esp
mov	eax, 4104				
call	__chkstk
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
cmp	DWORD PTR _nBuf$[ebp], 4091		
jge	SHORT $LN6@sqlite3_wi
mov	eax, DWORD PTR _nBuf$[ebp]
mov	DWORD PTR tv65[ebp], eax
jmp	SHORT $LN7@sqlite3_wi
mov	DWORD PTR tv65[ebp], 4091		
mov	ecx, DWORD PTR tv65[ebp]
mov	DWORD PTR _nMin$[ebp], ecx
cmp	DWORD PTR _nMin$[ebp], -1
jge	SHORT $LN3@sqlite3_wi
mov	DWORD PTR _nMin$[ebp], -1
cmp	DWORD PTR _nMin$[ebp], 0
jle	SHORT $LN2@sqlite3_wi
push	4092					
push	0
lea	edx, DWORD PTR _zDbgBuf$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _nMin$[ebp]
push	eax
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
lea	edx, DWORD PTR _zDbgBuf$[ebp]
push	edx
call	_memcpy
add	esp, 12					
lea	eax, DWORD PTR _zDbgBuf$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 72
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
jmp	SHORT $LN4@sqlite3_wi
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
mov	edx, 12					
imul	eax, edx, 72
mov	ecx, DWORD PTR _aSyscall[eax+4]
call	ecx
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winNextSystemCall PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], -1
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN9@winNextSys
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@winNextSys
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 75			
jge	SHORT $LN9@winNextSys
imul	ecx, DWORD PTR _i$[ebp], 12
mov	edx, DWORD PTR _aSyscall[ecx]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN5@winNextSys
jmp	SHORT $LN9@winNextSys
jmp	SHORT $LN7@winNextSys
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN4@winNextSys
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 76			
jge	SHORT $LN2@winNextSys
imul	eax, DWORD PTR _i$[ebp], 12
cmp	DWORD PTR _aSyscall[eax+4], 0
je	SHORT $LN1@winNextSys
imul	ecx, DWORD PTR _i$[ebp], 12
mov	eax, DWORD PTR _aSyscall[ecx]
jmp	SHORT $LN10@winNextSys
jmp	SHORT $LN3@winNextSys
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winGetSystemCall PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@winGetSyst
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 76			
jae	SHORT $LN2@winGetSyst
imul	ecx, DWORD PTR _i$[ebp], 12
mov	edx, DWORD PTR _aSyscall[ecx]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@winGetSyst
imul	ecx, DWORD PTR _i$[ebp], 12
mov	eax, DWORD PTR _aSyscall[ecx+4]
jmp	SHORT $LN5@winGetSyst
jmp	SHORT $LN3@winGetSyst
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winSetSystemCall PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 12			
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN12@winSetSyst
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN11@winSetSyst
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 76			
jae	SHORT $LN9@winSetSyst
imul	ecx, DWORD PTR _i$[ebp], 12
cmp	DWORD PTR _aSyscall[ecx+8], 0
je	SHORT $LN8@winSetSyst
imul	edx, DWORD PTR _i$[ebp], 12
imul	eax, DWORD PTR _i$[ebp], 12
mov	ecx, DWORD PTR _aSyscall[edx+8]
mov	DWORD PTR _aSyscall[eax+4], ecx
jmp	SHORT $LN10@winSetSyst
jmp	SHORT $LN7@winSetSyst
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@winSetSyst
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 76			
jae	SHORT $LN7@winSetSyst
imul	eax, DWORD PTR _i$[ebp], 12
mov	ecx, DWORD PTR _aSyscall[eax]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@winSetSyst
imul	eax, DWORD PTR _i$[ebp], 12
cmp	DWORD PTR _aSyscall[eax+8], 0
jne	SHORT $LN2@winSetSyst
imul	ecx, DWORD PTR _i$[ebp], 12
imul	edx, DWORD PTR _i$[ebp], 12
mov	eax, DWORD PTR _aSyscall[ecx+4]
mov	DWORD PTR _aSyscall[edx+8], eax
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _pNewFunc$[ebp], 0
jne	SHORT $LN1@winSetSyst
imul	ecx, DWORD PTR _i$[ebp], 12
mov	edx, DWORD PTR _aSyscall[ecx+8]
mov	DWORD PTR _pNewFunc$[ebp], edx
imul	eax, DWORD PTR _i$[ebp], 12
mov	ecx, DWORD PTR _pNewFunc$[ebp]
mov	DWORD PTR _aSyscall[eax+4], ecx
jmp	SHORT $LN7@winSetSyst
jmp	SHORT $LN5@winSetSyst
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_removeElementGivenHash PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _elem$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN6@removeElem
mov	ecx, DWORD PTR _elem$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx], ecx
jmp	SHORT $LN5@removeElem
mov	edx, DWORD PTR _pH$[ebp]
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _elem$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN4@removeElem
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _elem$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN3@removeElem
mov	edx, DWORD PTR _pH$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR _h$[ebp]
lea	edx, DWORD PTR [eax+ecx*8]
mov	DWORD PTR _pEntry$[ebp], edx
mov	eax, DWORD PTR _pEntry$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _elem$[ebp]
jne	SHORT $LN2@removeElem
mov	edx, DWORD PTR _pEntry$[ebp]
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pEntry$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
mov	ecx, DWORD PTR _pEntry$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _elem$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR [eax+4]
sub	ecx, 1
mov	edx, DWORD PTR _pH$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN7@removeElem
mov	ecx, DWORD PTR _pH$[ebp]
push	ecx
call	_sqlite3HashClear
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_findElementGivenHash PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN5@findElemen
mov	ecx, DWORD PTR _pH$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _h$[ebp]
lea	ecx, DWORD PTR [edx+eax*8]
mov	DWORD PTR _pEntry$1[ebp], ecx
mov	edx, DWORD PTR _pEntry$1[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _elem$[ebp], eax
mov	ecx, DWORD PTR _pEntry$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _count$[ebp], edx
jmp	SHORT $LN3@findElemen
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _elem$[ebp], ecx
mov	edx, DWORD PTR _pH$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _count$[ebp], eax
mov	ecx, DWORD PTR _count$[ebp]
mov	DWORD PTR tv75[ebp], ecx
mov	edx, DWORD PTR _count$[ebp]
sub	edx, 1
mov	DWORD PTR _count$[ebp], edx
cmp	DWORD PTR tv75[ebp], 0
je	SHORT $LN2@findElemen
cmp	DWORD PTR _elem$[ebp], 0
je	SHORT $LN2@findElemen
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax+16]
cmp	ecx, DWORD PTR _nKey$[ebp]
jne	SHORT $LN1@findElemen
mov	edx, DWORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _pKey$[ebp]
push	eax
mov	ecx, DWORD PTR _elem$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@findElemen
mov	eax, DWORD PTR _elem$[ebp]
jmp	SHORT $LN6@findElemen
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _elem$[ebp], ecx
jmp	SHORT $LN3@findElemen
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_rehash	PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _new_size$[ebp]
shl	eax, 3
cmp	eax, 1024				
jbe	SHORT $LN6@rehash
mov	DWORD PTR _new_size$[ebp], 128		
mov	ecx, DWORD PTR _pH$[ebp]
mov	edx, DWORD PTR _new_size$[ebp]
cmp	edx, DWORD PTR [ecx]
jne	SHORT $LN5@rehash
xor	eax, eax
jmp	$LN7@rehash
call	_sqlite3BeginBenignMalloc
mov	eax, DWORD PTR _new_size$[ebp]
shl	eax, 3
push	eax
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _new_ht$[ebp], eax
call	_sqlite3EndBenignMalloc
cmp	DWORD PTR _new_ht$[ebp], 0
jne	SHORT $LN4@rehash
xor	eax, eax
jmp	$LN7@rehash
mov	ecx, DWORD PTR _pH$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR _new_ht$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _new_ht$[ebp]
push	edx
call	_sqlite3MallocSize
add	esp, 4
shr	eax, 3
mov	DWORD PTR _new_size$[ebp], eax
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR _new_size$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _new_size$[ebp]
shl	edx, 3
push	edx
push	0
mov	eax, DWORD PTR _new_ht$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pH$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _elem$[ebp], edx
mov	eax, DWORD PTR _pH$[ebp]
mov	DWORD PTR [eax+8], 0
jmp	SHORT $LN3@rehash
mov	ecx, DWORD PTR _next_elem$[ebp]
mov	DWORD PTR _elem$[ebp], ecx
cmp	DWORD PTR _elem$[ebp], 0
je	SHORT $LN1@rehash
mov	edx, DWORD PTR _elem$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _elem$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_strHash
add	esp, 8
xor	edx, edx
div	DWORD PTR _new_size$[ebp]
mov	DWORD PTR _h$1[ebp], edx
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _next_elem$[ebp], ecx
mov	edx, DWORD PTR _elem$[ebp]
push	edx
mov	eax, DWORD PTR _h$1[ebp]
mov	ecx, DWORD PTR _new_ht$[ebp]
lea	edx, DWORD PTR [ecx+eax*8]
push	edx
mov	eax, DWORD PTR _pH$[ebp]
push	eax
call	_insertElement
add	esp, 12					
jmp	SHORT $LN2@rehash
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_insertElement PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pEntry$[ebp], 0
je	SHORT $LN7@insertElem
mov	eax, DWORD PTR _pEntry$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN10@insertElem
mov	ecx, DWORD PTR _pEntry$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR tv68[ebp], edx
jmp	SHORT $LN11@insertElem
mov	DWORD PTR tv68[ebp], 0
mov	eax, DWORD PTR tv68[ebp]
mov	DWORD PTR _pHead$[ebp], eax
mov	ecx, DWORD PTR _pEntry$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 1
mov	eax, DWORD PTR _pEntry$[ebp]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _pEntry$[ebp]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+4], edx
jmp	SHORT $LN6@insertElem
mov	DWORD PTR _pHead$[ebp], 0
cmp	DWORD PTR _pHead$[ebp], 0
je	SHORT $LN5@insertElem
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _pHead$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pHead$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pHead$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN4@insertElem
mov	eax, DWORD PTR _pHead$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN3@insertElem
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _pHead$[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], eax
jmp	SHORT $LN8@insertElem
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pH$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN1@insertElem
mov	edx, DWORD PTR _pH$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_strHash PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _h$[ebp], 0
cmp	DWORD PTR _nKey$[ebp], 0
jle	SHORT $LN1@strHash
mov	eax, DWORD PTR _h$[ebp]
shl	eax, 3
xor	eax, DWORD PTR _h$[ebp]
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[edx]
xor	eax, ecx
mov	DWORD PTR _h$[ebp], eax
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _nKey$[ebp]
sub	eax, 1
mov	DWORD PTR _nKey$[ebp], eax
jmp	SHORT $LN2@strHash
mov	eax, DWORD PTR _h$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_logBadConnection PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zType$[ebp]
push	eax
push	OFFSET $SG86497
push	21					
call	_sqlite3_log
add	esp, 12					
pop	ebp
ret	0
ENDP
_compare2pow63 PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _c$[ebp], 0
mov	DWORD PTR _pow63$[ebp], OFFSET $SG86288
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@compare2po
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
jne	SHORT $LN2@compare2po
cmp	DWORD PTR _i$[ebp], 18			
jge	SHORT $LN2@compare2po
mov	ecx, DWORD PTR _i$[ebp]
imul	ecx, DWORD PTR _incr$[ebp]
mov	edx, DWORD PTR _zNum$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
mov	ecx, DWORD PTR _pow63$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR [ecx]
sub	eax, edx
imul	eax, eax, 10
mov	DWORD PTR _c$[ebp], eax
jmp	SHORT $LN3@compare2po
cmp	DWORD PTR _c$[ebp], 0
jne	SHORT $LN1@compare2po
imul	ecx, DWORD PTR _incr$[ebp], 18
mov	edx, DWORD PTR _zNum$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
sub	eax, 56					
mov	DWORD PTR _c$[ebp], eax
mov	eax, DWORD PTR _c$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_renderLogMsg PROC
push	ebp
mov	ebp, esp
sub	esp, 244				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	0
push	210					
lea	eax, DWORD PTR _zMsg$[ebp]
push	eax
lea	ecx, DWORD PTR _acc$[ebp]
push	ecx
call	_sqlite3StrAccumInit
add	esp, 16					
mov	BYTE PTR _acc$[ebp+24], 0
mov	edx, DWORD PTR _ap$[ebp]
push	edx
mov	eax, DWORD PTR _zFormat$[ebp]
push	eax
push	0
lea	ecx, DWORD PTR _acc$[ebp]
push	ecx
call	_sqlite3VXPrintf
add	esp, 16					
lea	edx, DWORD PTR _acc$[ebp]
push	edx
call	_sqlite3StrAccumFinish
add	esp, 4
push	eax
mov	eax, DWORD PTR _iErrCode$[ebp]
push	eax
mov	ecx, DWORD PTR _sqlite3Config+256
push	ecx
call	DWORD PTR _sqlite3Config+252
add	esp, 12					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_enlargeAndAppend PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3StrAccumEnlarge
add	esp, 8
mov	DWORD PTR _N$[ebp], eax
cmp	DWORD PTR _N$[ebp], 0
jle	SHORT $LN2@enlargeAnd
mov	edx, DWORD PTR _N$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+12]
push	edx
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, DWORD PTR _N$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], edx
pop	ebp
ret	0
ENDP
_sqlite3StrAccumEnlarge PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+25]
test	ecx, ecx
je	SHORT $LN10@sqlite3Str
xor	eax, eax
jmp	$LN11@sqlite3Str
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+24]
test	eax, eax
jne	SHORT $LN9@sqlite3Str
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+16]
sub	eax, DWORD PTR [edx+12]
sub	eax, 1
mov	DWORD PTR _N$[ebp], eax
push	2
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_setStrAccumError
add	esp, 8
mov	eax, DWORD PTR _N$[ebp]
jmp	$LN11@sqlite3Str
jmp	$LN8@sqlite3Str
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [edx+8]
cmp	ecx, DWORD PTR [eax+4]
jne	SHORT $LN13@sqlite3Str
mov	DWORD PTR tv80[ebp], 0
jmp	SHORT $LN14@sqlite3Str
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR tv80[ebp], eax
mov	ecx, DWORD PTR tv80[ebp]
mov	DWORD PTR _zOld$2[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
cdq
mov	DWORD PTR _szNew$1[ebp], eax
mov	DWORD PTR _szNew$1[ebp+4], edx
mov	eax, DWORD PTR _N$[ebp]
add	eax, 1
cdq
add	eax, DWORD PTR _szNew$1[ebp]
adc	edx, DWORD PTR _szNew$1[ebp+4]
mov	DWORD PTR _szNew$1[ebp], eax
mov	DWORD PTR _szNew$1[ebp+4], edx
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+20]
cdq
mov	DWORD PTR tv190[ebp], eax
mov	DWORD PTR tv190[ebp+4], edx
mov	ecx, DWORD PTR _szNew$1[ebp+4]
cmp	ecx, DWORD PTR tv190[ebp+4]
jl	SHORT $LN7@sqlite3Str
jg	SHORT $LN15@sqlite3Str
mov	edx, DWORD PTR _szNew$1[ebp]
cmp	edx, DWORD PTR tv190[ebp]
jbe	SHORT $LN7@sqlite3Str
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3StrAccumReset
add	esp, 4
push	2
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_setStrAccumError
add	esp, 8
xor	eax, eax
jmp	$LN11@sqlite3Str
jmp	SHORT $LN6@sqlite3Str
mov	edx, DWORD PTR _szNew$1[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+16], edx
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+24]
cmp	edx, 1
jne	SHORT $LN5@sqlite3Str
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _zOld$2[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _zNew$[ebp], eax
jmp	SHORT $LN4@sqlite3Str
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _zOld$2[ebp]
push	ecx
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _zNew$[ebp], eax
cmp	DWORD PTR _zNew$[ebp], 0
je	SHORT $LN3@sqlite3Str
cmp	DWORD PTR _zOld$2[ebp], 0
jne	SHORT $LN2@sqlite3Str
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+12], 0
jle	SHORT $LN2@sqlite3Str
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _zNew$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _zNew$[ebp]
mov	DWORD PTR [edx+8], eax
jmp	SHORT $LN8@sqlite3Str
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3StrAccumReset
add	esp, 4
push	1
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_setStrAccumError
add	esp, 8
xor	eax, eax
jmp	SHORT $LN11@sqlite3Str
mov	eax, DWORD PTR _N$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getTextArg PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx+4]
jg	SHORT $LN1@getTextArg
xor	eax, eax
jmp	SHORT $LN2@getTextArg
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR tv75[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR tv75[ebp]
push	edx
call	_sqlite3_value_text
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getDoubleArg PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx+4]
jg	SHORT $LN1@getDoubleA
fldz
jmp	SHORT $LN2@getDoubleA
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR tv75[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR tv75[ebp]
push	edx
call	_sqlite3_value_double
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getIntArg PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx+4]
jg	SHORT $LN1@getIntArg
xor	eax, eax
xor	edx, edx
jmp	SHORT $LN2@getIntArg
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR tv75[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR tv75[ebp]
push	edx
call	_sqlite3_value_int64
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setStrAccumError PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR _eError$[ebp]
mov	BYTE PTR [eax+25], cl
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], 0
pop	ebp
ret	0
ENDP
_et_getdigit PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _cnt$[ebp]
cmp	DWORD PTR [eax], 0
jg	SHORT $LN1@et_getdigi
mov	al, 48					
jmp	SHORT $LN2@et_getdigi
mov	ecx, DWORD PTR _cnt$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
mov	eax, DWORD PTR _cnt$[ebp]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _val$[ebp]
cvttsd2si edx, QWORD PTR [ecx]
mov	DWORD PTR _digit$[ebp], edx
cvtsi2sd xmm0, DWORD PTR _digit$[ebp]
movsd	QWORD PTR _d$[ebp], xmm0
mov	eax, DWORD PTR _digit$[ebp]
add	eax, 48					
mov	DWORD PTR _digit$[ebp], eax
mov	ecx, DWORD PTR _val$[ebp]
movsd	xmm0, QWORD PTR [ecx]
subsd	xmm0, QWORD PTR _d$[ebp]
mulsd	xmm0, QWORD PTR __real@4024000000000000
mov	edx, DWORD PTR _val$[ebp]
movsd	QWORD PTR [edx], xmm0
mov	al, BYTE PTR _digit$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isLookaside PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR [eax+268]
jb	SHORT $LN3@isLookasid
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _p$[ebp]
cmp	eax, DWORD PTR [edx+272]
jae	SHORT $LN3@isLookasid
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@isLookasid
mov	DWORD PTR tv68[ebp], 0
mov	eax, DWORD PTR tv68[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_mallocWithAlarm PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
push	edi
mov	eax, DWORD PTR _n$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+52
add	esp, 4
mov	DWORD PTR _nFull$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
push	5
call	_sqlite3StatusSet
add	esp, 8
cmp	DWORD PTR _mem0+16, 0
je	SHORT $LN4@mallocWith
push	0
call	_sqlite3StatusValue
add	esp, 4
mov	DWORD PTR _nUsed$1[ebp], eax
mov	eax, DWORD PTR _nUsed$1[ebp]
cdq
mov	ecx, eax
mov	esi, edx
mov	eax, DWORD PTR _nFull$[ebp]
cdq
mov	edi, DWORD PTR _mem0+8
sub	edi, eax
mov	eax, DWORD PTR _mem0+12
sbb	eax, edx
mov	DWORD PTR tv138[ebp], ecx
mov	DWORD PTR tv138[ebp+4], esi
mov	DWORD PTR tv141[ebp], edi
mov	DWORD PTR tv141[ebp+4], eax
mov	ecx, DWORD PTR tv138[ebp+4]
cmp	ecx, DWORD PTR tv141[ebp+4]
jl	SHORT $LN3@mallocWith
jg	SHORT $LN7@mallocWith
mov	edx, DWORD PTR tv138[ebp]
cmp	edx, DWORD PTR tv141[ebp]
jb	SHORT $LN3@mallocWith
mov	DWORD PTR _mem0+36, 1
mov	eax, DWORD PTR _nFull$[ebp]
push	eax
call	_sqlite3MallocAlarm
add	esp, 4
jmp	SHORT $LN4@mallocWith
mov	DWORD PTR _mem0+36, 0
mov	ecx, DWORD PTR _nFull$[ebp]
push	ecx
call	DWORD PTR _sqlite3Config+36
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@mallocWith
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3MallocSize
add	esp, 4
mov	DWORD PTR _nFull$[ebp], eax
mov	eax, DWORD PTR _nFull$[ebp]
push	eax
push	0
call	_sqlite3StatusAdd
add	esp, 8
push	1
push	9
call	_sqlite3StatusAdd
add	esp, 8
mov	ecx, DWORD PTR _pp$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _nFull$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MallocAlarm PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _mem0+16, 0
jne	SHORT $LN1@sqlite3Mal
jmp	SHORT $LN2@sqlite3Mal
mov	eax, DWORD PTR _mem0+16
mov	DWORD PTR _xCallback$[ebp], eax
push	0
call	_sqlite3StatusValue
add	esp, 4
cdq
mov	DWORD PTR _nowUsed$[ebp], eax
mov	DWORD PTR _nowUsed$[ebp+4], edx
mov	ecx, DWORD PTR _mem0+20
mov	DWORD PTR _pArg$[ebp], ecx
mov	DWORD PTR _mem0+16, 0
mov	edx, DWORD PTR _mem0
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _nowUsed$[ebp+4]
push	ecx
mov	edx, DWORD PTR _nowUsed$[ebp]
push	edx
mov	eax, DWORD PTR _pArg$[ebp]
push	eax
call	DWORD PTR _xCallback$[ebp]
add	esp, 16					
mov	ecx, DWORD PTR _mem0
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _xCallback$[ebp]
mov	DWORD PTR _mem0+16, edx
mov	eax, DWORD PTR _pArg$[ebp]
mov	DWORD PTR _mem0+20, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MemoryAlarm PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _xCallback$[ebp]
mov	DWORD PTR _mem0+16, ecx
mov	edx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR _mem0+20, edx
mov	eax, DWORD PTR _iThreshold$[ebp]
mov	DWORD PTR _mem0+8, eax
mov	ecx, DWORD PTR _iThreshold$[ebp+4]
mov	DWORD PTR _mem0+12, ecx
push	0
call	_sqlite3StatusValue
add	esp, 4
mov	DWORD PTR _nUsed$[ebp], eax
cmp	DWORD PTR _iThreshold$[ebp+4], 0
jl	SHORT $LN3@sqlite3Mem
jg	SHORT $LN5@sqlite3Mem
cmp	DWORD PTR _iThreshold$[ebp], 0
jbe	SHORT $LN3@sqlite3Mem
mov	eax, DWORD PTR _nUsed$[ebp]
cdq
mov	DWORD PTR tv86[ebp], eax
mov	DWORD PTR tv86[ebp+4], edx
mov	edx, DWORD PTR _iThreshold$[ebp+4]
cmp	edx, DWORD PTR tv86[ebp+4]
jg	SHORT $LN3@sqlite3Mem
jl	SHORT $LN6@sqlite3Mem
mov	eax, DWORD PTR _iThreshold$[ebp]
cmp	eax, DWORD PTR tv86[ebp]
ja	SHORT $LN3@sqlite3Mem
mov	DWORD PTR tv70[ebp], 1
jmp	SHORT $LN4@sqlite3Mem
mov	DWORD PTR tv70[ebp], 0
mov	ecx, DWORD PTR tv70[ebp]
mov	DWORD PTR _mem0+36, ecx
mov	edx, DWORD PTR _mem0
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_softHeapLimitEnforcer PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _allocSize$[ebp]
push	eax
call	_sqlite3_release_memory
add	esp, 4
pop	ebp
ret	0
ENDP
_winMutexLeave PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR __imp__LeaveCriticalSection@4
pop	ebp
ret	0
ENDP
_winMutexTry PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 5
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winMutexEnter PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR __imp__EnterCriticalSection@4
pop	ebp
ret	0
ENDP
_winMutexFree PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR __imp__DeleteCriticalSection@4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
pop	ebp
ret	0
ENDP
_winMutexAlloc PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _iType$[ebp]
mov	DWORD PTR tv64[ebp], eax
cmp	DWORD PTR tv64[ebp], 0
jl	SHORT $LN1@winMutexAl
cmp	DWORD PTR tv64[ebp], 1
jle	SHORT $LN3@winMutexAl
jmp	SHORT $LN1@winMutexAl
push	28					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@winMutexAl
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	DWORD PTR __imp__InitializeCriticalSection@4
jmp	SHORT $LN4@winMutexAl
mov	edx, DWORD PTR _iType$[ebp]
sub	edx, 2
imul	eax, edx, 28
add	eax, OFFSET _winMutex_staticMutexes
mov	DWORD PTR _p$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winMutexEnd PROC
push	ebp
mov	ebp, esp
push	ecx
xor	ecx, ecx
mov	edx, OFFSET _winMutex_lock
mov	eax, 1
lock	 cmpxchg DWORD PTR [edx], ecx
cmp	eax, 1
jne	SHORT $LN5@winMutexEn
cmp	DWORD PTR _winMutex_isInit, 1
jne	SHORT $LN5@winMutexEn
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN3@winMutexEn
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
cmp	DWORD PTR _i$1[ebp], 6
jge	SHORT $LN1@winMutexEn
imul	ecx, DWORD PTR _i$1[ebp], 28
add	ecx, OFFSET _winMutex_staticMutexes
push	ecx
call	DWORD PTR __imp__DeleteCriticalSection@4
jmp	SHORT $LN2@winMutexEn
mov	DWORD PTR _winMutex_isInit, 0
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_winMutexInit PROC
push	ebp
mov	ebp, esp
push	ecx
mov	ecx, 1
mov	edx, OFFSET _winMutex_lock
xor	eax, eax
lock	 cmpxchg DWORD PTR [edx], ecx
test	eax, eax
jne	SHORT $LN2@winMutexIn
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN6@winMutexIn
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
cmp	DWORD PTR _i$1[ebp], 6
jge	SHORT $LN4@winMutexIn
imul	ecx, DWORD PTR _i$1[ebp], 28
add	ecx, OFFSET _winMutex_staticMutexes
push	ecx
call	DWORD PTR __imp__InitializeCriticalSection@4
jmp	SHORT $LN5@winMutexIn
mov	DWORD PTR _winMutex_isInit, 1
jmp	SHORT $LN3@winMutexIn
cmp	DWORD PTR _winMutex_isInit, 0
jne	SHORT $LN3@winMutexIn
push	1
call	_sqlite3_win32_sleep
add	esp, 4
jmp	SHORT $LN2@winMutexIn
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_win32_sleep PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _milliseconds$[ebp]
push	eax
mov	ecx, 12					
imul	edx, ecx, 55
mov	eax, DWORD PTR _aSyscall[edx+4]
call	eax
pop	ebp
ret	0
ENDP
_noopMutexLeave PROC
push	ebp
mov	ebp, esp
pop	ebp
ret	0
ENDP
_noopMutexTry PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_noopMutexEnter PROC
push	ebp
mov	ebp, esp
pop	ebp
ret	0
ENDP
_noopMutexFree PROC
push	ebp
mov	ebp, esp
pop	ebp
ret	0
ENDP
_noopMutexAlloc PROC
push	ebp
mov	ebp, esp
mov	eax, 8
pop	ebp
ret	0
ENDP
_noopMutexEnd PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_noopMutexInit PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3MemShutdown PROC
push	ebp
mov	ebp, esp
pop	ebp
ret	0
ENDP
_sqlite3MemInit PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3MemRoundup PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _n$[ebp]
add	eax, 7
and	eax, -8					
pop	ebp
ret	0
ENDP
_sqlite3MemRealloc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _pPrior$[ebp]
push	ecx
call	_realloc
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@sqlite3Mem
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _pPrior$[ebp]
push	eax
call	__msize
add	esp, 4
push	eax
push	OFFSET $SG11750
push	7
call	_sqlite3_log
add	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MemSize PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pPrior$[ebp], 0
je	SHORT $LN3@sqlite3Mem
mov	eax, DWORD PTR _pPrior$[ebp]
push	eax
call	__msize
add	esp, 4
mov	DWORD PTR tv67[ebp], eax
jmp	SHORT $LN4@sqlite3Mem
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MemFree PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPrior$[ebp]
push	eax
call	_free
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3MemMalloc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
call	_malloc
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@sqlite3Mem
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
push	OFFSET $SG11732
push	7
call	_sqlite3_log
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_vfsUnlink PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pVfs$[ebp], 0
jne	SHORT $LN8@vfsUnlink
jmp	SHORT $LN9@vfsUnlink
mov	eax, DWORD PTR _vfsList
cmp	eax, DWORD PTR _pVfs$[ebp]
jne	SHORT $LN6@vfsUnlink
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _vfsList, edx
jmp	SHORT $LN9@vfsUnlink
cmp	DWORD PTR _vfsList, 0
je	SHORT $LN9@vfsUnlink
mov	eax, DWORD PTR _vfsList
mov	DWORD PTR _p$1[ebp], eax
mov	ecx, DWORD PTR _p$1[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN2@vfsUnlink
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR [edx+12]
cmp	eax, DWORD PTR _pVfs$[ebp]
je	SHORT $LN2@vfsUnlink
mov	ecx, DWORD PTR _p$1[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _p$1[ebp], edx
jmp	SHORT $LN3@vfsUnlink
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR [eax+12]
cmp	ecx, DWORD PTR _pVfs$[ebp]
jne	SHORT $LN9@vfsUnlink
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR [edx+12], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_ctimestampFunc PROC
push	ebp
mov	ebp, esp
push	0
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_datetimeFunc
add	esp, 12					
pop	ebp
ret	0
ENDP
_cdateFunc PROC
push	ebp
mov	ebp, esp
push	0
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_dateFunc
add	esp, 12					
pop	ebp
ret	0
ENDP
_ctimeFunc PROC
push	ebp
mov	ebp, esp
push	0
push	0
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_timeFunc
add	esp, 12					
pop	ebp
ret	0
ENDP
_strftimeFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 264				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
push	edi
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zFmt$[ebp], eax
cmp	DWORD PTR _zFmt$[ebp], 0
je	SHORT $LN41@strftimeFu
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
mov	edx, DWORD PTR _argv$[ebp]
add	edx, 4
push	edx
mov	eax, DWORD PTR _argc$[ebp]
sub	eax, 1
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_isDate
add	esp, 16					
test	eax, eax
je	SHORT $LN42@strftimeFu
jmp	$LN43@strftimeFu
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_context_db_handle
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
mov	DWORD PTR _n$[ebp], 1
mov	DWORD PTR _n$[ebp+4], 0
jmp	SHORT $LN40@strftimeFu
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	edx, DWORD PTR _n$[ebp+4]
adc	edx, 0
mov	DWORD PTR _n$[ebp], ecx
mov	DWORD PTR _n$[ebp+4], edx
mov	eax, DWORD PTR _zFmt$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	$LN38@strftimeFu
mov	edx, DWORD PTR _zFmt$[ebp]
add	edx, DWORD PTR _i$[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 37					
jne	$LN37@strftimeFu
mov	ecx, DWORD PTR _zFmt$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR [ecx+1]
mov	DWORD PTR tv93[ebp], edx
mov	eax, DWORD PTR tv93[ebp]
sub	eax, 37					
mov	DWORD PTR tv93[ebp], eax
cmp	DWORD PTR tv93[ebp], 82			
ja	$LN28@strftimeFu
mov	ecx, DWORD PTR tv93[ebp]
movzx	edx, BYTE PTR $LN47@strftimeFu[ecx]
jmp	DWORD PTR $LN51@strftimeFu[edx*4]
mov	eax, DWORD PTR _n$[ebp]
add	eax, 1
mov	ecx, DWORD PTR _n$[ebp+4]
adc	ecx, 0
mov	DWORD PTR _n$[ebp], eax
mov	DWORD PTR _n$[ebp+4], ecx
jmp	$LN35@strftimeFu
mov	edx, DWORD PTR _n$[ebp]
add	edx, 8
mov	eax, DWORD PTR _n$[ebp+4]
adc	eax, 0
mov	DWORD PTR _n$[ebp], edx
mov	DWORD PTR _n$[ebp+4], eax
jmp	SHORT $LN35@strftimeFu
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 3
mov	edx, DWORD PTR _n$[ebp+4]
adc	edx, 0
mov	DWORD PTR _n$[ebp], ecx
mov	DWORD PTR _n$[ebp+4], edx
jmp	SHORT $LN35@strftimeFu
mov	eax, DWORD PTR _n$[ebp]
add	eax, 8
mov	ecx, DWORD PTR _n$[ebp+4]
adc	ecx, 0
mov	DWORD PTR _n$[ebp], eax
mov	DWORD PTR _n$[ebp+4], ecx
jmp	SHORT $LN35@strftimeFu
mov	edx, DWORD PTR _n$[ebp]
add	edx, 50					
mov	eax, DWORD PTR _n$[ebp+4]
adc	eax, 0
mov	DWORD PTR _n$[ebp], edx
mov	DWORD PTR _n$[ebp+4], eax
jmp	SHORT $LN35@strftimeFu
jmp	$LN43@strftimeFu
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	$LN39@strftimeFu
cmp	DWORD PTR _n$[ebp+4], 0
ja	SHORT $LN27@strftimeFu
jb	SHORT $LN48@strftimeFu
cmp	DWORD PTR _n$[ebp], 100			
jae	SHORT $LN27@strftimeFu
lea	edx, DWORD PTR _zBuf$[ebp]
mov	DWORD PTR _z$[ebp], edx
jmp	$LN23@strftimeFu
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+ecx+88]
cdq
mov	DWORD PTR tv399[ebp], eax
mov	DWORD PTR tv399[ebp+4], edx
mov	eax, DWORD PTR _n$[ebp+4]
cmp	eax, DWORD PTR tv399[ebp+4]
jb	SHORT $LN25@strftimeFu
ja	SHORT $LN49@strftimeFu
mov	ecx, DWORD PTR _n$[ebp]
cmp	ecx, DWORD PTR tv399[ebp]
jbe	SHORT $LN25@strftimeFu
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error_toobig
add	esp, 4
jmp	$LN43@strftimeFu
jmp	SHORT $LN23@strftimeFu
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN23@strftimeFu
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error_nomem
add	esp, 4
jmp	$LN43@strftimeFu
lea	eax, DWORD PTR _x$[ebp]
push	eax
call	_computeJD
add	esp, 4
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
call	_computeYMD_HMS
add	esp, 4
mov	DWORD PTR _j$[ebp], 0
mov	edx, DWORD PTR _j$[ebp]
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN22@strftimeFu
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _zFmt$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	$LN20@strftimeFu
mov	eax, DWORD PTR _zFmt$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 37					
je	SHORT $LN19@strftimeFu
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR _zFmt$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR [edx], cl
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	$LN16@strftimeFu
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _zFmt$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv167[ebp], edx
mov	eax, DWORD PTR tv167[ebp]
sub	eax, 72					
mov	DWORD PTR tv167[ebp], eax
cmp	DWORD PTR tv167[ebp], 47		
ja	$LN1@strftimeFu
mov	ecx, DWORD PTR tv167[ebp]
movzx	edx, BYTE PTR $LN50@strftimeFu[ecx]
jmp	DWORD PTR $LN52@strftimeFu[edx*4]
mov	eax, DWORD PTR _x$[ebp+16]
push	eax
push	OFFSET $SG11260
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
push	3
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _j$[ebp]
add	edx, 2
mov	DWORD PTR _j$[ebp], edx
jmp	$LN16@strftimeFu
movsd	xmm0, QWORD PTR _x$[ebp+32]
movsd	QWORD PTR _s$1[ebp], xmm0
movsd	xmm0, QWORD PTR _s$1[ebp]
comisd	xmm0, QWORD PTR __real@404dffdf3b645a1d
jbe	SHORT $LN13@strftimeFu
movsd	xmm0, QWORD PTR __real@404dffdf3b645a1d
movsd	QWORD PTR _s$1[ebp], xmm0
sub	esp, 8
movsd	xmm0, QWORD PTR _s$1[ebp]
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG11264
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
push	7
call	_sqlite3_snprintf
add	esp, 20					
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR _j$[ebp], eax
jmp	$LN16@strftimeFu
mov	edx, DWORD PTR _x$[ebp+20]
push	edx
push	OFFSET $SG11266
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
push	3
call	_sqlite3_snprintf
add	esp, 16					
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 2
mov	DWORD PTR _j$[ebp], ecx
jmp	$LN16@strftimeFu
mov	ecx, 12					
lea	esi, DWORD PTR _x$[ebp]
lea	edi, DWORD PTR _y$4[ebp]
rep movsd
mov	BYTE PTR _y$4[ebp+42], 0
mov	DWORD PTR _y$4[ebp+12], 1
mov	DWORD PTR _y$4[ebp+16], 1
lea	edx, DWORD PTR _y$4[ebp]
push	edx
call	_computeJD
add	esp, 4
mov	eax, DWORD PTR _x$[ebp]
sub	eax, DWORD PTR _y$4[ebp]
mov	ecx, DWORD PTR _x$[ebp+4]
sbb	ecx, DWORD PTR _y$4[ebp+4]
add	eax, 43200000				
adc	ecx, 0
push	0
push	86400000				
push	ecx
push	eax
call	__alldiv
mov	DWORD PTR _nDay$3[ebp], eax
mov	edx, DWORD PTR _zFmt$[ebp]
add	edx, DWORD PTR _i$[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 87					
jne	SHORT $LN10@strftimeFu
mov	ecx, DWORD PTR _x$[ebp]
add	ecx, 43200000				
mov	edx, DWORD PTR _x$[ebp+4]
adc	edx, 0
push	0
push	86400000				
push	edx
push	ecx
call	__alldiv
push	0
push	7
push	edx
push	eax
call	__allrem
mov	DWORD PTR _wd$2[ebp], eax
mov	eax, DWORD PTR _nDay$3[ebp]
add	eax, 7
sub	eax, DWORD PTR _wd$2[ebp]
cdq
mov	ecx, 7
idiv	ecx
push	eax
push	OFFSET $SG11274
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
push	3
call	_sqlite3_snprintf
add	esp, 16					
mov	eax, DWORD PTR _j$[ebp]
add	eax, 2
mov	DWORD PTR _j$[ebp], eax
jmp	SHORT $LN9@strftimeFu
mov	ecx, DWORD PTR _nDay$3[ebp]
add	ecx, 1
push	ecx
push	OFFSET $SG11276
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
push	4
call	_sqlite3_snprintf
add	esp, 16					
mov	eax, DWORD PTR _j$[ebp]
add	eax, 3
mov	DWORD PTR _j$[ebp], eax
jmp	$LN16@strftimeFu
mov	edx, DWORD PTR _x$[ebp+4]
mov	ecx, DWORD PTR _x$[ebp]
call	__ltod3
divsd	xmm0, QWORD PTR __real@4194997000000000
sub	esp, 8
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG11278
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
push	20					
call	_sqlite3_snprintf
add	esp, 20					
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR _j$[ebp], eax
jmp	$LN16@strftimeFu
mov	eax, DWORD PTR _x$[ebp+12]
push	eax
push	OFFSET $SG11280
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
push	3
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _j$[ebp]
add	edx, 2
mov	DWORD PTR _j$[ebp], edx
jmp	$LN16@strftimeFu
mov	eax, DWORD PTR _x$[ebp+24]
push	eax
push	OFFSET $SG11282
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
push	3
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _j$[ebp]
add	edx, 2
mov	DWORD PTR _j$[ebp], edx
jmp	$LN16@strftimeFu
push	0
push	1000					
mov	eax, DWORD PTR _x$[ebp+4]
push	eax
mov	ecx, DWORD PTR _x$[ebp]
push	ecx
call	__alldiv
sub	eax, 413362496				
sbb	edx, 49					
push	edx
push	eax
push	OFFSET $SG11286
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
push	30					
call	_sqlite3_snprintf
add	esp, 20					
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR _j$[ebp], eax
jmp	$LN16@strftimeFu
cvttsd2si ecx, QWORD PTR _x$[ebp+32]
push	ecx
push	OFFSET $SG11289
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
push	3
call	_sqlite3_snprintf
add	esp, 16					
mov	eax, DWORD PTR _j$[ebp]
add	eax, 2
mov	DWORD PTR _j$[ebp], eax
jmp	$LN16@strftimeFu
mov	ecx, DWORD PTR _x$[ebp]
add	ecx, 129600000				
mov	edx, DWORD PTR _x$[ebp+4]
adc	edx, 0
push	0
push	86400000				
push	edx
push	ecx
call	__alldiv
push	0
push	7
push	edx
push	eax
call	__allrem
movsx	eax, al
add	eax, 48					
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN16@strftimeFu
mov	eax, DWORD PTR _x$[ebp+8]
push	eax
push	OFFSET $SG11293
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
push	5
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR _j$[ebp], eax
jmp	SHORT $LN16@strftimeFu
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _j$[ebp]
mov	BYTE PTR [eax], 37			
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
jmp	$LN21@strftimeFu
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
mov	BYTE PTR [edx], 0
lea	eax, DWORD PTR _zBuf$[ebp]
cmp	DWORD PTR _z$[ebp], eax
jne	SHORT $LN45@strftimeFu
mov	DWORD PTR tv334[ebp], -1
jmp	SHORT $LN46@strftimeFu
mov	DWORD PTR tv334[ebp], OFFSET _sqlite3MallocSize
mov	ecx, DWORD PTR tv334[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3_result_text
add	esp, 16					
pop	edi
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN33@strftimeFu
DD	$LN34@strftimeFu
DD	$LN29@strftimeFu
DD	$LN30@strftimeFu
DD	$LN32@strftimeFu
DD	$LN31@strftimeFu
DD	$LN28@strftimeFu
DB	0
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	1
DB	6
DB	2
DB	6
DB	6
DB	1
DB	6
DB	6
DB	6
DB	6
DB	6
DB	1
DB	6
DB	6
DB	6
DB	1
DB	6
DB	3
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	1
DB	6
DB	4
DB	6
DB	6
DB	6
DB	5
DB	6
DB	6
DB	1
DB	6
DB	6
DB	6
DB	6
DB	6
DB	2
DB	6
DB	6
DB	6
DB	0
npad	1
DD	$LN12@strftimeFu
DD	$LN8@strftimeFu
DD	$LN6@strftimeFu
DD	$LN4@strftimeFu
DD	$LN11@strftimeFu
DD	$LN2@strftimeFu
DD	$LN15@strftimeFu
DD	$LN14@strftimeFu
DD	$LN7@strftimeFu
DD	$LN5@strftimeFu
DD	$LN3@strftimeFu
DD	$LN1@strftimeFu
DB	0
DB	11					
DB	1
DB	11					
DB	11					
DB	2
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	3
DB	11					
DB	11					
DB	11					
DB	4
DB	11					
DB	5
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	6
DB	11					
DB	7
DB	11					
DB	11					
DB	11					
DB	4
DB	11					
DB	11					
DB	8
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	9
DB	11					
DB	11					
DB	11					
DB	10					
ENDP
_dateFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 152				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
lea	eax, DWORD PTR _x$[ebp]
push	eax
mov	ecx, DWORD PTR _argv$[ebp]
push	ecx
mov	edx, DWORD PTR _argc$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_isDate
add	esp, 16					
test	eax, eax
jne	SHORT $LN2@dateFunc
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
call	_computeYMD
add	esp, 4
mov	edx, DWORD PTR _x$[ebp+16]
push	edx
mov	eax, DWORD PTR _x$[ebp+12]
push	eax
mov	ecx, DWORD PTR _x$[ebp+8]
push	ecx
push	OFFSET $SG11207
lea	edx, DWORD PTR _zBuf$1[ebp]
push	edx
push	100					
call	_sqlite3_snprintf
add	esp, 24					
push	-1
push	-1
lea	eax, DWORD PTR _zBuf$1[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_timeFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 152				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
lea	eax, DWORD PTR _x$[ebp]
push	eax
mov	ecx, DWORD PTR _argv$[ebp]
push	ecx
mov	edx, DWORD PTR _argc$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_isDate
add	esp, 16					
test	eax, eax
jne	SHORT $LN1@timeFunc
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
call	_computeHMS
add	esp, 4
cvttsd2si edx, QWORD PTR _x$[ebp+32]
push	edx
mov	eax, DWORD PTR _x$[ebp+24]
push	eax
mov	ecx, DWORD PTR _x$[ebp+20]
push	ecx
push	OFFSET $SG11194
lea	edx, DWORD PTR _zBuf$1[ebp]
push	edx
push	100					
call	_sqlite3_snprintf
add	esp, 24					
push	-1
push	-1
lea	eax, DWORD PTR _zBuf$1[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_datetimeFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 152				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
lea	eax, DWORD PTR _x$[ebp]
push	eax
mov	ecx, DWORD PTR _argv$[ebp]
push	ecx
mov	edx, DWORD PTR _argc$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_isDate
add	esp, 16					
test	eax, eax
jne	SHORT $LN1@datetimeFu
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
call	_computeYMD_HMS
add	esp, 4
cvttsd2si edx, QWORD PTR _x$[ebp+32]
push	edx
mov	eax, DWORD PTR _x$[ebp+24]
push	eax
mov	ecx, DWORD PTR _x$[ebp+20]
push	ecx
mov	edx, DWORD PTR _x$[ebp+16]
push	edx
mov	eax, DWORD PTR _x$[ebp+12]
push	eax
mov	ecx, DWORD PTR _x$[ebp+8]
push	ecx
push	OFFSET $SG11180
lea	edx, DWORD PTR _zBuf$1[ebp]
push	edx
push	100					
call	_sqlite3_snprintf
add	esp, 36					
push	-1
push	-1
lea	eax, DWORD PTR _zBuf$1[ebp]
push	eax
mov	ecx, DWORD PTR _context$[ebp]
push	ecx
call	_sqlite3_result_text
add	esp, 16					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_juliandayFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
lea	eax, DWORD PTR _x$[ebp]
push	eax
mov	ecx, DWORD PTR _argv$[ebp]
push	ecx
mov	edx, DWORD PTR _argc$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_isDate
add	esp, 16					
test	eax, eax
jne	SHORT $LN1@juliandayF
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
call	_computeJD
add	esp, 4
mov	edx, DWORD PTR _x$[ebp+4]
mov	ecx, DWORD PTR _x$[ebp]
call	__ltod3
divsd	xmm0, QWORD PTR __real@4194997000000000
sub	esp, 8
movsd	QWORD PTR [esp], xmm0
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_double
add	esp, 12					
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_isDate	PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
push	48					
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_memset
add	esp, 12					
cmp	DWORD PTR _argc$[ebp], 0
jne	SHORT $LN11@isDate
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_setDateTimeToCurrent
add	esp, 8
jmp	$LN12@isDate
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR _eType$[ebp], eax
cmp	DWORD PTR _eType$[ebp], 2
je	SHORT $LN9@isDate
cmp	DWORD PTR _eType$[ebp], 1
jne	SHORT $LN10@isDate
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3_value_double
add	esp, 4
fstp	QWORD PTR tv156[ebp]
movsd	xmm0, QWORD PTR tv156[ebp]
mulsd	xmm0, QWORD PTR __real@4194997000000000
addsd	xmm0, QWORD PTR __real@3fe0000000000000
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+42], 1
jmp	SHORT $LN7@isDate
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN6@isDate
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_parseDateOrTime
add	esp, 12					
test	eax, eax
je	SHORT $LN7@isDate
mov	eax, 1
jmp	SHORT $LN12@isDate
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN5@isDate
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _argc$[ebp]
jge	SHORT $LN3@isDate
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN1@isDate
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_parseModifier
add	esp, 12					
test	eax, eax
je	SHORT $LN2@isDate
mov	eax, 1
jmp	SHORT $LN12@isDate
jmp	SHORT $LN4@isDate
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_parseModifier PROC
push	ebp
mov	ebp, esp
sub	esp, 176				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1
lea	eax, DWORD PTR _zBuf$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	DWORD PTR _n$[ebp], 0
jmp	SHORT $LN51@parseModif
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
cmp	DWORD PTR _n$[ebp], 29			
jge	SHORT $LN49@parseModif
mov	edx, DWORD PTR _zMod$[ebp]
add	edx, DWORD PTR _n$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN49@parseModif
mov	ecx, DWORD PTR _zMod$[ebp]
add	ecx, DWORD PTR _n$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _n$[ebp]
mov	cl, BYTE PTR _sqlite3UpperToLower[edx]
mov	BYTE PTR [eax], cl
jmp	SHORT $LN50@parseModif
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _n$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
mov	DWORD PTR tv82[ebp], eax
mov	ecx, DWORD PTR tv82[ebp]
sub	ecx, 43					
mov	DWORD PTR tv82[ebp], ecx
cmp	DWORD PTR tv82[ebp], 76			
ja	$LN1@parseModif
mov	edx, DWORD PTR tv82[ebp]
movzx	eax, BYTE PTR $LN58@parseModif[edx]
jmp	DWORD PTR $LN60@parseModif[eax*4]
push	OFFSET $SG11049
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN45@parseModif
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_computeJD
add	esp, 4
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pCtx$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_localtimeOffset
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_clearYMD_HMS_TZ
add	esp, 4
jmp	$LN47@parseModif
push	OFFSET $SG11052
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN43@parseModif
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, BYTE PTR [ecx+42]
test	edx, edx
je	SHORT $LN43@parseModif
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 43200				
mov	edx, DWORD PTR [eax+4]
adc	edx, 0
push	0
push	86400					
push	edx
push	ecx
call	__alldiv
add	eax, 1045635584				
adc	edx, 49096				
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_clearYMD_HMS_TZ
add	esp, 4
mov	DWORD PTR _rc$[ebp], 0
jmp	$LN40@parseModif
push	OFFSET $SG11056
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	$LN40@parseModif
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_computeJD
add	esp, 4
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_localtimeOffset
add	esp, 12					
mov	DWORD PTR _c1$3[ebp], eax
mov	DWORD PTR _c1$3[ebp+4], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN40@parseModif
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, DWORD PTR _c1$3[ebp]
mov	ecx, DWORD PTR [edx+4]
sbb	ecx, DWORD PTR _c1$3[ebp+4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_clearYMD_HMS_TZ
add	esp, 4
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _pCtx$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_localtimeOffset
add	esp, 12					
mov	ecx, DWORD PTR _c1$3[ebp]
sub	ecx, eax
mov	eax, DWORD PTR _c1$3[ebp+4]
sbb	eax, edx
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx]
adc	eax, DWORD PTR [edx+4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], ecx
mov	DWORD PTR [edx+4], eax
jmp	$LN47@parseModif
push	8
push	OFFSET $SG11062
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strncmp
add	esp, 12					
test	eax, eax
jne	$LN38@parseModif
push	1
mov	ecx, 1
shl	ecx, 3
add	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	edx, DWORD PTR _r$[ebp]
push	edx
mov	eax, 1
shl	eax, 3
add	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3AtoF
add	esp, 16					
test	eax, eax
je	$LN38@parseModif
cvttsd2si ecx, QWORD PTR _r$[ebp]
mov	DWORD PTR _n$[ebp], ecx
cvtsi2sd xmm0, DWORD PTR _n$[ebp]
ucomisd	xmm0, QWORD PTR _r$[ebp]
lahf
test	ah, 68					
jp	$LN38@parseModif
cmp	DWORD PTR _n$[ebp], 0
jl	$LN38@parseModif
movsd	xmm0, QWORD PTR __real@401c000000000000
comisd	xmm0, QWORD PTR _r$[ebp]
jbe	$LN38@parseModif
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_computeYMD_HMS
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+43], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+42], 0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_computeJD
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 129600000				
mov	edx, DWORD PTR [eax+4]
adc	edx, 0
push	0
push	86400000				
push	edx
push	ecx
call	__alldiv
push	0
push	7
push	edx
push	eax
call	__allrem
mov	DWORD PTR _Z$7[ebp], eax
mov	DWORD PTR _Z$7[ebp+4], edx
mov	eax, DWORD PTR _n$[ebp]
cdq
mov	DWORD PTR tv584[ebp], eax
mov	DWORD PTR tv584[ebp+4], edx
mov	eax, DWORD PTR _Z$7[ebp+4]
cmp	eax, DWORD PTR tv584[ebp+4]
jl	SHORT $LN37@parseModif
jg	SHORT $LN59@parseModif
mov	ecx, DWORD PTR _Z$7[ebp]
cmp	ecx, DWORD PTR tv584[ebp]
jbe	SHORT $LN37@parseModif
mov	edx, DWORD PTR _Z$7[ebp]
sub	edx, 7
mov	eax, DWORD PTR _Z$7[ebp+4]
sbb	eax, 0
mov	DWORD PTR _Z$7[ebp], edx
mov	DWORD PTR _Z$7[ebp+4], eax
mov	eax, DWORD PTR _n$[ebp]
cdq
sub	eax, DWORD PTR _Z$7[ebp]
sbb	edx, DWORD PTR _Z$7[ebp+4]
push	0
push	86400000				
push	edx
push	eax
call	__allmul
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_clearYMD_HMS_TZ
add	esp, 4
mov	DWORD PTR _rc$[ebp], 0
jmp	$LN47@parseModif
push	9
push	OFFSET $SG11067
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strncmp
add	esp, 12					
test	eax, eax
je	SHORT $LN35@parseModif
jmp	$LN47@parseModif
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 9
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_computeYMD
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+41], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+20], 0
mov	eax, DWORD PTR _p$[ebp]
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [eax+32], xmm0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+43], 0
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+42], 0
push	OFFSET $SG11069
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN34@parseModif
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+16], 1
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN30@parseModif
push	OFFSET $SG11072
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN32@parseModif
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_computeYMD
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], 1
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN30@parseModif
push	OFFSET $SG11075
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN30@parseModif
mov	DWORD PTR _rc$[ebp], 0
jmp	$LN47@parseModif
mov	DWORD PTR _n$[ebp], 1
jmp	SHORT $LN28@parseModif
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _n$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN26@parseModif
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _n$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 58					
je	SHORT $LN26@parseModif
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _n$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
jne	SHORT $LN26@parseModif
jmp	SHORT $LN27@parseModif
push	1
mov	eax, DWORD PTR _n$[ebp]
push	eax
lea	ecx, DWORD PTR _r$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3AtoF
add	esp, 16					
test	eax, eax
jne	SHORT $LN25@parseModif
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN47@parseModif
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _n$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 58					
jne	$LN24@parseModif
mov	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR _z2$8[ebp], edx
mov	eax, DWORD PTR _z2$8[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 4
jne	SHORT $LN23@parseModif
mov	eax, DWORD PTR _z2$8[ebp]
add	eax, 1
mov	DWORD PTR _z2$8[ebp], eax
push	48					
push	0
lea	ecx, DWORD PTR _tx$9[ebp]
push	ecx
call	_memset
add	esp, 12					
lea	edx, DWORD PTR _tx$9[ebp]
push	edx
mov	eax, DWORD PTR _z2$8[ebp]
push	eax
call	_parseHhMmSs
add	esp, 8
test	eax, eax
je	SHORT $LN22@parseModif
jmp	$LN47@parseModif
lea	ecx, DWORD PTR _tx$9[ebp]
push	ecx
call	_computeJD
add	esp, 4
mov	edx, DWORD PTR _tx$9[ebp]
sub	edx, 43200000				
mov	eax, DWORD PTR _tx$9[ebp+4]
sbb	eax, 0
mov	DWORD PTR _tx$9[ebp], edx
mov	DWORD PTR _tx$9[ebp+4], eax
push	0
push	86400000				
mov	ecx, DWORD PTR _tx$9[ebp+4]
push	ecx
mov	edx, DWORD PTR _tx$9[ebp]
push	edx
call	__alldiv
mov	DWORD PTR _day$1[ebp], eax
mov	DWORD PTR _day$1[ebp+4], edx
push	0
push	86400000				
mov	eax, DWORD PTR _day$1[ebp+4]
push	eax
mov	ecx, DWORD PTR _day$1[ebp]
push	ecx
call	__allmul
mov	ecx, DWORD PTR _tx$9[ebp]
sub	ecx, eax
mov	eax, DWORD PTR _tx$9[ebp+4]
sbb	eax, edx
mov	DWORD PTR _tx$9[ebp], ecx
mov	DWORD PTR _tx$9[ebp+4], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 45					
jne	SHORT $LN21@parseModif
mov	edx, DWORD PTR _tx$9[ebp]
neg	edx
mov	eax, DWORD PTR _tx$9[ebp+4]
adc	eax, 0
neg	eax
mov	DWORD PTR _tx$9[ebp], edx
mov	DWORD PTR _tx$9[ebp+4], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_computeJD
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_clearYMD_HMS_TZ
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, DWORD PTR _tx$9[ebp]
mov	edx, DWORD PTR [eax+4]
adc	edx, DWORD PTR _tx$9[ebp+4]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	DWORD PTR _rc$[ebp], 0
jmp	$LN47@parseModif
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 1
je	SHORT $LN19@parseModif
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
jmp	SHORT $LN20@parseModif
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _n$[ebp], 10			
jg	SHORT $LN17@parseModif
cmp	DWORD PTR _n$[ebp], 3
jge	SHORT $LN18@parseModif
jmp	$LN47@parseModif
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _n$[ebp]
movsx	edx, BYTE PTR [ecx-1]
cmp	edx, 115				
jne	SHORT $LN16@parseModif
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _n$[ebp]
mov	BYTE PTR [eax-1], 0
mov	ecx, DWORD PTR _n$[ebp]
sub	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_computeJD
add	esp, 4
mov	DWORD PTR _rc$[ebp], 0
movsd	xmm0, QWORD PTR __real@0000000000000000
comisd	xmm0, QWORD PTR _r$[ebp]
jbe	SHORT $LN54@parseModif
movsd	xmm0, QWORD PTR __real@bfe0000000000000
movsd	QWORD PTR tv311[ebp], xmm0
jmp	SHORT $LN55@parseModif
movsd	xmm0, QWORD PTR __real@3fe0000000000000
movsd	QWORD PTR tv311[ebp], xmm0
movsd	xmm0, QWORD PTR tv311[ebp]
movsd	QWORD PTR _rRounder$5[ebp], xmm0
cmp	DWORD PTR _n$[ebp], 3
jne	SHORT $LN15@parseModif
push	OFFSET $SG11099
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN15@parseModif
movsd	xmm0, QWORD PTR _r$[ebp]
mulsd	xmm0, QWORD PTR __real@4194997000000000
addsd	xmm0, QWORD PTR _rRounder$5[ebp]
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	$LN2@parseModif
cmp	DWORD PTR _n$[ebp], 4
jne	SHORT $LN13@parseModif
push	OFFSET $SG11103
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN13@parseModif
movsd	xmm0, QWORD PTR _r$[ebp]
mulsd	xmm0, QWORD PTR __real@414b774000000000
addsd	xmm0, QWORD PTR _rRounder$5[ebp]
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	$LN2@parseModif
cmp	DWORD PTR _n$[ebp], 6
jne	SHORT $LN11@parseModif
push	OFFSET $SG11107
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN11@parseModif
movsd	xmm0, QWORD PTR _r$[ebp]
mulsd	xmm0, QWORD PTR __real@40ed4c0000000000
addsd	xmm0, QWORD PTR _rRounder$5[ebp]
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	$LN2@parseModif
cmp	DWORD PTR _n$[ebp], 6
jne	SHORT $LN9@parseModif
push	OFFSET $SG11111
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN9@parseModif
movsd	xmm0, QWORD PTR _r$[ebp]
mulsd	xmm0, QWORD PTR __real@408f400000000000
addsd	xmm0, QWORD PTR _rRounder$5[ebp]
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	$LN2@parseModif
cmp	DWORD PTR _n$[ebp], 5
jne	$LN7@parseModif
push	OFFSET $SG11115
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	$LN7@parseModif
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_computeYMD_HMS
add	esp, 4
cvttsd2si ecx, QWORD PTR _r$[ebp]
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+12]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+12], 0
jle	SHORT $LN56@parseModif
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
sub	eax, 1
cdq
mov	ecx, 12					
idiv	ecx
mov	DWORD PTR tv378[ebp], eax
jmp	SHORT $LN57@parseModif
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
sub	eax, 12					
cdq
mov	ecx, 12					
idiv	ecx
mov	DWORD PTR tv378[ebp], eax
mov	edx, DWORD PTR tv378[ebp]
mov	DWORD PTR _x$2[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
add	ecx, DWORD PTR _x$2[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], ecx
imul	eax, DWORD PTR _x$2[ebp], 12
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
sub	edx, eax
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+42], 0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_computeJD
add	esp, 4
cvttsd2si eax, QWORD PTR _r$[ebp]
mov	DWORD PTR _y$4[ebp], eax
cvtsi2sd xmm0, DWORD PTR _y$4[ebp]
ucomisd	xmm0, QWORD PTR _r$[ebp]
lahf
test	ah, 68					
jnp	SHORT $LN6@parseModif
cvtsi2sd xmm0, DWORD PTR _y$4[ebp]
movsd	xmm1, QWORD PTR _r$[ebp]
subsd	xmm1, xmm0
mulsd	xmm1, QWORD PTR __real@403e000000000000
mulsd	xmm1, QWORD PTR __real@4194997000000000
addsd	xmm1, QWORD PTR _rRounder$5[ebp]
movsd	xmm0, xmm1
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	$LN2@parseModif
cmp	DWORD PTR _n$[ebp], 4
jne	$LN4@parseModif
push	OFFSET $SG11124
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	$LN4@parseModif
cvttsd2si eax, QWORD PTR _r$[ebp]
mov	DWORD PTR _y$6[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_computeYMD_HMS
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
add	eax, DWORD PTR _y$6[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+42], 0
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_computeJD
add	esp, 4
cvtsi2sd xmm0, DWORD PTR _y$6[ebp]
ucomisd	xmm0, QWORD PTR _r$[ebp]
lahf
test	ah, 68					
jnp	SHORT $LN3@parseModif
cvtsi2sd xmm0, DWORD PTR _y$6[ebp]
movsd	xmm1, QWORD PTR _r$[ebp]
subsd	xmm1, xmm0
mulsd	xmm1, QWORD PTR __real@4076d00000000000
mulsd	xmm1, QWORD PTR __real@4194997000000000
addsd	xmm1, QWORD PTR _rRounder$5[ebp]
movsd	xmm0, xmm1
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx]
adc	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
jmp	SHORT $LN2@parseModif
mov	DWORD PTR _rc$[ebp], 1
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_clearYMD_HMS_TZ
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	$LN29@parseModif
DD	$LN46@parseModif
DD	$LN36@parseModif
DD	$LN44@parseModif
DD	$LN39@parseModif
DD	$LN1@parseModif
DB	0
DB	5
DB	0
DB	5
DB	5
DB	0
DB	0
DB	0
DB	0
DB	0
DB	0
DB	0
DB	0
DB	0
DB	0
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	1
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	2
DB	5
DB	3
DB	5
DB	4
ENDP
_localtimeOffset PROC
push	ebp
mov	ebp, esp
sub	esp, 148				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
push	edi
push	36					
push	0
lea	eax, DWORD PTR _sLocal$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, 12					
mov	esi, DWORD PTR _p$[ebp]
lea	edi, DWORD PTR _x$[ebp]
rep movsd
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
call	_computeYMD_HMS
add	esp, 4
cmp	DWORD PTR _x$[ebp+8], 1971		
jl	SHORT $LN3@localtimeO
cmp	DWORD PTR _x$[ebp+8], 2038		
jl	SHORT $LN4@localtimeO
mov	DWORD PTR _x$[ebp+8], 2000		
mov	DWORD PTR _x$[ebp+12], 1
mov	DWORD PTR _x$[ebp+16], 1
mov	DWORD PTR _x$[ebp+20], 0
mov	DWORD PTR _x$[ebp+24], 0
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR _x$[ebp+32], xmm0
jmp	SHORT $LN2@localtimeO
movsd	xmm0, QWORD PTR _x$[ebp+32]
addsd	xmm0, QWORD PTR __real@3fe0000000000000
cvttsd2si edx, xmm0
mov	DWORD PTR _s$1[ebp], edx
cvtsi2sd xmm0, DWORD PTR _s$1[ebp]
movsd	QWORD PTR _x$[ebp+32], xmm0
mov	DWORD PTR _x$[ebp+28], 0
mov	BYTE PTR _x$[ebp+42], 0
lea	eax, DWORD PTR _x$[ebp]
push	eax
call	_computeJD
add	esp, 4
push	0
push	1000					
mov	ecx, DWORD PTR _x$[ebp+4]
push	ecx
mov	edx, DWORD PTR _x$[ebp]
push	edx
call	__alldiv
sub	eax, 413362496				
sbb	edx, 49					
mov	DWORD PTR _t$[ebp], eax
mov	DWORD PTR _t$[ebp+4], edx
lea	eax, DWORD PTR _sLocal$[ebp]
push	eax
lea	ecx, DWORD PTR _t$[ebp]
push	ecx
call	_osLocaltime
add	esp, 8
test	eax, eax
je	SHORT $LN1@localtimeO
push	-1
push	OFFSET $SG11023
mov	edx, DWORD PTR _pCtx$[ebp]
push	edx
call	_sqlite3_result_error
add	esp, 12					
mov	eax, DWORD PTR _pRc$[ebp]
mov	DWORD PTR [eax], 1
xor	eax, eax
xor	edx, edx
jmp	SHORT $LN5@localtimeO
mov	ecx, DWORD PTR _sLocal$[ebp+20]
add	ecx, 1900				
mov	DWORD PTR _y$[ebp+8], ecx
mov	edx, DWORD PTR _sLocal$[ebp+16]
add	edx, 1
mov	DWORD PTR _y$[ebp+12], edx
mov	eax, DWORD PTR _sLocal$[ebp+12]
mov	DWORD PTR _y$[ebp+16], eax
mov	ecx, DWORD PTR _sLocal$[ebp+8]
mov	DWORD PTR _y$[ebp+20], ecx
mov	edx, DWORD PTR _sLocal$[ebp+4]
mov	DWORD PTR _y$[ebp+24], edx
cvtsi2sd xmm0, DWORD PTR _sLocal$[ebp]
movsd	QWORD PTR _y$[ebp+32], xmm0
mov	BYTE PTR _y$[ebp+40], 1
mov	BYTE PTR _y$[ebp+41], 1
mov	BYTE PTR _y$[ebp+42], 0
mov	BYTE PTR _y$[ebp+43], 0
lea	eax, DWORD PTR _y$[ebp]
push	eax
call	_computeJD
add	esp, 4
mov	ecx, DWORD PTR _pRc$[ebp]
mov	DWORD PTR [ecx], 0
mov	eax, DWORD PTR _y$[ebp]
sub	eax, DWORD PTR _x$[ebp]
mov	edx, DWORD PTR _y$[ebp+4]
sbb	edx, DWORD PTR _x$[ebp+4]
pop	edi
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_osLocaltime PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _sqlite3Config+264, 0
je	SHORT $LN1@osLocaltim
mov	eax, 1
jmp	SHORT $LN2@osLocaltim
mov	eax, DWORD PTR _t$[ebp]
push	eax
mov	ecx, DWORD PTR _pTm$[ebp]
push	ecx
call	_localtime_s
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_clearYMD_HMS_TZ PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+40], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+41], 0
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+43], 0
pop	ebp
ret	0
ENDP
_computeYMD_HMS PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_computeYMD
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_computeHMS
add	esp, 4
pop	ebp
ret	0
ENDP
_computeHMS PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, BYTE PTR [eax+41]
test	ecx, ecx
je	SHORT $LN1@computeHMS
jmp	$LN2@computeHMS
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_computeJD
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 43200000				
mov	edx, DWORD PTR [eax+4]
adc	edx, 0
push	0
push	86400000				
push	edx
push	ecx
call	__allrem
mov	DWORD PTR _s$[ebp], eax
cvtsi2sd xmm0, DWORD PTR _s$[ebp]
divsd	xmm0, QWORD PTR __real@408f400000000000
mov	eax, DWORD PTR _p$[ebp]
movsd	QWORD PTR [eax+32], xmm0
mov	ecx, DWORD PTR _p$[ebp]
cvttsd2si edx, QWORD PTR [ecx+32]
mov	DWORD PTR _s$[ebp], edx
cvtsi2sd xmm0, DWORD PTR _s$[ebp]
mov	eax, DWORD PTR _p$[ebp]
movsd	xmm1, QWORD PTR [eax+32]
subsd	xmm1, xmm0
mov	ecx, DWORD PTR _p$[ebp]
movsd	QWORD PTR [ecx+32], xmm1
mov	eax, DWORD PTR _s$[ebp]
cdq
mov	ecx, 3600				
idiv	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+20], eax
mov	eax, DWORD PTR _p$[ebp]
imul	ecx, DWORD PTR [eax+20], 3600
mov	edx, DWORD PTR _s$[ebp]
sub	edx, ecx
mov	DWORD PTR _s$[ebp], edx
mov	eax, DWORD PTR _s$[ebp]
cdq
mov	ecx, 60					
idiv	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+24], eax
mov	eax, DWORD PTR _p$[ebp]
imul	ecx, DWORD PTR [eax+24], 60
mov	edx, DWORD PTR _s$[ebp]
sub	edx, ecx
cvtsi2sd xmm0, edx
mov	eax, DWORD PTR _p$[ebp]
addsd	xmm0, QWORD PTR [eax+32]
mov	ecx, DWORD PTR _p$[ebp]
movsd	QWORD PTR [ecx+32], xmm0
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+41], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_computeYMD PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, BYTE PTR [eax+40]
test	ecx, ecx
je	SHORT $LN3@computeYMD
jmp	$LN4@computeYMD
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, BYTE PTR [edx+42]
test	eax, eax
jne	SHORT $LN2@computeYMD
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], 2000			
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+12], 1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+16], 1
jmp	$LN1@computeYMD
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 43200000				
mov	eax, DWORD PTR [ecx+4]
adc	eax, 0
push	0
push	86400000				
push	eax
push	edx
call	__alldiv
mov	DWORD PTR _Z$[ebp], eax
cvtsi2sd xmm0, DWORD PTR _Z$[ebp]
subsd	xmm0, QWORD PTR __real@413c7dd040000000
divsd	xmm0, QWORD PTR __real@40e1d58800000000
cvttsd2si ecx, xmm0
mov	DWORD PTR _A$[ebp], ecx
mov	edx, DWORD PTR _A$[ebp]
mov	eax, DWORD PTR _Z$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	eax, DWORD PTR _A$[ebp]
cdq
and	edx, 3
add	eax, edx
sar	eax, 2
sub	ecx, eax
mov	DWORD PTR _A$[ebp], ecx
mov	edx, DWORD PTR _A$[ebp]
add	edx, 1524				
mov	DWORD PTR _B$[ebp], edx
cvtsi2sd xmm0, DWORD PTR _B$[ebp]
subsd	xmm0, QWORD PTR __real@405e866666666666
divsd	xmm0, QWORD PTR __real@4076d40000000000
cvttsd2si eax, xmm0
mov	DWORD PTR _C$[ebp], eax
imul	eax, DWORD PTR _C$[ebp], 36525
cdq
mov	ecx, 100				
idiv	ecx
mov	DWORD PTR _D$[ebp], eax
mov	edx, DWORD PTR _B$[ebp]
sub	edx, DWORD PTR _D$[ebp]
cvtsi2sd xmm0, edx
divsd	xmm0, QWORD PTR __real@403e99a027525461
cvttsd2si eax, xmm0
mov	DWORD PTR _E$[ebp], eax
cvtsi2sd xmm0, DWORD PTR _E$[ebp]
mulsd	xmm0, QWORD PTR __real@403e99a027525461
cvttsd2si ecx, xmm0
mov	DWORD PTR _X1$[ebp], ecx
mov	edx, DWORD PTR _B$[ebp]
sub	edx, DWORD PTR _D$[ebp]
sub	edx, DWORD PTR _X1$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+16], edx
cmp	DWORD PTR _E$[ebp], 14			
jge	SHORT $LN6@computeYMD
mov	ecx, DWORD PTR _E$[ebp]
sub	ecx, 1
mov	DWORD PTR tv144[ebp], ecx
jmp	SHORT $LN7@computeYMD
mov	edx, DWORD PTR _E$[ebp]
sub	edx, 13					
mov	DWORD PTR tv144[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR tv144[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+12], 2
jle	SHORT $LN8@computeYMD
mov	eax, DWORD PTR _C$[ebp]
sub	eax, 4716				
mov	DWORD PTR tv150[ebp], eax
jmp	SHORT $LN9@computeYMD
mov	ecx, DWORD PTR _C$[ebp]
sub	ecx, 4715				
mov	DWORD PTR tv150[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR tv150[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+40], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_parseDateOrTime PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _zDate$[ebp]
push	ecx
call	_parseYyyyMmDd
add	esp, 8
test	eax, eax
jne	SHORT $LN7@parseDateO
xor	eax, eax
jmp	$LN8@parseDateO
jmp	$LN1@parseDateO
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _zDate$[ebp]
push	eax
call	_parseHhMmSs
add	esp, 8
test	eax, eax
jne	SHORT $LN5@parseDateO
xor	eax, eax
jmp	$LN8@parseDateO
jmp	SHORT $LN1@parseDateO
push	OFFSET $SG10956
mov	ecx, DWORD PTR _zDate$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@parseDateO
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_setDateTimeToCurrent
add	esp, 8
jmp	SHORT $LN8@parseDateO
jmp	SHORT $LN1@parseDateO
push	1
mov	ecx, DWORD PTR _zDate$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	edx, DWORD PTR _r$[ebp]
push	edx
mov	eax, DWORD PTR _zDate$[ebp]
push	eax
call	_sqlite3AtoF
add	esp, 16					
test	eax, eax
je	SHORT $LN1@parseDateO
movsd	xmm0, QWORD PTR _r$[ebp]
mulsd	xmm0, QWORD PTR __real@4194997000000000
addsd	xmm0, QWORD PTR __real@3fe0000000000000
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+42], 1
xor	eax, eax
jmp	SHORT $LN8@parseDateO
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_setDateTimeToCurrent PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _context$[ebp]
push	eax
call	_sqlite3StmtCurrentTime
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv79[ebp], edx
mov	eax, DWORD PTR tv79[ebp]
cmp	DWORD PTR [eax+4], 0
jl	SHORT $LN2@setDateTim
jg	SHORT $LN5@setDateTim
mov	ecx, DWORD PTR tv79[ebp]
cmp	DWORD PTR [ecx], 0
jbe	SHORT $LN2@setDateTim
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+42], 1
xor	eax, eax
jmp	SHORT $LN3@setDateTim
jmp	SHORT $LN3@setDateTim
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_parseYyyyMmDd PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zDate$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 45					
jne	SHORT $LN11@parseYyyyM
mov	ecx, DWORD PTR _zDate$[ebp]
add	ecx, 1
mov	DWORD PTR _zDate$[ebp], ecx
mov	DWORD PTR _neg$[ebp], 1
jmp	SHORT $LN10@parseYyyyM
mov	DWORD PTR _neg$[ebp], 0
lea	edx, DWORD PTR _D$[ebp]
push	edx
push	0
push	31					
push	1
push	2
lea	eax, DWORD PTR _M$[ebp]
push	eax
push	45					
push	12					
push	1
push	2
lea	ecx, DWORD PTR _Y$[ebp]
push	ecx
push	45					
push	9999					
push	0
push	4
mov	edx, DWORD PTR _zDate$[ebp]
push	edx
call	_getDigits
add	esp, 64					
cmp	eax, 3
je	SHORT $LN9@parseYyyyM
mov	eax, 1
jmp	$LN12@parseYyyyM
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 10					
mov	DWORD PTR _zDate$[ebp], eax
mov	ecx, DWORD PTR _zDate$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 1
jne	SHORT $LN6@parseYyyyM
mov	ecx, DWORD PTR _zDate$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 84					
jne	SHORT $LN7@parseYyyyM
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 1
mov	DWORD PTR _zDate$[ebp], eax
jmp	SHORT $LN8@parseYyyyM
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _zDate$[ebp]
push	edx
call	_parseHhMmSs
add	esp, 8
test	eax, eax
jne	SHORT $LN5@parseYyyyM
jmp	SHORT $LN4@parseYyyyM
mov	eax, DWORD PTR _zDate$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN3@parseYyyyM
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+41], 0
jmp	SHORT $LN4@parseYyyyM
mov	eax, 1
jmp	SHORT $LN12@parseYyyyM
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+42], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+40], 1
cmp	DWORD PTR _neg$[ebp], 0
je	SHORT $LN14@parseYyyyM
mov	edx, DWORD PTR _Y$[ebp]
neg	edx
mov	DWORD PTR tv141[ebp], edx
jmp	SHORT $LN15@parseYyyyM
mov	eax, DWORD PTR _Y$[ebp]
mov	DWORD PTR tv141[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR tv141[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _M$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _D$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, BYTE PTR [ecx+43]
test	edx, edx
je	SHORT $LN1@parseYyyyM
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_computeJD
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_computeJD PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
push	edi
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, BYTE PTR [eax+42]
test	ecx, ecx
je	SHORT $LN6@computeJD
jmp	$LN1@computeJD
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, BYTE PTR [edx+40]
test	eax, eax
je	SHORT $LN5@computeJD
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _Y$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _M$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _D$[ebp], eax
jmp	SHORT $LN4@computeJD
mov	DWORD PTR _Y$[ebp], 2000		
mov	DWORD PTR _M$[ebp], 1
mov	DWORD PTR _D$[ebp], 1
cmp	DWORD PTR _M$[ebp], 2
jg	SHORT $LN3@computeJD
mov	ecx, DWORD PTR _Y$[ebp]
sub	ecx, 1
mov	DWORD PTR _Y$[ebp], ecx
mov	edx, DWORD PTR _M$[ebp]
add	edx, 12					
mov	DWORD PTR _M$[ebp], edx
mov	eax, DWORD PTR _Y$[ebp]
cdq
mov	ecx, 100				
idiv	ecx
mov	DWORD PTR _A$[ebp], eax
mov	ecx, 2
sub	ecx, DWORD PTR _A$[ebp]
mov	eax, DWORD PTR _A$[ebp]
cdq
and	edx, 3
add	eax, edx
sar	eax, 2
add	ecx, eax
mov	DWORD PTR _B$[ebp], ecx
mov	edx, DWORD PTR _Y$[ebp]
add	edx, 4716				
imul	eax, edx, 36525
cdq
mov	ecx, 100				
idiv	ecx
mov	DWORD PTR _X1$[ebp], eax
mov	edx, DWORD PTR _M$[ebp]
add	edx, 1
imul	eax, edx, 306001
cdq
mov	ecx, 10000				
idiv	ecx
mov	DWORD PTR _X2$[ebp], eax
mov	edx, DWORD PTR _X1$[ebp]
add	edx, DWORD PTR _X2$[ebp]
add	edx, DWORD PTR _D$[ebp]
add	edx, DWORD PTR _B$[ebp]
cvtsi2sd xmm0, edx
subsd	xmm0, QWORD PTR __real@4097d20000000000
mulsd	xmm0, QWORD PTR __real@4194997000000000
call	__dtol3
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+42], 1
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, BYTE PTR [eax+41]
test	ecx, ecx
je	$LN1@computeJD
mov	edx, DWORD PTR _p$[ebp]
imul	eax, DWORD PTR [edx+20], 3600000
mov	ecx, DWORD PTR _p$[ebp]
imul	edx, DWORD PTR [ecx+24], 60000
add	eax, edx
cdq
mov	esi, eax
mov	edi, edx
mov	eax, DWORD PTR _p$[ebp]
movsd	xmm0, QWORD PTR [eax+32]
mulsd	xmm0, QWORD PTR __real@408f400000000000
call	__dtol3
add	esi, eax
adc	edi, edx
mov	ecx, DWORD PTR _p$[ebp]
add	esi, DWORD PTR [ecx]
adc	edi, DWORD PTR [ecx+4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], esi
mov	DWORD PTR [edx+4], edi
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, BYTE PTR [eax+43]
test	ecx, ecx
je	SHORT $LN1@computeJD
mov	edx, DWORD PTR _p$[ebp]
imul	eax, DWORD PTR [edx+28], 60000
cdq
mov	ecx, DWORD PTR _p$[ebp]
mov	esi, DWORD PTR [ecx]
sub	esi, eax
mov	eax, DWORD PTR [ecx+4]
sbb	eax, edx
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], esi
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+40], 0
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+41], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+43], 0
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_parseHhMmSs PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR _ms$[ebp], xmm0
lea	eax, DWORD PTR _m$[ebp]
push	eax
push	0
push	59					
push	0
push	2
lea	ecx, DWORD PTR _h$[ebp]
push	ecx
push	58					
push	24					
push	0
push	2
mov	edx, DWORD PTR _zDate$[ebp]
push	edx
call	_getDigits
add	esp, 44					
cmp	eax, 2
je	SHORT $LN8@parseHhMmS
mov	eax, 1
jmp	$LN9@parseHhMmS
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 5
mov	DWORD PTR _zDate$[ebp], eax
mov	ecx, DWORD PTR _zDate$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 58					
jne	$LN7@parseHhMmS
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 1
mov	DWORD PTR _zDate$[ebp], eax
lea	ecx, DWORD PTR _s$[ebp]
push	ecx
push	0
push	59					
push	0
push	2
mov	edx, DWORD PTR _zDate$[ebp]
push	edx
call	_getDigits
add	esp, 24					
cmp	eax, 1
je	SHORT $LN6@parseHhMmS
mov	eax, 1
jmp	$LN9@parseHhMmS
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 2
mov	DWORD PTR _zDate$[ebp], eax
mov	ecx, DWORD PTR _zDate$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 46					
jne	$LN5@parseHhMmS
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _zDate$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 4
je	SHORT $LN5@parseHhMmS
movsd	xmm0, QWORD PTR __real@3ff0000000000000
movsd	QWORD PTR _rScale$1[ebp], xmm0
mov	ecx, DWORD PTR _zDate$[ebp]
add	ecx, 1
mov	DWORD PTR _zDate$[ebp], ecx
mov	edx, DWORD PTR _zDate$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
je	SHORT $LN3@parseHhMmS
movsd	xmm0, QWORD PTR _ms$[ebp]
mulsd	xmm0, QWORD PTR __real@4024000000000000
mov	edx, DWORD PTR _zDate$[ebp]
movsx	eax, BYTE PTR [edx]
cvtsi2sd xmm1, eax
addsd	xmm0, xmm1
subsd	xmm0, QWORD PTR __real@4048000000000000
movsd	QWORD PTR _ms$[ebp], xmm0
movsd	xmm0, QWORD PTR _rScale$1[ebp]
mulsd	xmm0, QWORD PTR __real@4024000000000000
movsd	QWORD PTR _rScale$1[ebp], xmm0
mov	ecx, DWORD PTR _zDate$[ebp]
add	ecx, 1
mov	DWORD PTR _zDate$[ebp], ecx
jmp	SHORT $LN4@parseHhMmS
movsd	xmm0, QWORD PTR _ms$[ebp]
divsd	xmm0, QWORD PTR _rScale$1[ebp]
movsd	QWORD PTR _ms$[ebp], xmm0
jmp	SHORT $LN2@parseHhMmS
mov	DWORD PTR _s$[ebp], 0
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+42], 0
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+41], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _h$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _m$[ebp]
mov	DWORD PTR [eax+24], ecx
cvtsi2sd xmm0, DWORD PTR _s$[ebp]
addsd	xmm0, QWORD PTR _ms$[ebp]
mov	edx, DWORD PTR _p$[ebp]
movsd	QWORD PTR [edx+32], xmm0
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _zDate$[ebp]
push	ecx
call	_parseTimezone
add	esp, 8
test	eax, eax
je	SHORT $LN1@parseHhMmS
mov	eax, 1
jmp	SHORT $LN9@parseHhMmS
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+28], 0
je	SHORT $LN11@parseHhMmS
mov	DWORD PTR tv161[ebp], 1
jmp	SHORT $LN12@parseHhMmS
mov	DWORD PTR tv161[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR tv161[ebp]
mov	BYTE PTR [eax+43], cl
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_parseTimezone PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _sgn$[ebp], 0
mov	eax, DWORD PTR _zDate$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
je	SHORT $LN11@parseTimez
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 1
mov	DWORD PTR _zDate$[ebp], eax
jmp	SHORT $LN12@parseTimez
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+28], 0
mov	edx, DWORD PTR _zDate$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 45			
jne	SHORT $LN10@parseTimez
mov	DWORD PTR _sgn$[ebp], -1
jmp	SHORT $LN9@parseTimez
cmp	DWORD PTR _c$[ebp], 43			
jne	SHORT $LN8@parseTimez
mov	DWORD PTR _sgn$[ebp], 1
jmp	SHORT $LN9@parseTimez
cmp	DWORD PTR _c$[ebp], 90			
je	SHORT $LN5@parseTimez
cmp	DWORD PTR _c$[ebp], 122			
jne	SHORT $LN6@parseTimez
mov	ecx, DWORD PTR _zDate$[ebp]
add	ecx, 1
mov	DWORD PTR _zDate$[ebp], ecx
jmp	SHORT $zulu_time$19
jmp	SHORT $LN9@parseTimez
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN15@parseTimez
mov	DWORD PTR tv79[ebp], 1
jmp	SHORT $LN16@parseTimez
mov	DWORD PTR tv79[ebp], 0
mov	eax, DWORD PTR tv79[ebp]
jmp	$LN13@parseTimez
mov	edx, DWORD PTR _zDate$[ebp]
add	edx, 1
mov	DWORD PTR _zDate$[ebp], edx
lea	eax, DWORD PTR _nMn$[ebp]
push	eax
push	0
push	59					
push	0
push	2
lea	ecx, DWORD PTR _nHr$[ebp]
push	ecx
push	58					
push	14					
push	0
push	2
mov	edx, DWORD PTR _zDate$[ebp]
push	edx
call	_getDigits
add	esp, 44					
cmp	eax, 2
je	SHORT $LN3@parseTimez
mov	eax, 1
jmp	SHORT $LN13@parseTimez
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 5
mov	DWORD PTR _zDate$[ebp], eax
imul	ecx, DWORD PTR _nHr$[ebp], 60
add	ecx, DWORD PTR _nMn$[ebp]
imul	ecx, DWORD PTR _sgn$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+28], ecx
mov	eax, DWORD PTR _zDate$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
je	SHORT $LN1@parseTimez
mov	eax, DWORD PTR _zDate$[ebp]
add	eax, 1
mov	DWORD PTR _zDate$[ebp], eax
jmp	SHORT $zulu_time$19
mov	ecx, DWORD PTR _zDate$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN17@parseTimez
mov	DWORD PTR tv140[ebp], 1
jmp	SHORT $LN18@parseTimez
mov	DWORD PTR tv140[ebp], 0
mov	eax, DWORD PTR tv140[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_getDigits PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	DWORD PTR _cnt$[ebp], 0
lea	eax, DWORD PTR _zDate$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _N$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _min$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _max$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _nextC$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _pVal$[ebp], eax
mov	DWORD PTR _val$[ebp], 0
mov	ecx, DWORD PTR _N$[ebp]
mov	DWORD PTR tv77[ebp], ecx
mov	edx, DWORD PTR _N$[ebp]
sub	edx, 1
mov	DWORD PTR _N$[ebp], edx
cmp	DWORD PTR tv77[ebp], 0
je	SHORT $LN4@getDigits
mov	eax, DWORD PTR _zDate$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 4
jne	SHORT $LN3@getDigits
jmp	SHORT $end_getDigits$11
imul	eax, DWORD PTR _val$[ebp], 10
mov	ecx, DWORD PTR _zDate$[ebp]
movsx	edx, BYTE PTR [ecx]
lea	eax, DWORD PTR [eax+edx-48]
mov	DWORD PTR _val$[ebp], eax
mov	ecx, DWORD PTR _zDate$[ebp]
add	ecx, 1
mov	DWORD PTR _zDate$[ebp], ecx
jmp	SHORT $LN5@getDigits
mov	edx, DWORD PTR _val$[ebp]
cmp	edx, DWORD PTR _min$[ebp]
jl	SHORT $LN1@getDigits
mov	eax, DWORD PTR _val$[ebp]
cmp	eax, DWORD PTR _max$[ebp]
jg	SHORT $LN1@getDigits
cmp	DWORD PTR _nextC$[ebp], 0
je	SHORT $LN2@getDigits
mov	ecx, DWORD PTR _zDate$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	DWORD PTR _nextC$[ebp], edx
je	SHORT $LN2@getDigits
jmp	SHORT $end_getDigits$11
mov	eax, DWORD PTR _pVal$[ebp]
mov	ecx, DWORD PTR _val$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _zDate$[ebp]
add	edx, 1
mov	DWORD PTR _zDate$[ebp], edx
mov	eax, DWORD PTR _cnt$[ebp]
add	eax, 1
mov	DWORD PTR _cnt$[ebp], eax
cmp	DWORD PTR _nextC$[ebp], 0
jne	$LN8@getDigits
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _cnt$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_localtime_s PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR __Time$[ebp]
push	eax
mov	ecx, DWORD PTR __Tm$[ebp]
push	ecx
call	__localtime64_s
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemExpandBlob PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 16384				
je	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR _pMem$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _nByte$1[ebp], eax
cmp	DWORD PTR _nByte$1[ebp], 0
jg	SHORT $LN2@sqlite3Vdb
mov	DWORD PTR _nByte$1[ebp], 1
push	1
mov	edx, DWORD PTR _nByte$1[ebp]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
push	0
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _pMem$[ebp]
add	ecx, DWORD PTR [edx+24]
push	ecx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _pMem$[ebp]
add	ecx, DWORD PTR [edx+16]
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+24], ecx
mov	ecx, DWORD PTR _pMem$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -16897				
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemHandleBom PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	BYTE PTR _bom$[ebp], 0
mov	eax, DWORD PTR _pMem$[ebp]
cmp	DWORD PTR [eax+24], 1
jle	SHORT $LN5@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	al, BYTE PTR [edx]
mov	BYTE PTR _b1$2[ebp], al
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	al, BYTE PTR [edx+1]
mov	BYTE PTR _b2$1[ebp], al
movzx	ecx, BYTE PTR _b1$2[ebp]
cmp	ecx, 254				
jne	SHORT $LN4@sqlite3Vdb
movzx	edx, BYTE PTR _b2$1[ebp]
cmp	edx, 255				
jne	SHORT $LN4@sqlite3Vdb
mov	BYTE PTR _bom$[ebp], 3
movzx	eax, BYTE PTR _b1$2[ebp]
cmp	eax, 255				
jne	SHORT $LN5@sqlite3Vdb
movzx	ecx, BYTE PTR _b2$1[ebp]
cmp	ecx, 254				
jne	SHORT $LN5@sqlite3Vdb
mov	BYTE PTR _bom$[ebp], 2
movzx	edx, BYTE PTR _bom$[ebp]
test	edx, edx
je	$LN2@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
sub	edx, 2
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, 1
shl	eax, 1
mov	ecx, DWORD PTR _pMem$[ebp]
add	eax, DWORD PTR [ecx+4]
push	eax
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_memmove
add	esp, 12					
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	BYTE PTR [ecx+edx], 0
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	BYTE PTR [edx+eax+1], 0
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
or	ecx, 512				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pMem$[ebp]
mov	cl, BYTE PTR _bom$[ebp]
mov	BYTE PTR [eax+30], cl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemTranslate PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, BYTE PTR [eax+30]
cmp	ecx, 1
je	$LN49@sqlite3Vdb
movzx	edx, BYTE PTR _desiredEnc$[ebp]
cmp	edx, 1
je	SHORT $LN49@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN48@sqlite3Vdb
mov	eax, 7
jmp	$LN50@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _zIn$[ebp], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -2					
add	ecx, DWORD PTR _zIn$[ebp]
mov	DWORD PTR _zTerm$[ebp], ecx
mov	edx, DWORD PTR _zIn$[ebp]
cmp	edx, DWORD PTR _zTerm$[ebp]
jae	SHORT $LN46@sqlite3Vdb
mov	eax, DWORD PTR _zIn$[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR _temp$4[ebp], cl
mov	edx, DWORD PTR _zIn$[ebp]
mov	eax, DWORD PTR _zIn$[ebp]
mov	cl, BYTE PTR [eax+1]
mov	BYTE PTR [edx], cl
mov	edx, DWORD PTR _zIn$[ebp]
add	edx, 1
mov	DWORD PTR _zIn$[ebp], edx
mov	eax, DWORD PTR _zIn$[ebp]
mov	cl, BYTE PTR _temp$4[ebp]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _zIn$[ebp]
add	edx, 1
mov	DWORD PTR _zIn$[ebp], edx
jmp	SHORT $LN47@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	cl, BYTE PTR _desiredEnc$[ebp]
mov	BYTE PTR [eax+30], cl
jmp	$translate_out$52
movzx	edx, BYTE PTR _desiredEnc$[ebp]
cmp	edx, 1
jne	SHORT $LN45@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -2					
mov	edx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
lea	edx, DWORD PTR [ecx+ecx+1]
mov	DWORD PTR _len$[ebp], edx
jmp	SHORT $LN44@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
lea	edx, DWORD PTR [ecx+ecx+2]
mov	DWORD PTR _len$[ebp], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _zIn$[ebp], ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _zIn$[ebp]
add	eax, DWORD PTR [edx+24]
mov	DWORD PTR _zTerm$[ebp], eax
mov	ecx, DWORD PTR _len$[ebp]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zOut$[ebp], eax
cmp	DWORD PTR _zOut$[ebp], 0
jne	SHORT $LN43@sqlite3Vdb
mov	eax, 7
jmp	$LN50@sqlite3Vdb
mov	ecx, DWORD PTR _zOut$[ebp]
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, BYTE PTR [edx+30]
cmp	eax, 1
jne	$LN42@sqlite3Vdb
movzx	ecx, BYTE PTR _desiredEnc$[ebp]
cmp	ecx, 2
jne	$LN30@sqlite3Vdb
mov	edx, DWORD PTR _zIn$[ebp]
cmp	edx, DWORD PTR _zTerm$[ebp]
jae	$LN39@sqlite3Vdb
mov	eax, DWORD PTR _zIn$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _zIn$[ebp]
add	edx, 1
mov	DWORD PTR _zIn$[ebp], edx
cmp	DWORD PTR _c$[ebp], 192			
jb	SHORT $LN38@sqlite3Vdb
mov	eax, DWORD PTR _c$[ebp]
movzx	ecx, BYTE PTR _sqlite3Utf8Trans1[eax-192]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _zIn$[ebp]
cmp	edx, DWORD PTR _zTerm$[ebp]
je	SHORT $LN36@sqlite3Vdb
mov	eax, DWORD PTR _zIn$[ebp]
movzx	ecx, BYTE PTR [eax]
and	ecx, 192				
cmp	ecx, 128				
jne	SHORT $LN36@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
shl	edx, 6
mov	eax, DWORD PTR _zIn$[ebp]
movzx	ecx, BYTE PTR [eax]
and	ecx, 63					
add	edx, ecx
mov	DWORD PTR _c$[ebp], edx
mov	edx, DWORD PTR _zIn$[ebp]
add	edx, 1
mov	DWORD PTR _zIn$[ebp], edx
jmp	SHORT $LN37@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 128			
jb	SHORT $LN34@sqlite3Vdb
mov	eax, DWORD PTR _c$[ebp]
and	eax, -2048				
cmp	eax, 55296				
je	SHORT $LN34@sqlite3Vdb
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, -2					
cmp	ecx, 65534				
jne	SHORT $LN38@sqlite3Vdb
mov	DWORD PTR _c$[ebp], 65533		
cmp	DWORD PTR _c$[ebp], 65535		
ja	SHORT $LN33@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
and	edx, 255				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _c$[ebp]
shr	edx, 8
and	edx, 255				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	SHORT $LN32@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
shr	edx, 10					
and	edx, 63					
mov	eax, DWORD PTR _c$[ebp]
sub	eax, 65536				
shr	eax, 10					
and	eax, 192				
add	edx, eax
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], dl
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
sub	eax, 65536				
shr	eax, 18					
and	eax, 3
add	eax, 216				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
and	eax, 255				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
shr	eax, 8
and	eax, 3
add	eax, 220				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
jmp	$LN40@sqlite3Vdb
jmp	$LN31@sqlite3Vdb
mov	eax, DWORD PTR _zIn$[ebp]
cmp	eax, DWORD PTR _zTerm$[ebp]
jae	$LN31@sqlite3Vdb
mov	ecx, DWORD PTR _zIn$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _c$[ebp], edx
mov	eax, DWORD PTR _zIn$[ebp]
add	eax, 1
mov	DWORD PTR _zIn$[ebp], eax
cmp	DWORD PTR _c$[ebp], 192			
jb	SHORT $LN28@sqlite3Vdb
mov	ecx, DWORD PTR _c$[ebp]
movzx	edx, BYTE PTR _sqlite3Utf8Trans1[ecx-192]
mov	DWORD PTR _c$[ebp], edx
mov	eax, DWORD PTR _zIn$[ebp]
cmp	eax, DWORD PTR _zTerm$[ebp]
je	SHORT $LN26@sqlite3Vdb
mov	ecx, DWORD PTR _zIn$[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 192				
cmp	edx, 128				
jne	SHORT $LN26@sqlite3Vdb
mov	eax, DWORD PTR _c$[ebp]
shl	eax, 6
mov	ecx, DWORD PTR _zIn$[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 63					
add	eax, edx
mov	DWORD PTR _c$[ebp], eax
mov	eax, DWORD PTR _zIn$[ebp]
add	eax, 1
mov	DWORD PTR _zIn$[ebp], eax
jmp	SHORT $LN27@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 128			
jb	SHORT $LN24@sqlite3Vdb
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, -2048				
cmp	ecx, 55296				
je	SHORT $LN24@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
and	edx, -2					
cmp	edx, 65534				
jne	SHORT $LN28@sqlite3Vdb
mov	DWORD PTR _c$[ebp], 65533		
cmp	DWORD PTR _c$[ebp], 65535		
ja	SHORT $LN23@sqlite3Vdb
mov	eax, DWORD PTR _c$[ebp]
shr	eax, 8
and	eax, 255				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
and	eax, 255				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
jmp	$LN22@sqlite3Vdb
mov	eax, DWORD PTR _c$[ebp]
sub	eax, 65536				
shr	eax, 18					
and	eax, 3
add	eax, 216				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
shr	eax, 10					
and	eax, 63					
mov	ecx, DWORD PTR _c$[ebp]
sub	ecx, 65536				
shr	ecx, 10					
and	ecx, 192				
add	eax, ecx
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], al
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c$[ebp]
shr	ecx, 8
and	ecx, 3
add	ecx, 220				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, 255				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
jmp	$LN30@sqlite3Vdb
mov	ecx, DWORD PTR _z$[ebp]
sub	ecx, DWORD PTR _zOut$[ebp]
mov	edx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	$LN21@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, BYTE PTR [edx+30]
cmp	eax, 2
jne	$LN9@sqlite3Vdb
mov	ecx, DWORD PTR _zIn$[ebp]
cmp	ecx, DWORD PTR _zTerm$[ebp]
jae	$LN18@sqlite3Vdb
mov	edx, DWORD PTR _zIn$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
mov	ecx, DWORD PTR _zIn$[ebp]
add	ecx, 1
mov	DWORD PTR _zIn$[ebp], ecx
mov	edx, DWORD PTR _zIn$[ebp]
movzx	eax, BYTE PTR [edx]
shl	eax, 8
add	eax, DWORD PTR _c$[ebp]
mov	DWORD PTR _c$[ebp], eax
mov	ecx, DWORD PTR _zIn$[ebp]
add	ecx, 1
mov	DWORD PTR _zIn$[ebp], ecx
cmp	DWORD PTR _c$[ebp], 55296		
jb	SHORT $LN17@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 57344		
jae	SHORT $LN17@sqlite3Vdb
mov	edx, DWORD PTR _zIn$[ebp]
cmp	edx, DWORD PTR _zTerm$[ebp]
jae	SHORT $LN17@sqlite3Vdb
mov	eax, DWORD PTR _zIn$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c2$3[ebp], ecx
mov	edx, DWORD PTR _zIn$[ebp]
add	edx, 1
mov	DWORD PTR _zIn$[ebp], edx
mov	eax, DWORD PTR _zIn$[ebp]
movzx	ecx, BYTE PTR [eax]
shl	ecx, 8
add	ecx, DWORD PTR _c2$3[ebp]
mov	DWORD PTR _c2$3[ebp], ecx
mov	edx, DWORD PTR _zIn$[ebp]
add	edx, 1
mov	DWORD PTR _zIn$[ebp], edx
mov	eax, DWORD PTR _c2$3[ebp]
and	eax, 1023				
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, 63					
shl	ecx, 10					
add	eax, ecx
mov	edx, DWORD PTR _c$[ebp]
and	edx, 960				
add	edx, 64					
shl	edx, 10					
add	eax, edx
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 128			
jae	SHORT $LN16@sqlite3Vdb
mov	eax, DWORD PTR _c$[ebp]
and	eax, 255				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
jmp	$LN15@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 2048		
jae	SHORT $LN14@sqlite3Vdb
mov	eax, DWORD PTR _c$[ebp]
shr	eax, 6
and	eax, 31					
movzx	ecx, al
add	ecx, 192				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, 63					
movzx	edx, cl
add	edx, 128				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	$LN15@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 65536		
jae	SHORT $LN12@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
shr	edx, 12					
and	edx, 15					
movzx	eax, dl
add	eax, 224				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
shr	eax, 6
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, 63					
movzx	edx, cl
add	edx, 128				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	SHORT $LN15@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
shr	edx, 18					
and	edx, 7
movzx	eax, dl
add	eax, 240				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
shr	eax, 12					
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c$[ebp]
shr	ecx, 6
and	ecx, 63					
movzx	edx, cl
add	edx, 128				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _c$[ebp]
and	edx, 63					
movzx	eax, dl
add	eax, 128				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
jmp	$LN19@sqlite3Vdb
jmp	$LN10@sqlite3Vdb
mov	eax, DWORD PTR _zIn$[ebp]
cmp	eax, DWORD PTR _zTerm$[ebp]
jae	$LN10@sqlite3Vdb
mov	ecx, DWORD PTR _zIn$[ebp]
movzx	edx, BYTE PTR [ecx]
shl	edx, 8
mov	DWORD PTR _c$[ebp], edx
mov	eax, DWORD PTR _zIn$[ebp]
add	eax, 1
mov	DWORD PTR _zIn$[ebp], eax
mov	ecx, DWORD PTR _zIn$[ebp]
movzx	edx, BYTE PTR [ecx]
add	edx, DWORD PTR _c$[ebp]
mov	DWORD PTR _c$[ebp], edx
mov	eax, DWORD PTR _zIn$[ebp]
add	eax, 1
mov	DWORD PTR _zIn$[ebp], eax
cmp	DWORD PTR _c$[ebp], 55296		
jb	SHORT $LN7@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 57344		
jae	SHORT $LN7@sqlite3Vdb
mov	ecx, DWORD PTR _zIn$[ebp]
cmp	ecx, DWORD PTR _zTerm$[ebp]
jae	SHORT $LN7@sqlite3Vdb
mov	edx, DWORD PTR _zIn$[ebp]
movzx	eax, BYTE PTR [edx]
shl	eax, 8
mov	DWORD PTR _c2$2[ebp], eax
mov	ecx, DWORD PTR _zIn$[ebp]
add	ecx, 1
mov	DWORD PTR _zIn$[ebp], ecx
mov	edx, DWORD PTR _zIn$[ebp]
movzx	eax, BYTE PTR [edx]
add	eax, DWORD PTR _c2$2[ebp]
mov	DWORD PTR _c2$2[ebp], eax
mov	ecx, DWORD PTR _zIn$[ebp]
add	ecx, 1
mov	DWORD PTR _zIn$[ebp], ecx
mov	edx, DWORD PTR _c2$2[ebp]
and	edx, 1023				
mov	eax, DWORD PTR _c$[ebp]
and	eax, 63					
shl	eax, 10					
add	edx, eax
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, 960				
add	ecx, 64					
shl	ecx, 10					
add	edx, ecx
mov	DWORD PTR _c$[ebp], edx
cmp	DWORD PTR _c$[ebp], 128			
jae	SHORT $LN6@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
and	edx, 255				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	$LN5@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 2048		
jae	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _c$[ebp]
shr	edx, 6
and	edx, 31					
movzx	eax, dl
add	eax, 192				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
jmp	$LN5@sqlite3Vdb
cmp	DWORD PTR _c$[ebp], 65536		
jae	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _c$[ebp]
shr	ecx, 12					
and	ecx, 15					
movzx	edx, cl
add	edx, 224				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _c$[ebp]
shr	edx, 6
and	edx, 63					
movzx	eax, dl
add	eax, 128				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
jmp	SHORT $LN5@sqlite3Vdb
mov	ecx, DWORD PTR _c$[ebp]
shr	ecx, 18					
and	ecx, 7
movzx	edx, cl
add	edx, 240				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _c$[ebp]
shr	edx, 12					
and	edx, 63					
movzx	eax, dl
add	eax, 128				
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _c$[ebp]
shr	eax, 6
and	eax, 63					
movzx	ecx, al
add	ecx, 128				
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx], cl
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, 63					
movzx	edx, cl
add	edx, 128				
mov	eax, DWORD PTR _z$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	$LN9@sqlite3Vdb
mov	edx, DWORD PTR _z$[ebp]
sub	edx, DWORD PTR _zOut$[ebp]
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR _z$[ebp]
mov	BYTE PTR [ecx], 0
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, -7169				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pMem$[ebp]
mov	cl, BYTE PTR _desiredEnc$[ebp]
mov	BYTE PTR [eax+30], cl
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
or	eax, 512				
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _zOut$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+36], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeCheckFk PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _deferred$[ebp], 0
je	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [edx+496]
add	ecx, DWORD PTR [eax+504]
mov	edx, DWORD PTR [edx+500]
adc	edx, DWORD PTR [eax+508]
mov	DWORD PTR tv90[ebp], ecx
mov	DWORD PTR tv90[ebp+4], edx
cmp	DWORD PTR tv90[ebp+4], 0
jg	SHORT $LN2@sqlite3Vdb
jl	SHORT $LN1@sqlite3Vdb
cmp	DWORD PTR tv90[ebp], 0
ja	SHORT $LN2@sqlite3Vdb
cmp	DWORD PTR _deferred$[ebp], 0
jne	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR tv128[ebp], eax
mov	ecx, DWORD PTR tv128[ebp]
cmp	DWORD PTR [ecx+148], 0
jl	SHORT $LN3@sqlite3Vdb
jg	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR tv128[ebp]
cmp	DWORD PTR [edx+144], 0
jbe	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+80], 787			
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+86], 2
push	OFFSET $SG98208
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3SetString
add	esp, 12					
mov	eax, 1
jmp	SHORT $LN4@sqlite3Vdb
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeLeave PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+100], 0
jne	SHORT $LN5@sqlite3Vdb
jmp	SHORT $LN6@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _aDb$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _nDb$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
mov	DWORD PTR _mask$[ebp], 1
jmp	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _mask$[ebp]
add	edx, DWORD PTR _mask$[ebp]
mov	DWORD PTR _mask$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nDb$[ebp]
jge	SHORT $LN6@sqlite3Vdb
cmp	DWORD PTR _i$[ebp], 1
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _mask$[ebp]
and	edx, DWORD PTR [ecx+100]
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _aDb$[ebp]
cmp	DWORD PTR [ecx+eax+4], 0
je	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _aDb$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
jmp	SHORT $LN3@sqlite3Vdb
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeEnter PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+100], 0
jne	SHORT $LN5@sqlite3Vdb
jmp	SHORT $LN6@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _aDb$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _nDb$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
mov	DWORD PTR _mask$[ebp], 1
jmp	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _mask$[ebp]
add	edx, DWORD PTR _mask$[ebp]
mov	DWORD PTR _mask$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nDb$[ebp]
jge	SHORT $LN6@sqlite3Vdb
cmp	DWORD PTR _i$[ebp], 1
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _mask$[ebp]
and	edx, DWORD PTR [ecx+100]
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _aDb$[ebp]
cmp	DWORD PTR [ecx+eax+4], 0
je	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _aDb$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
jmp	SHORT $LN3@sqlite3Vdb
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
lea	edx, DWORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _pSorter$[ebp]
push	eax
call	_vdbeSorterRowkey
add	esp, 8
mov	DWORD PTR _pKey$[ebp], eax
mov	ecx, DWORD PTR _pRes$[ebp]
push	ecx
mov	edx, DWORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _pKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pVal$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pVal$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _nIgnore$[ebp]
push	edx
mov	eax, DWORD PTR _pCsr$[ebp]
push	eax
call	_vdbeSorterCompare
add	esp, 28					
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterWrite PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _pVal$[ebp]
mov	eax, DWORD PTR [edx+24]
cdq
push	edx
push	eax
call	_sqlite3VarintLen
add	esp, 8
mov	ecx, DWORD PTR _pVal$[ebp]
add	eax, DWORD PTR [ecx+24]
mov	edx, DWORD PTR _pSorter$[ebp]
add	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _pVal$[ebp]
mov	eax, DWORD PTR [edx+24]
add	eax, 12					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN4@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN3@sqlite3Vdb
mov	edx, 12					
shl	edx, 0
add	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _pVal$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pVal$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pVal$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+48], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+32], 0
jle	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [ecx+16]
cmp	eax, DWORD PTR [edx+32]
jg	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [ecx+16]
cmp	eax, DWORD PTR [edx+28]
jle	SHORT $LN2@sqlite3Vdb
call	_sqlite3HeapNearlyFull
test	eax, eax
je	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _pCsr$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterListToPMA
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [eax+16], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterRewind PROC
push	ebp
mov	ebp, esp
sub	esp, 108				
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
mov	DWORD PTR _pTemp2$[ebp], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _iWrite2$[ebp], xmm0
mov	DWORD PTR _N$[ebp], 2
mov	edx, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [edx+24], 0
jne	SHORT $LN22@sqlite3Vdb
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+48], 0
jne	SHORT $LN25@sqlite3Vdb
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN26@sqlite3Vdb
mov	DWORD PTR tv69[ebp], 0
mov	ecx, DWORD PTR _pbEof$[ebp]
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pCsr$[ebp]
push	eax
call	_vdbeSorterSort
add	esp, 4
jmp	$LN23@sqlite3Vdb
mov	ecx, DWORD PTR _pCsr$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterListToPMA
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN21@sqlite3Vdb
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN23@sqlite3Vdb
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _nIter$[ebp], ecx
cmp	DWORD PTR _nIter$[ebp], 16		
jle	SHORT $LN19@sqlite3Vdb
mov	DWORD PTR _nIter$[ebp], 16		
mov	edx, DWORD PTR _N$[ebp]
cmp	edx, DWORD PTR _nIter$[ebp]
jge	SHORT $LN18@sqlite3Vdb
mov	eax, DWORD PTR _N$[ebp]
add	eax, DWORD PTR _N$[ebp]
mov	DWORD PTR _N$[ebp], eax
jmp	SHORT $LN19@sqlite3Vdb
imul	ecx, DWORD PTR _N$[ebp], 52
mov	DWORD PTR _nByte$[ebp], ecx
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [edx+36], 0
jne	SHORT $LN17@sqlite3Vdb
mov	eax, 7
jmp	$LN23@sqlite3Vdb
imul	eax, DWORD PTR _N$[ebp], 48
mov	ecx, DWORD PTR _pSorter$[ebp]
add	eax, DWORD PTR [ecx+36]
mov	edx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [edx+40], eax
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR _N$[ebp]
mov	DWORD PTR [eax+20], ecx
mov	DWORD PTR _iNew$7[ebp], 0
jmp	SHORT $LN13@sqlite3Vdb
mov	edx, DWORD PTR _iNew$7[ebp]
add	edx, 1
mov	DWORD PTR _iNew$7[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN11@sqlite3Vdb
mov	eax, DWORD PTR _iNew$7[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _pSorter$[ebp]
cmp	eax, DWORD PTR [ecx+24]
jge	$LN11@sqlite3Vdb
push	40					
push	0
lea	edx, DWORD PTR _writer$1[ebp]
push	edx
call	_memset
add	esp, 12					
lea	eax, DWORD PTR _nWrite$2[ebp]
push	eax
mov	ecx, DWORD PTR _pCsr$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterInitMerge
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN9@sqlite3Vdb
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+24], 16			
jg	SHORT $LN10@sqlite3Vdb
jmp	$LN11@sqlite3Vdb
cmp	DWORD PTR _pTemp2$[ebp], 0
jne	SHORT $LN8@sqlite3Vdb
lea	ecx, DWORD PTR _pTemp2$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterOpenTempFile
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN7@sqlite3Vdb
mov	DWORD PTR _bEof$5[ebp], 0
mov	eax, DWORD PTR _iWrite2$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iWrite2$[ebp]
push	ecx
lea	edx, DWORD PTR _writer$1[ebp]
push	edx
mov	eax, DWORD PTR _pTemp2$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_fileWriterInit
add	esp, 20					
mov	edx, DWORD PTR _nWrite$2[ebp+4]
push	edx
mov	eax, DWORD PTR _nWrite$2[ebp]
push	eax
lea	ecx, DWORD PTR _writer$1[ebp]
push	ecx
call	_fileWriterWriteVarint
add	esp, 12					
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Vdb
cmp	DWORD PTR _bEof$5[ebp], 0
jne	SHORT $LN5@sqlite3Vdb
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+40]
imul	edx, DWORD PTR [ecx+edx], 48
mov	eax, DWORD PTR _pSorter$[ebp]
add	edx, DWORD PTR [eax+36]
mov	DWORD PTR _pIter$6[ebp], edx
mov	ecx, DWORD PTR _pIter$6[ebp]
mov	eax, DWORD PTR [ecx+20]
cdq
push	edx
push	eax
lea	edx, DWORD PTR _writer$1[ebp]
push	edx
call	_fileWriterWriteVarint
add	esp, 12					
mov	eax, DWORD PTR _pIter$6[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pIter$6[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
lea	ecx, DWORD PTR _writer$1[ebp]
push	ecx
call	_fileWriterWrite
add	esp, 12					
lea	edx, DWORD PTR _bEof$5[ebp]
push	edx
mov	eax, DWORD PTR _pCsr$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VdbeSorterNext
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN6@sqlite3Vdb
lea	edx, DWORD PTR _iWrite2$[ebp]
push	edx
lea	eax, DWORD PTR _writer$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_fileWriterFinish
add	esp, 12					
mov	DWORD PTR _rc2$4[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Vdb
mov	edx, DWORD PTR _rc2$4[ebp]
mov	DWORD PTR _rc$[ebp], edx
jmp	$LN12@sqlite3Vdb
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+24], 16			
jg	SHORT $LN3@sqlite3Vdb
jmp	SHORT $LN14@sqlite3Vdb
jmp	SHORT $LN15@sqlite3Vdb
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	DWORD PTR _pTmp$3[ebp], edx
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR _iNew$7[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR _pTemp2$[ebp]
mov	DWORD PTR [edx+44], eax
mov	ecx, DWORD PTR _pTmp$3[ebp]
mov	DWORD PTR _pTemp2$[ebp], ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR _iWrite2$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _iWrite2$[ebp+4]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [edx+8], 0
mov	DWORD PTR [edx+12], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _iWrite2$[ebp], xmm0
cmp	DWORD PTR _rc$[ebp], 0
je	$LN16@sqlite3Vdb
cmp	DWORD PTR _pTemp2$[ebp], 0
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pTemp2$[ebp]
push	eax
call	_sqlite3OsCloseFree
add	esp, 4
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+40]
imul	ecx, DWORD PTR [eax+ecx], 48
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [edx+36]
cmp	DWORD PTR [eax+ecx+24], 0
jne	SHORT $LN27@sqlite3Vdb
mov	DWORD PTR tv194[ebp], 1
jmp	SHORT $LN28@sqlite3Vdb
mov	DWORD PTR tv194[ebp], 0
mov	ecx, DWORD PTR _pbEof$[ebp]
mov	edx, DWORD PTR tv194[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterNext PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
mov	edx, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [edx+40], 0
je	$LN13@sqlite3Vdb
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+40]
mov	eax, DWORD PTR [eax+edx]
mov	DWORD PTR _iPrev$4[ebp], eax
imul	ecx, DWORD PTR _iPrev$4[ebp], 48
mov	edx, DWORD PTR _pSorter$[ebp]
add	ecx, DWORD PTR [edx+36]
push	ecx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vdbeSorterIterNext
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN12@sqlite3Vdb
mov	ecx, DWORD PTR _iPrev$4[ebp]
and	ecx, 65534				
imul	edx, ecx, 48
mov	eax, DWORD PTR _pSorter$[ebp]
add	edx, DWORD PTR [eax+36]
mov	DWORD PTR _pIter1$5[ebp], edx
mov	ecx, DWORD PTR _iPrev$4[ebp]
or	ecx, 1
imul	edx, ecx, 48
mov	eax, DWORD PTR _pSorter$[ebp]
add	edx, DWORD PTR [eax+36]
mov	DWORD PTR _pIter2$6[ebp], edx
mov	ecx, DWORD PTR _pIter2$6[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pKey2$2[ebp], edx
mov	eax, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR [eax+20]
add	eax, DWORD PTR _iPrev$4[ebp]
cdq
sub	eax, edx
sar	eax, 1
mov	DWORD PTR _i$7[ebp], eax
jmp	SHORT $LN11@sqlite3Vdb
mov	eax, DWORD PTR _i$7[ebp]
cdq
sub	eax, edx
sar	eax, 1
mov	DWORD PTR _i$7[ebp], eax
cmp	DWORD PTR _i$7[ebp], 0
jle	$LN9@sqlite3Vdb
mov	ecx, DWORD PTR _pIter1$5[ebp]
cmp	DWORD PTR [ecx+24], 0
jne	SHORT $LN8@sqlite3Vdb
mov	DWORD PTR _iRes$3[ebp], 1
jmp	SHORT $LN7@sqlite3Vdb
mov	edx, DWORD PTR _pIter2$6[ebp]
cmp	DWORD PTR [edx+24], 0
jne	SHORT $LN6@sqlite3Vdb
mov	DWORD PTR _iRes$3[ebp], -1
jmp	SHORT $LN7@sqlite3Vdb
lea	eax, DWORD PTR _iRes$3[ebp]
push	eax
mov	ecx, DWORD PTR _pIter2$6[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pKey2$2[ebp]
push	eax
mov	ecx, DWORD PTR _pIter1$5[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pIter1$5[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
push	0
mov	edx, DWORD PTR _pCsr$[ebp]
push	edx
call	_vdbeSorterCompare
add	esp, 28					
cmp	DWORD PTR _iRes$3[ebp], 0
jg	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR _pIter1$5[ebp]
sub	ecx, DWORD PTR [eax+36]
mov	eax, ecx
cdq
mov	ecx, 48					
idiv	ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [edx+40]
mov	edx, DWORD PTR _i$7[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	eax, DWORD PTR _i$7[ebp]
xor	eax, 1
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+40]
imul	eax, DWORD PTR [edx+eax*4], 48
mov	ecx, DWORD PTR _pSorter$[ebp]
add	eax, DWORD PTR [ecx+36]
mov	DWORD PTR _pIter2$6[ebp], eax
mov	edx, DWORD PTR _pIter2$6[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _pKey2$2[ebp], eax
jmp	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _pIter1$5[ebp]
cmp	DWORD PTR [ecx+24], 0
je	SHORT $LN2@sqlite3Vdb
mov	DWORD PTR _pKey2$2[ebp], 0
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR _pIter2$6[ebp]
sub	eax, DWORD PTR [edx+36]
cdq
mov	ecx, 48					
idiv	ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [edx+40]
mov	edx, DWORD PTR _i$7[ebp]
mov	DWORD PTR [ecx+edx*4], eax
mov	eax, DWORD PTR _i$7[ebp]
xor	eax, 1
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+40]
imul	eax, DWORD PTR [edx+eax*4], 48
mov	ecx, DWORD PTR _pSorter$[ebp]
add	eax, DWORD PTR [ecx+36]
mov	DWORD PTR _pIter1$5[ebp], eax
jmp	$LN10@sqlite3Vdb
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+40]
imul	edx, DWORD PTR [ecx+edx], 48
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+36]
cmp	DWORD PTR [ecx+edx+24], 0
jne	SHORT $LN16@sqlite3Vdb
mov	DWORD PTR tv175[ebp], 1
jmp	SHORT $LN17@sqlite3Vdb
mov	DWORD PTR tv175[ebp], 0
mov	edx, DWORD PTR _pbEof$[ebp]
mov	eax, DWORD PTR tv175[ebp]
mov	DWORD PTR [edx], eax
jmp	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _pFree$1[ebp], edx
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR _pFree$1[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR [eax+48], edx
mov	eax, DWORD PTR _pFree$1[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _pFree$1[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterRecordFree
add	esp, 8
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+48], 0
jne	SHORT $LN18@sqlite3Vdb
mov	DWORD PTR tv184[ebp], 1
jmp	SHORT $LN19@sqlite3Vdb
mov	DWORD PTR tv184[ebp], 0
mov	ecx, DWORD PTR _pbEof$[ebp]
mov	edx, DWORD PTR tv184[ebp]
mov	DWORD PTR [ecx], edx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterRowkey PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
lea	edx, DWORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _pSorter$[ebp]
push	eax
call	_vdbeSorterRowkey
add	esp, 8
mov	DWORD PTR _pKey$[ebp], eax
push	0
mov	ecx, DWORD PTR _nKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR _nKey$[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 16					
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _pKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_memcpy
add	esp, 12					
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterClose PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _pSorter$[ebp], ecx
cmp	DWORD PTR _pSorter$[ebp], 0
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pSorter$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VdbeSorterReset
add	esp, 8
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pSorter$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pCsr$[ebp]
mov	DWORD PTR [eax+64], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterReset PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [eax+36], 0
je	SHORT $LN5@sqlite3Vdb
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _i$1[ebp]
add	ecx, 1
mov	DWORD PTR _i$1[ebp], ecx
mov	edx, DWORD PTR _pSorter$[ebp]
mov	eax, DWORD PTR _i$1[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN2@sqlite3Vdb
imul	ecx, DWORD PTR _i$1[ebp], 48
mov	edx, DWORD PTR _pSorter$[ebp]
add	ecx, DWORD PTR [edx+36]
push	ecx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vdbeSorterIterZero
add	esp, 8
jmp	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	edx, DWORD PTR [ecx+36]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx+36], 0
mov	edx, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [edx+44], 0
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
call	_sqlite3OsCloseFree
add	esp, 4
mov	edx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [edx+44], 0
mov	eax, DWORD PTR _pSorter$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeSorterRecordFree
add	esp, 8
mov	eax, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [eax+48], 0
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx], 0
mov	DWORD PTR [ecx+4], 0
mov	edx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [edx+8], 0
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [eax+16], 0
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx+20], 0
mov	edx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [edx+24], 0
mov	eax, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [eax+40], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSorterInit PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	56					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pSorter$[ebp], eax
mov	ecx, DWORD PTR _pCsr$[ebp]
mov	edx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx+64], edx
cmp	DWORD PTR _pSorter$[ebp], 0
jne	SHORT $LN4@sqlite3Vdb
mov	eax, 7
jmp	$LN5@sqlite3Vdb
lea	eax, DWORD PTR _d$[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _pCsr$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3VdbeAllocUnpackedRecord
add	esp, 16					
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx+52], eax
mov	edx, DWORD PTR _pSorter$[ebp]
cmp	DWORD PTR [edx+52], 0
jne	SHORT $LN3@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3TempInMemory
add	esp, 4
test	eax, eax
jne	SHORT $LN2@sqlite3Vdb
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR _pgsz$[ebp], eax
imul	eax, DWORD PTR _pgsz$[ebp], 10
mov	ecx, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
mov	ecx, DWORD PTR [eax+80]
mov	DWORD PTR _mxCache$[ebp], ecx
cmp	DWORD PTR _mxCache$[ebp], 10		
jge	SHORT $LN1@sqlite3Vdb
mov	DWORD PTR _mxCache$[ebp], 10		
mov	edx, DWORD PTR _mxCache$[ebp]
imul	edx, DWORD PTR _pgsz$[ebp]
mov	eax, DWORD PTR _pSorter$[ebp]
mov	DWORD PTR [eax+32], edx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeTransferError PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+80]
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+44], 0
je	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR [edx+64]
mov	BYTE PTR _mallocFailed$1[ebp], al
call	_sqlite3BeginBenignMalloc
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+224], 0
jne	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ValueNew
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+224], eax
push	-1
push	1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
push	-1
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+224]
push	edx
call	_sqlite3ValueSetStr
add	esp, 20					
call	_sqlite3EndBenignMalloc
mov	eax, DWORD PTR _db$[ebp]
mov	cl, BYTE PTR _mallocFailed$1[ebp]
mov	BYTE PTR [eax+64], cl
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx+52], eax
jmp	SHORT $LN1@sqlite3Vdb
push	0
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeFrameRestore PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx+200], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR [edx+196], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR [edx+32], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR [edx+28], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [edx+56], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	DWORD PTR [edx+36], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pFrame$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR [eax+32], edx
mov	ecx, DWORD PTR [ecx+36]
mov	DWORD PTR [eax+36], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _pFrame$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR [edx+92], ecx
mov	edx, DWORD PTR _pFrame$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeFrameDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, 1
imul	ecx, eax, 72
add	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR _aMem$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
imul	eax, DWORD PTR [edx+60], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _apCsr$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+64]
jge	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _apCsr$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3VdbeFreeCursor
add	esp, 8
jmp	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _aMem$[ebp]
push	edx
call	_releaseMemArray
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeCloseStatement PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+492], 0
je	$LN12@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+104], 0
je	$LN12@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+104]
sub	edx, 1
mov	DWORD PTR _iSavepoint$2[ebp], edx
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN11@sqlite3Vdb
mov	eax, DWORD PTR _i$4[ebp]
add	eax, 1
mov	DWORD PTR _i$4[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$4[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN9@sqlite3Vdb
mov	DWORD PTR _rc2$3[ebp], 0
mov	eax, DWORD PTR _i$4[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$1[ebp], eax
cmp	DWORD PTR _pBt$1[ebp], 0
je	SHORT $LN8@sqlite3Vdb
cmp	DWORD PTR _eOp$[ebp], 2
jne	SHORT $LN7@sqlite3Vdb
mov	ecx, DWORD PTR _iSavepoint$2[ebp]
push	ecx
push	2
mov	edx, DWORD PTR _pBt$1[ebp]
push	edx
call	_sqlite3BtreeSavepoint
add	esp, 12					
mov	DWORD PTR _rc2$3[ebp], eax
cmp	DWORD PTR _rc2$3[ebp], 0
jne	SHORT $LN6@sqlite3Vdb
mov	eax, DWORD PTR _iSavepoint$2[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pBt$1[ebp]
push	ecx
call	_sqlite3BtreeSavepoint
add	esp, 12					
mov	DWORD PTR _rc2$3[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@sqlite3Vdb
mov	edx, DWORD PTR _rc2$3[ebp]
mov	DWORD PTR _rc$[ebp], edx
jmp	SHORT $LN10@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+492]
sub	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+492], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+104], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@sqlite3Vdb
cmp	DWORD PTR _eOp$[ebp], 2
jne	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _iSavepoint$2[ebp]
push	ecx
push	2
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VtabSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _iSavepoint$2[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _eOp$[ebp], 2
jne	SHORT $LN12@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+152]
mov	DWORD PTR [edx+496], ecx
mov	eax, DWORD PTR [eax+156]
mov	DWORD PTR [edx+500], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+160]
mov	DWORD PTR [ecx+504], eax
mov	edx, DWORD PTR [edx+164]
mov	DWORD PTR [ecx+508], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemGrow PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pMem$[ebp]
cmp	DWORD PTR [eax+36], 0
je	SHORT $LN8@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+36]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbMallocSize
add	esp, 8
cmp	eax, DWORD PTR _n$[ebp]
jge	$LN9@sqlite3Vdb
cmp	DWORD PTR _n$[ebp], 32			
jge	SHORT $LN7@sqlite3Vdb
mov	DWORD PTR _n$[ebp], 32			
cmp	DWORD PTR _bPreserve$[ebp], 0
je	SHORT $LN6@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [edx+4]
cmp	ecx, DWORD PTR [eax+36]
jne	SHORT $LN6@sqlite3Vdb
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbReallocOrFree
add	esp, 12					
mov	DWORD PTR tv79[ebp], eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR tv79[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR tv79[ebp]
mov	DWORD PTR [eax+4], ecx
mov	DWORD PTR _bPreserve$[ebp], 0
jmp	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _pMem$[ebp]
cmp	DWORD PTR [edx+36], 0
jne	SHORT $LN9@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 9312				
je	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+4], 0
mov	ecx, 1
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, 7
jmp	$LN10@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN2@sqlite3Vdb
cmp	DWORD PTR _bPreserve$[ebp], 0
je	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [ecx+4]
cmp	eax, DWORD PTR [edx+36]
je	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pMem$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 1024				
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+32]
call	eax
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+36]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pMem$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -7169				
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+32], 0
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OpcodeName PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR ?azName@?1??sqlite3OpcodeName@@9@9[eax*4]
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemFinalize PROC
push	ebp
mov	ebp, esp
sub	esp, 76					
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _pFunc$[ebp], 0
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pFunc$[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN1@sqlite3Vdb
push	72					
push	0
lea	ecx, DWORD PTR _ctx$1[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, 1
mov	WORD PTR _ctx$1[ebp+36], dx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _ctx$1[ebp+8], ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR _ctx$1[ebp+48], edx
mov	eax, DWORD PTR _pFunc$[ebp]
mov	DWORD PTR _ctx$1[ebp], eax
lea	ecx, DWORD PTR _ctx$1[ebp]
push	ecx
mov	edx, DWORD PTR _pFunc$[ebp]
mov	eax, DWORD PTR [edx+20]
call	eax
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+36]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbFree
add	esp, 8
push	40					
lea	edx, DWORD PTR _ctx$1[ebp+8]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _ctx$1[ebp+64]
mov	DWORD PTR _rc$[ebp], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemReleaseExternal PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 8192				
je	SHORT $LN7@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeMemFinalize
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
jmp	SHORT $LN8@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 1024				
je	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
call	edx
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+32], 0
jmp	SHORT $LN8@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 32					
je	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_sqlite3RowSetClear
add	esp, 4
jmp	SHORT $LN8@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 64					
je	SHORT $LN8@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeMemSetNull
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemRelease PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 9312				
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+36], 0
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+36]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+36], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+4], 0
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemFromBtree PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _available$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _key$[ebp], 0
je	SHORT $LN9@sqlite3Vdb
lea	eax, DWORD PTR _available$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_sqlite3BtreeKeyFetch
add	esp, 8
mov	DWORD PTR _zData$[ebp], eax
jmp	SHORT $LN8@sqlite3Vdb
lea	edx, DWORD PTR _available$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_sqlite3BtreeDataFetch
add	esp, 8
mov	DWORD PTR _zData$[ebp], eax
mov	ecx, DWORD PTR _offset$[ebp]
add	ecx, DWORD PTR _amt$[ebp]
cmp	ecx, DWORD PTR _available$[ebp]
ja	SHORT $LN7@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	eax, DWORD PTR _zData$[ebp]
add	eax, DWORD PTR _offset$[ebp]
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, 4112				
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _amt$[ebp]
mov	DWORD PTR [ecx+24], edx
jmp	$LN6@sqlite3Vdb
push	0
mov	eax, DWORD PTR _amt$[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_sqlite3VdbeMemGrow
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN6@sqlite3Vdb
cmp	DWORD PTR _key$[ebp], 0
je	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _amt$[ebp]
push	ecx
mov	edx, DWORD PTR _offset$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_sqlite3BtreeKey
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _amt$[ebp]
push	eax
mov	ecx, DWORD PTR _offset$[ebp]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_sqlite3BtreeData
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _amt$[ebp]
mov	BYTE PTR [ecx+edx], 0
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _amt$[ebp]
mov	BYTE PTR [ecx+edx+1], 0
mov	eax, 528				
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _amt$[ebp]
mov	DWORD PTR [edx+24], eax
jmp	SHORT $LN6@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemNumerify PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 13					
jne	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, BYTE PTR [edx+30]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
add	eax, 16					
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3Atoi64
add	esp, 16					
test	eax, eax
jne	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, -16896				
or	ecx, 4
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
jmp	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeRealValue
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
fstp	QWORD PTR [ecx+8]
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 8
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeIntegerAffinity
add	esp, 4
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, -19				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemRealify PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeRealValue
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
fstp	QWORD PTR [ecx+8]
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 8
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeIntegerAffinity PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pMem$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax+8]
movsd	QWORD PTR [esp], xmm0
call	_doubleToInt64
add	esp, 8
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [edx+16]
mov	edx, DWORD PTR [edx+20]
call	__ltod3
mov	eax, DWORD PTR _pMem$[ebp]
movsd	xmm1, QWORD PTR [eax+8]
ucomisd	xmm1, xmm0
lahf
test	ah, 68					
jp	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR tv136[ebp], ecx
mov	edx, DWORD PTR tv136[ebp]
cmp	DWORD PTR [edx+20], -2147483648		
jl	SHORT $LN1@sqlite3Vdb
jg	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR tv136[ebp]
cmp	DWORD PTR [eax+16], 0
jbe	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR tv142[ebp], ecx
mov	edx, DWORD PTR tv142[ebp]
cmp	DWORD PTR [edx+20], 2147483647		
jg	SHORT $LN1@sqlite3Vdb
jl	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR tv142[ebp]
cmp	DWORD PTR [eax+16], -1
jae	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeRealValue PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 8
je	SHORT $LN6@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
fld	QWORD PTR [edx+8]
jmp	SHORT $LN1@sqlite3Vdb
jmp	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 4
je	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [edx+16]
mov	edx, DWORD PTR [edx+20]
call	__ltod3
movsd	QWORD PTR tv131[ebp], xmm0
fld	QWORD PTR tv131[ebp]
jmp	SHORT $LN1@sqlite3Vdb
jmp	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 18					
je	SHORT $LN2@sqlite3Vdb
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR _val$1[ebp], xmm0
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, BYTE PTR [edx+30]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
lea	eax, DWORD PTR _val$1[ebp]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3AtoF
add	esp, 16					
fld	QWORD PTR _val$1[ebp]
jmp	SHORT $LN1@sqlite3Vdb
jmp	SHORT $LN1@sqlite3Vdb
fldz
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemIntegerify PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeIntValue
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeIntValue PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
mov	DWORD PTR _flags$[ebp], ecx
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 4
je	SHORT $LN6@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+20]
jmp	SHORT $LN1@sqlite3Vdb
jmp	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 8
je	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax+8]
movsd	QWORD PTR [esp], xmm0
call	_doubleToInt64
add	esp, 8
jmp	SHORT $LN1@sqlite3Vdb
jmp	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 18					
je	SHORT $LN2@sqlite3Vdb
xorpd	xmm0, xmm0
movlpd	QWORD PTR _value$1[ebp], xmm0
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, BYTE PTR [edx+30]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
lea	eax, DWORD PTR _value$1[ebp]
push	eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3Atoi64
add	esp, 16					
mov	eax, DWORD PTR _value$1[ebp]
mov	edx, DWORD PTR _value$1[ebp+4]
jmp	SHORT $LN1@sqlite3Vdb
jmp	SHORT $LN1@sqlite3Vdb
xor	eax, eax
xor	edx, edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemStringify PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
mov	DWORD PTR _fg$[ebp], ecx
mov	DWORD PTR _nByte$[ebp], 32		
push	0
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN3@sqlite3Vdb
mov	eax, 7
jmp	$LN4@sqlite3Vdb
mov	ecx, DWORD PTR _fg$[ebp]
and	ecx, 4
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR [edx+16]
push	ecx
push	OFFSET $SG96908
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
call	_sqlite3_snprintf
add	esp, 20					
jmp	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [edx+8]
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG96911
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
call	_sqlite3_snprintf
add	esp, 20					
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	edx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [edx+24], eax
mov	eax, DWORD PTR _pMem$[ebp]
mov	BYTE PTR [eax+30], 1
mov	ecx, DWORD PTR _pMem$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, 514				
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemMakeWriteable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 16384				
je	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv70[ebp], eax
jmp	SHORT $LN6@sqlite3Vdb
mov	DWORD PTR tv70[ebp], 0
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
mov	DWORD PTR _f$[ebp], ecx
mov	edx, DWORD PTR _f$[ebp]
and	edx, 18					
je	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+36]
je	SHORT $LN2@sqlite3Vdb
push	1
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	BYTE PTR [eax+ecx], 0
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	BYTE PTR [ecx+edx+1], 0
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
or	eax, 512				
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemSetRowSet PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
push	64					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN2@sqlite3Vdb
mov	ecx, 1
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
jmp	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocSize
add	esp, 8
push	eax
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3RowSetInit
add	esp, 12					
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, 32					
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemSetZeroBlob PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	ecx, 16400				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+24], 0
cmp	DWORD PTR _n$[ebp], 0
jge	SHORT $LN1@sqlite3Vdb
mov	DWORD PTR _n$[ebp], 0
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	BYTE PTR [eax+30], 1
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemSetNull PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 64					
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pFrame$1[ebp], eax
mov	ecx, DWORD PTR _pFrame$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _pFrame$1[ebp]
mov	ecx, DWORD PTR [edx+180]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pFrame$1[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pFrame$1[ebp]
mov	DWORD PTR [eax+180], ecx
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 32					
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_sqlite3RowSetClear
add	esp, 4
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, -16896				
or	ecx, 1
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemSetDouble PROC
push	ebp
mov	ebp, esp
sub	esp, 8
movsd	xmm0, QWORD PTR _val$[ebp]
movsd	QWORD PTR [esp], xmm0
call	_sqlite3IsNaN
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemSetNull
add	esp, 4
jmp	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	edx, DWORD PTR _pMem$[ebp]
movsd	xmm0, QWORD PTR _val$[ebp]
movsd	QWORD PTR [edx+8], xmm0
mov	eax, 8
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemSetInt64 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _val$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _val$[ebp+4]
mov	DWORD PTR [ecx+20], eax
mov	ecx, 4
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemSetStr PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _n$[ebp]
mov	DWORD PTR _nByte$[ebp], eax
xor	ecx, ecx
mov	WORD PTR _flags$[ebp], cx
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN21@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemSetNull
add	esp, 4
xor	eax, eax
jmp	$LN22@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN20@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+ecx+88]
mov	DWORD PTR _iLimit$[ebp], edx
jmp	SHORT $LN19@sqlite3Vdb
mov	DWORD PTR _iLimit$[ebp], 1000000000	
movzx	eax, BYTE PTR _enc$[ebp]
test	eax, eax
jne	SHORT $LN24@sqlite3Vdb
mov	DWORD PTR tv74[ebp], 16			
jmp	SHORT $LN25@sqlite3Vdb
mov	DWORD PTR tv74[ebp], 2
mov	cx, WORD PTR tv74[ebp]
mov	WORD PTR _flags$[ebp], cx
cmp	DWORD PTR _nByte$[ebp], 0
jge	SHORT $LN18@sqlite3Vdb
movzx	edx, BYTE PTR _enc$[ebp]
cmp	edx, 1
jne	SHORT $LN17@sqlite3Vdb
mov	DWORD PTR _nByte$[ebp], 0
jmp	SHORT $LN16@sqlite3Vdb
mov	eax, DWORD PTR _nByte$[ebp]
add	eax, 1
mov	DWORD PTR _nByte$[ebp], eax
mov	ecx, DWORD PTR _nByte$[ebp]
cmp	ecx, DWORD PTR _iLimit$[ebp]
jg	SHORT $LN14@sqlite3Vdb
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _nByte$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN14@sqlite3Vdb
jmp	SHORT $LN15@sqlite3Vdb
jmp	SHORT $LN13@sqlite3Vdb
mov	DWORD PTR _nByte$[ebp], 0
jmp	SHORT $LN12@sqlite3Vdb
mov	ecx, DWORD PTR _nByte$[ebp]
add	ecx, 2
mov	DWORD PTR _nByte$[ebp], ecx
mov	edx, DWORD PTR _nByte$[ebp]
cmp	edx, DWORD PTR _iLimit$[ebp]
jg	SHORT $LN13@sqlite3Vdb
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _nByte$[ebp]
movsx	ecx, BYTE PTR [eax]
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _nByte$[ebp]
movsx	eax, BYTE PTR [edx+1]
or	ecx, eax
je	SHORT $LN13@sqlite3Vdb
jmp	SHORT $LN11@sqlite3Vdb
movzx	ecx, WORD PTR _flags$[ebp]
or	ecx, 512				
mov	WORD PTR _flags$[ebp], cx
cmp	DWORD PTR _xDel$[ebp], -1
jne	SHORT $LN9@sqlite3Vdb
mov	edx, DWORD PTR _nByte$[ebp]
mov	DWORD PTR _nAlloc$1[ebp], edx
movzx	eax, WORD PTR _flags$[ebp]
and	eax, 512				
je	SHORT $LN8@sqlite3Vdb
movzx	ecx, BYTE PTR _enc$[ebp]
cmp	ecx, 1
jne	SHORT $LN26@sqlite3Vdb
mov	DWORD PTR tv137[ebp], 1
jmp	SHORT $LN27@sqlite3Vdb
mov	DWORD PTR tv137[ebp], 2
mov	edx, DWORD PTR _nAlloc$1[ebp]
add	edx, DWORD PTR tv137[ebp]
mov	DWORD PTR _nAlloc$1[ebp], edx
mov	eax, DWORD PTR _nByte$[ebp]
cmp	eax, DWORD PTR _iLimit$[ebp]
jle	SHORT $LN7@sqlite3Vdb
mov	eax, 18					
jmp	$LN22@sqlite3Vdb
push	0
mov	ecx, DWORD PTR _nAlloc$1[ebp]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN6@sqlite3Vdb
mov	eax, 7
jmp	$LN22@sqlite3Vdb
mov	eax, DWORD PTR _nAlloc$1[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_memcpy
add	esp, 12					
jmp	SHORT $LN5@sqlite3Vdb
cmp	DWORD PTR _xDel$[ebp], OFFSET _sqlite3MallocSize
jne	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _z$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+32], 0
jmp	SHORT $LN5@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _z$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _xDel$[ebp]
mov	DWORD PTR [ecx+32], edx
cmp	DWORD PTR _xDel$[ebp], 0
jne	SHORT $LN28@sqlite3Vdb
mov	DWORD PTR tv158[ebp], 2048		
jmp	SHORT $LN29@sqlite3Vdb
mov	DWORD PTR tv158[ebp], 1024		
movzx	eax, WORD PTR _flags$[ebp]
or	eax, DWORD PTR tv158[ebp]
mov	WORD PTR _flags$[ebp], ax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR _nByte$[ebp]
mov	DWORD PTR [ecx+24], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	cx, WORD PTR _flags$[ebp]
mov	WORD PTR [eax+28], cx
movzx	edx, BYTE PTR _enc$[ebp]
test	edx, edx
jne	SHORT $LN30@sqlite3Vdb
mov	DWORD PTR tv168[ebp], 1
jmp	SHORT $LN31@sqlite3Vdb
movzx	eax, BYTE PTR _enc$[ebp]
mov	DWORD PTR tv168[ebp], eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	dl, BYTE PTR tv168[ebp]
mov	BYTE PTR [ecx+30], dl
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, BYTE PTR [eax+30]
cmp	ecx, 1
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemHandleBom
add	esp, 4
test	eax, eax
je	SHORT $LN2@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN22@sqlite3Vdb
mov	eax, DWORD PTR _nByte$[ebp]
cmp	eax, DWORD PTR _iLimit$[ebp]
jle	SHORT $LN1@sqlite3Vdb
mov	eax, 18					
jmp	SHORT $LN22@sqlite3Vdb
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemNulTerminate PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 512				
jne	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 2
jne	SHORT $LN3@sqlite3Vdb
xor	eax, eax
jmp	SHORT $LN4@sqlite3Vdb
push	1
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 2
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	BYTE PTR [ecx+edx], 0
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	BYTE PTR [edx+eax+1], 0
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
or	ecx, 512				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemMove PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pTo$[ebp]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
push	40					
mov	ecx, DWORD PTR _pFrom$[ebp]
push	ecx
mov	edx, DWORD PTR _pTo$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, 1
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [edx+32], 0
mov	eax, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [eax+36], 0
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemShallowCopy PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pTo$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 9312				
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pTo$[ebp]
push	edx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
push	36					
mov	eax, DWORD PTR _pFrom$[ebp]
push	eax
mov	ecx, DWORD PTR _pTo$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pTo$[ebp]
mov	DWORD PTR [edx+32], 0
mov	eax, DWORD PTR _pFrom$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 2048				
jne	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _pTo$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -7169				
mov	ecx, DWORD PTR _pTo$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pTo$[ebp]
movzx	eax, WORD PTR [edx+28]
or	eax, DWORD PTR _srcType$[ebp]
mov	ecx, DWORD PTR _pTo$[ebp]
mov	WORD PTR [ecx+28], ax
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemCopy PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pTo$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 9312				
je	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _pTo$[ebp]
push	edx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
push	36					
mov	eax, DWORD PTR _pFrom$[ebp]
push	eax
mov	ecx, DWORD PTR _pTo$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pTo$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -1025				
mov	ecx, DWORD PTR _pTo$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pTo$[ebp]
mov	DWORD PTR [edx+32], 0
mov	eax, DWORD PTR _pTo$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 18					
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pFrom$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 2048				
jne	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _pTo$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, 4096				
mov	eax, DWORD PTR _pTo$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pTo$[ebp]
push	ecx
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMemTooBig PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 18					
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _n$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 16384				
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _n$1[ebp]
add	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _n$1[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _n$1[ebp]
cmp	ecx, DWORD PTR [eax+edx+88]
jle	SHORT $LN5@sqlite3Vdb
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN6@sqlite3Vdb
mov	DWORD PTR tv80[ebp], 0
mov	eax, DWORD PTR tv80[ebp]
jmp	SHORT $LN3@sqlite3Vdb
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeChangeEncoding PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 2
je	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, BYTE PTR [edx+30]
cmp	eax, DWORD PTR _desiredEnc$[ebp]
jne	SHORT $LN2@sqlite3Vdb
xor	eax, eax
jmp	SHORT $LN3@sqlite3Vdb
movzx	ecx, BYTE PTR _desiredEnc$[ebp]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
push	edx
call	_sqlite3VdbeMemTranslate
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeHalt PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN42@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+80], 7
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+200], 0
je	SHORT $LN41@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+196]
push	edx
push	0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+200]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_closeAllCursors
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+40], -1108210269		
je	SHORT $LN40@sqlite3Vdb
xor	eax, eax
jmp	$LN43@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+76], 0
jl	$LN39@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
shr	eax, 9
and	eax, 1
je	$LN39@sqlite3Vdb
mov	DWORD PTR _eStatementOp$2[ebp], 0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeEnter
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+80]
and	eax, 255				
mov	DWORD PTR _mrc$3[ebp], eax
cmp	DWORD PTR _mrc$3[ebp], 7
je	SHORT $LN45@sqlite3Vdb
cmp	DWORD PTR _mrc$3[ebp], 10		
je	SHORT $LN45@sqlite3Vdb
cmp	DWORD PTR _mrc$3[ebp], 9
je	SHORT $LN45@sqlite3Vdb
cmp	DWORD PTR _mrc$3[ebp], 13		
je	SHORT $LN45@sqlite3Vdb
mov	DWORD PTR tv93[ebp], 0
jmp	SHORT $LN46@sqlite3Vdb
mov	DWORD PTR tv93[ebp], 1
mov	ecx, DWORD PTR tv93[ebp]
mov	DWORD PTR _isSpecialError$1[ebp], ecx
cmp	DWORD PTR _isSpecialError$1[ebp], 0
je	SHORT $LN38@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
shr	eax, 8
and	eax, 1
je	SHORT $LN36@sqlite3Vdb
cmp	DWORD PTR _mrc$3[ebp], 9
je	SHORT $LN38@sqlite3Vdb
cmp	DWORD PTR _mrc$3[ebp], 7
je	SHORT $LN34@sqlite3Vdb
cmp	DWORD PTR _mrc$3[ebp], 13		
jne	SHORT $LN35@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 7
and	edx, 1
je	SHORT $LN35@sqlite3Vdb
mov	DWORD PTR _eStatementOp$2[ebp], 2
jmp	SHORT $LN38@sqlite3Vdb
push	516					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3RollbackAll
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3CloseSavepoints
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+62], 1
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+80], 0
jne	SHORT $LN32@sqlite3Vdb
push	0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeCheckFk
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+296], 0
jle	SHORT $LN30@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+320], 0
je	$LN31@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+62]
test	edx, edx
je	$LN31@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 8
and	ecx, 1
jne	SHORT $LN47@sqlite3Vdb
mov	DWORD PTR tv158[ebp], 1
jmp	SHORT $LN48@sqlite3Vdb
mov	DWORD PTR tv158[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+148]
cmp	eax, DWORD PTR tv158[ebp]
jne	$LN31@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+80], 0
je	SHORT $LN28@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+86]
cmp	eax, 3
jne	$LN29@sqlite3Vdb
cmp	DWORD PTR _isSpecialError$1[ebp], 0
jne	$LN29@sqlite3Vdb
push	1
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeCheckFk
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN27@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
shr	eax, 8
and	eax, 1
je	SHORT $LN26@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeLeave
add	esp, 4
mov	eax, 1
jmp	$LN43@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 787		
jmp	SHORT $LN25@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vdbeCommit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN24@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 8
and	edx, 1
je	SHORT $LN24@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeLeave
add	esp, 4
mov	eax, 5
jmp	$LN43@sqlite3Vdb
jmp	SHORT $LN23@sqlite3Vdb
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN22@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx+80], edx
push	0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3RollbackAll
add	esp, 8
jmp	SHORT $LN23@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+496], 0
mov	DWORD PTR [ecx+500], 0
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+504], 0
mov	DWORD PTR [edx+508], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -16777217				
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3CommitInternalChanges
add	esp, 4
jmp	SHORT $LN20@sqlite3Vdb
push	0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3RollbackAll
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+492], 0
jmp	SHORT $LN19@sqlite3Vdb
cmp	DWORD PTR _eStatementOp$2[ebp], 0
jne	SHORT $LN19@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+80], 0
je	SHORT $LN16@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+86]
cmp	edx, 3
jne	SHORT $LN17@sqlite3Vdb
mov	DWORD PTR _eStatementOp$2[ebp], 1
jmp	SHORT $LN19@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+86]
cmp	ecx, 2
jne	SHORT $LN14@sqlite3Vdb
mov	DWORD PTR _eStatementOp$2[ebp], 2
jmp	SHORT $LN19@sqlite3Vdb
push	516					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3RollbackAll
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3CloseSavepoints
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+62], 1
cmp	DWORD PTR _eStatementOp$2[ebp], 0
je	SHORT $LN12@sqlite3Vdb
mov	edx, DWORD PTR _eStatementOp$2[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeCloseStatement
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+80], 0
je	SHORT $LN9@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+80]
and	eax, 255				
cmp	eax, 19					
jne	SHORT $LN10@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx+80], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+44], 0
push	516					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3RollbackAll
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CloseSavepoints
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+62], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 4
and	edx, 1
je	SHORT $LN8@sqlite3Vdb
cmp	DWORD PTR _eStatementOp$2[ebp], 2
je	SHORT $LN7@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VdbeSetChanges
add	esp, 8
jmp	SHORT $LN6@sqlite3Vdb
push	0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VdbeSetChanges
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+92], 0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeLeave
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+76], 0
jl	SHORT $LN5@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+140]
sub	edx, 1
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+140], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 8
and	edx, 1
jne	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+148]
sub	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+148], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 9
and	ecx, 1
je	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+144]
sub	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+144], eax
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+40], 1369188723		
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+80], 7
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+80], 5
jne	SHORT $LN49@sqlite3Vdb
mov	DWORD PTR tv274[ebp], 5
jmp	SHORT $LN50@sqlite3Vdb
mov	DWORD PTR tv274[ebp], 0
mov	eax, DWORD PTR tv274[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeList PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	DWORD PTR _nSub$[ebp], 0
mov	DWORD PTR _apSub$[ebp], 0
mov	DWORD PTR _pSub$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, 40					
shl	edx, 0
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+8]
mov	DWORD PTR _pMem$[ebp], edx
push	8
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_releaseMemArray
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+20], 0
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+80], 7
jne	SHORT $LN31@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
mov	eax, 1
jmp	$LN32@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _nRow$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, 3
cmp	edx, 1
jne	SHORT $LN25@sqlite3Vdb
mov	eax, 40					
imul	ecx, eax, 9
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+8]
mov	DWORD PTR _pSub$[ebp], ecx
mov	eax, DWORD PTR _pSub$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 16					
je	SHORT $LN29@sqlite3Vdb
mov	edx, DWORD PTR _pSub$[ebp]
mov	eax, DWORD PTR [edx+24]
shr	eax, 2
mov	DWORD PTR _nSub$[ebp], eax
mov	ecx, DWORD PTR _pSub$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _apSub$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN28@sqlite3Vdb
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nSub$[ebp]
jge	SHORT $LN25@sqlite3Vdb
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _apSub$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
mov	edx, DWORD PTR _nRow$[ebp]
add	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _nRow$[ebp], edx
jmp	SHORT $LN27@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+76]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+76]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+76], eax
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nRow$[ebp]
jge	SHORT $LN23@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, 3
cmp	ecx, 2
jne	SHORT $LN23@sqlite3Vdb
imul	edx, DWORD PTR _i$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx]
cmp	edx, 157				
jne	SHORT $LN25@sqlite3Vdb
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nRow$[ebp]
jl	SHORT $LN21@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+80], 0
mov	DWORD PTR _rc$[ebp], 101		
jmp	$LN20@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+232], 0
je	SHORT $LN19@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+80], 9
mov	DWORD PTR _rc$[ebp], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+80]
push	edx
call	_sqlite3ErrStr
add	esp, 4
push	eax
push	OFFSET $SG97908
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 16					
jmp	$LN20@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+32]
jge	SHORT $LN17@sqlite3Vdb
imul	ecx, DWORD PTR _i$[ebp], 20
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pOp$5[ebp], ecx
jmp	SHORT $LN16@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _i$[ebp], ecx
mov	DWORD PTR _j$4[ebp], 0
jmp	SHORT $LN15@sqlite3Vdb
mov	edx, DWORD PTR _j$4[ebp]
add	edx, 1
mov	DWORD PTR _j$4[ebp], edx
mov	eax, DWORD PTR _j$4[ebp]
mov	ecx, DWORD PTR _apSub$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+4]
jl	SHORT $LN13@sqlite3Vdb
mov	ecx, DWORD PTR _j$4[ebp]
mov	edx, DWORD PTR _apSub$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN14@sqlite3Vdb
mov	edx, DWORD PTR _j$4[ebp]
mov	eax, DWORD PTR _apSub$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
imul	edx, DWORD PTR _i$[ebp], 20
add	edx, DWORD PTR [ecx]
mov	DWORD PTR _pOp$5[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, 3
cmp	ecx, 1
jne	$LN12@sqlite3Vdb
mov	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	eax, DWORD PTR _i$[ebp]
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pMem$[ebp]
add	edx, 40					
mov	DWORD PTR _pMem$[ebp], edx
mov	eax, 2562				
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pOp$5[ebp]
movzx	eax, BYTE PTR [edx]
push	eax
call	_sqlite3OpcodeName
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _pMem$[ebp]
mov	BYTE PTR [edx+30], 1
mov	eax, DWORD PTR _pMem$[ebp]
add	eax, 40					
mov	DWORD PTR _pMem$[ebp], eax
mov	ecx, DWORD PTR _pOp$5[ebp]
movsx	edx, BYTE PTR [ecx+1]
cmp	edx, -18				
jne	$LN12@sqlite3Vdb
mov	eax, DWORD PTR _nSub$[ebp]
lea	ecx, DWORD PTR [eax*4+4]
mov	DWORD PTR _nByte$1[ebp], ecx
mov	DWORD PTR _j$3[ebp], 0
jmp	SHORT $LN10@sqlite3Vdb
mov	edx, DWORD PTR _j$3[ebp]
add	edx, 1
mov	DWORD PTR _j$3[ebp], edx
mov	eax, DWORD PTR _j$3[ebp]
cmp	eax, DWORD PTR _nSub$[ebp]
jge	SHORT $LN8@sqlite3Vdb
mov	ecx, DWORD PTR _j$3[ebp]
mov	edx, DWORD PTR _apSub$[ebp]
mov	eax, DWORD PTR _pOp$5[ebp]
mov	ecx, DWORD PTR [edx+ecx*4]
cmp	ecx, DWORD PTR [eax+16]
jne	SHORT $LN7@sqlite3Vdb
jmp	SHORT $LN8@sqlite3Vdb
jmp	SHORT $LN9@sqlite3Vdb
mov	edx, DWORD PTR _j$3[ebp]
cmp	edx, DWORD PTR _nSub$[ebp]
jne	SHORT $LN12@sqlite3Vdb
cmp	DWORD PTR _nSub$[ebp], 0
je	SHORT $LN34@sqlite3Vdb
mov	DWORD PTR tv208[ebp], 1
jmp	SHORT $LN35@sqlite3Vdb
mov	DWORD PTR tv208[ebp], 0
mov	eax, DWORD PTR tv208[ebp]
push	eax
mov	ecx, DWORD PTR _nByte$1[ebp]
push	ecx
mov	edx, DWORD PTR _pSub$[ebp]
push	edx
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
jne	SHORT $LN12@sqlite3Vdb
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _apSub$[ebp], ecx
mov	edx, DWORD PTR _nSub$[ebp]
mov	eax, DWORD PTR _apSub$[ebp]
mov	ecx, DWORD PTR _pOp$5[ebp]
mov	ecx, DWORD PTR [ecx+16]
mov	DWORD PTR [eax+edx*4], ecx
mov	edx, DWORD PTR _nSub$[ebp]
add	edx, 1
mov	DWORD PTR _nSub$[ebp], edx
mov	eax, DWORD PTR _pSub$[ebp]
movzx	ecx, WORD PTR [eax+28]
or	ecx, 16					
mov	edx, DWORD PTR _pSub$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _nSub$[ebp]
shl	eax, 2
mov	ecx, DWORD PTR _pSub$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pOp$5[ebp]
mov	eax, DWORD PTR [ecx+4]
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pMem$[ebp]
add	edx, 40					
mov	DWORD PTR _pMem$[ebp], edx
mov	eax, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pOp$5[ebp]
mov	eax, DWORD PTR [edx+8]
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pMem$[ebp]
add	edx, 40					
mov	DWORD PTR _pMem$[ebp], edx
mov	eax, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pOp$5[ebp]
mov	eax, DWORD PTR [edx+12]
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pMem$[ebp]
add	edx, 40					
mov	DWORD PTR _pMem$[ebp], edx
push	0
push	32					
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN5@sqlite3Vdb
mov	eax, 1
jmp	$LN32@sqlite3Vdb
mov	ecx, 514				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
push	32					
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pOp$5[ebp]
push	edx
call	_displayP4
add	esp, 12					
mov	DWORD PTR _zP4$2[ebp], eax
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR _zP4$2[ebp]
cmp	ecx, DWORD PTR [eax+4]
je	SHORT $LN4@sqlite3Vdb
push	0
push	1
push	-1
mov	edx, DWORD PTR _zP4$2[ebp]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemSetStr
add	esp, 20					
jmp	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _pMem$[ebp]
mov	BYTE PTR [edx+30], 1
mov	eax, DWORD PTR _pMem$[ebp]
add	eax, 40					
mov	DWORD PTR _pMem$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, 3
cmp	edx, 1
jne	SHORT $LN2@sqlite3Vdb
push	0
push	4
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Vdb
mov	eax, 1
jmp	$LN32@sqlite3Vdb
mov	ecx, 514				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+24], 2
mov	ecx, DWORD PTR _pOp$5[ebp]
movzx	edx, BYTE PTR [ecx+3]
push	edx
push	OFFSET $SG97940
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
push	3
call	_sqlite3_snprintf
add	esp, 16					
mov	edx, DWORD PTR _pMem$[ebp]
mov	BYTE PTR [edx+30], 1
mov	eax, DWORD PTR _pMem$[ebp]
add	eax, 40					
mov	DWORD PTR _pMem$[ebp], eax
mov	ecx, 1
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, 3
lea	edx, DWORD PTR [ecx*4-4]
mov	eax, 8
sub	eax, edx
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+84], ax
mov	edx, 40					
shl	edx, 0
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+8]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+80], 0
mov	DWORD PTR _rc$[ebp], 100		
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeExec PROC
push	ebp
mov	ebp, esp
sub	esp, 2136				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
mov	DWORD PTR _pc$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _aOp$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	BYTE PTR _resetSchemaOnFault$[ebp], 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	al, BYTE PTR [edx+77]
mov	BYTE PTR _encoding$[ebp], al
mov	DWORD PTR _iCompare$[ebp], 0
mov	DWORD PTR _nVmStep$[ebp], 0
mov	DWORD PTR _nProgressLimit$[ebp], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _aMem$[ebp], edx
mov	DWORD PTR _pIn1$[ebp], 0
mov	DWORD PTR _pIn2$[ebp], 0
mov	DWORD PTR _pIn3$[ebp], 0
mov	DWORD PTR _pOut$[ebp], 0
mov	DWORD PTR _aPermute$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _lastRowid$[ebp], ecx
mov	edx, DWORD PTR [eax+36]
mov	DWORD PTR _lastRowid$[ebp+4], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeEnter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+80], 7
jne	SHORT $LN694@sqlite3Vdb
jmp	$no_mem$819
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+80], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+136], 0
mov	DWORD PTR [eax+140], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+20], 0
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+444], 0
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+232], 0
je	SHORT $LN693@sqlite3Vdb
jmp	$abort_due_to_interrupt$820
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+284], 0
je	SHORT $LN690@sqlite3Vdb
mov	edx, 4
shl	edx, 2
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+edx+108]
mov	DWORD PTR _nProgressLimit$[ebp], ecx
cmp	DWORD PTR _nProgressLimit$[ebp], 0
jne	SHORT $LN691@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+292]
mov	DWORD PTR _nProgressLimit$[ebp], eax
jmp	SHORT $LN690@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _nProgressLimit$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+292]
mov	DWORD PTR _nProgressLimit$[ebp], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+76]
mov	DWORD PTR _pc$[ebp], eax
jmp	SHORT $LN689@sqlite3Vdb
mov	ecx, DWORD PTR _pc$[ebp]
add	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	$vdbe_error_halt$821
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN686@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _nVmStep$[ebp]
add	ecx, 1
mov	DWORD PTR _nVmStep$[ebp], ecx
imul	edx, DWORD PTR _pc$[ebp], 20
add	edx, DWORD PTR _aOp$[ebp]
mov	DWORD PTR _pOp$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+2]
and	ecx, 2
je	SHORT $LN685@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], eax
mov	ecx, DWORD PTR _pOut$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 9312				
je	SHORT $LN684@sqlite3Vdb
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
mov	ecx, 4
mov	edx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv148[ebp], ecx
mov	edx, DWORD PTR tv148[ebp]
sub	edx, 1
mov	DWORD PTR tv148[ebp], edx
cmp	DWORD PTR tv148[ebp], 154		
ja	$LN5@sqlite3Vdb
mov	eax, DWORD PTR tv148[ebp]
jmp	DWORD PTR $LN815@sqlite3Vdb[eax*4]
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+232], 0
je	SHORT $LN680@sqlite3Vdb
jmp	$abort_due_to_interrupt$820
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+284], 0
je	SHORT $LN678@sqlite3Vdb
mov	edx, DWORD PTR _nVmStep$[ebp]
cmp	edx, DWORD PTR _nProgressLimit$[ebp]
jb	SHORT $LN678@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _nVmStep$[ebp]
add	ecx, DWORD PTR [eax+292]
mov	esi, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _nVmStep$[ebp]
xor	edx, edx
div	DWORD PTR [esi+292]
sub	ecx, edx
mov	DWORD PTR _nProgressLimit$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+288]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+284]
call	edx
add	esp, 4
test	eax, eax
je	SHORT $LN678@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 9
jmp	$vdbe_error_halt$821
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, 4
mov	eax, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [eax+28], dx
mov	eax, DWORD PTR _pc$[ebp]
cdq
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pc$[ebp], ecx
mov	edx, 128				
mov	eax, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [eax+28], dx
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [eax+12]
sub	eax, 1
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, 4
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN674@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
push	0
push	20					
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR [eax+16]
push	edx
call	__allmul
add	eax, DWORD PTR _aOp$[ebp]
mov	DWORD PTR _pCaller$66[ebp], eax
mov	eax, DWORD PTR _pCaller$66[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
mov	edx, 128				
mov	eax, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [eax+28], dx
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, 4
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pIn1$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pcDest$38[ebp], eax
mov	eax, DWORD PTR _pc$[ebp]
cdq
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pcDest$38[ebp]
mov	DWORD PTR _pc$[ebp], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], ecx
mov	edx, DWORD PTR _pIn3$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 1
jne	SHORT $LN670@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+4], 0
jne	$LN668@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+176], 0
je	$LN668@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+176]
mov	DWORD PTR _pFrame$117[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pFrame$117[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+176], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+184]
sub	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+184], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+92]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VdbeSetChanges
add	esp, 8
mov	edx, DWORD PTR _pFrame$117[ebp]
push	edx
call	_sqlite3VdbeFrameRestore
add	esp, 4
mov	DWORD PTR _pc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _lastRowid$[ebp], ecx
mov	edx, DWORD PTR [eax+36]
mov	DWORD PTR _lastRowid$[ebp+4], edx
mov	eax, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [eax+8], 4
jne	SHORT $LN667@sqlite3Vdb
imul	ecx, DWORD PTR _pc$[ebp], 20
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _aOp$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _aMem$[ebp], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax+80], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pOp$[ebp]
mov	dl, BYTE PTR [ecx+8]
mov	BYTE PTR [eax+86], dl
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pc$[ebp]
mov	DWORD PTR [eax+76], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+80], 0
je	$LN666@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
je	SHORT $LN665@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
mov	ecx, DWORD PTR ?azType@?BI@??sqlite3VdbeExec@@9@9[eax*4-4]
mov	DWORD PTR _zType$184[ebp], ecx
jmp	SHORT $LN664@sqlite3Vdb
mov	DWORD PTR _zType$184[ebp], 0
mov	DWORD PTR _zLogFmt$13[ebp], OFFSET $SG99959
cmp	DWORD PTR _zType$184[ebp], 0
je	SHORT $LN663@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN663@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _zType$184[ebp]
push	edx
push	OFFSET $SG99961
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 20					
jmp	SHORT $LN660@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN661@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
push	OFFSET $SG99964
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3SetString
add	esp, 16					
jmp	SHORT $LN660@sqlite3Vdb
mov	ecx, DWORD PTR _zType$184[ebp]
push	ecx
push	OFFSET $SG99966
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3SetString
add	esp, 16					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+168]
push	ecx
mov	edx, DWORD PTR _pc$[ebp]
push	edx
mov	eax, DWORD PTR _zLogFmt$13[ebp]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3_log
add	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeHalt
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN659@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 5
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx+80], edx
jmp	SHORT $LN658@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+80], 0
je	SHORT $LN697@sqlite3Vdb
mov	DWORD PTR tv296[ebp], 1
jmp	SHORT $LN698@sqlite3Vdb
mov	DWORD PTR tv296[ebp], 101		
mov	ecx, DWORD PTR tv296[ebp]
mov	DWORD PTR _rc$[ebp], ecx
jmp	$vdbe_return$823
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [eax]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+20], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, 8
mov	edx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR _pOut$[ebp]
movsd	xmm0, QWORD PTR [ecx]
movsd	QWORD PTR [edx+8], xmm0
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [eax], 27			
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _pOp$[ebp]
mov	DWORD PTR [ecx+4], eax
movzx	edx, BYTE PTR _encoding$[ebp]
cmp	edx, 1
je	$LN653@sqlite3Vdb
push	0
push	1
push	-1
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 18			
jne	SHORT $LN652@sqlite3Vdb
jmp	$too_big$824
movzx	eax, BYTE PTR _encoding$[ebp]
push	eax
mov	ecx, DWORD PTR _pOut$[ebp]
push	ecx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
test	eax, eax
je	SHORT $LN651@sqlite3Vdb
jmp	$no_mem$819
mov	edx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [edx+36], 0
mov	eax, DWORD PTR _pOut$[ebp]
movzx	ecx, WORD PTR [eax+28]
or	ecx, 2048				
mov	edx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pOp$[ebp]
movsx	ecx, BYTE PTR [eax+1]
cmp	ecx, -1
jne	SHORT $LN650@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [edx+1], -1
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax+4], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [edx+4]
cmp	edx, DWORD PTR [eax+ecx+88]
jle	SHORT $LN649@sqlite3Vdb
jmp	$too_big$824
mov	eax, 2562				
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _pOut$[ebp]
mov	al, BYTE PTR _encoding$[ebp]
mov	BYTE PTR [edx+30], al
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [ecx+12]
sub	eax, DWORD PTR [edx+8]
mov	DWORD PTR _cnt$141[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN699@sqlite3Vdb
mov	DWORD PTR tv361[ebp], 257		
jmp	SHORT $LN700@sqlite3Vdb
mov	DWORD PTR tv361[ebp], 1
mov	dx, WORD PTR tv361[ebp]
mov	WORD PTR _nullFlag$205[ebp], dx
mov	eax, DWORD PTR _pOut$[ebp]
mov	cx, WORD PTR _nullFlag$205[ebp]
mov	WORD PTR [eax+28], cx
cmp	DWORD PTR _cnt$141[ebp], 0
jle	SHORT $LN645@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
add	edx, 40					
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pOut$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 9312				
je	SHORT $LN644@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
mov	eax, DWORD PTR _pOut$[ebp]
mov	cx, WORD PTR _nullFlag$205[ebp]
mov	WORD PTR [eax+28], cx
mov	edx, DWORD PTR _cnt$141[ebp]
sub	edx, 1
mov	DWORD PTR _cnt$141[ebp], edx
jmp	SHORT $LN646@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], ecx
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
or	eax, 1
and	eax, -129				
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
jmp	$LN682@sqlite3Vdb
push	0
push	0
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemSetStr
add	esp, 20					
mov	ecx, DWORD PTR _pOut$[ebp]
mov	dl, BYTE PTR _encoding$[ebp]
mov	BYTE PTR [ecx+30], dl
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
sub	ecx, 1
imul	edx, ecx, 40
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+60]
mov	DWORD PTR _pVar$76[ebp], edx
mov	ecx, DWORD PTR _pVar$76[ebp]
push	ecx
call	_sqlite3VdbeMemTooBig
add	esp, 4
test	eax, eax
je	SHORT $LN640@sqlite3Vdb
jmp	$too_big$824
push	2048					
mov	edx, DWORD PTR _pVar$76[ebp]
push	edx
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemShallowCopy
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _n$151[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _p1$67[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p2$64[ebp], eax
imul	ecx, DWORD PTR _p1$67[ebp], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
imul	edx, DWORD PTR _p2$64[ebp], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pOut$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 9312				
je	SHORT $LN635@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
mov	eax, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR _zMalloc$62[ebp], ecx
push	40					
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, 128				
mov	edx, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR [eax+32], 0
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	edx, DWORD PTR _zMalloc$62[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, DWORD PTR _pIn1$[ebp]
add	eax, 40					
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pOut$[ebp]
add	ecx, 40					
mov	DWORD PTR _pOut$[ebp], ecx
mov	edx, DWORD PTR _n$151[ebp]
sub	edx, 1
mov	DWORD PTR _n$151[ebp], edx
jne	$LN638@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _n$147[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+8], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, 1
test	eax, eax
je	$LN632@sqlite3Vdb
push	4096					
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemShallowCopy
add	esp, 12					
mov	eax, DWORD PTR _pOut$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 4096				
je	SHORT $LN631@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
test	eax, eax
je	SHORT $LN631@sqlite3Vdb
jmp	$no_mem$819
mov	eax, DWORD PTR _n$147[ebp]
mov	DWORD PTR tv443[ebp], eax
mov	ecx, DWORD PTR _n$147[ebp]
sub	ecx, 1
mov	DWORD PTR _n$147[ebp], ecx
cmp	DWORD PTR tv443[ebp], 0
jne	SHORT $LN630@sqlite3Vdb
jmp	SHORT $LN632@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
add	edx, 40					
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
add	eax, 40					
mov	DWORD PTR _pIn1$[ebp], eax
jmp	$LN633@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], ecx
push	4096					
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemShallowCopy
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+284], 0
je	SHORT $LN627@sqlite3Vdb
mov	edx, DWORD PTR _nVmStep$[ebp]
cmp	edx, DWORD PTR _nProgressLimit$[ebp]
jb	SHORT $LN627@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+288]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+284]
call	eax
add	esp, 4
test	eax, eax
je	SHORT $LN627@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 9
jmp	$vdbe_error_halt$821
push	0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeCheckFk
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN626@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
push	1
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeCloseStatement
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN625@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 2
or	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+72], ecx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
mov	edx, DWORD PTR _aMem$[ebp]
add	edx, ecx
mov	DWORD PTR tv510[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR tv510[ebp]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR tv510[ebp]
mov	DWORD PTR _pMem$145[ebp], edx
mov	DWORD PTR _i$223[ebp], 0
jmp	SHORT $LN624@sqlite3Vdb
mov	eax, DWORD PTR _i$223[ebp]
add	eax, 1
mov	DWORD PTR _i$223[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR _i$223[ebp]
cmp	edx, DWORD PTR [ecx+8]
jge	SHORT $LN622@sqlite3Vdb
imul	eax, DWORD PTR _i$223[ebp], 40
mov	ecx, DWORD PTR _pMem$145[ebp]
movzx	edx, WORD PTR [ecx+eax+28]
and	edx, 4096				
je	SHORT $LN621@sqlite3Vdb
imul	eax, DWORD PTR _i$223[ebp], 40
add	eax, DWORD PTR _pMem$145[ebp]
push	eax
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
test	eax, eax
je	SHORT $LN621@sqlite3Vdb
jmp	$no_mem$819
imul	ecx, DWORD PTR _i$223[ebp], 40
add	ecx, DWORD PTR _pMem$145[ebp]
push	ecx
call	_sqlite3VdbeMemNulTerminate
add	esp, 4
jmp	SHORT $LN623@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN620@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pc$[ebp]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+76], ecx
mov	DWORD PTR _rc$[ebp], 100		
jmp	$vdbe_return$823
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+12], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
movzx	ecx, WORD PTR [eax+28]
mov	edx, DWORD PTR _pIn2$[ebp]
movzx	eax, WORD PTR [edx+28]
or	ecx, eax
and	ecx, 1
je	SHORT $LN618@sqlite3Vdb
mov	ecx, DWORD PTR _pOut$[ebp]
push	ecx
call	_sqlite3VdbeMemSetNull
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 16384				
je	SHORT $LN701@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv556[ebp], eax
jmp	SHORT $LN702@sqlite3Vdb
mov	DWORD PTR tv556[ebp], 0
cmp	DWORD PTR tv556[ebp], 0
jne	SHORT $LN616@sqlite3Vdb
mov	edx, DWORD PTR _pIn2$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 16384				
je	SHORT $LN703@sqlite3Vdb
mov	ecx, DWORD PTR _pIn2$[ebp]
push	ecx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv564[ebp], eax
jmp	SHORT $LN704@sqlite3Vdb
mov	DWORD PTR tv564[ebp], 0
cmp	DWORD PTR tv564[ebp], 0
je	SHORT $LN617@sqlite3Vdb
jmp	$no_mem$819
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 18					
jne	SHORT $LN615@sqlite3Vdb
movzx	ecx, BYTE PTR _encoding$[ebp]
push	ecx
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
call	_sqlite3VdbeMemStringify
add	esp, 8
test	eax, eax
je	SHORT $LN615@sqlite3Vdb
jmp	$no_mem$819
mov	eax, DWORD PTR _pIn2$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 18					
jne	SHORT $LN614@sqlite3Vdb
movzx	edx, BYTE PTR _encoding$[ebp]
push	edx
mov	eax, DWORD PTR _pIn2$[ebp]
push	eax
call	_sqlite3VdbeMemStringify
add	esp, 8
test	eax, eax
je	SHORT $LN614@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	eax, DWORD PTR [ecx+24]
mov	edx, DWORD PTR _pIn2$[ebp]
add	eax, DWORD PTR [edx+24]
cdq
mov	DWORD PTR _nByte$169[ebp], eax
mov	DWORD PTR _nByte$169[ebp+4], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+ecx+88]
cdq
mov	DWORD PTR tv5095[ebp], eax
mov	DWORD PTR tv5095[ebp+4], edx
mov	eax, DWORD PTR _nByte$169[ebp+4]
cmp	eax, DWORD PTR tv5095[ebp+4]
jl	SHORT $LN613@sqlite3Vdb
jg	SHORT $LN801@sqlite3Vdb
mov	ecx, DWORD PTR _nByte$169[ebp]
cmp	ecx, DWORD PTR tv5095[ebp]
jbe	SHORT $LN613@sqlite3Vdb
jmp	$too_big$824
mov	edx, DWORD PTR _pOut$[ebp]
cmp	edx, DWORD PTR _pIn2$[ebp]
jne	SHORT $LN705@sqlite3Vdb
mov	DWORD PTR tv595[ebp], 1
jmp	SHORT $LN706@sqlite3Vdb
mov	DWORD PTR tv595[ebp], 0
mov	eax, DWORD PTR tv595[ebp]
push	eax
mov	ecx, DWORD PTR _nByte$169[ebp]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN612@sqlite3Vdb
jmp	$no_mem$819
mov	eax, DWORD PTR _pOut$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, -16896				
or	ecx, 2
mov	edx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pOut$[ebp]
cmp	eax, DWORD PTR _pIn2$[ebp]
je	SHORT $LN611@sqlite3Vdb
mov	ecx, DWORD PTR _pIn2$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pIn2$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pIn1$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _pIn2$[ebp]
add	eax, DWORD PTR [ecx+24]
push	eax
call	_memcpy
add	esp, 12					
push	0
push	1
mov	edx, DWORD PTR _nByte$169[ebp+4]
push	edx
mov	eax, DWORD PTR _nByte$169[ebp]
push	eax
call	__allmul
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	BYTE PTR [eax+edx], 0
mov	eax, DWORD PTR _nByte$169[ebp]
add	eax, 1
mov	ecx, DWORD PTR _nByte$169[ebp+4]
adc	ecx, 0
push	0
push	1
push	ecx
push	eax
call	__allmul
mov	edx, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR [edx+4]
mov	BYTE PTR [eax+ecx], 0
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
or	eax, 512				
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _nByte$169[ebp]
mov	eax, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR _pOut$[ebp]
mov	dl, BYTE PTR _encoding$[ebp]
mov	BYTE PTR [ecx+30], dl
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
call	_numericType
add	esp, 4
mov	WORD PTR _type1$202[ebp], ax
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], ecx
mov	edx, DWORD PTR _pIn2$[ebp]
push	edx
call	_numericType
add	esp, 4
mov	WORD PTR _type2$207[ebp], ax
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
mov	ecx, DWORD PTR _pIn2$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	eax, edx
mov	WORD PTR _flags$149[ebp], ax
movzx	eax, WORD PTR _flags$149[ebp]
and	eax, 1
je	SHORT $LN609@sqlite3Vdb
jmp	$arithmetic_result_is_null$825
movzx	ecx, WORD PTR _type1$202[ebp]
movzx	edx, WORD PTR _type2$207[ebp]
and	ecx, edx
and	ecx, 4
je	$LN608@sqlite3Vdb
mov	eax, DWORD PTR _pIn1$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _iA$268[ebp], ecx
mov	edx, DWORD PTR [eax+20]
mov	DWORD PTR _iA$268[ebp+4], edx
mov	eax, DWORD PTR _pIn2$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _iB$252[ebp], ecx
mov	edx, DWORD PTR [eax+20]
mov	DWORD PTR _iB$252[ebp+4], edx
mov	BYTE PTR _bIntint$258[ebp], 1
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv672[ebp], ecx
mov	edx, DWORD PTR tv672[ebp]
sub	edx, 89					
mov	DWORD PTR tv672[ebp], edx
cmp	DWORD PTR tv672[ebp], 3
ja	$LN596@sqlite3Vdb
mov	eax, DWORD PTR tv672[ebp]
jmp	DWORD PTR $LN816@sqlite3Vdb[eax*4]
mov	ecx, DWORD PTR _iA$268[ebp+4]
push	ecx
mov	edx, DWORD PTR _iA$268[ebp]
push	edx
lea	eax, DWORD PTR _iB$252[ebp]
push	eax
call	_sqlite3AddInt64
add	esp, 12					
test	eax, eax
je	SHORT $LN604@sqlite3Vdb
jmp	$fp_math$826
jmp	$LN606@sqlite3Vdb
mov	ecx, DWORD PTR _iA$268[ebp+4]
push	ecx
mov	edx, DWORD PTR _iA$268[ebp]
push	edx
lea	eax, DWORD PTR _iB$252[ebp]
push	eax
call	_sqlite3SubInt64
add	esp, 12					
test	eax, eax
je	SHORT $LN602@sqlite3Vdb
jmp	$fp_math$826
jmp	$LN606@sqlite3Vdb
mov	ecx, DWORD PTR _iA$268[ebp+4]
push	ecx
mov	edx, DWORD PTR _iA$268[ebp]
push	edx
lea	eax, DWORD PTR _iB$252[ebp]
push	eax
call	_sqlite3MulInt64
add	esp, 12					
test	eax, eax
je	SHORT $LN600@sqlite3Vdb
jmp	$fp_math$826
jmp	$LN606@sqlite3Vdb
mov	ecx, DWORD PTR _iA$268[ebp]
or	ecx, DWORD PTR _iA$268[ebp+4]
jne	SHORT $LN598@sqlite3Vdb
jmp	$arithmetic_result_is_null$825
mov	edx, DWORD PTR _iA$268[ebp]
and	edx, DWORD PTR _iA$268[ebp+4]
cmp	edx, -1
jne	SHORT $LN597@sqlite3Vdb
cmp	DWORD PTR _iB$252[ebp], 0
jne	SHORT $LN597@sqlite3Vdb
cmp	DWORD PTR _iB$252[ebp+4], -2147483648	
jne	SHORT $LN597@sqlite3Vdb
jmp	$fp_math$826
mov	eax, DWORD PTR _iA$268[ebp+4]
push	eax
mov	ecx, DWORD PTR _iA$268[ebp]
push	ecx
mov	edx, DWORD PTR _iB$252[ebp+4]
push	edx
mov	eax, DWORD PTR _iB$252[ebp]
push	eax
call	__alldiv
mov	DWORD PTR _iB$252[ebp], eax
mov	DWORD PTR _iB$252[ebp+4], edx
jmp	SHORT $LN606@sqlite3Vdb
mov	ecx, DWORD PTR _iA$268[ebp]
or	ecx, DWORD PTR _iA$268[ebp+4]
jne	SHORT $LN595@sqlite3Vdb
jmp	$arithmetic_result_is_null$825
mov	edx, DWORD PTR _iA$268[ebp]
and	edx, DWORD PTR _iA$268[ebp+4]
cmp	edx, -1
jne	SHORT $LN594@sqlite3Vdb
mov	DWORD PTR _iA$268[ebp], 1
mov	DWORD PTR _iA$268[ebp+4], 0
mov	eax, DWORD PTR _iA$268[ebp+4]
push	eax
mov	ecx, DWORD PTR _iA$268[ebp]
push	ecx
mov	edx, DWORD PTR _iB$252[ebp+4]
push	edx
mov	eax, DWORD PTR _iB$252[ebp]
push	eax
call	__allrem
mov	DWORD PTR _iB$252[ebp], eax
mov	DWORD PTR _iB$252[ebp+4], edx
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR _iB$252[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _iB$252[ebp+4]
mov	DWORD PTR [ecx+20], eax
mov	ecx, DWORD PTR _pOut$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -16896				
or	edx, 4
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
jmp	$LN581@sqlite3Vdb
mov	BYTE PTR _bIntint$258[ebp], 0
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeRealValue
add	esp, 4
fstp	QWORD PTR _rA$121[ebp]
mov	edx, DWORD PTR _pIn2$[ebp]
push	edx
call	_sqlite3VdbeRealValue
add	esp, 4
fstp	QWORD PTR _rB$215[ebp]
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv707[ebp], ecx
mov	edx, DWORD PTR tv707[ebp]
sub	edx, 89					
mov	DWORD PTR tv707[ebp], edx
cmp	DWORD PTR tv707[ebp], 3
ja	$LN585@sqlite3Vdb
mov	eax, DWORD PTR tv707[ebp]
jmp	DWORD PTR $LN817@sqlite3Vdb[eax*4]
movsd	xmm0, QWORD PTR _rB$215[ebp]
addsd	xmm0, QWORD PTR _rA$121[ebp]
movsd	QWORD PTR _rB$215[ebp], xmm0
jmp	$LN591@sqlite3Vdb
movsd	xmm0, QWORD PTR _rB$215[ebp]
subsd	xmm0, QWORD PTR _rA$121[ebp]
movsd	QWORD PTR _rB$215[ebp], xmm0
jmp	$LN591@sqlite3Vdb
movsd	xmm0, QWORD PTR _rB$215[ebp]
mulsd	xmm0, QWORD PTR _rA$121[ebp]
movsd	QWORD PTR _rB$215[ebp], xmm0
jmp	$LN591@sqlite3Vdb
movsd	xmm0, QWORD PTR _rA$121[ebp]
ucomisd	xmm0, QWORD PTR __real@0000000000000000
lahf
test	ah, 68					
jp	SHORT $LN586@sqlite3Vdb
jmp	$arithmetic_result_is_null$825
movsd	xmm0, QWORD PTR _rB$215[ebp]
divsd	xmm0, QWORD PTR _rA$121[ebp]
movsd	QWORD PTR _rB$215[ebp], xmm0
jmp	$LN591@sqlite3Vdb
movsd	xmm0, QWORD PTR _rA$121[ebp]
call	__dtol3
mov	DWORD PTR _iA$268[ebp], eax
mov	DWORD PTR _iA$268[ebp+4], edx
movsd	xmm0, QWORD PTR _rB$215[ebp]
call	__dtol3
mov	DWORD PTR _iB$252[ebp], eax
mov	DWORD PTR _iB$252[ebp+4], edx
mov	ecx, DWORD PTR _iA$268[ebp]
or	ecx, DWORD PTR _iA$268[ebp+4]
jne	SHORT $LN584@sqlite3Vdb
jmp	$arithmetic_result_is_null$825
mov	edx, DWORD PTR _iA$268[ebp]
and	edx, DWORD PTR _iA$268[ebp+4]
cmp	edx, -1
jne	SHORT $LN583@sqlite3Vdb
mov	DWORD PTR _iA$268[ebp], 1
mov	DWORD PTR _iA$268[ebp+4], 0
mov	eax, DWORD PTR _iA$268[ebp+4]
push	eax
mov	ecx, DWORD PTR _iA$268[ebp]
push	ecx
mov	edx, DWORD PTR _iB$252[ebp+4]
push	edx
mov	eax, DWORD PTR _iB$252[ebp]
push	eax
call	__allrem
mov	ecx, eax
call	__ltod3
movsd	QWORD PTR _rB$215[ebp], xmm0
sub	esp, 8
movsd	xmm0, QWORD PTR _rB$215[ebp]
movsd	QWORD PTR [esp], xmm0
call	_sqlite3IsNaN
add	esp, 8
test	eax, eax
je	SHORT $LN582@sqlite3Vdb
jmp	SHORT $arithmetic_result_is_null$825
mov	ecx, DWORD PTR _pOut$[ebp]
movsd	xmm0, QWORD PTR _rB$215[ebp]
movsd	QWORD PTR [ecx+8], xmm0
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 8
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
movzx	edx, WORD PTR _type1$202[ebp]
movzx	eax, WORD PTR _type2$207[ebp]
or	edx, eax
and	edx, 8
jne	SHORT $LN581@sqlite3Vdb
movsx	ecx, BYTE PTR _bIntint$258[ebp]
test	ecx, ecx
jne	SHORT $LN581@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeIntegerAffinity
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemSetNull
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN579@sqlite3Vdb
push	0
push	0
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
push	eax
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
mov	DWORD PTR _n$72[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _apVal$73[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+8], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pArg$204[ebp], edx
mov	DWORD PTR _i$180[ebp], 0
jmp	SHORT $LN577@sqlite3Vdb
mov	eax, DWORD PTR _i$180[ebp]
add	eax, 1
mov	DWORD PTR _i$180[ebp], eax
mov	ecx, DWORD PTR _pArg$204[ebp]
add	ecx, 40					
mov	DWORD PTR _pArg$204[ebp], ecx
mov	edx, DWORD PTR _i$180[ebp]
cmp	edx, DWORD PTR _n$72[ebp]
jge	SHORT $LN575@sqlite3Vdb
mov	eax, DWORD PTR _i$180[ebp]
mov	ecx, DWORD PTR _apVal$73[ebp]
mov	edx, DWORD PTR _pArg$204[ebp]
mov	DWORD PTR [ecx+eax*4], edx
mov	eax, DWORD PTR _pArg$204[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 4096				
je	SHORT $LN574@sqlite3Vdb
mov	edx, DWORD PTR _pArg$204[ebp]
push	edx
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
test	eax, eax
je	SHORT $LN574@sqlite3Vdb
jmp	$no_mem$819
jmp	SHORT $LN576@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _ctx$2[ebp], ecx
mov	edx, DWORD PTR _pc$[ebp]
mov	DWORD PTR _ctx$2[ebp+60], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _ctx$2[ebp+56], eax
push	40					
mov	ecx, DWORD PTR _pOut$[ebp]
push	ecx
lea	edx, DWORD PTR _ctx$2[ebp+8]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, 1
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [edx+32], 0
mov	eax, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [eax+36], 0
movzx	ecx, WORD PTR _ctx$2[ebp+36]
and	ecx, -16896				
or	ecx, 1
mov	WORD PTR _ctx$2[ebp+36], cx
mov	BYTE PTR _ctx$2[ebp+69], 0
mov	edx, DWORD PTR _ctx$2[ebp]
movzx	eax, WORD PTR [edx+2]
and	eax, 32					
je	SHORT $LN573@sqlite3Vdb
mov	ecx, 20					
imul	edx, ecx, -1
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+edx+16]
mov	DWORD PTR _ctx$2[ebp+52], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _lastRowid$[ebp]
mov	DWORD PTR [edx+32], eax
mov	ecx, DWORD PTR _lastRowid$[ebp+4]
mov	DWORD PTR [edx+36], ecx
mov	edx, DWORD PTR _apVal$73[ebp]
push	edx
mov	eax, DWORD PTR _n$72[ebp]
push	eax
lea	ecx, DWORD PTR _ctx$2[ebp]
push	ecx
mov	edx, DWORD PTR _ctx$2[ebp]
mov	eax, DWORD PTR [edx+12]
call	eax
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _lastRowid$[ebp], edx
mov	eax, DWORD PTR [ecx+36]
mov	DWORD PTR _lastRowid$[ebp+4], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN572@sqlite3Vdb
lea	eax, DWORD PTR _ctx$2[ebp+8]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
jmp	$no_mem$819
movzx	ecx, BYTE PTR _ctx$2[ebp+69]
test	ecx, ecx
je	SHORT $LN571@sqlite3Vdb
cmp	DWORD PTR _ctx$2[ebp+64], 0
je	SHORT $LN570@sqlite3Vdb
lea	edx, DWORD PTR _ctx$2[ebp+8]
push	edx
call	_sqlite3_value_text
add	esp, 4
push	eax
push	OFFSET $SG100142
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 16					
mov	edx, DWORD PTR _ctx$2[ebp+64]
mov	DWORD PTR _rc$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pc$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeDeleteAuxData
add	esp, 12					
movzx	ecx, BYTE PTR _encoding$[ebp]
push	ecx
lea	edx, DWORD PTR _ctx$2[ebp+8]
push	edx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
push	40					
lea	eax, DWORD PTR _ctx$2[ebp+8]
push	eax
mov	ecx, DWORD PTR _pOut$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemTooBig
add	esp, 4
test	eax, eax
je	SHORT $LN569@sqlite3Vdb
jmp	$too_big$824
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+12], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
movzx	ecx, WORD PTR [eax+28]
mov	edx, DWORD PTR _pIn2$[ebp]
movzx	eax, WORD PTR [edx+28]
or	ecx, eax
and	ecx, 1
je	SHORT $LN567@sqlite3Vdb
mov	ecx, DWORD PTR _pOut$[ebp]
push	ecx
call	_sqlite3VdbeMemSetNull
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pIn2$[ebp]
push	edx
call	_sqlite3VdbeIntValue
add	esp, 4
mov	DWORD PTR _iA$247[ebp], eax
mov	DWORD PTR _iA$247[ebp+4], edx
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
call	_sqlite3VdbeIntValue
add	esp, 4
mov	DWORD PTR _iB$253[ebp], eax
mov	DWORD PTR _iB$253[ebp+4], edx
mov	ecx, DWORD PTR _pOp$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR _op$276[ebp], dl
movzx	eax, BYTE PTR _op$276[ebp]
cmp	eax, 85					
jne	SHORT $LN566@sqlite3Vdb
mov	ecx, DWORD PTR _iA$247[ebp]
and	ecx, DWORD PTR _iB$253[ebp]
mov	edx, DWORD PTR _iA$247[ebp+4]
and	edx, DWORD PTR _iB$253[ebp+4]
mov	DWORD PTR _iA$247[ebp], ecx
mov	DWORD PTR _iA$247[ebp+4], edx
jmp	$LN559@sqlite3Vdb
movzx	eax, BYTE PTR _op$276[ebp]
cmp	eax, 86					
jne	SHORT $LN564@sqlite3Vdb
mov	ecx, DWORD PTR _iA$247[ebp]
or	ecx, DWORD PTR _iB$253[ebp]
mov	edx, DWORD PTR _iA$247[ebp+4]
or	edx, DWORD PTR _iB$253[ebp+4]
mov	DWORD PTR _iA$247[ebp], ecx
mov	DWORD PTR _iA$247[ebp+4], edx
jmp	$LN559@sqlite3Vdb
mov	eax, DWORD PTR _iB$253[ebp]
or	eax, DWORD PTR _iB$253[ebp+4]
je	$LN559@sqlite3Vdb
cmp	DWORD PTR _iB$253[ebp+4], 0
jg	$LN561@sqlite3Vdb
jl	SHORT $LN802@sqlite3Vdb
cmp	DWORD PTR _iB$253[ebp], 0
jae	SHORT $LN561@sqlite3Vdb
movzx	ecx, BYTE PTR _op$276[ebp]
mov	edx, 175				
sub	edx, ecx
mov	BYTE PTR _op$276[ebp], dl
cmp	DWORD PTR _iB$253[ebp+4], -1
jl	SHORT $LN707@sqlite3Vdb
jg	SHORT $LN803@sqlite3Vdb
cmp	DWORD PTR _iB$253[ebp], -64		
jbe	SHORT $LN707@sqlite3Vdb
mov	eax, DWORD PTR _iB$253[ebp]
neg	eax
mov	ecx, DWORD PTR _iB$253[ebp+4]
adc	ecx, 0
neg	ecx
mov	DWORD PTR tv854[ebp], eax
mov	DWORD PTR tv854[ebp+4], ecx
jmp	SHORT $LN708@sqlite3Vdb
mov	DWORD PTR tv854[ebp], 64		
mov	DWORD PTR tv854[ebp+4], 0
mov	edx, DWORD PTR tv854[ebp]
mov	DWORD PTR _iB$253[ebp], edx
mov	eax, DWORD PTR tv854[ebp+4]
mov	DWORD PTR _iB$253[ebp+4], eax
cmp	DWORD PTR _iB$253[ebp+4], 0
jl	SHORT $LN560@sqlite3Vdb
jg	SHORT $LN804@sqlite3Vdb
cmp	DWORD PTR _iB$253[ebp], 64		
jb	SHORT $LN560@sqlite3Vdb
cmp	DWORD PTR _iA$247[ebp+4], 0
jg	SHORT $LN709@sqlite3Vdb
jl	SHORT $LN805@sqlite3Vdb
cmp	DWORD PTR _iA$247[ebp], 0
jae	SHORT $LN709@sqlite3Vdb
movzx	ecx, BYTE PTR _op$276[ebp]
cmp	ecx, 87					
je	SHORT $LN709@sqlite3Vdb
mov	DWORD PTR tv859[ebp], -1
jmp	SHORT $LN710@sqlite3Vdb
mov	DWORD PTR tv859[ebp], 0
mov	eax, DWORD PTR tv859[ebp]
cdq
mov	DWORD PTR _iA$247[ebp], eax
mov	DWORD PTR _iA$247[ebp+4], edx
jmp	$LN559@sqlite3Vdb
push	8
lea	edx, DWORD PTR _iA$247[ebp]
push	edx
lea	eax, DWORD PTR _uA$216[ebp]
push	eax
call	_memcpy
add	esp, 12					
movzx	ecx, BYTE PTR _op$276[ebp]
cmp	ecx, 87					
jne	SHORT $LN558@sqlite3Vdb
mov	eax, DWORD PTR _uA$216[ebp]
mov	edx, DWORD PTR _uA$216[ebp+4]
mov	ecx, DWORD PTR _iB$253[ebp]
call	__allshl
mov	DWORD PTR _uA$216[ebp], eax
mov	DWORD PTR _uA$216[ebp+4], edx
jmp	SHORT $LN556@sqlite3Vdb
mov	eax, DWORD PTR _uA$216[ebp]
mov	edx, DWORD PTR _uA$216[ebp+4]
mov	ecx, DWORD PTR _iB$253[ebp]
call	__aullshr
mov	DWORD PTR _uA$216[ebp], eax
mov	DWORD PTR _uA$216[ebp+4], edx
cmp	DWORD PTR _iA$247[ebp+4], 0
jg	SHORT $LN556@sqlite3Vdb
jl	SHORT $LN806@sqlite3Vdb
cmp	DWORD PTR _iA$247[ebp], 0
jae	SHORT $LN556@sqlite3Vdb
mov	ecx, 64					
sub	ecx, DWORD PTR _iB$253[ebp]
mov	edx, 0
sbb	edx, DWORD PTR _iB$253[ebp+4]
or	eax, -1
or	edx, -1
call	__allshl
or	eax, DWORD PTR _uA$216[ebp]
or	edx, DWORD PTR _uA$216[ebp+4]
mov	DWORD PTR _uA$216[ebp], eax
mov	DWORD PTR _uA$216[ebp+4], edx
push	8
lea	eax, DWORD PTR _uA$216[ebp]
push	eax
lea	ecx, DWORD PTR _iA$247[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _iA$247[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _iA$247[ebp+4]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 4
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemIntegerify
add	esp, 4
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
cdq
mov	ecx, DWORD PTR _pIn1$[ebp]
add	eax, DWORD PTR [ecx+16]
adc	edx, DWORD PTR [ecx+20]
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 4
jne	SHORT $LN550@sqlite3Vdb
movzx	eax, BYTE PTR _encoding$[ebp]
push	eax
push	99					
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_applyAffinity
add	esp, 12					
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 4
jne	SHORT $LN550@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+8], 0
jne	SHORT $LN551@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 20			
jmp	$abort_due_to_error$827
jmp	SHORT $LN550@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -16896				
or	edx, 4
mov	eax, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [eax+28], dx
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 4
je	SHORT $LN548@sqlite3Vdb
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
call	_sqlite3VdbeMemRealify
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 1
je	SHORT $LN546@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 16					
sar	edx, 3
mov	eax, DWORD PTR _pIn1$[ebp]
movzx	ecx, WORD PTR [eax+28]
or	ecx, edx
mov	edx, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [edx+28], cx
movzx	eax, BYTE PTR _encoding$[ebp]
push	eax
push	97					
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_applyAffinity
add	esp, 12					
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 16384				
je	SHORT $LN711@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv983[ebp], eax
jmp	SHORT $LN712@sqlite3Vdb
mov	DWORD PTR tv983[ebp], 0
mov	edx, DWORD PTR tv983[ebp]
mov	DWORD PTR _rc$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, -16413				
mov	edx, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [edx+28], cx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 1
je	SHORT $LN544@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 16					
jne	SHORT $LN543@sqlite3Vdb
movzx	eax, BYTE PTR _encoding$[ebp]
push	eax
push	97					
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_applyAffinity
add	esp, 12					
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 16					
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [ecx+28], ax
jmp	SHORT $LN542@sqlite3Vdb
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -496				
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [ecx+28], ax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemNumerify
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 1
jne	SHORT $LN539@sqlite3Vdb
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
call	_sqlite3VdbeMemIntegerify
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 1
jne	SHORT $LN537@sqlite3Vdb
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
call	_sqlite3VdbeMemRealify
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	dx, WORD PTR [ecx+28]
mov	WORD PTR _flags1$227[ebp], dx
mov	eax, DWORD PTR _pIn3$[ebp]
mov	cx, WORD PTR [eax+28]
mov	WORD PTR _flags3$250[ebp], cx
movzx	edx, WORD PTR _flags1$227[ebp]
movzx	eax, WORD PTR _flags3$250[ebp]
or	edx, eax
and	edx, 1
je	$LN535@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
and	edx, 128				
je	SHORT $LN534@sqlite3Vdb
movzx	eax, WORD PTR _flags1$227[ebp]
and	eax, 1
je	SHORT $LN533@sqlite3Vdb
movzx	ecx, WORD PTR _flags3$250[ebp]
and	ecx, 1
je	SHORT $LN533@sqlite3Vdb
movzx	edx, WORD PTR _flags3$250[ebp]
and	edx, 256				
jne	SHORT $LN533@sqlite3Vdb
mov	DWORD PTR _res$269[ebp], 0
jmp	SHORT $LN532@sqlite3Vdb
mov	DWORD PTR _res$269[ebp], 1
jmp	SHORT $LN531@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
and	ecx, 16					
je	SHORT $LN530@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], eax
mov	ecx, DWORD PTR _pOut$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -16896				
or	edx, 1
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
jmp	SHORT $LN528@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
and	edx, 8
je	SHORT $LN528@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
jmp	$LN527@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 103				
mov	BYTE PTR _affinity$267[ebp], al
movsx	ecx, BYTE PTR _affinity$267[ebp]
test	ecx, ecx
je	SHORT $LN525@sqlite3Vdb
movzx	edx, BYTE PTR _encoding$[ebp]
push	edx
movzx	eax, BYTE PTR _affinity$267[ebp]
push	eax
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_applyAffinity
add	esp, 12					
movzx	edx, BYTE PTR _encoding$[ebp]
push	edx
movzx	eax, BYTE PTR _affinity$267[ebp]
push	eax
mov	ecx, DWORD PTR _pIn3$[ebp]
push	ecx
call	_applyAffinity
add	esp, 12					
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN525@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 16384				
je	SHORT $LN713@sqlite3Vdb
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv1100[ebp], eax
jmp	SHORT $LN714@sqlite3Vdb
mov	DWORD PTR tv1100[ebp], 0
mov	ecx, DWORD PTR _pIn3$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 16384				
je	SHORT $LN715@sqlite3Vdb
mov	eax, DWORD PTR _pIn3$[ebp]
push	eax
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv1107[ebp], eax
jmp	SHORT $LN716@sqlite3Vdb
mov	DWORD PTR tv1107[ebp], 0
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
mov	ecx, DWORD PTR _pIn3$[ebp]
push	ecx
call	_sqlite3MemCompare
add	esp, 12					
mov	DWORD PTR _res$269[ebp], eax
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR tv1115[ebp], eax
mov	ecx, DWORD PTR tv1115[ebp]
sub	ecx, 78					
mov	DWORD PTR tv1115[ebp], ecx
cmp	DWORD PTR tv1115[ebp], 4
ja	$LN517@sqlite3Vdb
mov	edx, DWORD PTR tv1115[ebp]
jmp	DWORD PTR $LN818@sqlite3Vdb[edx*4]
cmp	DWORD PTR _res$269[ebp], 0
jne	SHORT $LN717@sqlite3Vdb
mov	DWORD PTR tv1117[ebp], 1
jmp	SHORT $LN718@sqlite3Vdb
mov	DWORD PTR tv1117[ebp], 0
mov	eax, DWORD PTR tv1117[ebp]
mov	DWORD PTR _res$269[ebp], eax
jmp	$LN523@sqlite3Vdb
cmp	DWORD PTR _res$269[ebp], 0
je	SHORT $LN719@sqlite3Vdb
mov	DWORD PTR tv1119[ebp], 1
jmp	SHORT $LN720@sqlite3Vdb
mov	DWORD PTR tv1119[ebp], 0
mov	ecx, DWORD PTR tv1119[ebp]
mov	DWORD PTR _res$269[ebp], ecx
jmp	$LN523@sqlite3Vdb
cmp	DWORD PTR _res$269[ebp], 0
jge	SHORT $LN721@sqlite3Vdb
mov	DWORD PTR tv1121[ebp], 1
jmp	SHORT $LN722@sqlite3Vdb
mov	DWORD PTR tv1121[ebp], 0
mov	edx, DWORD PTR tv1121[ebp]
mov	DWORD PTR _res$269[ebp], edx
jmp	$LN523@sqlite3Vdb
cmp	DWORD PTR _res$269[ebp], 0
jg	SHORT $LN723@sqlite3Vdb
mov	DWORD PTR tv1123[ebp], 1
jmp	SHORT $LN724@sqlite3Vdb
mov	DWORD PTR tv1123[ebp], 0
mov	eax, DWORD PTR tv1123[ebp]
mov	DWORD PTR _res$269[ebp], eax
jmp	SHORT $LN523@sqlite3Vdb
cmp	DWORD PTR _res$269[ebp], 0
jle	SHORT $LN725@sqlite3Vdb
mov	DWORD PTR tv1125[ebp], 1
jmp	SHORT $LN726@sqlite3Vdb
mov	DWORD PTR tv1125[ebp], 0
mov	ecx, DWORD PTR tv1125[ebp]
mov	DWORD PTR _res$269[ebp], ecx
jmp	SHORT $LN523@sqlite3Vdb
cmp	DWORD PTR _res$269[ebp], 0
jl	SHORT $LN727@sqlite3Vdb
mov	DWORD PTR tv1127[ebp], 1
jmp	SHORT $LN728@sqlite3Vdb
mov	DWORD PTR tv1127[ebp], 0
mov	edx, DWORD PTR tv1127[ebp]
mov	DWORD PTR _res$269[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
and	ecx, 16					
je	SHORT $LN516@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], eax
mov	ecx, DWORD PTR _pOut$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -16896				
or	edx, 4
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
mov	eax, DWORD PTR _res$269[ebp]
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
jmp	SHORT $LN514@sqlite3Vdb
cmp	DWORD PTR _res$269[ebp], 0
je	SHORT $LN514@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -512				
movzx	eax, WORD PTR _flags1$227[ebp]
and	eax, 511				
or	edx, eax
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	WORD PTR [ecx+28], dx
mov	edx, DWORD PTR _pIn3$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -512				
movzx	ecx, WORD PTR _flags3$250[ebp]
and	ecx, 511				
or	eax, ecx
mov	edx, DWORD PTR _pIn3$[ebp]
mov	WORD PTR [edx+28], ax
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _aPermute$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 1
jne	SHORT $LN511@sqlite3Vdb
mov	DWORD PTR _aPermute$[ebp], 0
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _n$58[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pKeyInfo$118[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _p1$52[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _p2$54[ebp], edx
mov	DWORD PTR _i$226[ebp], 0
jmp	SHORT $LN510@sqlite3Vdb
mov	eax, DWORD PTR _i$226[ebp]
add	eax, 1
mov	DWORD PTR _i$226[ebp], eax
mov	ecx, DWORD PTR _i$226[ebp]
cmp	ecx, DWORD PTR _n$58[ebp]
jge	$LN508@sqlite3Vdb
cmp	DWORD PTR _aPermute$[ebp], 0
je	SHORT $LN729@sqlite3Vdb
mov	edx, DWORD PTR _i$226[ebp]
mov	eax, DWORD PTR _aPermute$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
mov	DWORD PTR tv1178[ebp], ecx
jmp	SHORT $LN730@sqlite3Vdb
mov	edx, DWORD PTR _i$226[ebp]
mov	DWORD PTR tv1178[ebp], edx
mov	eax, DWORD PTR tv1178[ebp]
mov	DWORD PTR _idx$90[ebp], eax
mov	ecx, DWORD PTR _i$226[ebp]
mov	edx, DWORD PTR _pKeyInfo$118[ebp]
mov	eax, DWORD PTR [edx+ecx*4+20]
mov	DWORD PTR _pColl$56[ebp], eax
mov	ecx, DWORD PTR _pKeyInfo$118[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR _i$226[ebp]
movzx	ecx, BYTE PTR [edx+eax]
mov	DWORD PTR _bRev$50[ebp], ecx
mov	edx, DWORD PTR _pColl$56[ebp]
push	edx
mov	eax, DWORD PTR _p2$54[ebp]
add	eax, DWORD PTR _idx$90[ebp]
imul	ecx, eax, 40
add	ecx, DWORD PTR _aMem$[ebp]
push	ecx
mov	edx, DWORD PTR _p1$52[ebp]
add	edx, DWORD PTR _idx$90[ebp]
imul	eax, edx, 40
add	eax, DWORD PTR _aMem$[ebp]
push	eax
call	_sqlite3MemCompare
add	esp, 12					
mov	DWORD PTR _iCompare$[ebp], eax
cmp	DWORD PTR _iCompare$[ebp], 0
je	SHORT $LN507@sqlite3Vdb
cmp	DWORD PTR _bRev$50[ebp], 0
je	SHORT $LN506@sqlite3Vdb
mov	ecx, DWORD PTR _iCompare$[ebp]
neg	ecx
mov	DWORD PTR _iCompare$[ebp], ecx
jmp	SHORT $LN508@sqlite3Vdb
jmp	$LN509@sqlite3Vdb
mov	DWORD PTR _aPermute$[ebp], 0
jmp	$LN682@sqlite3Vdb
cmp	DWORD PTR _iCompare$[ebp], 0
jge	SHORT $LN504@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	SHORT $LN501@sqlite3Vdb
cmp	DWORD PTR _iCompare$[ebp], 0
jne	SHORT $LN502@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	SHORT $LN501@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+12]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 1
je	SHORT $LN499@sqlite3Vdb
mov	DWORD PTR _v1$232[ebp], 2
jmp	SHORT $LN498@sqlite3Vdb
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
call	_sqlite3VdbeIntValue
add	esp, 4
mov	DWORD PTR tv5633[ebp], eax
mov	DWORD PTR tv5633[ebp+4], edx
mov	ecx, DWORD PTR tv5633[ebp]
or	ecx, DWORD PTR tv5633[ebp+4]
je	SHORT $LN731@sqlite3Vdb
mov	DWORD PTR tv1217[ebp], 1
jmp	SHORT $LN732@sqlite3Vdb
mov	DWORD PTR tv1217[ebp], 0
mov	edx, DWORD PTR tv1217[ebp]
mov	DWORD PTR _v1$232[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], ecx
mov	edx, DWORD PTR _pIn2$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 1
je	SHORT $LN497@sqlite3Vdb
mov	DWORD PTR _v2$143[ebp], 2
jmp	SHORT $LN496@sqlite3Vdb
mov	ecx, DWORD PTR _pIn2$[ebp]
push	ecx
call	_sqlite3VdbeIntValue
add	esp, 4
mov	DWORD PTR tv5648[ebp], eax
mov	DWORD PTR tv5648[ebp+4], edx
mov	edx, DWORD PTR tv5648[ebp]
or	edx, DWORD PTR tv5648[ebp+4]
je	SHORT $LN733@sqlite3Vdb
mov	DWORD PTR tv1228[ebp], 1
jmp	SHORT $LN734@sqlite3Vdb
mov	DWORD PTR tv1228[ebp], 0
mov	eax, DWORD PTR tv1228[ebp]
mov	DWORD PTR _v2$143[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 72					
jne	SHORT $LN495@sqlite3Vdb
imul	eax, DWORD PTR _v1$232[ebp], 3
mov	ecx, DWORD PTR _v2$143[ebp]
movzx	edx, BYTE PTR ?and_logic@?IP@??sqlite3VdbeExec@@9@9[eax+ecx]
mov	DWORD PTR _v1$232[ebp], edx
jmp	SHORT $LN494@sqlite3Vdb
imul	eax, DWORD PTR _v1$232[ebp], 3
mov	ecx, DWORD PTR _v2$143[ebp]
movzx	edx, BYTE PTR ?or_logic@?JA@??sqlite3VdbeExec@@9@9[eax+ecx]
mov	DWORD PTR _v1$232[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], ecx
cmp	DWORD PTR _v1$232[ebp], 2
jne	SHORT $LN493@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 1
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
jmp	SHORT $LN492@sqlite3Vdb
mov	eax, DWORD PTR _v1$232[ebp]
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 4
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+8], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 1
je	SHORT $LN490@sqlite3Vdb
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemSetNull
add	esp, 4
jmp	SHORT $LN489@sqlite3Vdb
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
call	_sqlite3VdbeIntValue
add	esp, 4
mov	DWORD PTR tv5681[ebp], eax
mov	DWORD PTR tv5681[ebp+4], edx
mov	ecx, DWORD PTR tv5681[ebp]
or	ecx, DWORD PTR tv5681[ebp+4]
jne	SHORT $LN735@sqlite3Vdb
mov	DWORD PTR tv1274[ebp], 1
jmp	SHORT $LN736@sqlite3Vdb
mov	DWORD PTR tv1274[ebp], 0
mov	eax, DWORD PTR tv1274[ebp]
cdq
push	edx
push	eax
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 1
je	SHORT $LN487@sqlite3Vdb
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemSetNull
add	esp, 4
jmp	SHORT $LN486@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeIntValue
add	esp, 4
not	eax
not	edx
push	edx
push	eax
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+200]
movzx	ecx, BYTE PTR [eax+ecx]
test	ecx, ecx
je	SHORT $LN484@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	SHORT $LN483@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+200]
mov	BYTE PTR [ecx+edx], 1
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 1
je	SHORT $LN481@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _c$177[ebp], ecx
jmp	$LN479@sqlite3Vdb
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
call	_sqlite3VdbeRealValue
add	esp, 4
fstp	QWORD PTR tv5723[ebp]
movsd	xmm0, QWORD PTR tv5723[ebp]
ucomisd	xmm0, QWORD PTR __real@0000000000000000
lahf
test	ah, 68					
jnp	SHORT $LN737@sqlite3Vdb
mov	DWORD PTR tv1317[ebp], 1
jmp	SHORT $LN738@sqlite3Vdb
mov	DWORD PTR tv1317[ebp], 0
mov	eax, DWORD PTR tv1317[ebp]
mov	DWORD PTR _c$177[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 45					
jne	SHORT $LN479@sqlite3Vdb
cmp	DWORD PTR _c$177[ebp], 0
jne	SHORT $LN739@sqlite3Vdb
mov	DWORD PTR tv1322[ebp], 1
jmp	SHORT $LN740@sqlite3Vdb
mov	DWORD PTR tv1322[ebp], 0
mov	eax, DWORD PTR tv1322[ebp]
mov	DWORD PTR _c$177[ebp], eax
cmp	DWORD PTR _c$177[ebp], 0
je	SHORT $LN478@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 1
je	SHORT $LN476@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 1
jne	SHORT $LN474@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p2$243[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pDest$274[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pC$278[ebp], edx
mov	eax, DWORD PTR _pC$278[ebp]
add	eax, 88					
mov	DWORD PTR _aType$173[ebp], eax
mov	ecx, DWORD PTR _pC$278[ebp]
movsx	edx, WORD PTR [ecx+20]
mov	eax, DWORD PTR _aType$173[ebp]
lea	ecx, DWORD PTR [eax+edx*4]
mov	DWORD PTR _aOffset$248[ebp], ecx
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pCrsr$225[ebp], eax
mov	ecx, DWORD PTR _pC$278[ebp]
push	ecx
call	_sqlite3VdbeCursorMoveto
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN472@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [edx+68]
cmp	ecx, DWORD PTR [eax+72]
jne	SHORT $LN470@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 32					
je	$LN459@sqlite3Vdb
mov	ecx, DWORD PTR _pC$278[ebp]
movzx	edx, BYTE PTR [ecx+25]
test	edx, edx
je	$LN469@sqlite3Vdb
cmp	DWORD PTR _pCrsr$225[ebp], 0
jne	SHORT $LN468@sqlite3Vdb
mov	eax, DWORD PTR _pC$278[ebp]
imul	ecx, DWORD PTR [eax+16], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pReg$75[ebp], ecx
mov	edx, DWORD PTR _pReg$75[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _avail$231[ebp], eax
mov	ecx, DWORD PTR _pC$278[ebp]
mov	edx, DWORD PTR _avail$231[ebp]
mov	DWORD PTR [ecx+76], edx
mov	eax, DWORD PTR _pC$278[ebp]
mov	ecx, DWORD PTR _avail$231[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR _pReg$75[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+84], ecx
jmp	SHORT $LN467@sqlite3Vdb
mov	edx, DWORD PTR _pDest$274[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 1
mov	ecx, DWORD PTR _pDest$274[ebp]
mov	WORD PTR [ecx+28], ax
jmp	$op_column_out$828
jmp	$LN461@sqlite3Vdb
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR [edx+28]
shr	eax, 2
and	eax, 1
jne	SHORT $LN465@sqlite3Vdb
lea	ecx, DWORD PTR _payloadSize64$11[ebp]
push	ecx
mov	edx, DWORD PTR _pCrsr$225[ebp]
push	edx
call	_sqlite3BtreeKeySize
add	esp, 8
lea	eax, DWORD PTR _avail$231[ebp]
push	eax
mov	ecx, DWORD PTR _pCrsr$225[ebp]
push	ecx
call	_sqlite3BtreeKeyFetch
add	esp, 8
mov	edx, DWORD PTR _pC$278[ebp]
mov	DWORD PTR [edx+84], eax
mov	eax, DWORD PTR _payloadSize64$11[ebp]
mov	ecx, DWORD PTR _pC$278[ebp]
mov	DWORD PTR [ecx+72], eax
jmp	SHORT $LN464@sqlite3Vdb
mov	edx, DWORD PTR _pC$278[ebp]
add	edx, 72					
push	edx
mov	eax, DWORD PTR _pCrsr$225[ebp]
push	eax
call	_sqlite3BtreeDataSize
add	esp, 8
lea	ecx, DWORD PTR _avail$231[ebp]
push	ecx
mov	edx, DWORD PTR _pCrsr$225[ebp]
push	edx
call	_sqlite3BtreeDataFetch
add	esp, 8
mov	ecx, DWORD PTR _pC$278[ebp]
mov	DWORD PTR [ecx+84], eax
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR [edx+72]
cmp	eax, DWORD PTR _avail$231[ebp]
ja	SHORT $LN463@sqlite3Vdb
mov	ecx, DWORD PTR _pC$278[ebp]
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR [ecx+76], eax
jmp	SHORT $LN462@sqlite3Vdb
mov	ecx, DWORD PTR _pC$278[ebp]
mov	edx, DWORD PTR _avail$231[ebp]
mov	DWORD PTR [ecx+76], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [edx+72]
cmp	edx, DWORD PTR [eax+ecx+88]
jbe	SHORT $LN461@sqlite3Vdb
jmp	$too_big$824
mov	eax, DWORD PTR _pC$278[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR [eax+68], edx
mov	eax, DWORD PTR _pC$278[ebp]
mov	ecx, DWORD PTR [eax+84]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 128				
jge	SHORT $LN741@sqlite3Vdb
mov	eax, DWORD PTR _pC$278[ebp]
mov	ecx, DWORD PTR [eax+84]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _offset$263[ebp], edx
mov	DWORD PTR tv1430[ebp], 1
jmp	SHORT $LN742@sqlite3Vdb
lea	eax, DWORD PTR _offset$263[ebp]
push	eax
mov	ecx, DWORD PTR _pC$278[ebp]
mov	edx, DWORD PTR [ecx+84]
push	edx
call	_sqlite3GetVarint32
add	esp, 8
movzx	eax, al
mov	DWORD PTR tv1430[ebp], eax
movzx	ecx, BYTE PTR tv1430[ebp]
mov	edx, DWORD PTR _pC$278[ebp]
mov	DWORD PTR [edx+80], ecx
xor	eax, eax
mov	ecx, DWORD PTR _pC$278[ebp]
mov	WORD PTR [ecx+22], ax
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aOffset$248[ebp]
mov	edx, DWORD PTR _offset$263[ebp]
mov	DWORD PTR [ecx+eax], edx
mov	eax, DWORD PTR _avail$231[ebp]
cmp	eax, DWORD PTR _offset$263[ebp]
jae	SHORT $LN460@sqlite3Vdb
mov	ecx, DWORD PTR _pC$278[ebp]
mov	DWORD PTR [ecx+84], 0
mov	edx, DWORD PTR _pC$278[ebp]
mov	DWORD PTR [edx+76], 0
cmp	DWORD PTR _offset$263[ebp], 98307	
ja	SHORT $LN458@sqlite3Vdb
mov	eax, DWORD PTR _pC$278[ebp]
mov	ecx, DWORD PTR _offset$263[ebp]
cmp	ecx, DWORD PTR [eax+72]
jbe	SHORT $LN459@sqlite3Vdb
push	69894					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$op_column_error$829
mov	edx, DWORD PTR _pC$278[ebp]
movzx	eax, WORD PTR [edx+22]
cmp	eax, DWORD PTR _p2$243[ebp]
jg	$LN442@sqlite3Vdb
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pC$278[ebp]
mov	ecx, DWORD PTR _aOffset$248[ebp]
mov	eax, DWORD PTR [eax+80]
cmp	eax, DWORD PTR [ecx+edx]
jae	$LN444@sqlite3Vdb
mov	ecx, DWORD PTR _pC$278[ebp]
cmp	DWORD PTR [ecx+84], 0
jne	$LN455@sqlite3Vdb
push	40					
push	0
lea	edx, DWORD PTR _sMem$6[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pC$278[ebp]
mov	ecx, DWORD PTR [eax+28]
shr	ecx, 2
and	ecx, 1
jne	SHORT $LN743@sqlite3Vdb
mov	DWORD PTR tv1462[ebp], 1
jmp	SHORT $LN744@sqlite3Vdb
mov	DWORD PTR tv1462[ebp], 0
lea	edx, DWORD PTR _sMem$6[ebp]
push	edx
mov	eax, DWORD PTR tv1462[ebp]
push	eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _aOffset$248[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
push	0
mov	edx, DWORD PTR _pCrsr$225[ebp]
push	edx
call	_sqlite3VdbeMemFromBtree
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN454@sqlite3Vdb
jmp	$op_column_error$829
mov	eax, DWORD PTR _sMem$6[ebp+4]
mov	DWORD PTR _zData$236[ebp], eax
jmp	SHORT $LN453@sqlite3Vdb
mov	ecx, DWORD PTR _pC$278[ebp]
mov	edx, DWORD PTR [ecx+84]
mov	DWORD PTR _zData$236[ebp], edx
mov	eax, DWORD PTR _pC$278[ebp]
movzx	ecx, WORD PTR [eax+22]
mov	DWORD PTR _i$229[ebp], ecx
mov	edx, DWORD PTR _i$229[ebp]
mov	eax, DWORD PTR _aOffset$248[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
mov	DWORD PTR _offset$263[ebp], ecx
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR _zData$236[ebp]
add	eax, DWORD PTR [edx+80]
mov	DWORD PTR _zHdr$262[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _aOffset$248[ebp]
mov	ecx, DWORD PTR _zData$236[ebp]
add	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _zEndHdr$175[ebp], ecx
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zHdr$262[ebp]
movzx	edx, BYTE PTR [ecx+eax]
cmp	edx, 128				
jge	SHORT $LN449@sqlite3Vdb
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zHdr$262[ebp]
movzx	eax, BYTE PTR [edx+ecx]
mov	DWORD PTR _t$246[ebp], eax
mov	ecx, DWORD PTR _zHdr$262[ebp]
add	ecx, 1
mov	DWORD PTR _zHdr$262[ebp], ecx
jmp	SHORT $LN448@sqlite3Vdb
lea	edx, DWORD PTR _t$246[ebp]
push	edx
mov	eax, DWORD PTR _zHdr$262[ebp]
push	eax
call	_sqlite3GetVarint32
add	esp, 8
movzx	ecx, al
add	ecx, DWORD PTR _zHdr$262[ebp]
mov	DWORD PTR _zHdr$262[ebp], ecx
mov	edx, DWORD PTR _i$229[ebp]
mov	eax, DWORD PTR _aType$173[ebp]
mov	ecx, DWORD PTR _t$246[ebp]
mov	DWORD PTR [eax+edx*4], ecx
mov	edx, DWORD PTR _t$246[ebp]
push	edx
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
mov	DWORD PTR _szField$116[ebp], eax
mov	eax, DWORD PTR _offset$263[ebp]
add	eax, DWORD PTR _szField$116[ebp]
mov	DWORD PTR _offset$263[ebp], eax
mov	ecx, DWORD PTR _offset$263[ebp]
cmp	ecx, DWORD PTR _szField$116[ebp]
jae	SHORT $LN447@sqlite3Vdb
mov	edx, 1
shl	edx, 0
add	edx, DWORD PTR _zEndHdr$175[ebp]
mov	DWORD PTR _zHdr$262[ebp], edx
jmp	SHORT $LN446@sqlite3Vdb
mov	eax, DWORD PTR _i$229[ebp]
add	eax, 1
mov	DWORD PTR _i$229[ebp], eax
mov	ecx, DWORD PTR _i$229[ebp]
mov	edx, DWORD PTR _aOffset$248[ebp]
mov	eax, DWORD PTR _offset$263[ebp]
mov	DWORD PTR [edx+ecx*4], eax
mov	ecx, DWORD PTR _i$229[ebp]
cmp	ecx, DWORD PTR _p2$243[ebp]
jg	SHORT $LN446@sqlite3Vdb
mov	edx, DWORD PTR _zHdr$262[ebp]
cmp	edx, DWORD PTR _zEndHdr$175[ebp]
jb	$LN452@sqlite3Vdb
mov	eax, DWORD PTR _pC$278[ebp]
mov	cx, WORD PTR _i$229[ebp]
mov	WORD PTR [eax+22], cx
mov	edx, DWORD PTR _zHdr$262[ebp]
sub	edx, DWORD PTR _zData$236[ebp]
mov	eax, DWORD PTR _pC$278[ebp]
mov	DWORD PTR [eax+80], edx
mov	ecx, DWORD PTR _pC$278[ebp]
cmp	DWORD PTR [ecx+84], 0
jne	SHORT $LN445@sqlite3Vdb
lea	edx, DWORD PTR _sMem$6[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	eax, 1
mov	WORD PTR _sMem$6[ebp+28], ax
mov	ecx, DWORD PTR _zHdr$262[ebp]
cmp	ecx, DWORD PTR _zEndHdr$175[ebp]
ja	SHORT $LN443@sqlite3Vdb
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR _offset$263[ebp]
cmp	eax, DWORD PTR [edx+72]
ja	SHORT $LN443@sqlite3Vdb
mov	ecx, DWORD PTR _zHdr$262[ebp]
cmp	ecx, DWORD PTR _zEndHdr$175[ebp]
jne	SHORT $LN444@sqlite3Vdb
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR _offset$263[ebp]
cmp	eax, DWORD PTR [edx+72]
je	SHORT $LN444@sqlite3Vdb
push	69960					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$op_column_error$829
mov	ecx, DWORD PTR _pC$278[ebp]
movzx	edx, WORD PTR [ecx+22]
cmp	edx, DWORD PTR _p2$243[ebp]
jg	SHORT $LN442@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
movsx	ecx, BYTE PTR [eax+1]
cmp	ecx, -8					
jne	SHORT $LN441@sqlite3Vdb
push	2048					
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pDest$274[ebp]
push	ecx
call	_sqlite3VdbeMemShallowCopy
add	esp, 12					
jmp	SHORT $LN440@sqlite3Vdb
mov	edx, DWORD PTR _pDest$274[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -16896				
or	eax, 1
mov	ecx, DWORD PTR _pDest$274[ebp]
mov	WORD PTR [ecx+28], ax
jmp	$op_column_out$828
mov	edx, DWORD PTR _pC$278[ebp]
mov	eax, DWORD PTR _p2$243[ebp]
mov	ecx, DWORD PTR _aOffset$248[ebp]
mov	edx, DWORD PTR [edx+76]
cmp	edx, DWORD PTR [ecx+eax*4+4]
jb	SHORT $LN439@sqlite3Vdb
mov	eax, DWORD PTR _pDest$274[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 9312				
je	SHORT $LN438@sqlite3Vdb
mov	edx, DWORD PTR _pDest$274[ebp]
push	edx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
mov	eax, DWORD PTR _pDest$274[ebp]
push	eax
mov	ecx, DWORD PTR _p2$243[ebp]
mov	edx, DWORD PTR _aType$173[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
mov	ecx, DWORD PTR _pC$278[ebp]
mov	edx, DWORD PTR [ecx+84]
mov	eax, DWORD PTR _p2$243[ebp]
mov	ecx, DWORD PTR _aOffset$248[ebp]
add	edx, DWORD PTR [ecx+eax*4]
push	edx
call	_sqlite3VdbeSerialGet
add	esp, 12					
jmp	$LN430@sqlite3Vdb
mov	edx, DWORD PTR _p2$243[ebp]
mov	eax, DWORD PTR _aType$173[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
mov	DWORD PTR _t$246[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 192				
je	SHORT $LN434@sqlite3Vdb
cmp	DWORD PTR _t$246[ebp], 12		
jb	SHORT $LN433@sqlite3Vdb
mov	ecx, DWORD PTR _t$246[ebp]
and	ecx, 1
je	SHORT $LN435@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 128				
jne	SHORT $LN435@sqlite3Vdb
mov	ecx, DWORD PTR _t$246[ebp]
push	ecx
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
mov	DWORD PTR _len$86[ebp], eax
cmp	DWORD PTR _len$86[ebp], 0
jne	SHORT $LN436@sqlite3Vdb
cmp	DWORD PTR _t$246[ebp], 13		
ja	SHORT $LN745@sqlite3Vdb
lea	edx, DWORD PTR _payloadSize64$11[ebp]
mov	DWORD PTR tv1604[ebp], edx
jmp	SHORT $LN746@sqlite3Vdb
mov	DWORD PTR tv1604[ebp], 0
mov	eax, DWORD PTR tv1604[ebp]
mov	DWORD PTR _zData$236[ebp], eax
mov	DWORD PTR _sMem$6[ebp+36], 0
jmp	$LN432@sqlite3Vdb
push	40					
push	0
lea	ecx, DWORD PTR _sMem$6[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pDest$274[ebp]
push	edx
lea	eax, DWORD PTR _sMem$6[ebp]
push	eax
call	_sqlite3VdbeMemMove
add	esp, 8
mov	ecx, DWORD PTR _pC$278[ebp]
mov	edx, DWORD PTR [ecx+28]
shr	edx, 2
and	edx, 1
jne	SHORT $LN747@sqlite3Vdb
mov	DWORD PTR tv1616[ebp], 1
jmp	SHORT $LN748@sqlite3Vdb
mov	DWORD PTR tv1616[ebp], 0
lea	eax, DWORD PTR _sMem$6[ebp]
push	eax
mov	ecx, DWORD PTR tv1616[ebp]
push	ecx
mov	edx, DWORD PTR _len$86[ebp]
push	edx
mov	eax, DWORD PTR _p2$243[ebp]
mov	ecx, DWORD PTR _aOffset$248[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
mov	eax, DWORD PTR _pCrsr$225[ebp]
push	eax
call	_sqlite3VdbeMemFromBtree
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN431@sqlite3Vdb
jmp	$op_column_error$829
mov	ecx, DWORD PTR _sMem$6[ebp+4]
mov	DWORD PTR _zData$236[ebp], ecx
mov	edx, DWORD PTR _pDest$274[ebp]
push	edx
mov	eax, DWORD PTR _t$246[ebp]
push	eax
mov	ecx, DWORD PTR _zData$236[ebp]
push	ecx
call	_sqlite3VdbeSerialGet
add	esp, 12					
cmp	DWORD PTR _sMem$6[ebp+36], 0
je	SHORT $LN430@sqlite3Vdb
mov	edx, DWORD PTR _pDest$274[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, -6145				
mov	ecx, DWORD PTR _pDest$274[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pDest$274[ebp]
movzx	eax, WORD PTR [edx+28]
or	eax, 512				
mov	ecx, DWORD PTR _pDest$274[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pDest$274[ebp]
mov	eax, DWORD PTR _sMem$6[ebp+4]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pDest$274[ebp]
mov	edx, DWORD PTR _sMem$6[ebp+36]
mov	DWORD PTR [ecx+36], edx
mov	eax, DWORD PTR _pDest$274[ebp]
mov	cl, BYTE PTR _encoding$[ebp]
mov	BYTE PTR [eax+30], cl
mov	edx, DWORD PTR _pDest$274[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 4096				
je	SHORT $op_column_error$829
mov	ecx, DWORD PTR _pDest$274[ebp]
push	ecx
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
test	eax, eax
je	SHORT $op_column_error$829
jmp	$no_mem$819
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _zAffinity$162[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _zAffinity$162[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR _cAff$260[ebp], cl
movsx	edx, BYTE PTR _cAff$260[ebp]
mov	DWORD PTR tv1655[ebp], edx
mov	eax, DWORD PTR _zAffinity$162[ebp]
add	eax, 1
mov	DWORD PTR _zAffinity$162[ebp], eax
cmp	DWORD PTR tv1655[ebp], 0
je	SHORT $LN426@sqlite3Vdb
movzx	ecx, BYTE PTR _encoding$[ebp]
push	ecx
movzx	edx, BYTE PTR _cAff$260[ebp]
push	edx
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
call	_applyAffinity
add	esp, 12					
mov	ecx, DWORD PTR _pIn1$[ebp]
add	ecx, 40					
mov	DWORD PTR _pIn1$[ebp], ecx
jmp	SHORT $LN427@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nData$163[ebp], xmm0
mov	DWORD PTR _nHdr$271[ebp], 0
mov	DWORD PTR _nZero$179[ebp], 0
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _nField$139[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _zAffinity$201[ebp], edx
imul	eax, DWORD PTR _nField$139[ebp], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pData0$171[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _nField$139[ebp], edx
mov	eax, DWORD PTR _nField$139[ebp]
sub	eax, 1
imul	ecx, eax, 40
add	ecx, DWORD PTR _pData0$171[ebp]
mov	DWORD PTR _pLast$71[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+87]
mov	DWORD PTR _file_format$84[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+12], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
cmp	DWORD PTR _zAffinity$201[ebp], 0
je	SHORT $LN421@sqlite3Vdb
mov	eax, DWORD PTR _pData0$171[ebp]
mov	DWORD PTR _pRec$272[ebp], eax
mov	ecx, DWORD PTR _zAffinity$201[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR tv1676[ebp], dl
mov	eax, DWORD PTR _pRec$272[ebp]
mov	DWORD PTR tv1679[ebp], eax
movzx	ecx, BYTE PTR _encoding$[ebp]
push	ecx
movzx	edx, BYTE PTR tv1676[ebp]
push	edx
mov	eax, DWORD PTR tv1679[ebp]
push	eax
call	_applyAffinity
add	esp, 12					
mov	ecx, DWORD PTR _pRec$272[ebp]
add	ecx, 40					
mov	DWORD PTR _pRec$272[ebp], ecx
mov	edx, DWORD PTR _zAffinity$201[ebp]
add	edx, 1
mov	DWORD PTR _zAffinity$201[ebp], edx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zAffinity$201[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
jne	SHORT $LN423@sqlite3Vdb
mov	ecx, DWORD PTR _pLast$71[ebp]
mov	DWORD PTR _pRec$272[ebp], ecx
mov	edx, DWORD PTR _file_format$84[ebp]
push	edx
mov	eax, DWORD PTR _pRec$272[ebp]
push	eax
call	_sqlite3VdbeSerialType
add	esp, 8
mov	DWORD PTR _serial_type$244[ebp], eax
mov	ecx, DWORD PTR _serial_type$244[ebp]
push	ecx
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
mov	DWORD PTR _len$137[ebp], eax
mov	edx, DWORD PTR _pRec$272[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 16384				
je	SHORT $LN415@sqlite3Vdb
mov	ecx, DWORD PTR _nData$163[ebp]
or	ecx, DWORD PTR _nData$163[ebp+4]
je	SHORT $LN416@sqlite3Vdb
mov	edx, DWORD PTR _pRec$272[ebp]
push	edx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
jmp	SHORT $LN415@sqlite3Vdb
mov	eax, DWORD PTR _pRec$272[ebp]
mov	ecx, DWORD PTR _nZero$179[ebp]
add	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _nZero$179[ebp], ecx
mov	edx, DWORD PTR _pRec$272[ebp]
mov	eax, DWORD PTR _len$137[ebp]
sub	eax, DWORD PTR [edx+16]
mov	DWORD PTR _len$137[ebp], eax
mov	eax, DWORD PTR _len$137[ebp]
cdq
add	eax, DWORD PTR _nData$163[ebp]
adc	edx, DWORD PTR _nData$163[ebp+4]
mov	DWORD PTR _nData$163[ebp], eax
mov	DWORD PTR _nData$163[ebp+4], edx
cmp	DWORD PTR _serial_type$244[ebp], 127	
ja	SHORT $LN749@sqlite3Vdb
mov	DWORD PTR tv1706[ebp], 1
jmp	SHORT $LN750@sqlite3Vdb
mov	ecx, DWORD PTR _serial_type$244[ebp]
xor	edx, edx
push	edx
push	ecx
call	_sqlite3VarintLen
add	esp, 8
mov	DWORD PTR tv1706[ebp], eax
mov	eax, DWORD PTR _nHdr$271[ebp]
add	eax, DWORD PTR tv1706[ebp]
mov	DWORD PTR _nHdr$271[ebp], eax
mov	ecx, DWORD PTR _pRec$272[ebp]
sub	ecx, 40					
mov	DWORD PTR _pRec$272[ebp], ecx
mov	edx, DWORD PTR _pRec$272[ebp]
cmp	edx, DWORD PTR _pData0$171[ebp]
jae	$LN420@sqlite3Vdb
cmp	DWORD PTR _nHdr$271[ebp], 126		
jg	SHORT $LN414@sqlite3Vdb
mov	eax, DWORD PTR _nHdr$271[ebp]
add	eax, 1
mov	DWORD PTR _nHdr$271[ebp], eax
jmp	SHORT $LN412@sqlite3Vdb
mov	eax, DWORD PTR _nHdr$271[ebp]
cdq
push	edx
push	eax
call	_sqlite3VarintLen
add	esp, 8
mov	DWORD PTR _nVarint$74[ebp], eax
mov	ecx, DWORD PTR _nHdr$271[ebp]
add	ecx, DWORD PTR _nVarint$74[ebp]
mov	DWORD PTR _nHdr$271[ebp], ecx
mov	eax, DWORD PTR _nHdr$271[ebp]
cdq
push	edx
push	eax
call	_sqlite3VarintLen
add	esp, 8
cmp	DWORD PTR _nVarint$74[ebp], eax
jge	SHORT $LN412@sqlite3Vdb
mov	edx, DWORD PTR _nHdr$271[ebp]
add	edx, 1
mov	DWORD PTR _nHdr$271[ebp], edx
mov	eax, DWORD PTR _nHdr$271[ebp]
cdq
add	eax, DWORD PTR _nData$163[ebp]
adc	edx, DWORD PTR _nData$163[ebp+4]
mov	DWORD PTR _nByte$68[ebp], eax
mov	DWORD PTR _nByte$68[ebp+4], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+ecx+88]
cdq
mov	DWORD PTR tv6045[ebp], eax
mov	DWORD PTR tv6045[ebp+4], edx
mov	eax, DWORD PTR _nByte$68[ebp+4]
cmp	eax, DWORD PTR tv6045[ebp+4]
jl	SHORT $LN411@sqlite3Vdb
jg	SHORT $LN807@sqlite3Vdb
mov	ecx, DWORD PTR _nByte$68[ebp]
cmp	ecx, DWORD PTR tv6045[ebp]
jbe	SHORT $LN411@sqlite3Vdb
jmp	$too_big$824
push	0
mov	edx, DWORD PTR _nByte$68[ebp]
push	edx
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN410@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _zNewRecord$199[ebp], edx
cmp	DWORD PTR _nHdr$271[ebp], 128		
jae	SHORT $LN751@sqlite3Vdb
mov	eax, DWORD PTR _zNewRecord$199[ebp]
mov	cl, BYTE PTR _nHdr$271[ebp]
mov	BYTE PTR [eax], cl
mov	DWORD PTR tv1739[ebp], 1
jmp	SHORT $LN752@sqlite3Vdb
mov	edx, DWORD PTR _nHdr$271[ebp]
push	edx
mov	eax, DWORD PTR _zNewRecord$199[ebp]
push	eax
call	_sqlite3PutVarint32
add	esp, 8
mov	DWORD PTR tv1739[ebp], eax
movzx	ecx, BYTE PTR tv1739[ebp]
mov	DWORD PTR _i$194[ebp], ecx
mov	edx, DWORD PTR _nHdr$271[ebp]
mov	DWORD PTR _j$135[ebp], edx
mov	eax, DWORD PTR _pData0$171[ebp]
mov	DWORD PTR _pRec$272[ebp], eax
mov	ecx, DWORD PTR _file_format$84[ebp]
push	ecx
mov	edx, DWORD PTR _pRec$272[ebp]
push	edx
call	_sqlite3VdbeSerialType
add	esp, 8
mov	DWORD PTR _serial_type$244[ebp], eax
cmp	DWORD PTR _serial_type$244[ebp], 128	
jae	SHORT $LN753@sqlite3Vdb
mov	eax, DWORD PTR _zNewRecord$199[ebp]
add	eax, DWORD PTR _i$194[ebp]
mov	cl, BYTE PTR _serial_type$244[ebp]
mov	BYTE PTR [eax], cl
mov	DWORD PTR tv1753[ebp], 1
jmp	SHORT $LN754@sqlite3Vdb
mov	edx, DWORD PTR _serial_type$244[ebp]
push	edx
mov	eax, DWORD PTR _zNewRecord$199[ebp]
add	eax, DWORD PTR _i$194[ebp]
push	eax
call	_sqlite3PutVarint32
add	esp, 8
mov	DWORD PTR tv1753[ebp], eax
movzx	ecx, BYTE PTR tv1753[ebp]
add	ecx, DWORD PTR _i$194[ebp]
mov	DWORD PTR _i$194[ebp], ecx
mov	edx, DWORD PTR _serial_type$244[ebp]
push	edx
mov	eax, DWORD PTR _pRec$272[ebp]
push	eax
mov	ecx, DWORD PTR _zNewRecord$199[ebp]
add	ecx, DWORD PTR _j$135[ebp]
push	ecx
call	_sqlite3VdbeSerialPut
add	esp, 12					
add	eax, DWORD PTR _j$135[ebp]
mov	DWORD PTR _j$135[ebp], eax
mov	edx, DWORD PTR _pRec$272[ebp]
add	edx, 40					
mov	DWORD PTR _pRec$272[ebp], edx
mov	eax, DWORD PTR _pRec$272[ebp]
cmp	eax, DWORD PTR _pLast$71[ebp]
jbe	$LN409@sqlite3Vdb
mov	ecx, DWORD PTR _nByte$68[ebp]
mov	edx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, 16					
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [edx+32], 0
cmp	DWORD PTR _nZero$179[ebp], 0
je	SHORT $LN406@sqlite3Vdb
mov	eax, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR _nZero$179[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
or	eax, 16384				
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pOut$[ebp]
mov	BYTE PTR [edx+30], 1
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pCrsr$46[ebp], edx
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nEntry$39[ebp], xmm0
lea	eax, DWORD PTR _nEntry$39[ebp]
push	eax
mov	ecx, DWORD PTR _pCrsr$46[ebp]
push	ecx
call	_sqlite3BtreeCount
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _nEntry$39[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _nEntry$39[ebp+4]
mov	DWORD PTR [edx+20], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _p1$241[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _zName$192[ebp], edx
cmp	DWORD PTR _p1$241[ebp], 0
jne	$LN403@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+148], 0
jle	SHORT $LN402@sqlite3Vdb
push	OFFSET $SG100472
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 44					
push	edx
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 5
jmp	$LN399@sqlite3Vdb
mov	eax, DWORD PTR _zName$192[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$114[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+492]
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+488]
push	edx
push	0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN400@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _nName$114[ebp]
add	edx, 33					
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$242[ebp], eax
cmp	DWORD PTR _pNew$242[ebp], 0
je	$LN399@sqlite3Vdb
mov	ecx, 32					
shl	ecx, 0
add	ecx, DWORD PTR _pNew$242[ebp]
mov	edx, DWORD PTR _pNew$242[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _nName$114[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _zName$192[ebp]
push	ecx
mov	edx, DWORD PTR _pNew$242[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+62]
test	edx, edx
je	SHORT $LN398@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+62], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+69], 1
jmp	SHORT $LN397@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+488]
add	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+488], eax
mov	edx, DWORD PTR _pNew$242[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+480]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _pNew$242[ebp]
mov	DWORD PTR [edx+480], eax
mov	ecx, DWORD PTR _pNew$242[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+496]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR [edx+500]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pNew$242[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+504]
mov	DWORD PTR [eax+16], edx
mov	ecx, DWORD PTR [ecx+508]
mov	DWORD PTR [eax+20], ecx
jmp	$LN369@sqlite3Vdb
mov	DWORD PTR _iSavepoint$221[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+480]
mov	DWORD PTR _pSavepoint$261[ebp], eax
jmp	SHORT $LN395@sqlite3Vdb
mov	ecx, DWORD PTR _pSavepoint$261[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _pSavepoint$261[ebp], edx
cmp	DWORD PTR _pSavepoint$261[ebp], 0
je	SHORT $LN393@sqlite3Vdb
mov	eax, DWORD PTR _zName$192[ebp]
push	eax
mov	ecx, DWORD PTR _pSavepoint$261[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN393@sqlite3Vdb
mov	eax, DWORD PTR _iSavepoint$221[ebp]
add	eax, 1
mov	DWORD PTR _iSavepoint$221[ebp], eax
jmp	SHORT $LN394@sqlite3Vdb
cmp	DWORD PTR _pSavepoint$261[ebp], 0
jne	SHORT $LN392@sqlite3Vdb
mov	ecx, DWORD PTR _zName$192[ebp]
push	ecx
push	OFFSET $SG100486
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3SetString
add	esp, 16					
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN369@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+148], 0
jle	SHORT $LN390@sqlite3Vdb
cmp	DWORD PTR _p1$241[ebp], 1
jne	SHORT $LN390@sqlite3Vdb
push	OFFSET $SG100489
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 5
jmp	$LN369@sqlite3Vdb
mov	ecx, DWORD PTR _pSavepoint$261[ebp]
cmp	DWORD PTR [ecx+24], 0
jne	SHORT $LN755@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+69]
test	eax, eax
je	SHORT $LN755@sqlite3Vdb
mov	DWORD PTR tv1895[ebp], 1
jmp	SHORT $LN756@sqlite3Vdb
mov	DWORD PTR tv1895[ebp], 0
mov	ecx, DWORD PTR tv1895[ebp]
mov	DWORD PTR _isTransaction$133[ebp], ecx
cmp	DWORD PTR _isTransaction$133[ebp], 0
je	$LN388@sqlite3Vdb
cmp	DWORD PTR _p1$241[ebp], 1
jne	$LN388@sqlite3Vdb
push	1
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeCheckFk
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN387@sqlite3Vdb
jmp	$vdbe_return$823
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+62], 1
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeHalt
add	esp, 4
cmp	eax, 5
jne	SHORT $LN386@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pc$[ebp]
mov	DWORD PTR [edx+76], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+62], 0
mov	DWORD PTR _rc$[ebp], 5
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx+80], eax
jmp	$vdbe_return$823
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+69], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+80]
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN376@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+488]
sub	edx, DWORD PTR _iSavepoint$221[ebp]
sub	edx, 1
mov	DWORD PTR _iSavepoint$221[ebp], edx
cmp	DWORD PTR _p1$241[ebp], 2
jne	SHORT $LN381@sqlite3Vdb
mov	DWORD PTR _ii$251[ebp], 0
jmp	SHORT $LN383@sqlite3Vdb
mov	eax, DWORD PTR _ii$251[ebp]
add	eax, 1
mov	DWORD PTR _ii$251[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _ii$251[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN381@sqlite3Vdb
push	4
mov	eax, DWORD PTR _ii$251[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeTripAllCursors
add	esp, 8
jmp	SHORT $LN382@sqlite3Vdb
mov	DWORD PTR _ii$251[ebp], 0
jmp	SHORT $LN380@sqlite3Vdb
mov	ecx, DWORD PTR _ii$251[ebp]
add	ecx, 1
mov	DWORD PTR _ii$251[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _ii$251[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN378@sqlite3Vdb
mov	ecx, DWORD PTR _iSavepoint$221[ebp]
push	ecx
mov	edx, DWORD PTR _p1$241[ebp]
push	edx
mov	eax, DWORD PTR _ii$251[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN377@sqlite3Vdb
jmp	$abort_due_to_error$827
jmp	SHORT $LN379@sqlite3Vdb
cmp	DWORD PTR _p1$241[ebp], 2
jne	SHORT $LN376@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 2
je	SHORT $LN376@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExpirePreparedStatements
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
or	eax, 2
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+480]
cmp	eax, DWORD PTR _pSavepoint$261[ebp]
je	SHORT $LN374@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+480]
mov	DWORD PTR _pTmp$112[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pTmp$112[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax+480], edx
mov	eax, DWORD PTR _pTmp$112[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+488]
sub	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+488], eax
jmp	SHORT $LN376@sqlite3Vdb
cmp	DWORD PTR _p1$241[ebp], 1
jne	SHORT $LN373@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _pSavepoint$261[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR [edx+480], ecx
mov	edx, DWORD PTR _pSavepoint$261[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _isTransaction$133[ebp], 0
jne	SHORT $LN372@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+488]
sub	edx, 1
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+488], edx
jmp	SHORT $LN371@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _pSavepoint$261[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+496], eax
mov	edx, DWORD PTR [edx+12]
mov	DWORD PTR [ecx+500], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pSavepoint$261[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR [eax+504], edx
mov	ecx, DWORD PTR [ecx+20]
mov	DWORD PTR [eax+508], ecx
cmp	DWORD PTR _isTransaction$133[ebp], 0
jne	SHORT $LN369@sqlite3Vdb
mov	edx, DWORD PTR _iSavepoint$221[ebp]
push	edx
mov	eax, DWORD PTR _p1$241[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN369@sqlite3Vdb
jmp	$abort_due_to_error$827
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _desiredAutoCommit$197[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _iRollback$131[ebp], edx
cmp	DWORD PTR _desiredAutoCommit$197[ebp], 0
je	SHORT $LN757@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+62]
test	ecx, ecx
jne	SHORT $LN757@sqlite3Vdb
mov	DWORD PTR tv1982[ebp], 1
jmp	SHORT $LN758@sqlite3Vdb
mov	DWORD PTR tv1982[ebp], 0
mov	edx, DWORD PTR tv1982[ebp]
mov	DWORD PTR _turnOnAC$14[ebp], edx
cmp	DWORD PTR _turnOnAC$14[ebp], 0
je	SHORT $LN367@sqlite3Vdb
cmp	DWORD PTR _iRollback$131[ebp], 0
jne	SHORT $LN367@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+148], 0
jle	SHORT $LN367@sqlite3Vdb
push	OFFSET $SG100523
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 44					
push	edx
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 5
jmp	$LN357@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+62]
cmp	DWORD PTR _desiredAutoCommit$197[ebp], ecx
je	$LN365@sqlite3Vdb
cmp	DWORD PTR _iRollback$131[ebp], 0
je	SHORT $LN364@sqlite3Vdb
push	516					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3RollbackAll
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+62], 1
jmp	SHORT $LN360@sqlite3Vdb
push	1
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeCheckFk
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN362@sqlite3Vdb
jmp	$vdbe_return$823
jmp	SHORT $LN360@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR _desiredAutoCommit$197[ebp]
mov	BYTE PTR [edx+62], al
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeHalt
add	esp, 4
cmp	eax, 5
jne	SHORT $LN360@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pc$[ebp]
mov	DWORD PTR [edx+76], eax
mov	ecx, 1
sub	ecx, DWORD PTR _desiredAutoCommit$197[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+62], cl
mov	DWORD PTR _rc$[ebp], 5
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax+80], ecx
jmp	$vdbe_return$823
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CloseSavepoints
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+80], 0
jne	SHORT $LN359@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 101		
jmp	SHORT $LN358@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
jmp	$vdbe_return$823
jmp	$LN357@sqlite3Vdb
cmp	DWORD PTR _desiredAutoCommit$197[ebp], 0
jne	SHORT $LN759@sqlite3Vdb
mov	DWORD PTR tv2015[ebp], 1
jmp	SHORT $LN760@sqlite3Vdb
mov	DWORD PTR tv2015[ebp], 0
cmp	DWORD PTR tv2015[ebp], 0
je	SHORT $LN763@sqlite3Vdb
mov	DWORD PTR tv2019[ebp], OFFSET $SG100538
jmp	SHORT $LN764@sqlite3Vdb
cmp	DWORD PTR _iRollback$131[ebp], 0
je	SHORT $LN761@sqlite3Vdb
mov	DWORD PTR tv2017[ebp], OFFSET $SG100539
jmp	SHORT $LN762@sqlite3Vdb
mov	DWORD PTR tv2017[ebp], OFFSET $SG100540
mov	ecx, DWORD PTR tv2017[ebp]
mov	DWORD PTR tv2019[ebp], ecx
mov	edx, DWORD PTR tv2019[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN355@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 33554432				
je	SHORT $LN355@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 8
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$164[ebp], eax
cmp	DWORD PTR _pBt$164[ebp], 0
je	$LN354@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pBt$164[ebp]
push	eax
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN353@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pc$[ebp]
mov	DWORD PTR [ecx+76], edx
mov	DWORD PTR _rc$[ebp], 5
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax+80], ecx
jmp	$vdbe_return$823
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN352@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+8], 0
je	$LN351@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 7
and	ecx, 1
je	$LN351@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+62]
test	eax, eax
je	SHORT $LN350@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+144], 1
jle	$LN351@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+104], 0
jne	SHORT $LN349@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+492]
add	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+492], ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+488]
mov	edx, DWORD PTR _db$[ebp]
add	ecx, DWORD PTR [edx+492]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+104], ecx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+104]
sub	edx, 1
push	edx
push	0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VtabSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN348@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+104]
push	edx
mov	eax, DWORD PTR _pBt$164[ebp]
push	eax
call	_sqlite3BtreeBeginStmt
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+496]
mov	DWORD PTR [ecx+152], eax
mov	edx, DWORD PTR [edx+500]
mov	DWORD PTR [ecx+156], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+504]
mov	DWORD PTR [eax+160], edx
mov	ecx, DWORD PTR [ecx+508]
mov	DWORD PTR [eax+164], ecx
lea	edx, DWORD PTR _iMeta$190[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pBt$164[ebp]
push	eax
call	_sqlite3BtreeGetMeta
add	esp, 12					
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _iGen$69[ebp], eax
jmp	SHORT $LN347@sqlite3Vdb
mov	DWORD PTR _iMeta$190[ebp], 0
mov	ecx, DWORD PTR _iMeta$190[ebp]
mov	DWORD PTR _iGen$69[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
je	$LN346@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR _iMeta$190[ebp]
cmp	edx, DWORD PTR [ecx+12]
jne	SHORT $LN345@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR _iGen$69[ebp]
cmp	ecx, DWORD PTR [eax+16]
je	$LN346@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
push	OFFSET $SG100564
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _iMeta$190[ebp]
je	SHORT $LN344@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ResetOneSchema
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
or	eax, 32					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
mov	DWORD PTR _rc$[ebp], 17			
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _iDb$65[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _iCookie$27[ebp], edx
lea	eax, DWORD PTR _iMeta$36[ebp]
push	eax
mov	ecx, DWORD PTR _iCookie$27[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$65[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3BtreeGetMeta
add	esp, 12					
mov	eax, DWORD PTR _iMeta$36[ebp]
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$129[ebp], eax
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], eax
mov	ecx, DWORD PTR _pIn3$[ebp]
push	ecx
call	_sqlite3VdbeMemIntegerify
add	esp, 4
mov	edx, DWORD PTR _pIn3$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pDb$129[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeUpdateMeta
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+8], 1
jne	SHORT $LN341@sqlite3Vdb
mov	eax, DWORD PTR _pIn3$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR _pDb$129[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR [eax], ecx
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
or	edx, 2
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], edx
jmp	SHORT $LN339@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+8], 2
jne	SHORT $LN339@sqlite3Vdb
mov	edx, DWORD PTR _pIn3$[ebp]
mov	al, BYTE PTR [edx+16]
mov	ecx, DWORD PTR _pDb$129[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	BYTE PTR [edx+76], al
mov	eax, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [eax+4], 1
jne	SHORT $LN338@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExpirePreparedStatements
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
and	eax, -33				
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
shr	eax, 5
and	eax, 1
je	SHORT $LN336@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 4
jmp	$LN682@sqlite3Vdb
mov	DWORD PTR _nField$123[ebp], 0
mov	DWORD PTR _pKeyInfo$212[ebp], 0
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _p2$178[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _iDb$110[ebp], ecx
mov	edx, DWORD PTR _iDb$110[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$127[ebp], edx
mov	ecx, DWORD PTR _pDb$127[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pX$63[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 53					
jne	SHORT $LN335@sqlite3Vdb
mov	DWORD PTR _wrFlag$82[ebp], 1
mov	edx, DWORD PTR _pDb$127[ebp]
mov	eax, DWORD PTR [edx+12]
movzx	ecx, BYTE PTR [eax+76]
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+87]
cmp	ecx, eax
jge	SHORT $LN334@sqlite3Vdb
mov	ecx, DWORD PTR _pDb$127[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR [edx+76]
mov	BYTE PTR [eax+87], cl
jmp	SHORT $LN333@sqlite3Vdb
mov	DWORD PTR _wrFlag$82[ebp], 0
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 2
je	SHORT $LN331@sqlite3Vdb
imul	ecx, DWORD PTR _p2$178[ebp], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], ecx
mov	edx, DWORD PTR _pIn2$[ebp]
push	edx
call	_sqlite3VdbeMemIntegerify
add	esp, 4
mov	eax, DWORD PTR _pIn2$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _p2$178[ebp], ecx
cmp	DWORD PTR _p2$178[ebp], 2
jge	SHORT $LN331@sqlite3Vdb
push	70771					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _pOp$[ebp]
movsx	eax, BYTE PTR [edx+1]
cmp	eax, -6					
jne	SHORT $LN330@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pKeyInfo$212[ebp], edx
mov	eax, DWORD PTR _pKeyInfo$212[ebp]
movzx	ecx, WORD PTR [eax+6]
mov	edx, DWORD PTR _pKeyInfo$212[ebp]
movzx	eax, WORD PTR [edx+8]
add	ecx, eax
mov	DWORD PTR _nField$123[ebp], ecx
jmp	SHORT $LN328@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
movsx	edx, BYTE PTR [ecx+1]
cmp	edx, -14				
jne	SHORT $LN328@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _nField$123[ebp], ecx
push	1
mov	edx, DWORD PTR _iDb$110[ebp]
push	edx
mov	eax, DWORD PTR _nField$123[ebp]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_allocateCursor
add	esp, 20					
mov	DWORD PTR _pCur$249[ebp], eax
cmp	DWORD PTR _pCur$249[ebp], 0
jne	SHORT $LN327@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pCur$249[ebp]
mov	BYTE PTR [ecx+25], 1
mov	edx, DWORD PTR _pCur$249[ebp]
mov	eax, DWORD PTR [edx+28]
or	eax, 8
mov	ecx, DWORD PTR _pCur$249[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR _pCur$249[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pKeyInfo$212[ebp]
push	ecx
mov	edx, DWORD PTR _wrFlag$82[ebp]
push	edx
mov	eax, DWORD PTR _p2$178[ebp]
push	eax
mov	ecx, DWORD PTR _pX$63[ebp]
push	ecx
call	_sqlite3BtreeCursor
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pCur$249[ebp]
mov	eax, DWORD PTR _pKeyInfo$212[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
and	edx, 1
push	edx
mov	eax, DWORD PTR _pCur$249[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeCursorHints
add	esp, 8
mov	edx, DWORD PTR _pOp$[ebp]
movsx	eax, BYTE PTR [edx+1]
cmp	eax, -6					
je	SHORT $LN765@sqlite3Vdb
mov	DWORD PTR tv2240[ebp], 1
jmp	SHORT $LN766@sqlite3Vdb
mov	DWORD PTR tv2240[ebp], 0
mov	ecx, DWORD PTR tv2240[ebp]
and	ecx, 1
shl	ecx, 2
mov	edx, DWORD PTR _pCur$249[ebp]
mov	eax, DWORD PTR [edx+28]
and	eax, -5					
or	eax, ecx
mov	ecx, DWORD PTR _pCur$249[ebp]
mov	DWORD PTR [ecx+28], eax
jmp	$LN682@sqlite3Vdb
push	1
push	-1
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_allocateCursor
add	esp, 20					
mov	DWORD PTR _pCx$273[ebp], eax
cmp	DWORD PTR _pCx$273[ebp], 0
jne	SHORT $LN325@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pCx$273[ebp]
mov	BYTE PTR [ecx+25], 1
mov	edx, DWORD PTR _pCx$273[ebp]
mov	eax, DWORD PTR [edx+28]
or	eax, 1
mov	ecx, DWORD PTR _pCx$273[ebp]
mov	DWORD PTR [ecx+28], eax
mov	edx, DWORD PTR ?vfsFlags@?BBG@??sqlite3VdbeExec@@9@9
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
or	ecx, 5
push	ecx
mov	edx, DWORD PTR _pCx$273[ebp]
add	edx, 4
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3BtreeOpen
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN324@sqlite3Vdb
push	1
mov	eax, DWORD PTR _pCx$273[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN320@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pKeyInfo$160[ebp], eax
cmp	DWORD PTR _pKeyInfo$160[ebp], 0
je	$LN322@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
or	edx, 2
push	edx
lea	eax, DWORD PTR _pgno$28[ebp]
push	eax
mov	ecx, DWORD PTR _pCx$273[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeCreateTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN321@sqlite3Vdb
mov	eax, DWORD PTR _pCx$273[ebp]
mov	ecx, DWORD PTR _pKeyInfo$160[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _pCx$273[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pKeyInfo$160[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _pgno$28[ebp]
push	edx
mov	eax, DWORD PTR _pCx$273[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeCursor
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pCx$273[ebp]
mov	eax, DWORD PTR [edx+28]
and	eax, -5					
mov	ecx, DWORD PTR _pCx$273[ebp]
mov	DWORD PTR [ecx+28], eax
jmp	SHORT $LN320@sqlite3Vdb
mov	edx, DWORD PTR _pCx$273[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
push	1
push	1
mov	ecx, DWORD PTR _pCx$273[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeCursor
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pCx$273[ebp]
mov	ecx, DWORD PTR [eax+28]
or	ecx, 4
mov	edx, DWORD PTR _pCx$273[ebp]
mov	DWORD PTR [edx+28], ecx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
cmp	ecx, 8
je	SHORT $LN767@sqlite3Vdb
mov	DWORD PTR tv2315[ebp], 1
jmp	SHORT $LN768@sqlite3Vdb
mov	DWORD PTR tv2315[ebp], 0
mov	edx, DWORD PTR tv2315[ebp]
and	edx, 1
shl	edx, 3
mov	eax, DWORD PTR _pCx$273[ebp]
mov	ecx, DWORD PTR [eax+28]
and	ecx, -9					
or	ecx, edx
mov	edx, DWORD PTR _pCx$273[ebp]
mov	DWORD PTR [edx+28], ecx
jmp	$LN682@sqlite3Vdb
push	1
push	-1
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_allocateCursor
add	esp, 20					
mov	DWORD PTR _pCx$140[ebp], eax
cmp	DWORD PTR _pCx$140[ebp], 0
jne	SHORT $LN318@sqlite3Vdb
jmp	$no_mem$819
mov	edx, DWORD PTR _pCx$140[ebp]
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pCx$140[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VdbeSorterInit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN682@sqlite3Vdb
push	0
push	-1
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_allocateCursor
add	esp, 20					
mov	DWORD PTR _pCx$211[ebp], eax
cmp	DWORD PTR _pCx$211[ebp], 0
jne	SHORT $LN316@sqlite3Vdb
jmp	$no_mem$819
mov	eax, DWORD PTR _pCx$211[ebp]
mov	BYTE PTR [eax+25], 1
mov	ecx, DWORD PTR _pCx$211[ebp]
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+16], eax
mov	ecx, DWORD PTR _pCx$211[ebp]
mov	edx, DWORD PTR [ecx+28]
or	edx, 4
mov	eax, DWORD PTR _pCx$211[ebp]
mov	DWORD PTR [eax+28], edx
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeFreeCursor
add	esp, 8
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR [ecx+edx*4], 0
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$270[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _oc$255[ebp], edx
mov	eax, DWORD PTR _pC$270[ebp]
mov	BYTE PTR [eax+25], 0
mov	ecx, DWORD PTR _pC$270[ebp]
mov	edx, DWORD PTR [ecx+28]
shr	edx, 2
and	edx, 1
je	$LN313@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], ecx
mov	edx, DWORD PTR _pIn3$[ebp]
push	edx
call	_applyNumericAffinity
add	esp, 4
mov	eax, DWORD PTR _pIn3$[ebp]
push	eax
call	_sqlite3VdbeIntValue
add	esp, 4
mov	DWORD PTR _iKey$167[ebp], eax
mov	DWORD PTR _iKey$167[ebp+4], edx
mov	ecx, DWORD PTR _pC$270[ebp]
mov	BYTE PTR [ecx+26], 0
mov	edx, DWORD PTR _pIn3$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 4
jne	$LN306@sqlite3Vdb
mov	ecx, DWORD PTR _pIn3$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 8
jne	SHORT $LN311@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _iKey$167[ebp+4]
mov	ecx, DWORD PTR _iKey$167[ebp]
call	__ltod3
mov	edx, DWORD PTR _pIn3$[ebp]
comisd	xmm0, QWORD PTR [edx+8]
jbe	SHORT $LN310@sqlite3Vdb
mov	eax, DWORD PTR _oc$255[ebp]
and	eax, 1
jne	SHORT $LN309@sqlite3Vdb
mov	ecx, DWORD PTR _oc$255[ebp]
sub	ecx, 1
mov	DWORD PTR _oc$255[ebp], ecx
jmp	SHORT $LN306@sqlite3Vdb
mov	edx, DWORD PTR _iKey$167[ebp+4]
mov	ecx, DWORD PTR _iKey$167[ebp]
call	__ltod3
mov	edx, DWORD PTR _pIn3$[ebp]
movsd	xmm1, QWORD PTR [edx+8]
comisd	xmm1, xmm0
jbe	SHORT $LN306@sqlite3Vdb
mov	eax, DWORD PTR _oc$255[ebp]
and	eax, 1
je	SHORT $LN306@sqlite3Vdb
mov	ecx, DWORD PTR _oc$255[ebp]
add	ecx, 1
mov	DWORD PTR _oc$255[ebp], ecx
lea	edx, DWORD PTR _res$265[ebp]
push	edx
push	0
mov	eax, DWORD PTR _iKey$167[ebp+4]
push	eax
mov	ecx, DWORD PTR _iKey$167[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pC$270[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN305@sqlite3Vdb
jmp	$abort_due_to_error$827
cmp	DWORD PTR _res$265[ebp], 0
jne	SHORT $LN304@sqlite3Vdb
mov	ecx, DWORD PTR _pC$270[ebp]
mov	BYTE PTR [ecx+26], 1
mov	edx, DWORD PTR _pC$270[ebp]
mov	eax, DWORD PTR _iKey$167[ebp]
mov	DWORD PTR [edx+56], eax
mov	ecx, DWORD PTR _iKey$167[ebp+4]
mov	DWORD PTR [edx+60], ecx
jmp	$LN303@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _nField$61[ebp], eax
mov	ecx, DWORD PTR _pC$270[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _r$7[ebp], edx
mov	ax, WORD PTR _nField$61[ebp]
mov	WORD PTR _r$7[ebp+4], ax
mov	ecx, DWORD PTR _oc$255[ebp]
sub	ecx, 59					
and	ecx, 1
je	SHORT $LN769@sqlite3Vdb
mov	DWORD PTR tv2448[ebp], -1
jmp	SHORT $LN770@sqlite3Vdb
mov	DWORD PTR tv2448[ebp], 1
mov	dl, BYTE PTR tv2448[ebp]
mov	BYTE PTR _r$7[ebp+6], dl
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _r$7[ebp+8], ecx
mov	edx, DWORD PTR _r$7[ebp+8]
movzx	eax, WORD PTR [edx+28]
and	eax, 16384				
je	SHORT $LN771@sqlite3Vdb
mov	ecx, DWORD PTR _r$7[ebp+8]
push	ecx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv2459[ebp], eax
jmp	SHORT $LN772@sqlite3Vdb
mov	DWORD PTR tv2459[ebp], 0
lea	edx, DWORD PTR _res$265[ebp]
push	edx
push	0
push	0
push	0
lea	eax, DWORD PTR _r$7[ebp]
push	eax
mov	ecx, DWORD PTR _pC$270[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN302@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	eax, DWORD PTR _pC$270[ebp]
mov	BYTE PTR [eax+26], 0
mov	ecx, DWORD PTR _pC$270[ebp]
mov	BYTE PTR [ecx+27], 0
mov	edx, DWORD PTR _pC$270[ebp]
mov	DWORD PTR [edx+68], 0
cmp	DWORD PTR _oc$255[ebp], 61		
jl	SHORT $LN301@sqlite3Vdb
cmp	DWORD PTR _res$265[ebp], 0
jl	SHORT $LN299@sqlite3Vdb
cmp	DWORD PTR _res$265[ebp], 0
jne	SHORT $LN300@sqlite3Vdb
cmp	DWORD PTR _oc$255[ebp], 62		
jne	SHORT $LN300@sqlite3Vdb
mov	DWORD PTR _res$265[ebp], 0
lea	eax, DWORD PTR _res$265[ebp]
push	eax
mov	ecx, DWORD PTR _pC$270[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3BtreeNext
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN298@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	eax, DWORD PTR _pC$270[ebp]
mov	BYTE PTR [eax+26], 0
jmp	SHORT $LN297@sqlite3Vdb
mov	DWORD PTR _res$265[ebp], 0
jmp	SHORT $LN292@sqlite3Vdb
cmp	DWORD PTR _res$265[ebp], 0
jg	SHORT $LN294@sqlite3Vdb
cmp	DWORD PTR _res$265[ebp], 0
jne	SHORT $LN295@sqlite3Vdb
cmp	DWORD PTR _oc$255[ebp], 59		
jne	SHORT $LN295@sqlite3Vdb
mov	DWORD PTR _res$265[ebp], 0
lea	ecx, DWORD PTR _res$265[ebp]
push	ecx
mov	edx, DWORD PTR _pC$270[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreePrevious
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN293@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	ecx, DWORD PTR _pC$270[ebp]
mov	BYTE PTR [ecx+26], 0
jmp	SHORT $LN292@sqlite3Vdb
mov	edx, DWORD PTR _pC$270[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreeEof
add	esp, 4
mov	DWORD PTR _res$265[ebp], eax
cmp	DWORD PTR _res$265[ebp], 0
je	SHORT $LN291@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$188[ebp], ecx
mov	edx, DWORD PTR _pC$188[ebp]
mov	BYTE PTR [edx+25], 0
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], ecx
mov	edx, DWORD PTR _pIn2$[ebp]
push	edx
call	_sqlite3VdbeIntValue
add	esp, 4
mov	ecx, DWORD PTR _pC$188[ebp]
mov	DWORD PTR [ecx+48], eax
mov	DWORD PTR [ecx+52], edx
mov	edx, DWORD PTR _pC$188[ebp]
mov	BYTE PTR [edx+26], 0
mov	eax, DWORD PTR _pC$188[ebp]
mov	BYTE PTR [eax+27], 1
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pC$239[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], ecx
mov	DWORD PTR _pFree$80[ebp], 0
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+16], 0
jle	$LN288@sqlite3Vdb
mov	eax, DWORD PTR _pC$239[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _r$12[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	ax, WORD PTR [edx+16]
mov	WORD PTR _r$12[ebp+4], ax
mov	ecx, DWORD PTR _pIn3$[ebp]
mov	DWORD PTR _r$12[ebp+8], ecx
mov	DWORD PTR _ii$256[ebp], 0
jmp	SHORT $LN287@sqlite3Vdb
mov	edx, DWORD PTR _ii$256[ebp]
add	edx, 1
mov	DWORD PTR _ii$256[ebp], edx
movzx	eax, WORD PTR _r$12[ebp+4]
cmp	DWORD PTR _ii$256[ebp], eax
jge	SHORT $LN285@sqlite3Vdb
imul	ecx, DWORD PTR _ii$256[ebp], 40
mov	edx, DWORD PTR _r$12[ebp+8]
movzx	eax, WORD PTR [edx+ecx+28]
and	eax, 16384				
je	SHORT $LN773@sqlite3Vdb
imul	ecx, DWORD PTR _ii$256[ebp], 40
add	ecx, DWORD PTR _r$12[ebp+8]
push	ecx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv2533[ebp], eax
jmp	SHORT $LN774@sqlite3Vdb
mov	DWORD PTR tv2533[ebp], 0
jmp	SHORT $LN286@sqlite3Vdb
lea	edx, DWORD PTR _r$12[ebp]
mov	DWORD PTR _pIdxKey$209[ebp], edx
jmp	SHORT $LN284@sqlite3Vdb
lea	eax, DWORD PTR _pFree$80[ebp]
push	eax
push	191					
lea	ecx, DWORD PTR _aTempRec$280[ebp]
push	ecx
mov	edx, DWORD PTR _pC$239[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3VdbeAllocUnpackedRecord
add	esp, 16					
mov	DWORD PTR _pIdxKey$209[ebp], eax
cmp	DWORD PTR _pIdxKey$209[ebp], 0
jne	SHORT $LN283@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pIdxKey$209[ebp]
push	ecx
mov	edx, DWORD PTR _pIn3$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pIn3$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pC$239[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3VdbeRecordUnpack
add	esp, 16					
mov	edx, DWORD PTR _pIdxKey$209[ebp]
mov	BYTE PTR [edx+6], 0
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 64					
jne	SHORT $LN279@sqlite3Vdb
mov	DWORD PTR _ii$256[ebp], 0
jmp	SHORT $LN281@sqlite3Vdb
mov	edx, DWORD PTR _ii$256[ebp]
add	edx, 1
mov	DWORD PTR _ii$256[ebp], edx
movzx	eax, WORD PTR _r$12[ebp+4]
cmp	DWORD PTR _ii$256[ebp], eax
jge	SHORT $LN279@sqlite3Vdb
imul	ecx, DWORD PTR _ii$256[ebp], 40
mov	edx, DWORD PTR _r$12[ebp+8]
movzx	eax, WORD PTR [edx+ecx+28]
and	eax, 1
je	SHORT $LN278@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	SHORT $LN279@sqlite3Vdb
jmp	SHORT $LN280@sqlite3Vdb
lea	eax, DWORD PTR _res$106[ebp]
push	eax
push	0
push	0
push	0
mov	ecx, DWORD PTR _pIdxKey$209[ebp]
push	ecx
mov	edx, DWORD PTR _pC$239[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+16], 0
jne	SHORT $LN277@sqlite3Vdb
mov	edx, DWORD PTR _pFree$80[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN276@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pC$239[ebp]
mov	edx, DWORD PTR _res$106[ebp]
mov	DWORD PTR [ecx+12], edx
cmp	DWORD PTR _res$106[ebp], 0
jne	SHORT $LN775@sqlite3Vdb
mov	DWORD PTR tv2577[ebp], 1
jmp	SHORT $LN776@sqlite3Vdb
mov	DWORD PTR tv2577[ebp], 0
mov	eax, DWORD PTR tv2577[ebp]
mov	DWORD PTR _alreadyExists$158[ebp], eax
mov	ecx, 1
sub	ecx, DWORD PTR _alreadyExists$158[ebp]
mov	edx, DWORD PTR _pC$239[ebp]
mov	BYTE PTR [edx+25], cl
mov	eax, DWORD PTR _pC$239[ebp]
mov	BYTE PTR [eax+27], 0
mov	ecx, DWORD PTR _pC$239[ebp]
mov	DWORD PTR [ecx+68], 0
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 66					
jne	SHORT $LN275@sqlite3Vdb
cmp	DWORD PTR _alreadyExists$158[ebp], 0
je	SHORT $LN274@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	SHORT $LN272@sqlite3Vdb
cmp	DWORD PTR _alreadyExists$158[ebp], 0
jne	SHORT $LN272@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pC$237[ebp], edx
mov	eax, DWORD PTR _pC$237[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pCrsr$26[ebp], ecx
mov	DWORD PTR _res$170[ebp], 0
mov	edx, DWORD PTR _pIn3$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _iKey$37[ebp], eax
mov	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _iKey$37[ebp+4], ecx
lea	edx, DWORD PTR _res$170[ebp]
push	edx
push	0
mov	eax, DWORD PTR _iKey$37[ebp+4]
push	eax
mov	ecx, DWORD PTR _iKey$37[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pCrsr$26[ebp]
push	edx
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pC$237[ebp]
mov	ecx, DWORD PTR _pIn3$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR [eax+56], edx
mov	ecx, DWORD PTR [ecx+20]
mov	DWORD PTR [eax+60], ecx
cmp	DWORD PTR _res$170[ebp], 0
jne	SHORT $LN777@sqlite3Vdb
mov	DWORD PTR tv2611[ebp], 1
jmp	SHORT $LN778@sqlite3Vdb
mov	DWORD PTR tv2611[ebp], 0
mov	edx, DWORD PTR _pC$237[ebp]
mov	al, BYTE PTR tv2611[ebp]
mov	BYTE PTR [edx+26], al
mov	ecx, DWORD PTR _pC$237[ebp]
mov	BYTE PTR [ecx+25], 0
mov	edx, DWORD PTR _pC$237[ebp]
mov	DWORD PTR [edx+68], 0
mov	eax, DWORD PTR _pC$237[ebp]
mov	BYTE PTR [eax+27], 0
cmp	DWORD PTR _res$170[ebp], 0
je	SHORT $LN270@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
mov	eax, DWORD PTR _pC$237[ebp]
mov	ecx, DWORD PTR _res$170[ebp]
mov	DWORD PTR [eax+12], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [eax+40]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR [eax+44]
mov	DWORD PTR [ecx+20], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	eax, DWORD PTR [edx+40]
add	eax, 1
mov	ecx, DWORD PTR [edx+44]
adc	ecx, 0
mov	edx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [edx+4]
mov	esi, DWORD PTR _p$[ebp]
mov	esi, DWORD PTR [esi+56]
mov	edx, DWORD PTR [esi+edx*4]
mov	DWORD PTR [edx+40], eax
mov	DWORD PTR [edx+44], ecx
jmp	$LN682@sqlite3Vdb
xorpd	xmm0, xmm0
movlpd	QWORD PTR _v$275[ebp], xmm0
mov	DWORD PTR _res$198[ebp], 0
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$264[ebp], ecx
mov	edx, DWORD PTR _pC$264[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $LN267@sqlite3Vdb
jmp	$LN266@sqlite3Vdb
mov	eax, DWORD PTR _pC$264[ebp]
mov	ecx, DWORD PTR [eax+28]
shr	ecx, 1
and	ecx, 1
jne	$LN260@sqlite3Vdb
lea	edx, DWORD PTR _res$198[ebp]
push	edx
mov	eax, DWORD PTR _pC$264[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeLast
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN264@sqlite3Vdb
jmp	$abort_due_to_error$827
cmp	DWORD PTR _res$198[ebp], 0
je	SHORT $LN263@sqlite3Vdb
mov	DWORD PTR _v$275[ebp], 1
mov	DWORD PTR _v$275[ebp+4], 0
jmp	SHORT $LN260@sqlite3Vdb
lea	edx, DWORD PTR _v$275[ebp]
push	edx
mov	eax, DWORD PTR _pC$264[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeKeySize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _v$275[ebp+4], 2147483647	
jl	SHORT $LN261@sqlite3Vdb
jg	SHORT $LN808@sqlite3Vdb
cmp	DWORD PTR _v$275[ebp], -1
jb	SHORT $LN261@sqlite3Vdb
mov	edx, DWORD PTR _pC$264[ebp]
mov	eax, DWORD PTR [edx+28]
or	eax, 2
mov	ecx, DWORD PTR _pC$264[ebp]
mov	DWORD PTR [ecx+28], eax
jmp	SHORT $LN260@sqlite3Vdb
mov	edx, DWORD PTR _v$275[ebp]
add	edx, 1
mov	eax, DWORD PTR _v$275[ebp+4]
adc	eax, 0
mov	DWORD PTR _v$275[ebp], edx
mov	DWORD PTR _v$275[ebp+4], eax
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	$LN259@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+176], 0
je	SHORT $LN258@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+176]
mov	DWORD PTR _pFrame$196[ebp], ecx
jmp	SHORT $LN257@sqlite3Vdb
mov	edx, DWORD PTR _pFrame$196[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pFrame$196[ebp], eax
mov	ecx, DWORD PTR _pFrame$196[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN255@sqlite3Vdb
jmp	SHORT $LN256@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
mov	ecx, DWORD PTR _pFrame$196[ebp]
add	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _pMem$217[ebp], eax
jmp	SHORT $LN254@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pMem$217[ebp], eax
mov	ecx, DWORD PTR _pMem$217[ebp]
push	ecx
call	_sqlite3VdbeMemIntegerify
add	esp, 4
mov	edx, DWORD PTR _pMem$217[ebp]
mov	DWORD PTR tv6746[ebp], edx
mov	eax, DWORD PTR tv6746[ebp]
cmp	DWORD PTR [eax+16], -1
jne	SHORT $LN809@sqlite3Vdb
mov	ecx, DWORD PTR tv6746[ebp]
cmp	DWORD PTR [ecx+20], 2147483647		
je	SHORT $LN252@sqlite3Vdb
mov	edx, DWORD PTR _pC$264[ebp]
mov	eax, DWORD PTR [edx+28]
shr	eax, 1
and	eax, 1
je	SHORT $LN253@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 13			
jmp	$abort_due_to_error$827
mov	ecx, DWORD PTR _pMem$217[ebp]
mov	edx, DWORD PTR [ecx+16]
add	edx, 1
mov	eax, DWORD PTR [ecx+20]
adc	eax, 0
mov	DWORD PTR tv6759[ebp], edx
mov	DWORD PTR tv6759[ebp+4], eax
mov	ecx, DWORD PTR _v$275[ebp+4]
cmp	ecx, DWORD PTR tv6759[ebp+4]
jg	SHORT $LN251@sqlite3Vdb
jl	SHORT $LN810@sqlite3Vdb
mov	edx, DWORD PTR _v$275[ebp]
cmp	edx, DWORD PTR tv6759[ebp]
jae	SHORT $LN251@sqlite3Vdb
mov	eax, DWORD PTR _pMem$217[ebp]
mov	ecx, DWORD PTR [eax+16]
add	ecx, 1
mov	edx, DWORD PTR [eax+20]
adc	edx, 0
mov	DWORD PTR _v$275[ebp], ecx
mov	DWORD PTR _v$275[ebp+4], edx
mov	eax, DWORD PTR _pMem$217[ebp]
mov	ecx, DWORD PTR _v$275[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _v$275[ebp+4]
mov	DWORD PTR [eax+20], edx
mov	eax, DWORD PTR _pC$264[ebp]
mov	ecx, DWORD PTR [eax+28]
shr	ecx, 1
and	ecx, 1
je	$LN245@sqlite3Vdb
mov	edx, DWORD PTR _lastRowid$[ebp]
mov	DWORD PTR _v$275[ebp], edx
mov	eax, DWORD PTR _lastRowid$[ebp+4]
mov	DWORD PTR _v$275[ebp+4], eax
mov	ecx, DWORD PTR _v$275[ebp]
mov	edx, DWORD PTR _v$275[ebp+4]
and	edx, 1073741823				
mov	DWORD PTR _v$275[ebp], ecx
mov	DWORD PTR _v$275[ebp+4], edx
mov	eax, DWORD PTR _v$275[ebp]
add	eax, 1
mov	ecx, DWORD PTR _v$275[ebp+4]
adc	ecx, 0
mov	DWORD PTR _v$275[ebp], eax
mov	DWORD PTR _v$275[ebp+4], ecx
mov	DWORD PTR _cnt$176[ebp], 0
lea	edx, DWORD PTR _res$198[ebp]
push	edx
push	0
mov	eax, DWORD PTR _v$275[ebp+4]
push	eax
mov	ecx, DWORD PTR _v$275[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pC$264[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN248@sqlite3Vdb
cmp	DWORD PTR _res$198[ebp], 0
jne	$LN248@sqlite3Vdb
mov	ecx, DWORD PTR _cnt$176[ebp]
add	ecx, 1
mov	DWORD PTR _cnt$176[ebp], ecx
cmp	DWORD PTR _cnt$176[ebp], 100		
jge	SHORT $LN248@sqlite3Vdb
lea	edx, DWORD PTR _v$275[ebp]
push	edx
push	8
call	_sqlite3_randomness
add	esp, 8
cmp	DWORD PTR _cnt$176[ebp], 5
jge	SHORT $LN247@sqlite3Vdb
mov	eax, DWORD PTR _v$275[ebp]
and	eax, 16777215				
mov	ecx, DWORD PTR _v$275[ebp+4]
and	ecx, 0
mov	DWORD PTR _v$275[ebp], eax
mov	DWORD PTR _v$275[ebp+4], ecx
jmp	SHORT $LN246@sqlite3Vdb
mov	edx, DWORD PTR _v$275[ebp]
mov	eax, DWORD PTR _v$275[ebp+4]
and	eax, 1073741823				
mov	DWORD PTR _v$275[ebp], edx
mov	DWORD PTR _v$275[ebp+4], eax
mov	ecx, DWORD PTR _v$275[ebp]
add	ecx, 1
mov	edx, DWORD PTR _v$275[ebp+4]
adc	edx, 0
mov	DWORD PTR _v$275[ebp], ecx
mov	DWORD PTR _v$275[ebp+4], edx
jmp	$LN249@sqlite3Vdb
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN245@sqlite3Vdb
cmp	DWORD PTR _res$198[ebp], 0
jne	SHORT $LN245@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 13			
jmp	$abort_due_to_error$827
mov	eax, DWORD PTR _pC$264[ebp]
mov	BYTE PTR [eax+26], 0
mov	ecx, DWORD PTR _pC$264[ebp]
mov	BYTE PTR [ecx+27], 0
mov	edx, DWORD PTR _pC$264[ebp]
mov	DWORD PTR [edx+68], 0
mov	eax, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR _v$275[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _v$275[ebp+4]
mov	DWORD PTR [eax+20], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pData$228[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$219[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 70					
jne	SHORT $LN243@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pKey$60[ebp], ecx
mov	edx, DWORD PTR _pKey$60[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _iKey$165[ebp], eax
mov	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _iKey$165[ebp+4], ecx
jmp	SHORT $LN242@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+12]
cdq
mov	DWORD PTR _iKey$165[ebp], eax
mov	DWORD PTR _iKey$165[ebp+4], edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
and	ecx, 1
je	SHORT $LN241@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+92]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+92], eax
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 2
je	SHORT $LN240@sqlite3Vdb
mov	ecx, DWORD PTR _iKey$165[ebp]
mov	DWORD PTR _lastRowid$[ebp], ecx
mov	edx, DWORD PTR _iKey$165[ebp+4]
mov	DWORD PTR _lastRowid$[ebp+4], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _lastRowid$[ebp]
mov	DWORD PTR [eax+32], ecx
mov	edx, DWORD PTR _lastRowid$[ebp+4]
mov	DWORD PTR [eax+36], edx
mov	eax, DWORD PTR _pData$228[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 1
je	SHORT $LN239@sqlite3Vdb
mov	edx, DWORD PTR _pData$228[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pData$228[ebp]
mov	DWORD PTR [eax+24], 0
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
and	edx, 16					
je	SHORT $LN779@sqlite3Vdb
mov	eax, DWORD PTR _pC$219[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR tv2791[ebp], ecx
jmp	SHORT $LN780@sqlite3Vdb
mov	DWORD PTR tv2791[ebp], 0
mov	edx, DWORD PTR tv2791[ebp]
mov	DWORD PTR _seekResult$34[ebp], edx
mov	eax, DWORD PTR _pData$228[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 16384				
je	SHORT $LN237@sqlite3Vdb
mov	edx, DWORD PTR _pData$228[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _nZero$102[ebp], eax
jmp	SHORT $LN236@sqlite3Vdb
mov	DWORD PTR _nZero$102[ebp], 0
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
and	edx, 8
je	SHORT $LN781@sqlite3Vdb
mov	DWORD PTR tv2803[ebp], 1
jmp	SHORT $LN782@sqlite3Vdb
mov	DWORD PTR tv2803[ebp], 0
mov	eax, DWORD PTR _seekResult$34[ebp]
push	eax
mov	ecx, DWORD PTR tv2803[ebp]
push	ecx
mov	edx, DWORD PTR _nZero$102[ebp]
push	edx
mov	eax, DWORD PTR _pData$228[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pData$228[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _iKey$165[ebp+4]
push	ecx
mov	edx, DWORD PTR _iKey$165[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pC$219[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeInsert
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pC$219[ebp]
mov	BYTE PTR [edx+26], 0
mov	eax, DWORD PTR _pC$219[ebp]
mov	BYTE PTR [eax+27], 0
mov	ecx, DWORD PTR _pC$219[ebp]
mov	DWORD PTR [ecx+68], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN235@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+200], 0
je	$LN235@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [eax+16], 0
je	$LN235@sqlite3Vdb
mov	ecx, DWORD PTR _pC$219[ebp]
movsx	edx, BYTE PTR [ecx+24]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _zDb$24[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _zTbl$59[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
and	eax, 4
je	SHORT $LN783@sqlite3Vdb
mov	DWORD PTR tv2833[ebp], 23		
jmp	SHORT $LN784@sqlite3Vdb
mov	DWORD PTR tv2833[ebp], 18		
mov	ecx, DWORD PTR tv2833[ebp]
mov	DWORD PTR _op$57[ebp], ecx
mov	edx, DWORD PTR _iKey$165[ebp+4]
push	edx
mov	eax, DWORD PTR _iKey$165[ebp]
push	eax
mov	ecx, DWORD PTR _zTbl$59[ebp]
push	ecx
mov	edx, DWORD PTR _zDb$24[ebp]
push	edx
mov	eax, DWORD PTR _op$57[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+196]
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+200]
call	ecx
add	esp, 24					
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$224[ebp], eax
mov	ecx, DWORD PTR _pC$224[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _iKey$35[ebp], edx
mov	eax, DWORD PTR [ecx+60]
mov	DWORD PTR _iKey$35[ebp+4], eax
mov	ecx, DWORD PTR _pC$224[ebp]
push	ecx
call	_sqlite3VdbeCursorMoveto
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN233@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _pC$224[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreeDelete
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pC$224[ebp]
mov	DWORD PTR [ecx+68], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN232@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+200], 0
je	SHORT $LN232@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [eax+16], 0
je	SHORT $LN232@sqlite3Vdb
mov	ecx, DWORD PTR _pC$224[ebp]
mov	edx, DWORD PTR [ecx+28]
shr	edx, 2
and	edx, 1
je	SHORT $LN232@sqlite3Vdb
mov	eax, DWORD PTR _iKey$35[ebp+4]
push	eax
mov	ecx, DWORD PTR _iKey$35[ebp]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pC$224[ebp]
movsx	edx, BYTE PTR [ecx+24]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
push	edx
push	9
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+196]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+200]
call	eax
add	esp, 24					
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
and	edx, 1
je	SHORT $LN231@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+92]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+92], ecx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VdbeSetChanges
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+92], 0
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pC$55[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _nIgnore$33[ebp], eax
lea	ecx, DWORD PTR _res$22[ebp]
push	ecx
mov	edx, DWORD PTR _nIgnore$33[ebp]
push	edx
mov	eax, DWORD PTR _pIn3$[ebp]
push	eax
mov	ecx, DWORD PTR _pC$55[ebp]
push	ecx
call	_sqlite3VdbeSorterCompare
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _res$22[ebp], 0
je	SHORT $LN228@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+8], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$53[ebp], ecx
mov	edx, DWORD PTR _pOut$[ebp]
push	edx
mov	eax, DWORD PTR _pC$53[ebp]
push	eax
call	_sqlite3VdbeSorterRowkey
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+8], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$185[ebp], ecx
mov	edx, DWORD PTR _pC$185[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pCrsr$166[ebp], eax
mov	ecx, DWORD PTR _pC$185[ebp]
push	ecx
call	_sqlite3VdbeCursorMoveto
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN225@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _pC$185[ebp]
mov	eax, DWORD PTR [edx+28]
shr	eax, 2
and	eax, 1
jne	SHORT $LN224@sqlite3Vdb
lea	ecx, DWORD PTR _n64$32[ebp]
push	ecx
mov	edx, DWORD PTR _pCrsr$166[ebp]
push	edx
call	_sqlite3BtreeKeySize
add	esp, 8
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+ecx+88]
cdq
mov	DWORD PTR tv7004[ebp], eax
mov	DWORD PTR tv7004[ebp+4], edx
mov	eax, DWORD PTR _n64$32[ebp+4]
cmp	eax, DWORD PTR tv7004[ebp+4]
jl	SHORT $LN223@sqlite3Vdb
jg	SHORT $LN811@sqlite3Vdb
mov	ecx, DWORD PTR _n64$32[ebp]
cmp	ecx, DWORD PTR tv7004[ebp]
jbe	SHORT $LN223@sqlite3Vdb
jmp	$too_big$824
mov	edx, DWORD PTR _n64$32[ebp]
mov	DWORD PTR _n$222[ebp], edx
jmp	SHORT $LN221@sqlite3Vdb
lea	eax, DWORD PTR _n$222[ebp]
push	eax
mov	ecx, DWORD PTR _pCrsr$166[ebp]
push	ecx
call	_sqlite3BtreeDataSize
add	esp, 8
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _n$222[ebp]
cmp	edx, DWORD PTR [ecx+eax+88]
jbe	SHORT $LN221@sqlite3Vdb
jmp	$too_big$824
push	0
mov	eax, DWORD PTR _n$222[ebp]
push	eax
mov	ecx, DWORD PTR _pOut$[ebp]
push	ecx
call	_sqlite3VdbeMemGrow
add	esp, 12					
test	eax, eax
je	SHORT $LN220@sqlite3Vdb
jmp	$no_mem$819
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR _n$222[ebp]
mov	DWORD PTR [edx+24], eax
mov	ecx, DWORD PTR _pOut$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -16896				
or	edx, 16					
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pC$185[ebp]
mov	edx, DWORD PTR [ecx+28]
shr	edx, 2
and	edx, 1
jne	SHORT $LN219@sqlite3Vdb
mov	eax, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _n$222[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pCrsr$166[ebp]
push	eax
call	_sqlite3BtreeKey
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN218@sqlite3Vdb
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _n$222[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pCrsr$166[ebp]
push	ecx
call	_sqlite3BtreeData
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	BYTE PTR [edx+30], 1
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$257[ebp], ecx
mov	edx, DWORD PTR _pC$257[ebp]
movzx	eax, BYTE PTR [edx+25]
test	eax, eax
je	SHORT $LN216@sqlite3Vdb
mov	ecx, 1
mov	edx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [edx+28], cx
jmp	$LN682@sqlite3Vdb
jmp	$LN208@sqlite3Vdb
mov	eax, DWORD PTR _pC$257[ebp]
movzx	ecx, BYTE PTR [eax+27]
test	ecx, ecx
je	SHORT $LN214@sqlite3Vdb
mov	edx, DWORD PTR _pC$257[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _v$125[ebp], eax
mov	ecx, DWORD PTR [edx+52]
mov	DWORD PTR _v$125[ebp+4], ecx
jmp	$LN208@sqlite3Vdb
mov	edx, DWORD PTR _pC$257[ebp]
cmp	DWORD PTR [edx+32], 0
je	SHORT $LN212@sqlite3Vdb
mov	eax, DWORD PTR _pC$257[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pVtab$100[ebp], edx
mov	eax, DWORD PTR _pVtab$100[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pModule$31[ebp], ecx
lea	edx, DWORD PTR _v$125[ebp]
push	edx
mov	eax, DWORD PTR _pC$257[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _pModule$31[ebp]
mov	eax, DWORD PTR [edx+48]
call	eax
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pVtab$100[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VtabImportErrmsg
add	esp, 8
jmp	SHORT $LN208@sqlite3Vdb
mov	eax, DWORD PTR _pC$257[ebp]
push	eax
call	_sqlite3VdbeCursorMoveto
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN210@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	ecx, DWORD PTR _pC$257[ebp]
movzx	edx, BYTE PTR [ecx+26]
test	edx, edx
je	SHORT $LN209@sqlite3Vdb
mov	eax, DWORD PTR _pC$257[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _v$125[ebp], ecx
mov	edx, DWORD PTR [eax+60]
mov	DWORD PTR _v$125[ebp+4], edx
jmp	SHORT $LN208@sqlite3Vdb
lea	eax, DWORD PTR _v$125[ebp]
push	eax
mov	ecx, DWORD PTR _pC$257[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3BtreeKeySize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pOut$[ebp]
mov	ecx, DWORD PTR _v$125[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _v$125[ebp+4]
mov	DWORD PTR [eax+20], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$210[ebp], ecx
mov	edx, DWORD PTR _pC$210[ebp]
mov	BYTE PTR [edx+25], 1
mov	eax, DWORD PTR _pC$210[ebp]
mov	BYTE PTR [eax+26], 0
mov	ecx, DWORD PTR _pC$210[ebp]
mov	DWORD PTR [ecx+68], 0
mov	edx, DWORD PTR _pC$210[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN206@sqlite3Vdb
mov	eax, DWORD PTR _pC$210[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeClearCursor
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$203[ebp], eax
mov	ecx, DWORD PTR _pC$203[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pCrsr$51[ebp], edx
mov	DWORD PTR _res$130[ebp], 0
lea	eax, DWORD PTR _res$130[ebp]
push	eax
mov	ecx, DWORD PTR _pCrsr$51[ebp]
push	ecx
call	_sqlite3BtreeLast
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pC$203[ebp]
mov	al, BYTE PTR _res$130[ebp]
mov	BYTE PTR [edx+25], al
mov	ecx, DWORD PTR _pC$203[ebp]
mov	BYTE PTR [ecx+27], 0
mov	edx, DWORD PTR _pC$203[ebp]
mov	BYTE PTR [edx+26], 0
mov	eax, DWORD PTR _pC$203[ebp]
mov	DWORD PTR [eax+68], 0
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+8], 0
jle	SHORT $LN203@sqlite3Vdb
cmp	DWORD PTR _res$130[ebp], 0
je	SHORT $LN203@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+ecx+108]
add	eax, 1
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+ecx+108], eax
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$235[ebp], ecx
mov	DWORD PTR _res$183[ebp], 1
mov	edx, DWORD PTR _pC$235[ebp]
cmp	DWORD PTR [edx+64], 0
je	SHORT $LN200@sqlite3Vdb
lea	eax, DWORD PTR _res$183[ebp]
push	eax
mov	ecx, DWORD PTR _pC$235[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VdbeSorterRewind
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN199@sqlite3Vdb
mov	eax, DWORD PTR _pC$235[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pCrsr$20[ebp], ecx
lea	edx, DWORD PTR _res$183[ebp]
push	edx
mov	eax, DWORD PTR _pCrsr$20[ebp]
push	eax
call	_sqlite3BtreeFirst
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pC$235[ebp]
mov	BYTE PTR [ecx+27], 0
mov	edx, DWORD PTR _pC$235[ebp]
mov	DWORD PTR [edx+68], 0
mov	eax, DWORD PTR _pC$235[ebp]
mov	BYTE PTR [eax+26], 0
mov	ecx, DWORD PTR _pC$235[ebp]
mov	dl, BYTE PTR _res$183[ebp]
mov	BYTE PTR [ecx+25], dl
cmp	DWORD PTR _res$183[ebp], 0
je	SHORT $LN198@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$230[ebp], eax
mov	DWORD PTR _res$174[ebp], 0
lea	ecx, DWORD PTR _res$174[ebp]
push	ecx
mov	edx, DWORD PTR _pC$230[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VdbeSorterNext
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $next_tail$830
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
cmp	DWORD PTR [ecx+edx*4], 0
jne	SHORT $LN195@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$230[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _res$174[ebp], edx
lea	eax, DWORD PTR _res$174[ebp]
push	eax
mov	ecx, DWORD PTR _pC$230[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
call	ecx
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pC$230[ebp]
mov	DWORD PTR [edx+68], 0
cmp	DWORD PTR _res$174[ebp], 0
jne	SHORT $LN193@sqlite3Vdb
mov	eax, DWORD PTR _pC$230[ebp]
mov	BYTE PTR [eax+25], 0
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+108]
add	eax, 1
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+edx*4+108], eax
jmp	SHORT $LN192@sqlite3Vdb
mov	edx, DWORD PTR _pC$230[ebp]
mov	BYTE PTR [edx+25], 1
mov	eax, DWORD PTR _pC$230[ebp]
mov	BYTE PTR [eax+26], 0
jmp	$check_for_interrupt$822
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pC$208[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], ecx
mov	edx, DWORD PTR _pC$208[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pCrsr$48[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
and	edx, 1
je	SHORT $LN190@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+92]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+92], ecx
mov	eax, DWORD PTR _pIn2$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 16384				
je	SHORT $LN785@sqlite3Vdb
mov	edx, DWORD PTR _pIn2$[ebp]
push	edx
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv3166[ebp], eax
jmp	SHORT $LN786@sqlite3Vdb
mov	DWORD PTR tv3166[ebp], 0
mov	eax, DWORD PTR tv3166[ebp]
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN187@sqlite3Vdb
mov	ecx, DWORD PTR _pC$208[ebp]
cmp	DWORD PTR [ecx+64], 0
je	SHORT $LN188@sqlite3Vdb
mov	edx, DWORD PTR _pIn2$[ebp]
push	edx
mov	eax, DWORD PTR _pC$208[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VdbeSorterWrite
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN187@sqlite3Vdb
mov	edx, DWORD PTR _pIn2$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _nKey$49[ebp], eax
mov	ecx, DWORD PTR _pIn2$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _zKey$29[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
and	ecx, 16					
je	SHORT $LN787@sqlite3Vdb
mov	edx, DWORD PTR _pC$208[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR tv3182[ebp], eax
jmp	SHORT $LN788@sqlite3Vdb
mov	DWORD PTR tv3182[ebp], 0
mov	ecx, DWORD PTR tv3182[ebp]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
push	0
push	0
push	OFFSET $SG101001
mov	eax, DWORD PTR _nKey$49[ebp]
cdq
push	edx
push	eax
mov	ecx, DWORD PTR _zKey$29[ebp]
push	ecx
mov	edx, DWORD PTR _pCrsr$48[ebp]
push	edx
call	_sqlite3BtreeInsert
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pC$208[ebp]
mov	DWORD PTR [eax+68], 0
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pC$156[ebp], edx
mov	eax, DWORD PTR _pC$156[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pCrsr$78[ebp], ecx
mov	edx, DWORD PTR _pC$156[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _r$3[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	dx, WORD PTR [ecx+12]
mov	WORD PTR _r$3[ebp+4], dx
mov	BYTE PTR _r$3[ebp+6], 0
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _r$3[ebp+8], ecx
lea	edx, DWORD PTR _res$18[ebp]
push	edx
push	0
push	0
push	0
lea	eax, DWORD PTR _r$3[ebp]
push	eax
mov	ecx, DWORD PTR _pCrsr$78[ebp]
push	ecx
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN185@sqlite3Vdb
cmp	DWORD PTR _res$18[ebp], 0
jne	SHORT $LN185@sqlite3Vdb
mov	edx, DWORD PTR _pCrsr$78[ebp]
push	edx
call	_sqlite3BtreeDelete
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pC$156[ebp]
mov	DWORD PTR [eax+68], 0
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _pC$138[ebp], edx
mov	eax, DWORD PTR _pC$138[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pCrsr$47[ebp], ecx
mov	edx, 1
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pC$138[ebp]
push	ecx
call	_sqlite3VdbeCursorMoveto
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN183@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	edx, DWORD PTR _pC$138[ebp]
movzx	eax, BYTE PTR [edx+25]
test	eax, eax
jne	SHORT $LN182@sqlite3Vdb
xorpd	xmm0, xmm0
movlpd	QWORD PTR _rowid$30[ebp], xmm0
lea	ecx, DWORD PTR _rowid$30[ebp]
push	ecx
mov	edx, DWORD PTR _pCrsr$47[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VdbeIdxRowid
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN181@sqlite3Vdb
jmp	$abort_due_to_error$827
mov	ecx, DWORD PTR _pOut$[ebp]
mov	edx, DWORD PTR _rowid$30[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _rowid$30[ebp+4]
mov	DWORD PTR [ecx+20], eax
mov	ecx, 4
mov	edx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [edx+28], cx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pC$97[ebp], ecx
mov	edx, DWORD PTR _pC$97[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _r$5[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	dx, WORD PTR [ecx+16]
mov	WORD PTR _r$5[ebp+4], dx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 112				
jge	SHORT $LN179@sqlite3Vdb
mov	BYTE PTR _r$5[ebp+6], -1
jmp	SHORT $LN178@sqlite3Vdb
mov	BYTE PTR _r$5[ebp+6], 0
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _r$5[ebp+8], eax
mov	DWORD PTR _res$220[ebp], 0
lea	ecx, DWORD PTR _res$220[ebp]
push	ecx
lea	edx, DWORD PTR _r$5[ebp]
push	edx
mov	eax, DWORD PTR _pC$97[ebp]
push	eax
call	_sqlite3VdbeIdxKeyCompare
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx]
and	edx, 1
jne	SHORT $LN177@sqlite3Vdb
mov	eax, DWORD PTR _res$220[ebp]
neg	eax
mov	DWORD PTR _res$220[ebp], eax
jmp	SHORT $LN176@sqlite3Vdb
mov	ecx, DWORD PTR _res$220[ebp]
add	ecx, 1
mov	DWORD PTR _res$220[ebp], ecx
cmp	DWORD PTR _res$220[ebp], 0
jle	SHORT $LN175@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	DWORD PTR _iCnt$154[ebp], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pVdbe$233[ebp], edx
jmp	SHORT $LN173@sqlite3Vdb
mov	eax, DWORD PTR _pVdbe$233[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pVdbe$233[ebp], ecx
cmp	DWORD PTR _pVdbe$233[ebp], 0
je	SHORT $LN171@sqlite3Vdb
mov	edx, DWORD PTR _pVdbe$233[ebp]
cmp	DWORD PTR [edx+40], -1108210269		
jne	SHORT $LN170@sqlite3Vdb
mov	eax, DWORD PTR _pVdbe$233[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 9
and	ecx, 1
je	SHORT $LN170@sqlite3Vdb
mov	edx, DWORD PTR _pVdbe$233[ebp]
mov	eax, DWORD PTR [edx+88]
shr	eax, 2
and	eax, 3
cmp	eax, 2
jae	SHORT $LN170@sqlite3Vdb
mov	ecx, DWORD PTR _pVdbe$233[ebp]
cmp	DWORD PTR [ecx+76], 0
jl	SHORT $LN170@sqlite3Vdb
mov	edx, DWORD PTR _iCnt$154[ebp]
add	edx, 1
mov	DWORD PTR _iCnt$154[ebp], edx
jmp	SHORT $LN172@sqlite3Vdb
mov	eax, 1
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
cmp	DWORD PTR _iCnt$154[ebp], 1
jle	SHORT $LN169@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 6
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+86], 2
jmp	$LN167@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _iDb$122[ebp], ecx
mov	DWORD PTR _iMoved$182[ebp], 0
lea	edx, DWORD PTR _iMoved$182[ebp]
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _iDb$122[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3BtreeDropTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, 4
mov	ecx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [ecx+28], ax
mov	eax, DWORD PTR _iMoved$182[ebp]
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN167@sqlite3Vdb
cmp	DWORD PTR _iMoved$182[ebp], 0
je	SHORT $LN167@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _iMoved$182[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$122[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3RootPageMoved
add	esp, 16					
mov	ecx, DWORD PTR _iDb$122[ebp]
add	ecx, 1
mov	BYTE PTR _resetSchemaOnFault$[ebp], cl
jmp	$LN682@sqlite3Vdb
mov	DWORD PTR _nChange$152[ebp], 0
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN789@sqlite3Vdb
lea	eax, DWORD PTR _nChange$152[ebp]
mov	DWORD PTR tv3335[ebp], eax
jmp	SHORT $LN790@sqlite3Vdb
mov	DWORD PTR tv3335[ebp], 0
mov	ecx, DWORD PTR tv3335[ebp]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3BtreeClearTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN164@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+92]
add	edx, DWORD PTR _nChange$152[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+92], edx
mov	ecx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [ecx+12], 0
jle	SHORT $LN164@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [edx+12], 40
mov	eax, DWORD PTR _nChange$152[ebp]
cdq
mov	esi, DWORD PTR _aMem$[ebp]
add	eax, DWORD PTR [esi+ecx+16]
adc	edx, DWORD PTR [esi+ecx+20]
mov	ecx, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [ecx+12], 40
mov	esi, DWORD PTR _aMem$[ebp]
mov	DWORD PTR [esi+ecx+16], eax
mov	DWORD PTR [esi+ecx+20], edx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pC$136[ebp], eax
mov	ecx, DWORD PTR _pC$136[ebp]
cmp	DWORD PTR [ecx+64], 0
je	SHORT $LN162@sqlite3Vdb
mov	edx, DWORD PTR _pC$136[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VdbeSorterReset
add	esp, 8
jmp	SHORT $LN161@sqlite3Vdb
mov	edx, DWORD PTR _pC$136[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreeClearTableOfCursor
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	DWORD PTR _pgno$77[ebp], 0
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$16[ebp], edx
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 118				
jne	SHORT $LN159@sqlite3Vdb
mov	DWORD PTR _flags$95[ebp], 1
jmp	SHORT $LN158@sqlite3Vdb
mov	DWORD PTR _flags$95[ebp], 2
mov	eax, DWORD PTR _flags$95[ebp]
push	eax
lea	ecx, DWORD PTR _pgno$77[ebp]
push	ecx
mov	edx, DWORD PTR _pDb$16[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeCreateTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pgno$77[ebp]
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _iDb$70[ebp], eax
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN791@sqlite3Vdb
cmp	DWORD PTR _iDb$70[ebp], 1
jne	SHORT $LN791@sqlite3Vdb
mov	DWORD PTR tv3391[ebp], OFFSET $SG101098
jmp	SHORT $LN792@sqlite3Vdb
mov	DWORD PTR tv3391[ebp], OFFSET $SG101099
mov	edx, DWORD PTR tv3391[ebp]
mov	DWORD PTR _zMaster$45[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR _initData$10[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _initData$10[ebp+8], edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
mov	DWORD PTR _initData$10[ebp+4], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _zMaster$45[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$70[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	OFFSET $SG101100
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 20					
mov	DWORD PTR _zSql$150[ebp], eax
cmp	DWORD PTR _zSql$150[ebp], 0
jne	SHORT $LN156@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN155@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+137], 1
mov	DWORD PTR _initData$10[ebp+12], 0
push	0
lea	ecx, DWORD PTR _initData$10[ebp]
push	ecx
push	OFFSET _sqlite3InitCallback
mov	edx, DWORD PTR _zSql$150[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_exec
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN154@sqlite3Vdb
mov	ecx, DWORD PTR _initData$10[ebp+12]
mov	DWORD PTR _rc$[ebp], ecx
mov	edx, DWORD PTR _zSql$150[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+137], 0
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN153@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN152@sqlite3Vdb
jmp	$no_mem$819
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3AnalysisLoad
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3UnlinkAndDeleteTable
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3UnlinkAndDeleteIndex
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3UnlinkAndDeleteTrigger
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _nRoot$128[ebp], ecx
mov	edx, DWORD PTR _nRoot$128[ebp]
lea	eax, DWORD PTR [edx*4+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aRoot$200[ebp], eax
cmp	DWORD PTR _aRoot$200[ebp], 0
jne	SHORT $LN146@sqlite3Vdb
jmp	$no_mem$819
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pnErr$148[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	DWORD PTR _j$218[ebp], 0
jmp	SHORT $LN145@sqlite3Vdb
mov	eax, DWORD PTR _j$218[ebp]
add	eax, 1
mov	DWORD PTR _j$218[ebp], eax
mov	ecx, DWORD PTR _j$218[ebp]
cmp	ecx, DWORD PTR _nRoot$128[ebp]
jge	SHORT $LN143@sqlite3Vdb
imul	edx, DWORD PTR _j$218[ebp], 40
add	edx, DWORD PTR _pIn1$[ebp]
push	edx
call	_sqlite3VdbeIntValue
add	esp, 4
mov	ecx, DWORD PTR _j$218[ebp]
mov	edx, DWORD PTR _aRoot$200[ebp]
mov	DWORD PTR [edx+ecx*4], eax
jmp	SHORT $LN144@sqlite3Vdb
mov	eax, DWORD PTR _j$218[ebp]
mov	ecx, DWORD PTR _aRoot$200[ebp]
mov	DWORD PTR [ecx+eax*4], 0
lea	edx, DWORD PTR _nErr$92[ebp]
push	edx
mov	eax, DWORD PTR _pnErr$148[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _nRoot$128[ebp]
push	edx
mov	eax, DWORD PTR _aRoot$200[ebp]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3BtreeIntegrityCheck
add	esp, 20					
mov	DWORD PTR _z$120[ebp], eax
mov	eax, DWORD PTR _aRoot$200[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _nErr$92[ebp]
cdq
mov	ecx, DWORD PTR _pnErr$148[ebp]
mov	esi, DWORD PTR [ecx+16]
sub	esi, eax
mov	eax, DWORD PTR [ecx+20]
sbb	eax, edx
mov	ecx, DWORD PTR _pnErr$148[ebp]
mov	DWORD PTR [ecx+16], esi
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _pIn1$[ebp]
push	edx
call	_sqlite3VdbeMemSetNull
add	esp, 4
cmp	DWORD PTR _nErr$92[ebp], 0
jne	SHORT $LN142@sqlite3Vdb
jmp	SHORT $LN139@sqlite3Vdb
cmp	DWORD PTR _z$120[ebp], 0
jne	SHORT $LN140@sqlite3Vdb
jmp	$no_mem$819
jmp	SHORT $LN139@sqlite3Vdb
push	OFFSET _sqlite3_free
push	1
push	-1
mov	eax, DWORD PTR _z$120[ebp]
push	eax
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
movzx	edx, BYTE PTR _encoding$[ebp]
push	edx
mov	eax, DWORD PTR _pIn1$[ebp]
push	eax
call	_sqlite3VdbeChangeEncoding
add	esp, 8
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+8], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 32					
jne	SHORT $LN136@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemSetRowSet
add	esp, 4
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 32					
jne	SHORT $LN136@sqlite3Vdb
jmp	$no_mem$819
mov	ecx, DWORD PTR _pIn2$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR [ecx+16]
push	eax
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_sqlite3RowSetInsert
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 32					
je	SHORT $LN133@sqlite3Vdb
lea	ecx, DWORD PTR _val$9[ebp]
push	ecx
mov	edx, DWORD PTR _pIn1$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_sqlite3RowSetNext
add	esp, 8
test	eax, eax
jne	SHORT $LN134@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemSetNull
add	esp, 4
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	SHORT $LN132@sqlite3Vdb
mov	ecx, DWORD PTR _val$9[ebp+4]
push	ecx
mov	edx, DWORD PTR _val$9[ebp]
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
push	ecx
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
jmp	$check_for_interrupt$822
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+12], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn3$[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _iSet$134[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 32					
jne	SHORT $LN129@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemSetRowSet
add	esp, 4
mov	edx, DWORD PTR _pIn1$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 32					
jne	SHORT $LN129@sqlite3Vdb
jmp	$no_mem$819
cmp	DWORD PTR _iSet$134[ebp], 0
je	SHORT $LN127@sqlite3Vdb
mov	ecx, DWORD PTR _pIn3$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR [ecx+16]
push	eax
mov	ecx, DWORD PTR _iSet$134[ebp]
push	ecx
mov	edx, DWORD PTR _pIn1$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_sqlite3RowSetTest
add	esp, 16					
mov	DWORD PTR _exists$19[ebp], eax
cmp	DWORD PTR _exists$19[ebp], 0
je	SHORT $LN127@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	$LN682@sqlite3Vdb
cmp	DWORD PTR _iSet$134[ebp], 0
jl	SHORT $LN126@sqlite3Vdb
mov	eax, DWORD PTR _pIn3$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR [eax+16]
push	edx
mov	eax, DWORD PTR _pIn1$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_sqlite3RowSetInsert
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pProgram$254[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+12], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pRt$214[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
je	SHORT $LN120@sqlite3Vdb
mov	edx, DWORD PTR _pProgram$254[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _t$44[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+176]
mov	DWORD PTR _pFrame$277[ebp], edx
jmp	SHORT $LN123@sqlite3Vdb
mov	eax, DWORD PTR _pFrame$277[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pFrame$277[ebp], ecx
cmp	DWORD PTR _pFrame$277[ebp], 0
je	SHORT $LN121@sqlite3Vdb
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR [edx+24]
cmp	eax, DWORD PTR _t$44[ebp]
je	SHORT $LN121@sqlite3Vdb
jmp	SHORT $LN122@sqlite3Vdb
cmp	DWORD PTR _pFrame$277[ebp], 0
je	SHORT $LN120@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	ecx, 4
imul	edx, ecx, 10
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+184]
cmp	eax, DWORD PTR [ecx+edx+88]
jl	SHORT $LN119@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
push	OFFSET $SG101175
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 44					
push	edx
call	_sqlite3SetString
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pRt$214[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 64					
jne	$LN118@sqlite3Vdb
mov	edx, DWORD PTR _pProgram$254[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR _pProgram$254[ebp]
add	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _nMem$119[ebp], eax
imul	edx, DWORD PTR _nMem$119[ebp], 40
mov	eax, DWORD PTR _pProgram$254[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [edx+ecx*4+72]
mov	eax, DWORD PTR _pProgram$254[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _nByte$25[ebp], edx
mov	ecx, DWORD PTR _nByte$25[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pFrame$277[ebp], eax
cmp	DWORD PTR _pFrame$277[ebp], 0
jne	SHORT $LN117@sqlite3Vdb
jmp	$no_mem$819
mov	eax, DWORD PTR _pRt$214[ebp]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	ecx, 64					
mov	edx, DWORD PTR _pRt$214[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pRt$214[ebp]
mov	ecx, DWORD PTR _pFrame$277[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pFrame$277[ebp]
mov	edx, DWORD PTR _nMem$119[ebp]
mov	DWORD PTR [ecx+60], edx
mov	eax, DWORD PTR _pFrame$277[ebp]
mov	ecx, DWORD PTR _pProgram$254[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+64], edx
mov	eax, DWORD PTR _pFrame$277[ebp]
mov	ecx, DWORD PTR _pc$[ebp]
mov	DWORD PTR [eax+44], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+12], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR [edx+52], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR [edx+40], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR [edx+48], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _pProgram$254[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+200]
mov	DWORD PTR [edx+16], ecx
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+196]
mov	DWORD PTR [edx+56], ecx
mov	edx, 1
imul	eax, edx, 72
add	eax, DWORD PTR _pFrame$277[ebp]
mov	ecx, DWORD PTR _pFrame$277[ebp]
imul	edx, DWORD PTR [ecx+60], 40
add	eax, edx
mov	DWORD PTR _pEnd$43[ebp], eax
mov	eax, 1
imul	ecx, eax, 72
add	ecx, DWORD PTR _pFrame$277[ebp]
mov	DWORD PTR _pMem$206[ebp], ecx
jmp	SHORT $LN116@sqlite3Vdb
mov	edx, DWORD PTR _pMem$206[ebp]
add	edx, 40					
mov	DWORD PTR _pMem$206[ebp], edx
mov	eax, DWORD PTR _pMem$206[ebp]
cmp	eax, DWORD PTR _pEnd$43[ebp]
je	SHORT $LN114@sqlite3Vdb
mov	ecx, 128				
mov	edx, DWORD PTR _pMem$206[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pMem$206[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax], ecx
jmp	SHORT $LN115@sqlite3Vdb
jmp	SHORT $LN113@sqlite3Vdb
mov	edx, DWORD PTR _pRt$214[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pFrame$277[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+184]
add	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+184], edx
mov	ecx, DWORD PTR _pFrame$277[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+176]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pFrame$277[ebp]
mov	edx, DWORD PTR _lastRowid$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _lastRowid$[ebp+4]
mov	DWORD PTR [ecx+36], eax
mov	ecx, DWORD PTR _pFrame$277[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+92]
mov	DWORD PTR [ecx+68], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+92], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pFrame$277[ebp]
mov	DWORD PTR [edx+176], eax
mov	ecx, 1
imul	edx, ecx, 72
add	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, 40					
imul	ecx, eax, -1
add	edx, ecx
mov	DWORD PTR _aMem$[ebp], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pFrame$277[ebp]
mov	eax, DWORD PTR [edx+60]
mov	DWORD PTR [ecx+28], eax
mov	ecx, DWORD PTR _pFrame$277[ebp]
movzx	edx, WORD PTR [ecx+64]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+36], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+28]
add	edx, 1
imul	eax, edx, 40
add	eax, DWORD PTR _aMem$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+56], eax
mov	edx, DWORD PTR _pProgram$254[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _aOp$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _aOp$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pProgram$254[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax+32], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
lea	ecx, DWORD PTR [eax+ecx*4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+200], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pProgram$254[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR [eax+196], edx
mov	DWORD PTR _pc$[ebp], -1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+196]
push	ecx
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+200]
push	eax
call	_memset
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+176]
mov	DWORD PTR _pFrame$146[ebp], edx
mov	eax, DWORD PTR _pFrame$146[ebp]
imul	ecx, DWORD PTR [eax+44], 20
mov	edx, DWORD PTR _pFrame$146[ebp]
mov	eax, DWORD PTR [edx+8]
mov	edx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [edx+4]
add	edx, DWORD PTR [eax+ecx+4]
imul	eax, edx, 40
mov	ecx, DWORD PTR _pFrame$146[ebp]
add	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _pIn$15[ebp], eax
push	4096					
mov	edx, DWORD PTR _pIn$15[ebp]
push	edx
mov	eax, DWORD PTR _pOut$[ebp]
push	eax
call	_sqlite3VdbeMemShallowCopy
add	esp, 12					
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 16777216				
je	SHORT $LN110@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [eax+8]
cdq
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+504]
adc	edx, DWORD PTR [ecx+508]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+504], eax
mov	DWORD PTR [ecx+508], edx
jmp	SHORT $LN107@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN108@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [eax+8]
cdq
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+496]
adc	edx, DWORD PTR [ecx+500]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+496], eax
mov	DWORD PTR [ecx+500], edx
jmp	SHORT $LN107@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
cdq
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+144]
adc	edx, DWORD PTR [ecx+148]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+144], eax
mov	DWORD PTR [ecx+148], edx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN105@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR tv7672[ebp], eax
mov	ecx, DWORD PTR tv7672[ebp]
mov	edx, DWORD PTR tv7672[ebp]
mov	eax, DWORD PTR [ecx+496]
or	eax, DWORD PTR [edx+500]
jne	SHORT $LN104@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR tv7679[ebp], ecx
mov	edx, DWORD PTR tv7679[ebp]
mov	eax, DWORD PTR tv7679[ebp]
mov	ecx, DWORD PTR [edx+504]
or	ecx, DWORD PTR [eax+508]
jne	SHORT $LN104@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	SHORT $LN102@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv7687[ebp], ecx
mov	edx, DWORD PTR tv7687[ebp]
mov	eax, DWORD PTR tv7687[ebp]
mov	ecx, DWORD PTR [edx+144]
or	ecx, DWORD PTR [eax+148]
jne	SHORT $LN102@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR tv7694[ebp], edx
mov	eax, DWORD PTR tv7694[ebp]
mov	ecx, DWORD PTR tv7694[ebp]
mov	edx, DWORD PTR [eax+504]
or	edx, DWORD PTR [ecx+508]
jne	SHORT $LN102@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+176], 0
je	SHORT $LN100@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+176]
mov	DWORD PTR _pFrame$168[ebp], ecx
jmp	SHORT $LN99@sqlite3Vdb
mov	edx, DWORD PTR _pFrame$168[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pFrame$168[ebp], eax
mov	ecx, DWORD PTR _pFrame$168[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN97@sqlite3Vdb
jmp	SHORT $LN98@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
mov	ecx, DWORD PTR _pFrame$168[ebp]
add	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _pIn1$[ebp], eax
jmp	SHORT $LN96@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pIn1$[ebp]
push	ecx
call	_sqlite3VdbeMemIntegerify
add	esp, 4
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn2$[ebp], eax
mov	ecx, DWORD PTR _pIn2$[ebp]
push	ecx
call	_sqlite3VdbeMemIntegerify
add	esp, 4
mov	edx, DWORD PTR _pIn1$[ebp]
mov	eax, DWORD PTR _pIn2$[ebp]
mov	DWORD PTR tv7715[ebp], edx
mov	DWORD PTR tv7716[ebp], eax
mov	ecx, DWORD PTR tv7715[ebp]
mov	edx, DWORD PTR tv7716[ebp]
mov	eax, DWORD PTR [ecx+20]
cmp	eax, DWORD PTR [edx+20]
jg	SHORT $LN95@sqlite3Vdb
jl	SHORT $LN812@sqlite3Vdb
mov	ecx, DWORD PTR tv7715[ebp]
mov	edx, DWORD PTR tv7716[ebp]
mov	eax, DWORD PTR [ecx+16]
cmp	eax, DWORD PTR [edx+16]
jae	SHORT $LN95@sqlite3Vdb
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	edx, DWORD PTR _pIn2$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR [edx+20]
mov	DWORD PTR [ecx+20], edx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], ecx
mov	edx, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR tv7733[ebp], edx
mov	eax, DWORD PTR tv7733[ebp]
cmp	DWORD PTR [eax+20], 0
jl	SHORT $LN93@sqlite3Vdb
jg	SHORT $LN813@sqlite3Vdb
mov	ecx, DWORD PTR tv7733[ebp]
cmp	DWORD PTR [ecx+16], 0
jbe	SHORT $LN93@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], edx
mov	eax, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR tv7741[ebp], eax
mov	ecx, DWORD PTR tv7741[ebp]
cmp	DWORD PTR [ecx+20], 0
jg	SHORT $LN91@sqlite3Vdb
jl	SHORT $LN814@sqlite3Vdb
mov	edx, DWORD PTR tv7741[ebp]
cmp	DWORD PTR [edx+16], 0
jae	SHORT $LN91@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+4], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pIn1$[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [ecx+12]
cdq
mov	ecx, DWORD PTR _pIn1$[ebp]
add	eax, DWORD PTR [ecx+16]
adc	edx, DWORD PTR [ecx+20]
mov	ecx, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, DWORD PTR _pIn1$[ebp]
mov	DWORD PTR tv7763[ebp], edx
mov	eax, DWORD PTR tv7763[ebp]
mov	ecx, DWORD PTR tv7763[ebp]
mov	edx, DWORD PTR [eax+16]
or	edx, DWORD PTR [ecx+20]
jne	SHORT $LN89@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
mov	DWORD PTR _n$113[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+8], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pRec$124[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _apVal$115[ebp], ecx
mov	DWORD PTR _i$238[ebp], 0
jmp	SHORT $LN87@sqlite3Vdb
mov	edx, DWORD PTR _i$238[ebp]
add	edx, 1
mov	DWORD PTR _i$238[ebp], edx
mov	eax, DWORD PTR _pRec$124[ebp]
add	eax, 40					
mov	DWORD PTR _pRec$124[ebp], eax
mov	ecx, DWORD PTR _i$238[ebp]
cmp	ecx, DWORD PTR _n$113[ebp]
jge	SHORT $LN85@sqlite3Vdb
mov	edx, DWORD PTR _i$238[ebp]
mov	eax, DWORD PTR _apVal$115[ebp]
mov	ecx, DWORD PTR _pRec$124[ebp]
mov	DWORD PTR [eax+edx*4], ecx
jmp	SHORT $LN86@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _ctx$4[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+12], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pMem$144[ebp], edx
mov	eax, DWORD PTR _pMem$144[ebp]
mov	DWORD PTR _ctx$4[ebp+48], eax
mov	ecx, DWORD PTR _pMem$144[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 1
mov	eax, DWORD PTR _pMem$144[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, 1
mov	WORD PTR _ctx$4[ebp+36], cx
mov	DWORD PTR _ctx$4[ebp+12], 0
mov	DWORD PTR _ctx$4[ebp+44], 0
mov	DWORD PTR _ctx$4[ebp+40], 0
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR _ctx$4[ebp+8], edx
mov	DWORD PTR _ctx$4[ebp+64], 0
mov	DWORD PTR _ctx$4[ebp+52], 0
mov	BYTE PTR _ctx$4[ebp+68], 0
mov	eax, DWORD PTR _ctx$4[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 32					
je	SHORT $LN84@sqlite3Vdb
mov	edx, 20					
imul	eax, edx, -1
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+eax+16]
mov	DWORD PTR _ctx$4[ebp+52], edx
mov	eax, DWORD PTR _apVal$115[ebp]
push	eax
mov	ecx, DWORD PTR _n$113[ebp]
push	ecx
lea	edx, DWORD PTR _ctx$4[ebp]
push	edx
mov	eax, DWORD PTR _ctx$4[ebp]
mov	ecx, DWORD PTR [eax+16]
call	ecx
add	esp, 12					
cmp	DWORD PTR _ctx$4[ebp+64], 0
je	SHORT $LN83@sqlite3Vdb
lea	edx, DWORD PTR _ctx$4[ebp+8]
push	edx
call	_sqlite3_value_text
add	esp, 4
push	eax
push	OFFSET $SG101251
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 16					
mov	edx, DWORD PTR _ctx$4[ebp+64]
mov	DWORD PTR _rc$[ebp], edx
movzx	eax, BYTE PTR _ctx$4[ebp+68]
test	eax, eax
je	SHORT $LN81@sqlite3Vdb
mov	ecx, 20					
imul	edx, ecx, -1
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+edx+4]
mov	DWORD PTR _i$238[ebp], ecx
cmp	DWORD PTR _i$238[ebp], 0
je	SHORT $LN81@sqlite3Vdb
push	0
push	1
imul	edx, DWORD PTR _i$238[ebp], 40
add	edx, DWORD PTR _aMem$[ebp]
push	edx
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
lea	eax, DWORD PTR _ctx$4[ebp+8]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+4], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pMem$181[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pMem$181[ebp]
push	edx
call	_sqlite3VdbeMemFinalize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN79@sqlite3Vdb
mov	eax, DWORD PTR _pMem$181[ebp]
push	eax
call	_sqlite3_value_text
add	esp, 4
push	eax
push	OFFSET $SG101260
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 44					
push	edx
call	_sqlite3SetString
add	esp, 16					
movzx	eax, BYTE PTR _encoding$[ebp]
push	eax
mov	ecx, DWORD PTR _pMem$181[ebp]
push	ecx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
mov	edx, DWORD PTR _pMem$181[ebp]
push	edx
call	_sqlite3VdbeMemTooBig
add	esp, 4
test	eax, eax
je	SHORT $LN78@sqlite3Vdb
jmp	$too_big$824
jmp	$LN682@sqlite3Vdb
mov	eax, 4
imul	ecx, eax, 0
mov	DWORD PTR _aRes$279[ebp+ecx], 0
mov	edx, 4
shl	edx, 1
mov	DWORD PTR _aRes$279[ebp+edx], -1
mov	eax, 4
shl	eax, 0
mov	DWORD PTR _aRes$279[ebp+eax], -1
mov	ecx, 4
shl	ecx, 1
lea	edx, DWORD PTR _aRes$279[ebp+ecx]
push	edx
mov	eax, 4
shl	eax, 0
lea	ecx, DWORD PTR _aRes$279[ebp+eax]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Checkpoint
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN76@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, 4
imul	edx, ecx, 0
mov	DWORD PTR _aRes$279[ebp+edx], 1
mov	DWORD PTR _i$172[ebp], 0
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+12], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pMem$132[ebp], ecx
jmp	SHORT $LN75@sqlite3Vdb
mov	edx, DWORD PTR _i$172[ebp]
add	edx, 1
mov	DWORD PTR _i$172[ebp], edx
mov	eax, DWORD PTR _pMem$132[ebp]
add	eax, 40					
mov	DWORD PTR _pMem$132[ebp], eax
cmp	DWORD PTR _i$172[ebp], 3
jge	SHORT $LN73@sqlite3Vdb
mov	ecx, DWORD PTR _i$172[ebp]
mov	eax, DWORD PTR _aRes$279[ebp+ecx*4]
cdq
push	edx
push	eax
mov	edx, DWORD PTR _pMem$132[ebp]
push	edx
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
jmp	SHORT $LN74@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _eNew$266[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$111[ebp], eax
mov	ecx, DWORD PTR _pBt$111[ebp]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$240[ebp], eax
mov	edx, DWORD PTR _pPager$240[ebp]
push	edx
call	_sqlite3PagerGetJournalMode
add	esp, 4
mov	DWORD PTR _eOld$245[ebp], eax
cmp	DWORD PTR _eNew$266[ebp], -1
jne	SHORT $LN71@sqlite3Vdb
mov	eax, DWORD PTR _eOld$245[ebp]
mov	DWORD PTR _eNew$266[ebp], eax
mov	ecx, DWORD PTR _pPager$240[ebp]
push	ecx
call	_sqlite3PagerOkToChangeJournalMode
add	esp, 4
test	eax, eax
jne	SHORT $LN70@sqlite3Vdb
mov	edx, DWORD PTR _eOld$245[ebp]
mov	DWORD PTR _eNew$266[ebp], edx
push	1
mov	eax, DWORD PTR _pPager$240[ebp]
push	eax
call	_sqlite3PagerFilename
add	esp, 8
mov	DWORD PTR _zFilename$42[ebp], eax
cmp	DWORD PTR _eNew$266[ebp], 5
jne	SHORT $LN69@sqlite3Vdb
mov	ecx, DWORD PTR _zFilename$42[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
test	eax, eax
je	SHORT $LN68@sqlite3Vdb
mov	edx, DWORD PTR _pPager$240[ebp]
push	edx
call	_sqlite3PagerWalSupported
add	esp, 4
test	eax, eax
jne	SHORT $LN69@sqlite3Vdb
mov	eax, DWORD PTR _eOld$245[ebp]
mov	DWORD PTR _eNew$266[ebp], eax
mov	ecx, DWORD PTR _eNew$266[ebp]
cmp	ecx, DWORD PTR _eOld$245[ebp]
je	$LN58@sqlite3Vdb
cmp	DWORD PTR _eOld$245[ebp], 5
je	SHORT $LN66@sqlite3Vdb
cmp	DWORD PTR _eNew$266[ebp], 5
jne	$LN58@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+62]
test	eax, eax
je	SHORT $LN64@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+144], 1
jle	SHORT $LN65@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
cmp	DWORD PTR _eNew$266[ebp], 5
jne	SHORT $LN793@sqlite3Vdb
mov	DWORD PTR tv3981[ebp], OFFSET $SG101290
jmp	SHORT $LN794@sqlite3Vdb
mov	DWORD PTR tv3981[ebp], OFFSET $SG101291
mov	edx, DWORD PTR tv3981[ebp]
push	edx
push	OFFSET $SG101292
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 16					
jmp	$LN682@sqlite3Vdb
jmp	$LN58@sqlite3Vdb
cmp	DWORD PTR _eOld$245[ebp], 5
jne	SHORT $LN62@sqlite3Vdb
mov	edx, DWORD PTR _pPager$240[ebp]
push	edx
call	_sqlite3PagerCloseWal
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN61@sqlite3Vdb
mov	eax, DWORD PTR _eNew$266[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$240[ebp]
push	ecx
call	_sqlite3PagerSetJournalMode
add	esp, 8
jmp	SHORT $LN59@sqlite3Vdb
cmp	DWORD PTR _eOld$245[ebp], 4
jne	SHORT $LN59@sqlite3Vdb
push	2
mov	edx, DWORD PTR _pPager$240[ebp]
push	edx
call	_sqlite3PagerSetJournalMode
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN58@sqlite3Vdb
cmp	DWORD PTR _eNew$266[ebp], 5
jne	SHORT $LN795@sqlite3Vdb
mov	DWORD PTR tv3999[ebp], 2
jmp	SHORT $LN796@sqlite3Vdb
mov	DWORD PTR tv3999[ebp], 1
mov	eax, DWORD PTR tv3999[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$111[ebp]
push	ecx
call	_sqlite3BtreeSetVersion
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN57@sqlite3Vdb
mov	edx, DWORD PTR _eOld$245[ebp]
mov	DWORD PTR _eNew$266[ebp], edx
mov	eax, DWORD PTR _eNew$266[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$240[ebp]
push	ecx
call	_sqlite3PagerSetJournalMode
add	esp, 8
mov	DWORD PTR _eNew$266[ebp], eax
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+8], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pOut$[ebp], eax
mov	ecx, 2562				
mov	edx, DWORD PTR _pOut$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _eNew$266[ebp]
push	eax
call	_sqlite3JournalModename
add	esp, 4
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _pOut$[ebp]
mov	BYTE PTR [edx+30], 1
movzx	eax, BYTE PTR _encoding$[ebp]
push	eax
mov	ecx, DWORD PTR _pOut$[ebp]
push	ecx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3RunVacuum
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pBt$23[ebp], edx
mov	eax, DWORD PTR _pBt$23[ebp]
push	eax
call	_sqlite3BtreeIncrVacuum
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 101		
jne	SHORT $LN54@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
mov	DWORD PTR _rc$[ebp], 0
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN52@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExpirePreparedStatements
add	esp, 4
jmp	SHORT $LN51@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
or	eax, 32					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	al, BYTE PTR [edx+12]
mov	BYTE PTR _isWriteLock$259[ebp], al
movzx	ecx, BYTE PTR _isWriteLock$259[ebp]
test	ecx, ecx
jne	SHORT $LN48@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 16384				
jne	$LN47@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _p1$41[ebp], edx
movzx	eax, BYTE PTR _isWriteLock$259[ebp]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _p1$41[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeLockTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _rc$[ebp]
and	ecx, 255				
cmp	ecx, 6
jne	SHORT $LN47@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _z$17[ebp], eax
mov	ecx, DWORD PTR _z$17[ebp]
push	ecx
push	OFFSET $SG101324
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3SetString
add	esp, 16					
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pVTab$142[ebp], edx
mov	eax, DWORD PTR _pVTab$142[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabBegin
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _pVTab$142[ebp], 0
je	SHORT $LN45@sqlite3Vdb
mov	edx, DWORD PTR _pVTab$142[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VtabImportErrmsg
add	esp, 8
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
add	edx, 44					
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabCallCreate
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
and	eax, -13				
or	eax, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VtabCallDestroy
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, -13				
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+88], edx
jmp	$LN682@sqlite3Vdb
mov	DWORD PTR _pCur$126[ebp], 0
mov	DWORD PTR _pVtabCursor$193[ebp], 0
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pVtab$195[ebp], eax
mov	ecx, DWORD PTR _pVtab$195[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pModule$109[ebp], edx
lea	eax, DWORD PTR _pVtabCursor$193[ebp]
push	eax
mov	ecx, DWORD PTR _pVtab$195[ebp]
push	ecx
mov	edx, DWORD PTR _pModule$109[ebp]
mov	eax, DWORD PTR [edx+24]
call	eax
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pVtab$195[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VtabImportErrmsg
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN39@sqlite3Vdb
mov	eax, DWORD PTR _pVtabCursor$193[ebp]
mov	ecx, DWORD PTR _pVtab$195[ebp]
mov	DWORD PTR [eax], ecx
push	0
push	-1
push	0
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_allocateCursor
add	esp, 20					
mov	DWORD PTR _pCur$126[ebp], eax
cmp	DWORD PTR _pCur$126[ebp], 0
je	SHORT $LN40@sqlite3Vdb
mov	edx, DWORD PTR _pCur$126[ebp]
mov	eax, DWORD PTR _pVtabCursor$193[ebp]
mov	DWORD PTR [edx+32], eax
jmp	SHORT $LN39@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
mov	edx, DWORD PTR _pVtabCursor$193[ebp]
push	edx
mov	eax, DWORD PTR _pModule$109[ebp]
mov	ecx, DWORD PTR [eax+28]
call	ecx
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pQuery$108[ebp], eax
mov	ecx, 40					
shl	ecx, 0
add	ecx, DWORD PTR _pQuery$108[ebp]
mov	DWORD PTR _pArgc$107[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pCur$98[ebp], eax
mov	ecx, DWORD PTR _pCur$98[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pVtabCursor$161[ebp], edx
mov	eax, DWORD PTR _pVtabCursor$161[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pVtab$103[ebp], ecx
mov	edx, DWORD PTR _pVtab$103[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pModule$101[ebp], eax
mov	ecx, DWORD PTR _pArgc$107[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _nArg$104[ebp], edx
mov	eax, DWORD PTR _pQuery$108[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _iQuery$40[ebp], ecx
mov	DWORD PTR _res$99[ebp], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _apArg$105[ebp], eax
mov	DWORD PTR _i$213[ebp], 0
jmp	SHORT $LN37@sqlite3Vdb
mov	ecx, DWORD PTR _i$213[ebp]
add	ecx, 1
mov	DWORD PTR _i$213[ebp], ecx
mov	edx, DWORD PTR _i$213[ebp]
cmp	edx, DWORD PTR _nArg$104[ebp]
jge	SHORT $LN35@sqlite3Vdb
mov	eax, DWORD PTR _i$213[ebp]
add	eax, 1
imul	ecx, eax, 40
add	ecx, DWORD PTR _pArgc$107[ebp]
mov	edx, DWORD PTR _i$213[ebp]
mov	eax, DWORD PTR _apArg$105[ebp]
mov	DWORD PTR [eax+edx*4], ecx
jmp	SHORT $LN36@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, -13				
or	edx, 4
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+88], edx
mov	ecx, DWORD PTR _apArg$105[ebp]
push	ecx
mov	edx, DWORD PTR _nArg$104[ebp]
push	edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _iQuery$40[ebp]
push	edx
mov	eax, DWORD PTR _pVtabCursor$161[ebp]
push	eax
mov	ecx, DWORD PTR _pModule$101[ebp]
mov	edx, DWORD PTR [ecx+32]
call	edx
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, -13				
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _pVtab$103[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VtabImportErrmsg
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN34@sqlite3Vdb
mov	edx, DWORD PTR _pVtabCursor$161[ebp]
push	edx
mov	eax, DWORD PTR _pModule$101[ebp]
mov	ecx, DWORD PTR [eax+40]
call	ecx
add	esp, 4
mov	DWORD PTR _res$99[ebp], eax
cmp	DWORD PTR _res$99[ebp], 0
je	SHORT $LN33@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+8]
sub	eax, 1
mov	DWORD PTR _pc$[ebp], eax
mov	ecx, DWORD PTR _pCur$98[ebp]
mov	BYTE PTR [ecx+25], 0
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pCur$159[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
imul	edx, DWORD PTR [ecx+12], 40
add	edx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pDest$191[ebp], edx
mov	eax, DWORD PTR _pCur$159[ebp]
movzx	ecx, BYTE PTR [eax+25]
test	ecx, ecx
je	SHORT $LN31@sqlite3Vdb
mov	edx, DWORD PTR _pDest$191[ebp]
push	edx
call	_sqlite3VdbeMemSetNull
add	esp, 4
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pCur$159[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pVtab$96[ebp], edx
mov	eax, DWORD PTR _pVtab$96[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pModule$21[ebp], ecx
push	72					
push	0
lea	edx, DWORD PTR _sContext$1[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pDest$191[ebp]
push	eax
lea	ecx, DWORD PTR _sContext$1[ebp+8]
push	ecx
call	_sqlite3VdbeMemMove
add	esp, 8
movzx	edx, WORD PTR _sContext$1[ebp+36]
and	edx, -16896				
or	edx, 1
mov	WORD PTR _sContext$1[ebp+36], dx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
lea	edx, DWORD PTR _sContext$1[ebp]
push	edx
mov	eax, DWORD PTR _pCur$159[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _pModule$21[ebp]
mov	eax, DWORD PTR [edx+44]
call	eax
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pVtab$96[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VtabImportErrmsg
add	esp, 8
cmp	DWORD PTR _sContext$1[ebp+64], 0
je	SHORT $LN30@sqlite3Vdb
mov	eax, DWORD PTR _sContext$1[ebp+64]
mov	DWORD PTR _rc$[ebp], eax
movzx	ecx, BYTE PTR _encoding$[ebp]
push	ecx
lea	edx, DWORD PTR _sContext$1[ebp+8]
push	edx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
lea	eax, DWORD PTR _sContext$1[ebp+8]
push	eax
mov	ecx, DWORD PTR _pDest$191[ebp]
push	ecx
call	_sqlite3VdbeMemMove
add	esp, 8
mov	edx, DWORD PTR _pDest$191[ebp]
push	edx
call	_sqlite3VdbeMemTooBig
add	esp, 4
test	eax, eax
je	SHORT $LN29@sqlite3Vdb
jmp	$too_big$824
jmp	$LN682@sqlite3Vdb
mov	DWORD PTR _res$91[ebp], 0
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [eax+ecx*4]
mov	DWORD PTR _pCur$189[ebp], ecx
mov	edx, DWORD PTR _pCur$189[ebp]
movzx	eax, BYTE PTR [edx+25]
test	eax, eax
je	SHORT $LN27@sqlite3Vdb
jmp	$LN682@sqlite3Vdb
mov	ecx, DWORD PTR _pCur$189[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pVtab$94[ebp], eax
mov	ecx, DWORD PTR _pVtab$94[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pModule$93[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, -13				
or	ecx, 4
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _pCur$189[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _pModule$93[ebp]
mov	eax, DWORD PTR [edx+36]
call	eax
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, -13				
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+88], edx
mov	ecx, DWORD PTR _pVtab$94[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VtabImportErrmsg
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN26@sqlite3Vdb
mov	eax, DWORD PTR _pCur$189[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _pModule$93[ebp]
mov	eax, DWORD PTR [edx+40]
call	eax
add	esp, 4
mov	DWORD PTR _res$91[ebp], eax
cmp	DWORD PTR _res$91[ebp], 0
jne	SHORT $LN25@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
sub	edx, 1
mov	DWORD PTR _pc$[ebp], edx
jmp	$check_for_interrupt$822
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pVtab$157[ebp], edx
mov	eax, DWORD PTR _pOp$[ebp]
imul	ecx, DWORD PTR [eax+4], 40
add	ecx, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pName$89[ebp], ecx
push	1
mov	edx, DWORD PTR _pName$89[ebp]
push	edx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN23@sqlite3Vdb
mov	eax, DWORD PTR _pName$89[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pVtab$157[ebp]
push	edx
mov	eax, DWORD PTR _pVtab$157[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+76]
call	edx
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pVtab$157[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VtabImportErrmsg
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
and	eax, -33				
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pVtab$153[ebp], ecx
mov	edx, DWORD PTR _pVtab$153[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pModule$85[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _nArg$87[ebp], edx
mov	eax, DWORD PTR _pModule$85[ebp]
cmp	DWORD PTR [eax+52], 0
je	$LN13@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	dl, BYTE PTR [ecx+68]
mov	BYTE PTR _vtabOnConflict$234[ebp], dl
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _apArg$88[ebp], ecx
mov	edx, DWORD PTR _pOp$[ebp]
imul	eax, DWORD PTR [edx+12], 40
add	eax, DWORD PTR _aMem$[ebp]
mov	DWORD PTR _pX$155[ebp], eax
mov	DWORD PTR _i$187[ebp], 0
jmp	SHORT $LN20@sqlite3Vdb
mov	ecx, DWORD PTR _i$187[ebp]
add	ecx, 1
mov	DWORD PTR _i$187[ebp], ecx
mov	edx, DWORD PTR _i$187[ebp]
cmp	edx, DWORD PTR _nArg$87[ebp]
jge	SHORT $LN18@sqlite3Vdb
mov	eax, DWORD PTR _i$187[ebp]
mov	ecx, DWORD PTR _apArg$88[ebp]
mov	edx, DWORD PTR _pX$155[ebp]
mov	DWORD PTR [ecx+eax*4], edx
mov	eax, DWORD PTR _pX$155[ebp]
add	eax, 40					
mov	DWORD PTR _pX$155[ebp], eax
jmp	SHORT $LN19@sqlite3Vdb
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _pOp$[ebp]
mov	al, BYTE PTR [edx+3]
mov	BYTE PTR [ecx+68], al
lea	ecx, DWORD PTR _rowid$8[ebp]
push	ecx
mov	edx, DWORD PTR _apArg$88[ebp]
push	edx
mov	eax, DWORD PTR _nArg$87[ebp]
push	eax
mov	ecx, DWORD PTR _pVtab$153[ebp]
push	ecx
mov	edx, DWORD PTR _pModule$85[ebp]
mov	eax, DWORD PTR [edx+52]
call	eax
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	dl, BYTE PTR _vtabOnConflict$234[ebp]
mov	BYTE PTR [ecx+68], dl
mov	eax, DWORD PTR _pVtab$153[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VtabImportErrmsg
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN17@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN17@sqlite3Vdb
mov	eax, DWORD PTR _rowid$8[ebp]
mov	DWORD PTR _lastRowid$[ebp], eax
mov	ecx, DWORD PTR _rowid$8[ebp+4]
mov	DWORD PTR _lastRowid$[ebp+4], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _lastRowid$[ebp]
mov	DWORD PTR [edx+32], eax
mov	ecx, DWORD PTR _lastRowid$[ebp+4]
mov	DWORD PTR [edx+36], ecx
mov	edx, DWORD PTR _rc$[ebp]
and	edx, 255				
cmp	edx, 19					
jne	SHORT $LN16@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
movzx	edx, BYTE PTR [ecx+16]
test	edx, edx
je	SHORT $LN16@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
movzx	ecx, BYTE PTR [eax+3]
cmp	ecx, 4
jne	SHORT $LN15@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN14@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
movzx	eax, BYTE PTR [edx+3]
cmp	eax, 5
jne	SHORT $LN797@sqlite3Vdb
mov	DWORD PTR tv4336[ebp], 2
jmp	SHORT $LN798@sqlite3Vdb
mov	ecx, DWORD PTR _pOp$[ebp]
movzx	edx, BYTE PTR [ecx+3]
mov	DWORD PTR tv4336[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR tv4336[ebp]
mov	BYTE PTR [eax+86], cl
jmp	SHORT $LN13@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+92]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+92], eax
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR [edx+4]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeLastPage
add	esp, 4
xor	ecx, ecx
mov	edx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [edx+16], eax
mov	DWORD PTR [edx+20], ecx
jmp	$LN682@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+4]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _pBt$83[ebp], ecx
mov	DWORD PTR _newMax$186[ebp], 0
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN9@sqlite3Vdb
mov	eax, DWORD PTR _pBt$83[ebp]
push	eax
call	_sqlite3BtreeLastPage
add	esp, 4
mov	DWORD PTR _newMax$186[ebp], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR _newMax$186[ebp]
cmp	edx, DWORD PTR [ecx+12]
jae	SHORT $LN9@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _newMax$186[ebp], ecx
mov	edx, DWORD PTR _newMax$186[ebp]
push	edx
mov	eax, DWORD PTR _pBt$83[ebp]
push	eax
call	_sqlite3BtreeMaxPageCount
add	esp, 8
cdq
mov	ecx, DWORD PTR _pOut$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
jmp	$LN682@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN7@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 1
mov	DWORD PTR _pc$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+164], 0
je	$LN6@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 11					
and	ecx, 1
jne	$LN6@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN799@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR tv4382[ebp], ecx
jmp	SHORT $LN800@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+168]
mov	DWORD PTR tv4382[ebp], eax
mov	ecx, DWORD PTR tv4382[ebp]
mov	DWORD PTR _zTrace$81[ebp], ecx
cmp	DWORD PTR _zTrace$81[ebp], 0
je	SHORT $LN6@sqlite3Vdb
mov	edx, DWORD PTR _zTrace$81[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeExpandSql
add	esp, 8
mov	DWORD PTR _z$79[ebp], eax
mov	ecx, DWORD PTR _z$79[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+168]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+164]
call	edx
add	esp, 8
mov	eax, DWORD PTR _z$79[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN688@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx+80], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+168]
push	ecx
mov	edx, DWORD PTR _pc$[ebp]
push	edx
push	OFFSET $SG101433
mov	eax, DWORD PTR _rc$[ebp]
push	eax
call	_sqlite3_log
add	esp, 20					
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeHalt
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
mov	DWORD PTR _rc$[ebp], 1
movzx	eax, BYTE PTR _resetSchemaOnFault$[ebp]
test	eax, eax
jle	SHORT $vdbe_return$823
movzx	ecx, BYTE PTR _resetSchemaOnFault$[ebp]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ResetOneSchema
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _lastRowid$[ebp]
mov	DWORD PTR [eax+32], ecx
mov	edx, DWORD PTR _lastRowid$[ebp+4]
mov	DWORD PTR [eax+36], edx
mov	eax, 4
shl	eax, 2
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+eax+108]
add	edx, DWORD PTR _nVmStep$[ebp]
mov	eax, 4
shl	eax, 2
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+eax+108], edx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN695@sqlite3Vdb
push	OFFSET $SG101437
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 18			
jmp	$vdbe_error_halt$821
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
push	OFFSET $SG101438
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 44					
push	ecx
call	_sqlite3SetString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 7
jmp	$vdbe_error_halt$821
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN2@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 7
cmp	DWORD PTR _rc$[ebp], 3082		
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
call	_sqlite3ErrStr
add	esp, 4
push	eax
push	OFFSET $SG101442
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 44					
push	eax
call	_sqlite3SetString
add	esp, 16					
jmp	$vdbe_error_halt$821
mov	DWORD PTR _rc$[ebp], 9
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx+80], edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
call	_sqlite3ErrStr
add	esp, 4
push	eax
push	OFFSET $SG101444
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 44					
push	edx
call	_sqlite3SetString
add	esp, 16					
jmp	$vdbe_error_halt$821
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	$LN578@sqlite3Vdb
DD	$LN404@sqlite3Vdb
DD	$LN368@sqlite3Vdb
DD	$LN356@sqlite3Vdb
DD	$LN197@sqlite3Vdb
DD	$LN196@sqlite3Vdb
DD	$LN196@sqlite3Vdb
DD	$LN195@sqlite3Vdb
DD	$LN195@sqlite3Vdb
DD	$LN88@sqlite3Vdb
DD	$LN77@sqlite3Vdb
DD	$LN72@sqlite3Vdb
DD	$LN56@sqlite3Vdb
DD	$LN38@sqlite3Vdb
DD	$LN22@sqlite3Vdb
DD	$LN681@sqlite3Vdb
DD	$LN677@sqlite3Vdb
DD	$LN676@sqlite3Vdb
DD	$LN491@sqlite3Vdb
DD	$LN675@sqlite3Vdb
DD	$LN673@sqlite3Vdb
DD	$LN672@sqlite3Vdb
DD	$LN671@sqlite3Vdb
DD	$LN670@sqlite3Vdb
DD	$LN657@sqlite3Vdb
DD	$LN656@sqlite3Vdb
DD	$LN649@sqlite3Vdb
DD	$LN647@sqlite3Vdb
DD	$LN643@sqlite3Vdb
DD	$LN642@sqlite3Vdb
DD	$LN641@sqlite3Vdb
DD	$LN639@sqlite3Vdb
DD	$LN634@sqlite3Vdb
DD	$LN629@sqlite3Vdb
DD	$LN628@sqlite3Vdb
DD	$LN580@sqlite3Vdb
DD	$LN555@sqlite3Vdb
DD	$LN554@sqlite3Vdb
DD	$LN549@sqlite3Vdb
DD	$LN513@sqlite3Vdb
DD	$LN512@sqlite3Vdb
DD	$LN505@sqlite3Vdb
DD	$LN485@sqlite3Vdb
DD	$LN482@sqlite3Vdb
DD	$LN482@sqlite3Vdb
DD	$LN473@sqlite3Vdb
DD	$LN428@sqlite3Vdb
DD	$LN425@sqlite3Vdb
DD	$LN405@sqlite3Vdb
DD	$LN343@sqlite3Vdb
DD	$LN342@sqlite3Vdb
DD	$LN337@sqlite3Vdb
DD	$LN337@sqlite3Vdb
DD	$LN326@sqlite3Vdb
DD	$LN326@sqlite3Vdb
DD	$LN319@sqlite3Vdb
DD	$LN317@sqlite3Vdb
DD	$LN315@sqlite3Vdb
DD	$LN314@sqlite3Vdb
DD	$LN314@sqlite3Vdb
DD	$LN314@sqlite3Vdb
DD	$LN314@sqlite3Vdb
DD	$LN290@sqlite3Vdb
DD	$LN289@sqlite3Vdb
DD	$LN289@sqlite3Vdb
DD	$LN289@sqlite3Vdb
DD	$LN271@sqlite3Vdb
DD	$LN269@sqlite3Vdb
DD	$LN268@sqlite3Vdb
DD	$LN244@sqlite3Vdb
DD	$LN500@sqlite3Vdb
DD	$LN500@sqlite3Vdb
DD	$LN244@sqlite3Vdb
DD	$LN234@sqlite3Vdb
DD	$LN230@sqlite3Vdb
DD	$LN477@sqlite3Vdb
DD	$LN475@sqlite3Vdb
DD	$LN536@sqlite3Vdb
DD	$LN536@sqlite3Vdb
DD	$LN536@sqlite3Vdb
DD	$LN536@sqlite3Vdb
DD	$LN536@sqlite3Vdb
DD	$LN536@sqlite3Vdb
DD	$LN229@sqlite3Vdb
DD	$LN568@sqlite3Vdb
DD	$LN568@sqlite3Vdb
DD	$LN568@sqlite3Vdb
DD	$LN568@sqlite3Vdb
DD	$LN610@sqlite3Vdb
DD	$LN610@sqlite3Vdb
DD	$LN610@sqlite3Vdb
DD	$LN610@sqlite3Vdb
DD	$LN610@sqlite3Vdb
DD	$LN619@sqlite3Vdb
DD	$LN227@sqlite3Vdb
DD	$LN488@sqlite3Vdb
DD	$LN654@sqlite3Vdb
DD	$LN226@sqlite3Vdb
DD	$LN226@sqlite3Vdb
DD	$LN217@sqlite3Vdb
DD	$LN207@sqlite3Vdb
DD	$LN205@sqlite3Vdb
DD	$LN202@sqlite3Vdb
DD	$LN202@sqlite3Vdb
DD	$LN201@sqlite3Vdb
DD	$LN191@sqlite3Vdb
DD	$LN191@sqlite3Vdb
DD	$LN186@sqlite3Vdb
DD	$LN184@sqlite3Vdb
DD	$LN180@sqlite3Vdb
DD	$LN180@sqlite3Vdb
DD	$LN180@sqlite3Vdb
DD	$LN180@sqlite3Vdb
DD	$LN174@sqlite3Vdb
DD	$LN166@sqlite3Vdb
DD	$LN163@sqlite3Vdb
DD	$LN160@sqlite3Vdb
DD	$LN160@sqlite3Vdb
DD	$LN157@sqlite3Vdb
DD	$LN151@sqlite3Vdb
DD	$LN150@sqlite3Vdb
DD	$LN149@sqlite3Vdb
DD	$LN148@sqlite3Vdb
DD	$LN147@sqlite3Vdb
DD	$LN138@sqlite3Vdb
DD	$LN135@sqlite3Vdb
DD	$LN131@sqlite3Vdb
DD	$LN125@sqlite3Vdb
DD	$LN112@sqlite3Vdb
DD	$LN111@sqlite3Vdb
DD	$LN106@sqlite3Vdb
DD	$LN101@sqlite3Vdb
DD	$LN655@sqlite3Vdb
DD	$LN94@sqlite3Vdb
DD	$LN92@sqlite3Vdb
DD	$LN90@sqlite3Vdb
DD	$LN80@sqlite3Vdb
DD	$LN55@sqlite3Vdb
DD	$LN53@sqlite3Vdb
DD	$LN50@sqlite3Vdb
DD	$LN46@sqlite3Vdb
DD	$LN44@sqlite3Vdb
DD	$LN547@sqlite3Vdb
DD	$LN545@sqlite3Vdb
DD	$LN541@sqlite3Vdb
DD	$LN540@sqlite3Vdb
DD	$LN538@sqlite3Vdb
DD	$LN43@sqlite3Vdb
DD	$LN42@sqlite3Vdb
DD	$LN32@sqlite3Vdb
DD	$LN28@sqlite3Vdb
DD	$LN24@sqlite3Vdb
DD	$LN12@sqlite3Vdb
DD	$LN11@sqlite3Vdb
DD	$LN8@sqlite3Vdb
DD	$LN605@sqlite3Vdb
DD	$LN603@sqlite3Vdb
DD	$LN601@sqlite3Vdb
DD	$LN599@sqlite3Vdb
DD	$LN590@sqlite3Vdb
DD	$LN589@sqlite3Vdb
DD	$LN588@sqlite3Vdb
DD	$LN587@sqlite3Vdb
DD	$LN521@sqlite3Vdb
DD	$LN522@sqlite3Vdb
DD	$LN518@sqlite3Vdb
DD	$LN519@sqlite3Vdb
DD	$LN520@sqlite3Vdb
ENDP
_sqlite3MemCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _pMem1$[ebp]
movzx	ecx, WORD PTR [eax+28]
mov	DWORD PTR _f1$[ebp], ecx
mov	edx, DWORD PTR _pMem2$[ebp]
movzx	eax, WORD PTR [edx+28]
mov	DWORD PTR _f2$[ebp], eax
mov	ecx, DWORD PTR _f1$[ebp]
or	ecx, DWORD PTR _f2$[ebp]
mov	DWORD PTR _combined_flags$[ebp], ecx
mov	edx, DWORD PTR _combined_flags$[ebp]
and	edx, 1
je	SHORT $LN20@sqlite3Mem
mov	eax, DWORD PTR _f2$[ebp]
and	eax, 1
mov	ecx, DWORD PTR _f1$[ebp]
and	ecx, 1
sub	eax, ecx
jmp	$LN21@sqlite3Mem
mov	edx, DWORD PTR _combined_flags$[ebp]
and	edx, 12					
je	$LN19@sqlite3Mem
mov	eax, DWORD PTR _f1$[ebp]
and	eax, DWORD PTR _f2$[ebp]
and	eax, 4
je	SHORT $LN18@sqlite3Mem
mov	ecx, DWORD PTR _pMem1$[ebp]
mov	edx, DWORD PTR _pMem2$[ebp]
mov	DWORD PTR tv171[ebp], ecx
mov	DWORD PTR tv172[ebp], edx
mov	eax, DWORD PTR tv171[ebp]
mov	ecx, DWORD PTR tv172[ebp]
mov	edx, DWORD PTR [eax+20]
cmp	edx, DWORD PTR [ecx+20]
jg	SHORT $LN17@sqlite3Mem
jl	SHORT $LN25@sqlite3Mem
mov	eax, DWORD PTR tv171[ebp]
mov	ecx, DWORD PTR tv172[ebp]
mov	edx, DWORD PTR [eax+16]
cmp	edx, DWORD PTR [ecx+16]
jae	SHORT $LN17@sqlite3Mem
or	eax, -1
jmp	$LN21@sqlite3Mem
mov	eax, DWORD PTR _pMem1$[ebp]
mov	ecx, DWORD PTR _pMem2$[ebp]
mov	DWORD PTR tv184[ebp], eax
mov	DWORD PTR tv185[ebp], ecx
mov	edx, DWORD PTR tv184[ebp]
mov	eax, DWORD PTR tv185[ebp]
mov	ecx, DWORD PTR [edx+20]
cmp	ecx, DWORD PTR [eax+20]
jl	SHORT $LN16@sqlite3Mem
jg	SHORT $LN26@sqlite3Mem
mov	edx, DWORD PTR tv184[ebp]
mov	eax, DWORD PTR tv185[ebp]
mov	ecx, DWORD PTR [edx+16]
cmp	ecx, DWORD PTR [eax+16]
jbe	SHORT $LN16@sqlite3Mem
mov	eax, 1
jmp	$LN21@sqlite3Mem
xor	eax, eax
jmp	$LN21@sqlite3Mem
mov	edx, DWORD PTR _f1$[ebp]
and	edx, 8
je	SHORT $LN15@sqlite3Mem
mov	eax, DWORD PTR _pMem1$[ebp]
movsd	xmm0, QWORD PTR [eax+8]
movsd	QWORD PTR _r1$2[ebp], xmm0
jmp	SHORT $LN12@sqlite3Mem
mov	ecx, DWORD PTR _f1$[ebp]
and	ecx, 4
je	SHORT $LN13@sqlite3Mem
mov	edx, DWORD PTR _pMem1$[ebp]
mov	ecx, DWORD PTR [edx+16]
mov	edx, DWORD PTR [edx+20]
call	__ltod3
movsd	QWORD PTR _r1$2[ebp], xmm0
jmp	SHORT $LN12@sqlite3Mem
mov	eax, 1
jmp	$LN21@sqlite3Mem
mov	eax, DWORD PTR _f2$[ebp]
and	eax, 8
je	SHORT $LN11@sqlite3Mem
mov	ecx, DWORD PTR _pMem2$[ebp]
movsd	xmm0, QWORD PTR [ecx+8]
movsd	QWORD PTR _r2$1[ebp], xmm0
jmp	SHORT $LN8@sqlite3Mem
mov	edx, DWORD PTR _f2$[ebp]
and	edx, 4
je	SHORT $LN9@sqlite3Mem
mov	eax, DWORD PTR _pMem2$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [eax+20]
call	__ltod3
movsd	QWORD PTR _r2$1[ebp], xmm0
jmp	SHORT $LN8@sqlite3Mem
or	eax, -1
jmp	$LN21@sqlite3Mem
movsd	xmm0, QWORD PTR _r2$1[ebp]
comisd	xmm0, QWORD PTR _r1$2[ebp]
jbe	SHORT $LN7@sqlite3Mem
or	eax, -1
jmp	$LN21@sqlite3Mem
movsd	xmm0, QWORD PTR _r1$2[ebp]
comisd	xmm0, QWORD PTR _r2$1[ebp]
jbe	SHORT $LN6@sqlite3Mem
mov	eax, 1
jmp	$LN21@sqlite3Mem
xor	eax, eax
jmp	$LN21@sqlite3Mem
mov	ecx, DWORD PTR _combined_flags$[ebp]
and	ecx, 2
je	SHORT $LN2@sqlite3Mem
mov	edx, DWORD PTR _f1$[ebp]
and	edx, 2
jne	SHORT $LN4@sqlite3Mem
mov	eax, 1
jmp	$LN21@sqlite3Mem
mov	eax, DWORD PTR _f2$[ebp]
and	eax, 2
jne	SHORT $LN3@sqlite3Mem
or	eax, -1
jmp	SHORT $LN21@sqlite3Mem
cmp	DWORD PTR _pColl$[ebp], 0
je	SHORT $LN2@sqlite3Mem
mov	ecx, DWORD PTR _pColl$[ebp]
push	ecx
mov	edx, DWORD PTR _pMem2$[ebp]
push	edx
mov	eax, DWORD PTR _pMem1$[ebp]
push	eax
call	_vdbeCompareMemString
add	esp, 12					
jmp	SHORT $LN21@sqlite3Mem
mov	ecx, DWORD PTR _pMem1$[ebp]
mov	edx, DWORD PTR _pMem2$[ebp]
mov	eax, DWORD PTR [ecx+24]
cmp	eax, DWORD PTR [edx+24]
jle	SHORT $LN23@sqlite3Mem
mov	ecx, DWORD PTR _pMem2$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR tv150[ebp], edx
jmp	SHORT $LN24@sqlite3Mem
mov	eax, DWORD PTR _pMem1$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR tv150[ebp], ecx
mov	edx, DWORD PTR tv150[ebp]
push	edx
mov	eax, DWORD PTR _pMem2$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pMem1$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_memcmp
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Mem
mov	ecx, DWORD PTR _pMem1$[ebp]
mov	edx, DWORD PTR _pMem2$[ebp]
mov	eax, DWORD PTR [ecx+24]
sub	eax, DWORD PTR [edx+24]
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeIdxRowid PROC
push	ebp
mov	ebp, esp
sub	esp, 112				
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nCellKey$[ebp], xmm0
lea	eax, DWORD PTR _nCellKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_sqlite3BtreeKeySize
add	esp, 8
push	40					
push	0
lea	edx, DWORD PTR _m$[ebp]
push	edx
call	_memset
add	esp, 12					
lea	eax, DWORD PTR _m$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _nCellKey$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_sqlite3VdbeMemFromBtree
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@sqlite3Vdb
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN7@sqlite3Vdb
mov	eax, DWORD PTR _m$[ebp+4]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 128				
jge	SHORT $LN9@sqlite3Vdb
mov	edx, DWORD PTR _m$[ebp+4]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _szHdr$[ebp], eax
mov	DWORD PTR tv84[ebp], 1
jmp	SHORT $LN10@sqlite3Vdb
lea	ecx, DWORD PTR _szHdr$[ebp]
push	ecx
mov	edx, DWORD PTR _m$[ebp+4]
push	edx
call	_sqlite3GetVarint32
add	esp, 8
movzx	eax, al
mov	DWORD PTR tv84[ebp], eax
cmp	DWORD PTR _szHdr$[ebp], 3
jb	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _szHdr$[ebp]
cmp	ecx, DWORD PTR _m$[ebp+24]
jle	SHORT $LN5@sqlite3Vdb
jmp	$idx_rowid_corruption$13
mov	edx, DWORD PTR _m$[ebp+4]
add	edx, DWORD PTR _szHdr$[ebp]
movzx	eax, BYTE PTR [edx-1]
cmp	eax, 128				
jge	SHORT $LN11@sqlite3Vdb
mov	ecx, DWORD PTR _m$[ebp+4]
add	ecx, DWORD PTR _szHdr$[ebp]
movzx	edx, BYTE PTR [ecx-1]
mov	DWORD PTR _typeRowid$[ebp], edx
mov	DWORD PTR tv136[ebp], 1
jmp	SHORT $LN12@sqlite3Vdb
lea	eax, DWORD PTR _typeRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _szHdr$[ebp]
mov	edx, DWORD PTR _m$[ebp+4]
lea	eax, DWORD PTR [edx+ecx-1]
push	eax
call	_sqlite3GetVarint32
add	esp, 8
movzx	ecx, al
mov	DWORD PTR tv136[ebp], ecx
cmp	DWORD PTR _typeRowid$[ebp], 1
jb	SHORT $LN2@sqlite3Vdb
cmp	DWORD PTR _typeRowid$[ebp], 9
ja	SHORT $LN2@sqlite3Vdb
cmp	DWORD PTR _typeRowid$[ebp], 7
jne	SHORT $LN3@sqlite3Vdb
jmp	SHORT $idx_rowid_corruption$13
mov	edx, DWORD PTR _typeRowid$[ebp]
push	edx
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
mov	DWORD PTR _lenRowid$[ebp], eax
mov	eax, DWORD PTR _szHdr$[ebp]
add	eax, DWORD PTR _lenRowid$[ebp]
cmp	DWORD PTR _m$[ebp+24], eax
jae	SHORT $LN1@sqlite3Vdb
jmp	SHORT $idx_rowid_corruption$13
lea	ecx, DWORD PTR _v$[ebp]
push	ecx
mov	edx, DWORD PTR _typeRowid$[ebp]
push	edx
mov	eax, DWORD PTR _m$[ebp+24]
sub	eax, DWORD PTR _lenRowid$[ebp]
add	eax, DWORD PTR _m$[ebp+4]
push	eax
call	_sqlite3VdbeSerialGet
add	esp, 12					
mov	ecx, DWORD PTR _rowid$[ebp]
mov	edx, DWORD PTR _v$[ebp+16]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _v$[ebp+20]
mov	DWORD PTR [ecx+4], eax
lea	ecx, DWORD PTR _m$[ebp]
push	ecx
call	_sqlite3VdbeMemRelease
add	esp, 4
xor	eax, eax
jmp	SHORT $LN7@sqlite3Vdb
lea	edx, DWORD PTR _m$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
push	65606					
call	_sqlite3CorruptError
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeIdxKeyCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nCellKey$[ebp], xmm0
mov	eax, DWORD PTR _pC$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pCur$[ebp], ecx
lea	edx, DWORD PTR _nCellKey$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_sqlite3BtreeKeySize
add	esp, 8
cmp	DWORD PTR _nCellKey$[ebp+4], 0
jl	SHORT $LN2@sqlite3Vdb
jg	SHORT $LN6@sqlite3Vdb
cmp	DWORD PTR _nCellKey$[ebp], 0
jbe	SHORT $LN2@sqlite3Vdb
cmp	DWORD PTR _nCellKey$[ebp+4], 0
jl	SHORT $LN3@sqlite3Vdb
jg	SHORT $LN2@sqlite3Vdb
cmp	DWORD PTR _nCellKey$[ebp], 2147483647	
jbe	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _res$[ebp]
mov	DWORD PTR [ecx], 0
push	65637					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN4@sqlite3Vdb
push	40					
push	0
lea	edx, DWORD PTR _m$[ebp]
push	edx
call	_memset
add	esp, 12					
lea	eax, DWORD PTR _m$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _nCellKey$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pC$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3VdbeMemFromBtree
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN4@sqlite3Vdb
push	0
mov	ecx, DWORD PTR _pUnpacked$[ebp]
push	ecx
mov	edx, DWORD PTR _m$[ebp+4]
push	edx
mov	eax, DWORD PTR _m$[ebp+24]
push	eax
call	_sqlite3VdbeRecordCompare
add	esp, 16					
mov	ecx, DWORD PTR _res$[ebp]
mov	DWORD PTR [ecx], eax
lea	edx, DWORD PTR _m$[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeDeleteAuxData PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pVdbe$[ebp]
add	eax, 204				
mov	DWORD PTR _pp$[ebp], eax
mov	ecx, DWORD PTR _pp$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN8@sqlite3Vdb
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pAux$1[ebp], eax
cmp	DWORD PTR _iOp$[ebp], 0
jl	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _pAux$1[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _iOp$[ebp]
jne	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _pAux$1[ebp]
cmp	DWORD PTR [eax+4], 31			
jg	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _pAux$1[ebp]
mov	edx, 1
mov	ecx, DWORD PTR [ecx+4]
shl	edx, cl
and	edx, DWORD PTR _mask$[ebp]
jne	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _pAux$1[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _pAux$1[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pAux$1[ebp]
mov	ecx, DWORD PTR [eax+12]
call	ecx
add	esp, 4
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR _pAux$1[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _pAux$1[ebp]
push	edx
mov	eax, DWORD PTR _pVdbe$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _pAux$1[ebp]
add	edx, 16					
mov	DWORD PTR _pp$[ebp], edx
jmp	SHORT $LN7@sqlite3Vdb
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSerialGet PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	esi
push	edi
mov	eax, DWORD PTR _serial_type$[ebp]
mov	DWORD PTR tv64[ebp], eax
cmp	DWORD PTR tv64[ebp], 11			
ja	$LN1@sqlite3Vdb
mov	ecx, DWORD PTR tv64[ebp]
jmp	DWORD PTR $LN18@sqlite3Vdb[ecx*4]
mov	edx, 1
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
jmp	$LN12@sqlite3Vdb
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _buf$[ebp]
movsx	eax, BYTE PTR [eax+edx]
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	eax, 1
jmp	$LN14@sqlite3Vdb
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _buf$[ebp]
movsx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
or	eax, ecx
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	eax, 2
jmp	$LN14@sqlite3Vdb
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _buf$[ebp]
movsx	eax, BYTE PTR [eax+edx]
shl	eax, 16					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
shl	ecx, 8
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _buf$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	eax, 3
jmp	$LN14@sqlite3Vdb
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
shl	ecx, 24					
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _buf$[ebp]
movzx	edx, BYTE PTR [eax+edx]
shl	edx, 16					
or	ecx, edx
mov	eax, 1
shl	eax, 1
mov	edx, DWORD PTR _buf$[ebp]
movzx	eax, BYTE PTR [edx+eax]
shl	eax, 8
or	ecx, eax
mov	edx, 1
imul	eax, edx, 3
mov	edx, DWORD PTR _buf$[ebp]
movzx	eax, BYTE PTR [edx+eax]
or	ecx, eax
mov	DWORD PTR _y$[ebp], ecx
mov	eax, DWORD PTR _y$[ebp]
cdq
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	DWORD PTR [ecx+20], edx
mov	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	eax, 4
jmp	$LN14@sqlite3Vdb
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [eax+edx+2]
shl	ecx, 24					
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _buf$[ebp]
movzx	edx, BYTE PTR [eax+edx+2]
shl	edx, 16					
or	ecx, edx
mov	eax, 1
shl	eax, 1
mov	edx, DWORD PTR _buf$[ebp]
movzx	eax, BYTE PTR [edx+eax+2]
shl	eax, 8
or	ecx, eax
mov	edx, 1
imul	eax, edx, 3
mov	edx, DWORD PTR _buf$[ebp]
movzx	eax, BYTE PTR [edx+eax+2]
or	ecx, eax
mov	esi, ecx
xor	edi, edi
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _buf$[ebp]
movsx	eax, BYTE PTR [eax+edx]
shl	eax, 8
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
or	eax, ecx
cdq
push	1
push	0
push	edx
push	eax
call	__allmul
add	esi, eax
adc	edi, edx
mov	edx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [edx+16], esi
mov	DWORD PTR [edx+20], edi
mov	eax, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
mov	eax, 6
jmp	$LN14@sqlite3Vdb
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _buf$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
shl	edx, 24					
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _buf$[ebp]
movzx	eax, BYTE PTR [ecx+eax]
shl	eax, 16					
or	edx, eax
mov	ecx, 1
shl	ecx, 1
mov	eax, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [eax+ecx]
shl	ecx, 8
or	edx, ecx
mov	eax, 1
imul	ecx, eax, 3
mov	eax, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [eax+ecx]
or	edx, ecx
xor	eax, eax
mov	DWORD PTR _x$[ebp], edx
mov	DWORD PTR _x$[ebp+4], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _buf$[ebp]
movzx	ecx, BYTE PTR [eax+edx+4]
shl	ecx, 24					
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _buf$[ebp]
movzx	edx, BYTE PTR [eax+edx+4]
shl	edx, 16					
or	ecx, edx
mov	eax, 1
shl	eax, 1
mov	edx, DWORD PTR _buf$[ebp]
movzx	eax, BYTE PTR [edx+eax+4]
shl	eax, 8
or	ecx, eax
mov	edx, 1
imul	eax, edx, 3
mov	edx, DWORD PTR _buf$[ebp]
movzx	eax, BYTE PTR [edx+eax+4]
or	ecx, eax
mov	DWORD PTR _y$[ebp], ecx
mov	eax, DWORD PTR _x$[ebp]
mov	edx, DWORD PTR _x$[ebp+4]
mov	cl, 32					
call	__allshl
xor	ecx, ecx
or	eax, DWORD PTR _y$[ebp]
or	edx, ecx
mov	DWORD PTR _x$[ebp], eax
mov	DWORD PTR _x$[ebp+4], edx
cmp	DWORD PTR _serial_type$[ebp], 6
jne	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _x$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _x$[ebp+4]
mov	DWORD PTR [edx+20], ecx
mov	edx, 4
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
jmp	SHORT $LN3@sqlite3Vdb
push	8
lea	ecx, DWORD PTR _x$[ebp]
push	ecx
mov	edx, DWORD PTR _pMem$[ebp]
add	edx, 8
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pMem$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [eax+8]
movsd	QWORD PTR [esp], xmm0
call	_sqlite3IsNaN
add	esp, 8
test	eax, eax
je	SHORT $LN16@sqlite3Vdb
mov	DWORD PTR tv244[ebp], 1
jmp	SHORT $LN17@sqlite3Vdb
mov	DWORD PTR tv244[ebp], 8
mov	ecx, DWORD PTR _pMem$[ebp]
mov	dx, WORD PTR tv244[ebp]
mov	WORD PTR [ecx+28], dx
mov	eax, 8
jmp	SHORT $LN14@sqlite3Vdb
mov	eax, DWORD PTR _serial_type$[ebp]
sub	eax, 8
xor	ecx, ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [edx+16], eax
mov	DWORD PTR [edx+20], ecx
mov	eax, 4
mov	ecx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [ecx+28], ax
xor	eax, eax
jmp	SHORT $LN14@sqlite3Vdb
mov	edx, DWORD PTR _serial_type$[ebp]
sub	edx, 12					
shr	edx, 1
mov	DWORD PTR _len$1[ebp], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR _buf$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _len$1[ebp]
mov	DWORD PTR [edx+24], eax
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+32], 0
mov	edx, DWORD PTR _serial_type$[ebp]
and	edx, 1
mov	eax, DWORD PTR _pMem$[ebp]
mov	cx, WORD PTR ?aFlag@?O@??sqlite3VdbeSerialGet@@9@9[edx*2]
mov	WORD PTR [eax+28], cx
mov	eax, DWORD PTR _len$1[ebp]
jmp	SHORT $LN14@sqlite3Vdb
xor	eax, eax
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
DD	$LN11@sqlite3Vdb
DD	$LN10@sqlite3Vdb
DD	$LN9@sqlite3Vdb
DD	$LN8@sqlite3Vdb
DD	$LN7@sqlite3Vdb
DD	$LN6@sqlite3Vdb
DD	$LN5@sqlite3Vdb
DD	$LN5@sqlite3Vdb
DD	$LN2@sqlite3Vdb
DD	$LN2@sqlite3Vdb
DD	$LN11@sqlite3Vdb
DD	$LN11@sqlite3Vdb
ENDP
_sqlite3VdbeSerialPut PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
cmp	DWORD PTR _serial_type$[ebp], 7
ja	$LN6@sqlite3Vdb
cmp	DWORD PTR _serial_type$[ebp], 0
jbe	$LN6@sqlite3Vdb
cmp	DWORD PTR _serial_type$[ebp], 7
jne	SHORT $LN5@sqlite3Vdb
push	8
mov	eax, DWORD PTR _pMem$[ebp]
add	eax, 8
push	eax
lea	ecx, DWORD PTR _v$1[ebp]
push	ecx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _v$1[ebp], eax
mov	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _v$1[ebp+4], ecx
mov	edx, DWORD PTR _serial_type$[ebp]
push	edx
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
mov	DWORD PTR _i$2[ebp], eax
mov	eax, DWORD PTR _i$2[ebp]
mov	DWORD PTR _len$[ebp], eax
mov	ecx, DWORD PTR _i$2[ebp]
mov	DWORD PTR tv76[ebp], ecx
mov	edx, DWORD PTR _i$2[ebp]
sub	edx, 1
mov	DWORD PTR _i$2[ebp], edx
cmp	DWORD PTR tv76[ebp], 0
je	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _v$1[ebp]
and	eax, 255				
mov	ecx, DWORD PTR _v$1[ebp+4]
and	ecx, 0
mov	edx, DWORD PTR _buf$[ebp]
add	edx, DWORD PTR _i$2[ebp]
mov	BYTE PTR [edx], al
mov	eax, DWORD PTR _v$1[ebp]
mov	edx, DWORD PTR _v$1[ebp+4]
mov	cl, 8
call	__aullshr
mov	DWORD PTR _v$1[ebp], eax
mov	DWORD PTR _v$1[ebp+4], edx
jmp	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _len$[ebp]
jmp	SHORT $LN7@sqlite3Vdb
cmp	DWORD PTR _serial_type$[ebp], 12	
jb	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _len$[ebp], ecx
mov	edx, DWORD PTR _len$[ebp]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _buf$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _len$[ebp]
jmp	SHORT $LN7@sqlite3Vdb
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSerialType PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, DWORD PTR _pMem$[ebp]
movzx	ecx, WORD PTR [eax+28]
mov	DWORD PTR _flags$[ebp], ecx
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 1
je	SHORT $LN12@sqlite3Vdb
xor	eax, eax
jmp	$LN13@sqlite3Vdb
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 4
je	$LN11@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _i$1[ebp], edx
mov	eax, DWORD PTR [ecx+20]
mov	DWORD PTR _i$1[ebp+4], eax
cmp	DWORD PTR _i$1[ebp+4], 0
jg	SHORT $LN10@sqlite3Vdb
jl	SHORT $LN19@sqlite3Vdb
cmp	DWORD PTR _i$1[ebp], 0
jae	SHORT $LN10@sqlite3Vdb
cmp	DWORD PTR _i$1[ebp+4], -32768		
jg	SHORT $LN9@sqlite3Vdb
jl	SHORT $LN20@sqlite3Vdb
cmp	DWORD PTR _i$1[ebp], 1
jae	SHORT $LN9@sqlite3Vdb
mov	eax, 6
jmp	$LN13@sqlite3Vdb
mov	ecx, DWORD PTR _i$1[ebp]
neg	ecx
mov	edx, DWORD PTR _i$1[ebp+4]
adc	edx, 0
neg	edx
mov	DWORD PTR _u$2[ebp], ecx
mov	DWORD PTR _u$2[ebp+4], edx
jmp	SHORT $LN8@sqlite3Vdb
mov	eax, DWORD PTR _i$1[ebp]
mov	DWORD PTR _u$2[ebp], eax
mov	ecx, DWORD PTR _i$1[ebp+4]
mov	DWORD PTR _u$2[ebp+4], ecx
cmp	DWORD PTR _u$2[ebp+4], 0
ja	SHORT $LN7@sqlite3Vdb
jb	SHORT $LN21@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp], 127		
ja	SHORT $LN7@sqlite3Vdb
mov	edx, DWORD PTR _i$1[ebp]
and	edx, 1
mov	eax, DWORD PTR _i$1[ebp+4]
and	eax, 0
mov	DWORD PTR tv158[ebp], edx
mov	DWORD PTR tv158[ebp+4], eax
mov	ecx, DWORD PTR tv158[ebp]
cmp	ecx, DWORD PTR _i$1[ebp]
jne	SHORT $LN15@sqlite3Vdb
mov	edx, DWORD PTR tv158[ebp+4]
cmp	edx, DWORD PTR _i$1[ebp+4]
jne	SHORT $LN15@sqlite3Vdb
cmp	DWORD PTR _file_format$[ebp], 4
jl	SHORT $LN15@sqlite3Vdb
mov	eax, DWORD PTR _u$2[ebp]
add	eax, 8
mov	DWORD PTR tv80[ebp], eax
jmp	SHORT $LN16@sqlite3Vdb
mov	DWORD PTR tv80[ebp], 1
mov	eax, DWORD PTR tv80[ebp]
jmp	$LN13@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp+4], 0
ja	SHORT $LN6@sqlite3Vdb
jb	SHORT $LN22@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp], 32767		
ja	SHORT $LN6@sqlite3Vdb
mov	eax, 2
jmp	$LN13@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp+4], 0
ja	SHORT $LN5@sqlite3Vdb
jb	SHORT $LN23@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp], 8388607		
ja	SHORT $LN5@sqlite3Vdb
mov	eax, 3
jmp	$LN13@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp+4], 0
ja	SHORT $LN4@sqlite3Vdb
jb	SHORT $LN24@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp], 2147483647		
ja	SHORT $LN4@sqlite3Vdb
mov	eax, 4
jmp	SHORT $LN13@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp+4], 32767		
ja	SHORT $LN3@sqlite3Vdb
jb	SHORT $LN25@sqlite3Vdb
cmp	DWORD PTR _u$2[ebp], -1
ja	SHORT $LN3@sqlite3Vdb
mov	eax, 5
jmp	SHORT $LN13@sqlite3Vdb
mov	eax, 6
jmp	SHORT $LN13@sqlite3Vdb
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 8
je	SHORT $LN2@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN13@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 16384				
je	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR _n$[ebp]
add	eax, DWORD PTR [edx+16]
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 2
je	SHORT $LN17@sqlite3Vdb
mov	DWORD PTR tv128[ebp], 1
jmp	SHORT $LN18@sqlite3Vdb
mov	DWORD PTR tv128[ebp], 0
mov	edx, DWORD PTR _n$[ebp]
mov	eax, DWORD PTR tv128[ebp]
lea	eax, DWORD PTR [eax+edx*2+12]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSerialTypeLen PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _serial_type$[ebp], 12	
jb	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _serial_type$[ebp]
sub	eax, 12					
shr	eax, 1
jmp	SHORT $LN3@sqlite3Vdb
jmp	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _serial_type$[ebp]
movzx	eax, BYTE PTR ?aSize@?3??sqlite3VdbeSerialTypeLen@@9@9[eax]
pop	ebp
ret	0
ENDP
_sqlite3VdbeCursorMoveto PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+27]
test	ecx, ecx
je	SHORT $LN8@sqlite3Vdb
lea	edx, DWORD PTR _res$1[ebp]
push	edx
push	0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR [eax+48]
push	edx
push	0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeMovetoUnpacked
add	esp, 24					
mov	DWORD PTR _rc$4[ebp], eax
cmp	DWORD PTR _rc$4[ebp], 0
je	SHORT $LN7@sqlite3Vdb
mov	eax, DWORD PTR _rc$4[ebp]
jmp	$LN9@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR [edx+56], ecx
mov	eax, DWORD PTR [eax+52]
mov	DWORD PTR [edx+60], eax
cmp	DWORD PTR _res$1[ebp], 0
je	SHORT $LN6@sqlite3Vdb
push	64453					
call	_sqlite3CorruptError
add	esp, 4
jmp	SHORT $LN9@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+26], 1
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+27], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+68], 0
jmp	SHORT $LN5@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN5@sqlite3Vdb
lea	edx, DWORD PTR _hasMoved$2[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeCursorHasMoved
add	esp, 8
mov	DWORD PTR _rc$3[ebp], eax
cmp	DWORD PTR _rc$3[ebp], 0
je	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _rc$3[ebp]
jmp	SHORT $LN9@sqlite3Vdb
cmp	DWORD PTR _hasMoved$2[ebp], 0
je	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+68], 0
cmp	DWORD PTR _hasMoved$2[ebp], 2
jne	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+25], 1
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeFreeCursor PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pCx$[ebp], 0
jne	SHORT $LN5@sqlite3Vdb
jmp	$LN6@sqlite3Vdb
mov	eax, DWORD PTR _pCx$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3VdbeSorterClose
add	esp, 8
mov	eax, DWORD PTR _pCx$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _pCx$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeClose
add	esp, 4
jmp	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _pCx$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _pCx$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3BtreeCloseCursor
add	esp, 4
mov	eax, DWORD PTR _pCx$[ebp]
cmp	DWORD PTR [eax+32], 0
je	SHORT $LN6@sqlite3Vdb
mov	ecx, DWORD PTR _pCx$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pVtabCursor$2[ebp], edx
mov	eax, DWORD PTR _pVtabCursor$2[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pModule$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, -13				
or	ecx, 4
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _pVtabCursor$2[ebp]
push	eax
mov	ecx, DWORD PTR _pModule$1[ebp]
mov	edx, DWORD PTR [ecx+28]
call	edx
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, -13				
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Put4byte PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _v$[ebp]
shr	eax, 24					
mov	ecx, 1
imul	edx, ecx, 0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+edx], al
mov	edx, DWORD PTR _v$[ebp]
shr	edx, 16					
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+eax], dl
mov	edx, DWORD PTR _v$[ebp]
shr	edx, 8
mov	eax, 1
shl	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+eax], dl
mov	edx, 1
imul	eax, edx, 3
mov	ecx, DWORD PTR _p$[ebp]
mov	dl, BYTE PTR _v$[ebp]
mov	BYTE PTR [ecx+eax], dl
pop	ebp
ret	0
ENDP
_sqlite3Get4byte PROC
push	ebp
mov	ebp, esp
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
shl	eax, 24					
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [edx+ecx]
shl	ecx, 16					
or	eax, ecx
mov	edx, 1
shl	edx, 1
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
shl	edx, 8
or	eax, edx
mov	ecx, 1
imul	edx, ecx, 3
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	eax, edx
pop	ebp
ret	0
ENDP
_sqlite3ExprCheckHeight PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 4
imul	eax, edx, 3
mov	ecx, DWORD PTR [ecx+eax+88]
mov	DWORD PTR _mxHeight$[ebp], ecx
mov	edx, DWORD PTR _nHeight$[ebp]
cmp	edx, DWORD PTR _mxHeight$[ebp]
jle	SHORT $LN1@sqlite3Exp
mov	eax, DWORD PTR _mxHeight$[ebp]
push	eax
push	OFFSET $SG103182
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SelectExprHeight PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _nHeight$[ebp], 0
lea	eax, DWORD PTR _nHeight$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_heightOfSelect
add	esp, 8
mov	eax, DWORD PTR _nHeight$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprSetHeight PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_exprSetHeight
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCheckHeight
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3IsMemJournal PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pJfd$[ebp]
cmp	DWORD PTR [eax], OFFSET _MemJournalMethods
jne	SHORT $LN3@sqlite3IsM
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN4@sqlite3IsM
mov	DWORD PTR tv66[ebp], 0
mov	eax, DWORD PTR tv66[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MemJournalSize PROC
push	ebp
mov	ebp, esp
mov	eax, 40					
pop	ebp
ret	0
ENDP
_sqlite3MemJournalOpen PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pJfd$[ebp]
mov	DWORD PTR _p$[ebp], eax
call	_sqlite3MemJournalSize
push	eax
push	0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], OFFSET _MemJournalMethods
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FindInIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 88					
mov	DWORD PTR _eType$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iTab$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
cmp	DWORD PTR _prNotFound$[ebp], 0
jne	SHORT $LN17@sqlite3Fin
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN18@sqlite3Fin
mov	DWORD PTR tv69[ebp], 0
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR _mustBeUnique$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pX$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 2048				
je	SHORT $LN19@sqlite3Fin
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR tv76[ebp], ecx
jmp	SHORT $LN20@sqlite3Fin
mov	DWORD PTR tv76[ebp], 0
mov	edx, DWORD PTR tv76[ebp]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
jne	$LN14@sqlite3Fin
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_isCandidateForInOpt
add	esp, 4
test	eax, eax
je	$LN14@sqlite3Fin
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$8[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+ecx+24]
mov	DWORD PTR _pTab$9[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 24					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+4]
mov	edx, DWORD PTR [ecx+eax]
mov	DWORD PTR _pExpr$6[ebp], edx
mov	eax, DWORD PTR _pExpr$6[ebp]
mov	cx, WORD PTR [eax+32]
mov	WORD PTR _iCol$11[ebp], cx
mov	edx, DWORD PTR _pTab$9[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$8[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	WORD PTR _iDb$12[ebp], ax
movsx	edx, WORD PTR _iDb$12[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
mov	ecx, DWORD PTR _pTab$9[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
mov	eax, DWORD PTR _pTab$9[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
movsx	edx, WORD PTR _iDb$12[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TableLock
add	esp, 20					
movsx	ecx, WORD PTR _iCol$11[ebp]
test	ecx, ecx
jge	SHORT $LN13@sqlite3Fin
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeOnce
add	esp, 4
mov	DWORD PTR _iAddr$5[ebp], eax
push	52					
mov	eax, DWORD PTR _pTab$9[ebp]
push	eax
movsx	ecx, WORD PTR _iDb$12[ebp]
push	ecx
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3OpenTable
add	esp, 20					
mov	DWORD PTR _eType$[ebp], 1
mov	ecx, DWORD PTR _iAddr$5[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN14@sqlite3Fin
mov	eax, DWORD PTR _pExpr$6[ebp]
push	eax
mov	ecx, DWORD PTR _pX$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BinaryCompareCollSeq
add	esp, 12					
mov	DWORD PTR _pReq$3[ebp], eax
movsx	ecx, WORD PTR _iCol$11[ebp]
imul	edx, ecx, 24
mov	eax, DWORD PTR _pTab$9[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+21]
push	edx
mov	eax, DWORD PTR _pX$[ebp]
push	eax
call	_sqlite3IndexAffinityOk
add	esp, 8
mov	DWORD PTR _affinity_ok$4[ebp], eax
mov	ecx, DWORD PTR _pTab$9[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$10[ebp], edx
jmp	SHORT $LN11@sqlite3Fin
mov	eax, DWORD PTR _pIdx$10[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$10[ebp], ecx
cmp	DWORD PTR _pIdx$10[ebp], 0
je	$LN14@sqlite3Fin
cmp	DWORD PTR _eType$[ebp], 0
jne	$LN14@sqlite3Fin
cmp	DWORD PTR _affinity_ok$4[ebp], 0
je	$LN14@sqlite3Fin
mov	edx, 2
imul	eax, edx, 0
mov	ecx, DWORD PTR _pIdx$10[ebp]
mov	edx, DWORD PTR [ecx+4]
movsx	eax, WORD PTR [edx+eax]
movsx	ecx, WORD PTR _iCol$11[ebp]
cmp	eax, ecx
jne	$LN8@sqlite3Fin
push	0
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pIdx$10[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$8[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	eax, BYTE PTR [edx+77]
push	eax
mov	ecx, DWORD PTR _db$8[ebp]
push	ecx
call	_sqlite3FindCollSeq
add	esp, 16					
cmp	eax, DWORD PTR _pReq$3[ebp]
jne	$LN8@sqlite3Fin
cmp	DWORD PTR _mustBeUnique$[ebp], 0
je	SHORT $LN7@sqlite3Fin
mov	edx, DWORD PTR _pIdx$10[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	eax, 1
jne	$LN8@sqlite3Fin
mov	ecx, DWORD PTR _pIdx$10[ebp]
movzx	edx, BYTE PTR [ecx+54]
test	edx, edx
je	$LN8@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeOnce
add	esp, 4
mov	DWORD PTR _iAddr$2[ebp], eax
movsx	ecx, WORD PTR _iDb$12[ebp]
push	ecx
mov	edx, DWORD PTR _pIdx$10[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
push	52					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _pIdx$10[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _pIdx$10[ebp]
mov	edx, DWORD PTR [ecx+28]
movzx	eax, BYTE PTR [edx+eax]
add	eax, 3
mov	DWORD PTR _eType$[ebp], eax
cmp	DWORD PTR _prNotFound$[ebp], 0
je	SHORT $LN6@sqlite3Fin
movsx	ecx, WORD PTR _iCol$11[ebp]
imul	edx, ecx, 24
mov	eax, DWORD PTR _pTab$9[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+20]
test	edx, edx
jne	SHORT $LN6@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv225[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv225[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR _prNotFound$[ebp]
mov	edx, DWORD PTR tv225[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _prNotFound$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _iAddr$2[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN10@sqlite3Fin
cmp	DWORD PTR _eType$[ebp], 0
jne	$LN5@sqlite3Fin
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+424]
mov	DWORD PTR _savedNQueryLoop$1[ebp], eax
mov	DWORD PTR _rMayHaveNull$7[ebp], 0
mov	DWORD PTR _eType$[ebp], 2
cmp	DWORD PTR _prNotFound$[ebp], 0
je	SHORT $LN4@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv237[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv237[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv237[ebp]
mov	DWORD PTR _rMayHaveNull$7[ebp], edx
mov	eax, DWORD PTR _prNotFound$[ebp]
mov	ecx, DWORD PTR _rMayHaveNull$7[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _prNotFound$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN3@sqlite3Fin
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+424], 0
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+12]
movsx	edx, WORD PTR [ecx+32]
test	edx, edx
jge	SHORT $LN3@sqlite3Fin
mov	eax, DWORD PTR _pX$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 2048				
jne	SHORT $LN3@sqlite3Fin
mov	DWORD PTR _eType$[ebp], 1
cmp	DWORD PTR _eType$[ebp], 1
jne	SHORT $LN21@sqlite3Fin
mov	DWORD PTR tv252[ebp], 1
jmp	SHORT $LN22@sqlite3Fin
mov	DWORD PTR tv252[ebp], 0
mov	edx, DWORD PTR tv252[ebp]
push	edx
mov	eax, DWORD PTR _rMayHaveNull$7[ebp]
push	eax
mov	ecx, DWORD PTR _pX$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeSubselect
add	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _savedNQueryLoop$1[ebp]
mov	DWORD PTR [eax+424], ecx
jmp	SHORT $LN1@sqlite3Fin
mov	edx, DWORD PTR _pX$[ebp]
mov	eax, DWORD PTR _iTab$[ebp]
mov	DWORD PTR [edx+28], eax
mov	eax, DWORD PTR _eType$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3EndBenignMalloc PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _sqlite3Hooks+4, 0
je	SHORT $LN2@sqlite3End
call	DWORD PTR _sqlite3Hooks+4
pop	ebp
ret	0
ENDP
_sqlite3BeginBenignMalloc PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _sqlite3Hooks, 0
je	SHORT $LN2@sqlite3Beg
call	DWORD PTR _sqlite3Hooks
pop	ebp
ret	0
ENDP
_sqlite3FkLocateIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
push	esi
mov	DWORD PTR _pIdx$[ebp], 0
mov	DWORD PTR _aiCol$[ebp], 0
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _nCol$[ebp], ecx
mov	edx, 8
imul	eax, edx, 0
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx+eax+40]
mov	DWORD PTR _zKey$[ebp], edx
cmp	DWORD PTR _nCol$[ebp], 1
jne	SHORT $LN32@sqlite3FkL
mov	eax, DWORD PTR _pParent$[ebp]
movsx	ecx, WORD PTR [eax+36]
test	ecx, ecx
jl	SHORT $LN31@sqlite3FkL
cmp	DWORD PTR _zKey$[ebp], 0
jne	SHORT $LN30@sqlite3FkL
xor	eax, eax
jmp	$LN33@sqlite3FkL
mov	edx, DWORD PTR _zKey$[ebp]
push	edx
mov	eax, DWORD PTR _pParent$[ebp]
movsx	ecx, WORD PTR [eax+36]
imul	edx, ecx, 24
mov	eax, DWORD PTR _pParent$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN31@sqlite3FkL
xor	eax, eax
jmp	$LN33@sqlite3FkL
jmp	SHORT $LN28@sqlite3FkL
cmp	DWORD PTR _paiCol$[ebp], 0
je	SHORT $LN28@sqlite3FkL
mov	eax, DWORD PTR _nCol$[ebp]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aiCol$[ebp], eax
cmp	DWORD PTR _aiCol$[ebp], 0
jne	SHORT $LN26@sqlite3FkL
mov	eax, 1
jmp	$LN33@sqlite3FkL
mov	eax, DWORD PTR _paiCol$[ebp]
mov	ecx, DWORD PTR _aiCol$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$[ebp], eax
jmp	SHORT $LN25@sqlite3FkL
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$[ebp], edx
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN23@sqlite3FkL
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	ecx, DWORD PTR _nCol$[ebp]
jne	$LN22@sqlite3FkL
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, BYTE PTR [edx+54]
test	eax, eax
je	$LN22@sqlite3FkL
cmp	DWORD PTR _zKey$[ebp], 0
jne	SHORT $LN21@sqlite3FkL
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
jne	SHORT $LN20@sqlite3FkL
cmp	DWORD PTR _aiCol$[ebp], 0
je	SHORT $LN19@sqlite3FkL
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN18@sqlite3FkL
mov	eax, DWORD PTR _i$3[ebp]
add	eax, 1
mov	DWORD PTR _i$3[ebp], eax
mov	ecx, DWORD PTR _i$3[ebp]
cmp	ecx, DWORD PTR _nCol$[ebp]
jge	SHORT $LN19@sqlite3FkL
mov	edx, DWORD PTR _i$3[ebp]
mov	eax, DWORD PTR _aiCol$[ebp]
mov	ecx, DWORD PTR _i$3[ebp]
mov	esi, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [esi+ecx*8+36]
mov	DWORD PTR [eax+edx*4], ecx
jmp	SHORT $LN17@sqlite3FkL
jmp	$LN23@sqlite3FkL
jmp	$LN22@sqlite3FkL
mov	DWORD PTR _i$5[ebp], 0
jmp	SHORT $LN14@sqlite3FkL
mov	edx, DWORD PTR _i$5[ebp]
add	edx, 1
mov	DWORD PTR _i$5[ebp], edx
mov	eax, DWORD PTR _i$5[ebp]
cmp	eax, DWORD PTR _nCol$[ebp]
jge	$LN12@sqlite3FkL
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$5[ebp]
mov	cx, WORD PTR [edx+eax*2]
mov	WORD PTR _iCol$6[ebp], cx
movsx	edx, WORD PTR _iCol$6[ebp]
imul	eax, edx, 24
mov	ecx, DWORD PTR _pParent$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+16]
mov	DWORD PTR _zDfltColl$2[ebp], eax
cmp	DWORD PTR _zDfltColl$2[ebp], 0
jne	SHORT $LN11@sqlite3FkL
mov	DWORD PTR _zDfltColl$2[ebp], OFFSET $SG109666
mov	ecx, DWORD PTR _zDfltColl$2[ebp]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _i$5[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN10@sqlite3FkL
jmp	SHORT $LN12@sqlite3FkL
movsx	eax, WORD PTR _iCol$6[ebp]
imul	ecx, eax, 24
mov	edx, DWORD PTR _pParent$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zIdxCol$1[ebp], ecx
mov	DWORD PTR _j$4[ebp], 0
jmp	SHORT $LN9@sqlite3FkL
mov	edx, DWORD PTR _j$4[ebp]
add	edx, 1
mov	DWORD PTR _j$4[ebp], edx
mov	eax, DWORD PTR _j$4[ebp]
cmp	eax, DWORD PTR _nCol$[ebp]
jge	SHORT $LN7@sqlite3FkL
mov	ecx, DWORD PTR _zIdxCol$1[ebp]
push	ecx
mov	edx, DWORD PTR _j$4[ebp]
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+edx*8+40]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN6@sqlite3FkL
cmp	DWORD PTR _aiCol$[ebp], 0
je	SHORT $LN5@sqlite3FkL
mov	edx, DWORD PTR _i$5[ebp]
mov	eax, DWORD PTR _aiCol$[ebp]
mov	ecx, DWORD PTR _j$4[ebp]
mov	esi, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [esi+ecx*8+36]
mov	DWORD PTR [eax+edx*4], ecx
jmp	SHORT $LN7@sqlite3FkL
jmp	SHORT $LN8@sqlite3FkL
mov	edx, DWORD PTR _j$4[ebp]
cmp	edx, DWORD PTR _nCol$[ebp]
jne	SHORT $LN4@sqlite3FkL
jmp	SHORT $LN12@sqlite3FkL
jmp	$LN13@sqlite3FkL
mov	eax, DWORD PTR _i$5[ebp]
cmp	eax, DWORD PTR _nCol$[ebp]
jne	SHORT $LN22@sqlite3FkL
jmp	SHORT $LN23@sqlite3FkL
jmp	$LN24@sqlite3FkL
cmp	DWORD PTR _pIdx$[ebp], 0
jne	SHORT $LN2@sqlite3FkL
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+438]
test	edx, edx
jne	SHORT $LN1@sqlite3FkL
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG109677
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 16					
mov	eax, DWORD PTR _aiCol$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, 1
jmp	SHORT $LN33@sqlite3FkL
mov	eax, DWORD PTR _ppIdx$[ebp]
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [eax], ecx
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FkDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pFKey$[ebp], ecx
jmp	SHORT $LN8@sqlite3FkD
mov	edx, DWORD PTR _pNext$[ebp]
mov	DWORD PTR _pFKey$[ebp], edx
cmp	DWORD PTR _pFKey$[ebp], 0
je	$LN9@sqlite3FkD
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN4@sqlite3FkD
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+512], 0
jne	$LN5@sqlite3FkD
mov	ecx, DWORD PTR _pFKey$[ebp]
cmp	DWORD PTR [ecx+16], 0
je	SHORT $LN3@sqlite3FkD
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax+12], edx
jmp	SHORT $LN2@sqlite3FkD
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _p$2[ebp], ecx
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN11@sqlite3FkD
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR tv79[ebp], ecx
jmp	SHORT $LN12@sqlite3FkD
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR tv79[ebp], eax
mov	ecx, DWORD PTR tv79[ebp]
mov	DWORD PTR _z$1[ebp], ecx
mov	edx, DWORD PTR _p$2[ebp]
push	edx
mov	eax, DWORD PTR _z$1[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	ecx, DWORD PTR _z$1[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 56					
push	eax
call	_sqlite3HashInsert
add	esp, 16					
mov	ecx, DWORD PTR _pFKey$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN5@sqlite3FkD
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR [eax+16], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+ecx+28]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_fkTriggerDelete
add	esp, 8
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+edx+28]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_fkTriggerDelete
add	esp, 8
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pNext$[ebp], ecx
mov	edx, DWORD PTR _pFKey$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	$LN7@sqlite3FkD
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FkReferences PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	edx, DWORD PTR _nName$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 56					
push	eax
call	_sqlite3HashFind
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FkOldmask PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _mask$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 524288				
je	$LN14@sqlite3FkO
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _p$3[ebp], ecx
jmp	SHORT $LN13@sqlite3FkO
mov	edx, DWORD PTR _p$3[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _p$3[ebp], eax
cmp	DWORD PTR _p$3[ebp], 0
je	SHORT $LN11@sqlite3FkO
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN10@sqlite3FkO
mov	ecx, DWORD PTR _i$2[ebp]
add	ecx, 1
mov	DWORD PTR _i$2[ebp], ecx
mov	edx, DWORD PTR _p$3[ebp]
mov	eax, DWORD PTR _i$2[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN8@sqlite3FkO
mov	ecx, DWORD PTR _i$2[ebp]
mov	edx, DWORD PTR _p$3[ebp]
cmp	DWORD PTR [edx+ecx*8+36], 31		
jle	SHORT $LN17@sqlite3FkO
mov	DWORD PTR tv84[ebp], -1
jmp	SHORT $LN18@sqlite3FkO
mov	eax, DWORD PTR _i$2[ebp]
mov	ecx, DWORD PTR _p$3[ebp]
mov	edx, 1
mov	ecx, DWORD PTR [ecx+eax*8+36]
shl	edx, cl
mov	DWORD PTR tv84[ebp], edx
mov	eax, DWORD PTR _mask$[ebp]
or	eax, DWORD PTR tv84[ebp]
mov	DWORD PTR _mask$[ebp], eax
jmp	SHORT $LN9@sqlite3FkO
jmp	SHORT $LN12@sqlite3FkO
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_sqlite3FkReferences
add	esp, 4
mov	DWORD PTR _p$3[ebp], eax
jmp	SHORT $LN7@sqlite3FkO
mov	edx, DWORD PTR _p$3[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _p$3[ebp], eax
cmp	DWORD PTR _p$3[ebp], 0
je	$LN14@sqlite3FkO
mov	DWORD PTR _pIdx$1[ebp], 0
push	0
lea	ecx, DWORD PTR _pIdx$1[ebp]
push	ecx
mov	edx, DWORD PTR _p$3[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FkLocateIndex
add	esp, 20					
cmp	DWORD PTR _pIdx$1[ebp], 0
je	SHORT $LN4@sqlite3FkO
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN3@sqlite3FkO
mov	edx, DWORD PTR _i$2[ebp]
add	edx, 1
mov	DWORD PTR _i$2[ebp], edx
mov	eax, DWORD PTR _pIdx$1[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _i$2[ebp], ecx
jge	SHORT $LN4@sqlite3FkO
mov	edx, DWORD PTR _pIdx$1[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _i$2[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
cmp	edx, 31					
jle	SHORT $LN19@sqlite3FkO
mov	DWORD PTR tv142[ebp], -1
jmp	SHORT $LN20@sqlite3FkO
mov	eax, DWORD PTR _pIdx$1[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$2[ebp]
movsx	ecx, WORD PTR [ecx+edx*2]
mov	eax, 1
shl	eax, cl
mov	DWORD PTR tv142[ebp], eax
mov	ecx, DWORD PTR _mask$[ebp]
or	ecx, DWORD PTR tv142[ebp]
mov	DWORD PTR _mask$[ebp], ecx
jmp	SHORT $LN2@sqlite3FkO
jmp	$LN6@sqlite3FkO
mov	eax, DWORD PTR _mask$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FkRequired PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 524288				
je	$LN11@sqlite3FkR
cmp	DWORD PTR _aChange$[ebp], 0
jne	SHORT $LN10@sqlite3FkR
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_sqlite3FkReferences
add	esp, 4
test	eax, eax
jne	SHORT $LN14@sqlite3FkR
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+16], 0
jne	SHORT $LN14@sqlite3FkR
mov	DWORD PTR tv74[ebp], 0
jmp	SHORT $LN15@sqlite3FkR
mov	DWORD PTR tv74[ebp], 1
mov	eax, DWORD PTR tv74[ebp]
jmp	$LN12@sqlite3FkR
jmp	$LN11@sqlite3FkR
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _p$1[ebp], eax
jmp	SHORT $LN8@sqlite3FkR
mov	ecx, DWORD PTR _p$1[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _p$1[ebp], edx
cmp	DWORD PTR _p$1[ebp], 0
je	SHORT $LN6@sqlite3FkR
mov	eax, DWORD PTR _chngRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _aChange$[ebp]
push	ecx
mov	edx, DWORD PTR _p$1[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_fkChildIsModified
add	esp, 16					
test	eax, eax
je	SHORT $LN5@sqlite3FkR
mov	eax, 1
jmp	SHORT $LN12@sqlite3FkR
jmp	SHORT $LN7@sqlite3FkR
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_sqlite3FkReferences
add	esp, 4
mov	DWORD PTR _p$1[ebp], eax
jmp	SHORT $LN4@sqlite3FkR
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _p$1[ebp], eax
cmp	DWORD PTR _p$1[ebp], 0
je	SHORT $LN11@sqlite3FkR
mov	ecx, DWORD PTR _chngRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _aChange$[ebp]
push	edx
mov	eax, DWORD PTR _p$1[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_fkParentIsModified
add	esp, 16					
test	eax, eax
je	SHORT $LN1@sqlite3FkR
mov	eax, 1
jmp	SHORT $LN12@sqlite3FkR
jmp	SHORT $LN3@sqlite3FkR
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FkActions PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 524288				
je	$LN8@sqlite3FkA
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_sqlite3FkReferences
add	esp, 4
mov	DWORD PTR _pFKey$2[ebp], eax
jmp	SHORT $LN6@sqlite3FkA
mov	ecx, DWORD PTR _pFKey$2[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pFKey$2[ebp], edx
cmp	DWORD PTR _pFKey$2[ebp], 0
je	SHORT $LN8@sqlite3FkA
cmp	DWORD PTR _aChange$[ebp], 0
je	SHORT $LN2@sqlite3FkA
mov	eax, DWORD PTR _bChngRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _aChange$[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$2[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_fkParentIsModified
add	esp, 16					
test	eax, eax
je	SHORT $LN3@sqlite3FkA
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$2[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_fkActionTrigger
add	esp, 16					
mov	DWORD PTR _pAct$1[ebp], eax
cmp	DWORD PTR _pAct$1[ebp], 0
je	SHORT $LN3@sqlite3FkA
push	0
push	2
mov	edx, DWORD PTR _regOld$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pAct$1[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeRowTriggerDirect
add	esp, 24					
jmp	SHORT $LN5@sqlite3FkA
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FkDropTable PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 524288				
je	$LN11@sqlite3FkD
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
jne	$LN11@sqlite3FkD
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	$LN11@sqlite3FkD
mov	DWORD PTR _iSkip$1[ebp], 0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$2[ebp], eax
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
call	_sqlite3FkReferences
add	esp, 4
test	eax, eax
jne	SHORT $LN9@sqlite3FkD
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _p$3[ebp], ecx
jmp	SHORT $LN8@sqlite3FkD
mov	edx, DWORD PTR _p$3[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _p$3[ebp], eax
cmp	DWORD PTR _p$3[ebp], 0
je	SHORT $LN6@sqlite3FkD
mov	ecx, DWORD PTR _p$3[ebp]
movzx	edx, BYTE PTR [ecx+24]
test	edx, edx
jne	SHORT $LN4@sqlite3FkD
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 16777216				
je	SHORT $LN5@sqlite3FkD
jmp	SHORT $LN6@sqlite3FkD
jmp	SHORT $LN7@sqlite3FkD
cmp	DWORD PTR _p$3[ebp], 0
jne	SHORT $LN3@sqlite3FkD
jmp	$LN11@sqlite3FkD
mov	edx, DWORD PTR _v$2[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iSkip$1[ebp], eax
mov	eax, DWORD PTR _iSkip$1[ebp]
push	eax
push	1
push	131					
mov	ecx, DWORD PTR _v$2[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [edx+438], 1
push	0
push	0
mov	eax, DWORD PTR _pName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListDup
add	esp, 12					
push	eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3DeleteFrom
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+438], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 16777216				
jne	SHORT $LN2@sqlite3FkD
mov	eax, DWORD PTR _v$2[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 2
push	eax
push	0
push	131					
mov	ecx, DWORD PTR _v$2[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	4
push	-2					
push	0
push	2
push	787					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3HaltConstraint
add	esp, 24					
cmp	DWORD PTR _iSkip$1[ebp], 0
je	SHORT $LN11@sqlite3FkD
mov	eax, DWORD PTR _iSkip$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$2[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FkCheck PROC
push	ebp
mov	ebp, esp
sub	esp, 92					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+438]
mov	DWORD PTR _isIgnoreErrors$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 524288				
jne	SHORT $LN35@sqlite3FkC
jmp	$LN36@sqlite3FkC
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zDb$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pFKey$[ebp], edx
jmp	SHORT $LN34@sqlite3FkC
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pFKey$[ebp], ecx
cmp	DWORD PTR _pFKey$[ebp], 0
je	$LN32@sqlite3FkC
mov	DWORD PTR _pIdx$12[ebp], 0
mov	DWORD PTR _aiFree$10[ebp], 0
mov	DWORD PTR _isIgnore$7[ebp], 0
cmp	DWORD PTR _aChange$[ebp], 0
je	SHORT $LN31@sqlite3FkC
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN31@sqlite3FkC
mov	eax, DWORD PTR _bChngRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _aChange$[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_fkChildIsModified
add	esp, 16					
test	eax, eax
jne	SHORT $LN31@sqlite3FkC
jmp	SHORT $LN33@sqlite3FkC
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+438]
test	edx, edx
je	SHORT $LN30@sqlite3FkC
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTo$15[ebp], eax
jmp	SHORT $LN29@sqlite3FkC
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateTable
add	esp, 16					
mov	DWORD PTR _pTo$15[ebp], eax
cmp	DWORD PTR _pTo$15[ebp], 0
je	SHORT $LN27@sqlite3FkC
lea	edx, DWORD PTR _aiFree$10[ebp]
push	edx
lea	eax, DWORD PTR _pIdx$12[ebp]
push	eax
mov	ecx, DWORD PTR _pFKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pTo$15[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkLocateIndex
add	esp, 20					
test	eax, eax
je	$LN28@sqlite3FkC
cmp	DWORD PTR _isIgnoreErrors$[ebp], 0
je	SHORT $LN25@sqlite3FkC
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN26@sqlite3FkC
jmp	$LN36@sqlite3FkC
cmp	DWORD PTR _pTo$15[ebp], 0
jne	$LN24@sqlite3FkC
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$8[ebp], eax
mov	ecx, DWORD PTR _v$8[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	edx, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [edx+20]
lea	edx, DWORD PTR [eax+ecx+1]
mov	DWORD PTR _iJump$5[ebp], edx
mov	DWORD PTR _i$16[ebp], 0
jmp	SHORT $LN23@sqlite3FkC
mov	eax, DWORD PTR _i$16[ebp]
add	eax, 1
mov	DWORD PTR _i$16[ebp], eax
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR _i$16[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN21@sqlite3FkC
mov	eax, DWORD PTR _i$16[ebp]
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx+eax*8+36]
mov	eax, DWORD PTR _regOld$[ebp]
lea	ecx, DWORD PTR [edx+eax+1]
mov	DWORD PTR _iReg$4[ebp], ecx
mov	edx, DWORD PTR _iJump$5[ebp]
push	edx
mov	eax, DWORD PTR _iReg$4[ebp]
push	eax
push	76					
mov	ecx, DWORD PTR _v$8[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN22@sqlite3FkC
push	-1
mov	edx, DWORD PTR _pFKey$[ebp]
movzx	eax, BYTE PTR [edx+24]
push	eax
push	130					
mov	ecx, DWORD PTR _v$8[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN33@sqlite3FkC
cmp	DWORD PTR _aiFree$10[ebp], 0
je	SHORT $LN20@sqlite3FkC
mov	edx, DWORD PTR _aiFree$10[ebp]
mov	DWORD PTR _aiCol$13[ebp], edx
jmp	SHORT $LN19@sqlite3FkC
mov	eax, 8
imul	ecx, eax, 0
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+ecx+36]
mov	DWORD PTR _iCol$3[ebp], eax
lea	ecx, DWORD PTR _iCol$3[ebp]
mov	DWORD PTR _aiCol$13[ebp], ecx
mov	DWORD PTR _i$16[ebp], 0
jmp	SHORT $LN18@sqlite3FkC
mov	edx, DWORD PTR _i$16[ebp]
add	edx, 1
mov	DWORD PTR _i$16[ebp], edx
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR _i$16[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	$LN16@sqlite3FkC
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
mov	ecx, DWORD PTR _i$16[ebp]
mov	edx, DWORD PTR _aiCol$13[ebp]
cmp	DWORD PTR [edx+ecx*4], eax
jne	SHORT $LN15@sqlite3FkC
mov	eax, DWORD PTR _i$16[ebp]
mov	ecx, DWORD PTR _aiCol$13[ebp]
mov	DWORD PTR [ecx+eax*4], -1
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+276], 0
je	SHORT $LN14@sqlite3FkC
cmp	DWORD PTR _pIdx$12[ebp], 0
je	SHORT $LN38@sqlite3FkC
mov	eax, DWORD PTR _pIdx$12[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$16[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	DWORD PTR tv204[ebp], eax
jmp	SHORT $LN39@sqlite3FkC
mov	ecx, DWORD PTR _pTo$15[ebp]
movsx	edx, WORD PTR [ecx+36]
mov	DWORD PTR tv204[ebp], edx
imul	eax, DWORD PTR tv204[ebp], 24
mov	ecx, DWORD PTR _pTo$15[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zCol$2[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _zCol$2[ebp]
push	edx
mov	eax, DWORD PTR _pTo$15[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthReadCol
add	esp, 16					
mov	DWORD PTR _rcauth$1[ebp], eax
cmp	DWORD PTR _rcauth$1[ebp], 2
jne	SHORT $LN40@sqlite3FkC
mov	DWORD PTR tv215[ebp], 1
jmp	SHORT $LN41@sqlite3FkC
mov	DWORD PTR tv215[ebp], 0
mov	eax, DWORD PTR tv215[ebp]
mov	DWORD PTR _isIgnore$7[ebp], eax
jmp	$LN17@sqlite3FkC
mov	ecx, DWORD PTR _pTo$15[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
mov	eax, DWORD PTR _pTo$15[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TableLock
add	esp, 20					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
cmp	DWORD PTR _regOld$[ebp], 0
je	SHORT $LN13@sqlite3FkC
mov	ecx, DWORD PTR _isIgnore$7[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _regOld$[ebp]
push	edx
mov	eax, DWORD PTR _aiCol$13[ebp]
push	eax
mov	ecx, DWORD PTR _pFKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pIdx$12[ebp]
push	edx
mov	eax, DWORD PTR _pTo$15[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_fkLookupParent
add	esp, 36					
cmp	DWORD PTR _regNew$[ebp], 0
je	SHORT $LN12@sqlite3FkC
mov	eax, DWORD PTR _isIgnore$7[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _regNew$[ebp]
push	ecx
mov	edx, DWORD PTR _aiCol$13[ebp]
push	edx
mov	eax, DWORD PTR _pFKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$12[ebp]
push	ecx
mov	edx, DWORD PTR _pTo$15[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_fkLookupParent
add	esp, 36					
mov	edx, DWORD PTR _aiFree$10[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	$LN33@sqlite3FkC
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_sqlite3FkReferences
add	esp, 4
mov	DWORD PTR _pFKey$[ebp], eax
jmp	SHORT $LN11@sqlite3FkC
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pFKey$[ebp], eax
cmp	DWORD PTR _pFKey$[ebp], 0
je	$LN36@sqlite3FkC
mov	DWORD PTR _pIdx$6[ebp], 0
mov	DWORD PTR _aiCol$9[ebp], 0
cmp	DWORD PTR _aChange$[ebp], 0
je	SHORT $LN8@sqlite3FkC
mov	ecx, DWORD PTR _bChngRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _aChange$[ebp]
push	edx
mov	eax, DWORD PTR _pFKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_fkParentIsModified
add	esp, 16					
test	eax, eax
jne	SHORT $LN8@sqlite3FkC
jmp	SHORT $LN10@sqlite3FkC
mov	edx, DWORD PTR _pFKey$[ebp]
movzx	eax, BYTE PTR [edx+24]
test	eax, eax
jne	SHORT $LN7@sqlite3FkC
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 16777216				
jne	SHORT $LN7@sqlite3FkC
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
jne	SHORT $LN7@sqlite3FkC
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+20]
test	edx, edx
jne	SHORT $LN7@sqlite3FkC
jmp	SHORT $LN10@sqlite3FkC
lea	eax, DWORD PTR _aiCol$9[ebp]
push	eax
lea	ecx, DWORD PTR _pIdx$6[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FkLocateIndex
add	esp, 20					
test	eax, eax
je	SHORT $LN6@sqlite3FkC
cmp	DWORD PTR _isIgnoreErrors$[ebp], 0
je	SHORT $LN4@sqlite3FkC
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN5@sqlite3FkC
jmp	$LN36@sqlite3FkC
jmp	$LN10@sqlite3FkC
push	0
push	0
push	0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListAppend
add	esp, 16					
mov	DWORD PTR _pSrc$11[ebp], eax
cmp	DWORD PTR _pSrc$11[ebp], 0
je	$LN3@sqlite3FkC
mov	edx, DWORD PTR _pSrc$11[ebp]
add	edx, 8
mov	DWORD PTR _pItem$14[ebp], edx
mov	eax, DWORD PTR _pItem$14[ebp]
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _pItem$14[ebp]
mov	eax, DWORD PTR [ecx]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pItem$14[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	ax, WORD PTR [edx+40]
add	ax, 1
mov	ecx, DWORD PTR _pItem$14[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	WORD PTR [edx+40], ax
mov	eax, DWORD PTR _pItem$14[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR [eax+48], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
cmp	DWORD PTR _regNew$[ebp], 0
je	SHORT $LN2@sqlite3FkC
push	-1
mov	eax, DWORD PTR _regNew$[ebp]
push	eax
mov	ecx, DWORD PTR _aiCol$9[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$6[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pSrc$11[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_fkScanChildren
add	esp, 32					
cmp	DWORD PTR _regOld$[ebp], 0
je	SHORT $LN1@sqlite3FkC
push	1
mov	ecx, DWORD PTR _regOld$[ebp]
push	ecx
mov	edx, DWORD PTR _aiCol$9[ebp]
push	edx
mov	eax, DWORD PTR _pFKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$6[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pSrc$11[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_fkScanChildren
add	esp, 32					
mov	edx, DWORD PTR _pItem$14[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _pSrc$11[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListDelete
add	esp, 8
mov	edx, DWORD PTR _aiCol$9[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	$LN10@sqlite3FkC
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WithPush PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pWith$[ebp], 0
je	SHORT $LN2@sqlite3Wit
mov	eax, DWORD PTR _pWith$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+532]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _pWith$[ebp]
mov	DWORD PTR [eax+532], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	al, BYTE PTR _bFree$[ebp]
mov	BYTE PTR [edx+449], al
pop	ebp
ret	0
ENDP
_sqlite3WithDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pWith$[ebp], 0
je	SHORT $LN5@sqlite3Wit
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN3@sqlite3Wit
mov	eax, DWORD PTR _i$2[ebp]
add	eax, 1
mov	DWORD PTR _i$2[ebp], eax
mov	ecx, DWORD PTR _pWith$[ebp]
mov	edx, DWORD PTR _i$2[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN1@sqlite3Wit
mov	eax, DWORD PTR _i$2[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _pWith$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _pCte$1[ebp], edx
mov	eax, DWORD PTR _pCte$1[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _pCte$1[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _pCte$1[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Wit
mov	eax, DWORD PTR _pWith$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WithAdd PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pName$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN9@sqlite3Wit
cmp	DWORD PTR _pWith$[ebp], 0
je	SHORT $LN9@sqlite3Wit
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN8@sqlite3Wit
mov	edx, DWORD PTR _i$2[ebp]
add	edx, 1
mov	DWORD PTR _i$2[ebp], edx
mov	eax, DWORD PTR _pWith$[ebp]
mov	ecx, DWORD PTR _i$2[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN9@sqlite3Wit
mov	edx, DWORD PTR _i$2[ebp]
shl	edx, 4
mov	eax, DWORD PTR _pWith$[ebp]
mov	ecx, DWORD PTR [eax+edx+8]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN5@sqlite3Wit
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG107904
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN7@sqlite3Wit
cmp	DWORD PTR _pWith$[ebp], 0
je	SHORT $LN4@sqlite3Wit
mov	edx, DWORD PTR _pWith$[ebp]
mov	eax, DWORD PTR [edx]
shl	eax, 4
add	eax, 24					
mov	DWORD PTR _nByte$1[ebp], eax
mov	ecx, DWORD PTR _nByte$1[ebp]
push	ecx
mov	edx, DWORD PTR _pWith$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _pNew$[ebp], eax
jmp	SHORT $LN3@sqlite3Wit
push	24					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN2@sqlite3Wit
mov	edx, DWORD PTR _pArglist$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	ecx, DWORD PTR _pQuery$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pWith$[ebp]
mov	DWORD PTR _pNew$[ebp], edx
jmp	SHORT $LN1@sqlite3Wit
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 4
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pQuery$[ebp]
mov	DWORD PTR [edx+ecx+16], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 4
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _pArglist$[ebp]
mov	DWORD PTR [eax+edx+12], ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx]
shl	eax, 4
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _zName$[ebp]
mov	DWORD PTR [ecx+eax+8], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 4
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+ecx+20], 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalDefaultHook PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _nFrame$[ebp]
cmp	eax, DWORD PTR _pClientData$[ebp]
jl	SHORT $LN1@sqlite3Wal
call	_sqlite3BeginBenignMalloc
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_wal_checkpoint
add	esp, 8
call	_sqlite3EndBenignMalloc
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3Checkpoint PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _bBusy$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@sqlite3Che
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN4@sqlite3Che
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@sqlite3Che
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _iDb$[ebp]
je	SHORT $LN2@sqlite3Che
cmp	DWORD PTR _iDb$[ebp], 10		
jne	SHORT $LN3@sqlite3Che
mov	ecx, DWORD PTR _pnCkpt$[ebp]
push	ecx
mov	edx, DWORD PTR _pnLog$[ebp]
push	edx
mov	eax, DWORD PTR _eMode$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreeCheckpoint
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _pnLog$[ebp], 0
mov	DWORD PTR _pnCkpt$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 5
jne	SHORT $LN3@sqlite3Che
mov	DWORD PTR _bBusy$[ebp], 1
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN5@sqlite3Che
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN9@sqlite3Che
cmp	DWORD PTR _bBusy$[ebp], 0
je	SHORT $LN9@sqlite3Che
mov	DWORD PTR tv82[ebp], 5
jmp	SHORT $LN10@sqlite3Che
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR tv82[ebp], edx
mov	eax, DWORD PTR tv82[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3JournalModename PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _eMode$[ebp], 6
jne	SHORT $LN1@sqlite3Jou
xor	eax, eax
jmp	SHORT $LN2@sqlite3Jou
mov	eax, DWORD PTR _eMode$[ebp]
mov	eax, DWORD PTR ?azModeName@?1??sqlite3JournalModename@@9@9[eax*4]
pop	ebp
ret	0
ENDP
_sqlite3TempInMemory PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+63]
cmp	ecx, 2
jne	SHORT $LN3@sqlite3Tem
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@sqlite3Tem
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BinaryCompareCollSeq PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pLeft$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 256				
je	SHORT $LN5@sqlite3Bin
mov	edx, DWORD PTR _pLeft$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
jmp	SHORT $LN4@sqlite3Bin
cmp	DWORD PTR _pRight$[ebp], 0
je	SHORT $LN3@sqlite3Bin
mov	ecx, DWORD PTR _pRight$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 256				
je	SHORT $LN3@sqlite3Bin
mov	eax, DWORD PTR _pRight$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
jmp	SHORT $LN4@sqlite3Bin
mov	edx, DWORD PTR _pLeft$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
jne	SHORT $LN4@sqlite3Bin
mov	ecx, DWORD PTR _pRight$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$[ebp], eax
mov	eax, DWORD PTR _pColl$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprListCheckLength PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR [ecx+edx+88]
mov	DWORD PTR _mx$[ebp], eax
cmp	DWORD PTR _pEList$[ebp], 0
je	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _mx$[ebp]
jle	SHORT $LN2@sqlite3Exp
mov	eax, DWORD PTR _zObject$[ebp]
push	eax
push	OFFSET $SG103631
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Reprepare PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_sql
add	esp, 4
mov	DWORD PTR _zSql$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeDb
add	esp, 4
mov	DWORD PTR _db$[ebp], eax
push	0
lea	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
push	0
push	-1
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3LockAndPrepare
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3Rep
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN2@sqlite3Rep
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN4@sqlite3Rep
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
call	_sqlite3VdbeSwap
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
call	_sqlite3TransferBindings
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
call	_sqlite3VdbeResetStepResult
add	esp, 4
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
call	_sqlite3VdbeFinalize
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ParserReset PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pParse$[ebp], 0
je	SHORT $LN2@sqlite3Par
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$1[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+112]
push	eax
mov	ecx, DWORD PTR _db$1[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+316]
push	eax
mov	ecx, DWORD PTR _db$1[ebp]
push	ecx
call	_sqlite3ExprListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TransferBindings PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pFromStmt$[ebp]
mov	DWORD PTR _pFrom$[ebp], eax
mov	ecx, DWORD PTR _pToStmt$[ebp]
mov	DWORD PTR _pTo$[ebp], ecx
mov	edx, DWORD PTR _pTo$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Tra
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pFrom$[ebp]
movsx	ecx, WORD PTR [eax+68]
cmp	DWORD PTR _i$[ebp], ecx
jge	SHORT $LN1@sqlite3Tra
imul	edx, DWORD PTR _i$[ebp], 40
mov	eax, DWORD PTR _pFrom$[ebp]
add	edx, DWORD PTR [eax+60]
push	edx
imul	ecx, DWORD PTR _i$[ebp], 40
mov	edx, DWORD PTR _pTo$[ebp]
add	ecx, DWORD PTR [edx+60]
push	ecx
call	_sqlite3VdbeMemMove
add	esp, 8
jmp	SHORT $LN2@sqlite3Tra
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeParameterIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN6@sqlite3Vdb
xor	eax, eax
jmp	SHORT $LN7@sqlite3Vdb
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN5@sqlite3Vdb
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+70]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _z$1[ebp], eax
cmp	DWORD PTR _z$1[ebp], 0
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _nName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _z$1[ebp]
push	eax
call	_strncmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _z$1[ebp]
add	ecx, DWORD PTR _nName$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
jne	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
jmp	SHORT $LN7@sqlite3Vdb
jmp	SHORT $LN3@sqlite3Vdb
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3StmtCurrentTime PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	DWORD PTR tv80[ebp], edx
mov	eax, DWORD PTR tv80[ebp]
mov	ecx, DWORD PTR tv80[ebp]
mov	edx, DWORD PTR [eax+136]
or	edx, DWORD PTR [ecx+140]
jne	SHORT $LN2@sqlite3Stm
mov	eax, DWORD PTR _v$[ebp]
add	eax, 136				
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3OsCurrentTimeInt64
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3Stm
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx+136], 0
mov	DWORD PTR [ecx+140], 0
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [edx+136]
mov	edx, DWORD PTR [edx+140]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3InvalidFunction PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _context$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _zName$[ebp], edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG99249
call	_sqlite3_mprintf
add	esp, 8
mov	DWORD PTR _zErr$[ebp], eax
push	-1
mov	ecx, DWORD PTR _zErr$[ebp]
push	ecx
mov	edx, DWORD PTR _context$[ebp]
push	edx
call	_sqlite3_result_error
add	esp, 12					
mov	eax, DWORD PTR _zErr$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabOverloadFunction PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
push	esi
push	edi
mov	DWORD PTR _xFunc$[ebp], 0
mov	DWORD PTR _pArg$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN11@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
jmp	$LN12@sqlite3Vta
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
je	SHORT $LN10@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
jmp	$LN12@sqlite3Vta
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN9@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
jmp	$LN12@sqlite3Vta
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
jne	SHORT $LN8@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
jmp	$LN12@sqlite3Vta
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3GetVTable
add	esp, 8
mov	edx, DWORD PTR [eax+8]
mov	DWORD PTR _pVtab$[ebp], edx
mov	eax, DWORD PTR _pVtab$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pMod$[ebp], ecx
mov	edx, DWORD PTR _pMod$[ebp]
cmp	DWORD PTR [edx+72], 0
jne	SHORT $LN7@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
jmp	$LN12@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	DWORD PTR _zLowerName$[ebp], eax
cmp	DWORD PTR _zLowerName$[ebp], 0
je	SHORT $LN6@sqlite3Vta
mov	eax, DWORD PTR _zLowerName$[ebp]
mov	DWORD PTR _z$[ebp], eax
jmp	SHORT $LN5@sqlite3Vta
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN3@sqlite3Vta
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	eax, DWORD PTR _z$[ebp]
mov	cl, BYTE PTR _sqlite3UpperToLower[edx]
mov	BYTE PTR [eax], cl
jmp	SHORT $LN4@sqlite3Vta
lea	edx, DWORD PTR _pArg$[ebp]
push	edx
lea	eax, DWORD PTR _xFunc$[ebp]
push	eax
mov	ecx, DWORD PTR _zLowerName$[ebp]
push	ecx
mov	edx, DWORD PTR _nArg$[ebp]
push	edx
mov	eax, DWORD PTR _pVtab$[ebp]
push	eax
mov	ecx, DWORD PTR _pMod$[ebp]
mov	edx, DWORD PTR [ecx+72]
call	edx
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _zLowerName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
jmp	$LN12@sqlite3Vta
mov	edx, DWORD PTR _pDef$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3Strlen30
add	esp, 4
add	eax, 37					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN1@sqlite3Vta
mov	eax, DWORD PTR _pDef$[ebp]
jmp	SHORT $LN12@sqlite3Vta
mov	ecx, 9
mov	esi, DWORD PTR _pDef$[ebp]
mov	edi, DWORD PTR _pNew$[ebp]
rep movsd
mov	edx, 36					
shl	edx, 0
add	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR _pDef$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
push	eax
mov	eax, DWORD PTR _pDef$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _xFunc$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pNew$[ebp]
movzx	eax, WORD PTR [edx+2]
or	eax, 16					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [ecx+2], ax
mov	eax, DWORD PTR _pNew$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabBegin PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+296], 0
jle	SHORT $LN9@sqlite3Vta
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+320], 0
jne	SHORT $LN9@sqlite3Vta
mov	eax, 6
jmp	$LN10@sqlite3Vta
cmp	DWORD PTR _pVTab$[ebp], 0
jne	SHORT $LN8@sqlite3Vta
xor	eax, eax
jmp	$LN10@sqlite3Vta
mov	edx, DWORD PTR _pVTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pModule$[ebp], ecx
mov	edx, DWORD PTR _pModule$[ebp]
cmp	DWORD PTR [edx+56], 0
je	SHORT $LN7@sqlite3Vta
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN6@sqlite3Vta
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$1[ebp]
cmp	edx, DWORD PTR [ecx+296]
jge	SHORT $LN4@sqlite3Vta
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+320]
mov	edx, DWORD PTR _i$1[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
cmp	eax, DWORD PTR _pVTab$[ebp]
jne	SHORT $LN3@sqlite3Vta
xor	eax, eax
jmp	SHORT $LN10@sqlite3Vta
jmp	SHORT $LN5@sqlite3Vta
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_growVTrans
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Vta
mov	edx, DWORD PTR _pVTab$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pModule$[ebp]
mov	edx, DWORD PTR [ecx+56]
call	edx
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Vta
mov	eax, DWORD PTR _pVTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_addToVTrans
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabCallDestroy PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _zTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN2@sqlite3Vta
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN2@sqlite3Vta
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vtabDisconnectAll
add	esp, 8
mov	DWORD PTR _p$1[ebp], eax
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+20]
call	edx
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vta
mov	eax, DWORD PTR _p$1[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [ecx+60], 0
mov	edx, DWORD PTR _p$1[ebp]
push	edx
call	_sqlite3VtabUnlock
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabCallConnect PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN4@sqlite3Vta
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3GetVTable
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Vta
xor	eax, eax
jmp	$LN6@sqlite3Vta
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [ecx+eax]
mov	DWORD PTR _zMod$[ebp], ecx
mov	edx, DWORD PTR _zMod$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	eax, DWORD PTR _zMod$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
add	ecx, 300				
push	ecx
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _pMod$[ebp], eax
cmp	DWORD PTR _pMod$[ebp], 0
jne	SHORT $LN3@sqlite3Vta
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [eax+edx]
mov	DWORD PTR _zModule$1[ebp], eax
mov	ecx, DWORD PTR _zModule$1[ebp]
push	ecx
push	OFFSET $SG116436
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN2@sqlite3Vta
mov	DWORD PTR _zErr$2[ebp], 0
lea	eax, DWORD PTR _zErr$2[ebp]
push	eax
mov	ecx, DWORD PTR _pMod$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pMod$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_vtabCallConstructor
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3Vta
mov	ecx, DWORD PTR _zErr$2[ebp]
push	ecx
push	OFFSET $SG116440
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, DWORD PTR _zErr$2[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabCallCreate PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _zTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	ecx, DWORD PTR [ecx+eax]
mov	DWORD PTR _zMod$[ebp], ecx
mov	edx, DWORD PTR _zMod$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	eax, DWORD PTR _zMod$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
add	ecx, 300				
push	ecx
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _pMod$[ebp], eax
cmp	DWORD PTR _pMod$[ebp], 0
jne	SHORT $LN4@sqlite3Vta
mov	edx, DWORD PTR _zMod$[ebp]
push	edx
push	OFFSET $SG116475
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	ecx, DWORD PTR _pzErr$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN3@sqlite3Vta
mov	edx, DWORD PTR _pzErr$[ebp]
push	edx
mov	eax, DWORD PTR _pMod$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pMod$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vtabCallConstructor
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vta
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3GetVTable
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Vta
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_growVTrans
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vta
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3GetVTable
add	esp, 8
push	eax
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_addToVTrans
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabArgExtend PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 512				
mov	DWORD PTR _pArg$[ebp], eax
mov	ecx, DWORD PTR _pArg$[ebp]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN2@sqlite3Vta
mov	edx, DWORD PTR _pArg$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _pArg$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
jmp	SHORT $LN3@sqlite3Vta
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	edx, DWORD PTR _pArg$[ebp]
sub	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabArgInit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_addArgumentToVtab
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+512], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+516], 0
pop	ebp
ret	0
ENDP
_sqlite3VtabFinishParse PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	DWORD PTR _pTab$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN6@sqlite3Vta
jmp	$LN7@sqlite3Vta
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_addArgumentToVtab
add	esp, 4
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+512], 0
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+52], 1
jge	SHORT $LN5@sqlite3Vta
jmp	$LN7@sqlite3Vta
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+137]
test	edx, edx
jne	$LN4@sqlite3Vta
cmp	DWORD PTR _pEnd$[ebp], 0
je	SHORT $LN3@sqlite3Vta
mov	eax, DWORD PTR _pEnd$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [eax]
sub	edx, DWORD PTR [ecx+496]
mov	eax, DWORD PTR _pEnd$[ebp]
add	edx, DWORD PTR [eax+4]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+500], edx
mov	edx, DWORD PTR _pParse$[ebp]
add	edx, 496				
push	edx
push	OFFSET $SG116324
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zStmt$6[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$8[ebp], eax
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN9@sqlite3Vta
cmp	DWORD PTR _iDb$8[ebp], 1
jne	SHORT $LN9@sqlite3Vta
mov	DWORD PTR tv131[ebp], OFFSET $SG116325
jmp	SHORT $LN10@sqlite3Vta
mov	DWORD PTR tv131[ebp], OFFSET $SG116326
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+384]
push	eax
mov	ecx, DWORD PTR _zStmt$6[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR tv131[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$8[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	OFFSET $SG116327
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 32					
mov	eax, DWORD PTR _zStmt$6[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$7[ebp], eax
mov	eax, DWORD PTR _iDb$8[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ChangeCookie
add	esp, 8
push	0
push	0
push	139					
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG116328
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zWhere$4[ebp], eax
mov	eax, DWORD PTR _zWhere$4[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$8[ebp]
push	ecx
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeAddParseSchemaOp
add	esp, 12					
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
push	eax
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _iDb$8[ebp]
push	ecx
push	142					
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN7@sqlite3Vta
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _pSchema$2[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _zName$5[ebp], eax
mov	ecx, DWORD PTR _zName$5[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$3[ebp], eax
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _nName$3[ebp]
push	eax
mov	ecx, DWORD PTR _zName$5[ebp]
push	ecx
mov	edx, DWORD PTR _pSchema$2[ebp]
add	edx, 8
push	edx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pOld$1[ebp], eax
cmp	DWORD PTR _pOld$1[ebp], 0
je	SHORT $LN1@sqlite3Vta
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
jmp	SHORT $LN7@sqlite3Vta
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+484], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabBeginParse PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _ifNotExists$[ebp]
push	eax
push	1
push	0
push	0
mov	ecx, DWORD PTR _pName2$[ebp]
push	ecx
mov	edx, DWORD PTR _pName1$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3StartTable
add	esp, 28					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+484]
mov	DWORD PTR _pTable$[ebp], edx
cmp	DWORD PTR _pTable$[ebp], 0
jne	SHORT $LN2@sqlite3Vta
jmp	$LN3@sqlite3Vta
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pTable$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	edx, DWORD PTR _pTable$[ebp]
movzx	eax, BYTE PTR [edx+44]
or	eax, 16					
mov	ecx, DWORD PTR _pTable$[ebp]
mov	BYTE PTR [ecx+44], al
mov	edx, DWORD PTR _pTable$[ebp]
mov	DWORD PTR [edx+52], 0
mov	eax, DWORD PTR _pModuleName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
push	eax
mov	edx, DWORD PTR _pTable$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_addModuleArgument
add	esp, 12					
push	0
mov	ecx, DWORD PTR _pTable$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_addModuleArgument
add	esp, 12					
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
push	eax
mov	eax, DWORD PTR _pTable$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_addModuleArgument
add	esp, 12					
mov	edx, DWORD PTR _pModuleName$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pModuleName$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	edx, DWORD PTR _pName1$[ebp]
sub	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+500], eax
mov	edx, DWORD PTR _pTable$[ebp]
cmp	DWORD PTR [edx+56], 0
je	SHORT $LN3@sqlite3Vta
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTable$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pTable$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	29					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabMakeWritable PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN9@sqlite3Vta
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN10@sqlite3Vta
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pToplevel$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@sqlite3Vta
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+452]
jge	SHORT $LN4@sqlite3Vta
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	eax, DWORD PTR [edx+520]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
cmp	edx, DWORD PTR [eax+ecx*4]
jne	SHORT $LN3@sqlite3Vta
jmp	SHORT $LN7@sqlite3Vta
jmp	SHORT $LN5@sqlite3Vta
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	ecx, DWORD PTR [eax+452]
lea	edx, DWORD PTR [ecx*4+4]
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [ecx+520]
push	edx
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _apVtabLock$[ebp], eax
cmp	DWORD PTR _apVtabLock$[ebp], 0
je	SHORT $LN2@sqlite3Vta
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	ecx, DWORD PTR _apVtabLock$[ebp]
mov	DWORD PTR [eax+520], ecx
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	eax, DWORD PTR [edx+452]
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [ecx+520]
mov	ecx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [edx+eax*4], ecx
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	eax, DWORD PTR [edx+452]
add	eax, 1
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	DWORD PTR [ecx+452], eax
jmp	SHORT $LN7@sqlite3Vta
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	eax, DWORD PTR [edx]
mov	BYTE PTR [eax+64], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetVTable PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	DWORD PTR _pVtab$[ebp], ecx
jmp	SHORT $LN3@sqlite3Get
mov	edx, DWORD PTR _pVtab$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _pVtab$[ebp], eax
cmp	DWORD PTR _pVtab$[ebp], 0
je	SHORT $LN1@sqlite3Get
mov	ecx, DWORD PTR _pVtab$[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _db$[ebp]
je	SHORT $LN1@sqlite3Get
jmp	SHORT $LN2@sqlite3Get
mov	eax, DWORD PTR _pVtab$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabImportErrmsg PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pVtab$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+44], eax
mov	eax, DWORD PTR _pVtab$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _pVtab$[ebp]
mov	DWORD PTR [edx+8], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabSavepoint PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+320], 0
je	$LN11@sqlite3Vta
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN10@sqlite3Vta
mov	ecx, DWORD PTR _i$3[ebp]
add	ecx, 1
mov	DWORD PTR _i$3[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN11@sqlite3Vta
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$3[ebp]
cmp	eax, DWORD PTR [edx+296]
jge	$LN11@sqlite3Vta
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+320]
mov	eax, DWORD PTR _i$3[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
mov	DWORD PTR _pVTab$4[ebp], ecx
mov	edx, DWORD PTR _pVTab$4[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pMod$2[ebp], ecx
mov	edx, DWORD PTR _pVTab$4[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN7@sqlite3Vta
mov	eax, DWORD PTR _pMod$2[ebp]
cmp	DWORD PTR [eax], 2
jl	SHORT $LN7@sqlite3Vta
mov	ecx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv79[ebp], ecx
cmp	DWORD PTR tv79[ebp], 0
je	SHORT $LN4@sqlite3Vta
cmp	DWORD PTR tv79[ebp], 2
je	SHORT $LN3@sqlite3Vta
jmp	SHORT $LN2@sqlite3Vta
mov	edx, DWORD PTR _pMod$2[ebp]
mov	eax, DWORD PTR [edx+80]
mov	DWORD PTR _xMethod$1[ebp], eax
mov	ecx, DWORD PTR _iSavepoint$[ebp]
add	ecx, 1
mov	edx, DWORD PTR _pVTab$4[ebp]
mov	DWORD PTR [edx+20], ecx
jmp	SHORT $LN5@sqlite3Vta
mov	eax, DWORD PTR _pMod$2[ebp]
mov	ecx, DWORD PTR [eax+88]
mov	DWORD PTR _xMethod$1[ebp], ecx
jmp	SHORT $LN5@sqlite3Vta
mov	edx, DWORD PTR _pMod$2[ebp]
mov	eax, DWORD PTR [edx+84]
mov	DWORD PTR _xMethod$1[ebp], eax
cmp	DWORD PTR _xMethod$1[ebp], 0
je	SHORT $LN7@sqlite3Vta
mov	ecx, DWORD PTR _pVTab$4[ebp]
mov	edx, DWORD PTR [ecx+20]
cmp	edx, DWORD PTR _iSavepoint$[ebp]
jle	SHORT $LN7@sqlite3Vta
mov	eax, DWORD PTR _iSavepoint$[ebp]
push	eax
mov	ecx, DWORD PTR _pVTab$4[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	DWORD PTR _xMethod$1[ebp]
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN9@sqlite3Vta
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabUnlockList PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+324]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+324], 0
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@sqlite3Vta
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExpirePreparedStatements
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _pNext$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VtabUnlock
add	esp, 4
mov	ecx, DWORD PTR _pNext$1[ebp]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN3@sqlite3Vta
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabUnlock PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pVTab$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pVTab$[ebp]
mov	eax, DWORD PTR [edx+12]
sub	eax, 1
mov	ecx, DWORD PTR _pVTab$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _pVTab$[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN3@sqlite3Vta
mov	eax, DWORD PTR _pVTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p$1[ebp], ecx
cmp	DWORD PTR _p$1[ebp], 0
je	SHORT $LN1@sqlite3Vta
mov	edx, DWORD PTR _p$1[ebp]
push	edx
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+16]
call	edx
add	esp, 4
mov	eax, DWORD PTR _pVTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabLock PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pVTab$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, 1
mov	edx, DWORD PTR _pVTab$[ebp]
mov	DWORD PTR [edx+12], ecx
pop	ebp
ret	0
ENDP
_sqlite3VtabCommit PROC
push	ebp
mov	ebp, esp
push	64					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_callFinaliser
add	esp, 8
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3VtabRollback PROC
push	ebp
mov	ebp, esp
push	68					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_callFinaliser
add	esp, 8
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3VtabSync PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+320]
mov	DWORD PTR _aVTrans$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+320], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Vta
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Vta
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+296]
jge	SHORT $LN2@sqlite3Vta
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aVTrans$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pVtab$2[ebp], eax
cmp	DWORD PTR _pVtab$2[ebp], 0
je	SHORT $LN1@sqlite3Vta
mov	ecx, DWORD PTR _pVtab$2[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+60]
mov	DWORD PTR _x$1[ebp], eax
cmp	DWORD PTR _x$1[ebp], 0
je	SHORT $LN1@sqlite3Vta
mov	ecx, DWORD PTR _pVtab$2[ebp]
push	ecx
call	DWORD PTR _x$1[ebp]
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pVtab$2[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VtabImportErrmsg
add	esp, 8
jmp	SHORT $LN3@sqlite3Vta
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _aVTrans$[ebp]
mov	DWORD PTR [ecx+320], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabDisconnect PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
add	eax, 60					
mov	DWORD PTR _ppVTab$[ebp], eax
jmp	SHORT $LN4@sqlite3Vta
mov	ecx, DWORD PTR _ppVTab$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 24					
mov	DWORD PTR _ppVTab$[ebp], edx
mov	eax, DWORD PTR _ppVTab$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN5@sqlite3Vta
mov	ecx, DWORD PTR _ppVTab$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
cmp	eax, DWORD PTR _db$[ebp]
jne	SHORT $LN1@sqlite3Vta
mov	ecx, DWORD PTR _ppVTab$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pVTab$1[ebp], edx
mov	eax, DWORD PTR _ppVTab$[ebp]
mov	ecx, DWORD PTR _pVTab$1[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pVTab$1[ebp]
push	eax
call	_sqlite3VtabUnlock
add	esp, 4
jmp	SHORT $LN5@sqlite3Vta
jmp	SHORT $LN3@sqlite3Vta
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VtabClear PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN6@sqlite3Vta
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+512], 0
jne	SHORT $LN7@sqlite3Vta
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
push	0
call	_vtabDisconnectAll
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+56], 0
je	SHORT $LN8@sqlite3Vta
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN4@sqlite3Vta
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _i$1[ebp]
cmp	edx, DWORD PTR [ecx+52]
jge	SHORT $LN2@sqlite3Vta
cmp	DWORD PTR _i$1[ebp], 1
je	SHORT $LN1@sqlite3Vta
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR _i$1[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN3@sqlite3Vta
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TableLock PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN9@sqlite3Tab
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN10@sqlite3Tab
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pToplevel$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@sqlite3Tab
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+396]
jge	SHORT $LN4@sqlite3Tab
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _pToplevel$[ebp]
add	edx, DWORD PTR [eax+400]
mov	DWORD PTR _p$[ebp], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _iDb$[ebp]
jne	SHORT $LN3@sqlite3Tab
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _iTab$[ebp]
jne	SHORT $LN3@sqlite3Tab
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+8]
test	eax, eax
jne	SHORT $LN11@sqlite3Tab
movzx	ecx, BYTE PTR _isWriteLock$[ebp]
test	ecx, ecx
jne	SHORT $LN11@sqlite3Tab
mov	DWORD PTR tv84[ebp], 0
jmp	SHORT $LN12@sqlite3Tab
mov	DWORD PTR tv84[ebp], 1
mov	edx, DWORD PTR _p$[ebp]
mov	al, BYTE PTR tv84[ebp]
mov	BYTE PTR [edx+8], al
jmp	$LN7@sqlite3Tab
jmp	SHORT $LN5@sqlite3Tab
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [ecx+396]
add	edx, 1
shl	edx, 4
mov	DWORD PTR _nBytes$[ebp], edx
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [ecx+400]
push	edx
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbReallocOrFree
add	esp, 12					
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	DWORD PTR [edx+400], eax
mov	eax, DWORD PTR _pToplevel$[ebp]
cmp	DWORD PTR [eax+400], 0
je	SHORT $LN2@sqlite3Tab
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [ecx+396]
shl	edx, 4
mov	eax, DWORD PTR _pToplevel$[ebp]
add	edx, DWORD PTR [eax+400]
mov	DWORD PTR _p$[ebp], edx
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [ecx+396]
add	edx, 1
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	DWORD PTR [eax+396], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _iDb$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _iTab$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	al, BYTE PTR _isWriteLock$[ebp]
mov	BYTE PTR [edx+8], al
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _zName$[ebp]
mov	DWORD PTR [ecx+12], edx
jmp	SHORT $LN7@sqlite3Tab
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	DWORD PTR [eax+396], 0
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [ecx]
mov	BYTE PTR [edx+64], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CloseExtensions PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Clo
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+156]
jge	SHORT $LN1@sqlite3Clo
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+160]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3OsDlClose
add	esp, 8
jmp	SHORT $LN2@sqlite3Clo
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+160]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AutoLoadExtensions PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _go$[ebp], 1
cmp	DWORD PTR _sqlite3Autoext, 0
jne	SHORT $LN7@sqlite3Aut
jmp	$LN8@sqlite3Aut
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@sqlite3Aut
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _go$[ebp], 0
je	$LN8@sqlite3Aut
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$1[ebp], eax
mov	ecx, DWORD PTR _mutex$1[ebp]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _sqlite3Autoext
jl	SHORT $LN3@sqlite3Aut
mov	DWORD PTR _xInit$[ebp], 0
mov	DWORD PTR _go$[ebp], 0
jmp	SHORT $LN2@sqlite3Aut
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _sqlite3Autoext+4
mov	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _xInit$[ebp], edx
mov	eax, DWORD PTR _mutex$1[ebp]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	DWORD PTR _zErrmsg$2[ebp], 0
cmp	DWORD PTR _xInit$[ebp], 0
je	SHORT $LN1@sqlite3Aut
push	OFFSET _sqlite3Apis
lea	ecx, DWORD PTR _zErrmsg$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	DWORD PTR _xInit$[ebp]
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3Aut
mov	eax, DWORD PTR _zErrmsg$2[ebp]
push	eax
push	OFFSET $SG111858
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 16					
mov	DWORD PTR _go$[ebp], 0
mov	eax, DWORD PTR _zErrmsg$2[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	$LN5@sqlite3Aut
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Parser PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _yyp$[ebp]
mov	DWORD PTR _yypParser$[ebp], eax
mov	ecx, DWORD PTR _yypParser$[ebp]
cmp	DWORD PTR [ecx], 0
jge	SHORT $LN9@sqlite3Par
mov	edx, DWORD PTR _yypParser$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _yypParser$[ebp]
mov	DWORD PTR [eax+4], -1
mov	ecx, 16					
imul	edx, ecx, 0
xor	eax, eax
mov	ecx, DWORD PTR _yypParser$[ebp]
mov	WORD PTR [ecx+edx+12], ax
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _yypParser$[ebp]
mov	BYTE PTR [ecx+eax+14], 0
mov	edx, DWORD PTR _yyminor$[ebp]
mov	DWORD PTR _yyminorunion$[ebp], edx
mov	eax, DWORD PTR _yyminor$[ebp+4]
mov	DWORD PTR _yyminorunion$[ebp+4], eax
mov	ecx, DWORD PTR _yypParser$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+8], edx
movzx	eax, BYTE PTR _yymajor$[ebp]
push	eax
mov	ecx, DWORD PTR _yypParser$[ebp]
push	ecx
call	_yy_find_shift_action
add	esp, 8
mov	DWORD PTR _yyact$[ebp], eax
cmp	DWORD PTR _yyact$[ebp], 642		
jge	SHORT $LN5@sqlite3Par
lea	edx, DWORD PTR _yyminorunion$[ebp]
push	edx
mov	eax, DWORD PTR _yymajor$[ebp]
push	eax
mov	ecx, DWORD PTR _yyact$[ebp]
push	ecx
mov	edx, DWORD PTR _yypParser$[ebp]
push	edx
call	_yy_shift
add	esp, 16					
mov	eax, DWORD PTR _yypParser$[ebp]
mov	ecx, DWORD PTR [eax+4]
sub	ecx, 1
mov	edx, DWORD PTR _yypParser$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	DWORD PTR _yymajor$[ebp], 254		
jmp	SHORT $LN7@sqlite3Par
cmp	DWORD PTR _yyact$[ebp], 969		
jge	SHORT $LN3@sqlite3Par
mov	eax, DWORD PTR _yyact$[ebp]
sub	eax, 642				
push	eax
mov	ecx, DWORD PTR _yypParser$[ebp]
push	ecx
call	_yy_reduce
add	esp, 8
jmp	SHORT $LN7@sqlite3Par
sub	esp, 12					
mov	edx, esp
mov	eax, DWORD PTR _yyminorunion$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _yyminorunion$[ebp+4]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _yyminorunion$[ebp+8]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _yymajor$[ebp]
push	ecx
mov	edx, DWORD PTR _yypParser$[ebp]
push	edx
call	_yy_syntax_error
add	esp, 20					
lea	eax, DWORD PTR _yyminorunion$[ebp]
push	eax
movzx	ecx, BYTE PTR _yymajor$[ebp]
push	ecx
mov	edx, DWORD PTR _yypParser$[ebp]
push	edx
call	_yy_destructor
add	esp, 12					
mov	DWORD PTR _yymajor$[ebp], 254		
cmp	DWORD PTR _yymajor$[ebp], 254		
je	SHORT $LN10@sqlite3Par
mov	eax, DWORD PTR _yypParser$[ebp]
cmp	DWORD PTR [eax], 0
jge	$LN8@sqlite3Par
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ParserFree PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pParser$[ebp], eax
cmp	DWORD PTR _pParser$[ebp], 0
jne	SHORT $LN2@sqlite3Par
jmp	SHORT $LN4@sqlite3Par
mov	ecx, DWORD PTR _pParser$[ebp]
cmp	DWORD PTR [ecx], 0
jl	SHORT $LN1@sqlite3Par
mov	edx, DWORD PTR _pParser$[ebp]
push	edx
call	_yy_pop_parser_stack
add	esp, 4
jmp	SHORT $LN2@sqlite3Par
mov	eax, DWORD PTR _pParser$[ebp]
push	eax
call	DWORD PTR _freeProc$[ebp]
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ParserAlloc PROC
push	ebp
mov	ebp, esp
push	ecx
push	1612					
call	DWORD PTR _mallocProc$[ebp]
add	esp, 4
mov	DWORD PTR _pParser$[ebp], eax
cmp	DWORD PTR _pParser$[ebp], 0
je	SHORT $LN1@sqlite3Par
mov	eax, DWORD PTR _pParser$[ebp]
mov	DWORD PTR [eax], -1
mov	eax, DWORD PTR _pParser$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BackupUpdate PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pBackup$[ebp]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN5@sqlite3Bac
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN6@sqlite3Bac
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
call	_isFatalError
add	esp, 4
test	eax, eax
jne	SHORT $LN2@sqlite3Bac
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _iPage$[ebp]
cmp	eax, DWORD PTR [edx+16]
jae	SHORT $LN2@sqlite3Bac
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
push	1
mov	ecx, DWORD PTR _aData$[ebp]
push	ecx
mov	edx, DWORD PTR _iPage$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_backupOnePage
add	esp, 16					
mov	DWORD PTR _rc$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN2@sqlite3Bac
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _rc$1[ebp]
mov	DWORD PTR [ecx+28], edx
jmp	SHORT $LN4@sqlite3Bac
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BackupRestart PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pBackup$[ebp]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN3@sqlite3Bac
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@sqlite3Bac
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+16], 1
jmp	SHORT $LN2@sqlite3Bac
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CreateColumnExpr PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	0
push	0
push	154					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprAlloc
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	$LN3@sqlite3Cre
imul	ecx, DWORD PTR _iSrc$[ebp], 80
mov	edx, DWORD PTR _pSrc$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _pItem$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pItem$1[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR [ecx+44], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pItem$1[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR [ecx+28], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
movsx	eax, WORD PTR [edx+36]
cmp	eax, DWORD PTR _iCol$[ebp]
jne	SHORT $LN2@sqlite3Cre
or	ecx, -1
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+32], cx
jmp	SHORT $LN1@sqlite3Cre
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR _iCol$[ebp]
mov	WORD PTR [eax+32], cx
cmp	DWORD PTR _iCol$[ebp], 64		
jl	SHORT $LN6@sqlite3Cre
mov	DWORD PTR tv85[ebp], 63			
jmp	SHORT $LN7@sqlite3Cre
mov	edx, DWORD PTR _iCol$[ebp]
mov	DWORD PTR tv85[ebp], edx
mov	eax, 1
xor	edx, edx
mov	ecx, DWORD PTR tv85[ebp]
call	__allshl
mov	ecx, DWORD PTR _pItem$1[ebp]
or	eax, DWORD PTR [ecx+64]
or	edx, DWORD PTR [ecx+68]
mov	ecx, DWORD PTR _pItem$1[ebp]
mov	DWORD PTR [ecx+64], eax
mov	DWORD PTR [ecx+68], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SelectDestInit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pDest$[ebp]
mov	cl, BYTE PTR _eDest$[ebp]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _pDest$[ebp]
mov	eax, DWORD PTR _iParm$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pDest$[ebp]
mov	BYTE PTR [ecx+1], 0
mov	edx, DWORD PTR _pDest$[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _pDest$[ebp]
mov	DWORD PTR [eax+12], 0
pop	ebp
ret	0
ENDP
_sqlite3StrAccumReset PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [eax+8]
cmp	edx, DWORD PTR [ecx+4]
je	SHORT $LN3@sqlite3Str
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+24]
cmp	ecx, 1
jne	SHORT $LN2@sqlite3Str
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN3@sqlite3Str
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], 0
pop	ebp
ret	0
ENDP
_sqlite3StrAccumFinish PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	$LN6@sqlite3Str
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	BYTE PTR [ecx+edx], 0
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+24]
test	eax, eax
je	$LN6@sqlite3Str
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+8]
cmp	eax, DWORD PTR [edx+4]
jne	SHORT $LN6@sqlite3Str
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+24]
cmp	edx, 1
jne	SHORT $LN4@sqlite3Str
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], eax
jmp	SHORT $LN3@sqlite3Str
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
add	eax, 1
push	eax
call	_sqlite3_malloc
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN2@sqlite3Str
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN6@sqlite3Str
push	1
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_setStrAccumError
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+8]
pop	ebp
ret	0
ENDP
_sqlite3AppendSpace PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, DWORD PTR _N$[ebp]
mov	edx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR [edx+16]
jl	SHORT $LN2@sqlite3App
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3StrAccumEnlarge
add	esp, 8
mov	DWORD PTR _N$[ebp], eax
cmp	DWORD PTR _N$[ebp], 0
jg	SHORT $LN2@sqlite3App
jmp	SHORT $LN4@sqlite3App
mov	edx, DWORD PTR _N$[ebp]
mov	DWORD PTR tv74[ebp], edx
mov	eax, DWORD PTR _N$[ebp]
sub	eax, 1
mov	DWORD PTR _N$[ebp], eax
cmp	DWORD PTR tv74[ebp], 0
jle	SHORT $LN4@sqlite3App
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	BYTE PTR [ecx+edx], 32			
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], eax
jmp	SHORT $LN2@sqlite3App
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3StrAccumAppendAll PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3StrAccumAppend PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
add	ecx, DWORD PTR _N$[ebp]
mov	edx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR [edx+16]
jl	SHORT $LN1@sqlite3Str
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_enlargeAndAppend
add	esp, 12					
jmp	SHORT $LN2@sqlite3Str
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+12]
push	eax
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
add	eax, DWORD PTR _N$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], eax
pop	ebp
ret	0
ENDP
_sqlite3StrAccumInit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _zBase$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _zBase$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _mx$[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+24], 1
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+25], 0
pop	ebp
ret	0
ENDP
_sqlite3OpenTempDatabase PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
cmp	DWORD PTR [ecx+edx+4], 0
jne	$LN3@sqlite3Ope
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+450]
test	eax, eax
jne	$LN3@sqlite3Ope
mov	ecx, DWORD PTR ?flags@?2??sqlite3OpenTempDatabase@@9@9
push	ecx
push	0
lea	edx, DWORD PTR _pBt$1[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3BtreeOpen
add	esp, 24					
mov	DWORD PTR _rc$2[ebp], eax
cmp	DWORD PTR _rc$2[ebp], 0
je	SHORT $LN2@sqlite3Ope
push	OFFSET $SG107686
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _rc$2[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, 1
jmp	SHORT $LN4@sqlite3Ope
mov	eax, 16					
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR _pBt$1[ebp]
mov	DWORD PTR [edx+eax+4], ecx
push	0
push	-1
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+72]
push	eax
mov	ecx, DWORD PTR _pBt$1[ebp]
push	ecx
call	_sqlite3BtreeSetPageSize
add	esp, 16					
cmp	eax, 7
jne	SHORT $LN3@sqlite3Ope
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
mov	eax, 1
jmp	SHORT $LN4@sqlite3Ope
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ApiExit PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN2@sqlite3Api
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	SHORT $LN1@sqlite3Api
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN2@sqlite3Api
push	0
push	7
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 0
mov	DWORD PTR _rc$[ebp], 7
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN5@sqlite3Api
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR tv75[ebp], edx
jmp	SHORT $LN6@sqlite3Api
mov	DWORD PTR tv75[ebp], 255		
mov	eax, DWORD PTR _rc$[ebp]
and	eax, DWORD PTR tv75[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CreateFunc PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _zFunctionName$[ebp], 0
je	SHORT $LN16@sqlite3Cre
cmp	DWORD PTR _xFunc$[ebp], 0
je	SHORT $LN15@sqlite3Cre
cmp	DWORD PTR _xFinal$[ebp], 0
jne	SHORT $LN16@sqlite3Cre
cmp	DWORD PTR _xStep$[ebp], 0
jne	SHORT $LN16@sqlite3Cre
cmp	DWORD PTR _xFunc$[ebp], 0
jne	SHORT $LN14@sqlite3Cre
cmp	DWORD PTR _xFinal$[ebp], 0
je	SHORT $LN14@sqlite3Cre
cmp	DWORD PTR _xStep$[ebp], 0
je	SHORT $LN16@sqlite3Cre
cmp	DWORD PTR _xFunc$[ebp], 0
jne	SHORT $LN12@sqlite3Cre
cmp	DWORD PTR _xFinal$[ebp], 0
jne	SHORT $LN12@sqlite3Cre
cmp	DWORD PTR _xStep$[ebp], 0
jne	SHORT $LN16@sqlite3Cre
cmp	DWORD PTR _nArg$[ebp], -1
jl	SHORT $LN16@sqlite3Cre
cmp	DWORD PTR _nArg$[ebp], 127		
jg	SHORT $LN16@sqlite3Cre
mov	eax, DWORD PTR _zFunctionName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
cmp	DWORD PTR _nName$[ebp], 255		
jle	SHORT $LN17@sqlite3Cre
push	122454					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN18@sqlite3Cre
mov	ecx, DWORD PTR _enc$[ebp]
and	ecx, 2048				
mov	DWORD PTR _extraFlags$[ebp], ecx
mov	edx, DWORD PTR _enc$[ebp]
and	edx, 7
mov	DWORD PTR _enc$[ebp], edx
cmp	DWORD PTR _enc$[ebp], 4
jne	SHORT $LN10@sqlite3Cre
mov	DWORD PTR _enc$[ebp], 2
jmp	$LN9@sqlite3Cre
cmp	DWORD PTR _enc$[ebp], 5
jne	SHORT $LN9@sqlite3Cre
mov	eax, DWORD PTR _pDestructor$[ebp]
push	eax
mov	ecx, DWORD PTR _xFinal$[ebp]
push	ecx
mov	edx, DWORD PTR _xStep$[ebp]
push	edx
mov	eax, DWORD PTR _xFunc$[ebp]
push	eax
mov	ecx, DWORD PTR _pUserData$[ebp]
push	ecx
mov	edx, DWORD PTR _extraFlags$[ebp]
or	edx, 1
push	edx
mov	eax, DWORD PTR _nArg$[ebp]
push	eax
mov	ecx, DWORD PTR _zFunctionName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CreateFunc
add	esp, 36					
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
jne	SHORT $LN7@sqlite3Cre
mov	eax, DWORD PTR _pDestructor$[ebp]
push	eax
mov	ecx, DWORD PTR _xFinal$[ebp]
push	ecx
mov	edx, DWORD PTR _xStep$[ebp]
push	edx
mov	eax, DWORD PTR _xFunc$[ebp]
push	eax
mov	ecx, DWORD PTR _pUserData$[ebp]
push	ecx
mov	edx, DWORD PTR _extraFlags$[ebp]
or	edx, 2
push	edx
mov	eax, DWORD PTR _nArg$[ebp]
push	eax
mov	ecx, DWORD PTR _zFunctionName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CreateFunc
add	esp, 36					
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN6@sqlite3Cre
mov	eax, DWORD PTR _rc$1[ebp]
jmp	$LN18@sqlite3Cre
mov	DWORD PTR _enc$[ebp], 3
push	0
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _nArg$[ebp]
push	ecx
mov	edx, DWORD PTR _nName$[ebp]
push	edx
mov	eax, DWORD PTR _zFunctionName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindFunction
add	esp, 24					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@sqlite3Cre
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+2]
and	eax, 3
cmp	eax, DWORD PTR _enc$[ebp]
jne	SHORT $LN5@sqlite3Cre
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx]
cmp	edx, DWORD PTR _nArg$[ebp]
jne	SHORT $LN5@sqlite3Cre
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+140], 0
je	SHORT $LN4@sqlite3Cre
push	OFFSET $SG120964
push	5
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 12					
mov	eax, 5
jmp	$LN18@sqlite3Cre
jmp	SHORT $LN5@sqlite3Cre
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExpirePreparedStatements
add	esp, 4
push	1
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _nArg$[ebp]
push	ecx
mov	edx, DWORD PTR _nName$[ebp]
push	edx
mov	eax, DWORD PTR _zFunctionName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindFunction
add	esp, 24					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN2@sqlite3Cre
mov	eax, 7
jmp	SHORT $LN18@sqlite3Cre
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_functionDestroy
add	esp, 8
cmp	DWORD PTR _pDestructor$[ebp], 0
je	SHORT $LN1@sqlite3Cre
mov	ecx, DWORD PTR _pDestructor$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 1
mov	eax, DWORD PTR _pDestructor$[ebp]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pDestructor$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 3
or	ecx, DWORD PTR _extraFlags$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+2], cx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _xFunc$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _xStep$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _xFinal$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pUserData$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	ax, WORD PTR _nArg$[ebp]
mov	WORD PTR [edx], ax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3KeyInfoOfIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	esi
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
je	SHORT $LN11@sqlite3Key
xor	eax, eax
jmp	$LN12@sqlite3Key
mov	ecx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [ecx+40], 0
je	SHORT $LN10@sqlite3Key
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [eax+12]
cmp	edx, DWORD PTR [ecx]
je	SHORT $LN10@sqlite3Key
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
call	_sqlite3KeyInfoUnref
add	esp, 4
mov	edx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [edx+40], 0
mov	eax, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [eax+40], 0
jne	$LN9@sqlite3Key
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+52]
mov	DWORD PTR _nCol$3[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
mov	DWORD PTR _nKey$2[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+56]
shr	eax, 3
and	eax, 1
je	SHORT $LN8@sqlite3Key
mov	ecx, DWORD PTR _nCol$3[ebp]
sub	ecx, DWORD PTR _nKey$2[ebp]
push	ecx
mov	edx, DWORD PTR _nKey$2[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3KeyInfoAlloc
add	esp, 12					
mov	DWORD PTR _pKey$4[ebp], eax
jmp	SHORT $LN7@sqlite3Key
push	0
mov	edx, DWORD PTR _nCol$3[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3KeyInfoAlloc
add	esp, 12					
mov	DWORD PTR _pKey$4[ebp], eax
cmp	DWORD PTR _pKey$4[ebp], 0
je	$LN9@sqlite3Key
mov	DWORD PTR _i$5[ebp], 0
jmp	SHORT $LN5@sqlite3Key
mov	edx, DWORD PTR _i$5[ebp]
add	edx, 1
mov	DWORD PTR _i$5[ebp], edx
mov	eax, DWORD PTR _i$5[ebp]
cmp	eax, DWORD PTR _nCol$3[ebp]
jge	SHORT $LN3@sqlite3Key
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _i$5[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
mov	DWORD PTR _zColl$1[ebp], ecx
push	OFFSET $SG107881
mov	edx, DWORD PTR _zColl$1[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN14@sqlite3Key
mov	DWORD PTR tv144[ebp], 0
jmp	SHORT $LN15@sqlite3Key
mov	eax, DWORD PTR _zColl$1[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateCollSeq
add	esp, 8
mov	DWORD PTR tv144[ebp], eax
mov	edx, DWORD PTR _i$5[ebp]
mov	eax, DWORD PTR _pKey$4[ebp]
mov	ecx, DWORD PTR tv144[ebp]
mov	DWORD PTR [eax+edx*4+20], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	ecx, DWORD PTR _pKey$4[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR _i$5[ebp]
mov	esi, DWORD PTR _i$5[ebp]
mov	al, BYTE PTR [eax+esi]
mov	BYTE PTR [edx+ecx], al
jmp	SHORT $LN4@sqlite3Key
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
je	SHORT $LN2@sqlite3Key
mov	edx, DWORD PTR _pKey$4[ebp]
push	edx
call	_sqlite3KeyInfoUnref
add	esp, 4
jmp	SHORT $LN9@sqlite3Key
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR _pKey$4[ebp]
mov	DWORD PTR [eax+40], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
call	_sqlite3KeyInfoRef
add	esp, 4
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3KeyInfoRef PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Key
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _p$[ebp]
pop	ebp
ret	0
ENDP
_sqlite3KeyInfoUnref PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Key
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN3@sqlite3Key
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
push	0
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3KeyInfoAlloc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _N$[ebp]
add	eax, DWORD PTR _X$[ebp]
imul	ecx, eax, 5
add	ecx, 24					
push	ecx
push	0
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3Key
mov	edx, DWORD PTR _N$[ebp]
add	edx, DWORD PTR _X$[ebp]
mov	eax, DWORD PTR _p$[ebp]
lea	ecx, DWORD PTR [eax+edx*4+20]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR _N$[ebp]
mov	WORD PTR [eax+6], cx
mov	edx, DWORD PTR _p$[ebp]
mov	ax, WORD PTR _X$[ebp]
mov	WORD PTR [edx+8], ax
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR [edx+77]
mov	BYTE PTR [eax+4], cl
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], 1
jmp	SHORT $LN1@sqlite3Key
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SchemaToIndex PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], -1000000		
cmp	DWORD PTR _pSchema$[ebp], 0
je	SHORT $LN5@sqlite3Sch
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Sch
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN5@sqlite3Sch
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
cmp	eax, DWORD PTR _pSchema$[ebp]
jne	SHORT $LN1@sqlite3Sch
jmp	SHORT $LN5@sqlite3Sch
jmp	SHORT $LN3@sqlite3Sch
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SchemaGet PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pBt$[ebp], 0
je	SHORT $LN5@sqlite3Sch
push	OFFSET _sqlite3SchemaClear
push	84					
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_sqlite3BtreeSchema
add	esp, 12					
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN4@sqlite3Sch
push	84					
push	0
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN3@sqlite3Sch
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
jmp	SHORT $LN2@sqlite3Sch
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+76]
test	eax, eax
jne	SHORT $LN2@sqlite3Sch
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 8
push	ecx
call	_sqlite3HashInit
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
add	edx, 24					
push	edx
call	_sqlite3HashInit
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
add	eax, 40					
push	eax
call	_sqlite3HashInit
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 56					
push	ecx
call	_sqlite3HashInit
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+77], 1
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SchemaClear PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR _pSchema$[ebp], eax
mov	ecx, DWORD PTR _pSchema$[ebp]
add	ecx, 8
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _temp1$[ebp], edx
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _temp1$[ebp+4], eax
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _temp1$[ebp+8], edx
mov	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _temp1$[ebp+12], eax
mov	ecx, DWORD PTR _pSchema$[ebp]
add	ecx, 40					
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _temp2$[ebp], edx
mov	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _temp2$[ebp+4], eax
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _temp2$[ebp+8], edx
mov	eax, DWORD PTR [ecx+12]
mov	DWORD PTR _temp2$[ebp+12], eax
mov	ecx, DWORD PTR _pSchema$[ebp]
add	ecx, 40					
push	ecx
call	_sqlite3HashInit
add	esp, 4
mov	edx, DWORD PTR _pSchema$[ebp]
add	edx, 24					
push	edx
call	_sqlite3HashClear
add	esp, 4
mov	eax, DWORD PTR _temp2$[ebp+8]
mov	DWORD PTR _pElem$[ebp], eax
jmp	SHORT $LN7@sqlite3Sch
mov	ecx, DWORD PTR _pElem$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pElem$[ebp], edx
cmp	DWORD PTR _pElem$[ebp], 0
je	SHORT $LN5@sqlite3Sch
mov	eax, DWORD PTR _pElem$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	0
call	_sqlite3DeleteTrigger
add	esp, 8
jmp	SHORT $LN6@sqlite3Sch
lea	edx, DWORD PTR _temp2$[ebp]
push	edx
call	_sqlite3HashClear
add	esp, 4
mov	eax, DWORD PTR _pSchema$[ebp]
add	eax, 8
push	eax
call	_sqlite3HashInit
add	esp, 4
mov	ecx, DWORD PTR _temp1$[ebp+8]
mov	DWORD PTR _pElem$[ebp], ecx
jmp	SHORT $LN4@sqlite3Sch
mov	edx, DWORD PTR _pElem$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pElem$[ebp], eax
cmp	DWORD PTR _pElem$[ebp], 0
je	SHORT $LN2@sqlite3Sch
mov	ecx, DWORD PTR _pElem$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTab$1[ebp], edx
mov	eax, DWORD PTR _pTab$1[ebp]
push	eax
push	0
call	_sqlite3DeleteTable
add	esp, 8
jmp	SHORT $LN3@sqlite3Sch
lea	ecx, DWORD PTR _temp1$[ebp]
push	ecx
call	_sqlite3HashClear
add	esp, 4
mov	edx, DWORD PTR _pSchema$[ebp]
add	edx, 56					
push	edx
call	_sqlite3HashClear
add	esp, 4
mov	eax, DWORD PTR _pSchema$[ebp]
mov	DWORD PTR [eax+72], 0
mov	ecx, DWORD PTR _pSchema$[ebp]
movzx	edx, WORD PTR [ecx+78]
and	edx, 1
je	SHORT $LN8@sqlite3Sch
mov	eax, DWORD PTR _pSchema$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 1
mov	edx, DWORD PTR _pSchema$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pSchema$[ebp]
movzx	ecx, WORD PTR [eax+78]
and	ecx, -2					
mov	edx, DWORD PTR _pSchema$[ebp]
mov	WORD PTR [edx+78], cx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MinimumFileFormat PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	$LN2@sqlite3Min
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$2[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r2$3[ebp], eax
push	2
mov	eax, DWORD PTR _r1$2[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	50					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeUsesBtree
add	esp, 8
mov	edx, DWORD PTR _r2$3[ebp]
push	edx
mov	eax, DWORD PTR _minFormat$[ebp]
push	eax
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _r1$2[ebp]
push	edx
push	0
mov	eax, DWORD PTR _r2$3[ebp]
push	eax
push	83					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _j1$1[ebp], eax
push	136					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	eax, DWORD PTR _r2$3[ebp]
push	eax
push	2
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	51					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _j1$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _r1$2[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _r2$3[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IsLikeFunction PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 153				
jne	SHORT $LN3@sqlite3IsL
mov	edx, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [edx+20], 0
je	SHORT $LN3@sqlite3IsL
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
cmp	DWORD PTR [ecx], 2
je	SHORT $LN4@sqlite3IsL
xor	eax, eax
jmp	$LN5@sqlite3IsL
push	0
push	1
push	2
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindFunction
add	esp, 24					
mov	DWORD PTR _pDef$[ebp], eax
cmp	DWORD PTR _pDef$[ebp], 0
je	SHORT $LN1@sqlite3IsL
mov	ecx, DWORD PTR _pDef$[ebp]
movzx	edx, WORD PTR [ecx+2]
and	edx, 4
jne	SHORT $LN2@sqlite3IsL
xor	eax, eax
jmp	SHORT $LN5@sqlite3IsL
push	3
mov	eax, DWORD PTR _pDef$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _aWc$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pDef$[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 8
jne	SHORT $LN7@sqlite3IsL
mov	DWORD PTR tv128[ebp], 1
jmp	SHORT $LN8@sqlite3IsL
mov	DWORD PTR tv128[ebp], 0
mov	edx, DWORD PTR _pIsNocase$[ebp]
mov	eax, DWORD PTR tv128[ebp]
mov	DWORD PTR [edx], eax
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RegisterLikeFunctions PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _caseSensitive$[ebp], 0
je	SHORT $LN2@sqlite3Reg
mov	DWORD PTR _pInfo$[ebp], OFFSET _likeInfoAlt
jmp	SHORT $LN1@sqlite3Reg
mov	DWORD PTR _pInfo$[ebp], OFFSET _likeInfoNorm
push	0
push	0
push	0
push	OFFSET _likeFunc
mov	eax, DWORD PTR _pInfo$[ebp]
push	eax
push	1
push	2
push	OFFSET $SG109412
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3CreateFunc
add	esp, 36					
push	0
push	0
push	0
push	OFFSET _likeFunc
mov	edx, DWORD PTR _pInfo$[ebp]
push	edx
push	1
push	3
push	OFFSET $SG109413
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3CreateFunc
add	esp, 36					
push	0
push	0
push	0
push	OFFSET _likeFunc
push	OFFSET _globInfo
push	1
push	2
push	OFFSET $SG109415
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3CreateFunc
add	esp, 36					
push	12					
push	OFFSET $SG109416
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_setLikeOptFlag
add	esp, 12					
cmp	DWORD PTR _caseSensitive$[ebp], 0
je	SHORT $LN5@sqlite3Reg
mov	DWORD PTR tv128[ebp], 12		
jmp	SHORT $LN6@sqlite3Reg
mov	DWORD PTR tv128[ebp], 4
movzx	eax, BYTE PTR tv128[ebp]
push	eax
push	OFFSET $SG109417
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_setLikeOptFlag
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DefaultRowEst PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, 33					
mov	WORD PTR _aVal$[ebp], ax
mov	ecx, 32					
mov	WORD PTR _aVal$[ebp+2], cx
mov	edx, 30					
mov	WORD PTR _aVal$[ebp+4], dx
mov	eax, 28					
mov	WORD PTR _aVal$[ebp+6], ax
mov	ecx, 26					
mov	WORD PTR _aVal$[ebp+8], cx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	edx, 5
jle	SHORT $LN8@sqlite3Def
mov	DWORD PTR tv70[ebp], 5
jmp	SHORT $LN9@sqlite3Def
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
mov	DWORD PTR tv70[ebp], ecx
mov	edx, DWORD PTR tv70[ebp]
mov	DWORD PTR _nCopy$[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, 2
imul	eax, edx, 0
mov	edx, DWORD PTR _a$[ebp]
mov	cx, WORD PTR [ecx+28]
mov	WORD PTR [edx+eax], cx
mov	edx, 2
imul	eax, edx, 0
mov	ecx, DWORD PTR _a$[ebp]
movsx	edx, WORD PTR [ecx+eax]
cmp	edx, 33					
jge	SHORT $LN5@sqlite3Def
mov	eax, 2
imul	ecx, eax, 0
mov	edx, 33					
mov	eax, DWORD PTR _a$[ebp]
mov	WORD PTR [eax+ecx], dx
mov	ecx, DWORD PTR _nCopy$[ebp]
shl	ecx, 1
push	ecx
lea	edx, DWORD PTR _aVal$[ebp]
push	edx
mov	eax, 2
shl	eax, 0
add	eax, DWORD PTR _a$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _nCopy$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN4@sqlite3Def
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _i$[ebp], ecx
jg	SHORT $LN2@sqlite3Def
mov	edx, 23					
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _a$[ebp]
mov	WORD PTR [ecx+eax*2], dx
jmp	SHORT $LN3@sqlite3Def
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, BYTE PTR [edx+54]
test	eax, eax
je	SHORT $LN6@sqlite3Def
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
xor	eax, eax
mov	ecx, DWORD PTR _a$[ebp]
mov	WORD PTR [ecx+edx*2], ax
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DeleteIndexSamples PROC
push	ebp
mov	ebp, esp
pop	ebp
ret	0
ENDP
_sqlite3AnalysisLoad PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN7@sqlite3Ana
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
je	SHORT $LN5@sqlite3Ana
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$1[ebp], edx
mov	eax, DWORD PTR _pIdx$1[ebp]
push	eax
call	_sqlite3DefaultRowEst
add	esp, 4
jmp	SHORT $LN6@sqlite3Ana
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR _sInfo$[ebp], ecx
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _sInfo$[ebp+4], edx
mov	eax, DWORD PTR _sInfo$[ebp+4]
push	eax
push	OFFSET $SG105548
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindTable
add	esp, 12					
test	eax, eax
jne	SHORT $LN4@sqlite3Ana
mov	eax, 1
jmp	SHORT $LN8@sqlite3Ana
mov	edx, DWORD PTR _sInfo$[ebp+4]
push	edx
push	OFFSET $SG105549
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zSql$[ebp], eax
cmp	DWORD PTR _zSql$[ebp], 0
jne	SHORT $LN3@sqlite3Ana
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN2@sqlite3Ana
push	0
lea	ecx, DWORD PTR _sInfo$[ebp]
push	ecx
push	OFFSET _analysisLoader
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_exec
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN1@sqlite3Ana
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FindDbName PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _i$[ebp], -1
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN5@sqlite3Fin
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$1[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$2[ebp], eax
jmp	SHORT $LN4@sqlite3Fin
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pDb$2[ebp]
sub	eax, 16					
mov	DWORD PTR _pDb$2[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN5@sqlite3Fin
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN1@sqlite3Fin
mov	edx, DWORD PTR _pDb$2[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3Strlen30
add	esp, 4
cmp	DWORD PTR _n$1[ebp], eax
jne	SHORT $LN1@sqlite3Fin
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _pDb$2[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@sqlite3Fin
jmp	SHORT $LN5@sqlite3Fin
jmp	SHORT $LN3@sqlite3Fin
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FindDb PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindDbName
add	esp, 8
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3InvokeBusyHandler PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Inv
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN3@sqlite3Inv
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+8], 0
jge	SHORT $LN4@sqlite3Inv
xor	eax, eax
jmp	SHORT $LN5@sqlite3Inv
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
call	ecx
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Inv
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], -1
jmp	SHORT $LN1@sqlite3Inv
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Analyze PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN20@sqlite3Ana
jmp	$LN21@sqlite3Ana
cmp	DWORD PTR _pName1$[ebp], 0
jne	SHORT $LN19@sqlite3Ana
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN18@sqlite3Ana
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN16@sqlite3Ana
cmp	DWORD PTR _i$[ebp], 1
jne	SHORT $LN15@sqlite3Ana
jmp	SHORT $LN17@sqlite3Ana
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_analyzeDatabase
add	esp, 8
jmp	SHORT $LN17@sqlite3Ana
jmp	$LN21@sqlite3Ana
mov	edx, DWORD PTR _pName2$[ebp]
cmp	DWORD PTR [edx+4], 0
jne	$LN13@sqlite3Ana
mov	eax, DWORD PTR _pName1$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindDb
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jl	SHORT $LN12@sqlite3Ana
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_analyzeDatabase
add	esp, 8
jmp	$LN11@sqlite3Ana
mov	ecx, DWORD PTR _pName1$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN11@sqlite3Ana
push	0
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindIndex
add	esp, 12					
mov	DWORD PTR _pIdx$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN9@sqlite3Ana
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_analyzeTable
add	esp, 12					
jmp	SHORT $LN8@sqlite3Ana
push	0
mov	eax, DWORD PTR _z$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateTable
add	esp, 16					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN8@sqlite3Ana
push	0
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_analyzeTable
add	esp, 12					
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN21@sqlite3Ana
lea	eax, DWORD PTR _pTableName$[ebp]
push	eax
mov	ecx, DWORD PTR _pName2$[ebp]
push	ecx
mov	edx, DWORD PTR _pName1$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TwoPartName
add	esp, 16					
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jl	$LN21@sqlite3Ana
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zDb$[ebp], ecx
mov	edx, DWORD PTR _pTableName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN21@sqlite3Ana
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindIndex
add	esp, 12					
mov	DWORD PTR _pIdx$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN3@sqlite3Ana
mov	ecx, DWORD PTR _pIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_analyzeTable
add	esp, 12					
jmp	SHORT $LN2@sqlite3Ana
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateTable
add	esp, 16					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN2@sqlite3Ana
push	0
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_analyzeTable
add	esp, 12					
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AffinityType PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _h$[ebp], 0
mov	BYTE PTR _aff$[ebp], 99			
mov	DWORD PTR _zChar$[ebp], 0
cmp	DWORD PTR _zIn$[ebp], 0
jne	SHORT $LN27@sqlite3Aff
mov	al, BYTE PTR _aff$[ebp]
jmp	$LN29@sqlite3Aff
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zIn$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	$LN26@sqlite3Aff
mov	ecx, DWORD PTR _h$[ebp]
shl	ecx, 8
mov	edx, DWORD PTR _zIn$[ebp]
movsx	eax, BYTE PTR [edx]
and	eax, 255				
movzx	edx, BYTE PTR _sqlite3UpperToLower[eax]
add	ecx, edx
mov	DWORD PTR _h$[ebp], ecx
mov	eax, DWORD PTR _zIn$[ebp]
add	eax, 1
mov	DWORD PTR _zIn$[ebp], eax
cmp	DWORD PTR _h$[ebp], 1667785074		
jne	SHORT $LN25@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 97			
mov	ecx, DWORD PTR _zIn$[ebp]
mov	DWORD PTR _zChar$[ebp], ecx
jmp	$LN24@sqlite3Aff
cmp	DWORD PTR _h$[ebp], 1668050786		
jne	SHORT $LN23@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 97			
jmp	$LN24@sqlite3Aff
cmp	DWORD PTR _h$[ebp], 1952807028		
jne	SHORT $LN21@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 97			
jmp	$LN24@sqlite3Aff
cmp	DWORD PTR _h$[ebp], 1651273570		
jne	SHORT $LN19@sqlite3Aff
movsx	edx, BYTE PTR _aff$[ebp]
cmp	edx, 99					
je	SHORT $LN18@sqlite3Aff
movsx	eax, BYTE PTR _aff$[ebp]
cmp	eax, 101				
jne	SHORT $LN19@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 98			
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zIn$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 40					
jne	SHORT $LN17@sqlite3Aff
mov	edx, DWORD PTR _zIn$[ebp]
mov	DWORD PTR _zChar$[ebp], edx
jmp	SHORT $LN24@sqlite3Aff
cmp	DWORD PTR _h$[ebp], 1919246700		
jne	SHORT $LN15@sqlite3Aff
movsx	eax, BYTE PTR _aff$[ebp]
cmp	eax, 99					
jne	SHORT $LN15@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 101		
jmp	SHORT $LN24@sqlite3Aff
cmp	DWORD PTR _h$[ebp], 1718382433		
jne	SHORT $LN13@sqlite3Aff
movsx	ecx, BYTE PTR _aff$[ebp]
cmp	ecx, 99					
jne	SHORT $LN13@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 101		
jmp	SHORT $LN24@sqlite3Aff
cmp	DWORD PTR _h$[ebp], 1685026146		
jne	SHORT $LN11@sqlite3Aff
movsx	edx, BYTE PTR _aff$[ebp]
cmp	edx, 99					
jne	SHORT $LN11@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 101		
jmp	SHORT $LN24@sqlite3Aff
mov	eax, DWORD PTR _h$[ebp]
and	eax, 16777215				
cmp	eax, 6909556				
jne	SHORT $LN24@sqlite3Aff
mov	BYTE PTR _aff$[ebp], 100		
jmp	SHORT $LN26@sqlite3Aff
jmp	$LN27@sqlite3Aff
cmp	DWORD PTR _pszEst$[ebp], 0
je	$LN8@sqlite3Aff
mov	ecx, DWORD PTR _pszEst$[ebp]
mov	BYTE PTR [ecx], 1
movsx	edx, BYTE PTR _aff$[ebp]
cmp	edx, 98					
jg	$LN8@sqlite3Aff
cmp	DWORD PTR _zChar$[ebp], 0
je	SHORT $LN6@sqlite3Aff
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zChar$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	SHORT $LN4@sqlite3Aff
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zChar$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 4
je	SHORT $LN3@sqlite3Aff
mov	DWORD PTR _v$1[ebp], 0
lea	eax, DWORD PTR _v$1[ebp]
push	eax
mov	ecx, DWORD PTR _zChar$[ebp]
push	ecx
call	_sqlite3GetInt32
add	esp, 8
mov	eax, DWORD PTR _v$1[ebp]
cdq
and	edx, 3
add	eax, edx
sar	eax, 2
add	eax, 1
mov	DWORD PTR _v$1[ebp], eax
cmp	DWORD PTR _v$1[ebp], 255		
jle	SHORT $LN2@sqlite3Aff
mov	DWORD PTR _v$1[ebp], 255		
mov	edx, DWORD PTR _pszEst$[ebp]
mov	al, BYTE PTR _v$1[ebp]
mov	BYTE PTR [edx], al
jmp	SHORT $LN4@sqlite3Aff
mov	ecx, DWORD PTR _zChar$[ebp]
add	ecx, 1
mov	DWORD PTR _zChar$[ebp], ecx
jmp	SHORT $LN5@sqlite3Aff
jmp	SHORT $LN8@sqlite3Aff
mov	edx, DWORD PTR _pszEst$[ebp]
mov	BYTE PTR [edx], 5
mov	al, BYTE PTR _aff$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetCollSeq PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pColl$[ebp]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN5@sqlite3Get
push	0
mov	eax, DWORD PTR _zName$[ebp]
push	eax
movzx	ecx, BYTE PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Get
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN4@sqlite3Get
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_callCollNeeded
add	esp, 12					
push	0
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3Get
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN2@sqlite3Get
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_synthCollSeq
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Get
mov	DWORD PTR _p$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@sqlite3Get
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
push	OFFSET $SG107974
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AlterBeginAddColumn PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN12@sqlite3Alt
jmp	$exit_begin_add_column$15
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pSrc$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3LocateTableItem
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN11@sqlite3Alt
jmp	$exit_begin_add_column$15
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN10@sqlite3Alt
push	OFFSET $SG105111
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$exit_begin_add_column$15
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN9@sqlite3Alt
push	OFFSET $SG105113
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$exit_begin_add_column$15
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_isSystemTable
add	esp, 8
test	eax, eax
je	SHORT $LN8@sqlite3Alt
jmp	$exit_begin_add_column$15
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
push	76					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN7@sqlite3Alt
jmp	$exit_begin_add_column$15
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+484], ecx
mov	edx, 1
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+40], dx
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	ax, WORD PTR [edx+38]
mov	WORD PTR [ecx+38], ax
mov	ecx, DWORD PTR _pNew$[ebp]
movsx	eax, WORD PTR [ecx+38]
sub	eax, 1
cdq
and	edx, 7
add	eax, edx
sar	eax, 3
lea	edx, DWORD PTR [eax*8+8]
mov	DWORD PTR _nAlloc$[ebp], edx
imul	eax, DWORD PTR _nAlloc$[ebp], 24
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG105123
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pNew$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN5@sqlite3Alt
mov	eax, DWORD PTR _pNew$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN6@sqlite3Alt
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
jmp	$exit_begin_add_column$15
mov	edx, DWORD PTR _pNew$[ebp]
movsx	eax, WORD PTR [edx+38]
imul	ecx, eax, 24
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_memcpy
add	esp, 12					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Alt
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN2@sqlite3Alt
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pNew$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$1[ebp], eax
mov	edx, DWORD PTR _pCol$1[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _pCol$1[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _pCol$1[ebp]
mov	DWORD PTR [eax+16], 0
mov	ecx, DWORD PTR _pCol$1[ebp]
mov	DWORD PTR [ecx+12], 0
mov	edx, DWORD PTR _pCol$1[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pCol$1[ebp]
mov	DWORD PTR [eax+8], 0
jmp	SHORT $LN3@sqlite3Alt
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [eax+ecx+12]
mov	DWORD PTR [edx+68], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR [ecx+48], eax
mov	ecx, 1
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN1@sqlite3Alt
jmp	SHORT $exit_begin_add_column$15
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ChangeCookie
add	esp, 8
mov	edx, DWORD PTR _pSrc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AlterFinishAddColumn PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+64], 0
jne	SHORT $LN14@sqlite3Alt
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN15@sqlite3Alt
jmp	$LN16@sqlite3Alt
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
mov	DWORD PTR _pNew$[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zDb$[ebp], ecx
mov	edx, 1
shl	edx, 4
mov	eax, DWORD PTR _pNew$[ebp]
add	edx, DWORD PTR [eax]
mov	DWORD PTR _zTab$[ebp], edx
mov	ecx, DWORD PTR _pNew$[ebp]
movsx	edx, WORD PTR [ecx+38]
sub	edx, 1
imul	eax, edx, 24
mov	ecx, DWORD PTR _pNew$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$[ebp], eax
mov	edx, DWORD PTR _pCol$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pDflt$[ebp], eax
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _zTab$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
push	26					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN13@sqlite3Alt
jmp	$LN16@sqlite3Alt
cmp	DWORD PTR _pDflt$[ebp], 0
je	SHORT $LN12@sqlite3Alt
mov	edx, DWORD PTR _pDflt$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 101				
jne	SHORT $LN12@sqlite3Alt
mov	DWORD PTR _pDflt$[ebp], 0
mov	ecx, DWORD PTR _pCol$[ebp]
movzx	edx, BYTE PTR [ecx+23]
and	edx, 1
je	SHORT $LN11@sqlite3Alt
push	OFFSET $SG105069
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN16@sqlite3Alt
mov	ecx, DWORD PTR _pNew$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN10@sqlite3Alt
push	OFFSET $SG105071
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN16@sqlite3Alt
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 524288				
je	SHORT $LN9@sqlite3Alt
mov	edx, DWORD PTR _pNew$[ebp]
cmp	DWORD PTR [edx+16], 0
je	SHORT $LN9@sqlite3Alt
cmp	DWORD PTR _pDflt$[ebp], 0
je	SHORT $LN9@sqlite3Alt
push	OFFSET $SG105073
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN16@sqlite3Alt
mov	ecx, DWORD PTR _pCol$[ebp]
movzx	edx, BYTE PTR [ecx+20]
test	edx, edx
je	SHORT $LN8@sqlite3Alt
cmp	DWORD PTR _pDflt$[ebp], 0
jne	SHORT $LN8@sqlite3Alt
push	OFFSET $SG105075
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN16@sqlite3Alt
cmp	DWORD PTR _pDflt$[ebp], 0
je	SHORT $LN7@sqlite3Alt
mov	DWORD PTR _pVal$2[ebp], 0
lea	ecx, DWORD PTR _pVal$2[ebp]
push	ecx
push	98					
push	1
mov	edx, DWORD PTR _pDflt$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ValueFromExpr
add	esp, 20					
test	eax, eax
je	SHORT $LN6@sqlite3Alt
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
jmp	$LN16@sqlite3Alt
cmp	DWORD PTR _pVal$2[ebp], 0
jne	SHORT $LN5@sqlite3Alt
push	OFFSET $SG105080
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN16@sqlite3Alt
mov	eax, DWORD PTR _pVal$2[ebp]
push	eax
call	_sqlite3ValueFree
add	esp, 4
mov	ecx, DWORD PTR _pColDef$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pColDef$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	DWORD PTR _zCol$[ebp], eax
cmp	DWORD PTR _zCol$[ebp], 0
je	$LN4@sqlite3Alt
mov	eax, DWORD PTR _pColDef$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _zCol$[ebp]
lea	eax, DWORD PTR [edx+ecx-1]
mov	DWORD PTR _zEnd$3[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _savedDbFlags$1[ebp], edx
mov	eax, DWORD PTR _zEnd$3[ebp]
cmp	eax, DWORD PTR _zCol$[ebp]
jbe	SHORT $LN2@sqlite3Alt
mov	ecx, DWORD PTR _zEnd$3[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 59					
je	SHORT $LN1@sqlite3Alt
mov	eax, DWORD PTR _zEnd$3[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
je	SHORT $LN2@sqlite3Alt
mov	eax, DWORD PTR _zEnd$3[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _zEnd$3[ebp]
sub	ecx, 1
mov	DWORD PTR _zEnd$3[ebp], ecx
jmp	SHORT $LN3@sqlite3Alt
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
or	eax, 2097152				
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, 1
test	edx, edx
je	SHORT $LN18@sqlite3Alt
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN18@sqlite3Alt
mov	DWORD PTR tv208[ebp], OFFSET $SG105090
jmp	SHORT $LN19@sqlite3Alt
mov	DWORD PTR tv208[ebp], OFFSET $SG105091
mov	eax, DWORD PTR _zTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+48]
add	edx, 1
push	edx
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+48]
push	edx
mov	eax, DWORD PTR tv208[ebp]
push	eax
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
push	OFFSET $SG105092
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 32					
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _savedDbFlags$1[ebp]
mov	DWORD PTR [edx+24], eax
cmp	DWORD PTR _pDflt$[ebp], 0
je	SHORT $LN20@sqlite3Alt
mov	DWORD PTR tv217[ebp], 3
jmp	SHORT $LN21@sqlite3Alt
mov	DWORD PTR tv217[ebp], 2
mov	ecx, DWORD PTR tv217[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3MinimumFileFormat
add	esp, 12					
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_reloadTableSchema
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ColumnDefault PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	$LN4@sqlite3Col
mov	DWORD PTR _pValue$2[ebp], 0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeDb
add	esp, 4
mov	edx, 16					
imul	ecx, edx, 0
mov	edx, DWORD PTR [eax+16]
mov	eax, DWORD PTR [edx+ecx+12]
mov	cl, BYTE PTR [eax+77]
mov	BYTE PTR _enc$3[ebp], cl
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pTab$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _pCol$1[ebp], edx
lea	ecx, DWORD PTR _pValue$2[ebp]
push	ecx
mov	edx, DWORD PTR _pCol$1[ebp]
movzx	eax, BYTE PTR [edx+21]
push	eax
movzx	ecx, BYTE PTR _enc$3[ebp]
push	ecx
mov	edx, DWORD PTR _pCol$1[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeDb
add	esp, 4
push	eax
call	_sqlite3ValueFromExpr
add	esp, 20					
cmp	DWORD PTR _pValue$2[ebp], 0
je	SHORT $LN2@sqlite3Col
push	-8					
mov	edx, DWORD PTR _pValue$2[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
movsx	ecx, BYTE PTR [eax+ecx+21]
cmp	ecx, 101				
jne	SHORT $LN4@sqlite3Col
mov	edx, DWORD PTR _iReg$[ebp]
push	edx
push	39					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ResolveOrderGroupBy PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN7@sqlite3Res
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN8@sqlite3Res
xor	eax, eax
jmp	$LN9@sqlite3Res
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax]
cmp	eax, DWORD PTR [ecx+edx+88]
jle	SHORT $LN6@sqlite3Res
mov	ecx, DWORD PTR _zType$[ebp]
push	ecx
push	OFFSET $SG102856
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	$LN9@sqlite3Res
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pEList$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$[ebp], eax
jmp	SHORT $LN5@sqlite3Res
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 24					
mov	DWORD PTR _pItem$[ebp], edx
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN3@sqlite3Res
mov	edx, DWORD PTR _pItem$[ebp]
movzx	eax, WORD PTR [edx+20]
test	eax, eax
je	SHORT $LN2@sqlite3Res
mov	ecx, DWORD PTR _pItem$[ebp]
movzx	edx, WORD PTR [ecx+20]
mov	eax, DWORD PTR _pEList$[ebp]
cmp	edx, DWORD PTR [eax]
jle	SHORT $LN1@sqlite3Res
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _zType$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_resolveOutOfRangeError
add	esp, 16					
mov	eax, 1
jmp	SHORT $LN9@sqlite3Res
push	0
mov	eax, DWORD PTR _zType$[ebp]
push	eax
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pItem$[ebp]
movzx	ecx, WORD PTR [eax+20]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _pEList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_resolveAlias
add	esp, 24					
jmp	$LN4@sqlite3Res
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ResolveSelfReference PROC
push	ebp
mov	ebp, esp
sub	esp, 128				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	32					
push	0
lea	eax, DWORD PTR _sNC$[ebp]
push	eax
call	_memset
add	esp, 12					
push	88					
push	0
lea	ecx, DWORD PTR _sSrc$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	DWORD PTR _sSrc$[ebp], 1
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _sSrc$[ebp+eax+16], edx
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR _sSrc$[ebp+ecx+24], edx
mov	eax, 80					
imul	ecx, eax, 0
mov	DWORD PTR _sSrc$[ebp+ecx+56], -1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNC$[ebp], edx
lea	eax, DWORD PTR _sSrc$[ebp]
mov	DWORD PTR _sNC$[ebp+4], eax
mov	cl, BYTE PTR _type$[ebp]
mov	BYTE PTR _sNC$[ebp+28], cl
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
lea	eax, DWORD PTR _sNC$[ebp]
push	eax
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN6@sqlite3Res
jmp	SHORT $LN7@sqlite3Res
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN7@sqlite3Res
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Res
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN7@sqlite3Res
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Res
jmp	SHORT $LN7@sqlite3Res
jmp	SHORT $LN3@sqlite3Res
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ResolveSelectNames PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	24					
push	0
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _w$[ebp], OFFSET _resolveExprStep
mov	DWORD PTR _w$[ebp+4], OFFSET _resolveSelectStep
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _w$[ebp+12], ecx
mov	edx, DWORD PTR _pOuterNC$[ebp]
mov	DWORD PTR _w$[ebp+20], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
lea	ecx, DWORD PTR _w$[ebp]
push	ecx
call	_sqlite3WalkSelect
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ResolveExprNames PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN7@sqlite3Res
xor	eax, eax
jmp	$LN8@sqlite3Res
mov	eax, DWORD PTR _pNC$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pParse$1[ebp], ecx
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, DWORD PTR [eax+460]
push	edx
mov	eax, DWORD PTR _pParse$1[ebp]
push	eax
call	_sqlite3ExprCheckHeight
add	esp, 8
test	eax, eax
je	SHORT $LN6@sqlite3Res
mov	eax, 1
jmp	$LN8@sqlite3Res
mov	ecx, DWORD PTR _pParse$1[ebp]
mov	edx, DWORD PTR [ecx+460]
mov	eax, DWORD PTR _pExpr$[ebp]
add	edx, DWORD PTR [eax+24]
mov	ecx, DWORD PTR _pParse$1[ebp]
mov	DWORD PTR [ecx+460], edx
mov	edx, DWORD PTR _pNC$[ebp]
movzx	eax, BYTE PTR [edx+28]
and	eax, 2
mov	BYTE PTR _savedHasAgg$[ebp], al
mov	ecx, DWORD PTR _pNC$[ebp]
movzx	edx, BYTE PTR [ecx+28]
and	edx, -3					
mov	eax, DWORD PTR _pNC$[ebp]
mov	BYTE PTR [eax+28], dl
push	24					
push	0
lea	ecx, DWORD PTR _w$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	DWORD PTR _w$[ebp], OFFSET _resolveExprStep
mov	DWORD PTR _w$[ebp+4], OFFSET _resolveSelectStep
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _w$[ebp+12], eax
mov	ecx, DWORD PTR _pNC$[ebp]
mov	DWORD PTR _w$[ebp+20], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_sqlite3WalkExpr
add	esp, 8
mov	ecx, DWORD PTR _pNC$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [edx+460]
sub	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _pNC$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [eax+460], ecx
mov	ecx, DWORD PTR _pNC$[ebp]
cmp	DWORD PTR [ecx+24], 0
jg	SHORT $LN4@sqlite3Res
mov	edx, DWORD PTR _w$[ebp+12]
cmp	DWORD PTR [edx+64], 0
jle	SHORT $LN5@sqlite3Res
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 8
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pNC$[ebp]
movzx	ecx, BYTE PTR [eax+28]
and	ecx, 2
je	SHORT $LN3@sqlite3Res
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
or	eax, 2
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+4], eax
jmp	SHORT $LN2@sqlite3Res
movzx	edx, BYTE PTR _savedHasAgg$[ebp]
test	edx, edx
je	SHORT $LN2@sqlite3Res
mov	eax, DWORD PTR _pNC$[ebp]
movzx	ecx, BYTE PTR [eax+28]
or	ecx, 2
mov	edx, DWORD PTR _pNC$[ebp]
mov	BYTE PTR [edx+28], cl
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 8
je	SHORT $LN10@sqlite3Res
mov	DWORD PTR tv155[ebp], 1
jmp	SHORT $LN11@sqlite3Res
mov	DWORD PTR tv155[ebp], 0
mov	eax, DWORD PTR tv155[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MatchSpanName PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _n$[ebp], 0
jmp	SHORT $LN11@sqlite3Mat
mov	eax, DWORD PTR _n$[ebp]
add	eax, 1
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _zSpan$[ebp]
add	ecx, DWORD PTR _n$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN9@sqlite3Mat
mov	eax, DWORD PTR _zSpan$[ebp]
add	eax, DWORD PTR _n$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 46					
je	SHORT $LN9@sqlite3Mat
jmp	SHORT $LN10@sqlite3Mat
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN8@sqlite3Mat
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zSpan$[ebp]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN7@sqlite3Mat
mov	edx, DWORD PTR _zDb$[ebp]
add	edx, DWORD PTR _n$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN8@sqlite3Mat
xor	eax, eax
jmp	$LN12@sqlite3Mat
mov	ecx, DWORD PTR _n$[ebp]
mov	edx, DWORD PTR _zSpan$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
mov	DWORD PTR _zSpan$[ebp], eax
mov	DWORD PTR _n$[ebp], 0
jmp	SHORT $LN6@sqlite3Mat
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _zSpan$[ebp]
add	edx, DWORD PTR _n$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN4@sqlite3Mat
mov	ecx, DWORD PTR _zSpan$[ebp]
add	ecx, DWORD PTR _n$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 46					
je	SHORT $LN4@sqlite3Mat
jmp	SHORT $LN5@sqlite3Mat
cmp	DWORD PTR _zTab$[ebp], 0
je	SHORT $LN3@sqlite3Mat
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _zTab$[ebp]
push	ecx
mov	edx, DWORD PTR _zSpan$[ebp]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN2@sqlite3Mat
mov	eax, DWORD PTR _zTab$[ebp]
add	eax, DWORD PTR _n$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN3@sqlite3Mat
xor	eax, eax
jmp	SHORT $LN12@sqlite3Mat
mov	edx, DWORD PTR _n$[ebp]
mov	eax, DWORD PTR _zSpan$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	DWORD PTR _zSpan$[ebp], ecx
cmp	DWORD PTR _zCol$[ebp], 0
je	SHORT $LN1@sqlite3Mat
mov	edx, DWORD PTR _zCol$[ebp]
push	edx
mov	eax, DWORD PTR _zSpan$[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Mat
xor	eax, eax
jmp	SHORT $LN12@sqlite3Mat
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SelectPrep PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN7@sqlite3Sel
jmp	$LN8@sqlite3Sel
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN6@sqlite3Sel
jmp	SHORT $LN8@sqlite3Sel
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+6]
and	edx, 32					
je	SHORT $LN5@sqlite3Sel
jmp	SHORT $LN8@sqlite3Sel
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SelectExpand
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+64], 0
jne	SHORT $LN3@sqlite3Sel
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN4@sqlite3Sel
jmp	SHORT $LN8@sqlite3Sel
mov	edx, DWORD PTR _pOuterNC$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ResolveSelectNames
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+64], 0
jne	SHORT $LN1@sqlite3Sel
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN2@sqlite3Sel
jmp	SHORT $LN8@sqlite3Sel
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3SelectAddTypeInfo
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CodeSubselect PROC
push	ebp
mov	ebp, esp
sub	esp, 136				
mov	DWORD PTR _testAddr$[ebp], -1
mov	DWORD PTR _rReg$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN27@sqlite3Cod
xor	eax, eax
jmp	$LN28@sqlite3Cod
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePush
add	esp, 4
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 32					
jne	SHORT $LN26@sqlite3Cod
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeOnce
add	esp, 4
mov	DWORD PTR _testAddr$[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+450]
cmp	eax, 2
jne	SHORT $LN25@sqlite3Cod
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 75					
jne	SHORT $LN30@sqlite3Cod
mov	DWORD PTR tv82[ebp], OFFSET $SG103836
jmp	SHORT $LN31@sqlite3Cod
mov	DWORD PTR tv82[ebp], OFFSET $SG103837
cmp	DWORD PTR _testAddr$[ebp], 0
jl	SHORT $LN32@sqlite3Cod
mov	DWORD PTR tv85[ebp], OFFSET $SG103838
jmp	SHORT $LN33@sqlite3Cod
mov	DWORD PTR tv85[ebp], OFFSET $SG103839
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+468]
push	ecx
mov	edx, DWORD PTR tv82[ebp]
push	edx
mov	eax, DWORD PTR tv85[ebp]
push	eax
push	OFFSET $SG103840
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3MPrintf
add	esp, 20					
mov	DWORD PTR _zMsg$7[ebp], eax
push	-1
mov	eax, DWORD PTR _zMsg$7[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+464]
push	edx
push	157					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR tv132[ebp], dl
cmp	BYTE PTR tv132[ebp], 75			
je	SHORT $LN22@sqlite3Cod
jmp	$LN5@sqlite3Cod
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pLeft$3[ebp], ecx
mov	DWORD PTR _pKeyInfo$16[ebp], 0
cmp	DWORD PTR _rMayHaveNull$[ebp], 0
je	SHORT $LN21@sqlite3Cod
mov	edx, DWORD PTR _rMayHaveNull$[ebp]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pLeft$3[ebp]
push	ecx
call	_sqlite3ExprAffinity
add	esp, 4
mov	BYTE PTR _affinity$17[ebp], al
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR [edx+28], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
cmp	DWORD PTR _isRowid$[ebp], 0
jne	SHORT $LN34@sqlite3Cod
mov	DWORD PTR tv148[ebp], 1
jmp	SHORT $LN35@sqlite3Cod
mov	DWORD PTR tv148[ebp], 0
mov	edx, DWORD PTR tv148[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	55					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addr$5[ebp], eax
cmp	DWORD PTR _isRowid$[ebp], 0
je	SHORT $LN36@sqlite3Cod
mov	DWORD PTR tv160[ebp], 0
jmp	SHORT $LN37@sqlite3Cod
push	1
push	1
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3KeyInfoAlloc
add	esp, 12					
mov	DWORD PTR tv160[ebp], eax
mov	edx, DWORD PTR tv160[ebp]
mov	DWORD PTR _pKeyInfo$16[ebp], edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 2048				
je	$LN20@sqlite3Cod
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	11					
lea	ecx, DWORD PTR _dest$1[ebp]
push	ecx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	dl, BYTE PTR _affinity$17[ebp]
mov	BYTE PTR _dest$1[ebp+1], dl
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [ecx+8], 0
lea	edx, DWORD PTR _dest$1[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Select
add	esp, 12					
test	eax, eax
je	SHORT $LN19@sqlite3Cod
mov	eax, DWORD PTR _pKeyInfo$16[ebp]
push	eax
call	_sqlite3KeyInfoUnref
add	esp, 4
xor	eax, eax
jmp	$LN28@sqlite3Cod
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pEList$4[ebp], eax
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pEList$4[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BinaryCompareCollSeq
add	esp, 12					
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _pKeyInfo$16[ebp]
mov	DWORD PTR [ecx+edx+20], eax
jmp	$LN18@sqlite3Cod
mov	edx, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [edx+20], 0
je	$LN18@sqlite3Cod
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pList$9[ebp], ecx
movsx	edx, BYTE PTR _affinity$17[ebp]
test	edx, edx
jne	SHORT $LN16@sqlite3Cod
mov	BYTE PTR _affinity$17[ebp], 98		
cmp	DWORD PTR _pKeyInfo$16[ebp], 0
je	SHORT $LN15@sqlite3Cod
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCollSeq
add	esp, 8
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _pKeyInfo$16[ebp]
mov	DWORD PTR [ecx+edx+20], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$8[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r2$15[ebp], eax
mov	ecx, DWORD PTR _r2$15[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pList$9[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _i$12[ebp], ecx
mov	edx, DWORD PTR _pList$9[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$11[ebp], eax
jmp	SHORT $LN14@sqlite3Cod
mov	ecx, DWORD PTR _i$12[ebp]
sub	ecx, 1
mov	DWORD PTR _i$12[ebp], ecx
mov	edx, DWORD PTR _pItem$11[ebp]
add	edx, 24					
mov	DWORD PTR _pItem$11[ebp], edx
cmp	DWORD PTR _i$12[ebp], 0
jle	$LN12@sqlite3Cod
mov	eax, DWORD PTR _pItem$11[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pE2$10[ebp], ecx
cmp	DWORD PTR _testAddr$[ebp], 0
jl	SHORT $LN11@sqlite3Cod
mov	edx, DWORD PTR _pE2$10[ebp]
push	edx
call	_sqlite3ExprIsConstant
add	esp, 4
test	eax, eax
jne	SHORT $LN11@sqlite3Cod
mov	eax, DWORD PTR _testAddr$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeToNoop
add	esp, 8
mov	DWORD PTR _testAddr$[ebp], -1
cmp	DWORD PTR _isRowid$[ebp], 0
je	SHORT $LN10@sqlite3Cod
lea	edx, DWORD PTR _iValToIns$6[ebp]
push	edx
mov	eax, DWORD PTR _pE2$10[ebp]
push	eax
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
je	SHORT $LN10@sqlite3Cod
mov	ecx, DWORD PTR _iValToIns$6[ebp]
push	ecx
mov	edx, DWORD PTR _r2$15[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	73					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	$LN9@sqlite3Cod
mov	eax, DWORD PTR _r1$8[ebp]
push	eax
mov	ecx, DWORD PTR _pE2$10[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _r3$14[ebp], eax
cmp	DWORD PTR _isRowid$[ebp], 0
je	SHORT $LN8@sqlite3Cod
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 2
push	eax
mov	ecx, DWORD PTR _r3$14[ebp]
push	ecx
push	38					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _r3$14[ebp]
push	eax
mov	ecx, DWORD PTR _r2$15[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	70					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN9@sqlite3Cod
push	1
lea	edx, DWORD PTR _affinity$17[ebp]
push	edx
mov	eax, DWORD PTR _r2$15[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _r3$14[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	eax, DWORD PTR _r3$14[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	edx, DWORD PTR _r2$15[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	107					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN13@sqlite3Cod
mov	eax, DWORD PTR _r1$8[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _r2$15[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
cmp	DWORD PTR _pKeyInfo$16[ebp], 0
je	SHORT $LN6@sqlite3Cod
push	-6					
mov	ecx, DWORD PTR _pKeyInfo$16[ebp]
push	ecx
mov	edx, DWORD PTR _addr$5[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
jmp	$LN23@sqlite3Cod
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pSel$13[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv280[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv280[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv280[ebp]
push	ecx
push	0
lea	edx, DWORD PTR _dest$2[ebp]
push	edx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 119				
jne	SHORT $LN4@sqlite3Cod
mov	BYTE PTR _dest$2[ebp], 10		
mov	edx, DWORD PTR _dest$2[ebp+4]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN3@sqlite3Cod
mov	BYTE PTR _dest$2[ebp], 3
mov	ecx, DWORD PTR _dest$2[ebp+4]
push	ecx
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pSel$13[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, 8
shl	ecx, 0
add	ecx, OFFSET _sqlite3IntTokens
push	ecx
push	0
push	0
push	132					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3PExpr
add	esp, 20					
mov	ecx, DWORD PTR _pSel$13[ebp]
mov	DWORD PTR [ecx+60], eax
mov	edx, DWORD PTR _pSel$13[ebp]
mov	DWORD PTR [edx+8], 0
lea	eax, DWORD PTR _dest$2[ebp]
push	eax
mov	ecx, DWORD PTR _pSel$13[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Select
add	esp, 12					
test	eax, eax
je	SHORT $LN2@sqlite3Cod
xor	eax, eax
jmp	SHORT $LN28@sqlite3Cod
mov	eax, DWORD PTR _dest$2[ebp+4]
mov	DWORD PTR _rReg$[ebp], eax
cmp	DWORD PTR _testAddr$[ebp], 0
jl	SHORT $LN1@sqlite3Cod
mov	ecx, DWORD PTR _testAddr$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePop
add	esp, 4
mov	eax, DWORD PTR _rReg$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExpirePreparedStatements PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
or	edx, 32					
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+88], edx
jmp	SHORT $LN2@sqlite3Exp
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3NestedParse PROC
push	ebp
mov	ebp, esp
sub	esp, 116				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _zErrMsg$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+64], 0
je	SHORT $LN2@sqlite3Nes
jmp	$LN3@sqlite3Nes
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VMPrintf
add	esp, 12					
mov	DWORD PTR _zSql$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
cmp	DWORD PTR _zSql$[ebp], 0
jne	SHORT $LN1@sqlite3Nes
jmp	$LN3@sqlite3Nes
mov	ecx, DWORD PTR _pParse$[ebp]
mov	dl, BYTE PTR [ecx+18]
add	dl, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+18], dl
push	96					
mov	ecx, DWORD PTR _pParse$[ebp]
add	ecx, 440				
push	ecx
lea	edx, DWORD PTR _saveBuf$[ebp]
push	edx
call	_memcpy
add	esp, 12					
push	96					
push	0
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 440				
push	eax
call	_memset
add	esp, 12					
lea	ecx, DWORD PTR _zErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3RunParser
add	esp, 12					
mov	ecx, DWORD PTR _zErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
push	96					
lea	edx, DWORD PTR _saveBuf$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 440				
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	dl, BYTE PTR [ecx+18]
sub	dl, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+18], dl
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetToken PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv65[ebp], ecx
mov	edx, DWORD PTR tv65[ebp]
sub	edx, 9
mov	DWORD PTR tv65[ebp], edx
cmp	DWORD PTR tv65[ebp], 117		
ja	$LN5@sqlite3Get
mov	eax, DWORD PTR tv65[ebp]
movzx	ecx, BYTE PTR $LN122@sqlite3Get[eax]
jmp	DWORD PTR $LN124@sqlite3Get[ecx*4]
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN112@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
je	SHORT $LN110@sqlite3Get
jmp	SHORT $LN111@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 151			
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
cmp	eax, 45					
jne	SHORT $LN108@sqlite3Get
mov	DWORD PTR _i$[ebp], 2
jmp	SHORT $LN107@sqlite3Get
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN105@sqlite3Get
cmp	DWORD PTR _c$[ebp], 10			
je	SHORT $LN105@sqlite3Get
jmp	SHORT $LN106@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 151			
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 90			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 22			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 23			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 1
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 89			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 91			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 42					
jne	SHORT $LN97@sqlite3Get
mov	edx, 1
shl	edx, 1
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
jne	SHORT $LN98@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 92			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	DWORD PTR _i$[ebp], 3
mov	eax, 1
shl	eax, 1
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
mov	DWORD PTR _c$[ebp], edx
jmp	SHORT $LN96@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _c$[ebp], 42			
jne	SHORT $LN93@sqlite3Get
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 47					
je	SHORT $LN94@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN94@sqlite3Get
jmp	SHORT $LN95@sqlite3Get
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN92@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 151			
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 93			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 79			
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
cmp	edx, 61					
jne	SHORT $LN118@sqlite3Get
mov	DWORD PTR tv144[ebp], 1
jmp	SHORT $LN119@sqlite3Get
mov	DWORD PTR tv144[ebp], 0
mov	eax, DWORD PTR tv144[ebp]
add	eax, 1
jmp	$LN116@sqlite3Get
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
mov	DWORD PTR _c$[ebp], edx
cmp	DWORD PTR _c$[ebp], 61			
jne	SHORT $LN88@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 81			
mov	eax, 2
jmp	$LN116@sqlite3Get
jmp	SHORT $LN82@sqlite3Get
cmp	DWORD PTR _c$[ebp], 62			
jne	SHORT $LN86@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 78			
mov	eax, 2
jmp	$LN116@sqlite3Get
jmp	SHORT $LN82@sqlite3Get
cmp	DWORD PTR _c$[ebp], 60			
jne	SHORT $LN84@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 87			
mov	eax, 2
jmp	$LN116@sqlite3Get
jmp	SHORT $LN82@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 82			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 61			
jne	SHORT $LN81@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 83			
mov	eax, 2
jmp	$LN116@sqlite3Get
jmp	SHORT $LN77@sqlite3Get
cmp	DWORD PTR _c$[ebp], 62			
jne	SHORT $LN79@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 88			
mov	eax, 2
jmp	$LN116@sqlite3Get
jmp	SHORT $LN77@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 80			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
cmp	eax, 61					
je	SHORT $LN76@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 150			
mov	eax, 2
jmp	$LN116@sqlite3Get
jmp	SHORT $LN74@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 78			
mov	eax, 2
jmp	$LN116@sqlite3Get
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
cmp	edx, 124				
je	SHORT $LN73@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 86			
mov	eax, 1
jmp	$LN116@sqlite3Get
jmp	SHORT $LN71@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 94			
mov	eax, 2
jmp	$LN116@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 26			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 85			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 96			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
mov	DWORD PTR _delim$1[ebp], edx
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN67@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _c$[ebp], edx
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN65@sqlite3Get
mov	eax, DWORD PTR _c$[ebp]
cmp	eax, DWORD PTR _delim$1[ebp]
jne	SHORT $LN64@sqlite3Get
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx+1]
cmp	edx, DWORD PTR _delim$1[ebp]
jne	SHORT $LN63@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN64@sqlite3Get
jmp	SHORT $LN65@sqlite3Get
jmp	SHORT $LN66@sqlite3Get
cmp	DWORD PTR _c$[ebp], 39			
jne	SHORT $LN61@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 97			
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
jmp	$LN116@sqlite3Get
jmp	SHORT $LN57@sqlite3Get
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN59@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 27			
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
jmp	$LN116@sqlite3Get
jmp	SHORT $LN57@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 150			
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
jne	SHORT $LN55@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 122			
mov	eax, 1
jmp	$LN116@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 132			
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN54@sqlite3Get
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
je	SHORT $LN52@sqlite3Get
jmp	SHORT $LN53@sqlite3Get
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 46					
jne	SHORT $LN51@sqlite3Get
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
je	SHORT $LN49@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN50@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 133			
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 101				
je	SHORT $LN47@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 69					
jne	SHORT $LN42@sqlite3Get
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx+1]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
jne	SHORT $LN46@sqlite3Get
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
movzx	eax, BYTE PTR [edx+1]
cmp	eax, 43					
je	SHORT $LN45@sqlite3Get
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx+1]
cmp	edx, 45					
jne	SHORT $LN42@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax+2]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 4
je	SHORT $LN42@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 2
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 4
je	SHORT $LN43@sqlite3Get
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN44@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 133			
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 70					
je	SHORT $LN41@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 150			
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN42@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	DWORD PTR _i$[ebp], 1
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
mov	DWORD PTR _c$[ebp], edx
jmp	SHORT $LN39@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _c$[ebp], 93			
je	SHORT $LN37@sqlite3Get
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _c$[ebp], edx
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN37@sqlite3Get
jmp	SHORT $LN38@sqlite3Get
cmp	DWORD PTR _c$[ebp], 93			
jne	SHORT $LN120@sqlite3Get
mov	DWORD PTR tv280[ebp], 27		
jmp	SHORT $LN121@sqlite3Get
mov	DWORD PTR tv280[ebp], 150		
mov	eax, DWORD PTR _tokenType$[ebp]
mov	ecx, DWORD PTR tv280[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 135			
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN35@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 4
je	SHORT $LN33@sqlite3Get
jmp	SHORT $LN34@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	DWORD PTR _n$2[ebp], 0
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 135			
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN31@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
cmp	DWORD PTR _c$[ebp], 0
je	$LN29@sqlite3Get
movzx	edx, BYTE PTR _c$[ebp]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 70					
je	SHORT $LN28@sqlite3Get
mov	ecx, DWORD PTR _n$2[ebp]
add	ecx, 1
mov	DWORD PTR _n$2[ebp], ecx
jmp	SHORT $LN27@sqlite3Get
cmp	DWORD PTR _c$[ebp], 40			
jne	SHORT $LN26@sqlite3Get
cmp	DWORD PTR _n$2[ebp], 0
jle	SHORT $LN26@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN23@sqlite3Get
movzx	edx, BYTE PTR _c$[ebp]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 1
jne	SHORT $LN23@sqlite3Get
cmp	DWORD PTR _c$[ebp], 41			
jne	SHORT $LN25@sqlite3Get
cmp	DWORD PTR _c$[ebp], 41			
jne	SHORT $LN21@sqlite3Get
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN20@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 150			
jmp	SHORT $LN29@sqlite3Get
jmp	SHORT $LN27@sqlite3Get
cmp	DWORD PTR _c$[ebp], 58			
jne	SHORT $LN18@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax+1]
cmp	ecx, 58					
jne	SHORT $LN18@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN27@sqlite3Get
jmp	SHORT $LN29@sqlite3Get
jmp	$LN30@sqlite3Get
cmp	DWORD PTR _n$2[ebp], 0
jne	SHORT $LN16@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 150			
mov	eax, DWORD PTR _i$[ebp]
jmp	$LN116@sqlite3Get
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
cmp	eax, 39					
jne	$LN5@sqlite3Get
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], 134			
mov	DWORD PTR _i$[ebp], 2
jmp	SHORT $LN13@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 8
je	SHORT $LN11@sqlite3Get
jmp	SHORT $LN12@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 39					
jne	SHORT $LN9@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
and	edx, -2147483647			
jns	SHORT $LN123@sqlite3Get
dec	edx
or	edx, -2					
inc	edx
test	edx, edx
je	SHORT $LN10@sqlite3Get
mov	eax, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [eax], 150			
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN10@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 39					
je	SHORT $LN10@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN8@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN6@sqlite3Get
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
jmp	SHORT $LN116@sqlite3Get
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 70					
jne	SHORT $LN4@sqlite3Get
jmp	SHORT $LN114@sqlite3Get
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN3@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 70					
je	SHORT $LN1@sqlite3Get
jmp	SHORT $LN2@sqlite3Get
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_keywordCode
add	esp, 8
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, DWORD PTR _i$[ebp]
jmp	SHORT $LN116@sqlite3Get
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR [edx], 150			
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
DD	$LN113@sqlite3Get
DD	$LN77@sqlite3Get
DD	$LN68@sqlite3Get
DD	$LN32@sqlite3Get
DD	$LN91@sqlite3Get
DD	$LN70@sqlite3Get
DD	$LN104@sqlite3Get
DD	$LN103@sqlite3Get
DD	$LN100@sqlite3Get
DD	$LN101@sqlite3Get
DD	$LN71@sqlite3Get
DD	$LN109@sqlite3Get
DD	$LN57@sqlite3Get
DD	$LN99@sqlite3Get
DD	$LN55@sqlite3Get
DD	$LN102@sqlite3Get
DD	$LN89@sqlite3Get
DD	$LN90@sqlite3Get
DD	$LN82@sqlite3Get
DD	$LN36@sqlite3Get
DD	$LN15@sqlite3Get
DD	$LN40@sqlite3Get
DD	$LN74@sqlite3Get
DD	$LN69@sqlite3Get
DD	$LN5@sqlite3Get
DB	0
DB	0
DB	24					
DB	0
DB	0
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	0
DB	1
DB	2
DB	3
DB	3
DB	4
DB	5
DB	2
DB	6
DB	7
DB	8
DB	9
DB	10					
DB	11					
DB	12					
DB	13					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	14					
DB	3
DB	15					
DB	16					
DB	17					
DB	18					
DB	19					
DB	3
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	20					
DB	24					
DB	24					
DB	21					
DB	24					
DB	24					
DB	24					
DB	24					
DB	2
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	24					
DB	20					
DB	24					
DB	24					
DB	24					
DB	22					
DB	24					
DB	23					
ENDP
_sqlite3AlterRenameTable PROC
push	ebp
mov	ebp, esp
sub	esp, 72					
mov	DWORD PTR _zName$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _zWhere$[ebp], 0
mov	DWORD PTR _pVTab$[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _savedDbFlags$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN23@sqlite3Alt
jmp	$exit_rename_table$32
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pSrc$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateTableItem
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN22@sqlite3Alt
jmp	$exit_rename_table$32
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zDb$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
or	edx, 2097152				
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR _pName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN21@sqlite3Alt
jmp	$exit_rename_table$32
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
test	eax, eax
jne	SHORT $LN19@sqlite3Alt
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindIndex
add	esp, 12					
test	eax, eax
je	SHORT $LN20@sqlite3Alt
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG105002
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_rename_table$32
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_isSystemTable
add	esp, 8
test	eax, eax
je	SHORT $LN18@sqlite3Alt
jmp	$exit_rename_table$32
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CheckObjectName
add	esp, 8
test	eax, eax
je	SHORT $LN17@sqlite3Alt
jmp	$exit_rename_table$32
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN16@sqlite3Alt
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG105006
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_rename_table$32
push	0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
push	26					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN15@sqlite3Alt
jmp	$exit_rename_table$32
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ViewGetColumnNames
add	esp, 8
test	eax, eax
je	SHORT $LN14@sqlite3Alt
jmp	$exit_rename_table$32
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN13@sqlite3Alt
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3GetVTable
add	esp, 8
mov	DWORD PTR _pVTab$[ebp], eax
mov	eax, DWORD PTR _pVTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR [ecx]
cmp	DWORD PTR [edx+76], 0
jne	SHORT $LN13@sqlite3Alt
mov	DWORD PTR _pVTab$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN11@sqlite3Alt
jmp	$exit_rename_table$32
cmp	DWORD PTR _pVTab$[ebp], 0
je	SHORT $LN26@sqlite3Alt
mov	DWORD PTR tv181[ebp], 1
jmp	SHORT $LN27@sqlite3Alt
mov	DWORD PTR tv181[ebp], 0
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR tv181[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ChangeCookie
add	esp, 8
cmp	DWORD PTR _pVTab$[ebp], 0
je	SHORT $LN10@sqlite3Alt
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv189[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv189[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv189[ebp]
mov	DWORD PTR _i$2[ebp], ecx
push	0
mov	edx, DWORD PTR _zName$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _i$2[ebp]
push	eax
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	-10					
mov	edx, DWORD PTR _pVTab$[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _i$2[ebp]
push	eax
push	152					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3MayAbort
add	esp, 4
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _zTabName$[ebp], ecx
push	-1
mov	edx, DWORD PTR _zTabName$[ebp]
push	edx
call	_sqlite3Utf8CharLen
add	esp, 8
mov	DWORD PTR _nTabName$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 524288				
je	SHORT $LN9@sqlite3Alt
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_whereForeignKeys
add	esp, 8
mov	DWORD PTR _zWhere$[ebp], eax
cmp	DWORD PTR _zWhere$[ebp], 0
je	SHORT $LN9@sqlite3Alt
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN28@sqlite3Alt
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN28@sqlite3Alt
mov	DWORD PTR tv221[ebp], OFFSET $SG105017
jmp	SHORT $LN29@sqlite3Alt
mov	DWORD PTR tv221[ebp], OFFSET $SG105018
mov	edx, DWORD PTR _zWhere$[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _zTabName$[ebp]
push	ecx
mov	edx, DWORD PTR tv221[ebp]
push	edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
push	OFFSET $SG105019
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3NestedParse
add	esp, 28					
mov	edx, DWORD PTR _zWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN30@sqlite3Alt
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN30@sqlite3Alt
mov	DWORD PTR tv237[ebp], OFFSET $SG105020
jmp	SHORT $LN31@sqlite3Alt
mov	DWORD PTR tv237[ebp], OFFSET $SG105021
mov	edx, DWORD PTR _zTabName$[ebp]
push	edx
mov	eax, DWORD PTR _nTabName$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR tv237[ebp]
push	eax
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
push	OFFSET $SG105022
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 44					
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
push	OFFSET $SG105024
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindTable
add	esp, 12					
test	eax, eax
je	SHORT $LN7@sqlite3Alt
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
push	OFFSET $SG105025
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3NestedParse
add	esp, 20					
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_whereTempTriggers
add	esp, 8
mov	DWORD PTR _zWhere$[ebp], eax
cmp	DWORD PTR _zWhere$[ebp], 0
je	SHORT $LN6@sqlite3Alt
mov	eax, DWORD PTR _zWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
push	OFFSET $SG105027
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3NestedParse
add	esp, 20					
mov	ecx, DWORD PTR _zWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 524288				
je	SHORT $LN5@sqlite3Alt
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
call	_sqlite3FkReferences
add	esp, 4
mov	DWORD PTR _p$3[ebp], eax
jmp	SHORT $LN4@sqlite3Alt
mov	eax, DWORD PTR _p$3[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _p$3[ebp], ecx
cmp	DWORD PTR _p$3[ebp], 0
je	SHORT $LN5@sqlite3Alt
mov	edx, DWORD PTR _p$3[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pFrom$1[ebp], eax
mov	ecx, DWORD PTR _pFrom$1[ebp]
cmp	ecx, DWORD PTR _pTab$[ebp]
je	SHORT $LN1@sqlite3Alt
mov	edx, DWORD PTR _pFrom$1[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _p$3[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_reloadTableSchema
add	esp, 12					
jmp	SHORT $LN3@sqlite3Alt
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_reloadTableSchema
add	esp, 12					
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SrcListDelete
add	esp, 8
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _savedDbFlags$[ebp]
mov	DWORD PTR [edx+24], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AlterFunctions PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _pHash$[ebp], OFFSET _sqlite3GlobalFunctions
mov	DWORD PTR _aFunc$[ebp], OFFSET ?aAlterTableFuncs@?1??sqlite3AlterFunctions@@9@9
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Alt
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 3
jge	SHORT $LN4@sqlite3Alt
imul	ecx, DWORD PTR _i$[ebp], 36
add	ecx, DWORD PTR _aFunc$[ebp]
push	ecx
mov	edx, DWORD PTR _pHash$[ebp]
push	edx
call	_sqlite3FuncDefInsert
add	esp, 8
jmp	SHORT $LN2@sqlite3Alt
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Reindex PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN11@sqlite3Rei
jmp	$LN12@sqlite3Rei
cmp	DWORD PTR _pName1$[ebp], 0
jne	SHORT $LN10@sqlite3Rei
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_reindexDatabases
add	esp, 8
jmp	$LN12@sqlite3Rei
jmp	$LN9@sqlite3Rei
cmp	DWORD PTR _pName2$[ebp], 0
je	SHORT $LN7@sqlite3Rei
mov	ecx, DWORD PTR _pName2$[ebp]
cmp	DWORD PTR [ecx], 0
jne	$LN9@sqlite3Rei
mov	edx, DWORD PTR _pName1$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zColl$1[ebp], eax
cmp	DWORD PTR _zColl$1[ebp], 0
jne	SHORT $LN6@sqlite3Rei
jmp	$LN12@sqlite3Rei
push	0
mov	edx, DWORD PTR _zColl$1[ebp]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
movzx	edx, BYTE PTR [ecx+77]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _pColl$[ebp], eax
cmp	DWORD PTR _pColl$[ebp], 0
je	SHORT $LN5@sqlite3Rei
mov	ecx, DWORD PTR _zColl$1[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_reindexDatabases
add	esp, 8
mov	eax, DWORD PTR _zColl$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN12@sqlite3Rei
mov	edx, DWORD PTR _zColl$1[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
lea	ecx, DWORD PTR _pObjName$[ebp]
push	ecx
mov	edx, DWORD PTR _pName2$[ebp]
push	edx
mov	eax, DWORD PTR _pName1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TwoPartName
add	esp, 16					
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN4@sqlite3Rei
jmp	$LN12@sqlite3Rei
mov	edx, DWORD PTR _pObjName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN3@sqlite3Rei
jmp	$LN12@sqlite3Rei
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zDb$[ebp], ecx
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN2@sqlite3Rei
push	0
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_reindexTable
add	esp, 12					
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN12@sqlite3Rei
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindIndex
add	esp, 12					
mov	DWORD PTR _pIndex$[ebp], eax
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN1@sqlite3Rei
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BeginWriteOperation
add	esp, 12					
push	-1
mov	ecx, DWORD PTR _pIndex$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3RefillIndex
add	esp, 12					
jmp	SHORT $LN12@sqlite3Rei
push	OFFSET $SG107859
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RootPageMoved PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$[ebp], eax
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+12]
add	eax, 8
mov	DWORD PTR _pHash$[ebp], eax
mov	ecx, DWORD PTR _pHash$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pElem$[ebp], edx
jmp	SHORT $LN8@sqlite3Roo
mov	eax, DWORD PTR _pElem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pElem$[ebp], ecx
cmp	DWORD PTR _pElem$[ebp], 0
je	SHORT $LN6@sqlite3Roo
mov	edx, DWORD PTR _pElem$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pTab$2[ebp], eax
mov	ecx, DWORD PTR _pTab$2[ebp]
mov	edx, DWORD PTR [ecx+32]
cmp	edx, DWORD PTR _iFrom$[ebp]
jne	SHORT $LN5@sqlite3Roo
mov	eax, DWORD PTR _pTab$2[ebp]
mov	ecx, DWORD PTR _iTo$[ebp]
mov	DWORD PTR [eax+32], ecx
jmp	SHORT $LN7@sqlite3Roo
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+12]
add	eax, 24					
mov	DWORD PTR _pHash$[ebp], eax
mov	ecx, DWORD PTR _pHash$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pElem$[ebp], edx
jmp	SHORT $LN4@sqlite3Roo
mov	eax, DWORD PTR _pElem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pElem$[ebp], ecx
cmp	DWORD PTR _pElem$[ebp], 0
je	SHORT $LN9@sqlite3Roo
mov	edx, DWORD PTR _pElem$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$1[ebp], eax
mov	ecx, DWORD PTR _pIdx$1[ebp]
mov	edx, DWORD PTR [ecx+44]
cmp	edx, DWORD PTR _iFrom$[ebp]
jne	SHORT $LN1@sqlite3Roo
mov	eax, DWORD PTR _pIdx$1[ebp]
mov	ecx, DWORD PTR _iTo$[ebp]
mov	DWORD PTR [eax+44], ecx
jmp	SHORT $LN3@sqlite3Roo
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ValueApplyAffinity PROC
push	ebp
mov	ebp, esp
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
movzx	ecx, BYTE PTR _affinity$[ebp]
push	ecx
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_applyAffinity
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3ValueFromExpr PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _ppVal$[ebp]
push	eax
movzx	ecx, BYTE PTR _affinity$[ebp]
push	ecx
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_valueFromExpr
add	esp, 24					
pop	ebp
ret	0
ENDP
_sqlite3Utf16to8 PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
push	40					
push	0
lea	eax, DWORD PTR _m$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR _m$[ebp], ecx
push	0
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
lea	edx, DWORD PTR _m$[ebp]
push	edx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
push	1
lea	eax, DWORD PTR _m$[ebp]
push	eax
call	_sqlite3VdbeChangeEncoding
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN1@sqlite3Utf
lea	eax, DWORD PTR _m$[ebp]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	DWORD PTR _m$[ebp+4], 0
mov	eax, DWORD PTR _m$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ValueNew PROC
push	ebp
mov	ebp, esp
push	ecx
push	40					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Val
mov	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ValueFree PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN1@sqlite3Val
jmp	SHORT $LN2@sqlite3Val
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMemRelease
add	esp, 4
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3ValueSetNull PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeMemSetNull
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3ValueSetStr PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN2@sqlite3Val
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
movzx	ecx, BYTE PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3ValueBytes PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pVal$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 16					
jne	SHORT $LN3@sqlite3Val
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3ValueText
add	esp, 8
test	eax, eax
je	SHORT $LN4@sqlite3Val
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 16384				
je	SHORT $LN2@sqlite3Val
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+24]
mov	edx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [edx+16]
jmp	SHORT $LN5@sqlite3Val
jmp	SHORT $LN4@sqlite3Val
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+24]
jmp	SHORT $LN5@sqlite3Val
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ValueText PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pVal$[ebp], 0
jne	SHORT $LN8@sqlite3Val
xor	eax, eax
jmp	$LN9@sqlite3Val
mov	eax, DWORD PTR _pVal$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 1
je	SHORT $LN7@sqlite3Val
xor	eax, eax
jmp	$LN9@sqlite3Val
mov	edx, DWORD PTR _pVal$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 16					
sar	eax, 3
mov	ecx, DWORD PTR _pVal$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, eax
mov	eax, DWORD PTR _pVal$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pVal$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 16384				
je	SHORT $LN11@sqlite3Val
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	DWORD PTR tv84[ebp], eax
jmp	SHORT $LN12@sqlite3Val
mov	DWORD PTR tv84[ebp], 0
mov	ecx, DWORD PTR _pVal$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 2
je	SHORT $LN6@sqlite3Val
movzx	eax, BYTE PTR _enc$[ebp]
and	eax, -9					
push	eax
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
movzx	edx, BYTE PTR _enc$[ebp]
and	edx, 8
je	SHORT $LN5@sqlite3Val
mov	eax, DWORD PTR _pVal$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 1
je	SHORT $LN5@sqlite3Val
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3VdbeMemMakeWriteable
add	esp, 4
test	eax, eax
je	SHORT $LN5@sqlite3Val
xor	eax, eax
jmp	SHORT $LN9@sqlite3Val
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3VdbeMemNulTerminate
add	esp, 4
jmp	SHORT $LN3@sqlite3Val
movzx	ecx, BYTE PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3VdbeMemStringify
add	esp, 8
mov	eax, DWORD PTR _pVal$[ebp]
movzx	ecx, BYTE PTR [eax+30]
movzx	edx, BYTE PTR _enc$[ebp]
and	edx, -9					
cmp	ecx, edx
jne	SHORT $LN2@sqlite3Val
mov	eax, DWORD PTR _pVal$[ebp]
mov	eax, DWORD PTR [eax+4]
jmp	SHORT $LN9@sqlite3Val
jmp	SHORT $LN9@sqlite3Val
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetBoolean PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _dflt$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_getSafetyLevel
add	esp, 12					
movzx	edx, al
test	edx, edx
je	SHORT $LN3@sqlite3Get
mov	DWORD PTR tv70[ebp], 1
jmp	SHORT $LN4@sqlite3Get
mov	DWORD PTR tv70[ebp], 0
mov	al, BYTE PTR tv70[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AbsInt32 PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _x$[ebp], 0
jl	SHORT $LN2@sqlite3Abs
mov	eax, DWORD PTR _x$[ebp]
jmp	SHORT $LN3@sqlite3Abs
cmp	DWORD PTR _x$[ebp], -2147483648		
jne	SHORT $LN1@sqlite3Abs
mov	eax, 2147483647				
jmp	SHORT $LN3@sqlite3Abs
mov	eax, DWORD PTR _x$[ebp]
neg	eax
pop	ebp
ret	0
ENDP
_sqlite3MulInt64 PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _iA$[ebp], ecx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR _iA$[ebp+4], edx
push	1
push	0
mov	eax, DWORD PTR _iA$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iA$[ebp]
push	ecx
call	__alldiv
mov	DWORD PTR _iA1$[ebp], eax
mov	DWORD PTR _iA1$[ebp+4], edx
push	1
push	0
mov	edx, DWORD PTR _iA$[ebp+4]
push	edx
mov	eax, DWORD PTR _iA$[ebp]
push	eax
call	__allrem
mov	DWORD PTR _iA0$[ebp], eax
mov	DWORD PTR _iA0$[ebp+4], edx
push	1
push	0
mov	ecx, DWORD PTR _iB$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iB$[ebp]
push	edx
call	__alldiv
mov	DWORD PTR _iB1$[ebp], eax
mov	DWORD PTR _iB1$[ebp+4], edx
push	1
push	0
mov	eax, DWORD PTR _iB$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iB$[ebp]
push	ecx
call	__allrem
mov	DWORD PTR _iB0$[ebp], eax
mov	DWORD PTR _iB0$[ebp+4], edx
mov	edx, DWORD PTR _iA1$[ebp]
or	edx, DWORD PTR _iA1$[ebp+4]
jne	SHORT $LN8@sqlite3Mul
mov	eax, DWORD PTR _iB1$[ebp]
or	eax, DWORD PTR _iB1$[ebp+4]
jne	SHORT $LN7@sqlite3Mul
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR _iB$[ebp+4]
push	edx
mov	eax, DWORD PTR _iB$[ebp]
push	eax
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR [ecx]
push	eax
call	__allmul
mov	ecx, DWORD PTR _pA$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
xor	eax, eax
jmp	$LN9@sqlite3Mul
mov	edx, DWORD PTR _iB1$[ebp+4]
push	edx
mov	eax, DWORD PTR _iB1$[ebp]
push	eax
mov	ecx, DWORD PTR _iA0$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iA0$[ebp]
push	edx
call	__allmul
mov	DWORD PTR _r$[ebp], eax
mov	DWORD PTR _r$[ebp+4], edx
jmp	SHORT $LN6@sqlite3Mul
mov	eax, DWORD PTR _iB1$[ebp]
or	eax, DWORD PTR _iB1$[ebp+4]
jne	SHORT $LN5@sqlite3Mul
mov	ecx, DWORD PTR _iB0$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iB0$[ebp]
push	edx
mov	eax, DWORD PTR _iA1$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iA1$[ebp]
push	ecx
call	__allmul
mov	DWORD PTR _r$[ebp], eax
mov	DWORD PTR _r$[ebp+4], edx
jmp	SHORT $LN6@sqlite3Mul
mov	eax, 1
jmp	SHORT $LN9@sqlite3Mul
cmp	DWORD PTR _r$[ebp+4], -1
jl	SHORT $LN2@sqlite3Mul
jg	SHORT $LN11@sqlite3Mul
cmp	DWORD PTR _r$[ebp], -2147483648		
jb	SHORT $LN2@sqlite3Mul
cmp	DWORD PTR _r$[ebp+4], 0
jl	SHORT $LN3@sqlite3Mul
jg	SHORT $LN2@sqlite3Mul
cmp	DWORD PTR _r$[ebp], -2147483648		
jb	SHORT $LN3@sqlite3Mul
mov	eax, 1
jmp	SHORT $LN9@sqlite3Mul
push	1
push	0
mov	edx, DWORD PTR _r$[ebp+4]
push	edx
mov	eax, DWORD PTR _r$[ebp]
push	eax
call	__allmul
mov	DWORD PTR _r$[ebp], eax
mov	DWORD PTR _r$[ebp+4], edx
mov	ecx, DWORD PTR _iB0$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iB0$[ebp]
push	edx
mov	eax, DWORD PTR _iA0$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iA0$[ebp]
push	ecx
call	__allmul
push	edx
push	eax
lea	edx, DWORD PTR _r$[ebp]
push	edx
call	_sqlite3AddInt64
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Mul
mov	eax, 1
jmp	SHORT $LN9@sqlite3Mul
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR _r$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _r$[ebp+4]
mov	DWORD PTR [eax+4], edx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SubInt64 PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _iB$[ebp], 0
jne	SHORT $LN3@sqlite3Sub
cmp	DWORD PTR _iB$[ebp+4], -2147483648	
jne	SHORT $LN3@sqlite3Sub
mov	eax, DWORD PTR _pA$[ebp]
mov	DWORD PTR tv73[ebp], eax
mov	ecx, DWORD PTR tv73[ebp]
cmp	DWORD PTR [ecx+4], 0
jl	SHORT $LN2@sqlite3Sub
jg	SHORT $LN6@sqlite3Sub
mov	edx, DWORD PTR tv73[ebp]
cmp	DWORD PTR [edx], 0
jb	SHORT $LN2@sqlite3Sub
mov	eax, 1
jmp	SHORT $LN4@sqlite3Sub
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, DWORD PTR _iB$[ebp]
mov	edx, DWORD PTR [eax+4]
sbb	edx, DWORD PTR _iB$[ebp+4]
mov	eax, DWORD PTR _pA$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
xor	eax, eax
jmp	SHORT $LN4@sqlite3Sub
jmp	SHORT $LN4@sqlite3Sub
mov	ecx, DWORD PTR _iB$[ebp]
neg	ecx
mov	edx, DWORD PTR _iB$[ebp+4]
adc	edx, 0
neg	edx
push	edx
push	ecx
mov	eax, DWORD PTR _pA$[ebp]
push	eax
call	_sqlite3AddInt64
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddInt64 PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
push	esi
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _iA$[ebp], ecx
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR _iA$[ebp+4], edx
cmp	DWORD PTR _iB$[ebp+4], 0
jl	SHORT $LN4@sqlite3Add
jg	SHORT $LN7@sqlite3Add
cmp	DWORD PTR _iB$[ebp], 0
jb	SHORT $LN4@sqlite3Add
cmp	DWORD PTR _iA$[ebp+4], 0
jl	SHORT $LN3@sqlite3Add
jg	SHORT $LN8@sqlite3Add
cmp	DWORD PTR _iA$[ebp], 0
jbe	SHORT $LN3@sqlite3Add
or	eax, -1
sub	eax, DWORD PTR _iA$[ebp]
mov	ecx, 2147483647				
sbb	ecx, DWORD PTR _iA$[ebp+4]
mov	DWORD PTR tv87[ebp], eax
mov	DWORD PTR tv87[ebp+4], ecx
mov	edx, DWORD PTR tv87[ebp+4]
cmp	edx, DWORD PTR _iB$[ebp+4]
jg	SHORT $LN3@sqlite3Add
jl	SHORT $LN9@sqlite3Add
mov	eax, DWORD PTR tv87[ebp]
cmp	eax, DWORD PTR _iB$[ebp]
jae	SHORT $LN3@sqlite3Add
mov	eax, 1
jmp	SHORT $LN5@sqlite3Add
jmp	SHORT $LN2@sqlite3Add
cmp	DWORD PTR _iA$[ebp+4], 0
jg	SHORT $LN2@sqlite3Add
jl	SHORT $LN10@sqlite3Add
cmp	DWORD PTR _iA$[ebp], 0
jae	SHORT $LN2@sqlite3Add
mov	ecx, DWORD PTR _iA$[ebp]
add	ecx, -1
mov	edx, DWORD PTR _iA$[ebp+4]
adc	edx, 2147483647				
neg	ecx
adc	edx, 0
neg	edx
mov	eax, DWORD PTR _iB$[ebp]
add	eax, 1
mov	esi, DWORD PTR _iB$[ebp+4]
adc	esi, 0
mov	DWORD PTR tv143[ebp], ecx
mov	DWORD PTR tv143[ebp+4], edx
mov	DWORD PTR tv146[ebp], eax
mov	DWORD PTR tv146[ebp+4], esi
mov	ecx, DWORD PTR tv143[ebp+4]
cmp	ecx, DWORD PTR tv146[ebp+4]
jl	SHORT $LN2@sqlite3Add
jg	SHORT $LN11@sqlite3Add
mov	edx, DWORD PTR tv143[ebp]
cmp	edx, DWORD PTR tv146[ebp]
jbe	SHORT $LN2@sqlite3Add
mov	eax, 1
jmp	SHORT $LN5@sqlite3Add
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, DWORD PTR _iB$[ebp]
mov	edx, DWORD PTR [eax+4]
adc	edx, DWORD PTR _iB$[ebp+4]
mov	eax, DWORD PTR _pA$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
xor	eax, eax
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSetChanges PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _nChange$[ebp]
mov	DWORD PTR [eax+80], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+84]
add	eax, DWORD PTR _nChange$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+84], eax
pop	ebp
ret	0
ENDP
_sqlite3CheckObjectName PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, BYTE PTR [ecx+137]
test	edx, edx
jne	SHORT $LN1@sqlite3Che
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	SHORT $LN1@sqlite3Che
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 2048				
jne	SHORT $LN1@sqlite3Che
push	7
push	OFFSET $SG106265
mov	edx, DWORD PTR _zName$[ebp]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@sqlite3Che
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG106266
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	SHORT $LN2@sqlite3Che
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3CheckCollSeq PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _pColl$[ebp], 0
je	SHORT $LN2@sqlite3Che
mov	eax, DWORD PTR _pColl$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _zName$3[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$2[ebp], eax
mov	ecx, DWORD PTR _zName$3[ebp]
push	ecx
mov	edx, DWORD PTR _pColl$[ebp]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$2[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
movzx	edx, BYTE PTR [ecx+77]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetCollSeq
add	esp, 16					
mov	DWORD PTR _p$1[ebp], eax
cmp	DWORD PTR _p$1[ebp], 0
jne	SHORT $LN2@sqlite3Che
mov	eax, 1
jmp	SHORT $LN3@sqlite3Che
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprSkipCollate PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pExpr$[ebp], 0
je	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 4096				
je	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 262144				
je	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, 24					
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+4]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _pExpr$[ebp], eax
jmp	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pExpr$[ebp], edx
jmp	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
pop	ebp
ret	0
ENDP
_sqlite3ExprAddCollateString PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zC$[ebp]
mov	DWORD PTR _s$[ebp], eax
mov	ecx, DWORD PTR _s$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _s$[ebp+4], eax
lea	edx, DWORD PTR _s$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprAddCollateToken
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprAddCollateToken PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCollName$[ebp]
cmp	DWORD PTR [eax+4], 0
jbe	SHORT $LN2@sqlite3Exp
push	1
mov	ecx, DWORD PTR _pCollName$[ebp]
push	ecx
push	95					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprAlloc
add	esp, 16					
mov	DWORD PTR _pNew$1[ebp], eax
cmp	DWORD PTR _pNew$1[ebp], 0
je	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pNew$1[ebp]
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pNew$1[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 4352				
mov	edx, DWORD PTR _pNew$1[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pNew$1[ebp]
mov	DWORD PTR _pExpr$[ebp], eax
mov	eax, DWORD PTR _pExpr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCollSeq PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _pColl$[ebp], 0
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	$LN14@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _op$3[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 512				
je	SHORT $LN13@sqlite3Exp
jmp	$LN14@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 38		
je	SHORT $LN11@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 158		
jne	SHORT $LN12@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN15@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 95		
je	SHORT $LN9@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 159		
jne	SHORT $LN10@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+38]
cmp	ecx, 95					
jne	SHORT $LN10@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	eax, BYTE PTR [edx+77]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetCollSeq
add	esp, 16					
mov	DWORD PTR _pColl$[ebp], eax
jmp	$LN14@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+44], 0
je	SHORT $LN8@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 156		
je	SHORT $LN7@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 154		
je	SHORT $LN7@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 159		
je	SHORT $LN7@sqlite3Exp
cmp	DWORD PTR _op$3[ebp], 62		
jne	SHORT $LN8@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	DWORD PTR _j$2[ebp], ecx
cmp	DWORD PTR _j$2[ebp], 0
jl	SHORT $LN6@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
imul	ecx, DWORD PTR _j$2[ebp], 24
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx+ecx+16]
mov	DWORD PTR _zColl$1[ebp], eax
push	0
mov	ecx, DWORD PTR _zColl$1[ebp]
push	ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
movzx	ecx, BYTE PTR [eax+77]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _pColl$[ebp], eax
jmp	SHORT $LN14@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 256				
je	SHORT $LN5@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+4]
and	edx, 256				
je	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN2@sqlite3Exp
jmp	SHORT $LN14@sqlite3Exp
jmp	$LN15@sqlite3Exp
mov	ecx, DWORD PTR _pColl$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CheckCollSeq
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Exp
mov	DWORD PTR _pColl$[ebp], 0
mov	eax, DWORD PTR _pColl$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LocateCollSeq PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
mov	cl, BYTE PTR [eax+77]
mov	BYTE PTR _enc$[ebp], cl
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR [edx+137]
mov	BYTE PTR _initbusy$[ebp], al
movzx	ecx, BYTE PTR _initbusy$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindCollSeq
add	esp, 16					
mov	DWORD PTR _pColl$[ebp], eax
movzx	edx, BYTE PTR _initbusy$[ebp]
test	edx, edx
jne	SHORT $LN2@sqlite3Loc
cmp	DWORD PTR _pColl$[ebp], 0
je	SHORT $LN1@sqlite3Loc
mov	eax, DWORD PTR _pColl$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN2@sqlite3Loc
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _pColl$[ebp]
push	edx
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetCollSeq
add	esp, 16					
mov	DWORD PTR _pColl$[ebp], eax
mov	eax, DWORD PTR _pColl$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FindCollSeq PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN3@sqlite3Fin
mov	eax, DWORD PTR _create$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_findCollSeqEntry
add	esp, 12					
mov	DWORD PTR _pColl$[ebp], eax
jmp	SHORT $LN2@sqlite3Fin
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pColl$[ebp], ecx
cmp	DWORD PTR _pColl$[ebp], 0
je	SHORT $LN1@sqlite3Fin
movzx	edx, BYTE PTR _enc$[ebp]
sub	edx, 1
imul	eax, edx, 20
add	eax, DWORD PTR _pColl$[ebp]
mov	DWORD PTR _pColl$[ebp], eax
mov	eax, DWORD PTR _pColl$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ReadSchema PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
jne	SHORT $LN2@sqlite3Rea
mov	ecx, DWORD PTR _pParse$[ebp]
add	ecx, 4
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Init
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3Rea
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+64]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+64], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ErrStr PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _zErr$[ebp], OFFSET $SG120842
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR tv64[ebp], eax
cmp	DWORD PTR tv64[ebp], 516		
je	SHORT $LN3@sqlite3Err
jmp	SHORT $LN2@sqlite3Err
mov	DWORD PTR _zErr$[ebp], OFFSET $SG120848
jmp	SHORT $LN4@sqlite3Err
mov	ecx, DWORD PTR _rc$[ebp]
and	ecx, 255				
mov	DWORD PTR _rc$[ebp], ecx
jl	SHORT $LN4@sqlite3Err
cmp	DWORD PTR _rc$[ebp], 27			
jge	SHORT $LN4@sqlite3Err
mov	edx, DWORD PTR _rc$[ebp]
cmp	DWORD PTR ?aMsg@?1??sqlite3ErrStr@@9@9[edx*4], 0
je	SHORT $LN4@sqlite3Err
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR ?aMsg@?1??sqlite3ErrStr@@9@9[eax*4]
mov	DWORD PTR _zErr$[ebp], ecx
mov	eax, DWORD PTR _zErr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TwoPartName PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pName2$[ebp], 0
je	$LN4@sqlite3Two
mov	edx, DWORD PTR _pName2$[ebp]
cmp	DWORD PTR [edx+4], 0
jbe	SHORT $LN4@sqlite3Two
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
je	SHORT $LN3@sqlite3Two
push	OFFSET $SG106254
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+64]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+64], ecx
or	eax, -1
jmp	SHORT $LN5@sqlite3Two
mov	eax, DWORD PTR _pUnqual$[ebp]
mov	ecx, DWORD PTR _pName2$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pName1$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindDb
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN2@sqlite3Two
mov	ecx, DWORD PTR _pName1$[ebp]
push	ecx
push	OFFSET $SG106256
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+64]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+64], ecx
or	eax, -1
jmp	SHORT $LN5@sqlite3Two
jmp	SHORT $LN1@sqlite3Two
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+136]
mov	DWORD PTR _iDb$[ebp], ecx
mov	edx, DWORD PTR _pUnqual$[ebp]
mov	eax, DWORD PTR _pName1$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _iDb$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3HexToInt PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _h$[ebp]
sar	eax, 6
and	eax, 1
imul	ecx, eax, 9
add	ecx, DWORD PTR _h$[ebp]
mov	DWORD PTR _h$[ebp], ecx
mov	eax, DWORD PTR _h$[ebp]
and	eax, 15					
pop	ebp
ret	0
ENDP
_sqlite3HexToBlob PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	ebx
mov	eax, DWORD PTR _n$[ebp]
cdq
sub	eax, edx
sar	eax, 1
add	eax, 1
push	eax
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zBlob$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
sub	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
cmp	DWORD PTR _zBlob$[ebp], 0
je	SHORT $LN4@sqlite3Hex
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Hex
mov	edx, DWORD PTR _i$[ebp]
add	edx, 2
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _n$[ebp]
jge	SHORT $LN1@sqlite3Hex
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR [ecx]
push	edx
call	_sqlite3HexToInt
add	esp, 4
movzx	ebx, al
shl	ebx, 4
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax+1]
push	ecx
call	_sqlite3HexToInt
add	esp, 4
movzx	edx, al
or	ebx, edx
mov	eax, DWORD PTR _i$[ebp]
cdq
sub	eax, edx
sar	eax, 1
mov	ecx, DWORD PTR _zBlob$[ebp]
mov	BYTE PTR [ecx+eax], bl
jmp	SHORT $LN2@sqlite3Hex
mov	eax, DWORD PTR _i$[ebp]
cdq
sub	eax, edx
sar	eax, 1
mov	edx, DWORD PTR _zBlob$[ebp]
mov	BYTE PTR [edx+eax], 0
mov	eax, DWORD PTR _zBlob$[ebp]
pop	ebx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Error PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _err_code$[ebp]
mov	DWORD PTR [eax+52], ecx
cmp	DWORD PTR _zFormat$[ebp], 0
je	SHORT $LN4@sqlite3Err
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+224], 0
jne	SHORT $LN3@sqlite3Err
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ValueNew
add	esp, 4
mov	DWORD PTR tv69[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR [ecx+224], edx
cmp	DWORD PTR tv69[ebp], 0
je	SHORT $LN4@sqlite3Err
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$2[ebp], eax
mov	ecx, DWORD PTR _ap$2[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VMPrintf
add	esp, 12					
mov	DWORD PTR _z$1[ebp], eax
mov	DWORD PTR _ap$2[ebp], 0
push	OFFSET _sqlite3MallocSize
push	1
mov	ecx, DWORD PTR _z$1[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+224]
push	eax
call	_sqlite3ValueSetStr
add	esp, 20					
jmp	SHORT $LN5@sqlite3Err
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+224], 0
je	SHORT $LN5@sqlite3Err
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+224]
push	eax
call	_sqlite3ValueSetNull
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Atoi64 PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
push	esi
xorpd	xmm0, xmm0
movlpd	QWORD PTR _u$[ebp], xmm0
mov	DWORD PTR _neg$[ebp], 0
mov	DWORD PTR _c$[ebp], 0
mov	DWORD PTR _nonNum$[ebp], 0
mov	eax, DWORD PTR _zNum$[ebp]
add	eax, DWORD PTR _length$[ebp]
mov	DWORD PTR _zEnd$[ebp], eax
movzx	ecx, BYTE PTR _enc$[ebp]
cmp	ecx, 1
jne	SHORT $LN31@sqlite3Ato
mov	DWORD PTR _incr$[ebp], 1
jmp	SHORT $LN26@sqlite3Ato
mov	DWORD PTR _incr$[ebp], 2
movzx	edx, BYTE PTR _enc$[ebp]
mov	eax, 3
sub	eax, edx
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN29@sqlite3Ato
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 2
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _length$[ebp]
jge	SHORT $LN27@sqlite3Ato
mov	eax, DWORD PTR _zNum$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN27@sqlite3Ato
jmp	SHORT $LN28@sqlite3Ato
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _length$[ebp]
jge	SHORT $LN34@sqlite3Ato
mov	DWORD PTR tv76[ebp], 1
jmp	SHORT $LN35@sqlite3Ato
mov	DWORD PTR tv76[ebp], 0
mov	eax, DWORD PTR tv76[ebp]
mov	DWORD PTR _nonNum$[ebp], eax
mov	ecx, DWORD PTR _zNum$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR _enc$[ebp]
lea	eax, DWORD PTR [ecx+edx-3]
mov	DWORD PTR _zEnd$[ebp], eax
movzx	ecx, BYTE PTR _enc$[ebp]
and	ecx, 1
add	ecx, DWORD PTR _zNum$[ebp]
mov	DWORD PTR _zNum$[ebp], ecx
mov	edx, DWORD PTR _zNum$[ebp]
cmp	edx, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN25@sqlite3Ato
mov	eax, DWORD PTR _zNum$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
je	SHORT $LN25@sqlite3Ato
mov	eax, DWORD PTR _zNum$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _zNum$[ebp], eax
jmp	SHORT $LN26@sqlite3Ato
mov	ecx, DWORD PTR _zNum$[ebp]
cmp	ecx, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN24@sqlite3Ato
mov	edx, DWORD PTR _zNum$[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 45					
jne	SHORT $LN23@sqlite3Ato
mov	DWORD PTR _neg$[ebp], 1
mov	ecx, DWORD PTR _zNum$[ebp]
add	ecx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _zNum$[ebp], ecx
jmp	SHORT $LN24@sqlite3Ato
mov	edx, DWORD PTR _zNum$[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 43					
jne	SHORT $LN24@sqlite3Ato
mov	ecx, DWORD PTR _zNum$[ebp]
add	ecx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _zNum$[ebp], ecx
mov	edx, DWORD PTR _zNum$[ebp]
mov	DWORD PTR _zStart$[ebp], edx
mov	eax, DWORD PTR _zNum$[ebp]
cmp	eax, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN19@sqlite3Ato
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zNum$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 48					
jne	SHORT $LN19@sqlite3Ato
mov	edx, DWORD PTR _zNum$[ebp]
add	edx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _zNum$[ebp], edx
jmp	SHORT $LN20@sqlite3Ato
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN18@sqlite3Ato
mov	eax, DWORD PTR _i$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _zNum$[ebp]
add	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN16@sqlite3Ato
mov	edx, DWORD PTR _zNum$[ebp]
add	edx, DWORD PTR _i$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 48			
jl	SHORT $LN16@sqlite3Ato
cmp	DWORD PTR _c$[ebp], 57			
jg	SHORT $LN16@sqlite3Ato
push	0
push	10					
mov	ecx, DWORD PTR _u$[ebp+4]
push	ecx
mov	edx, DWORD PTR _u$[ebp]
push	edx
call	__allmul
mov	ecx, eax
mov	esi, edx
mov	eax, DWORD PTR _c$[ebp]
cdq
add	ecx, eax
adc	esi, edx
sub	ecx, 48					
sbb	esi, 0
mov	DWORD PTR _u$[ebp], ecx
mov	DWORD PTR _u$[ebp+4], esi
jmp	SHORT $LN17@sqlite3Ato
cmp	DWORD PTR _u$[ebp+4], 2147483647	
jb	SHORT $LN15@sqlite3Ato
ja	SHORT $LN40@sqlite3Ato
cmp	DWORD PTR _u$[ebp], -1
jbe	SHORT $LN15@sqlite3Ato
cmp	DWORD PTR _neg$[ebp], 0
je	SHORT $LN36@sqlite3Ato
mov	DWORD PTR tv152[ebp], 0
mov	DWORD PTR tv152[ebp+4], -2147483648	
jmp	SHORT $LN37@sqlite3Ato
mov	DWORD PTR tv152[ebp], -1
mov	DWORD PTR tv152[ebp+4], 2147483647	
mov	edx, DWORD PTR _pNum$[ebp]
mov	eax, DWORD PTR tv152[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR tv152[ebp+4]
mov	DWORD PTR [edx+4], ecx
jmp	SHORT $LN14@sqlite3Ato
cmp	DWORD PTR _neg$[ebp], 0
je	SHORT $LN13@sqlite3Ato
mov	edx, DWORD PTR _u$[ebp]
neg	edx
mov	eax, DWORD PTR _u$[ebp+4]
adc	eax, 0
neg	eax
mov	ecx, DWORD PTR _pNum$[ebp]
mov	DWORD PTR [ecx], edx
mov	DWORD PTR [ecx+4], eax
jmp	SHORT $LN14@sqlite3Ato
mov	edx, DWORD PTR _pNum$[ebp]
mov	eax, DWORD PTR _u$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _u$[ebp+4]
mov	DWORD PTR [edx+4], ecx
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN9@sqlite3Ato
mov	edx, DWORD PTR _zNum$[ebp]
add	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _zEnd$[ebp]
jb	SHORT $LN10@sqlite3Ato
cmp	DWORD PTR _i$[ebp], 0
jne	SHORT $LN8@sqlite3Ato
mov	eax, DWORD PTR _zStart$[ebp]
cmp	eax, DWORD PTR _zNum$[ebp]
je	SHORT $LN10@sqlite3Ato
imul	ecx, DWORD PTR _incr$[ebp], 19
cmp	DWORD PTR _i$[ebp], ecx
jg	SHORT $LN10@sqlite3Ato
cmp	DWORD PTR _nonNum$[ebp], 0
je	SHORT $LN11@sqlite3Ato
mov	eax, 1
jmp	SHORT $LN32@sqlite3Ato
jmp	SHORT $LN32@sqlite3Ato
imul	edx, DWORD PTR _incr$[ebp], 19
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN6@sqlite3Ato
xor	eax, eax
jmp	SHORT $LN32@sqlite3Ato
jmp	SHORT $LN32@sqlite3Ato
mov	eax, DWORD PTR _incr$[ebp]
push	eax
mov	ecx, DWORD PTR _zNum$[ebp]
push	ecx
call	_compare2pow63
add	esp, 8
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
jge	SHORT $LN4@sqlite3Ato
xor	eax, eax
jmp	SHORT $LN32@sqlite3Ato
jmp	SHORT $LN32@sqlite3Ato
cmp	DWORD PTR _c$[ebp], 0
jle	SHORT $LN2@sqlite3Ato
mov	eax, 1
jmp	SHORT $LN32@sqlite3Ato
jmp	SHORT $LN32@sqlite3Ato
cmp	DWORD PTR _neg$[ebp], 0
je	SHORT $LN38@sqlite3Ato
mov	DWORD PTR tv172[ebp], 0
jmp	SHORT $LN39@sqlite3Ato
mov	DWORD PTR tv172[ebp], 2
mov	eax, DWORD PTR tv172[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprAffinity PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pExpr$[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 512				
je	SHORT $LN6@sqlite3Exp
mov	al, 98					
jmp	$LN7@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _op$[ebp], ecx
cmp	DWORD PTR _op$[ebp], 119		
jne	SHORT $LN5@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR [eax]
mov	edx, 24					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+4]
mov	edx, DWORD PTR [ecx+eax]
push	edx
call	_sqlite3ExprAffinity
add	esp, 4
jmp	SHORT $LN7@sqlite3Exp
cmp	DWORD PTR _op$[ebp], 38			
jne	SHORT $LN4@sqlite3Exp
push	0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3AffinityType
add	esp, 8
jmp	SHORT $LN7@sqlite3Exp
cmp	DWORD PTR _op$[ebp], 156		
je	SHORT $LN2@sqlite3Exp
cmp	DWORD PTR _op$[ebp], 154		
je	SHORT $LN2@sqlite3Exp
cmp	DWORD PTR _op$[ebp], 159		
jne	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
cmp	DWORD PTR [edx+44], 0
je	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	DWORD PTR _j$1[ebp], ecx
cmp	DWORD PTR _j$1[ebp], 0
jge	SHORT $LN1@sqlite3Exp
mov	al, 100					
jmp	SHORT $LN7@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+44]
imul	ecx, DWORD PTR _j$1[ebp], 24
mov	edx, DWORD PTR [eax+4]
mov	al, BYTE PTR [edx+ecx+21]
jmp	SHORT $LN7@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	al, BYTE PTR [eax+1]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IndexAffinityOk PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
call	_comparisonAffinity
add	esp, 4
mov	BYTE PTR _aff$[ebp], al
mov	cl, BYTE PTR _aff$[ebp]
mov	BYTE PTR tv67[ebp], cl
cmp	BYTE PTR tv67[ebp], 97			
je	SHORT $LN2@sqlite3Ind
cmp	BYTE PTR tv67[ebp], 98			
je	SHORT $LN3@sqlite3Ind
jmp	SHORT $LN1@sqlite3Ind
mov	eax, 1
jmp	SHORT $LN6@sqlite3Ind
movsx	edx, BYTE PTR _idx_affinity$[ebp]
cmp	edx, 97					
jne	SHORT $LN8@sqlite3Ind
mov	DWORD PTR tv70[ebp], 1
jmp	SHORT $LN9@sqlite3Ind
mov	DWORD PTR tv70[ebp], 0
mov	eax, DWORD PTR tv70[ebp]
jmp	SHORT $LN6@sqlite3Ind
movsx	eax, BYTE PTR _idx_affinity$[ebp]
cmp	eax, 99					
jl	SHORT $LN10@sqlite3Ind
mov	DWORD PTR tv73[ebp], 1
jmp	SHORT $LN11@sqlite3Ind
mov	DWORD PTR tv73[ebp], 0
mov	eax, DWORD PTR tv73[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CompareAffinity PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
call	_sqlite3ExprAffinity
add	esp, 4
mov	BYTE PTR _aff1$[ebp], al
movsx	ecx, BYTE PTR _aff1$[ebp]
test	ecx, ecx
je	SHORT $LN7@sqlite3Com
movsx	edx, BYTE PTR _aff2$[ebp]
test	edx, edx
je	SHORT $LN7@sqlite3Com
movsx	eax, BYTE PTR _aff1$[ebp]
cmp	eax, 99					
jge	SHORT $LN5@sqlite3Com
movsx	ecx, BYTE PTR _aff2$[ebp]
cmp	ecx, 99					
jl	SHORT $LN6@sqlite3Com
mov	al, 99					
jmp	SHORT $LN8@sqlite3Com
jmp	SHORT $LN4@sqlite3Com
mov	al, 98					
jmp	SHORT $LN8@sqlite3Com
jmp	SHORT $LN8@sqlite3Com
movsx	edx, BYTE PTR _aff1$[ebp]
test	edx, edx
jne	SHORT $LN2@sqlite3Com
movsx	eax, BYTE PTR _aff2$[ebp]
test	eax, eax
jne	SHORT $LN2@sqlite3Com
mov	al, 98					
jmp	SHORT $LN8@sqlite3Com
jmp	SHORT $LN8@sqlite3Com
movsx	eax, BYTE PTR _aff1$[ebp]
movsx	ecx, BYTE PTR _aff2$[ebp]
add	eax, ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TableAffinity PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _zColAff$[ebp], ecx
cmp	DWORD PTR _zColAff$[ebp], 0
jne	$LN12@sqlite3Tab
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeDb
add	esp, 4
mov	DWORD PTR _db$1[ebp], eax
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
add	ecx, 1
push	ecx
push	0
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zColAff$[ebp], eax
cmp	DWORD PTR _zColAff$[ebp], 0
jne	SHORT $LN11@sqlite3Tab
mov	edx, DWORD PTR _db$1[ebp]
mov	BYTE PTR [edx+64], 1
jmp	$LN13@sqlite3Tab
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN10@sqlite3Tab
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN7@sqlite3Tab
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _zColAff$[ebp]
add	ecx, DWORD PTR _i$[ebp]
mov	dl, BYTE PTR [edx+eax+21]
mov	BYTE PTR [ecx], dl
jmp	SHORT $LN9@sqlite3Tab
mov	eax, DWORD PTR _zColAff$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
js	SHORT $LN5@sqlite3Tab
mov	edx, DWORD PTR _zColAff$[ebp]
add	edx, DWORD PTR _i$[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 98					
je	SHORT $LN7@sqlite3Tab
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR _zColAff$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	eax, DWORD PTR _zColAff$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
je	SHORT $LN13@sqlite3Tab
cmp	DWORD PTR _iReg$[ebp], 0
je	SHORT $LN2@sqlite3Tab
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _zColAff$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _iReg$[ebp]
push	ecx
push	47					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN13@sqlite3Tab
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _zColAff$[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IndexAffinityStr PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [eax+16], 0
jne	$LN5@sqlite3Ind
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pTab$1[ebp], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeDb
add	esp, 4
mov	DWORD PTR _db$2[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+52]
add	edx, 1
push	edx
push	0
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [edx+16], 0
jne	SHORT $LN4@sqlite3Ind
mov	eax, DWORD PTR _db$2[ebp]
mov	BYTE PTR [eax+64], 1
xor	eax, eax
jmp	SHORT $LN6@sqlite3Ind
mov	DWORD PTR _n$3[ebp], 0
jmp	SHORT $LN3@sqlite3Ind
mov	ecx, DWORD PTR _n$3[ebp]
add	ecx, 1
mov	DWORD PTR _n$3[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, WORD PTR [edx+52]
cmp	DWORD PTR _n$3[ebp], eax
jge	SHORT $LN1@sqlite3Ind
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _n$3[ebp]
mov	cx, WORD PTR [edx+eax*2]
mov	WORD PTR _x$4[ebp], cx
movsx	edx, WORD PTR _x$4[ebp]
test	edx, edx
jge	SHORT $LN8@sqlite3Ind
mov	DWORD PTR tv129[ebp], 100		
jmp	SHORT $LN9@sqlite3Ind
movsx	eax, WORD PTR _x$4[ebp]
imul	ecx, eax, 24
mov	edx, DWORD PTR _pTab$1[ebp]
mov	eax, DWORD PTR [edx+4]
movsx	ecx, BYTE PTR [eax+ecx+21]
mov	DWORD PTR tv129[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _n$3[ebp]
mov	dl, BYTE PTR tv129[ebp]
mov	BYTE PTR [eax+ecx], dl
jmp	SHORT $LN2@sqlite3Ind
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR _n$3[ebp]
mov	BYTE PTR [ecx+edx], 0
mov	eax, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [eax+16]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VarintLen PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	eax, DWORD PTR _v$[ebp]
mov	edx, DWORD PTR _v$[ebp+4]
mov	cl, 7
call	__aullshr
mov	DWORD PTR _v$[ebp], eax
mov	DWORD PTR _v$[ebp+4], edx
mov	ecx, DWORD PTR _v$[ebp]
or	ecx, DWORD PTR _v$[ebp+4]
je	SHORT $LN2@sqlite3Var
cmp	DWORD PTR _i$[ebp], 9
jl	SHORT $LN4@sqlite3Var
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetVarint32 PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 1
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
and	edx, 128				
jne	SHORT $LN4@sqlite3Get
mov	eax, DWORD PTR _a$[ebp]
and	eax, 127				
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
shl	ecx, 7
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
or	edx, DWORD PTR _b$[ebp]
mov	eax, DWORD PTR _v$[ebp]
mov	DWORD PTR [eax], edx
mov	al, 2
jmp	$LN5@sqlite3Get
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 1
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
shl	edx, 14					
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
or	ecx, DWORD PTR _a$[ebp]
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
and	edx, 128				
jne	SHORT $LN3@sqlite3Get
mov	eax, DWORD PTR _a$[ebp]
and	eax, 2080895				
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _b$[ebp]
and	ecx, 127				
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
shl	edx, 7
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
or	eax, DWORD PTR _b$[ebp]
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx], eax
mov	al, 3
jmp	SHORT $LN5@sqlite3Get
mov	edx, DWORD PTR _p$[ebp]
sub	edx, 2
mov	DWORD PTR _p$[ebp], edx
lea	eax, DWORD PTR _v64$1[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3GetVarint
add	esp, 8
mov	BYTE PTR _n$2[ebp], al
mov	edx, DWORD PTR _v64$1[ebp]
mov	eax, DWORD PTR _v64$1[ebp+4]
and	eax, 0
mov	DWORD PTR tv148[ebp], edx
mov	DWORD PTR tv148[ebp+4], eax
mov	ecx, DWORD PTR tv148[ebp]
cmp	ecx, DWORD PTR _v64$1[ebp]
jne	SHORT $LN7@sqlite3Get
mov	edx, DWORD PTR tv148[ebp+4]
cmp	edx, DWORD PTR _v64$1[ebp+4]
je	SHORT $LN2@sqlite3Get
mov	eax, DWORD PTR _v$[ebp]
mov	DWORD PTR [eax], -1
jmp	SHORT $LN1@sqlite3Get
mov	ecx, DWORD PTR _v64$1[ebp]
mov	edx, DWORD PTR _v$[ebp]
mov	DWORD PTR [edx], ecx
mov	al, BYTE PTR _n$2[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetVarint PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
and	edx, 128				
jne	SHORT $LN8@sqlite3Get
mov	eax, DWORD PTR _a$[ebp]
xor	ecx, ecx
mov	edx, DWORD PTR _v$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR [edx+4], ecx
mov	al, 1
jmp	$LN9@sqlite3Get
mov	eax, DWORD PTR _p$[ebp]
add	eax, 1
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _b$[ebp]
and	eax, 128				
jne	SHORT $LN7@sqlite3Get
mov	ecx, DWORD PTR _a$[ebp]
and	ecx, 127				
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
shl	edx, 7
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
or	eax, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
xor	edx, edx
mov	eax, DWORD PTR _v$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	al, 2
jmp	$LN9@sqlite3Get
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 1
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
shl	edx, 14					
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
or	ecx, DWORD PTR _a$[ebp]
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
and	edx, 128				
jne	SHORT $LN6@sqlite3Get
mov	eax, DWORD PTR _a$[ebp]
and	eax, 2080895				
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _b$[ebp]
and	ecx, 127				
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
shl	edx, 7
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
or	eax, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
xor	edx, edx
mov	eax, DWORD PTR _v$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	al, 3
jmp	$LN9@sqlite3Get
mov	ecx, DWORD PTR _a$[ebp]
and	ecx, 2080895				
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 1
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _b$[ebp]
shl	eax, 14					
mov	DWORD PTR _b$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx]
or	edx, DWORD PTR _b$[ebp]
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _b$[ebp]
and	eax, 128				
jne	SHORT $LN5@sqlite3Get
mov	ecx, DWORD PTR _b$[ebp]
and	ecx, 2080895				
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
shl	edx, 7
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
or	eax, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
xor	edx, edx
mov	eax, DWORD PTR _v$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR [eax+4], edx
mov	al, 4
jmp	$LN9@sqlite3Get
mov	ecx, DWORD PTR _b$[ebp]
and	ecx, 2080895				
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
mov	DWORD PTR _s$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 1
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
shl	ecx, 14					
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx]
or	eax, DWORD PTR _a$[ebp]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
and	ecx, 128				
jne	SHORT $LN4@sqlite3Get
mov	edx, DWORD PTR _b$[ebp]
shl	edx, 7
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
or	eax, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _s$[ebp]
shr	ecx, 18					
mov	DWORD PTR _s$[ebp], ecx
xor	edx, edx
mov	eax, DWORD PTR _s$[ebp]
mov	cl, 32					
call	__allshl
xor	ecx, ecx
or	eax, DWORD PTR _a$[ebp]
or	edx, ecx
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	al, 5
jmp	$LN9@sqlite3Get
mov	edx, DWORD PTR _s$[ebp]
shl	edx, 7
mov	DWORD PTR _s$[ebp], edx
mov	eax, DWORD PTR _s$[ebp]
or	eax, DWORD PTR _b$[ebp]
mov	DWORD PTR _s$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 1
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
shl	edx, 14					
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
or	ecx, DWORD PTR _b$[ebp]
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
and	edx, 128				
jne	SHORT $LN3@sqlite3Get
mov	eax, DWORD PTR _a$[ebp]
and	eax, 2080895				
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
shl	ecx, 7
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
or	edx, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _s$[ebp]
shr	eax, 18					
mov	DWORD PTR _s$[ebp], eax
xor	edx, edx
mov	eax, DWORD PTR _s$[ebp]
mov	cl, 32					
call	__allshl
xor	ecx, ecx
or	eax, DWORD PTR _a$[ebp]
or	edx, ecx
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	al, 6
jmp	$LN9@sqlite3Get
mov	edx, DWORD PTR _p$[ebp]
add	edx, 1
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
shl	eax, 14					
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx]
or	edx, DWORD PTR _a$[ebp]
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
and	eax, 128				
jne	SHORT $LN2@sqlite3Get
mov	ecx, DWORD PTR _a$[ebp]
and	ecx, -266354561				
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
and	edx, 2080895				
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _b$[ebp]
shl	eax, 7
mov	DWORD PTR _b$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
or	ecx, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _s$[ebp]
shr	edx, 11					
mov	DWORD PTR _s$[ebp], edx
xor	edx, edx
mov	eax, DWORD PTR _s$[ebp]
mov	cl, 32					
call	__allshl
xor	ecx, ecx
or	eax, DWORD PTR _a$[ebp]
or	edx, ecx
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	al, 7
jmp	$LN9@sqlite3Get
mov	edx, DWORD PTR _a$[ebp]
and	edx, 2080895				
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
add	eax, 1
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _b$[ebp]
shl	ecx, 14					
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx]
or	eax, DWORD PTR _b$[ebp]
mov	DWORD PTR _b$[ebp], eax
mov	ecx, DWORD PTR _b$[ebp]
and	ecx, 128				
jne	SHORT $LN1@sqlite3Get
mov	edx, DWORD PTR _b$[ebp]
and	edx, -266354561				
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
shl	eax, 7
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _a$[ebp]
or	ecx, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _s$[ebp]
shr	edx, 4
mov	DWORD PTR _s$[ebp], edx
xor	edx, edx
mov	eax, DWORD PTR _s$[ebp]
mov	cl, 32					
call	__allshl
xor	ecx, ecx
or	eax, DWORD PTR _a$[ebp]
or	edx, ecx
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	al, 8
jmp	$LN9@sqlite3Get
mov	edx, DWORD PTR _p$[ebp]
add	edx, 1
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _a$[ebp]
shl	eax, 15					
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx]
or	edx, DWORD PTR _a$[ebp]
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _b$[ebp]
and	eax, 2080895				
mov	DWORD PTR _b$[ebp], eax
mov	ecx, DWORD PTR _b$[ebp]
shl	ecx, 8
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
or	edx, DWORD PTR _b$[ebp]
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _s$[ebp]
shl	eax, 4
mov	DWORD PTR _s$[ebp], eax
mov	ecx, 1
imul	edx, ecx, -4
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
and	edx, 127				
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _b$[ebp]
shr	eax, 3
mov	DWORD PTR _b$[ebp], eax
mov	ecx, DWORD PTR _s$[ebp]
or	ecx, DWORD PTR _b$[ebp]
mov	DWORD PTR _s$[ebp], ecx
xor	edx, edx
mov	eax, DWORD PTR _s$[ebp]
mov	cl, 32					
call	__allshl
xor	ecx, ecx
or	eax, DWORD PTR _a$[ebp]
or	edx, ecx
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	al, 9
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PutVarint32 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _v$[ebp]
and	eax, -16384				
jne	SHORT $LN1@sqlite3Put
mov	ecx, DWORD PTR _v$[ebp]
shr	ecx, 7
or	ecx, 128				
mov	edx, 1
imul	eax, edx, 0
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+eax], cl
mov	eax, DWORD PTR _v$[ebp]
and	eax, 127				
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+ecx], al
mov	eax, 2
jmp	SHORT $LN2@sqlite3Put
mov	eax, DWORD PTR _v$[ebp]
xor	ecx, ecx
push	ecx
push	eax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3PutVarint
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3PutVarint PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _v$[ebp]
and	eax, 0
mov	ecx, DWORD PTR _v$[ebp+4]
and	ecx, -16777216				
mov	DWORD PTR tv137[ebp], eax
mov	DWORD PTR tv137[ebp+4], ecx
mov	edx, DWORD PTR tv137[ebp]
or	edx, DWORD PTR tv137[ebp+4]
je	SHORT $LN10@sqlite3Put
mov	al, BYTE PTR _v$[ebp]
mov	ecx, 1
shl	ecx, 3
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+ecx], al
mov	eax, DWORD PTR _v$[ebp]
mov	edx, DWORD PTR _v$[ebp+4]
mov	cl, 8
call	__aullshr
mov	DWORD PTR _v$[ebp], eax
mov	DWORD PTR _v$[ebp+4], edx
mov	DWORD PTR _i$[ebp], 7
jmp	SHORT $LN9@sqlite3Put
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN7@sqlite3Put
mov	ecx, DWORD PTR _v$[ebp]
and	ecx, 127				
mov	edx, DWORD PTR _v$[ebp+4]
and	edx, 0
or	ecx, 128				
mov	eax, DWORD PTR _p$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	BYTE PTR [eax], cl
mov	eax, DWORD PTR _v$[ebp]
mov	edx, DWORD PTR _v$[ebp+4]
mov	cl, 7
call	__aullshr
mov	DWORD PTR _v$[ebp], eax
mov	DWORD PTR _v$[ebp+4], edx
jmp	SHORT $LN8@sqlite3Put
mov	eax, 9
jmp	$LN11@sqlite3Put
mov	DWORD PTR _n$[ebp], 0
mov	ecx, DWORD PTR _v$[ebp]
and	ecx, 127				
mov	edx, DWORD PTR _v$[ebp+4]
and	edx, 0
or	ecx, 128				
mov	eax, DWORD PTR _n$[ebp]
mov	BYTE PTR _buf$[ebp+eax], cl
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
mov	eax, DWORD PTR _v$[ebp]
mov	edx, DWORD PTR _v$[ebp+4]
mov	cl, 7
call	__aullshr
mov	DWORD PTR _v$[ebp], eax
mov	DWORD PTR _v$[ebp+4], edx
mov	edx, DWORD PTR _v$[ebp]
or	edx, DWORD PTR _v$[ebp+4]
jne	SHORT $LN6@sqlite3Put
mov	eax, 1
imul	ecx, eax, 0
movzx	edx, BYTE PTR _buf$[ebp+ecx]
and	edx, 127				
mov	eax, 1
imul	ecx, eax, 0
mov	BYTE PTR _buf$[ebp+ecx], dl
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _n$[ebp]
sub	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN3@sqlite3Put
mov	eax, DWORD PTR _j$[ebp]
sub	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN1@sqlite3Put
mov	edx, DWORD PTR _p$[ebp]
add	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _j$[ebp]
mov	cl, BYTE PTR _buf$[ebp+eax]
mov	BYTE PTR [edx], cl
jmp	SHORT $LN2@sqlite3Put
mov	eax, DWORD PTR _n$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LogEstToInt PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
movsx	eax, WORD PTR _x$[ebp]
cmp	eax, 10					
jge	SHORT $LN5@sqlite3Log
mov	eax, 1
xor	edx, edx
jmp	$LN6@sqlite3Log
movsx	eax, WORD PTR _x$[ebp]
cdq
mov	ecx, 10					
idiv	ecx
mov	eax, edx
cdq
mov	DWORD PTR _n$[ebp], eax
mov	DWORD PTR _n$[ebp+4], edx
movsx	eax, WORD PTR _x$[ebp]
cdq
mov	ecx, 10					
idiv	ecx
mov	WORD PTR _x$[ebp], ax
cmp	DWORD PTR _n$[ebp+4], 0
ja	SHORT $LN10@sqlite3Log
cmp	DWORD PTR _n$[ebp], 5
jb	SHORT $LN4@sqlite3Log
mov	edx, DWORD PTR _n$[ebp]
sub	edx, 2
mov	eax, DWORD PTR _n$[ebp+4]
sbb	eax, 0
mov	DWORD PTR _n$[ebp], edx
mov	DWORD PTR _n$[ebp+4], eax
jmp	SHORT $LN3@sqlite3Log
cmp	DWORD PTR _n$[ebp+4], 0
ja	SHORT $LN11@sqlite3Log
cmp	DWORD PTR _n$[ebp], 1
jb	SHORT $LN3@sqlite3Log
mov	ecx, DWORD PTR _n$[ebp]
sub	ecx, 1
mov	edx, DWORD PTR _n$[ebp+4]
sbb	edx, 0
mov	DWORD PTR _n$[ebp], ecx
mov	DWORD PTR _n$[ebp+4], edx
movsx	eax, WORD PTR _x$[ebp]
cmp	eax, 3
jl	SHORT $LN1@sqlite3Log
movsx	ecx, WORD PTR _x$[ebp]
cmp	ecx, 60					
jle	SHORT $LN8@sqlite3Log
mov	DWORD PTR tv84[ebp], -1
mov	DWORD PTR tv84[ebp+4], 2147483647	
jmp	SHORT $LN9@sqlite3Log
mov	eax, DWORD PTR _n$[ebp]
add	eax, 8
mov	edx, DWORD PTR _n$[ebp+4]
adc	edx, 0
movsx	ecx, WORD PTR _x$[ebp]
sub	ecx, 3
call	__allshl
mov	DWORD PTR tv84[ebp], eax
mov	DWORD PTR tv84[ebp+4], edx
mov	eax, DWORD PTR tv84[ebp]
mov	edx, DWORD PTR tv84[ebp+4]
jmp	SHORT $LN6@sqlite3Log
mov	eax, DWORD PTR _n$[ebp]
add	eax, 8
mov	edx, DWORD PTR _n$[ebp+4]
adc	edx, 0
movsx	ecx, WORD PTR _x$[ebp]
mov	esi, 3
sub	esi, ecx
mov	ecx, esi
call	__aullshr
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LogEstFromDouble PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
movsd	xmm0, QWORD PTR __real@3ff0000000000000
comisd	xmm0, QWORD PTR _x$[ebp]
jb	SHORT $LN2@sqlite3Log
xor	eax, eax
jmp	SHORT $LN3@sqlite3Log
movsd	xmm0, QWORD PTR __real@41ddcd6500000000
comisd	xmm0, QWORD PTR _x$[ebp]
jb	SHORT $LN1@sqlite3Log
movsd	xmm0, QWORD PTR _x$[ebp]
call	__dtoul3
push	edx
push	eax
call	_sqlite3LogEst
add	esp, 8
jmp	SHORT $LN3@sqlite3Log
push	8
lea	eax, DWORD PTR _x$[ebp]
push	eax
lea	ecx, DWORD PTR _a$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _a$[ebp]
mov	edx, DWORD PTR _a$[ebp+4]
mov	cl, 52					
call	__aullshr
sub	eax, 1022				
sbb	edx, 0
mov	WORD PTR _e$[ebp], ax
movsx	edx, WORD PTR _e$[ebp]
imul	eax, edx, 10
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LogEstAdd PROC
push	ebp
mov	ebp, esp
movsx	eax, WORD PTR _a$[ebp]
movsx	ecx, WORD PTR _b$[ebp]
cmp	eax, ecx
jl	SHORT $LN6@sqlite3Log
movsx	edx, WORD PTR _a$[ebp]
movsx	eax, WORD PTR _b$[ebp]
add	eax, 49					
cmp	edx, eax
jle	SHORT $LN5@sqlite3Log
mov	ax, WORD PTR _a$[ebp]
jmp	SHORT $LN7@sqlite3Log
movsx	ecx, WORD PTR _a$[ebp]
movsx	edx, WORD PTR _b$[ebp]
add	edx, 31					
cmp	ecx, edx
jle	SHORT $LN4@sqlite3Log
movsx	eax, WORD PTR _a$[ebp]
add	eax, 1
jmp	SHORT $LN7@sqlite3Log
movsx	eax, WORD PTR _a$[ebp]
movsx	ecx, WORD PTR _a$[ebp]
movsx	edx, WORD PTR _b$[ebp]
sub	ecx, edx
movzx	ecx, BYTE PTR ?x@?1??sqlite3LogEstAdd@@9@9[ecx]
add	eax, ecx
jmp	SHORT $LN7@sqlite3Log
jmp	SHORT $LN7@sqlite3Log
movsx	edx, WORD PTR _b$[ebp]
movsx	eax, WORD PTR _a$[ebp]
add	eax, 49					
cmp	edx, eax
jle	SHORT $LN2@sqlite3Log
mov	ax, WORD PTR _b$[ebp]
jmp	SHORT $LN7@sqlite3Log
movsx	ecx, WORD PTR _b$[ebp]
movsx	edx, WORD PTR _a$[ebp]
add	edx, 31					
cmp	ecx, edx
jle	SHORT $LN1@sqlite3Log
movsx	eax, WORD PTR _b$[ebp]
add	eax, 1
jmp	SHORT $LN7@sqlite3Log
movsx	eax, WORD PTR _b$[ebp]
movsx	ecx, WORD PTR _b$[ebp]
movsx	edx, WORD PTR _a$[ebp]
sub	ecx, edx
movzx	ecx, BYTE PTR ?x@?1??sqlite3LogEstAdd@@9@9[ecx]
add	eax, ecx
pop	ebp
ret	0
ENDP
_sqlite3LogEst PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, 40					
mov	WORD PTR _y$[ebp], ax
cmp	DWORD PTR _x$[ebp+4], 0
ja	SHORT $LN4@sqlite3Log
jb	SHORT $LN12@sqlite3Log
cmp	DWORD PTR _x$[ebp], 8
jae	SHORT $LN4@sqlite3Log
cmp	DWORD PTR _x$[ebp+4], 0
ja	SHORT $LN7@sqlite3Log
jb	SHORT $LN13@sqlite3Log
cmp	DWORD PTR _x$[ebp], 2
jae	SHORT $LN7@sqlite3Log
xor	eax, eax
jmp	$LN10@sqlite3Log
cmp	DWORD PTR _x$[ebp+4], 0
ja	SHORT $LN6@sqlite3Log
jb	SHORT $LN14@sqlite3Log
cmp	DWORD PTR _x$[ebp], 8
jae	SHORT $LN6@sqlite3Log
movsx	ecx, WORD PTR _y$[ebp]
sub	ecx, 10					
mov	WORD PTR _y$[ebp], cx
mov	eax, DWORD PTR _x$[ebp]
mov	edx, DWORD PTR _x$[ebp+4]
mov	cl, 1
call	__allshl
mov	DWORD PTR _x$[ebp], eax
mov	DWORD PTR _x$[ebp+4], edx
jmp	SHORT $LN7@sqlite3Log
jmp	SHORT $LN5@sqlite3Log
cmp	DWORD PTR _x$[ebp+4], 0
ja	SHORT $LN15@sqlite3Log
cmp	DWORD PTR _x$[ebp], 255			
jbe	SHORT $LN2@sqlite3Log
movsx	edx, WORD PTR _y$[ebp]
add	edx, 40					
mov	WORD PTR _y$[ebp], dx
mov	eax, DWORD PTR _x$[ebp]
mov	edx, DWORD PTR _x$[ebp+4]
mov	cl, 4
call	__aullshr
mov	DWORD PTR _x$[ebp], eax
mov	DWORD PTR _x$[ebp+4], edx
jmp	SHORT $LN4@sqlite3Log
cmp	DWORD PTR _x$[ebp+4], 0
ja	SHORT $LN16@sqlite3Log
cmp	DWORD PTR _x$[ebp], 15			
jbe	SHORT $LN5@sqlite3Log
movsx	eax, WORD PTR _y$[ebp]
add	eax, 10					
mov	WORD PTR _y$[ebp], ax
mov	eax, DWORD PTR _x$[ebp]
mov	edx, DWORD PTR _x$[ebp+4]
mov	cl, 1
call	__aullshr
mov	DWORD PTR _x$[ebp], eax
mov	DWORD PTR _x$[ebp+4], edx
jmp	SHORT $LN2@sqlite3Log
mov	ecx, DWORD PTR _x$[ebp]
and	ecx, 7
mov	edx, DWORD PTR _x$[ebp+4]
and	edx, 0
push	0
push	2
push	edx
push	ecx
call	__allmul
movsx	eax, WORD PTR ?a@?1??sqlite3LogEst@@9@9[eax]
movsx	ecx, WORD PTR _y$[ebp]
lea	eax, DWORD PTR [eax+ecx-10]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Utf8Read PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pz$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _c$[ebp], edx
mov	eax, DWORD PTR _pz$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	edx, DWORD PTR _pz$[ebp]
mov	DWORD PTR [edx], ecx
cmp	DWORD PTR _c$[ebp], 192			
jb	SHORT $LN5@sqlite3Utf
mov	eax, DWORD PTR _c$[ebp]
movzx	ecx, BYTE PTR _sqlite3Utf8Trans1[eax-192]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _pz$[ebp]
mov	eax, DWORD PTR [edx]
movzx	ecx, BYTE PTR [eax]
and	ecx, 192				
cmp	ecx, 128				
jne	SHORT $LN3@sqlite3Utf
mov	edx, DWORD PTR _c$[ebp]
shl	edx, 6
mov	eax, DWORD PTR _pz$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	eax, BYTE PTR [ecx]
and	eax, 63					
add	edx, eax
mov	DWORD PTR _c$[ebp], edx
mov	ecx, DWORD PTR _pz$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 1
mov	eax, DWORD PTR _pz$[ebp]
mov	DWORD PTR [eax], edx
jmp	SHORT $LN4@sqlite3Utf
cmp	DWORD PTR _c$[ebp], 128			
jb	SHORT $LN1@sqlite3Utf
mov	ecx, DWORD PTR _c$[ebp]
and	ecx, -2048				
cmp	ecx, 55296				
je	SHORT $LN1@sqlite3Utf
mov	edx, DWORD PTR _c$[ebp]
and	edx, -2					
cmp	edx, 65534				
jne	SHORT $LN5@sqlite3Utf
mov	DWORD PTR _c$[ebp], 65533		
mov	eax, DWORD PTR _c$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Utf8CharLen PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _r$[ebp], 0
mov	eax, DWORD PTR _zIn$[ebp]
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _nByte$[ebp], 0
jl	SHORT $LN7@sqlite3Utf
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _nByte$[ebp]
mov	DWORD PTR _zTerm$[ebp], ecx
jmp	SHORT $LN5@sqlite3Utf
mov	DWORD PTR _zTerm$[ebp], -1
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN4@sqlite3Utf
mov	ecx, DWORD PTR _z$[ebp]
cmp	ecx, DWORD PTR _zTerm$[ebp]
jae	SHORT $LN4@sqlite3Utf
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR tv73[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
cmp	DWORD PTR tv73[ebp], 192		
jl	SHORT $LN3@sqlite3Utf
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
and	eax, 192				
cmp	eax, 128				
jne	SHORT $LN3@sqlite3Utf
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, 1
mov	DWORD PTR _z$[ebp], ecx
jmp	SHORT $LN2@sqlite3Utf
mov	edx, DWORD PTR _r$[ebp]
add	edx, 1
mov	DWORD PTR _r$[ebp], edx
jmp	SHORT $LN5@sqlite3Utf
mov	eax, DWORD PTR _r$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Utf16ByteLen PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _zIn$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	DWORD PTR _n$[ebp], 0
xor	ecx, ecx
je	$LN3@sqlite3Utf
mov	edx, DWORD PTR _n$[ebp]
cmp	edx, DWORD PTR _nChar$[ebp]
jge	$LN6@sqlite3Utf
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
shl	ecx, 8
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
add	ecx, DWORD PTR _c$[ebp]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
cmp	DWORD PTR _c$[ebp], 55296		
jl	SHORT $LN5@sqlite3Utf
cmp	DWORD PTR _c$[ebp], 57344		
jge	SHORT $LN5@sqlite3Utf
mov	eax, 1
test	eax, eax
je	SHORT $LN5@sqlite3Utf
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
shl	edx, 8
mov	DWORD PTR _c2$2[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
add	edx, DWORD PTR _c2$2[ebp]
mov	DWORD PTR _c2$2[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c2$2[ebp]
and	ecx, 1023				
mov	edx, DWORD PTR _c$[ebp]
and	edx, 63					
shl	edx, 10					
add	ecx, edx
mov	eax, DWORD PTR _c$[ebp]
and	eax, 960				
add	eax, 64					
shl	eax, 10					
add	ecx, eax
mov	DWORD PTR _c$[ebp], ecx
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
jmp	$LN7@sqlite3Utf
jmp	$LN4@sqlite3Utf
mov	edx, DWORD PTR _n$[ebp]
cmp	edx, DWORD PTR _nChar$[ebp]
jge	$LN4@sqlite3Utf
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
shl	ecx, 8
add	ecx, DWORD PTR _c$[ebp]
mov	DWORD PTR _c$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, 1
mov	DWORD PTR _z$[ebp], edx
cmp	DWORD PTR _c$[ebp], 55296		
jl	SHORT $LN1@sqlite3Utf
cmp	DWORD PTR _c$[ebp], 57344		
jge	SHORT $LN1@sqlite3Utf
mov	eax, 1
test	eax, eax
je	SHORT $LN1@sqlite3Utf
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _c2$1[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
shl	edx, 8
add	edx, DWORD PTR _c2$1[ebp]
mov	DWORD PTR _c2$1[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _c2$1[ebp]
and	ecx, 1023				
mov	edx, DWORD PTR _c$[ebp]
and	edx, 63					
shl	edx, 10					
add	ecx, edx
mov	eax, DWORD PTR _c$[ebp]
and	eax, 960				
add	eax, 64					
shl	eax, 10					
add	ecx, eax
mov	DWORD PTR _c$[ebp], ecx
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
jmp	$LN3@sqlite3Utf
mov	eax, DWORD PTR _z$[ebp]
sub	eax, DWORD PTR _zIn$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Atoi PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _x$[ebp], 0
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN1@sqlite3Ato
lea	eax, DWORD PTR _x$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3GetInt32
add	esp, 8
mov	eax, DWORD PTR _x$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetInt32 PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
xorpd	xmm0, xmm0
movlpd	QWORD PTR _v$[ebp], xmm0
mov	DWORD PTR _neg$[ebp], 0
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zNum$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 45					
jne	SHORT $LN11@sqlite3Get
mov	DWORD PTR _neg$[ebp], 1
mov	ecx, DWORD PTR _zNum$[ebp]
add	ecx, 1
mov	DWORD PTR _zNum$[ebp], ecx
jmp	SHORT $LN8@sqlite3Get
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zNum$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 43					
jne	SHORT $LN8@sqlite3Get
mov	eax, DWORD PTR _zNum$[ebp]
add	eax, 1
mov	DWORD PTR _zNum$[ebp], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zNum$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 48					
jne	SHORT $LN7@sqlite3Get
mov	edx, DWORD PTR _zNum$[ebp]
add	edx, 1
mov	DWORD PTR _zNum$[ebp], edx
jmp	SHORT $LN8@sqlite3Get
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@sqlite3Get
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 11			
jge	SHORT $LN4@sqlite3Get
mov	ecx, DWORD PTR _zNum$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR [ecx]
sub	edx, 48					
mov	DWORD PTR _c$[ebp], edx
js	SHORT $LN4@sqlite3Get
cmp	DWORD PTR _c$[ebp], 9
jg	SHORT $LN4@sqlite3Get
push	0
push	10					
mov	eax, DWORD PTR _v$[ebp+4]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	__allmul
mov	ecx, eax
mov	esi, edx
mov	eax, DWORD PTR _c$[ebp]
cdq
add	ecx, eax
adc	esi, edx
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _v$[ebp+4], esi
jmp	SHORT $LN5@sqlite3Get
cmp	DWORD PTR _i$[ebp], 10			
jle	SHORT $LN3@sqlite3Get
xor	eax, eax
jmp	SHORT $LN12@sqlite3Get
mov	eax, DWORD PTR _neg$[ebp]
cdq
mov	ecx, DWORD PTR _v$[ebp]
sub	ecx, eax
mov	eax, DWORD PTR _v$[ebp+4]
sbb	eax, edx
mov	DWORD PTR tv175[ebp], ecx
mov	DWORD PTR tv175[ebp+4], eax
cmp	DWORD PTR tv175[ebp+4], 0
jl	SHORT $LN2@sqlite3Get
jg	SHORT $LN14@sqlite3Get
cmp	DWORD PTR tv175[ebp], 2147483647	
jbe	SHORT $LN2@sqlite3Get
xor	eax, eax
jmp	SHORT $LN12@sqlite3Get
cmp	DWORD PTR _neg$[ebp], 0
je	SHORT $LN1@sqlite3Get
mov	ecx, DWORD PTR _v$[ebp]
neg	ecx
mov	edx, DWORD PTR _v$[ebp+4]
adc	edx, 0
neg	edx
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _v$[ebp+4], edx
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR _pValue$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, 1
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AtoF PROC
push	ebp
mov	ebp, esp
sub	esp, 100				
push	esi
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _length$[ebp]
mov	DWORD PTR _zEnd$[ebp], eax
mov	DWORD PTR _sign$[ebp], 1
xorpd	xmm0, xmm0
movlpd	QWORD PTR _s$[ebp], xmm0
mov	DWORD PTR _d$[ebp], 0
mov	DWORD PTR _esign$[ebp], 1
mov	DWORD PTR _e$[ebp], 0
mov	DWORD PTR _eValid$[ebp], 1
mov	DWORD PTR _nDigits$[ebp], 0
mov	DWORD PTR _nonNum$[ebp], 0
mov	ecx, DWORD PTR _pResult$[ebp]
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR [ecx], xmm0
movzx	edx, BYTE PTR _enc$[ebp]
cmp	edx, 1
jne	SHORT $LN63@sqlite3Ato
mov	DWORD PTR _incr$[ebp], 1
jmp	SHORT $LN62@sqlite3Ato
mov	DWORD PTR _incr$[ebp], 2
movzx	eax, BYTE PTR _enc$[ebp]
mov	ecx, 3
sub	ecx, eax
mov	DWORD PTR _i$2[ebp], ecx
jmp	SHORT $LN61@sqlite3Ato
mov	edx, DWORD PTR _i$2[ebp]
add	edx, 2
mov	DWORD PTR _i$2[ebp], edx
mov	eax, DWORD PTR _i$2[ebp]
cmp	eax, DWORD PTR _length$[ebp]
jge	SHORT $LN59@sqlite3Ato
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _i$2[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
jne	SHORT $LN59@sqlite3Ato
jmp	SHORT $LN60@sqlite3Ato
mov	eax, DWORD PTR _i$2[ebp]
cmp	eax, DWORD PTR _length$[ebp]
jge	SHORT $LN66@sqlite3Ato
mov	DWORD PTR tv76[ebp], 1
jmp	SHORT $LN67@sqlite3Ato
mov	DWORD PTR tv76[ebp], 0
mov	ecx, DWORD PTR tv76[ebp]
mov	DWORD PTR _nonNum$[ebp], ecx
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$2[ebp]
movzx	eax, BYTE PTR _enc$[ebp]
lea	ecx, DWORD PTR [edx+eax-3]
mov	DWORD PTR _zEnd$[ebp], ecx
movzx	edx, BYTE PTR _enc$[ebp]
and	edx, 1
add	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
cmp	eax, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN57@sqlite3Ato
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 1
je	SHORT $LN57@sqlite3Ato
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], ecx
jmp	SHORT $LN62@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
cmp	edx, DWORD PTR _zEnd$[ebp]
jb	SHORT $LN56@sqlite3Ato
xor	eax, eax
jmp	$LN64@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 45					
jne	SHORT $LN55@sqlite3Ato
mov	DWORD PTR _sign$[ebp], -1
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], edx
jmp	SHORT $LN53@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 43					
jne	SHORT $LN53@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
cmp	eax, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN51@sqlite3Ato
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 48					
jne	SHORT $LN51@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], edx
mov	eax, DWORD PTR _nDigits$[ebp]
add	eax, 1
mov	DWORD PTR _nDigits$[ebp], eax
jmp	SHORT $LN53@sqlite3Ato
mov	ecx, DWORD PTR _z$[ebp]
cmp	ecx, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN49@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
je	SHORT $LN49@sqlite3Ato
cmp	DWORD PTR _s$[ebp+4], 214748364		
jg	SHORT $LN49@sqlite3Ato
jl	SHORT $LN76@sqlite3Ato
cmp	DWORD PTR _s$[ebp], -858993461		
jae	SHORT $LN49@sqlite3Ato
push	0
push	10					
mov	edx, DWORD PTR _s$[ebp+4]
push	edx
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	__allmul
mov	ecx, eax
mov	esi, edx
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx]
sub	eax, 48					
cdq
add	ecx, eax
adc	esi, edx
mov	DWORD PTR _s$[ebp], ecx
mov	DWORD PTR _s$[ebp+4], esi
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _nDigits$[ebp]
add	ecx, 1
mov	DWORD PTR _nDigits$[ebp], ecx
jmp	SHORT $LN51@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
cmp	edx, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN47@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 4
je	SHORT $LN47@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _nDigits$[ebp]
add	ecx, 1
mov	DWORD PTR _nDigits$[ebp], ecx
mov	edx, DWORD PTR _d$[ebp]
add	edx, 1
mov	DWORD PTR _d$[ebp], edx
jmp	SHORT $LN49@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
cmp	eax, DWORD PTR _zEnd$[ebp]
jb	SHORT $LN46@sqlite3Ato
jmp	$do_atof_calc$79
mov	ecx, DWORD PTR _z$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 46					
jne	$LN41@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
cmp	ecx, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN43@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
je	SHORT $LN43@sqlite3Ato
cmp	DWORD PTR _s$[ebp+4], 214748364		
jg	SHORT $LN43@sqlite3Ato
jl	SHORT $LN77@sqlite3Ato
cmp	DWORD PTR _s$[ebp], -858993461		
jae	SHORT $LN43@sqlite3Ato
push	0
push	10					
mov	edx, DWORD PTR _s$[ebp+4]
push	edx
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	__allmul
mov	ecx, eax
mov	esi, edx
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx]
sub	eax, 48					
cdq
add	ecx, eax
adc	esi, edx
mov	DWORD PTR _s$[ebp], ecx
mov	DWORD PTR _s$[ebp+4], esi
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _nDigits$[ebp]
add	ecx, 1
mov	DWORD PTR _nDigits$[ebp], ecx
mov	edx, DWORD PTR _d$[ebp]
sub	edx, 1
mov	DWORD PTR _d$[ebp], edx
jmp	SHORT $LN44@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
cmp	eax, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN41@sqlite3Ato
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 4
je	SHORT $LN41@sqlite3Ato
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _nDigits$[ebp]
add	edx, 1
mov	DWORD PTR _nDigits$[ebp], edx
jmp	SHORT $LN43@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
cmp	eax, DWORD PTR _zEnd$[ebp]
jb	SHORT $LN40@sqlite3Ato
jmp	$do_atof_calc$79
mov	ecx, DWORD PTR _z$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 101				
je	SHORT $LN38@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 69					
jne	$LN32@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], edx
mov	DWORD PTR _eValid$[ebp], 0
mov	eax, DWORD PTR _z$[ebp]
cmp	eax, DWORD PTR _zEnd$[ebp]
jb	SHORT $LN37@sqlite3Ato
jmp	$do_atof_calc$79
mov	ecx, DWORD PTR _z$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 45					
jne	SHORT $LN36@sqlite3Ato
mov	DWORD PTR _esign$[ebp], -1
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], eax
jmp	SHORT $LN34@sqlite3Ato
mov	ecx, DWORD PTR _z$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 43					
jne	SHORT $LN34@sqlite3Ato
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
cmp	ecx, DWORD PTR _zEnd$[ebp]
jae	SHORT $LN32@sqlite3Ato
mov	edx, DWORD PTR _z$[ebp]
movzx	eax, BYTE PTR [edx]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 4
je	SHORT $LN32@sqlite3Ato
cmp	DWORD PTR _e$[ebp], 10000		
jge	SHORT $LN68@sqlite3Ato
imul	edx, DWORD PTR _e$[ebp], 10
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax]
lea	edx, DWORD PTR [edx+ecx-48]
mov	DWORD PTR tv217[ebp], edx
jmp	SHORT $LN69@sqlite3Ato
mov	DWORD PTR tv217[ebp], 10000		
mov	eax, DWORD PTR tv217[ebp]
mov	DWORD PTR _e$[ebp], eax
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], ecx
mov	DWORD PTR _eValid$[ebp], 1
jmp	SHORT $LN34@sqlite3Ato
cmp	DWORD PTR _nDigits$[ebp], 0
je	SHORT $do_atof_calc$79
cmp	DWORD PTR _eValid$[ebp], 0
je	SHORT $do_atof_calc$79
mov	edx, DWORD PTR _z$[ebp]
cmp	edx, DWORD PTR _zEnd$[ebp]
jae	SHORT $do_atof_calc$79
mov	eax, DWORD PTR _z$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
je	SHORT $do_atof_calc$79
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _incr$[ebp]
mov	DWORD PTR _z$[ebp], eax
jmp	SHORT $LN30@sqlite3Ato
mov	ecx, DWORD PTR _e$[ebp]
imul	ecx, DWORD PTR _esign$[ebp]
add	ecx, DWORD PTR _d$[ebp]
mov	DWORD PTR _e$[ebp], ecx
jns	SHORT $LN28@sqlite3Ato
mov	DWORD PTR _esign$[ebp], -1
imul	edx, DWORD PTR _e$[ebp], -1
mov	DWORD PTR _e$[ebp], edx
jmp	SHORT $LN27@sqlite3Ato
mov	DWORD PTR _esign$[ebp], 1
mov	eax, DWORD PTR _s$[ebp]
or	eax, DWORD PTR _s$[ebp+4]
jne	SHORT $LN26@sqlite3Ato
cmp	DWORD PTR _sign$[ebp], 0
jge	SHORT $LN70@sqlite3Ato
cmp	DWORD PTR _nDigits$[ebp], 0
je	SHORT $LN70@sqlite3Ato
movsd	xmm0, QWORD PTR __real@8000000000000000
movsd	QWORD PTR tv236[ebp], xmm0
jmp	SHORT $LN71@sqlite3Ato
movsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR tv236[ebp], xmm0
movsd	xmm0, QWORD PTR tv236[ebp]
movsd	QWORD PTR _result$[ebp], xmm0
jmp	$LN1@sqlite3Ato
cmp	DWORD PTR _esign$[ebp], 0
jle	SHORT $LN24@sqlite3Ato
cmp	DWORD PTR _s$[ebp+4], 214748364		
jg	SHORT $LN22@sqlite3Ato
jl	SHORT $LN78@sqlite3Ato
cmp	DWORD PTR _s$[ebp], -858993460		
jae	SHORT $LN22@sqlite3Ato
cmp	DWORD PTR _e$[ebp], 0
jle	SHORT $LN22@sqlite3Ato
mov	ecx, DWORD PTR _e$[ebp]
sub	ecx, 1
mov	DWORD PTR _e$[ebp], ecx
push	0
push	10					
mov	edx, DWORD PTR _s$[ebp+4]
push	edx
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	__allmul
mov	DWORD PTR _s$[ebp], eax
mov	DWORD PTR _s$[ebp+4], edx
jmp	SHORT $LN23@sqlite3Ato
jmp	SHORT $LN19@sqlite3Ato
push	0
push	10					
mov	ecx, DWORD PTR _s$[ebp+4]
push	ecx
mov	edx, DWORD PTR _s$[ebp]
push	edx
call	__allrem
mov	DWORD PTR tv438[ebp], eax
mov	DWORD PTR tv438[ebp+4], edx
mov	eax, DWORD PTR tv438[ebp]
or	eax, DWORD PTR tv438[ebp+4]
jne	SHORT $LN19@sqlite3Ato
cmp	DWORD PTR _e$[ebp], 0
jle	SHORT $LN19@sqlite3Ato
mov	ecx, DWORD PTR _e$[ebp]
sub	ecx, 1
mov	DWORD PTR _e$[ebp], ecx
push	0
push	10					
mov	edx, DWORD PTR _s$[ebp+4]
push	edx
mov	eax, DWORD PTR _s$[ebp]
push	eax
call	__alldiv
mov	DWORD PTR _s$[ebp], eax
mov	DWORD PTR _s$[ebp+4], edx
jmp	SHORT $LN24@sqlite3Ato
cmp	DWORD PTR _sign$[ebp], 0
jge	SHORT $LN72@sqlite3Ato
mov	ecx, DWORD PTR _s$[ebp]
neg	ecx
mov	edx, DWORD PTR _s$[ebp+4]
adc	edx, 0
neg	edx
mov	DWORD PTR tv249[ebp], ecx
mov	DWORD PTR tv249[ebp+4], edx
jmp	SHORT $LN73@sqlite3Ato
mov	eax, DWORD PTR _s$[ebp]
mov	DWORD PTR tv249[ebp], eax
mov	ecx, DWORD PTR _s$[ebp+4]
mov	DWORD PTR tv249[ebp+4], ecx
mov	edx, DWORD PTR tv249[ebp]
mov	DWORD PTR _s$[ebp], edx
mov	eax, DWORD PTR tv249[ebp+4]
mov	DWORD PTR _s$[ebp+4], eax
cmp	DWORD PTR _e$[ebp], 0
je	$LN18@sqlite3Ato
movsd	xmm0, QWORD PTR __real@3ff0000000000000
movsd	QWORD PTR _scale$1[ebp], xmm0
cmp	DWORD PTR _e$[ebp], 307			
jle	$LN17@sqlite3Ato
cmp	DWORD PTR _e$[ebp], 342			
jge	$LN17@sqlite3Ato
mov	eax, DWORD PTR _e$[ebp]
cdq
mov	ecx, 308				
idiv	ecx
test	edx, edx
je	SHORT $LN15@sqlite3Ato
movsd	xmm0, QWORD PTR _scale$1[ebp]
mulsd	xmm0, QWORD PTR __real@4024000000000000
movsd	QWORD PTR _scale$1[ebp], xmm0
mov	edx, DWORD PTR _e$[ebp]
sub	edx, 1
mov	DWORD PTR _e$[ebp], edx
jmp	SHORT $LN16@sqlite3Ato
cmp	DWORD PTR _esign$[ebp], 0
jge	SHORT $LN14@sqlite3Ato
mov	edx, DWORD PTR _s$[ebp+4]
mov	ecx, DWORD PTR _s$[ebp]
call	__ltod3
divsd	xmm0, QWORD PTR _scale$1[ebp]
movsd	QWORD PTR _result$[ebp], xmm0
movsd	xmm0, QWORD PTR _result$[ebp]
divsd	xmm0, QWORD PTR __real@7fe1ccf385ebc8a0
movsd	QWORD PTR _result$[ebp], xmm0
jmp	SHORT $LN13@sqlite3Ato
mov	edx, DWORD PTR _s$[ebp+4]
mov	ecx, DWORD PTR _s$[ebp]
call	__ltod3
mulsd	xmm0, QWORD PTR _scale$1[ebp]
movsd	QWORD PTR _result$[ebp], xmm0
movsd	xmm0, QWORD PTR _result$[ebp]
mulsd	xmm0, QWORD PTR __real@7fe1ccf385ebc8a0
movsd	QWORD PTR _result$[ebp], xmm0
jmp	$LN2@sqlite3Ato
cmp	DWORD PTR _e$[ebp], 342			
jl	SHORT $LN11@sqlite3Ato
cmp	DWORD PTR _esign$[ebp], 0
jge	SHORT $LN10@sqlite3Ato
mov	edx, DWORD PTR _s$[ebp+4]
mov	ecx, DWORD PTR _s$[ebp]
call	__ltod3
mulsd	xmm0, QWORD PTR __real@0000000000000000
movsd	QWORD PTR _result$[ebp], xmm0
jmp	SHORT $LN9@sqlite3Ato
mov	edx, DWORD PTR _s$[ebp+4]
mov	ecx, DWORD PTR _s$[ebp]
call	__ltod3
mulsd	xmm0, QWORD PTR __real@7ff0000000000000
movsd	QWORD PTR _result$[ebp], xmm0
jmp	$LN2@sqlite3Ato
mov	eax, DWORD PTR _e$[ebp]
cdq
mov	ecx, 22					
idiv	ecx
test	edx, edx
je	SHORT $LN6@sqlite3Ato
movsd	xmm0, QWORD PTR _scale$1[ebp]
mulsd	xmm0, QWORD PTR __real@4024000000000000
movsd	QWORD PTR _scale$1[ebp], xmm0
mov	edx, DWORD PTR _e$[ebp]
sub	edx, 1
mov	DWORD PTR _e$[ebp], edx
jmp	SHORT $LN11@sqlite3Ato
cmp	DWORD PTR _e$[ebp], 0
jle	SHORT $LN4@sqlite3Ato
movsd	xmm0, QWORD PTR _scale$1[ebp]
mulsd	xmm0, QWORD PTR __real@4480f0cf064dd592
movsd	QWORD PTR _scale$1[ebp], xmm0
mov	eax, DWORD PTR _e$[ebp]
sub	eax, 22					
mov	DWORD PTR _e$[ebp], eax
jmp	SHORT $LN6@sqlite3Ato
cmp	DWORD PTR _esign$[ebp], 0
jge	SHORT $LN3@sqlite3Ato
mov	edx, DWORD PTR _s$[ebp+4]
mov	ecx, DWORD PTR _s$[ebp]
call	__ltod3
divsd	xmm0, QWORD PTR _scale$1[ebp]
movsd	QWORD PTR _result$[ebp], xmm0
jmp	SHORT $LN2@sqlite3Ato
mov	edx, DWORD PTR _s$[ebp+4]
mov	ecx, DWORD PTR _s$[ebp]
call	__ltod3
mulsd	xmm0, QWORD PTR _scale$1[ebp]
movsd	QWORD PTR _result$[ebp], xmm0
jmp	SHORT $LN1@sqlite3Ato
mov	edx, DWORD PTR _s$[ebp+4]
mov	ecx, DWORD PTR _s$[ebp]
call	__ltod3
movsd	QWORD PTR _result$[ebp], xmm0
mov	ecx, DWORD PTR _pResult$[ebp]
movsd	xmm0, QWORD PTR _result$[ebp]
movsd	QWORD PTR [ecx], xmm0
mov	edx, DWORD PTR _z$[ebp]
cmp	edx, DWORD PTR _zEnd$[ebp]
jb	SHORT $LN74@sqlite3Ato
cmp	DWORD PTR _nDigits$[ebp], 0
jle	SHORT $LN74@sqlite3Ato
cmp	DWORD PTR _eValid$[ebp], 0
je	SHORT $LN74@sqlite3Ato
cmp	DWORD PTR _nonNum$[ebp], 0
jne	SHORT $LN74@sqlite3Ato
mov	DWORD PTR tv287[ebp], 1
jmp	SHORT $LN75@sqlite3Ato
mov	DWORD PTR tv287[ebp], 0
mov	eax, DWORD PTR tv287[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FixTriggerStep PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pStep$[ebp], 0
je	SHORT $LN4@sqlite3Fix
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixSelect
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN6@sqlite3Fix
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN6@sqlite3Fix
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExprList
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN6@sqlite3Fix
mov	eax, DWORD PTR _pStep$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pStep$[ebp], ecx
jmp	SHORT $LN5@sqlite3Fix
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3FixExprList PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN5@sqlite3Fix
xor	eax, eax
jmp	SHORT $LN6@sqlite3Fix
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$[ebp], ecx
jmp	SHORT $LN4@sqlite3Fix
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$[ebp]
add	eax, 24					
mov	DWORD PTR _pItem$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN2@sqlite3Fix
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN6@sqlite3Fix
jmp	SHORT $LN3@sqlite3Fix
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FixExpr PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pExpr$[ebp], 0
je	$LN10@sqlite3Fix
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 135				
jne	SHORT $LN9@sqlite3Fix
mov	edx, DWORD PTR _pFix$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax]
movzx	edx, BYTE PTR [ecx+137]
test	edx, edx
je	SHORT $LN8@sqlite3Fix
mov	eax, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [eax], 101			
jmp	SHORT $LN9@sqlite3Fix
mov	ecx, DWORD PTR _pFix$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
push	OFFSET $SG105775
mov	eax, DWORD PTR _pFix$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	$LN12@sqlite3Fix
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 16384				
je	SHORT $LN6@sqlite3Fix
jmp	SHORT $LN10@sqlite3Fix
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 2048				
je	SHORT $LN5@sqlite3Fix
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixSelect
add	esp, 8
test	eax, eax
je	SHORT $LN4@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN12@sqlite3Fix
jmp	SHORT $LN3@sqlite3Fix
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExprList
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN12@sqlite3Fix
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN12@sqlite3Fix
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pExpr$[ebp], ecx
jmp	$LN11@sqlite3Fix
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3FixSelect PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pSelect$[ebp], 0
je	$LN9@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExprList
add	esp, 8
test	eax, eax
je	SHORT $LN8@sqlite3Fix
mov	eax, 1
jmp	$LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixSrcList
add	esp, 8
test	eax, eax
je	SHORT $LN7@sqlite3Fix
mov	eax, 1
jmp	$LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN6@sqlite3Fix
mov	eax, 1
jmp	$LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExprList
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Fix
mov	eax, 1
jmp	$LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN4@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExprList
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
push	edx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN11@sqlite3Fix
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pSelect$[ebp], ecx
jmp	$LN10@sqlite3Fix
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3FixSrcList PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN8@sqlite3Fix
xor	eax, eax
jmp	$LN9@sqlite3Fix
mov	eax, DWORD PTR _pFix$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _zDb$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pList$[ebp]
add	edx, 8
mov	DWORD PTR _pItem$[ebp], edx
jmp	SHORT $LN7@sqlite3Fix
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pItem$[ebp]
add	ecx, 80					
mov	DWORD PTR _pItem$[ebp], ecx
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	$LN5@sqlite3Fix
mov	ecx, DWORD PTR _pFix$[ebp]
cmp	DWORD PTR [ecx+8], 0
jne	SHORT $LN4@sqlite3Fix
mov	edx, DWORD PTR _pItem$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN3@sqlite3Fix
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3Fix
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pFix$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pFix$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
push	OFFSET $SG105745
mov	eax, DWORD PTR _pFix$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 20					
mov	eax, 1
jmp	SHORT $LN9@sqlite3Fix
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pFix$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [ecx+4], 0
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR _pFix$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pFix$[ebp]
push	ecx
call	_sqlite3FixSelect
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN9@sqlite3Fix
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR _pFix$[ebp]
push	ecx
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Fix
mov	eax, 1
jmp	SHORT $LN9@sqlite3Fix
jmp	$LN6@sqlite3Fix
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FixInit PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pFix$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	edx, DWORD PTR _pFix$[ebp]
mov	eax, DWORD PTR [eax+ecx]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	edx, DWORD PTR _pFix$[ebp]
mov	eax, DWORD PTR [eax+ecx+12]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pFix$[ebp]
mov	edx, DWORD PTR _zType$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _pFix$[ebp]
mov	ecx, DWORD PTR _pName$[ebp]
mov	DWORD PTR [eax+20], ecx
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN3@sqlite3Fix
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN4@sqlite3Fix
mov	DWORD PTR tv80[ebp], 0
mov	edx, DWORD PTR _pFix$[ebp]
mov	eax, DWORD PTR tv80[ebp]
mov	DWORD PTR [edx+8], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Detach PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pDbname$[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _pDbname$[ebp]
push	ecx
push	OFFSET ?detach_func@?1??sqlite3Detach@@9@9
push	25					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeAttach
add	esp, 28					
pop	ebp
ret	0
ENDP
_sqlite3Attach PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pDbname$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
push	OFFSET ?attach_func@?1??sqlite3Attach@@9@9
push	24					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_codeAttach
add	esp, 28					
pop	ebp
ret	0
ENDP
_sqlite3AuthReadCol PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _zDb$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+492]
push	ecx
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
mov	ecx, DWORD PTR _zTab$[ebp]
push	ecx
push	20					
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+280]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+276]
call	edx
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 1
jne	SHORT $LN6@sqlite3Aut
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+20], 2
jg	SHORT $LN4@sqlite3Aut
cmp	DWORD PTR _iDb$[ebp], 0
je	SHORT $LN5@sqlite3Aut
mov	ecx, DWORD PTR _zCol$[ebp]
push	ecx
mov	edx, DWORD PTR _zTab$[ebp]
push	edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
push	OFFSET $SG105838
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 20					
jmp	SHORT $LN3@sqlite3Aut
mov	edx, DWORD PTR _zCol$[ebp]
push	edx
mov	eax, DWORD PTR _zTab$[ebp]
push	eax
push	OFFSET $SG105840
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+12], 23			
jmp	SHORT $LN2@sqlite3Aut
cmp	DWORD PTR _rc$[ebp], 2
je	SHORT $LN2@sqlite3Aut
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3Aut
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqliteAuthBadReturnCode
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AuthContextPop PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pContext$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN2@sqlite3Aut
mov	ecx, DWORD PTR _pContext$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _pContext$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+492], ecx
mov	edx, DWORD PTR _pContext$[ebp]
mov	DWORD PTR [edx+4], 0
pop	ebp
ret	0
ENDP
_sqlite3AuthContextPush PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pContext$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pContext$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+492]
mov	DWORD PTR [edx], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _zContext$[ebp]
mov	DWORD PTR [edx+492], eax
pop	ebp
ret	0
ENDP
_sqlite3AuthCheck PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
jne	SHORT $LN5@sqlite3Aut
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+451]
test	edx, edx
je	SHORT $LN6@sqlite3Aut
xor	eax, eax
jmp	$LN7@sqlite3Aut
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+276], 0
jne	SHORT $LN4@sqlite3Aut
xor	eax, eax
jmp	SHORT $LN7@sqlite3Aut
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+492]
push	edx
mov	eax, DWORD PTR _zArg3$[ebp]
push	eax
mov	ecx, DWORD PTR _zArg2$[ebp]
push	ecx
mov	edx, DWORD PTR _zArg1$[ebp]
push	edx
mov	eax, DWORD PTR _code$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+280]
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+276]
call	ecx
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 1
jne	SHORT $LN3@sqlite3Aut
push	OFFSET $SG105895
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+12], 23			
jmp	SHORT $LN2@sqlite3Aut
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3Aut
cmp	DWORD PTR _rc$[ebp], 2
je	SHORT $LN2@sqlite3Aut
mov	DWORD PTR _rc$[ebp], 1
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqliteAuthBadReturnCode
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AuthRead PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _pTab$[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+276], 0
jne	SHORT $LN14@sqlite3Aut
jmp	$LN15@sqlite3Aut
mov	eax, DWORD PTR _pSchema$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN13@sqlite3Aut
jmp	$LN15@sqlite3Aut
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 62					
jne	SHORT $LN12@sqlite3Aut
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+412]
mov	DWORD PTR _pTab$[ebp], eax
jmp	SHORT $LN11@sqlite3Aut
mov	DWORD PTR _iSrc$[ebp], 0
jmp	SHORT $LN10@sqlite3Aut
mov	ecx, DWORD PTR _iSrc$[ebp]
add	ecx, 1
mov	DWORD PTR _iSrc$[ebp], ecx
mov	edx, DWORD PTR _pTabList$[ebp]
mov	eax, DWORD PTR _iSrc$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN11@sqlite3Aut
imul	ecx, DWORD PTR _iSrc$[ebp], 80
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR [edx+28]
cmp	edx, DWORD PTR [eax+ecx+56]
jne	SHORT $LN7@sqlite3Aut
imul	eax, DWORD PTR _iSrc$[ebp], 80
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR [ecx+eax+24]
mov	DWORD PTR _pTab$[ebp], edx
jmp	SHORT $LN11@sqlite3Aut
jmp	SHORT $LN9@sqlite3Aut
mov	eax, DWORD PTR _pExpr$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	DWORD PTR _iCol$[ebp], ecx
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN6@sqlite3Aut
jmp	SHORT $LN15@sqlite3Aut
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN5@sqlite3Aut
imul	edx, DWORD PTR _iCol$[ebp], 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _zCol$[ebp], edx
jmp	SHORT $LN4@sqlite3Aut
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+36]
test	ecx, ecx
jl	SHORT $LN3@sqlite3Aut
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
imul	ecx, eax, 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zCol$[ebp], ecx
jmp	SHORT $LN4@sqlite3Aut
mov	DWORD PTR _zCol$[ebp], OFFSET $SG105875
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _zCol$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthReadCol
add	esp, 16					
cmp	eax, 2
jne	SHORT $LN15@sqlite3Aut
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	BYTE PTR [ecx], 101			
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DeferForeignKey PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	DWORD PTR _pTab$[ebp], ecx
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN1@sqlite3Def
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pFKey$[ebp], eax
cmp	DWORD PTR _pFKey$[ebp], 0
jne	SHORT $LN2@sqlite3Def
jmp	SHORT $LN3@sqlite3Def
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	dl, BYTE PTR _isDeferred$[ebp]
mov	BYTE PTR [ecx+24], dl
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CreateForeignKey PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _pFKey$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN28@sqlite3Cre
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+451]
test	edx, edx
je	SHORT $LN29@sqlite3Cre
jmp	$fk_end$32
cmp	DWORD PTR _pFromCol$[ebp], 0
jne	SHORT $LN27@sqlite3Cre
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+38]
sub	ecx, 1
mov	DWORD PTR _iCol$1[ebp], ecx
jns	SHORT $LN26@sqlite3Cre
jmp	$fk_end$32
cmp	DWORD PTR _pToCol$[ebp], 0
je	SHORT $LN25@sqlite3Cre
mov	edx, DWORD PTR _pToCol$[ebp]
cmp	DWORD PTR [edx], 1
je	SHORT $LN25@sqlite3Cre
mov	eax, DWORD PTR _pTo$[ebp]
push	eax
imul	ecx, DWORD PTR _iCol$1[ebp], 24
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	OFFSET $SG107080
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 16					
jmp	$fk_end$32
mov	DWORD PTR _nCol$[ebp], 1
jmp	SHORT $LN24@sqlite3Cre
cmp	DWORD PTR _pToCol$[ebp], 0
je	SHORT $LN23@sqlite3Cre
mov	eax, DWORD PTR _pToCol$[ebp]
mov	ecx, DWORD PTR _pFromCol$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx]
je	SHORT $LN23@sqlite3Cre
push	OFFSET $SG107083
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$fk_end$32
jmp	SHORT $LN24@sqlite3Cre
mov	ecx, DWORD PTR _pFromCol$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _nCol$[ebp], edx
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _nCol$[ebp]
lea	eax, DWORD PTR [ecx+edx*8+37]
mov	DWORD PTR _nByte$[ebp], eax
cmp	DWORD PTR _pToCol$[ebp], 0
je	SHORT $LN21@sqlite3Cre
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN20@sqlite3Cre
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pToCol$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	SHORT $LN21@sqlite3Cre
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pToCol$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	edx, DWORD PTR _nByte$[ebp]
lea	eax, DWORD PTR [edx+eax+1]
mov	DWORD PTR _nByte$[ebp], eax
jmp	SHORT $LN19@sqlite3Cre
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pFKey$[ebp], eax
cmp	DWORD PTR _pFKey$[ebp], 0
jne	SHORT $LN17@sqlite3Cre
jmp	$fk_end$32
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _nCol$[ebp]
mov	eax, DWORD PTR _pFKey$[ebp]
lea	ecx, DWORD PTR [eax+edx*8+36]
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR _z$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pTo$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _z$[ebp]
mov	BYTE PTR [edx+ecx], 0
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Dequote
add	esp, 4
mov	ecx, DWORD PTR _pTo$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _z$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR _nCol$[ebp]
mov	DWORD PTR [edx+20], eax
cmp	DWORD PTR _pFromCol$[ebp], 0
jne	SHORT $LN16@sqlite3Cre
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
sub	edx, 1
mov	eax, 8
imul	ecx, eax, 0
mov	eax, DWORD PTR _pFKey$[ebp]
mov	DWORD PTR [eax+ecx+36], edx
jmp	$LN15@sqlite3Cre
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN14@sqlite3Cre
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nCol$[ebp]
jge	$LN15@sqlite3Cre
mov	DWORD PTR _j$3[ebp], 0
jmp	SHORT $LN11@sqlite3Cre
mov	eax, DWORD PTR _j$3[ebp]
add	eax, 1
mov	DWORD PTR _j$3[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _j$3[ebp], edx
jge	SHORT $LN9@sqlite3Cre
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pFromCol$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
imul	ecx, DWORD PTR _j$3[ebp], 24
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN8@sqlite3Cre
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _pFKey$[ebp]
mov	ecx, DWORD PTR _j$3[ebp]
mov	DWORD PTR [eax+edx*8+36], ecx
jmp	SHORT $LN9@sqlite3Cre
jmp	SHORT $LN10@sqlite3Cre
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _j$3[ebp], eax
jl	SHORT $LN7@sqlite3Cre
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pFromCol$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
push	OFFSET $SG107102
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$fk_end$32
jmp	$LN13@sqlite3Cre
cmp	DWORD PTR _pToCol$[ebp], 0
je	SHORT $LN6@sqlite3Cre
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@sqlite3Cre
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nCol$[ebp]
jge	SHORT $LN6@sqlite3Cre
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pToCol$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$2[ebp], eax
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR [ecx+eax*8+40], edx
mov	eax, DWORD PTR _n$2[ebp]
push	eax
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pToCol$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _n$2[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _n$2[ebp]
mov	edx, DWORD PTR _z$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
mov	DWORD PTR _z$[ebp], eax
jmp	SHORT $LN4@sqlite3Cre
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	BYTE PTR [ecx+24], 0
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 255				
mov	eax, 1
imul	ecx, eax, 0
mov	eax, DWORD PTR _pFKey$[ebp]
mov	BYTE PTR [eax+ecx+25], dl
mov	ecx, DWORD PTR _flags$[ebp]
sar	ecx, 8
and	ecx, 255				
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _pFKey$[ebp]
mov	BYTE PTR [eax+edx+25], cl
mov	ecx, DWORD PTR _pFKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pFKey$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 56					
push	ecx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pNextTo$[ebp], eax
mov	edx, DWORD PTR _pNextTo$[ebp]
cmp	edx, DWORD PTR _pFKey$[ebp]
jne	SHORT $LN2@sqlite3Cre
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
jmp	SHORT $fk_end$32
cmp	DWORD PTR _pNextTo$[ebp], 0
je	SHORT $LN1@sqlite3Cre
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	edx, DWORD PTR _pNextTo$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pNextTo$[ebp]
mov	ecx, DWORD PTR _pFKey$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pFKey$[ebp]
mov	DWORD PTR [edx+16], eax
mov	DWORD PTR _pFKey$[ebp], 0
mov	ecx, DWORD PTR _pFKey$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pFromCol$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprListDelete
add	esp, 8
mov	edx, DWORD PTR _pToCol$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3JoinType PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _jointype$[ebp], 0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pA$[ebp]
mov	DWORD PTR _apAll$[ebp+ecx], edx
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pB$[ebp]
mov	DWORD PTR _apAll$[ebp+eax], ecx
mov	edx, 4
shl	edx, 1
mov	eax, DWORD PTR _pC$[ebp]
mov	DWORD PTR _apAll$[ebp+edx], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN13@sqlite3Joi
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 3
jge	$LN11@sqlite3Joi
mov	edx, DWORD PTR _i$[ebp]
cmp	DWORD PTR _apAll$[ebp+edx*4], 0
je	$LN11@sqlite3Joi
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _apAll$[ebp+eax*4]
mov	DWORD PTR _p$[ebp], ecx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN10@sqlite3Joi
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
cmp	DWORD PTR _j$[ebp], 7
jge	SHORT $LN8@sqlite3Joi
imul	eax, DWORD PTR _j$[ebp], 3
movzx	ecx, BYTE PTR ?aKeyword@?1??sqlite3JoinType@@9@9[eax+1]
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+4], ecx
jne	SHORT $LN7@sqlite3Joi
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
imul	edx, DWORD PTR _j$[ebp], 3
movzx	eax, BYTE PTR ?aKeyword@?1??sqlite3JoinType@@9@9[edx]
add	eax, OFFSET ?zKeyText@?1??sqlite3JoinType@@9@9
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN7@sqlite3Joi
imul	eax, DWORD PTR _j$[ebp], 3
movzx	ecx, BYTE PTR ?aKeyword@?1??sqlite3JoinType@@9@9[eax+2]
or	ecx, DWORD PTR _jointype$[ebp]
mov	DWORD PTR _jointype$[ebp], ecx
jmp	SHORT $LN8@sqlite3Joi
jmp	SHORT $LN9@sqlite3Joi
cmp	DWORD PTR _j$[ebp], 7
jl	SHORT $LN6@sqlite3Joi
mov	edx, DWORD PTR _jointype$[ebp]
or	edx, 64					
mov	DWORD PTR _jointype$[ebp], edx
jmp	SHORT $LN11@sqlite3Joi
jmp	$LN12@sqlite3Joi
mov	eax, DWORD PTR _jointype$[ebp]
and	eax, 33					
cmp	eax, 33					
je	SHORT $LN4@sqlite3Joi
mov	ecx, DWORD PTR _jointype$[ebp]
and	ecx, 64					
je	SHORT $LN5@sqlite3Joi
mov	DWORD PTR _zSp$1[ebp], OFFSET $SG113210
cmp	DWORD PTR _pC$[ebp], 0
jne	SHORT $LN3@sqlite3Joi
mov	edx, DWORD PTR _zSp$1[ebp]
add	edx, 1
mov	DWORD PTR _zSp$1[ebp], edx
mov	eax, DWORD PTR _pC$[ebp]
push	eax
mov	ecx, DWORD PTR _zSp$1[ebp]
push	ecx
mov	edx, DWORD PTR _pB$[ebp]
push	edx
mov	eax, DWORD PTR _pA$[ebp]
push	eax
push	OFFSET $SG113213
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 24					
mov	DWORD PTR _jointype$[ebp], 1
jmp	SHORT $LN2@sqlite3Joi
mov	edx, DWORD PTR _jointype$[ebp]
and	edx, 32					
je	SHORT $LN2@sqlite3Joi
mov	eax, DWORD PTR _jointype$[ebp]
and	eax, 24					
cmp	eax, 8
je	SHORT $LN2@sqlite3Joi
push	OFFSET $SG113216
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
mov	DWORD PTR _jointype$[ebp], 1
mov	eax, DWORD PTR _jointype$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TriggerColmask PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
cmp	DWORD PTR _pChanges$[ebp], 0
je	SHORT $LN8@sqlite3Tri
mov	DWORD PTR tv65[ebp], 110		
jmp	SHORT $LN9@sqlite3Tri
mov	DWORD PTR tv65[ebp], 109		
mov	eax, DWORD PTR tv65[ebp]
mov	DWORD PTR _op$[ebp], eax
mov	DWORD PTR _mask$[ebp], 0
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN5@sqlite3Tri
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Tri
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+8]
cmp	edx, DWORD PTR _op$[ebp]
jne	SHORT $LN2@sqlite3Tri
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+9]
and	ecx, DWORD PTR _tr_tm$[ebp]
je	SHORT $LN2@sqlite3Tri
mov	edx, DWORD PTR _pChanges$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_checkColumnOverlap
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Tri
mov	edx, DWORD PTR _orconf$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_getRowTrigger
add	esp, 16					
mov	DWORD PTR _pPrg$1[ebp], eax
cmp	DWORD PTR _pPrg$1[ebp], 0
je	SHORT $LN2@sqlite3Tri
mov	eax, DWORD PTR _isNew$[ebp]
mov	ecx, DWORD PTR _pPrg$1[ebp]
mov	edx, DWORD PTR _mask$[ebp]
or	edx, DWORD PTR [ecx+eax*4+16]
mov	DWORD PTR _mask$[ebp], edx
jmp	SHORT $LN4@sqlite3Tri
mov	eax, DWORD PTR _mask$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3UnlinkAndDeleteTrigger PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
add	eax, 40					
mov	DWORD PTR _pHash$[ebp], eax
push	0
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pHash$[ebp]
push	eax
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pTrigger$[ebp], eax
cmp	DWORD PTR _pTrigger$[ebp], 0
je	SHORT $LN6@sqlite3Unl
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR [ecx+20]
cmp	eax, DWORD PTR [edx+24]
jne	SHORT $LN4@sqlite3Unl
mov	ecx, DWORD PTR _pTrigger$[ebp]
push	ecx
call	_tableOfTrigger
add	esp, 4
mov	DWORD PTR _pTab$1[ebp], eax
mov	edx, DWORD PTR _pTab$1[ebp]
add	edx, 64					
mov	DWORD PTR _pp$2[ebp], edx
jmp	SHORT $LN3@sqlite3Unl
mov	eax, DWORD PTR _pp$2[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 32					
mov	DWORD PTR _pp$2[ebp], ecx
mov	edx, DWORD PTR _pp$2[ebp]
mov	eax, DWORD PTR [edx]
cmp	eax, DWORD PTR _pTrigger$[ebp]
je	SHORT $LN1@sqlite3Unl
jmp	SHORT $LN2@sqlite3Unl
mov	ecx, DWORD PTR _pp$2[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _pp$2[ebp]
mov	ecx, DWORD PTR [edx+32]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DeleteTrigger
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
or	edx, 2
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DeleteTrigger PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	SHORT $LN1@sqlite3Del
jmp	SHORT $LN2@sqlite3Del
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DeleteTriggerStep
add	esp, 8
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3IdListDelete
add	esp, 8
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3TriggerDeleteStep PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTableName$[ebp]
push	eax
push	109					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_triggerStepAllocate
add	esp, 12					
mov	DWORD PTR _pTriggerStep$[ebp], eax
cmp	DWORD PTR _pTriggerStep$[ebp], 0
je	SHORT $LN1@sqlite3Tri
push	1
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pTriggerStep$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _pTriggerStep$[ebp]
mov	BYTE PTR [edx+1], 10			
mov	eax, DWORD PTR _pWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TriggerUpdateStep PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTableName$[ebp]
push	eax
push	110					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_triggerStepAllocate
add	esp, 12					
mov	DWORD PTR _pTriggerStep$[ebp], eax
cmp	DWORD PTR _pTriggerStep$[ebp], 0
je	SHORT $LN1@sqlite3Tri
push	1
mov	edx, DWORD PTR _pEList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDup
add	esp, 12					
mov	ecx, DWORD PTR _pTriggerStep$[ebp]
mov	DWORD PTR [ecx+24], eax
push	1
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pTriggerStep$[ebp]
mov	DWORD PTR [ecx+20], eax
mov	edx, DWORD PTR _pTriggerStep$[ebp]
mov	al, BYTE PTR _orconf$[ebp]
mov	BYTE PTR [edx+1], al
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _pWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TriggerInsertStep PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTableName$[ebp]
push	eax
push	108					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_triggerStepAllocate
add	esp, 12					
mov	DWORD PTR _pTriggerStep$[ebp], eax
cmp	DWORD PTR _pTriggerStep$[ebp], 0
je	SHORT $LN2@sqlite3Tri
push	1
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDup
add	esp, 12					
mov	ecx, DWORD PTR _pTriggerStep$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pTriggerStep$[ebp]
mov	eax, DWORD PTR _pColumn$[ebp]
mov	DWORD PTR [edx+28], eax
mov	ecx, DWORD PTR _pTriggerStep$[ebp]
mov	dl, BYTE PTR _orconf$[ebp]
mov	BYTE PTR [ecx+1], dl
jmp	SHORT $LN1@sqlite3Tri
mov	eax, DWORD PTR _pColumn$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3IdListDelete
add	esp, 8
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TriggerSelectStep PROC
push	ebp
mov	ebp, esp
push	ecx
push	40					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTriggerStep$[ebp], eax
cmp	DWORD PTR _pTriggerStep$[ebp], 0
jne	SHORT $LN1@sqlite3Tri
mov	ecx, DWORD PTR _pSelect$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
xor	eax, eax
jmp	SHORT $LN2@sqlite3Tri
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	BYTE PTR [eax], 119			
mov	ecx, DWORD PTR _pTriggerStep$[ebp]
mov	edx, DWORD PTR _pSelect$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	BYTE PTR [eax+1], 10			
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DeleteTriggerStep PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pTriggerStep$[ebp], 0
je	SHORT $LN3@sqlite3Del
mov	eax, DWORD PTR _pTriggerStep$[ebp]
mov	DWORD PTR _pTmp$1[ebp], eax
mov	ecx, DWORD PTR _pTriggerStep$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pTriggerStep$[ebp], edx
mov	eax, DWORD PTR _pTmp$1[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pTmp$1[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _pTmp$1[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _pTmp$1[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3IdListDelete
add	esp, 8
mov	eax, DWORD PTR _pTmp$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Del
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CodeRowTriggerDirect PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _orconf$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_getRowTrigger
add	esp, 16					
mov	DWORD PTR _pPrg$[ebp], eax
cmp	DWORD PTR _pPrg$[ebp], 0
je	$LN2@sqlite3Cod
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN4@sqlite3Cod
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 262144				
jne	SHORT $LN4@sqlite3Cod
mov	DWORD PTR tv78[ebp], 1
jmp	SHORT $LN5@sqlite3Cod
mov	DWORD PTR tv78[ebp], 0
mov	eax, DWORD PTR tv78[ebp]
mov	DWORD PTR _bRecursive$1[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv82[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv82[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv82[ebp]
push	edx
mov	eax, DWORD PTR _ignoreJump$[ebp]
push	eax
mov	ecx, DWORD PTR _reg$[ebp]
push	ecx
push	128					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	-18					
mov	eax, DWORD PTR _pPrg$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
movzx	eax, BYTE PTR _bRecursive$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CodeRowTrigger PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN4@sqlite3Cod
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@sqlite3Cod
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
cmp	ecx, DWORD PTR _op$[ebp]
jne	SHORT $LN1@sqlite3Cod
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+9]
cmp	eax, DWORD PTR _tr_tm$[ebp]
jne	SHORT $LN1@sqlite3Cod
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_checkColumnOverlap
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Cod
mov	ecx, DWORD PTR _ignoreJump$[ebp]
push	ecx
mov	edx, DWORD PTR _orconf$[ebp]
push	edx
mov	eax, DWORD PTR _reg$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeRowTriggerDirect
add	esp, 24					
jmp	SHORT $LN3@sqlite3Cod
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TriggerList PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR [eax+edx+12]
mov	DWORD PTR _pTmpSchema$[ebp], ecx
mov	DWORD PTR _pList$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+438]
test	eax, eax
je	SHORT $LN6@sqlite3Tri
xor	eax, eax
jmp	$LN7@sqlite3Tri
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR _pTmpSchema$[ebp]
cmp	edx, DWORD PTR [ecx+68]
je	SHORT $LN5@sqlite3Tri
mov	eax, DWORD PTR _pTmpSchema$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _p$2[ebp], ecx
jmp	SHORT $LN4@sqlite3Tri
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _p$2[ebp], eax
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN5@sqlite3Tri
mov	ecx, DWORD PTR _p$2[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTrig$1[ebp], edx
mov	eax, DWORD PTR _pTrig$1[ebp]
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [eax+24]
cmp	edx, DWORD PTR [ecx+68]
jne	SHORT $LN1@sqlite3Tri
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pTrig$1[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@sqlite3Tri
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN9@sqlite3Tri
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR tv90[ebp], ecx
jmp	SHORT $LN10@sqlite3Tri
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR tv90[ebp], eax
mov	ecx, DWORD PTR _pTrig$1[ebp]
mov	edx, DWORD PTR tv90[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _pTrig$1[ebp]
mov	DWORD PTR _pList$[ebp], eax
jmp	SHORT $LN3@sqlite3Tri
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN11@sqlite3Tri
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR tv93[ebp], ecx
jmp	SHORT $LN12@sqlite3Tri
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR tv93[ebp], eax
mov	eax, DWORD PTR tv93[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3TriggersExist PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _mask$[ebp], 0
mov	DWORD PTR _pList$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 8388608				
je	SHORT $LN6@sqlite3Tri
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TriggerList
add	esp, 8
mov	DWORD PTR _pList$[ebp], eax
mov	edx, DWORD PTR _pList$[ebp]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN5@sqlite3Tri
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Tri
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+8]
cmp	eax, DWORD PTR _op$[ebp]
jne	SHORT $LN2@sqlite3Tri
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
call	_checkColumnOverlap
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Tri
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+9]
or	edx, DWORD PTR _mask$[ebp]
mov	DWORD PTR _mask$[ebp], edx
jmp	SHORT $LN4@sqlite3Tri
cmp	DWORD PTR _pMask$[ebp], 0
je	SHORT $LN1@sqlite3Tri
mov	eax, DWORD PTR _pMask$[ebp]
mov	ecx, DWORD PTR _mask$[ebp]
mov	DWORD PTR [eax], ecx
cmp	DWORD PTR _mask$[ebp], 0
je	SHORT $LN9@sqlite3Tri
mov	edx, DWORD PTR _pList$[ebp]
mov	DWORD PTR tv86[ebp], edx
jmp	SHORT $LN10@sqlite3Tri
mov	DWORD PTR tv86[ebp], 0
mov	eax, DWORD PTR tv86[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DropTriggerPtr PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
call	_tableOfTrigger
add	esp, 4
mov	DWORD PTR _pTable$[ebp], eax
mov	DWORD PTR _code$4[ebp], 16		
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _zDb$3[ebp], ecx
mov	edx, 1
test	edx, edx
je	SHORT $LN8@sqlite3Dro
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN8@sqlite3Dro
mov	DWORD PTR tv78[ebp], OFFSET $SG115483
jmp	SHORT $LN9@sqlite3Dro
mov	DWORD PTR tv78[ebp], OFFSET $SG115484
mov	eax, DWORD PTR tv78[ebp]
mov	DWORD PTR _zTab$1[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN5@sqlite3Dro
mov	DWORD PTR _code$4[ebp], 14		
mov	ecx, DWORD PTR _zDb$3[ebp]
push	ecx
mov	edx, DWORD PTR _pTable$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _code$4[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
jne	SHORT $LN3@sqlite3Dro
mov	edx, DWORD PTR _zDb$3[ebp]
push	edx
push	0
mov	eax, DWORD PTR _zTab$1[ebp]
push	eax
push	9
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN4@sqlite3Dro
jmp	$LN6@sqlite3Dro
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	$LN6@sqlite3Dro
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3OpenMasterTable
add	esp, 8
mov	ecx, DWORD PTR ?iLn@?4??sqlite3DropTriggerPtr@@9@9
push	ecx
push	OFFSET ?dropTrigger@?4??sqlite3DropTriggerPtr@@9@9
push	9
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOpList
add	esp, 16					
mov	DWORD PTR _base$2[ebp], eax
push	0
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _base$2[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	-2					
push	OFFSET $SG115496
mov	ecx, DWORD PTR _base$2[ebp]
add	ecx, 4
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ChangeCookie
add	esp, 8
push	0
push	0
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	123					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+72], 3
jge	SHORT $LN6@sqlite3Dro
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], 3
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DropTrigger PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	DWORD PTR _pTrigger$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN10@sqlite3Dro
jmp	$drop_trigger_cleanup$15
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN9@sqlite3Dro
jmp	$drop_trigger_cleanup$15
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pName$[ebp]
mov	edx, DWORD PTR [ecx+eax+12]
mov	DWORD PTR _zDb$[ebp], edx
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pName$[ebp]
mov	eax, DWORD PTR [edx+ecx+16]
mov	DWORD PTR _zName$[ebp], eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@sqlite3Dro
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	SHORT $LN6@sqlite3Dro
cmp	DWORD PTR _i$[ebp], 2
jge	SHORT $LN13@sqlite3Dro
mov	edx, DWORD PTR _i$[ebp]
xor	edx, 1
mov	DWORD PTR tv86[ebp], edx
jmp	SHORT $LN14@sqlite3Dro
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR tv86[ebp], eax
mov	ecx, DWORD PTR tv86[ebp]
mov	DWORD PTR _j$1[ebp], ecx
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN5@sqlite3Dro
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _j$1[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Dro
jmp	SHORT $LN7@sqlite3Dro
mov	ecx, DWORD PTR _nName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _j$1[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
add	eax, 40					
push	eax
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _pTrigger$[ebp], eax
cmp	DWORD PTR _pTrigger$[ebp], 0
je	SHORT $LN4@sqlite3Dro
jmp	SHORT $LN6@sqlite3Dro
jmp	$LN7@sqlite3Dro
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	SHORT $LN3@sqlite3Dro
cmp	DWORD PTR _noErr$[ebp], 0
jne	SHORT $LN2@sqlite3Dro
push	0
mov	ecx, DWORD PTR _pName$[ebp]
push	ecx
push	OFFSET $SG115461
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 16					
jmp	SHORT $LN1@sqlite3Dro
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeVerifyNamedSchema
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [edx+17], 1
jmp	SHORT $drop_trigger_cleanup$15
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3DropTriggerPtr
add	esp, 8
mov	edx, DWORD PTR _pName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FinishTrigger PROC
push	ebp
mov	ebp, esp
sub	esp, 76					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+488]
mov	DWORD PTR _pTrig$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+488], 0
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+64], 0
jne	SHORT $LN11@sqlite3Fin
cmp	DWORD PTR _pTrig$[ebp], 0
jne	SHORT $LN12@sqlite3Fin
jmp	$triggerfinish_cleanup$17
mov	eax, DWORD PTR _pTrig$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _zName$[ebp], ecx
mov	edx, DWORD PTR _pTrig$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	eax, DWORD PTR _pTrig$[ebp]
mov	ecx, DWORD PTR _pStepList$[ebp]
mov	DWORD PTR [eax+28], ecx
cmp	DWORD PTR _pStepList$[ebp], 0
je	SHORT $LN9@sqlite3Fin
mov	edx, DWORD PTR _pStepList$[ebp]
mov	eax, DWORD PTR _pTrig$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pStepList$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pStepList$[ebp], edx
jmp	SHORT $LN10@sqlite3Fin
mov	eax, DWORD PTR _pTrig$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nameToken$[ebp], ecx
mov	edx, DWORD PTR _nameToken$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nameToken$[ebp+4], eax
lea	eax, DWORD PTR _nameToken$[ebp]
push	eax
push	OFFSET $SG115347
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
lea	eax, DWORD PTR _sFix$[ebp]
push	eax
call	_sqlite3FixInit
add	esp, 20					
mov	ecx, DWORD PTR _pTrig$[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
lea	eax, DWORD PTR _sFix$[ebp]
push	eax
call	_sqlite3FixTriggerStep
add	esp, 8
test	eax, eax
jne	SHORT $LN7@sqlite3Fin
mov	ecx, DWORD PTR _pTrig$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
lea	eax, DWORD PTR _sFix$[ebp]
push	eax
call	_sqlite3FixExpr
add	esp, 8
test	eax, eax
je	SHORT $LN8@sqlite3Fin
jmp	$triggerfinish_cleanup$17
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+137]
test	edx, edx
jne	$LN6@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$4[ebp], eax
cmp	DWORD PTR _v$4[ebp], 0
jne	SHORT $LN5@sqlite3Fin
jmp	$triggerfinish_cleanup$17
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	eax, DWORD PTR _pAll$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pAll$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	DWORD PTR _z$5[ebp], eax
mov	edx, 1
test	edx, edx
je	SHORT $LN15@sqlite3Fin
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN15@sqlite3Fin
mov	DWORD PTR tv151[ebp], OFFSET $SG115355
jmp	SHORT $LN16@sqlite3Fin
mov	DWORD PTR tv151[ebp], OFFSET $SG115356
mov	eax, DWORD PTR _z$5[ebp]
push	eax
mov	ecx, DWORD PTR _pTrig$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR tv151[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
push	edx
push	OFFSET $SG115357
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3NestedParse
add	esp, 28					
mov	ecx, DWORD PTR _z$5[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ChangeCookie
add	esp, 8
mov	edx, DWORD PTR _zName$[ebp]
push	edx
push	OFFSET $SG115358
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _v$4[ebp]
push	edx
call	_sqlite3VdbeAddParseSchemaOp
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
je	$triggerfinish_cleanup$17
mov	edx, DWORD PTR _pTrig$[ebp]
mov	DWORD PTR _pLink$6[ebp], edx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
add	eax, 40					
mov	DWORD PTR _pHash$2[ebp], eax
mov	ecx, DWORD PTR _pTrig$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _pHash$2[ebp]
push	ecx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pTrig$[ebp], eax
cmp	DWORD PTR _pTrig$[ebp], 0
je	SHORT $LN3@sqlite3Fin
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 1
jmp	SHORT $triggerfinish_cleanup$17
mov	eax, DWORD PTR _pLink$6[ebp]
mov	ecx, DWORD PTR _pLink$6[ebp]
mov	edx, DWORD PTR [eax+20]
cmp	edx, DWORD PTR [ecx+24]
jne	SHORT $triggerfinish_cleanup$17
mov	eax, DWORD PTR _pLink$6[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$1[ebp], eax
mov	edx, DWORD PTR _n$1[ebp]
push	edx
mov	eax, DWORD PTR _pLink$6[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pLink$6[ebp]
mov	eax, DWORD PTR [edx+24]
add	eax, 8
push	eax
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _pTab$3[ebp], eax
mov	ecx, DWORD PTR _pLink$6[ebp]
mov	edx, DWORD PTR _pTab$3[ebp]
mov	eax, DWORD PTR [edx+64]
mov	DWORD PTR [ecx+32], eax
mov	ecx, DWORD PTR _pTab$3[ebp]
mov	edx, DWORD PTR _pLink$6[ebp]
mov	DWORD PTR [ecx+64], edx
mov	eax, DWORD PTR _pTrig$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTrigger
add	esp, 8
mov	edx, DWORD PTR _pStepList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DeleteTriggerStep
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BeginTrigger PROC
push	ebp
mov	ebp, esp
sub	esp, 80					
mov	DWORD PTR _pTrigger$[ebp], 0
mov	DWORD PTR _zName$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _isTemp$[ebp], 0
je	SHORT $LN29@sqlite3Beg
mov	edx, DWORD PTR _pName2$[ebp]
cmp	DWORD PTR [edx+4], 0
jbe	SHORT $LN28@sqlite3Beg
push	OFFSET $SG115277
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$trigger_cleanup$40
mov	DWORD PTR _iDb$[ebp], 1
mov	ecx, DWORD PTR _pName1$[ebp]
mov	DWORD PTR _pName$[ebp], ecx
jmp	SHORT $LN27@sqlite3Beg
lea	edx, DWORD PTR _pName$[ebp]
push	edx
mov	eax, DWORD PTR _pName2$[ebp]
push	eax
mov	ecx, DWORD PTR _pName1$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TwoPartName
add	esp, 16					
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN27@sqlite3Beg
jmp	$trigger_cleanup$40
cmp	DWORD PTR _pTableName$[ebp], 0
je	SHORT $LN24@sqlite3Beg
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN25@sqlite3Beg
jmp	$trigger_cleanup$40
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
je	SHORT $LN23@sqlite3Beg
cmp	DWORD PTR _iDb$[ebp], 1
je	SHORT $LN23@sqlite3Beg
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pTableName$[ebp]
mov	ecx, DWORD PTR [eax+edx+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTableName$[ebp]
mov	DWORD PTR [edx+ecx+12], 0
mov	eax, DWORD PTR _pTableName$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListLookup
add	esp, 8
mov	DWORD PTR _pTab$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
jne	SHORT $LN22@sqlite3Beg
mov	ecx, DWORD PTR _pName2$[ebp]
cmp	DWORD PTR [ecx+4], 0
jne	SHORT $LN22@sqlite3Beg
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN22@sqlite3Beg
mov	edx, 16					
shl	edx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	eax, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [eax+68]
cmp	eax, DWORD PTR [ecx+edx+12]
jne	SHORT $LN22@sqlite3Beg
mov	DWORD PTR _iDb$[ebp], 1
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN21@sqlite3Beg
jmp	$trigger_cleanup$40
mov	eax, DWORD PTR _pName$[ebp]
push	eax
push	OFFSET $SG115287
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
lea	eax, DWORD PTR _sFix$[ebp]
push	eax
call	_sqlite3FixInit
add	esp, 20					
mov	ecx, DWORD PTR _pTableName$[ebp]
push	ecx
lea	edx, DWORD PTR _sFix$[ebp]
push	edx
call	_sqlite3FixSrcList
add	esp, 8
test	eax, eax
je	SHORT $LN20@sqlite3Beg
jmp	$trigger_cleanup$40
mov	eax, DWORD PTR _pTableName$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListLookup
add	esp, 8
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN19@sqlite3Beg
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+136]
cmp	eax, 1
jne	SHORT $LN18@sqlite3Beg
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+138], 1
jmp	$trigger_cleanup$40
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN17@sqlite3Beg
push	OFFSET $SG115292
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$trigger_cleanup$40
mov	edx, DWORD PTR _pName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN15@sqlite3Beg
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CheckObjectName
add	esp, 8
test	eax, eax
je	SHORT $LN16@sqlite3Beg
jmp	$trigger_cleanup$40
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
add	edx, 40					
push	edx
call	_sqlite3HashFind
add	esp, 12					
test	eax, eax
je	SHORT $LN14@sqlite3Beg
cmp	DWORD PTR _noErr$[ebp], 0
jne	SHORT $LN13@sqlite3Beg
mov	eax, DWORD PTR _pName$[ebp]
push	eax
push	OFFSET $SG115298
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN12@sqlite3Beg
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
jmp	$trigger_cleanup$40
push	7
push	OFFSET $SG115302
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN11@sqlite3Beg
push	OFFSET $SG115303
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+64]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+64], edx
jmp	$trigger_cleanup$40
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN10@sqlite3Beg
cmp	DWORD PTR _tr_tm$[ebp], 49		
je	SHORT $LN10@sqlite3Beg
cmp	DWORD PTR _tr_tm$[ebp], 35		
jne	SHORT $LN32@sqlite3Beg
mov	DWORD PTR tv211[ebp], OFFSET $SG115305
jmp	SHORT $LN33@sqlite3Beg
mov	DWORD PTR tv211[ebp], OFFSET $SG115306
push	0
mov	edx, DWORD PTR _pTableName$[ebp]
push	edx
mov	eax, DWORD PTR tv211[ebp]
push	eax
push	OFFSET $SG115307
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 20					
jmp	$trigger_cleanup$40
mov	edx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN9@sqlite3Beg
cmp	DWORD PTR _tr_tm$[ebp], 49		
jne	SHORT $LN9@sqlite3Beg
push	0
mov	eax, DWORD PTR _pTableName$[ebp]
push	eax
push	OFFSET $SG115309
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 16					
jmp	$trigger_cleanup$40
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iTabDb$[ebp], eax
mov	DWORD PTR _code$3[ebp], 7
mov	edx, DWORD PTR _iTabDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _zDb$2[ebp], edx
cmp	DWORD PTR _isTemp$[ebp], 0
je	SHORT $LN34@sqlite3Beg
mov	eax, 16					
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR tv235[ebp], eax
jmp	SHORT $LN35@sqlite3Beg
mov	ecx, DWORD PTR _zDb$2[ebp]
mov	DWORD PTR tv235[ebp], ecx
mov	edx, DWORD PTR tv235[ebp]
mov	DWORD PTR _zDbTrig$1[ebp], edx
cmp	DWORD PTR _iTabDb$[ebp], 1
je	SHORT $LN7@sqlite3Beg
cmp	DWORD PTR _isTemp$[ebp], 0
je	SHORT $LN8@sqlite3Beg
mov	DWORD PTR _code$3[ebp], 5
mov	eax, DWORD PTR _zDbTrig$1[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _code$3[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN6@sqlite3Beg
jmp	$trigger_cleanup$40
mov	eax, 1
test	eax, eax
je	SHORT $LN36@sqlite3Beg
cmp	DWORD PTR _iTabDb$[ebp], 1
jne	SHORT $LN36@sqlite3Beg
mov	DWORD PTR tv251[ebp], OFFSET $SG115317
jmp	SHORT $LN37@sqlite3Beg
mov	DWORD PTR tv251[ebp], OFFSET $SG115318
mov	ecx, DWORD PTR _zDb$2[ebp]
push	ecx
push	0
mov	edx, DWORD PTR tv251[ebp]
push	edx
push	18					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN5@sqlite3Beg
jmp	$trigger_cleanup$40
cmp	DWORD PTR _tr_tm$[ebp], 49		
jne	SHORT $LN4@sqlite3Beg
mov	DWORD PTR _tr_tm$[ebp], 35		
push	36					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTrigger$[ebp], eax
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	SHORT $LN3@sqlite3Beg
jmp	$trigger_cleanup$40
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR _zName$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR _zName$[ebp], 0
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pTableName$[ebp]
mov	ecx, DWORD PTR [eax+edx+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	eax, DWORD PTR _pTrigger$[ebp]
mov	ecx, DWORD PTR [ecx+edx+12]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	al, BYTE PTR _op$[ebp]
mov	BYTE PTR [edx+8], al
cmp	DWORD PTR _tr_tm$[ebp], 35		
jne	SHORT $LN38@sqlite3Beg
mov	DWORD PTR tv280[ebp], 1
jmp	SHORT $LN39@sqlite3Beg
mov	DWORD PTR tv280[ebp], 2
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	dl, BYTE PTR tv280[ebp]
mov	BYTE PTR [ecx+9], dl
push	1
mov	eax, DWORD PTR _pWhen$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _pColumns$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3IdListDup
add	esp, 8
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [edx+16], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _pTrigger$[ebp]
mov	DWORD PTR [eax+488], ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pTableName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SrcListDelete
add	esp, 8
mov	eax, DWORD PTR _pColumns$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3IdListDelete
add	esp, 8
mov	edx, DWORD PTR _pWhen$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+488], 0
jne	SHORT $LN30@sqlite3Beg
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DeleteTrigger
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MaterializeView PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pView$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
push	0
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pWhere$[ebp], eax
push	0
push	0
push	0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListAppend
add	esp, 16					
mov	DWORD PTR _pFrom$[ebp], eax
cmp	DWORD PTR _pFrom$[ebp], 0
je	SHORT $LN1@sqlite3Mat
mov	edx, DWORD PTR _pView$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, 80					
imul	ecx, edx, 0
mov	edx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [edx+ecx+16], eax
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, 80					
imul	ecx, edx, 0
mov	edx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [edx+ecx+12], eax
push	0
push	0
push	0
push	0
push	0
push	0
mov	eax, DWORD PTR _pWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _pFrom$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SelectNew
add	esp, 40					
mov	DWORD PTR _pSel$[ebp], eax
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
push	12					
lea	ecx, DWORD PTR _dest$[ebp]
push	ecx
call	_sqlite3SelectDestInit
add	esp, 12					
lea	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _pSel$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Select
add	esp, 12					
mov	edx, DWORD PTR _pSel$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ChangeCookie PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _r1$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	51					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SafetyCheckSickOrOk PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+76]
mov	DWORD PTR _magic$[ebp], ecx
cmp	DWORD PTR _magic$[ebp], 1266094736	
je	SHORT $LN2@sqlite3Saf
cmp	DWORD PTR _magic$[ebp], -1607883113	
je	SHORT $LN2@sqlite3Saf
cmp	DWORD PTR _magic$[ebp], -264537850	
je	SHORT $LN2@sqlite3Saf
push	OFFSET $SG86513
call	_logBadConnection
add	esp, 4
xor	eax, eax
jmp	SHORT $LN3@sqlite3Saf
jmp	SHORT $LN3@sqlite3Saf
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SafetyCheckOk PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _db$[ebp], 0
jne	SHORT $LN4@sqlite3Saf
push	OFFSET $SG86503
call	_logBadConnection
add	esp, 4
xor	eax, eax
jmp	SHORT $LN5@sqlite3Saf
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+76]
mov	DWORD PTR _magic$[ebp], ecx
cmp	DWORD PTR _magic$[ebp], -1607883113	
je	SHORT $LN3@sqlite3Saf
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SafetyCheckSickOrOk
add	esp, 4
test	eax, eax
je	SHORT $LN2@sqlite3Saf
push	OFFSET $SG86506
call	_logBadConnection
add	esp, 4
xor	eax, eax
jmp	SHORT $LN5@sqlite3Saf
jmp	SHORT $LN5@sqlite3Saf
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RegisterGlobalFunctions PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _pHash$[ebp], OFFSET _sqlite3GlobalFunctions
mov	DWORD PTR _aFunc$[ebp], OFFSET ?aBuiltinFunc@?1??sqlite3RegisterGlobalFunctions@@9@9
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Reg
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 58			
jge	SHORT $LN1@sqlite3Reg
imul	ecx, DWORD PTR _i$[ebp], 36
add	ecx, DWORD PTR _aFunc$[ebp]
push	ecx
mov	edx, DWORD PTR _pHash$[ebp]
push	edx
call	_sqlite3FuncDefInsert
add	esp, 8
jmp	SHORT $LN2@sqlite3Reg
call	_sqlite3RegisterDateTimeFunctions
call	_sqlite3AlterFunctions
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RegisterDateTimeFunctions PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _pHash$[ebp], OFFSET _sqlite3GlobalFunctions
mov	DWORD PTR _aFunc$[ebp], OFFSET ?aDateTimeFuncs@?1??sqlite3RegisterDateTimeFunctions@@9@9
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Reg
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 8
jge	SHORT $LN4@sqlite3Reg
imul	ecx, DWORD PTR _i$[ebp], 36
add	ecx, DWORD PTR _aFunc$[ebp]
push	ecx
mov	edx, DWORD PTR _pHash$[ebp]
push	edx
call	_sqlite3FuncDefInsert
add	esp, 8
jmp	SHORT $LN2@sqlite3Reg
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RegisterBuiltinFunctions PROC
push	ebp
mov	ebp, esp
push	ecx
push	2
push	OFFSET $SG109389
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_overload_function
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 7
jne	SHORT $LN2@sqlite3Reg
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FindFunction PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _pBest$[ebp], 0
mov	DWORD PTR _bestScore$[ebp], 0
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zName$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
movzx	eax, BYTE PTR _sqlite3UpperToLower[eax]
add	eax, DWORD PTR _nName$[ebp]
cdq
mov	ecx, 23					
idiv	ecx
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _nName$[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _h$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
add	edx, 328				
push	edx
call	_functionSearch
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN10@sqlite3Fin
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _nArg$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_matchQuality
add	esp, 12					
mov	DWORD PTR _score$3[ebp], eax
mov	eax, DWORD PTR _score$3[ebp]
cmp	eax, DWORD PTR _bestScore$[ebp]
jle	SHORT $LN9@sqlite3Fin
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pBest$[ebp], ecx
mov	edx, DWORD PTR _score$3[ebp]
mov	DWORD PTR _bestScore$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN11@sqlite3Fin
movzx	edx, BYTE PTR _createFlag$[ebp]
test	edx, edx
jne	SHORT $LN8@sqlite3Fin
cmp	DWORD PTR _pBest$[ebp], 0
je	SHORT $LN7@sqlite3Fin
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 2097152				
je	SHORT $LN8@sqlite3Fin
mov	DWORD PTR _pHash$1[ebp], OFFSET _sqlite3GlobalFunctions
mov	DWORD PTR _bestScore$[ebp], 0
mov	edx, DWORD PTR _nName$[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _h$[ebp]
push	ecx
mov	edx, DWORD PTR _pHash$1[ebp]
push	edx
call	_functionSearch
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN8@sqlite3Fin
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _nArg$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_matchQuality
add	esp, 12					
mov	DWORD PTR _score$2[ebp], eax
mov	eax, DWORD PTR _score$2[ebp]
cmp	eax, DWORD PTR _bestScore$[ebp]
jle	SHORT $LN4@sqlite3Fin
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pBest$[ebp], ecx
mov	edx, DWORD PTR _score$2[ebp]
mov	DWORD PTR _bestScore$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN6@sqlite3Fin
movzx	edx, BYTE PTR _createFlag$[ebp]
test	edx, edx
je	$LN3@sqlite3Fin
cmp	DWORD PTR _bestScore$[ebp], 6
jge	SHORT $LN3@sqlite3Fin
mov	eax, DWORD PTR _nName$[ebp]
add	eax, 37					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pBest$[ebp], eax
cmp	DWORD PTR _pBest$[ebp], 0
je	SHORT $LN3@sqlite3Fin
mov	edx, 36					
shl	edx, 0
add	edx, DWORD PTR _pBest$[ebp]
mov	eax, DWORD PTR _pBest$[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR _pBest$[ebp]
mov	dx, WORD PTR _nArg$[ebp]
mov	WORD PTR [ecx], dx
movzx	ax, BYTE PTR _enc$[ebp]
mov	ecx, DWORD PTR _pBest$[ebp]
mov	WORD PTR [ecx+2], ax
mov	edx, DWORD PTR _nName$[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _pBest$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pBest$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	edx, DWORD PTR _nName$[ebp]
mov	BYTE PTR [ecx+edx], 0
mov	eax, DWORD PTR _pBest$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
add	ecx, 328				
push	ecx
call	_sqlite3FuncDefInsert
add	esp, 8
cmp	DWORD PTR _pBest$[ebp], 0
je	SHORT $LN2@sqlite3Fin
mov	edx, DWORD PTR _pBest$[ebp]
cmp	DWORD PTR [edx+16], 0
jne	SHORT $LN1@sqlite3Fin
mov	eax, DWORD PTR _pBest$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN1@sqlite3Fin
movzx	ecx, BYTE PTR _createFlag$[ebp]
test	ecx, ecx
je	SHORT $LN2@sqlite3Fin
mov	eax, DWORD PTR _pBest$[ebp]
jmp	SHORT $LN12@sqlite3Fin
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FuncDefInsert PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pDef$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _pDef$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	al, BYTE PTR [eax+edx]
mov	BYTE PTR _c1$[ebp], al
movzx	ecx, BYTE PTR _c1$[ebp]
movzx	eax, BYTE PTR _sqlite3UpperToLower[ecx]
add	eax, DWORD PTR _nName$[ebp]
cdq
mov	ecx, 23					
idiv	ecx
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _nName$[ebp]
push	edx
mov	eax, DWORD PTR _pDef$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _h$[ebp]
push	edx
mov	eax, DWORD PTR _pHash$[ebp]
push	eax
call	_functionSearch
add	esp, 16					
mov	DWORD PTR _pOther$[ebp], eax
cmp	DWORD PTR _pOther$[ebp], 0
je	SHORT $LN2@sqlite3Fun
mov	ecx, DWORD PTR _pDef$[ebp]
mov	edx, DWORD PTR _pOther$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _pOther$[ebp]
mov	edx, DWORD PTR _pDef$[ebp]
mov	DWORD PTR [ecx+8], edx
jmp	SHORT $LN3@sqlite3Fun
mov	eax, DWORD PTR _pDef$[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _pDef$[ebp]
mov	edx, DWORD PTR _h$[ebp]
mov	eax, DWORD PTR _pHash$[ebp]
mov	edx, DWORD PTR [eax+edx*4]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _h$[ebp]
mov	ecx, DWORD PTR _pHash$[ebp]
mov	edx, DWORD PTR _pDef$[ebp]
mov	DWORD PTR [ecx+eax*4], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SelectDup PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN3@sqlite3Sel
xor	eax, eax
jmp	$LN4@sqlite3Sel
push	72					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN2@sqlite3Sel
xor	eax, eax
jmp	$LN4@sqlite3Sel
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprListDup
add	esp, 12					
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+32], eax
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+36], eax
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+40], eax
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+48], eax
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR [eax+4]
mov	BYTE PTR [edx+4], cl
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDup
add	esp, 12					
mov	DWORD PTR _pPrior$[ebp], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _pPrior$[ebp]
mov	DWORD PTR [eax+52], ecx
cmp	DWORD PTR _pPrior$[ebp], 0
je	SHORT $LN1@sqlite3Sel
mov	edx, DWORD PTR _pPrior$[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+56], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+56], 0
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+60], eax
mov	edx, DWORD PTR _flags$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+64], eax
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+6]
and	edx, -9					
mov	eax, DWORD PTR _pNew$[ebp]
mov	WORD PTR [eax+6], dx
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+edx+16], -1
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+ecx+16], -1
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR [ecx+28]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_withDup
add	esp, 8
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+68], eax
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IdListDup PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN6@sqlite3IdL
xor	eax, eax
jmp	$LN7@sqlite3IdL
push	8
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN5@sqlite3IdL
xor	eax, eax
jmp	$LN7@sqlite3IdL
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
shl	edx, 3
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pNew$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $LN4@sqlite3IdL
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
xor	eax, eax
jmp	SHORT $LN7@sqlite3IdL
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3IdL
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+4]
jge	SHORT $LN1@sqlite3IdL
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _i$[ebp]
lea	edx, DWORD PTR [eax+ecx*8]
mov	DWORD PTR _pNewItem$2[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _i$[ebp]
lea	eax, DWORD PTR [ecx+edx*8]
mov	DWORD PTR _pOldItem$1[ebp], eax
mov	ecx, DWORD PTR _pOldItem$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pNewItem$2[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pNewItem$2[ebp]
mov	eax, DWORD PTR _pOldItem$1[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR [edx+4], ecx
jmp	SHORT $LN2@sqlite3IdL
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListDup PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN6@sqlite3Src
xor	eax, eax
jmp	$LN7@sqlite3Src
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
jle	SHORT $LN9@sqlite3Src
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
imul	eax, edx, 80
mov	DWORD PTR tv70[ebp], eax
jmp	SHORT $LN10@sqlite3Src
mov	DWORD PTR tv70[ebp], 0
mov	ecx, DWORD PTR tv70[ebp]
add	ecx, 88					
mov	DWORD PTR _nByte$[ebp], ecx
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN5@sqlite3Src
xor	eax, eax
jmp	$LN7@sqlite3Src
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Src
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	$LN2@sqlite3Src
imul	ecx, DWORD PTR _i$[ebp], 80
mov	edx, DWORD PTR _pNew$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _pNewItem$3[ebp], eax
imul	ecx, DWORD PTR _i$[ebp], 80
mov	edx, DWORD PTR _p$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _pOldItem$2[ebp], eax
mov	ecx, DWORD PTR _pNewItem$3[ebp]
mov	edx, DWORD PTR _pOldItem$2[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _pOldItem$2[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pOldItem$2[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [edx+8], eax
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	cl, BYTE PTR [eax+36]
mov	BYTE PTR [edx+36], cl
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR [edx+48], ecx
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR [edx+28], ecx
mov	edx, DWORD PTR _pOldItem$2[ebp]
mov	eax, DWORD PTR [edx+40]
shr	eax, 1
and	eax, 1
and	eax, 1
shl	eax, 1
mov	ecx, DWORD PTR _pNewItem$3[ebp]
mov	edx, DWORD PTR [ecx+40]
and	edx, -3					
or	edx, eax
mov	eax, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [eax+40], edx
mov	ecx, DWORD PTR _pOldItem$2[ebp]
mov	edx, DWORD PTR [ecx+40]
shr	edx, 2
and	edx, 1
and	edx, 1
shl	edx, 2
mov	eax, DWORD PTR _pNewItem$3[ebp]
mov	ecx, DWORD PTR [eax+40]
and	ecx, -5					
or	ecx, edx
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [edx+40], ecx
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 3
and	ecx, 1
and	ecx, 1
shl	ecx, 3
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR [edx+40]
and	eax, -9					
or	eax, ecx
mov	ecx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [ecx+40], eax
mov	edx, DWORD PTR _pOldItem$2[ebp]
mov	eax, DWORD PTR [edx+72]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [edx+72], eax
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+40]
and	ecx, 1
and	ecx, 1
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR [edx+40]
and	eax, -2					
or	eax, ecx
mov	ecx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [ecx+40], eax
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+76]
mov	DWORD PTR [edx+76], ecx
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR _pOldItem$2[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR [edx+16], ecx
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pTab$1[ebp], eax
cmp	DWORD PTR _pTab$1[ebp], 0
je	SHORT $LN1@sqlite3Src
mov	ecx, DWORD PTR _pTab$1[ebp]
mov	dx, WORD PTR [ecx+40]
add	dx, 1
mov	eax, DWORD PTR _pTab$1[ebp]
mov	WORD PTR [eax+40], dx
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
mov	edx, DWORD PTR _pOldItem$2[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDup
add	esp, 12					
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [edx+20], eax
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _pOldItem$2[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [ecx+52], eax
mov	edx, DWORD PTR _pOldItem$2[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3IdListDup
add	esp, 8
mov	edx, DWORD PTR _pNewItem$3[ebp]
mov	DWORD PTR [edx+56], eax
mov	eax, DWORD PTR _pNewItem$3[ebp]
mov	ecx, DWORD PTR _pOldItem$2[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	DWORD PTR [eax+64], edx
mov	ecx, DWORD PTR [ecx+68]
mov	DWORD PTR [eax+68], ecx
jmp	$LN3@sqlite3Src
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprListDup PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN10@sqlite3Exp
xor	eax, eax
jmp	$LN11@sqlite3Exp
push	8
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN9@sqlite3Exp
xor	eax, eax
jmp	$LN11@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 1
jne	SHORT $LN8@sqlite3Exp
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN7@sqlite3Exp
mov	eax, DWORD PTR _i$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN8@sqlite3Exp
jmp	SHORT $LN6@sqlite3Exp
imul	eax, DWORD PTR _i$[ebp], 24
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pItem$[ebp], eax
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [edx+4], eax
cmp	DWORD PTR _pItem$[ebp], 0
jne	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
xor	eax, eax
jmp	$LN11@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pOldItem$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$[ebp]
add	eax, 24					
mov	DWORD PTR _pItem$[ebp], eax
mov	ecx, DWORD PTR _pOldItem$[ebp]
add	ecx, 24					
mov	DWORD PTR _pOldItem$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx]
jge	$LN1@sqlite3Exp
mov	ecx, DWORD PTR _pOldItem$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pOldExpr$1[ebp], edx
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _pOldExpr$1[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pOldItem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _pOldItem$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR _pOldItem$[ebp]
mov	cl, BYTE PTR [eax+12]
mov	BYTE PTR [edx+12], cl
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+16]
and	eax, -2					
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _pOldItem$[ebp]
mov	eax, DWORD PTR [edx+16]
shr	eax, 1
and	eax, 1
and	eax, 1
shl	eax, 1
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx+16]
and	edx, -3					
or	edx, eax
mov	eax, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [eax+16], edx
mov	ecx, DWORD PTR _pOldItem$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [eax+20], edx
jmp	$LN2@sqlite3Exp
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprDup PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_exprDup
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3RowidConstraint PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+36]
test	ecx, ecx
jl	SHORT $LN2@sqlite3Row
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
imul	ecx, eax, 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG107779
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zMsg$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1555		
jmp	SHORT $LN1@sqlite3Row
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG107781
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zMsg$[ebp], eax
mov	DWORD PTR _rc$[ebp], 2579		
push	2
push	-1
mov	ecx, DWORD PTR _zMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _onError$[ebp]
push	edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3HaltConstraint
add	esp, 24					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3UniqueConstraint PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pTab$[ebp], ecx
push	200					
push	0
push	0
lea	edx, DWORD PTR _errMsg$[ebp]
push	edx
call	_sqlite3StrAccumInit
add	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _errMsg$[ebp], ecx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN4@sqlite3Uni
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _j$[ebp], ecx
jge	SHORT $LN2@sqlite3Uni
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _j$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
imul	eax, edx, 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zCol$1[ebp], eax
cmp	DWORD PTR _j$[ebp], 0
je	SHORT $LN1@sqlite3Uni
push	2
push	OFFSET $SG107767
lea	ecx, DWORD PTR _errMsg$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
lea	ecx, DWORD PTR _errMsg$[ebp]
push	ecx
call	_sqlite3StrAccumAppendAll
add	esp, 8
push	1
push	OFFSET $SG107768
lea	edx, DWORD PTR _errMsg$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	eax, DWORD PTR _zCol$1[ebp]
push	eax
lea	ecx, DWORD PTR _errMsg$[ebp]
push	ecx
call	_sqlite3StrAccumAppendAll
add	esp, 8
jmp	$LN3@sqlite3Uni
lea	edx, DWORD PTR _errMsg$[ebp]
push	edx
call	_sqlite3StrAccumFinish
add	esp, 4
mov	DWORD PTR _zErr$[ebp], eax
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+56]
and	ecx, 3
cmp	ecx, 2
jne	SHORT $LN7@sqlite3Uni
mov	DWORD PTR tv135[ebp], 1555		
jmp	SHORT $LN8@sqlite3Uni
mov	DWORD PTR tv135[ebp], 2067		
push	2
push	-1
mov	edx, DWORD PTR _zErr$[ebp]
push	edx
mov	eax, DWORD PTR _onError$[ebp]
push	eax
mov	ecx, DWORD PTR tv135[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3HaltConstraint
add	esp, 24					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3HaltConstraint PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _onError$[ebp], 2
jne	SHORT $LN2@sqlite3Hal
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3MayAbort
add	esp, 4
movsx	edx, BYTE PTR _p4type$[ebp]
push	edx
mov	eax, DWORD PTR _p4$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _onError$[ebp]
push	ecx
mov	edx, DWORD PTR _errCode$[ebp]
push	edx
push	24					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
movzx	ecx, BYTE PTR _p5Errmsg$[ebp]
test	ecx, ecx
je	SHORT $LN3@sqlite3Hal
movzx	edx, BYTE PTR _p5Errmsg$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MayAbort PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN3@sqlite3May
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN4@sqlite3May
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pToplevel$[ebp], ecx
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	BYTE PTR [edx+21], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MultiWrite PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN3@sqlite3Mul
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN4@sqlite3Mul
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pToplevel$[ebp], ecx
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	BYTE PTR [edx+20], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BeginWriteOperation PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN3@sqlite3Beg
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN4@sqlite3Beg
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pToplevel$[ebp], ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
mov	edx, 1
mov	ecx, DWORD PTR _iDb$[ebp]
shl	edx, cl
mov	eax, DWORD PTR _pToplevel$[ebp]
or	edx, DWORD PTR [eax+328]
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	DWORD PTR [ecx+328], edx
mov	edx, DWORD PTR _pToplevel$[ebp]
movzx	eax, BYTE PTR [edx+20]
or	eax, DWORD PTR _setStatement$[ebp]
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	BYTE PTR [ecx+20], al
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OpenTableAndIndices PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN14@sqlite3Ope
mov	edx, DWORD PTR _piDataCur$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _piIdxCur$[ebp]
mov	DWORD PTR [eax], 1
xor	eax, eax
jmp	$LN15@sqlite3Ope
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _iBase$[ebp], 0
jge	SHORT $LN13@sqlite3Ope
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iBase$[ebp], ecx
mov	edx, DWORD PTR _iBase$[ebp]
mov	DWORD PTR _iDataCur$[ebp], edx
mov	eax, DWORD PTR _iBase$[ebp]
add	eax, 1
mov	DWORD PTR _iBase$[ebp], eax
cmp	DWORD PTR _piDataCur$[ebp], 0
je	SHORT $LN12@sqlite3Ope
mov	ecx, DWORD PTR _piDataCur$[ebp]
mov	edx, DWORD PTR _iDataCur$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN11@sqlite3Ope
cmp	DWORD PTR _aToOpen$[ebp], 0
je	SHORT $LN10@sqlite3Ope
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _aToOpen$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
test	edx, edx
je	SHORT $LN11@sqlite3Ope
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3OpenTable
add	esp, 20					
jmp	SHORT $LN9@sqlite3Ope
cmp	DWORD PTR _op$[ebp], 53			
jne	SHORT $LN17@sqlite3Ope
mov	DWORD PTR tv128[ebp], 1
jmp	SHORT $LN18@sqlite3Ope
mov	DWORD PTR tv128[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
movzx	ecx, BYTE PTR tv128[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TableLock
add	esp, 20					
cmp	DWORD PTR _piIdxCur$[ebp], 0
je	SHORT $LN8@sqlite3Ope
mov	eax, DWORD PTR _piIdxCur$[ebp]
mov	ecx, DWORD PTR _iBase$[ebp]
mov	DWORD PTR [eax], ecx
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$[ebp], eax
jmp	SHORT $LN7@sqlite3Ope
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN5@sqlite3Ope
mov	ecx, DWORD PTR _iBase$[ebp]
mov	DWORD PTR _iIdxCur$1[ebp], ecx
mov	edx, DWORD PTR _iBase$[ebp]
add	edx, 1
mov	DWORD PTR _iBase$[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+56]
and	ecx, 3
cmp	ecx, 2
jne	SHORT $LN4@sqlite3Ope
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
je	SHORT $LN4@sqlite3Ope
cmp	DWORD PTR _piDataCur$[ebp], 0
je	SHORT $LN4@sqlite3Ope
mov	ecx, DWORD PTR _piDataCur$[ebp]
mov	edx, DWORD PTR _iIdxCur$1[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _aToOpen$[ebp], 0
je	SHORT $LN2@sqlite3Ope
mov	eax, DWORD PTR _aToOpen$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax+1]
test	ecx, ecx
je	SHORT $LN3@sqlite3Ope
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _iIdxCur$1[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
jmp	$LN6@sqlite3Ope
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _iBase$[ebp]
cmp	edx, DWORD PTR [ecx+68]
jle	SHORT $LN1@sqlite3Ope
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _iBase$[ebp]
mov	DWORD PTR [eax+68], ecx
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CompleteInsertion PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	BYTE PTR _bAffinityDone$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN15@sqlite3Com
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN13@sqlite3Com
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aRegIdx$[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
jne	SHORT $LN12@sqlite3Com
jmp	SHORT $LN14@sqlite3Com
mov	BYTE PTR _bAffinityDone$[ebp], 1
mov	edx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [edx+36], 0
je	SHORT $LN11@sqlite3Com
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 2
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aRegIdx$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
push	76					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aRegIdx$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
mov	edx, DWORD PTR _iIdxCur$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
push	107					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	BYTE PTR _pik_flags$[ebp], 0
cmp	DWORD PTR _useSeekResult$[ebp], 0
je	SHORT $LN10@sqlite3Com
mov	BYTE PTR _pik_flags$[ebp], 16		
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
jne	SHORT $LN9@sqlite3Com
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
je	SHORT $LN9@sqlite3Com
movzx	edx, BYTE PTR _pik_flags$[ebp]
or	edx, 1
mov	BYTE PTR _pik_flags$[ebp], dl
movzx	eax, BYTE PTR _pik_flags$[ebp]
test	eax, eax
je	SHORT $LN8@sqlite3Com
movzx	ecx, BYTE PTR _pik_flags$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN14@sqlite3Com
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
je	SHORT $LN7@sqlite3Com
jmp	$LN16@sqlite3Com
mov	edx, DWORD PTR _regNewData$[ebp]
add	edx, 1
mov	DWORD PTR _regData$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRec$[ebp], eax
mov	ecx, DWORD PTR _regRec$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
push	eax
mov	ecx, DWORD PTR _regData$[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
movzx	eax, BYTE PTR _bAffinityDone$[ebp]
test	eax, eax
jne	SHORT $LN6@sqlite3Com
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3TableAffinity
add	esp, 12					
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
push	ecx
mov	edx, DWORD PTR _regData$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
je	SHORT $LN5@sqlite3Com
mov	BYTE PTR _pik_flags$[ebp], 0
jmp	SHORT $LN4@sqlite3Com
mov	BYTE PTR _pik_flags$[ebp], 1
cmp	DWORD PTR _isUpdate$[ebp], 0
je	SHORT $LN18@sqlite3Com
mov	DWORD PTR tv166[ebp], 4
jmp	SHORT $LN19@sqlite3Com
mov	DWORD PTR tv166[ebp], 2
movzx	eax, BYTE PTR _pik_flags$[ebp]
or	eax, DWORD PTR tv166[ebp]
mov	BYTE PTR _pik_flags$[ebp], al
cmp	DWORD PTR _appendBias$[ebp], 0
je	SHORT $LN3@sqlite3Com
movzx	ecx, BYTE PTR _pik_flags$[ebp]
or	ecx, 8
mov	BYTE PTR _pik_flags$[ebp], cl
cmp	DWORD PTR _useSeekResult$[ebp], 0
je	SHORT $LN2@sqlite3Com
movzx	edx, BYTE PTR _pik_flags$[ebp]
or	edx, 16					
mov	BYTE PTR _pik_flags$[ebp], dl
mov	eax, DWORD PTR _regNewData$[ebp]
push	eax
mov	ecx, DWORD PTR _regRec$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
push	70					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
jne	SHORT $LN1@sqlite3Com
push	0
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
movzx	eax, BYTE PTR _pik_flags$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GenerateConstraintChecks PROC
push	ebp
mov	ebp, esp
sub	esp, 172				
mov	DWORD PTR _pPk$[ebp], 0
mov	DWORD PTR _seenReplace$[ebp], 0
mov	DWORD PTR _ipkTop$[ebp], 0
mov	DWORD PTR _ipkBottom$[ebp], 0
mov	BYTE PTR _bAffinityDone$[ebp], 0
mov	DWORD PTR _regRowid$[ebp], -1
cmp	DWORD PTR _regOldData$[ebp], 0
je	SHORT $LN91@sqlite3Gen
mov	DWORD PTR tv65[ebp], 1
jmp	SHORT $LN92@sqlite3Gen
mov	DWORD PTR tv65[ebp], 0
mov	al, BYTE PTR tv65[ebp]
mov	BYTE PTR _isUpdate$[ebp], al
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
mov	DWORD PTR _nCol$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN88@sqlite3Gen
mov	DWORD PTR _pPk$[ebp], 0
mov	DWORD PTR _nPkField$[ebp], 1
jmp	SHORT $LN87@sqlite3Gen
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$[ebp], eax
mov	eax, DWORD PTR _pPk$[ebp]
movzx	ecx, WORD PTR [eax+50]
mov	DWORD PTR _nPkField$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN86@sqlite3Gen
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nCol$[ebp]
jge	$LN84@sqlite3Gen
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _i$[ebp], edx
jne	SHORT $LN83@sqlite3Gen
jmp	SHORT $LN85@sqlite3Gen
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+eax+20]
mov	DWORD PTR _onError$[ebp], eax
cmp	DWORD PTR _onError$[ebp], 0
jne	SHORT $LN82@sqlite3Gen
jmp	SHORT $LN85@sqlite3Gen
movzx	ecx, BYTE PTR _overrideError$[ebp]
cmp	ecx, 10					
je	SHORT $LN81@sqlite3Gen
movzx	edx, BYTE PTR _overrideError$[ebp]
mov	DWORD PTR _onError$[ebp], edx
jmp	SHORT $LN80@sqlite3Gen
cmp	DWORD PTR _onError$[ebp], 10		
jne	SHORT $LN80@sqlite3Gen
mov	DWORD PTR _onError$[ebp], 2
cmp	DWORD PTR _onError$[ebp], 5
jne	SHORT $LN78@sqlite3Gen
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
cmp	DWORD PTR [edx+eax+4], 0
jne	SHORT $LN78@sqlite3Gen
mov	DWORD PTR _onError$[ebp], 2
mov	eax, DWORD PTR _onError$[ebp]
mov	DWORD PTR tv133[ebp], eax
mov	ecx, DWORD PTR tv133[ebp]
sub	ecx, 1
mov	DWORD PTR tv133[ebp], ecx
cmp	DWORD PTR tv133[ebp], 3
ja	$LN72@sqlite3Gen
mov	edx, DWORD PTR tv133[ebp]
jmp	DWORD PTR $LN103@sqlite3Gen[edx*4]
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3MayAbort
add	esp, 4
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG110559
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zMsg$2[ebp], eax
push	-1
mov	edx, DWORD PTR _zMsg$2[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _regNewData$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
mov	eax, DWORD PTR _onError$[ebp]
push	eax
push	1299					
push	23					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	SHORT $LN76@sqlite3Gen
mov	eax, DWORD PTR _ignoreDest$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _regNewData$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
push	eax
push	76					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN76@sqlite3Gen
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _regNewData$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
push	ecx
push	77					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _j1$[ebp], eax
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _regNewData$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
mov	edx, DWORD PTR _j1$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN85@sqlite3Gen
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+24], 0
je	$LN71@sqlite3Gen
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 8192				
jne	$LN71@sqlite3Gen
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _pCheck$13[ebp], edx
mov	eax, DWORD PTR _regNewData$[ebp]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+92], eax
movzx	edx, BYTE PTR _overrideError$[ebp]
cmp	edx, 10					
je	SHORT $LN93@sqlite3Gen
movzx	eax, BYTE PTR _overrideError$[ebp]
mov	DWORD PTR tv192[ebp], eax
jmp	SHORT $LN94@sqlite3Gen
mov	DWORD PTR tv192[ebp], 2
mov	ecx, DWORD PTR tv192[ebp]
mov	DWORD PTR _onError$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN70@sqlite3Gen
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pCheck$13[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	$LN71@sqlite3Gen
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _allOk$5[ebp], eax
push	8
mov	eax, DWORD PTR _allOk$5[ebp]
push	eax
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pCheck$13[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprIfTrue
add	esp, 16					
cmp	DWORD PTR _onError$[ebp], 4
jne	SHORT $LN67@sqlite3Gen
mov	eax, DWORD PTR _ignoreDest$[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN66@sqlite3Gen
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pCheck$13[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _zName$10[ebp], edx
cmp	DWORD PTR _zName$10[ebp], 0
jne	SHORT $LN65@sqlite3Gen
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _zName$10[ebp], ecx
cmp	DWORD PTR _onError$[ebp], 5
jne	SHORT $LN64@sqlite3Gen
mov	DWORD PTR _onError$[ebp], 2
push	3
push	0
mov	edx, DWORD PTR _zName$10[ebp]
push	edx
mov	eax, DWORD PTR _onError$[ebp]
push	eax
push	275					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3HaltConstraint
add	esp, 24					
mov	edx, DWORD PTR _allOk$5[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	$LN69@sqlite3Gen
movzx	ecx, BYTE PTR _pkChng$[ebp]
test	ecx, ecx
je	$LN63@sqlite3Gen
cmp	DWORD PTR _pPk$[ebp], 0
jne	$LN63@sqlite3Gen
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrRowidOk$9[ebp], eax
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+45]
mov	DWORD PTR _onError$[ebp], ecx
movzx	edx, BYTE PTR _overrideError$[ebp]
cmp	edx, 10					
je	SHORT $LN62@sqlite3Gen
movzx	eax, BYTE PTR _overrideError$[ebp]
mov	DWORD PTR _onError$[ebp], eax
jmp	SHORT $LN61@sqlite3Gen
cmp	DWORD PTR _onError$[ebp], 10		
jne	SHORT $LN61@sqlite3Gen
mov	DWORD PTR _onError$[ebp], 2
movzx	ecx, BYTE PTR _isUpdate$[ebp]
test	ecx, ecx
je	SHORT $LN59@sqlite3Gen
mov	edx, DWORD PTR _regOldData$[ebp]
push	edx
mov	eax, DWORD PTR _addrRowidOk$9[ebp]
push	eax
mov	ecx, DWORD PTR _regNewData$[ebp]
push	ecx
push	79					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	136					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
cmp	DWORD PTR _onError$[ebp], 5
jne	SHORT $LN58@sqlite3Gen
movzx	ecx, BYTE PTR _overrideError$[ebp]
cmp	ecx, 5
je	SHORT $LN58@sqlite3Gen
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$[ebp], eax
jmp	SHORT $LN57@sqlite3Gen
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$[ebp], edx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN58@sqlite3Gen
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, BYTE PTR [eax+54]
cmp	ecx, 4
je	SHORT $LN53@sqlite3Gen
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, BYTE PTR [edx+54]
cmp	eax, 3
jne	SHORT $LN54@sqlite3Gen
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	DWORD PTR _ipkTop$[ebp], eax
jmp	SHORT $LN58@sqlite3Gen
jmp	SHORT $LN56@sqlite3Gen
mov	edx, DWORD PTR _regNewData$[ebp]
push	edx
mov	eax, DWORD PTR _addrRowidOk$9[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	67					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _onError$[ebp]
mov	DWORD PTR tv261[ebp], eax
mov	ecx, DWORD PTR tv261[ebp]
sub	ecx, 1
mov	DWORD PTR tv261[ebp], ecx
cmp	DWORD PTR tv261[ebp], 4
ja	SHORT $LN50@sqlite3Gen
mov	edx, DWORD PTR tv261[ebp]
jmp	DWORD PTR $LN104@sqlite3Gen[edx*4]
mov	DWORD PTR _onError$[ebp], 2
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _onError$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3RowidConstraint
add	esp, 12					
jmp	$LN51@sqlite3Gen
mov	DWORD PTR _pTrigger$12[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 262144				
je	SHORT $LN47@sqlite3Gen
push	0
push	0
push	109					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggersExist
add	esp, 20					
mov	DWORD PTR _pTrigger$12[ebp], eax
cmp	DWORD PTR _pTrigger$12[ebp], 0
jne	SHORT $LN45@sqlite3Gen
push	0
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3FkRequired
add	esp, 16					
test	eax, eax
je	SHORT $LN46@sqlite3Gen
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3MultiWrite
add	esp, 4
push	1
push	5
push	0
push	1
mov	ecx, DWORD PTR _regNewData$[ebp]
push	ecx
mov	edx, DWORD PTR _iIdxCur$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pTrigger$12[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GenerateRowDelete
add	esp, 40					
jmp	SHORT $LN44@sqlite3Gen
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN44@sqlite3Gen
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3MultiWrite
add	esp, 4
push	0
mov	eax, DWORD PTR _iIdxCur$[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GenerateRowIndexDelete
add	esp, 20					
mov	DWORD PTR _seenReplace$[ebp], 1
jmp	SHORT $LN51@sqlite3Gen
mov	ecx, DWORD PTR _ignoreDest$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addrRowidOk$9[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
cmp	DWORD PTR _ipkTop$[ebp], 0
je	SHORT $LN63@sqlite3Gen
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	DWORD PTR _ipkBottom$[ebp], eax
mov	eax, DWORD PTR _ipkTop$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	DWORD PTR _ix$[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$[ebp], eax
jmp	SHORT $LN40@sqlite3Gen
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$[ebp], edx
mov	eax, DWORD PTR _ix$[ebp]
add	eax, 1
mov	DWORD PTR _ix$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN38@sqlite3Gen
mov	ecx, DWORD PTR _ix$[ebp]
mov	edx, DWORD PTR _aRegIdx$[ebp]
cmp	DWORD PTR [edx+ecx*4], 0
jne	SHORT $LN37@sqlite3Gen
jmp	SHORT $LN39@sqlite3Gen
movzx	eax, BYTE PTR _bAffinityDone$[ebp]
test	eax, eax
jne	SHORT $LN36@sqlite3Gen
mov	ecx, DWORD PTR _regNewData$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3TableAffinity
add	esp, 12					
mov	BYTE PTR _bAffinityDone$[ebp], 1
mov	ecx, DWORD PTR _iIdxCur$[ebp]
add	ecx, DWORD PTR _ix$[ebp]
mov	DWORD PTR _iThisCur$15[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrUniqueOk$17[ebp], eax
mov	eax, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [eax+36], 0
je	SHORT $LN35@sqlite3Gen
mov	ecx, DWORD PTR _ix$[ebp]
mov	edx, DWORD PTR _aRegIdx$[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
push	eax
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _regNewData$[ebp]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+92], edx
push	8
mov	ecx, DWORD PTR _addrUniqueOk$17[ebp]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+36]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+92], 0
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _regIdx$18[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN34@sqlite3Gen
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+52]
cmp	DWORD PTR _i$[ebp], edx
jge	$LN32@sqlite3Gen
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	DWORD PTR _iField$14[ebp], eax
cmp	DWORD PTR _iField$14[ebp], 0
jl	SHORT $LN30@sqlite3Gen
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _iField$14[ebp], edx
jne	SHORT $LN31@sqlite3Gen
mov	eax, DWORD PTR _regIdx$18[ebp]
add	eax, DWORD PTR _i$[ebp]
cmp	DWORD PTR _regRowid$[ebp], eax
jne	SHORT $LN29@sqlite3Gen
jmp	SHORT $LN33@sqlite3Gen
mov	ecx, DWORD PTR _regNewData$[ebp]
mov	DWORD PTR _x$6[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [edx+36], 0
je	SHORT $LN95@sqlite3Gen
mov	DWORD PTR tv405[ebp], -1
jmp	SHORT $LN96@sqlite3Gen
mov	eax, DWORD PTR _regIdx$18[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR tv405[ebp], eax
mov	ecx, DWORD PTR tv405[ebp]
mov	DWORD PTR _regRowid$[ebp], ecx
jmp	SHORT $LN28@sqlite3Gen
mov	edx, DWORD PTR _regNewData$[ebp]
mov	eax, DWORD PTR _iField$14[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	DWORD PTR _x$6[ebp], ecx
mov	edx, DWORD PTR _regIdx$18[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _x$6[ebp]
push	eax
push	34					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN33@sqlite3Gen
mov	edx, DWORD PTR _ix$[ebp]
mov	eax, DWORD PTR _aRegIdx$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, WORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR _regIdx$18[ebp]
push	ecx
push	48					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _regIdx$18[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
movzx	ecx, BYTE PTR _isUpdate$[ebp]
test	ecx, ecx
je	SHORT $LN27@sqlite3Gen
mov	edx, DWORD PTR _pPk$[ebp]
cmp	edx, DWORD PTR _pIdx$[ebp]
jne	SHORT $LN27@sqlite3Gen
movzx	eax, BYTE PTR _pkChng$[ebp]
test	eax, eax
jne	SHORT $LN27@sqlite3Gen
mov	ecx, DWORD PTR _addrUniqueOk$17[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	$LN39@sqlite3Gen
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, BYTE PTR [eax+54]
mov	DWORD PTR _onError$[ebp], ecx
cmp	DWORD PTR _onError$[ebp], 0
jne	SHORT $LN26@sqlite3Gen
mov	edx, DWORD PTR _pIdx$[ebp]
movzx	eax, WORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR _regIdx$18[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempRange
add	esp, 12					
mov	eax, DWORD PTR _addrUniqueOk$17[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	$LN39@sqlite3Gen
movzx	edx, BYTE PTR _overrideError$[ebp]
cmp	edx, 10					
je	SHORT $LN25@sqlite3Gen
movzx	eax, BYTE PTR _overrideError$[ebp]
mov	DWORD PTR _onError$[ebp], eax
jmp	SHORT $LN24@sqlite3Gen
cmp	DWORD PTR _onError$[ebp], 10		
jne	SHORT $LN24@sqlite3Gen
mov	DWORD PTR _onError$[ebp], 2
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
push	edx
mov	eax, DWORD PTR _regIdx$18[ebp]
push	eax
mov	ecx, DWORD PTR _addrUniqueOk$17[ebp]
push	ecx
mov	edx, DWORD PTR _iThisCur$15[ebp]
push	edx
push	64					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	ecx, DWORD PTR _pIdx$[ebp]
cmp	ecx, DWORD PTR _pPk$[ebp]
jne	SHORT $LN97@sqlite3Gen
mov	edx, DWORD PTR _regIdx$18[ebp]
mov	DWORD PTR tv460[ebp], edx
jmp	SHORT $LN98@sqlite3Gen
mov	eax, DWORD PTR _nPkField$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR tv460[ebp], eax
mov	edx, DWORD PTR tv460[ebp]
mov	DWORD PTR _regR$16[ebp], edx
movzx	eax, BYTE PTR _isUpdate$[ebp]
test	eax, eax
jne	SHORT $LN21@sqlite3Gen
cmp	DWORD PTR _onError$[ebp], 5
jne	$LN22@sqlite3Gen
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN20@sqlite3Gen
mov	eax, DWORD PTR _regR$16[ebp]
push	eax
mov	ecx, DWORD PTR _iThisCur$15[ebp]
push	ecx
push	109					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
movzx	eax, BYTE PTR _isUpdate$[ebp]
test	eax, eax
je	SHORT $LN19@sqlite3Gen
mov	ecx, DWORD PTR _regOldData$[ebp]
push	ecx
mov	edx, DWORD PTR _addrUniqueOk$17[ebp]
push	edx
mov	eax, DWORD PTR _regR$16[ebp]
push	eax
push	79					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	136					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN22@sqlite3Gen
mov	eax, DWORD PTR _pIdx$[ebp]
cmp	eax, DWORD PTR _pPk$[ebp]
je	SHORT $LN17@sqlite3Gen
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN16@sqlite3Gen
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pPk$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN17@sqlite3Gen
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
movzx	ecx, WORD PTR [edx+eax*2]
push	ecx
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
call	_sqlite3ColumnOfIndex
add	esp, 8
cwde
mov	DWORD PTR _x$11[ebp], eax
mov	ecx, DWORD PTR _regR$16[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _x$11[ebp]
push	edx
mov	eax, DWORD PTR _iThisCur$15[ebp]
push	eax
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN15@sqlite3Gen
movzx	edx, BYTE PTR _isUpdate$[ebp]
test	edx, edx
je	$LN22@sqlite3Gen
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	ecx, DWORD PTR _pPk$[ebp]
movzx	edx, WORD PTR [ecx+50]
add	eax, edx
mov	DWORD PTR _addrJump$4[ebp], eax
mov	DWORD PTR _op$8[ebp], 78		
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+56]
and	ecx, 3
cmp	ecx, 2
jne	SHORT $LN99@sqlite3Gen
mov	edx, DWORD PTR _regIdx$18[ebp]
mov	DWORD PTR tv509[ebp], edx
jmp	SHORT $LN100@sqlite3Gen
mov	eax, DWORD PTR _regR$16[ebp]
mov	DWORD PTR tv509[ebp], eax
mov	ecx, DWORD PTR tv509[ebp]
mov	DWORD PTR _regCmp$1[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN12@sqlite3Gen
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pPk$[ebp]
movzx	ecx, WORD PTR [eax+50]
cmp	DWORD PTR _i$[ebp], ecx
jge	$LN22@sqlite3Gen
mov	edx, DWORD PTR _pPk$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3LocateCollSeq
add	esp, 8
mov	DWORD PTR _p4$3[ebp], eax
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
mov	DWORD PTR _x$11[ebp], ecx
mov	edx, DWORD PTR _pPk$[ebp]
movzx	eax, WORD PTR [edx+50]
sub	eax, 1
cmp	DWORD PTR _i$[ebp], eax
jne	SHORT $LN9@sqlite3Gen
mov	ecx, DWORD PTR _addrUniqueOk$17[ebp]
mov	DWORD PTR _addrJump$4[ebp], ecx
mov	DWORD PTR _op$8[ebp], 79		
push	-4					
mov	edx, DWORD PTR _p4$3[ebp]
push	edx
mov	eax, DWORD PTR _regCmp$1[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _addrJump$4[ebp]
push	ecx
mov	edx, DWORD PTR _x$11[ebp]
mov	eax, DWORD PTR _regOldData$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
push	ecx
mov	edx, DWORD PTR _op$8[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	136					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN11@sqlite3Gen
mov	edx, DWORD PTR _onError$[ebp]
mov	DWORD PTR tv540[ebp], edx
cmp	DWORD PTR tv540[ebp], 0
jle	SHORT $LN4@sqlite3Gen
cmp	DWORD PTR tv540[ebp], 3
jle	SHORT $LN6@sqlite3Gen
cmp	DWORD PTR tv540[ebp], 4
je	SHORT $LN5@sqlite3Gen
jmp	SHORT $LN4@sqlite3Gen
mov	eax, DWORD PTR _pIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _onError$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3UniqueConstraint
add	esp, 12					
jmp	$LN7@sqlite3Gen
mov	eax, DWORD PTR _ignoreDest$[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN7@sqlite3Gen
mov	DWORD PTR _pTrigger$7[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3MultiWrite
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 262144				
je	SHORT $LN3@sqlite3Gen
push	0
push	0
push	109					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggersExist
add	esp, 20					
mov	DWORD PTR _pTrigger$7[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
cmp	ecx, DWORD PTR _pPk$[ebp]
jne	SHORT $LN101@sqlite3Gen
mov	DWORD PTR tv559[ebp], 1
jmp	SHORT $LN102@sqlite3Gen
mov	DWORD PTR tv559[ebp], 0
movzx	edx, BYTE PTR tv559[ebp]
push	edx
push	5
push	0
movzx	eax, WORD PTR _nPkField$[ebp]
push	eax
mov	ecx, DWORD PTR _regR$16[ebp]
push	ecx
mov	edx, DWORD PTR _iIdxCur$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pTrigger$7[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GenerateRowDelete
add	esp, 40					
mov	DWORD PTR _seenReplace$[ebp], 1
mov	ecx, DWORD PTR _addrUniqueOk$17[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _regIdx$18[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempRange
add	esp, 12					
mov	ecx, DWORD PTR _regR$16[ebp]
cmp	ecx, DWORD PTR _regIdx$18[ebp]
je	SHORT $LN2@sqlite3Gen
mov	edx, DWORD PTR _nPkField$[ebp]
push	edx
mov	eax, DWORD PTR _regR$16[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempRange
add	esp, 12					
jmp	$LN39@sqlite3Gen
cmp	DWORD PTR _ipkTop$[ebp], 0
je	SHORT $LN1@sqlite3Gen
mov	edx, DWORD PTR _ipkTop$[ebp]
add	edx, 1
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _ipkBottom$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pbMayReplace$[ebp]
mov	ecx, DWORD PTR _seenReplace$[ebp]
mov	DWORD PTR [eax], ecx
mov	esp, ebp
pop	ebp
ret	0
DD	$LN74@sqlite3Gen
DD	$LN75@sqlite3Gen
DD	$LN74@sqlite3Gen
DD	$LN73@sqlite3Gen
DD	$LN49@sqlite3Gen
DD	$LN49@sqlite3Gen
DD	$LN49@sqlite3Gen
DD	$LN42@sqlite3Gen
DD	$LN48@sqlite3Gen
ENDP
_sqlite3ResolvePartIdxLabel PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _iLabel$[ebp], 0
je	SHORT $LN2@sqlite3Res
mov	eax, DWORD PTR _iLabel$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePop
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3GenerateIndexKey PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _piPartIdxLabel$[ebp], 0
je	SHORT $LN10@sqlite3Gen
mov	ecx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [ecx+36], 0
je	SHORT $LN9@sqlite3Gen
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	ecx, DWORD PTR _piPartIdxLabel$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _iDataCur$[ebp]
mov	DWORD PTR [edx+96], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePush
add	esp, 4
push	8
mov	edx, DWORD PTR _piPartIdxLabel$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+36]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfFalse
add	esp, 16					
jmp	SHORT $LN10@sqlite3Gen
mov	ecx, DWORD PTR _piPartIdxLabel$[ebp]
mov	DWORD PTR [ecx], 0
cmp	DWORD PTR _prefixOnly$[ebp], 0
je	SHORT $LN13@sqlite3Gen
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+56]
shr	eax, 3
and	eax, 1
je	SHORT $LN13@sqlite3Gen
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
mov	DWORD PTR tv87[ebp], edx
jmp	SHORT $LN14@sqlite3Gen
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
mov	DWORD PTR tv87[ebp], ecx
mov	edx, DWORD PTR tv87[ebp]
mov	DWORD PTR _nCol$[ebp], edx
mov	eax, DWORD PTR _nCol$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _regBase$[ebp], eax
cmp	DWORD PTR _pPrior$[ebp], 0
je	SHORT $LN7@sqlite3Gen
mov	edx, DWORD PTR _regBase$[ebp]
cmp	edx, DWORD PTR _regPrior$[ebp]
jne	SHORT $LN6@sqlite3Gen
mov	eax, DWORD PTR _pPrior$[ebp]
cmp	DWORD PTR [eax+36], 0
je	SHORT $LN7@sqlite3Gen
mov	DWORD PTR _pPrior$[ebp], 0
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN5@sqlite3Gen
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR _nCol$[ebp]
jge	SHORT $LN3@sqlite3Gen
cmp	DWORD PTR _pPrior$[ebp], 0
je	SHORT $LN2@sqlite3Gen
mov	eax, DWORD PTR _pPrior$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _j$[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _j$[ebp]
movsx	edx, WORD PTR [edx+ecx*2]
cmp	eax, edx
jne	SHORT $LN2@sqlite3Gen
jmp	SHORT $LN4@sqlite3Gen
mov	eax, DWORD PTR _regBase$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _j$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
push	39					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeDeletePriorOpcode
add	esp, 8
jmp	SHORT $LN4@sqlite3Gen
cmp	DWORD PTR _regOut$[ebp], 0
je	SHORT $LN1@sqlite3Gen
mov	eax, DWORD PTR _regOut$[ebp]
push	eax
mov	ecx, DWORD PTR _nCol$[ebp]
push	ecx
mov	edx, DWORD PTR _regBase$[ebp]
push	edx
push	48					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _nCol$[ebp]
push	ecx
mov	edx, DWORD PTR _regBase$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempRange
add	esp, 12					
mov	eax, DWORD PTR _regBase$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GenerateRowIndexDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	DWORD PTR _r1$[ebp], -1
mov	DWORD PTR _pPrior$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
jne	SHORT $LN8@sqlite3Gen
mov	DWORD PTR tv71[ebp], 0
jmp	SHORT $LN9@sqlite3Gen
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR tv71[ebp], eax
mov	edx, DWORD PTR tv71[ebp]
mov	DWORD PTR _pPk$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$[ebp], ecx
jmp	SHORT $LN5@sqlite3Gen
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN6@sqlite3Gen
cmp	DWORD PTR _aRegIdx$[ebp], 0
je	SHORT $LN2@sqlite3Gen
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aRegIdx$[ebp]
cmp	DWORD PTR [eax+edx*4], 0
jne	SHORT $LN2@sqlite3Gen
jmp	SHORT $LN4@sqlite3Gen
mov	ecx, DWORD PTR _pIdx$[ebp]
cmp	ecx, DWORD PTR _pPk$[ebp]
jne	SHORT $LN1@sqlite3Gen
jmp	SHORT $LN4@sqlite3Gen
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _pPrior$[ebp]
push	eax
lea	ecx, DWORD PTR _iPartIdxLabel$[ebp]
push	ecx
push	1
push	0
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GenerateIndexKey
add	esp, 32					
mov	DWORD PTR _r1$[ebp], eax
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+56]
shr	eax, 3
and	eax, 1
je	SHORT $LN10@sqlite3Gen
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
mov	DWORD PTR tv131[ebp], edx
jmp	SHORT $LN11@sqlite3Gen
mov	eax, DWORD PTR _pIdx$[ebp]
movzx	ecx, WORD PTR [eax+52]
mov	DWORD PTR tv131[ebp], ecx
mov	edx, DWORD PTR tv131[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
push	108					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _iPartIdxLabel$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ResolvePartIdxLabel
add	esp, 8
mov	edx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR _pPrior$[ebp], edx
jmp	$LN4@sqlite3Gen
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GenerateRowDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _iOld$[ebp], 0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iLabel$[ebp], eax
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN14@sqlite3Gen
mov	DWORD PTR tv71[ebp], 67			
jmp	SHORT $LN15@sqlite3Gen
mov	DWORD PTR tv71[ebp], 65			
mov	dl, BYTE PTR tv71[ebp]
mov	BYTE PTR _opSeek$[ebp], dl
movzx	eax, BYTE PTR _bNoSeek$[ebp]
test	eax, eax
jne	SHORT $LN11@sqlite3Gen
movsx	ecx, WORD PTR _nPk$[ebp]
push	ecx
mov	edx, DWORD PTR _iPk$[ebp]
push	edx
mov	eax, DWORD PTR _iLabel$[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
movzx	edx, BYTE PTR _opSeek$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
push	0
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3FkRequired
add	esp, 16					
test	eax, eax
jne	SHORT $LN9@sqlite3Gen
cmp	DWORD PTR _pTrigger$[ebp], 0
je	$LN10@sqlite3Gen
movzx	eax, BYTE PTR _onconf$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
push	3
push	0
push	0
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggerColmask
add	esp, 28					
mov	DWORD PTR _mask$2[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3FkOldmask
add	esp, 8
or	eax, DWORD PTR _mask$2[ebp]
mov	DWORD PTR _mask$2[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _iOld$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
lea	eax, DWORD PTR [eax+edx+1]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR _iOld$[ebp]
push	edx
mov	eax, DWORD PTR _iPk$[ebp]
push	eax
push	33					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _iCol$3[ebp], 0
jmp	SHORT $LN8@sqlite3Gen
mov	edx, DWORD PTR _iCol$3[ebp]
add	edx, 1
mov	DWORD PTR _iCol$3[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _iCol$3[ebp], ecx
jge	SHORT $LN6@sqlite3Gen
cmp	DWORD PTR _mask$2[ebp], -1
je	SHORT $LN4@sqlite3Gen
cmp	DWORD PTR _iCol$3[ebp], 31		
jg	SHORT $LN5@sqlite3Gen
mov	edx, 1
mov	ecx, DWORD PTR _iCol$3[ebp]
shl	edx, cl
and	edx, DWORD PTR _mask$2[ebp]
je	SHORT $LN5@sqlite3Gen
mov	eax, DWORD PTR _iCol$3[ebp]
mov	ecx, DWORD PTR _iOld$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
mov	eax, DWORD PTR _iCol$3[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
jmp	SHORT $LN7@sqlite3Gen
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrStart$1[ebp], eax
mov	edx, DWORD PTR _iLabel$[ebp]
push	edx
movzx	eax, BYTE PTR _onconf$[ebp]
push	eax
mov	ecx, DWORD PTR _iOld$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
push	1
push	0
push	109					
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeRowTrigger
add	esp, 36					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
cmp	DWORD PTR _addrStart$1[ebp], eax
jge	SHORT $LN3@sqlite3Gen
movsx	eax, WORD PTR _nPk$[ebp]
push	eax
mov	ecx, DWORD PTR _iPk$[ebp]
push	ecx
mov	edx, DWORD PTR _iLabel$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
movzx	ecx, BYTE PTR _opSeek$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
push	0
push	0
push	0
mov	eax, DWORD PTR _iOld$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3FkCheck
add	esp, 24					
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN2@sqlite3Gen
push	0
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GenerateRowIndexDelete
add	esp, 20					
movzx	edx, BYTE PTR _count$[ebp]
test	edx, edx
je	SHORT $LN16@sqlite3Gen
mov	DWORD PTR tv202[ebp], 1
jmp	SHORT $LN17@sqlite3Gen
mov	DWORD PTR tv202[ebp], 0
mov	eax, DWORD PTR tv202[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	74					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
movzx	eax, BYTE PTR _count$[ebp]
test	eax, eax
je	SHORT $LN2@sqlite3Gen
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	-1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	0
push	0
mov	ecx, DWORD PTR _iOld$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkActions
add	esp, 24					
mov	ecx, DWORD PTR _iLabel$[ebp]
push	ecx
movzx	edx, BYTE PTR _onconf$[ebp]
push	edx
mov	eax, DWORD PTR _iOld$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
push	2
push	0
push	109					
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeRowTrigger
add	esp, 36					
mov	ecx, DWORD PTR _iLabel$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IsRowid PROC
push	ebp
mov	ebp, esp
push	OFFSET $SG103743
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@sqlite3IsR
mov	eax, 1
jmp	SHORT $LN4@sqlite3IsR
push	OFFSET $SG103745
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN2@sqlite3IsR
mov	eax, 1
jmp	SHORT $LN4@sqlite3IsR
push	OFFSET $SG103747
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@sqlite3IsR
mov	eax, 1
jmp	SHORT $LN4@sqlite3IsR
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3ExprNeedsNoAffinityChange PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
movsx	eax, BYTE PTR _aff$[ebp]
cmp	eax, 98					
jne	SHORT $LN12@sqlite3Exp
mov	eax, 1
jmp	$LN14@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 158				
je	SHORT $LN10@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 157				
jne	SHORT $LN11@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN12@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR _op$[ebp], dl
movzx	eax, BYTE PTR _op$[ebp]
cmp	eax, 159				
jne	SHORT $LN9@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	dl, BYTE PTR [ecx+38]
mov	BYTE PTR _op$[ebp], dl
movzx	eax, BYTE PTR _op$[ebp]
mov	DWORD PTR tv78[ebp], eax
mov	ecx, DWORD PTR tv78[ebp]
sub	ecx, 97					
mov	DWORD PTR tv78[ebp], ecx
cmp	DWORD PTR tv78[ebp], 57			
ja	$LN1@sqlite3Exp
mov	edx, DWORD PTR tv78[ebp]
movzx	eax, BYTE PTR $LN25@sqlite3Exp[edx]
jmp	DWORD PTR $LN26@sqlite3Exp[eax*4]
movsx	ecx, BYTE PTR _aff$[ebp]
cmp	ecx, 100				
je	SHORT $LN16@sqlite3Exp
movsx	edx, BYTE PTR _aff$[ebp]
cmp	edx, 99					
je	SHORT $LN16@sqlite3Exp
mov	DWORD PTR tv83[ebp], 0
jmp	SHORT $LN17@sqlite3Exp
mov	DWORD PTR tv83[ebp], 1
mov	eax, DWORD PTR tv83[ebp]
jmp	$LN14@sqlite3Exp
movsx	eax, BYTE PTR _aff$[ebp]
cmp	eax, 101				
je	SHORT $LN18@sqlite3Exp
movsx	ecx, BYTE PTR _aff$[ebp]
cmp	ecx, 99					
je	SHORT $LN18@sqlite3Exp
mov	DWORD PTR tv88[ebp], 0
jmp	SHORT $LN19@sqlite3Exp
mov	DWORD PTR tv88[ebp], 1
mov	eax, DWORD PTR tv88[ebp]
jmp	SHORT $LN14@sqlite3Exp
movsx	edx, BYTE PTR _aff$[ebp]
cmp	edx, 97					
jne	SHORT $LN20@sqlite3Exp
mov	DWORD PTR tv91[ebp], 1
jmp	SHORT $LN21@sqlite3Exp
mov	DWORD PTR tv91[ebp], 0
mov	eax, DWORD PTR tv91[ebp]
jmp	SHORT $LN14@sqlite3Exp
mov	eax, 1
jmp	SHORT $LN14@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+32]
test	ecx, ecx
jge	SHORT $LN23@sqlite3Exp
movsx	edx, BYTE PTR _aff$[ebp]
cmp	edx, 100				
je	SHORT $LN22@sqlite3Exp
movsx	eax, BYTE PTR _aff$[ebp]
cmp	eax, 99					
jne	SHORT $LN23@sqlite3Exp
mov	DWORD PTR tv131[ebp], 1
jmp	SHORT $LN24@sqlite3Exp
mov	DWORD PTR tv131[ebp], 0
mov	eax, DWORD PTR tv131[ebp]
jmp	SHORT $LN14@sqlite3Exp
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	$LN4@sqlite3Exp
DD	$LN6@sqlite3Exp
DD	$LN5@sqlite3Exp
DD	$LN3@sqlite3Exp
DD	$LN2@sqlite3Exp
DD	$LN1@sqlite3Exp
DB	0
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	1
DB	2
DB	3
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	5
DB	4
ENDP
_sqlite3ExprCanBeNull PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 158				
je	SHORT $LN6@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 157				
jne	SHORT $LN7@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN8@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR _op$[ebp], cl
movzx	edx, BYTE PTR _op$[ebp]
cmp	edx, 159				
jne	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR [eax+38]
mov	BYTE PTR _op$[ebp], cl
mov	dl, BYTE PTR _op$[ebp]
mov	BYTE PTR tv76[ebp], dl
cmp	BYTE PTR tv76[ebp], 97			
je	SHORT $LN2@sqlite3Exp
cmp	BYTE PTR tv76[ebp], 131			
jbe	SHORT $LN1@sqlite3Exp
cmp	BYTE PTR tv76[ebp], 134			
jbe	SHORT $LN2@sqlite3Exp
jmp	SHORT $LN1@sqlite3Exp
xor	eax, eax
jmp	SHORT $LN9@sqlite3Exp
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprIsInteger PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 1024				
je	SHORT $LN7@sqlite3Exp
mov	edx, DWORD PTR _pValue$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx], ecx
mov	eax, 1
jmp	SHORT $LN8@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR tv70[ebp], al
cmp	BYTE PTR tv70[ebp], 157			
je	SHORT $LN3@sqlite3Exp
cmp	BYTE PTR tv70[ebp], 158			
je	SHORT $LN4@sqlite3Exp
jmp	SHORT $LN5@sqlite3Exp
mov	ecx, DWORD PTR _pValue$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3ExprIsInteger
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN5@sqlite3Exp
lea	ecx, DWORD PTR _v$1[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3ExprIsInteger
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Exp
mov	ecx, DWORD PTR _v$1[ebp]
neg	ecx
mov	edx, DWORD PTR _pValue$[ebp]
mov	DWORD PTR [edx], ecx
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprIsConstantOrFunction PROC
push	ebp
mov	ebp, esp
push	2
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_exprIsConst
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3ExprIsConstantNotJoin PROC
push	ebp
mov	ebp, esp
push	3
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_exprIsConst
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3ExprIsConstant PROC
push	ebp
mov	ebp, esp
push	1
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_exprIsConst
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3LeaveMutexAndCloseZombie PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+76], 1691352191		
jne	SHORT $LN27@sqlite3Lea
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_connectionIsBusy
add	esp, 4
test	eax, eax
je	SHORT $LN28@sqlite3Lea
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
jmp	$LN29@sqlite3Lea
push	0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3RollbackAll
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CloseSavepoints
add	esp, 4
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN26@sqlite3Lea
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN24@sqlite3Lea
mov	eax, DWORD PTR _j$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$5[ebp], eax
mov	edx, DWORD PTR _pDb$5[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN23@sqlite3Lea
mov	eax, DWORD PTR _pDb$5[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeClose
add	esp, 4
mov	edx, DWORD PTR _pDb$5[ebp]
mov	DWORD PTR [edx+4], 0
cmp	DWORD PTR _j$[ebp], 1
je	SHORT $LN23@sqlite3Lea
mov	eax, DWORD PTR _pDb$5[ebp]
mov	DWORD PTR [eax+12], 0
jmp	SHORT $LN25@sqlite3Lea
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
cmp	DWORD PTR [eax+ecx+12], 0
je	SHORT $LN21@sqlite3Lea
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
push	ecx
call	_sqlite3SchemaClear
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VtabUnlockList
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3CollapseDatabaseArray
add	esp, 4
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN20@sqlite3Lea
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
cmp	DWORD PTR _j$[ebp], 23			
jge	SHORT $LN18@sqlite3Lea
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+328]
mov	DWORD PTR _p$6[ebp], ecx
jmp	SHORT $LN17@sqlite3Lea
mov	edx, DWORD PTR _pHash$2[ebp]
mov	DWORD PTR _p$6[ebp], edx
cmp	DWORD PTR _p$6[ebp], 0
je	SHORT $LN15@sqlite3Lea
mov	eax, DWORD PTR _p$6[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pHash$2[ebp], ecx
cmp	DWORD PTR _p$6[ebp], 0
je	SHORT $LN13@sqlite3Lea
mov	edx, DWORD PTR _p$6[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_functionDestroy
add	esp, 8
mov	ecx, DWORD PTR _p$6[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pNext$1[ebp], edx
mov	eax, DWORD PTR _p$6[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pNext$1[ebp]
mov	DWORD PTR _p$6[ebp], edx
jmp	SHORT $LN14@sqlite3Lea
jmp	SHORT $LN16@sqlite3Lea
jmp	SHORT $LN19@sqlite3Lea
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+428]
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN12@sqlite3Lea
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
je	SHORT $LN10@sqlite3Lea
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pColl$4[ebp], edx
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN9@sqlite3Lea
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
cmp	DWORD PTR _j$[ebp], 3
jge	SHORT $LN7@sqlite3Lea
imul	ecx, DWORD PTR _j$[ebp], 20
mov	edx, DWORD PTR _pColl$4[ebp]
cmp	DWORD PTR [edx+ecx+16], 0
je	SHORT $LN6@sqlite3Lea
imul	eax, DWORD PTR _j$[ebp], 20
mov	ecx, DWORD PTR _pColl$4[ebp]
mov	edx, DWORD PTR [ecx+eax+8]
push	edx
imul	eax, DWORD PTR _j$[ebp], 20
mov	ecx, DWORD PTR _pColl$4[ebp]
mov	edx, DWORD PTR [ecx+eax+16]
call	edx
add	esp, 4
jmp	SHORT $LN8@sqlite3Lea
mov	eax, DWORD PTR _pColl$4[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN11@sqlite3Lea
mov	edx, DWORD PTR _db$[ebp]
add	edx, 420				
push	edx
call	_sqlite3HashClear
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+308]
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN5@sqlite3Lea
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
je	SHORT $LN3@sqlite3Lea
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pMod$3[ebp], edx
mov	eax, DWORD PTR _pMod$3[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN2@sqlite3Lea
mov	ecx, DWORD PTR _pMod$3[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pMod$3[ebp]
mov	ecx, DWORD PTR [eax+12]
call	ecx
add	esp, 4
mov	edx, DWORD PTR _pMod$3[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN4@sqlite3Lea
mov	ecx, DWORD PTR _db$[ebp]
add	ecx, 300				
push	ecx
call	_sqlite3HashClear
add	esp, 4
push	0
push	0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+224]
push	ecx
call	_sqlite3ValueFree
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CloseExtensions
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+76], -1254786768		
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+76], -1623446221		
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_free
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+243]
test	eax, eax
je	SHORT $LN1@sqlite3Lea
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+268]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CloseSavepoints PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+480], 0
je	SHORT $LN1@sqlite3Clo
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+480]
mov	DWORD PTR _pTmp$1[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pTmp$1[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax+480], edx
mov	eax, DWORD PTR _pTmp$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Clo
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+488], 0
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+492], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+69], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Savepoint PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pName$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
je	SHORT $LN4@sqlite3Sav
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$1[ebp], eax
cmp	DWORD PTR _v$1[ebp], 0
je	SHORT $LN1@sqlite3Sav
push	0
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
mov	eax, DWORD PTR ?az@?2??sqlite3Savepoint@@9@9[edx*4]
push	eax
push	32					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN2@sqlite3Sav
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN4@sqlite3Sav
push	-1
mov	edx, DWORD PTR _zName$[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _op$[ebp]
push	eax
push	2
mov	ecx, DWORD PTR _v$1[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RollbackTransaction PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
push	0
push	OFFSET $SG107656
push	22					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN2@sqlite3Rol
jmp	SHORT $LN3@sqlite3Rol
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN3@sqlite3Rol
push	1
push	1
push	3
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CommitTransaction PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
push	0
push	OFFSET $SG107647
push	22					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN2@sqlite3Com
jmp	SHORT $LN3@sqlite3Com
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN3@sqlite3Com
push	0
push	1
push	3
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BeginTransaction PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
push	0
push	0
push	OFFSET $SG107634
push	22					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN6@sqlite3Beg
jmp	$LN7@sqlite3Beg
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN5@sqlite3Beg
jmp	SHORT $LN7@sqlite3Beg
cmp	DWORD PTR _type$[ebp], 7
je	SHORT $LN4@sqlite3Beg
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Beg
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN4@sqlite3Beg
cmp	DWORD PTR _type$[ebp], 9
jne	SHORT $LN9@sqlite3Beg
mov	DWORD PTR tv81[ebp], 1
jmp	SHORT $LN10@sqlite3Beg
mov	DWORD PTR tv81[ebp], 0
mov	ecx, DWORD PTR tv81[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _i$[ebp]
push	edx
push	4
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeUsesBtree
add	esp, 8
jmp	SHORT $LN2@sqlite3Beg
push	0
push	0
push	3
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CodeVerifyNamedSchema PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@sqlite3Cod
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	SHORT $LN6@sqlite3Cod
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$1[ebp], edx
mov	ecx, DWORD PTR _pDb$1[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN2@sqlite3Cod
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN1@sqlite3Cod
mov	edx, DWORD PTR _pDb$1[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN2@sqlite3Cod
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
jmp	SHORT $LN4@sqlite3Cod
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CodeVerifySchema PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+408], 0
je	SHORT $LN5@sqlite3Cod
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+408]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN6@sqlite3Cod
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR _pToplevel$[ebp], ecx
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	edx, 1
mov	ecx, DWORD PTR _iDb$[ebp]
shl	edx, cl
mov	DWORD PTR _mask$[ebp], edx
mov	eax, DWORD PTR _pToplevel$[ebp]
mov	ecx, DWORD PTR [eax+332]
and	ecx, DWORD PTR _mask$[ebp]
jne	SHORT $LN3@sqlite3Cod
mov	edx, DWORD PTR _pToplevel$[ebp]
mov	eax, DWORD PTR [edx+332]
or	eax, DWORD PTR _mask$[ebp]
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	DWORD PTR [ecx+332], eax
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	eax, DWORD PTR _iDb$[ebp]
mov	ecx, DWORD PTR _pToplevel$[ebp]
mov	edx, DWORD PTR [edx]
mov	DWORD PTR [ecx+eax*4+336], edx
mov	eax, 1
test	eax, eax
je	SHORT $LN3@sqlite3Cod
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN3@sqlite3Cod
mov	ecx, DWORD PTR _pToplevel$[ebp]
push	ecx
call	_sqlite3OpenTempDatabase
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RollbackAll PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _inTrans$[ebp], 0
call	_sqlite3BeginBenignMalloc
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@sqlite3Rol
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN6@sqlite3Rol
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _p$1[ebp], ecx
cmp	DWORD PTR _p$1[ebp], 0
je	SHORT $LN5@sqlite3Rol
mov	edx, DWORD PTR _p$1[ebp]
push	edx
call	_sqlite3BtreeIsInTrans
add	esp, 4
test	eax, eax
je	SHORT $LN4@sqlite3Rol
mov	DWORD PTR _inTrans$[ebp], 1
mov	eax, DWORD PTR _tripCode$[ebp]
push	eax
mov	ecx, DWORD PTR _p$1[ebp]
push	ecx
call	_sqlite3BtreeRollback
add	esp, 8
jmp	SHORT $LN7@sqlite3Rol
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VtabRollback
add	esp, 4
call	_sqlite3EndBenignMalloc
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 2
je	SHORT $LN3@sqlite3Rol
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
jne	SHORT $LN3@sqlite3Rol
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExpirePreparedStatements
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+496], 0
mov	DWORD PTR [ecx+500], 0
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+504], 0
mov	DWORD PTR [edx+508], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -16777217				
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+192], 0
je	SHORT $LN9@sqlite3Rol
cmp	DWORD PTR _inTrans$[ebp], 0
jne	SHORT $LN1@sqlite3Rol
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+62]
test	edx, edx
jne	SHORT $LN9@sqlite3Rol
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+188]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+192]
call	eax
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PrngRestoreState PROC
push	ebp
mov	ebp, esp
push	259					
push	OFFSET _sqlite3SavedPrng
push	OFFSET _sqlite3Prng
call	_memcpy
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3PrngSaveState PROC
push	ebp
mov	ebp, esp
push	259					
push	OFFSET _sqlite3Prng
push	OFFSET _sqlite3SavedPrng
call	_memcpy
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3GetVdbe PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN3@sqlite3Get
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3VdbeCreate
add	esp, 4
mov	DWORD PTR tv67[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv67[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR tv67[ebp]
mov	DWORD PTR _v$[ebp], edx
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN2@sqlite3Get
push	155					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+408], 0
jne	SHORT $LN3@sqlite3Get
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
movzx	ecx, WORD PTR [eax+60]
and	ecx, 8
jne	SHORT $LN3@sqlite3Get
mov	edx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [edx+23], 1
mov	eax, DWORD PTR _v$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FunctionUsesThisSrc PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
push	24					
push	0
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _w$[ebp], OFFSET _exprSrcCount
lea	ecx, DWORD PTR _cnt$[ebp]
mov	DWORD PTR _w$[ebp+20], ecx
mov	edx, DWORD PTR _pSrcList$[ebp]
mov	DWORD PTR _cnt$[ebp], edx
mov	DWORD PTR _cnt$[ebp+4], 0
mov	DWORD PTR _cnt$[ebp+8], 0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
lea	edx, DWORD PTR _w$[ebp]
push	edx
call	_sqlite3WalkExprList
add	esp, 8
cmp	DWORD PTR _cnt$[ebp+4], 0
jg	SHORT $LN3@sqlite3Fun
cmp	DWORD PTR _cnt$[ebp+8], 0
je	SHORT $LN3@sqlite3Fun
mov	DWORD PTR tv72[ebp], 0
jmp	SHORT $LN4@sqlite3Fun
mov	DWORD PTR tv72[ebp], 1
mov	eax, DWORD PTR tv72[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprAnalyzeAggList PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$[ebp]
add	eax, 24					
mov	DWORD PTR _pItem$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pNC$[ebp]
push	edx
call	_sqlite3ExprAnalyzeAggregates
add	esp, 8
jmp	SHORT $LN2@sqlite3Exp
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprAnalyzeAggregates PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
push	24					
push	0
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	DWORD PTR _w$[ebp], OFFSET _analyzeAggregate
mov	DWORD PTR _w$[ebp+4], OFFSET _analyzeAggregatesInSelect
mov	ecx, DWORD PTR _pNC$[ebp]
mov	DWORD PTR _w$[ebp+20], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
lea	eax, DWORD PTR _w$[ebp]
push	eax
call	_sqlite3WalkExpr
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprImpliesExpr PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pE2$[ebp]
push	ecx
mov	edx, DWORD PTR _pE1$[ebp]
push	edx
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
jne	SHORT $LN4@sqlite3Exp
mov	eax, 1
jmp	$LN5@sqlite3Exp
mov	eax, DWORD PTR _pE2$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 71					
jne	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _pE2$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pE1$[ebp]
push	edx
call	_sqlite3ExprImpliesExpr
add	esp, 12					
test	eax, eax
jne	SHORT $LN2@sqlite3Exp
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pE2$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pE1$[ebp]
push	eax
call	_sqlite3ExprImpliesExpr
add	esp, 12					
test	eax, eax
je	SHORT $LN3@sqlite3Exp
mov	eax, 1
jmp	SHORT $LN5@sqlite3Exp
mov	ecx, DWORD PTR _pE2$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 77					
jne	SHORT $LN1@sqlite3Exp
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pE2$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pE1$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@sqlite3Exp
mov	edx, DWORD PTR _pE1$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 76					
je	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _pE1$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 73					
je	SHORT $LN1@sqlite3Exp
mov	eax, 1
jmp	SHORT $LN5@sqlite3Exp
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3ExprListCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _pA$[ebp], 0
jne	SHORT $LN9@sqlite3Exp
cmp	DWORD PTR _pB$[ebp], 0
jne	SHORT $LN9@sqlite3Exp
xor	eax, eax
jmp	$LN10@sqlite3Exp
cmp	DWORD PTR _pA$[ebp], 0
je	SHORT $LN7@sqlite3Exp
cmp	DWORD PTR _pB$[ebp], 0
jne	SHORT $LN8@sqlite3Exp
mov	eax, 1
jmp	$LN10@sqlite3Exp
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR _pB$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx]
je	SHORT $LN6@sqlite3Exp
mov	eax, 1
jmp	$LN10@sqlite3Exp
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN3@sqlite3Exp
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _pExprA$1[ebp], eax
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
mov	DWORD PTR _pExprB$2[ebp], ecx
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+12]
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [ecx+eax+12]
cmp	edx, eax
je	SHORT $LN2@sqlite3Exp
mov	eax, 1
jmp	SHORT $LN10@sqlite3Exp
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pExprB$2[ebp]
push	edx
mov	eax, DWORD PTR _pExprA$1[ebp]
push	eax
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
je	SHORT $LN1@sqlite3Exp
mov	eax, 1
jmp	SHORT $LN10@sqlite3Exp
jmp	SHORT $LN4@sqlite3Exp
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _pA$[ebp], 0
je	SHORT $LN18@sqlite3Exp
cmp	DWORD PTR _pB$[ebp], 0
jne	SHORT $LN19@sqlite3Exp
mov	eax, DWORD PTR _pB$[ebp]
cmp	eax, DWORD PTR _pA$[ebp]
jne	SHORT $LN22@sqlite3Exp
mov	DWORD PTR tv67[ebp], 0
jmp	SHORT $LN23@sqlite3Exp
mov	DWORD PTR tv67[ebp], 2
mov	eax, DWORD PTR tv67[ebp]
jmp	$LN20@sqlite3Exp
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [ecx+4]
or	eax, DWORD PTR [edx+4]
mov	DWORD PTR _combinedFlags$[ebp], eax
mov	ecx, DWORD PTR _combinedFlags$[ebp]
and	ecx, 1024				
je	SHORT $LN17@sqlite3Exp
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR [edx+4]
and	ecx, DWORD PTR [eax+4]
and	ecx, 1024				
je	SHORT $LN16@sqlite3Exp
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR [edx+8]
cmp	ecx, DWORD PTR [eax+8]
jne	SHORT $LN16@sqlite3Exp
xor	eax, eax
jmp	$LN20@sqlite3Exp
mov	eax, 2
jmp	$LN20@sqlite3Exp
mov	edx, DWORD PTR _pA$[ebp]
movzx	eax, BYTE PTR [edx]
mov	ecx, DWORD PTR _pB$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	eax, edx
je	SHORT $LN15@sqlite3Exp
mov	eax, DWORD PTR _pA$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 95					
jne	SHORT $LN14@sqlite3Exp
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _pB$[ebp]
push	eax
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3ExprCompare
add	esp, 12					
cmp	eax, 2
jge	SHORT $LN14@sqlite3Exp
mov	eax, 1
jmp	$LN20@sqlite3Exp
mov	eax, DWORD PTR _pB$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 95					
jne	SHORT $LN13@sqlite3Exp
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pA$[ebp]
push	edx
call	_sqlite3ExprCompare
add	esp, 12					
cmp	eax, 2
jge	SHORT $LN13@sqlite3Exp
mov	eax, 1
jmp	$LN20@sqlite3Exp
mov	eax, 2
jmp	$LN20@sqlite3Exp
mov	eax, DWORD PTR _pA$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 154				
je	SHORT $LN12@sqlite3Exp
mov	edx, DWORD PTR _pA$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 156				
je	SHORT $LN12@sqlite3Exp
mov	ecx, DWORD PTR _pA$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN12@sqlite3Exp
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
je	SHORT $LN12@sqlite3Exp
mov	eax, DWORD PTR _pA$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 95					
jne	SHORT $LN24@sqlite3Exp
mov	DWORD PTR tv153[ebp], 1
jmp	SHORT $LN25@sqlite3Exp
mov	DWORD PTR tv153[ebp], 2
mov	eax, DWORD PTR tv153[ebp]
jmp	$LN20@sqlite3Exp
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 16					
mov	ecx, DWORD PTR _pB$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 16					
cmp	eax, edx
je	SHORT $LN10@sqlite3Exp
mov	eax, 2
jmp	$LN20@sqlite3Exp
mov	eax, DWORD PTR _combinedFlags$[ebp]
and	eax, 16384				
jne	$LN9@sqlite3Exp
mov	ecx, DWORD PTR _combinedFlags$[ebp]
and	ecx, 2048				
je	SHORT $LN8@sqlite3Exp
mov	eax, 2
jmp	$LN20@sqlite3Exp
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
je	SHORT $LN7@sqlite3Exp
mov	eax, 2
jmp	$LN20@sqlite3Exp
mov	ecx, DWORD PTR _iTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
je	SHORT $LN6@sqlite3Exp
mov	eax, 2
jmp	SHORT $LN20@sqlite3Exp
mov	eax, DWORD PTR _iTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pB$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
call	_sqlite3ExprListCompare
add	esp, 12					
test	eax, eax
je	SHORT $LN5@sqlite3Exp
mov	eax, 2
jmp	SHORT $LN20@sqlite3Exp
mov	edx, DWORD PTR _combinedFlags$[ebp]
and	edx, 8192				
jne	SHORT $LN9@sqlite3Exp
mov	eax, DWORD PTR _pA$[ebp]
movsx	ecx, WORD PTR [eax+32]
mov	edx, DWORD PTR _pB$[ebp]
movsx	eax, WORD PTR [edx+32]
cmp	ecx, eax
je	SHORT $LN3@sqlite3Exp
mov	eax, 2
jmp	SHORT $LN20@sqlite3Exp
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [ecx+28]
cmp	eax, DWORD PTR [edx+28]
je	SHORT $LN9@sqlite3Exp
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR [ecx+28]
cmp	edx, DWORD PTR _iTab$[ebp]
jne	SHORT $LN1@sqlite3Exp
mov	eax, DWORD PTR _pB$[ebp]
cmp	DWORD PTR [eax+28], 0
jl	SHORT $LN9@sqlite3Exp
mov	eax, 2
jmp	SHORT $LN20@sqlite3Exp
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3NameFromToken PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pName$[ebp], 0
je	SHORT $LN2@sqlite3Nam
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pName$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	DWORD PTR _zName$[ebp], eax
mov	edx, DWORD PTR _zName$[ebp]
push	edx
call	_sqlite3Dequote
add	esp, 4
jmp	SHORT $LN1@sqlite3Nam
mov	DWORD PTR _zName$[ebp], 0
mov	eax, DWORD PTR _zName$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RunVacuum PROC
push	ebp
mov	ebp, esp
sub	esp, 60					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _zSql$[ebp], 0
mov	DWORD PTR _pDb$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+62]
test	ecx, ecx
jne	SHORT $LN27@sqlite3Run
push	OFFSET $SG116082
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
call	_sqlite3SetString
add	esp, 12					
mov	eax, 1
jmp	$LN28@sqlite3Run
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+140], 1
jle	SHORT $LN26@sqlite3Run
push	OFFSET $SG116084
mov	edx, DWORD PTR _db$[ebp]
push	edx
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
call	_sqlite3SetString
add	esp, 12					
mov	eax, 1
jmp	$LN28@sqlite3Run
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _saved_flags$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+80]
mov	DWORD PTR _saved_nChange$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+84]
mov	DWORD PTR _saved_nTotalChange$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+164]
mov	DWORD PTR _saved_xTrace$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
or	ecx, 2107392				
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -655361				
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+164], 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pMain$[ebp], edx
mov	eax, DWORD PTR _pMain$[ebp]
push	eax
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerIsMemdb
add	esp, 4
mov	DWORD PTR _isMemDb$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _nDb$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3TempInMemory
add	esp, 4
test	eax, eax
je	SHORT $LN25@sqlite3Run
mov	DWORD PTR _zSql$[ebp], OFFSET $SG116086
jmp	SHORT $LN24@sqlite3Run
mov	DWORD PTR _zSql$[ebp], OFFSET $SG116088
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_execSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
cmp	edx, DWORD PTR _nDb$[ebp]
jle	SHORT $LN23@sqlite3Run
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+20]
sub	ecx, 1
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
add	ecx, DWORD PTR [edx+16]
mov	DWORD PTR _pDb$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN22@sqlite3Run
jmp	$end_of_vacuum$32
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+20]
sub	ecx, 1
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _pTemp$[ebp], ecx
mov	edx, DWORD PTR _pTemp$[ebp]
push	edx
call	_sqlite3BtreeCommit
add	esp, 4
mov	eax, DWORD PTR _pMain$[ebp]
push	eax
call	_sqlite3BtreeGetReserve
add	esp, 4
mov	DWORD PTR _nRes$[ebp], eax
push	OFFSET $SG116093
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_execSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN21@sqlite3Run
jmp	$end_of_vacuum$32
push	OFFSET $SG116095
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_execSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN20@sqlite3Run
jmp	$end_of_vacuum$32
push	2
mov	edx, DWORD PTR _pMain$[ebp]
push	edx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN19@sqlite3Run
jmp	$end_of_vacuum$32
mov	eax, DWORD PTR _pMain$[ebp]
push	eax
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerGetJournalMode
add	esp, 4
cmp	eax, 5
jne	SHORT $LN18@sqlite3Run
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+72], 0
push	0
mov	edx, DWORD PTR _nRes$[ebp]
push	edx
mov	eax, DWORD PTR _pMain$[ebp]
push	eax
call	_sqlite3BtreeGetPageSize
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pTemp$[ebp]
push	ecx
call	_sqlite3BtreeSetPageSize
add	esp, 16					
test	eax, eax
jne	SHORT $LN16@sqlite3Run
cmp	DWORD PTR _isMemDb$[ebp], 0
jne	SHORT $LN15@sqlite3Run
push	0
mov	edx, DWORD PTR _nRes$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+72]
push	ecx
mov	edx, DWORD PTR _pTemp$[ebp]
push	edx
call	_sqlite3BtreeSetPageSize
add	esp, 16					
test	eax, eax
jne	SHORT $LN16@sqlite3Run
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN17@sqlite3Run
mov	DWORD PTR _rc$[ebp], 7
jmp	$end_of_vacuum$32
mov	edx, DWORD PTR _db$[ebp]
movsx	eax, BYTE PTR [edx+66]
test	eax, eax
jl	SHORT $LN30@sqlite3Run
mov	ecx, DWORD PTR _db$[ebp]
movsx	edx, BYTE PTR [ecx+66]
mov	DWORD PTR tv198[ebp], edx
jmp	SHORT $LN31@sqlite3Run
mov	eax, DWORD PTR _pMain$[ebp]
push	eax
call	_sqlite3BtreeGetAutoVacuum
add	esp, 4
mov	DWORD PTR tv198[ebp], eax
mov	ecx, DWORD PTR tv198[ebp]
push	ecx
mov	edx, DWORD PTR _pTemp$[ebp]
push	edx
call	_sqlite3BtreeSetAutoVacuum
add	esp, 8
push	OFFSET $SG116102
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_execExecSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@sqlite3Run
jmp	$end_of_vacuum$32
push	OFFSET $SG116104
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_execExecSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN13@sqlite3Run
jmp	$end_of_vacuum$32
push	OFFSET $SG116106
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_execExecSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@sqlite3Run
jmp	$end_of_vacuum$32
push	OFFSET $SG116108
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_execExecSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@sqlite3Run
jmp	$end_of_vacuum$32
push	OFFSET $SG116110
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_execExecSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@sqlite3Run
jmp	$end_of_vacuum$32
push	OFFSET $SG116112
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_execExecSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@sqlite3Run
jmp	$end_of_vacuum$32
push	OFFSET $SG116114
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_execSql
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@sqlite3Run
jmp	$end_of_vacuum$32
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN7@sqlite3Run
mov	edx, DWORD PTR _i$2[ebp]
add	edx, 2
mov	DWORD PTR _i$2[ebp], edx
cmp	DWORD PTR _i$2[ebp], 10			
jge	SHORT $LN5@sqlite3Run
lea	eax, DWORD PTR _meta$1[ebp]
push	eax
mov	ecx, DWORD PTR _i$2[ebp]
movzx	edx, BYTE PTR ?aCopy@?9??sqlite3RunVacuum@@9@9[ecx]
push	edx
mov	eax, DWORD PTR _pMain$[ebp]
push	eax
call	_sqlite3BtreeGetMeta
add	esp, 12					
mov	ecx, DWORD PTR _i$2[ebp]
movzx	edx, BYTE PTR ?aCopy@?9??sqlite3RunVacuum@@9@9[ecx+1]
add	edx, DWORD PTR _meta$1[ebp]
push	edx
mov	eax, DWORD PTR _i$2[ebp]
movzx	ecx, BYTE PTR ?aCopy@?9??sqlite3RunVacuum@@9@9[eax]
push	ecx
mov	edx, DWORD PTR _pTemp$[ebp]
push	edx
call	_sqlite3BtreeUpdateMeta
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Run
jmp	SHORT $end_of_vacuum$32
jmp	SHORT $LN6@sqlite3Run
mov	eax, DWORD PTR _pTemp$[ebp]
push	eax
mov	ecx, DWORD PTR _pMain$[ebp]
push	ecx
call	_sqlite3BtreeCopyFile
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@sqlite3Run
jmp	SHORT $end_of_vacuum$32
mov	edx, DWORD PTR _pTemp$[ebp]
push	edx
call	_sqlite3BtreeCommit
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3Run
jmp	SHORT $end_of_vacuum$32
mov	eax, DWORD PTR _pTemp$[ebp]
push	eax
call	_sqlite3BtreeGetAutoVacuum
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pMain$[ebp]
push	ecx
call	_sqlite3BtreeSetAutoVacuum
add	esp, 8
push	1
mov	edx, DWORD PTR _nRes$[ebp]
push	edx
mov	eax, DWORD PTR _pTemp$[ebp]
push	eax
call	_sqlite3BtreeGetPageSize
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pMain$[ebp]
push	ecx
call	_sqlite3BtreeSetPageSize
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _saved_flags$[ebp]
mov	DWORD PTR [edx+24], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _saved_nChange$[ebp]
mov	DWORD PTR [ecx+80], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _saved_nTotalChange$[ebp]
mov	DWORD PTR [eax+84], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _saved_xTrace$[ebp]
mov	DWORD PTR [edx+164], eax
push	1
push	-1
push	-1
mov	ecx, DWORD PTR _pMain$[ebp]
push	ecx
call	_sqlite3BtreeSetPageSize
add	esp, 16					
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+62], 1
cmp	DWORD PTR _pDb$[ebp], 0
je	SHORT $LN1@sqlite3Run
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeClose
add	esp, 4
mov	edx, DWORD PTR _pDb$[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pDb$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Vacuum PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN2@sqlite3Vac
push	0
push	0
push	13					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeUsesBtree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3UnlinkAndDeleteIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
add	eax, 24					
mov	DWORD PTR _pHash$[ebp], eax
mov	ecx, DWORD PTR _zIdxName$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _len$[ebp], eax
push	0
mov	edx, DWORD PTR _len$[ebp]
push	edx
mov	eax, DWORD PTR _zIdxName$[ebp]
push	eax
mov	ecx, DWORD PTR _pHash$[ebp]
push	ecx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pIndex$[ebp], eax
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN6@sqlite3Unl
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+8]
cmp	ecx, DWORD PTR _pIndex$[ebp]
jne	SHORT $LN5@sqlite3Unl
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR [eax+8], edx
jmp	SHORT $LN4@sqlite3Unl
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _p$1[ebp], edx
cmp	DWORD PTR _p$1[ebp], 0
je	SHORT $LN2@sqlite3Unl
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR [eax+20]
cmp	ecx, DWORD PTR _pIndex$[ebp]
je	SHORT $LN2@sqlite3Unl
mov	edx, DWORD PTR _p$1[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _p$1[ebp], eax
jmp	SHORT $LN3@sqlite3Unl
cmp	DWORD PTR _p$1[ebp], 0
je	SHORT $LN4@sqlite3Unl
mov	ecx, DWORD PTR _p$1[ebp]
mov	edx, DWORD PTR [ecx+20]
cmp	edx, DWORD PTR _pIndex$[ebp]
jne	SHORT $LN4@sqlite3Unl
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR [eax+20], edx
mov	eax, DWORD PTR _pIndex$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_freeIndex
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
or	eax, 2
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3UnlinkAndDeleteTable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$[ebp], eax
push	0
mov	edx, DWORD PTR _zTabName$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	eax, DWORD PTR _zTabName$[ebp]
push	eax
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, 8
push	edx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTable
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
or	eax, 2
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FindIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	DWORD PTR _p$[ebp], 0
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@sqlite3Fin
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN3@sqlite3Fin
cmp	DWORD PTR _i$[ebp], 2
jge	SHORT $LN8@sqlite3Fin
mov	ecx, DWORD PTR _i$[ebp]
xor	ecx, 1
mov	DWORD PTR tv71[ebp], ecx
jmp	SHORT $LN9@sqlite3Fin
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR tv71[ebp], edx
mov	eax, DWORD PTR tv71[ebp]
mov	DWORD PTR _j$2[ebp], eax
mov	ecx, DWORD PTR _j$2[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
mov	DWORD PTR _pSchema$1[ebp], ecx
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN2@sqlite3Fin
mov	edx, DWORD PTR _j$2[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Fin
jmp	SHORT $LN4@sqlite3Fin
mov	ecx, DWORD PTR _nName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pSchema$1[ebp]
add	eax, 24					
push	eax
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Fin
jmp	SHORT $LN3@sqlite3Fin
jmp	$LN4@sqlite3Fin
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LocateTableItem PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN2@sqlite3Loc
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$1[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _iDb$1[ebp]
shl	ecx, 4
mov	edx, DWORD PTR [eax+16]
mov	eax, DWORD PTR [edx+ecx]
mov	DWORD PTR _zDb$[ebp], eax
jmp	SHORT $LN1@sqlite3Loc
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _zDb$[ebp], edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _isView$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateTable
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3LocateTable PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN4@sqlite3Loc
xor	eax, eax
jmp	$LN5@sqlite3Loc
mov	ecx, DWORD PTR _zDbase$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN3@sqlite3Loc
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN7@sqlite3Loc
mov	DWORD PTR tv74[ebp], OFFSET $SG106055
jmp	SHORT $LN8@sqlite3Loc
mov	DWORD PTR tv74[ebp], OFFSET $SG106056
mov	edx, DWORD PTR tv74[ebp]
mov	DWORD PTR _zMsg$1[ebp], edx
cmp	DWORD PTR _zDbase$[ebp], 0
je	SHORT $LN2@sqlite3Loc
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _zDbase$[ebp]
push	ecx
mov	edx, DWORD PTR _zMsg$1[ebp]
push	edx
push	OFFSET $SG106058
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 20					
jmp	SHORT $LN1@sqlite3Loc
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _zMsg$1[ebp]
push	edx
push	OFFSET $SG106060
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+17], 1
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FindTable PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _p$[ebp], 0
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@sqlite3Fin
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN3@sqlite3Fin
cmp	DWORD PTR _i$[ebp], 2
jge	SHORT $LN8@sqlite3Fin
mov	ecx, DWORD PTR _i$[ebp]
xor	ecx, 1
mov	DWORD PTR tv71[ebp], ecx
jmp	SHORT $LN9@sqlite3Fin
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR tv71[ebp], edx
mov	eax, DWORD PTR tv71[ebp]
mov	DWORD PTR _j$1[ebp], eax
cmp	DWORD PTR _zDatabase$[ebp], 0
je	SHORT $LN2@sqlite3Fin
mov	ecx, DWORD PTR _j$1[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _zDatabase$[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Fin
jmp	SHORT $LN4@sqlite3Fin
mov	eax, DWORD PTR _nName$[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _j$1[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
add	edx, 8
push	edx
call	_sqlite3HashFind
add	esp, 12					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Fin
jmp	SHORT $LN3@sqlite3Fin
jmp	$LN4@sqlite3Fin
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprIfFalse PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _op$[ebp], 0
mov	DWORD PTR _regFree1$[ebp], 0
mov	DWORD PTR _regFree2$[ebp], 0
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN19@sqlite3Exp
jmp	$LN20@sqlite3Exp
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN18@sqlite3Exp
jmp	$LN20@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx]
xor	eax, 1
mov	DWORD PTR _op$[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv72[ebp], edx
mov	eax, DWORD PTR tv72[ebp]
sub	eax, 19					
mov	DWORD PTR tv72[ebp], eax
cmp	DWORD PTR tv72[ebp], 129		
ja	$LN5@sqlite3Exp
mov	ecx, DWORD PTR tv72[ebp]
movzx	edx, BYTE PTR $LN26@sqlite3Exp[ecx]
jmp	DWORD PTR $LN27@sqlite3Exp[edx*4]
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePush
add	esp, 4
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePop
add	esp, 4
jmp	$LN16@sqlite3Exp
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _d2$2[ebp], eax
mov	ecx, DWORD PTR _jumpIfNull$[ebp]
xor	ecx, 8
push	ecx
mov	edx, DWORD PTR _d2$2[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprIfTrue
add	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePush
add	esp, 4
mov	ecx, DWORD PTR _jumpIfNull$[ebp]
push	ecx
mov	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	eax, DWORD PTR _d2$2[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePop
add	esp, 4
jmp	$LN16@sqlite3Exp
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprIfTrue
add	esp, 16					
jmp	$LN16@sqlite3Exp
lea	edx, DWORD PTR _regFree1$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	eax, DWORD PTR _regFree2$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
mov	ecx, DWORD PTR _jumpIfNull$[ebp]
push	ecx
mov	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _r2$[ebp]
push	eax
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_codeCompare
add	esp, 32					
jmp	$LN16@sqlite3Exp
lea	edx, DWORD PTR _regFree1$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	eax, DWORD PTR _regFree2$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 73					
jne	SHORT $LN22@sqlite3Exp
mov	DWORD PTR tv172[ebp], 78		
jmp	SHORT $LN23@sqlite3Exp
mov	DWORD PTR tv172[ebp], 79		
mov	eax, DWORD PTR tv172[ebp]
mov	DWORD PTR _op$[ebp], eax
push	128					
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _r2$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_codeCompare
add	esp, 32					
jmp	$LN16@sqlite3Exp
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
mov	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN16@sqlite3Exp
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_exprCodeBetween
add	esp, 20					
jmp	$LN16@sqlite3Exp
cmp	DWORD PTR _jumpIfNull$[ebp], 0
je	SHORT $LN7@sqlite3Exp
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeIN
add	esp, 16					
jmp	SHORT $LN6@sqlite3Exp
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _destIfNull$1[ebp], eax
mov	eax, DWORD PTR _destIfNull$1[ebp]
push	eax
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeIN
add	esp, 16					
mov	ecx, DWORD PTR _destIfNull$1[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	SHORT $LN16@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
call	_exprAlwaysFalse
add	esp, 4
test	eax, eax
je	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN16@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
call	_exprAlwaysTrue
add	esp, 4
test	eax, eax
je	SHORT $LN2@sqlite3Exp
jmp	SHORT $LN16@sqlite3Exp
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
cmp	DWORD PTR _jumpIfNull$[ebp], 0
je	SHORT $LN24@sqlite3Exp
mov	DWORD PTR tv226[ebp], 1
jmp	SHORT $LN25@sqlite3Exp
mov	DWORD PTR tv226[ebp], 0
mov	ecx, DWORD PTR tv226[ebp]
push	ecx
mov	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
push	45					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _regFree1$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _regFree2$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
DD	$LN13@sqlite3Exp
DD	$LN14@sqlite3Exp
DD	$LN15@sqlite3Exp
DD	$LN11@sqlite3Exp
DD	$LN9@sqlite3Exp
DD	$LN8@sqlite3Exp
DD	$LN10@sqlite3Exp
DD	$LN12@sqlite3Exp
DD	$LN5@sqlite3Exp
DB	0
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	1
DB	2
DB	3
DB	4
DB	5
DB	6
DB	6
DB	7
DB	7
DB	7
DB	7
DB	7
DB	7
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	3
ENDP
_sqlite3ExprIfTrue PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _op$[ebp], 0
mov	DWORD PTR _regFree1$[ebp], 0
mov	DWORD PTR _regFree2$[ebp], 0
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN17@sqlite3Exp
jmp	$LN18@sqlite3Exp
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN16@sqlite3Exp
jmp	$LN18@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _op$[ebp], eax
mov	ecx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv69[ebp], ecx
mov	edx, DWORD PTR tv69[ebp]
sub	edx, 19					
mov	DWORD PTR tv69[ebp], edx
cmp	DWORD PTR tv69[ebp], 129		
ja	$LN5@sqlite3Exp
mov	eax, DWORD PTR tv69[ebp]
movzx	ecx, BYTE PTR $LN26@sqlite3Exp[eax]
jmp	DWORD PTR $LN27@sqlite3Exp[ecx*4]
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _d2$2[ebp], eax
mov	eax, DWORD PTR _jumpIfNull$[ebp]
xor	eax, 8
push	eax
mov	ecx, DWORD PTR _d2$2[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePush
add	esp, 4
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprIfTrue
add	esp, 16					
mov	edx, DWORD PTR _d2$2[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePop
add	esp, 4
jmp	$LN14@sqlite3Exp
mov	edx, DWORD PTR _jumpIfNull$[ebp]
push	edx
mov	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfTrue
add	esp, 16					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePush
add	esp, 4
mov	edx, DWORD PTR _jumpIfNull$[ebp]
push	edx
mov	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfTrue
add	esp, 16					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePop
add	esp, 4
jmp	$LN14@sqlite3Exp
mov	edx, DWORD PTR _jumpIfNull$[ebp]
push	edx
mov	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfFalse
add	esp, 16					
jmp	$LN14@sqlite3Exp
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	edx, DWORD PTR _regFree2$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _r2$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_codeCompare
add	esp, 32					
jmp	$LN14@sqlite3Exp
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	edx, DWORD PTR _regFree2$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
cmp	DWORD PTR _op$[ebp], 73			
jne	SHORT $LN20@sqlite3Exp
mov	DWORD PTR tv167[ebp], 79		
jmp	SHORT $LN21@sqlite3Exp
mov	DWORD PTR tv167[ebp], 78		
mov	eax, DWORD PTR tv167[ebp]
mov	DWORD PTR _op$[ebp], eax
push	128					
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _r2$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_codeCompare
add	esp, 32					
jmp	$LN14@sqlite3Exp
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
mov	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN14@sqlite3Exp
mov	eax, DWORD PTR _jumpIfNull$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _dest$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_exprCodeBetween
add	esp, 20					
jmp	$LN14@sqlite3Exp
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _destIfFalse$3[ebp], eax
cmp	DWORD PTR _jumpIfNull$[ebp], 0
je	SHORT $LN22@sqlite3Exp
mov	edx, DWORD PTR _dest$[ebp]
mov	DWORD PTR tv195[ebp], edx
jmp	SHORT $LN23@sqlite3Exp
mov	eax, DWORD PTR _destIfFalse$3[ebp]
mov	DWORD PTR tv195[ebp], eax
mov	ecx, DWORD PTR tv195[ebp]
mov	DWORD PTR _destIfNull$1[ebp], ecx
mov	edx, DWORD PTR _destIfNull$1[ebp]
push	edx
mov	eax, DWORD PTR _destIfFalse$3[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeIN
add	esp, 16					
mov	eax, DWORD PTR _dest$[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _destIfFalse$3[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	SHORT $LN14@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
call	_exprAlwaysTrue
add	esp, 4
test	eax, eax
je	SHORT $LN4@sqlite3Exp
mov	edx, DWORD PTR _dest$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN14@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
call	_exprAlwaysFalse
add	esp, 4
test	eax, eax
je	SHORT $LN2@sqlite3Exp
jmp	SHORT $LN14@sqlite3Exp
lea	edx, DWORD PTR _regFree1$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
cmp	DWORD PTR _jumpIfNull$[ebp], 0
je	SHORT $LN24@sqlite3Exp
mov	DWORD PTR tv222[ebp], 1
jmp	SHORT $LN25@sqlite3Exp
mov	DWORD PTR tv222[ebp], 0
mov	edx, DWORD PTR tv222[ebp]
push	edx
mov	eax, DWORD PTR _dest$[ebp]
push	eax
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
push	44					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _regFree1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _regFree2$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN11@sqlite3Exp
DD	$LN12@sqlite3Exp
DD	$LN13@sqlite3Exp
DD	$LN9@sqlite3Exp
DD	$LN7@sqlite3Exp
DD	$LN6@sqlite3Exp
DD	$LN8@sqlite3Exp
DD	$LN10@sqlite3Exp
DD	$LN5@sqlite3Exp
DB	0
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	1
DB	2
DB	3
DB	4
DB	5
DB	6
DB	6
DB	7
DB	7
DB	7
DB	7
DB	7
DB	7
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	8
DB	3
ENDP
_sqlite3ExprCodeExprList PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
movzx	eax, BYTE PTR _flags$[ebp]
and	eax, 1
je	SHORT $LN12@sqlite3Exp
mov	DWORD PTR tv67[ebp], 33			
jmp	SHORT $LN13@sqlite3Exp
mov	DWORD PTR tv67[ebp], 34			
mov	cl, BYTE PTR tv67[ebp]
mov	BYTE PTR _copyOp$[ebp], cl
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+23]
test	edx, edx
jne	SHORT $LN9@sqlite3Exp
movzx	eax, BYTE PTR _flags$[ebp]
and	eax, -3					
mov	BYTE PTR _flags$[ebp], al
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pItem$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN8@sqlite3Exp
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pItem$[ebp]
add	ecx, 24					
mov	DWORD PTR _pItem$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _n$[ebp]
jge	$LN6@sqlite3Exp
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pExpr$3[ebp], ecx
movzx	edx, BYTE PTR _flags$[ebp]
and	edx, 2
je	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _pExpr$3[ebp]
push	eax
call	_sqlite3ExprIsConstant
add	esp, 4
test	eax, eax
je	SHORT $LN5@sqlite3Exp
push	0
mov	ecx, DWORD PTR _target$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$3[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeAtInit
add	esp, 16					
jmp	$LN4@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$3[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _inReg$2[ebp], eax
mov	ecx, DWORD PTR _target$[ebp]
add	ecx, DWORD PTR _i$[ebp]
cmp	DWORD PTR _inReg$2[ebp], ecx
je	$LN4@sqlite3Exp
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$1[ebp], eax
movzx	ecx, BYTE PTR _copyOp$[ebp]
cmp	ecx, 33					
jne	SHORT $LN2@sqlite3Exp
push	-1
mov	edx, DWORD PTR _v$1[ebp]
push	edx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	DWORD PTR _pOp$4[ebp], eax
mov	eax, DWORD PTR _pOp$4[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 33					
jne	SHORT $LN2@sqlite3Exp
mov	edx, DWORD PTR _pOp$4[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _pOp$4[ebp]
mov	edx, DWORD PTR [ecx+12]
lea	eax, DWORD PTR [eax+edx+1]
cmp	eax, DWORD PTR _inReg$2[ebp]
jne	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pOp$4[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _pOp$4[ebp]
mov	ecx, DWORD PTR [eax+12]
lea	edx, DWORD PTR [edx+ecx+1]
mov	eax, DWORD PTR _target$[ebp]
add	eax, DWORD PTR _i$[ebp]
cmp	edx, eax
jne	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pOp$4[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, 1
mov	eax, DWORD PTR _pOp$4[ebp]
mov	DWORD PTR [eax+12], edx
jmp	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _inReg$2[ebp]
push	edx
movzx	eax, BYTE PTR _copyOp$[ebp]
push	eax
mov	ecx, DWORD PTR _v$1[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN7@sqlite3Exp
mov	eax, DWORD PTR _n$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeAndCache PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv70[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv70[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv70[ebp]
mov	DWORD PTR _iMem$[ebp], eax
mov	ecx, DWORD PTR _iMem$[ebp]
push	ecx
mov	edx, DWORD PTR _target$[ebp]
push	edx
push	33					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _iMem$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
call	_exprToRegister
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeTarget PROC
push	ebp
mov	ebp, esp
sub	esp, 296				
push	esi
push	edi
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _target$[ebp]
mov	DWORD PTR _inReg$[ebp], edx
mov	DWORD PTR _regFree1$[ebp], 0
mov	DWORD PTR _regFree2$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN84@sqlite3Exp
xor	eax, eax
jmp	$LN85@sqlite3Exp
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN83@sqlite3Exp
mov	DWORD PTR _op$[ebp], 101		
jmp	SHORT $LN82@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _op$[ebp], eax
mov	ecx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv70[ebp], ecx
mov	edx, DWORD PTR tv70[ebp]
sub	edx, 19					
mov	DWORD PTR tv70[ebp], edx
cmp	DWORD PTR tv70[ebp], 140		
ja	$LN14@sqlite3Exp
mov	eax, DWORD PTR tv70[ebp]
movzx	ecx, BYTE PTR $LN91@sqlite3Exp[eax]
jmp	DWORD PTR $LN92@sqlite3Exp[ecx*4]
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	DWORD PTR _pAggInfo$26[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, WORD PTR [ecx+34]
imul	eax, edx, 24
mov	ecx, DWORD PTR _pAggInfo$26[ebp]
add	eax, DWORD PTR [ecx+28]
mov	DWORD PTR _pCol$13[ebp], eax
mov	edx, DWORD PTR _pAggInfo$26[ebp]
movzx	eax, BYTE PTR [edx]
test	eax, eax
jne	SHORT $LN78@sqlite3Exp
mov	ecx, DWORD PTR _pCol$13[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _inReg$[ebp], edx
jmp	$LN80@sqlite3Exp
jmp	SHORT $LN75@sqlite3Exp
mov	eax, DWORD PTR _pAggInfo$26[ebp]
movzx	ecx, BYTE PTR [eax+1]
test	ecx, ecx
je	SHORT $LN75@sqlite3Exp
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _pCol$13[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pAggInfo$26[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	$LN80@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR _iTab$22[ebp], eax
cmp	DWORD PTR _iTab$22[ebp], 0
jge	SHORT $LN74@sqlite3Exp
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+92], 0
jle	SHORT $LN73@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
movsx	eax, WORD PTR [edx+32]
mov	ecx, DWORD PTR _pParse$[ebp]
add	eax, DWORD PTR [ecx+92]
mov	DWORD PTR _inReg$[ebp], eax
jmp	$LN80@sqlite3Exp
jmp	SHORT $LN74@sqlite3Exp
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+96]
mov	DWORD PTR _iTab$22[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
movzx	edx, BYTE PTR [ecx+38]
push	edx
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, DWORD PTR _iTab$22[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
movsx	eax, WORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeGetColumn
add	esp, 24					
mov	DWORD PTR _inReg$[ebp], eax
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_codeInteger
add	esp, 16					
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_codeReal
add	esp, 16					
jmp	$LN80@sqlite3Exp
push	0
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	0
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	$LN80@sqlite3Exp
mov	eax, DWORD PTR _target$[ebp]
push	eax
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN80@sqlite3Exp
mov	edx, 1
shl	edx, 1
mov	eax, DWORD PTR _pExpr$[ebp]
add	edx, DWORD PTR [eax+8]
mov	DWORD PTR _z$16[ebp], edx
mov	ecx, DWORD PTR _z$16[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
sub	eax, 1
mov	DWORD PTR _n$11[ebp], eax
mov	edx, DWORD PTR _n$11[ebp]
push	edx
mov	eax, DWORD PTR _z$16[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeDb
add	esp, 4
push	eax
call	_sqlite3HexToBlob
add	esp, 12					
mov	DWORD PTR _zBlob$6[ebp], eax
push	-1
mov	edx, DWORD PTR _zBlob$6[ebp]
push	edx
push	0
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	eax, DWORD PTR _n$11[ebp]
cdq
sub	eax, edx
sar	eax, 1
push	eax
push	30					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	$LN80@sqlite3Exp
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
movsx	ecx, WORD PTR [eax+32]
push	ecx
push	31					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, 1
shl	eax, 0
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+8]
movsx	eax, BYTE PTR [edx+eax]
test	eax, eax
je	SHORT $LN65@sqlite3Exp
push	-2					
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, WORD PTR [ecx+32]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+472]
mov	edx, DWORD PTR [ecx+edx*4-4]
push	edx
push	-1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	DWORD PTR _inReg$[ebp], edx
jmp	$LN80@sqlite3Exp
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _inReg$[ebp], eax
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _inReg$[ebp], eax
push	0
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3AffinityType
add	esp, 8
movsx	ecx, al
mov	DWORD PTR _aff$2[ebp], ecx
mov	edx, DWORD PTR _aff$2[ebp]
add	edx, 46					
mov	DWORD PTR _to_op$3[ebp], edx
mov	eax, DWORD PTR _inReg$[ebp]
cmp	eax, DWORD PTR _target$[ebp]
je	SHORT $LN61@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
mov	edx, DWORD PTR _inReg$[ebp]
push	edx
push	34					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _target$[ebp]
mov	DWORD PTR _inReg$[ebp], ecx
mov	edx, DWORD PTR _inReg$[ebp]
push	edx
mov	eax, DWORD PTR _to_op$3[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
push	1
mov	edx, DWORD PTR _inReg$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheAffinityChange
add	esp, 12					
jmp	$LN80@sqlite3Exp
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	edx, DWORD PTR _regFree2$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
push	16					
mov	eax, DWORD PTR _inReg$[ebp]
push	eax
mov	ecx, DWORD PTR _r2$[ebp]
push	ecx
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeCompare
add	esp, 32					
jmp	$LN80@sqlite3Exp
lea	eax, DWORD PTR _regFree1$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	ecx, DWORD PTR _regFree2$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
cmp	DWORD PTR _op$[ebp], 73			
jne	SHORT $LN87@sqlite3Exp
mov	DWORD PTR tv265[ebp], 79		
jmp	SHORT $LN88@sqlite3Exp
mov	DWORD PTR tv265[ebp], 78		
mov	edx, DWORD PTR tv265[ebp]
mov	DWORD PTR _op$[ebp], edx
push	144					
mov	eax, DWORD PTR _inReg$[ebp]
push	eax
mov	ecx, DWORD PTR _r2$[ebp]
push	ecx
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeCompare
add	esp, 32					
jmp	$LN80@sqlite3Exp
lea	eax, DWORD PTR _regFree1$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	ecx, DWORD PTR _regFree2$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _r1$[ebp]
push	eax
mov	ecx, DWORD PTR _r2$[ebp]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pLeft$28[ebp], edx
mov	eax, DWORD PTR _pLeft$28[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 132				
jne	SHORT $LN56@sqlite3Exp
mov	edx, DWORD PTR _target$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pLeft$28[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_codeInteger
add	esp, 16					
jmp	$LN55@sqlite3Exp
mov	edx, DWORD PTR _pLeft$28[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 133				
jne	SHORT $LN54@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _pLeft$28[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_codeReal
add	esp, 16					
jmp	SHORT $LN55@sqlite3Exp
mov	BYTE PTR _tempX$[ebp], 132		
mov	DWORD PTR _tempX$[ebp+4], 17408		
mov	DWORD PTR _tempX$[ebp+8], 0
lea	edx, DWORD PTR _regFree1$[ebp]
push	edx
lea	eax, DWORD PTR _tempX$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	edx, DWORD PTR _regFree2$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
mov	edx, DWORD PTR _r2$[ebp]
push	edx
push	90					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _target$[ebp]
mov	DWORD PTR _inReg$[ebp], ecx
jmp	$LN80@sqlite3Exp
lea	edx, DWORD PTR _regFree1$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
mov	eax, DWORD PTR _target$[ebp]
mov	DWORD PTR _inReg$[ebp], eax
mov	ecx, DWORD PTR _inReg$[ebp]
push	ecx
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN80@sqlite3Exp
mov	edx, DWORD PTR _target$[ebp]
push	edx
push	1
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$5[ebp], eax
push	-1
mov	edx, DWORD PTR _target$[ebp]
push	edx
push	37					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addr$5[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN80@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	DWORD PTR _pInfo$9[ebp], ecx
cmp	DWORD PTR _pInfo$9[ebp], 0
jne	SHORT $LN49@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	OFFSET $SG104236
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN48@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
movsx	eax, WORD PTR [edx+34]
shl	eax, 4
mov	ecx, DWORD PTR _pInfo$9[ebp]
mov	edx, DWORD PTR [ecx+40]
mov	eax, DWORD PTR [edx+eax+8]
mov	DWORD PTR _inReg$[ebp], eax
jmp	$LN80@sqlite3Exp
mov	DWORD PTR _constMask$31[ebp], 0
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	al, BYTE PTR [edx+77]
mov	BYTE PTR _enc$33[ebp], al
mov	DWORD PTR _pColl$30[ebp], 0
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 16384				
je	SHORT $LN46@sqlite3Exp
mov	DWORD PTR _pFarg$38[ebp], 0
jmp	SHORT $LN45@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pFarg$38[ebp], ecx
cmp	DWORD PTR _pFarg$38[ebp], 0
je	SHORT $LN89@sqlite3Exp
mov	edx, DWORD PTR _pFarg$38[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR tv372[ebp], eax
jmp	SHORT $LN90@sqlite3Exp
mov	DWORD PTR tv372[ebp], 0
mov	ecx, DWORD PTR tv372[ebp]
mov	DWORD PTR _nFarg$36[ebp], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _zId$20[ebp], eax
mov	ecx, DWORD PTR _zId$20[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nId$7[ebp], eax
push	0
movzx	edx, BYTE PTR _enc$33[ebp]
push	edx
mov	eax, DWORD PTR _nFarg$36[ebp]
push	eax
mov	ecx, DWORD PTR _nId$7[ebp]
push	ecx
mov	edx, DWORD PTR _zId$20[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindFunction
add	esp, 24					
mov	DWORD PTR _pDef$37[ebp], eax
cmp	DWORD PTR _pDef$37[ebp], 0
jne	SHORT $LN44@sqlite3Exp
mov	ecx, DWORD PTR _zId$20[ebp]
push	ecx
mov	edx, DWORD PTR _nId$7[ebp]
push	edx
push	OFFSET $SG104253
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _pDef$37[ebp]
movzx	edx, WORD PTR [ecx+2]
and	edx, 512				
je	$LN43@sqlite3Exp
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _endCoalesce$8[ebp], eax
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
mov	edx, 24					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pFarg$38[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
mov	DWORD PTR _i$35[ebp], 1
jmp	SHORT $LN42@sqlite3Exp
mov	edx, DWORD PTR _i$35[ebp]
add	edx, 1
mov	DWORD PTR _i$35[ebp], edx
mov	eax, DWORD PTR _i$35[ebp]
cmp	eax, DWORD PTR _nFarg$36[ebp]
jge	SHORT $LN40@sqlite3Exp
mov	ecx, DWORD PTR _endCoalesce$8[ebp]
push	ecx
mov	edx, DWORD PTR _target$[ebp]
push	edx
push	77					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheRemove
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePush
add	esp, 4
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
imul	edx, DWORD PTR _i$35[ebp], 24
mov	eax, DWORD PTR _pFarg$38[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePop
add	esp, 4
jmp	SHORT $LN41@sqlite3Exp
mov	edx, DWORD PTR _endCoalesce$8[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _pDef$37[ebp]
movzx	edx, WORD PTR [ecx+2]
and	edx, 1024				
je	SHORT $LN39@sqlite3Exp
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pFarg$38[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
jmp	$LN80@sqlite3Exp
mov	DWORD PTR _i$35[ebp], 0
jmp	SHORT $LN38@sqlite3Exp
mov	ecx, DWORD PTR _i$35[ebp]
add	ecx, 1
mov	DWORD PTR _i$35[ebp], ecx
mov	edx, DWORD PTR _i$35[ebp]
cmp	edx, DWORD PTR _nFarg$36[ebp]
jge	SHORT $LN36@sqlite3Exp
cmp	DWORD PTR _i$35[ebp], 32		
jge	SHORT $LN35@sqlite3Exp
imul	eax, DWORD PTR _i$35[ebp], 24
mov	ecx, DWORD PTR _pFarg$38[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
call	_sqlite3ExprIsConstant
add	esp, 4
test	eax, eax
je	SHORT $LN35@sqlite3Exp
mov	edx, 1
mov	ecx, DWORD PTR _i$35[ebp]
shl	edx, cl
or	edx, DWORD PTR _constMask$31[ebp]
mov	DWORD PTR _constMask$31[ebp], edx
mov	eax, DWORD PTR _pDef$37[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 32					
je	SHORT $LN34@sqlite3Exp
cmp	DWORD PTR _pColl$30[ebp], 0
jne	SHORT $LN34@sqlite3Exp
imul	edx, DWORD PTR _i$35[ebp], 24
mov	eax, DWORD PTR _pFarg$38[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCollSeq
add	esp, 8
mov	DWORD PTR _pColl$30[ebp], eax
jmp	SHORT $LN37@sqlite3Exp
cmp	DWORD PTR _pFarg$38[ebp], 0
je	$LN33@sqlite3Exp
cmp	DWORD PTR _constMask$31[ebp], 0
je	SHORT $LN32@sqlite3Exp
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _r1$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, DWORD PTR _nFarg$36[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], ecx
jmp	SHORT $LN31@sqlite3Exp
mov	eax, DWORD PTR _nFarg$36[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _r1$[ebp], eax
mov	edx, DWORD PTR _pDef$37[ebp]
movzx	eax, WORD PTR [edx+2]
and	eax, 192				
je	SHORT $LN30@sqlite3Exp
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pFarg$38[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	al, BYTE PTR [edx]
mov	BYTE PTR _exprOp$34[ebp], al
movzx	ecx, BYTE PTR _exprOp$34[ebp]
cmp	ecx, 154				
je	SHORT $LN28@sqlite3Exp
movzx	edx, BYTE PTR _exprOp$34[ebp]
cmp	edx, 156				
jne	SHORT $LN30@sqlite3Exp
mov	eax, DWORD PTR _pDef$37[ebp]
movzx	ecx, WORD PTR [eax+2]
and	ecx, 192				
mov	edx, 24					
imul	eax, edx, 0
mov	edx, DWORD PTR _pFarg$38[ebp]
mov	edx, DWORD PTR [edx+4]
mov	eax, DWORD PTR [edx+eax]
mov	BYTE PTR [eax+38], cl
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePush
add	esp, 4
push	3
mov	edx, DWORD PTR _r1$[ebp]
push	edx
mov	eax, DWORD PTR _pFarg$38[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeExprList
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePop
add	esp, 4
jmp	SHORT $LN27@sqlite3Exp
mov	DWORD PTR _r1$[ebp], 0
cmp	DWORD PTR _nFarg$36[ebp], 2
jl	SHORT $LN26@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 128				
je	SHORT $LN26@sqlite3Exp
mov	edx, 24					
shl	edx, 0
mov	eax, DWORD PTR _pFarg$38[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _nFarg$36[ebp]
push	eax
mov	ecx, DWORD PTR _pDef$37[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VtabOverloadFunction
add	esp, 16					
mov	DWORD PTR _pDef$37[ebp], eax
jmp	SHORT $LN25@sqlite3Exp
cmp	DWORD PTR _nFarg$36[ebp], 0
jle	SHORT $LN25@sqlite3Exp
mov	eax, 24					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pFarg$38[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _nFarg$36[ebp]
push	edx
mov	eax, DWORD PTR _pDef$37[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabOverloadFunction
add	esp, 16					
mov	DWORD PTR _pDef$37[ebp], eax
mov	edx, DWORD PTR _pDef$37[ebp]
movzx	eax, WORD PTR [edx+2]
and	eax, 32					
je	SHORT $LN23@sqlite3Exp
cmp	DWORD PTR _pColl$30[ebp], 0
jne	SHORT $LN22@sqlite3Exp
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pColl$30[ebp], edx
push	-4					
mov	eax, DWORD PTR _pColl$30[ebp]
push	eax
push	0
push	0
push	0
push	36					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	-5					
mov	edx, DWORD PTR _pDef$37[ebp]
push	edx
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
mov	edx, DWORD PTR _constMask$31[ebp]
push	edx
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
movzx	ecx, BYTE PTR _nFarg$36[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
cmp	DWORD PTR _nFarg$36[ebp], 0
je	SHORT $LN21@sqlite3Exp
cmp	DWORD PTR _constMask$31[ebp], 0
jne	SHORT $LN21@sqlite3Exp
mov	eax, DWORD PTR _nFarg$36[ebp]
push	eax
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempRange
add	esp, 12					
jmp	$LN80@sqlite3Exp
push	0
push	0
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeSubselect
add	esp, 16					
mov	DWORD PTR _inReg$[ebp], eax
jmp	$LN80@sqlite3Exp
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _destIfFalse$10[ebp], eax
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _destIfNull$12[ebp], eax
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _destIfNull$12[ebp]
push	eax
mov	ecx, DWORD PTR _destIfFalse$10[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeIN
add	esp, 16					
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	1
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _destIfFalse$10[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
push	0
mov	edx, DWORD PTR _target$[ebp]
push	edx
push	37					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _destIfNull$12[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	$LN80@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pLeft$24[ebp], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pLItem$27[ebp], ecx
mov	edx, DWORD PTR _pLItem$27[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pRight$29[ebp], eax
lea	ecx, DWORD PTR _regFree1$[ebp]
push	ecx
mov	edx, DWORD PTR _pLeft$24[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r1$[ebp], eax
lea	ecx, DWORD PTR _regFree2$[ebp]
push	ecx
mov	edx, DWORD PTR _pRight$29[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r3$[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r4$[ebp], eax
push	16					
mov	eax, DWORD PTR _r3$[ebp]
push	eax
mov	ecx, DWORD PTR _r2$[ebp]
push	ecx
mov	edx, DWORD PTR _r1$[ebp]
push	edx
push	83					
mov	eax, DWORD PTR _pRight$29[ebp]
push	eax
mov	ecx, DWORD PTR _pLeft$24[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeCompare
add	esp, 32					
mov	eax, DWORD PTR _pLItem$27[ebp]
add	eax, 24					
mov	DWORD PTR _pLItem$27[ebp], eax
mov	ecx, DWORD PTR _pLItem$27[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pRight$29[ebp], edx
mov	eax, DWORD PTR _regFree2$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
lea	edx, DWORD PTR _regFree2$[ebp]
push	edx
mov	eax, DWORD PTR _pRight$29[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTemp
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
push	16					
mov	edx, DWORD PTR _r4$[ebp]
push	edx
mov	eax, DWORD PTR _r2$[ebp]
push	eax
mov	ecx, DWORD PTR _r1$[ebp]
push	ecx
push	81					
mov	edx, DWORD PTR _pRight$29[ebp]
push	edx
mov	eax, DWORD PTR _pLeft$24[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_codeCompare
add	esp, 32					
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _r4$[ebp]
push	eax
mov	ecx, DWORD PTR _r3$[ebp]
push	ecx
push	72					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _r3$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _r4$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN80@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _inReg$[ebp], eax
jmp	$LN80@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+44]
mov	DWORD PTR _pTab$17[ebp], eax
mov	ecx, DWORD PTR _pTab$17[ebp]
movsx	edx, WORD PTR [ecx+38]
add	edx, 1
mov	eax, DWORD PTR _pExpr$[ebp]
imul	edx, DWORD PTR [eax+28]
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	eax, WORD PTR [ecx+32]
lea	ecx, DWORD PTR [edx+eax+1]
mov	DWORD PTR _p1$4[ebp], ecx
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _p1$4[ebp]
push	eax
push	129					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pExpr$[ebp]
movsx	eax, WORD PTR [edx+32]
test	eax, eax
jl	SHORT $LN15@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, WORD PTR [ecx+32]
imul	eax, edx, 24
mov	ecx, DWORD PTR _pTab$17[ebp]
mov	edx, DWORD PTR [ecx+4]
movsx	eax, BYTE PTR [edx+eax+21]
cmp	eax, 101				
jne	SHORT $LN15@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	39					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	$LN80@sqlite3Exp
mov	DWORD PTR _pTest$23[ebp], 0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pEList$18[ebp], ecx
mov	edx, DWORD PTR _pEList$18[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _aListelem$21[ebp], eax
mov	ecx, DWORD PTR _pEList$18[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _nExpr$19[ebp], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _endLabel$14[ebp], eax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pX$25[ebp], edx
cmp	DWORD PTR _pX$25[ebp], 0
je	SHORT $LN13@sqlite3Exp
mov	ecx, 12					
mov	esi, DWORD PTR _pX$25[ebp]
lea	edi, DWORD PTR _tempX$[ebp]
rep movsd
lea	eax, DWORD PTR _regFree1$[ebp]
push	eax
mov	ecx, DWORD PTR _pX$25[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTemp
add	esp, 12					
push	eax
lea	eax, DWORD PTR _tempX$[ebp]
push	eax
call	_exprToRegister
add	esp, 8
mov	BYTE PTR _opCompare$1[ebp], 79		
lea	ecx, DWORD PTR _tempX$[ebp]
mov	DWORD PTR _opCompare$1[ebp+12], ecx
lea	edx, DWORD PTR _opCompare$1[ebp]
mov	DWORD PTR _pTest$23[ebp], edx
mov	DWORD PTR _regFree1$[ebp], 0
mov	DWORD PTR _i$32[ebp], 0
jmp	SHORT $LN12@sqlite3Exp
mov	eax, DWORD PTR _i$32[ebp]
add	eax, 2
mov	DWORD PTR _i$32[ebp], eax
mov	ecx, DWORD PTR _nExpr$19[ebp]
sub	ecx, 1
cmp	DWORD PTR _i$32[ebp], ecx
jge	$LN10@sqlite3Exp
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCachePush
add	esp, 4
cmp	DWORD PTR _pX$25[ebp], 0
je	SHORT $LN9@sqlite3Exp
imul	eax, DWORD PTR _i$32[ebp], 24
mov	ecx, DWORD PTR _aListelem$21[ebp]
mov	edx, DWORD PTR [ecx+eax]
mov	DWORD PTR _opCompare$1[ebp+16], edx
jmp	SHORT $LN8@sqlite3Exp
imul	eax, DWORD PTR _i$32[ebp], 24
mov	ecx, DWORD PTR _aListelem$21[ebp]
mov	edx, DWORD PTR [ecx+eax]
mov	DWORD PTR _pTest$23[ebp], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _nextCase$15[ebp], eax
push	8
mov	ecx, DWORD PTR _nextCase$15[ebp]
push	ecx
mov	edx, DWORD PTR _pTest$23[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
mov	edx, DWORD PTR _i$32[ebp]
add	edx, 1
imul	eax, edx, 24
mov	ecx, DWORD PTR _aListelem$21[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
mov	ecx, DWORD PTR _endLabel$14[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePop
add	esp, 4
mov	ecx, DWORD PTR _nextCase$15[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	$LN11@sqlite3Exp
mov	eax, DWORD PTR _nExpr$19[ebp]
and	eax, 1
je	SHORT $LN7@sqlite3Exp
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCachePush
add	esp, 4
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _nExpr$19[ebp]
sub	eax, 1
imul	ecx, eax, 24
mov	edx, DWORD PTR _pEList$18[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCode
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePop
add	esp, 4
jmp	SHORT $LN6@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _endLabel$14[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	$LN80@sqlite3Exp
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+412], 0
jne	SHORT $LN4@sqlite3Exp
push	OFFSET $SG104332
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
xor	eax, eax
jmp	$LN85@sqlite3Exp
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, BYTE PTR [ecx+1]
cmp	edx, 2
jne	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3MayAbort
add	esp, 4
mov	ecx, DWORD PTR _pExpr$[ebp]
movsx	edx, BYTE PTR [ecx+1]
cmp	edx, 4
jne	SHORT $LN2@sqlite3Exp
push	0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	0
push	4
push	0
push	24					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN80@sqlite3Exp
push	0
push	0
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
movsx	eax, BYTE PTR [edx+1]
push	eax
push	1811					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3HaltConstraint
add	esp, 24					
mov	edx, DWORD PTR _regFree1$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	ecx, DWORD PTR _regFree2$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	eax, DWORD PTR _inReg$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN52@sqlite3Exp
DD	$LN20@sqlite3Exp
DD	$LN63@sqlite3Exp
DD	$LN62@sqlite3Exp
DD	$LN5@sqlite3Exp
DD	$LN16@sqlite3Exp
DD	$LN58@sqlite3Exp
DD	$LN59@sqlite3Exp
DD	$LN18@sqlite3Exp
DD	$LN19@sqlite3Exp
DD	$LN51@sqlite3Exp
DD	$LN60@sqlite3Exp
DD	$LN17@sqlite3Exp
DD	$LN69@sqlite3Exp
DD	$LN68@sqlite3Exp
DD	$LN71@sqlite3Exp
DD	$LN70@sqlite3Exp
DD	$LN67@sqlite3Exp
DD	$LN66@sqlite3Exp
DD	$LN47@sqlite3Exp
DD	$LN75@sqlite3Exp
DD	$LN50@sqlite3Exp
DD	$LN79@sqlite3Exp
DD	$LN57@sqlite3Exp
DD	$LN64@sqlite3Exp
DD	$LN14@sqlite3Exp
DB	0
DB	1
DB	25					
DB	25					
DB	25					
DB	2
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	3
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	4
DB	25					
DB	25					
DB	25					
DB	25					
DB	5
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	6
DB	6
DB	7
DB	8
DB	9
DB	10					
DB	10					
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	11					
DB	25					
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	12					
DB	0
DB	13					
DB	25					
DB	25					
DB	25					
DB	14					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	1
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	15					
DB	16					
DB	17					
DB	18					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	25					
DB	7
DB	25					
DB	25					
DB	25					
DB	25					
DB	19					
DB	20					
DB	21					
DB	22					
DB	23					
DB	12					
DB	24					
ENDP
_sqlite3ExprCodeTemp PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
call	_sqlite3ExprSkipCollate
add	esp, 4
mov	DWORD PTR _pExpr$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+23]
test	edx, edx
je	$LN9@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 159				
je	$LN9@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
call	_sqlite3ExprIsConstantNotJoin
add	esp, 4
test	eax, eax
je	$LN9@sqlite3Exp
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+316]
mov	DWORD PTR _p$2[ebp], ecx
mov	edx, DWORD PTR _pReg$[ebp]
mov	DWORD PTR [edx], 0
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN8@sqlite3Exp
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$4[ebp], ecx
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _i$1[ebp], eax
jmp	SHORT $LN7@sqlite3Exp
mov	ecx, DWORD PTR _pItem$4[ebp]
add	ecx, 24					
mov	DWORD PTR _pItem$4[ebp], ecx
mov	edx, DWORD PTR _i$1[ebp]
sub	edx, 1
mov	DWORD PTR _i$1[ebp], edx
cmp	DWORD PTR _i$1[ebp], 0
jle	SHORT $LN8@sqlite3Exp
mov	eax, DWORD PTR _pItem$4[ebp]
mov	ecx, DWORD PTR [eax+16]
shr	ecx, 2
and	ecx, 1
je	SHORT $LN4@sqlite3Exp
push	-1
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pItem$4[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprCompare
add	esp, 12					
test	eax, eax
jne	SHORT $LN4@sqlite3Exp
mov	edx, DWORD PTR _pItem$4[ebp]
mov	eax, DWORD PTR [edx+20]
jmp	$LN10@sqlite3Exp
jmp	SHORT $LN6@sqlite3Exp
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv95[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv95[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv95[ebp]
mov	DWORD PTR _r2$[ebp], ecx
push	1
mov	edx, DWORD PTR _r2$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeAtInit
add	esp, 16					
jmp	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _r1$3[ebp], eax
mov	eax, DWORD PTR _r1$3[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _r2$[ebp], eax
mov	eax, DWORD PTR _r2$[ebp]
cmp	eax, DWORD PTR _r1$3[ebp]
jne	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pReg$[ebp]
mov	edx, DWORD PTR _r1$3[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _r1$3[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	edx, DWORD PTR _pReg$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _r2$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeAtInit PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+316]
mov	DWORD PTR _p$[ebp], ecx
push	0
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprDup
add	esp, 12					
mov	DWORD PTR _pExpr$[ebp], eax
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
imul	ecx, eax, 24
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$1[ebp], ecx
mov	eax, DWORD PTR _pItem$1[ebp]
mov	ecx, DWORD PTR _regDest$[ebp]
mov	DWORD PTR [eax+20], ecx
movzx	edx, BYTE PTR _reusable$[ebp]
and	edx, 1
shl	edx, 2
mov	eax, DWORD PTR _pItem$1[ebp]
mov	ecx, DWORD PTR [eax+16]
and	ecx, -5					
or	ecx, edx
mov	edx, DWORD PTR _pItem$1[ebp]
mov	DWORD PTR [edx+16], ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+316], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeFactorable PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+23]
test	ecx, ecx
je	SHORT $LN2@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
call	_sqlite3ExprIsConstant
add	esp, 4
test	eax, eax
je	SHORT $LN2@sqlite3Exp
push	0
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeAtInit
add	esp, 16					
jmp	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, DWORD PTR _pExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCode
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3ExprCode PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pExpr$[ebp], 0
je	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 159				
jne	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _target$[ebp]
push	edx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	33					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _target$[ebp]
push	ecx
mov	edx, DWORD PTR _pExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeTarget
add	esp, 12					
mov	DWORD PTR _inReg$[ebp], eax
mov	ecx, DWORD PTR _inReg$[ebp]
cmp	ecx, DWORD PTR _target$[ebp]
je	SHORT $LN4@sqlite3Exp
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _target$[ebp]
push	eax
mov	ecx, DWORD PTR _inReg$[ebp]
push	ecx
push	34					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCacheAffinityChange PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iCount$[ebp]
push	eax
mov	ecx, DWORD PTR _iStart$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheRemove
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3ExprCacheClear PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 116				
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 20					
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_cacheEntryClear
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 0
jmp	SHORT $LN3@sqlite3Exp
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCacheRemove PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _nReg$[ebp]
mov	ecx, DWORD PTR _iReg$[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
mov	DWORD PTR _iLast$[ebp], edx
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 116				
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 20					
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _r$1[ebp], ecx
mov	edx, DWORD PTR _r$1[ebp]
cmp	edx, DWORD PTR _iReg$[ebp]
jl	SHORT $LN1@sqlite3Exp
mov	eax, DWORD PTR _r$1[ebp]
cmp	eax, DWORD PTR _iLast$[ebp]
jg	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_cacheEntryClear
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 0
jmp	SHORT $LN3@sqlite3Exp
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCachePop PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+100]
sub	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+100], ecx
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 116				
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 20					
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [ecx+8]
cmp	eax, DWORD PTR [edx+100]
jle	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_cacheEntryClear
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 0
jmp	SHORT $LN3@sqlite3Exp
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCachePush PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+100]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+100], ecx
pop	ebp
ret	0
ENDP
_sqlite3ExprCacheStore PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, WORD PTR [ecx+60]
and	edx, 2
je	SHORT $LN10@sqlite3Exp
jmp	$LN11@sqlite3Exp
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 116				
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN9@sqlite3Exp
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 20					
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN7@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN6@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+100]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _iTab$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR _iCol$[ebp]
mov	WORD PTR [eax+4], cx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _iReg$[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+6], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+104]
mov	DWORD PTR [edx+16], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+104]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+104], eax
jmp	$LN11@sqlite3Exp
jmp	SHORT $LN8@sqlite3Exp
mov	DWORD PTR _minLru$[ebp], 2147483647	
mov	DWORD PTR _idxLru$[ebp], -1
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
add	edx, 116				
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 20					
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
cmp	eax, DWORD PTR _minLru$[ebp]
jge	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _idxLru$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _minLru$[ebp], eax
jmp	SHORT $LN4@sqlite3Exp
cmp	DWORD PTR _idxLru$[ebp], 0
jl	SHORT $LN11@sqlite3Exp
imul	ecx, DWORD PTR _idxLru$[ebp], 20
mov	edx, DWORD PTR _pParse$[ebp]
lea	eax, DWORD PTR [edx+ecx+116]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+100]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _iTab$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR _iCol$[ebp]
mov	WORD PTR [eax+4], cx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _iReg$[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+6], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+104]
mov	DWORD PTR [edx+16], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+104]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+104], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeMove PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _nReg$[ebp]
push	eax
mov	ecx, DWORD PTR _iTo$[ebp]
push	ecx
mov	edx, DWORD PTR _iFrom$[ebp]
push	edx
push	32					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
add	edx, 116				
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 20					
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN5@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _x$1[ebp], eax
mov	ecx, DWORD PTR _x$1[ebp]
cmp	ecx, DWORD PTR _iFrom$[ebp]
jl	SHORT $LN1@sqlite3Exp
mov	edx, DWORD PTR _iFrom$[ebp]
add	edx, DWORD PTR _nReg$[ebp]
cmp	DWORD PTR _x$1[ebp], edx
jge	SHORT $LN1@sqlite3Exp
mov	eax, DWORD PTR _iTo$[ebp]
sub	eax, DWORD PTR _iFrom$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+12]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+12], eax
jmp	SHORT $LN3@sqlite3Exp
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeGetColumnOfTable PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+36]
cmp	DWORD PTR _iCol$[ebp], ecx
jne	SHORT $LN5@sqlite3Exp
mov	edx, DWORD PTR _regOut$[ebp]
push	edx
mov	eax, DWORD PTR _iTabCur$[ebp]
push	eax
push	100					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN8@sqlite3Exp
mov	DWORD PTR tv76[ebp], 150		
jmp	SHORT $LN9@sqlite3Exp
mov	DWORD PTR tv76[ebp], 46			
mov	ecx, DWORD PTR tv76[ebp]
mov	DWORD PTR _op$1[ebp], ecx
mov	edx, DWORD PTR _iCol$[ebp]
mov	DWORD PTR _x$2[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
je	SHORT $LN2@sqlite3Exp
movzx	edx, WORD PTR _iCol$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
push	eax
call	_sqlite3ColumnOfIndex
add	esp, 8
movsx	ecx, ax
mov	DWORD PTR _x$2[ebp], ecx
mov	edx, DWORD PTR _regOut$[ebp]
push	edx
mov	eax, DWORD PTR _x$2[ebp]
push	eax
mov	ecx, DWORD PTR _iTabCur$[ebp]
push	ecx
mov	edx, DWORD PTR _op$1[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _iCol$[ebp], 0
jl	SHORT $LN6@sqlite3Exp
mov	ecx, DWORD PTR _regOut$[ebp]
push	ecx
mov	edx, DWORD PTR _iCol$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3ColumnDefault
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprCodeGetColumn PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
add	edx, 116				
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN6@sqlite3Exp
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 20					
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 10			
jge	SHORT $LN4@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+12], 0
jle	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _iTable$[ebp]
jne	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+4]
cmp	eax, DWORD PTR _iColumn$[ebp]
jne	SHORT $LN3@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+104]
mov	DWORD PTR [ecx+16], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+104]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+104], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCachePinRegister
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+12]
jmp	SHORT $LN7@sqlite3Exp
jmp	SHORT $LN5@sqlite3Exp
mov	edx, DWORD PTR _iReg$[ebp]
push	edx
mov	eax, DWORD PTR _iColumn$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
movzx	ecx, BYTE PTR _p5$[ebp]
test	ecx, ecx
je	SHORT $LN2@sqlite3Exp
movzx	edx, BYTE PTR _p5$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _iReg$[ebp]
push	ecx
mov	edx, DWORD PTR _iColumn$[ebp]
push	edx
mov	eax, DWORD PTR _iTable$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheStore
add	esp, 16					
mov	eax, DWORD PTR _iReg$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WhereOkOnePass PROC
push	ebp
mov	ebp, esp
push	8
mov	eax, DWORD PTR _pWInfo$[ebp]
add	eax, 60					
push	eax
mov	ecx, DWORD PTR _aiCur$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, BYTE PTR [edx+38]
pop	ebp
ret	0
ENDP
_sqlite3WhereBreakLabel PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [eax+52]
pop	ebp
ret	0
ENDP
_sqlite3WhereContinueLabel PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [eax+48]
pop	ebp
ret	0
ENDP
_sqlite3WhereIsSorted PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	eax, BYTE PTR [eax+37]
pop	ebp
ret	0
ENDP
_sqlite3WhereIsOrdered PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWInfo$[ebp]
movsx	eax, BYTE PTR [eax+36]
pop	ebp
ret	0
ENDP
_sqlite3WhereIsDistinct PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	eax, BYTE PTR [eax+40]
pop	ebp
ret	0
ENDP
_sqlite3WhereOutputRowCount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, WORD PTR [eax+32]
push	ecx
call	_sqlite3LogEstToInt
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3WhereEnd PROC
push	ebp
mov	ebp, esp
sub	esp, 76					
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pParse$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pTabList$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheClear
add	esp, 4
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, BYTE PTR [eax+41]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN41@sqlite3Whe
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	$LN39@sqlite3Whe
imul	eax, DWORD PTR _i$[ebp], 72
mov	ecx, DWORD PTR _pWInfo$[ebp]
lea	edx, DWORD PTR [ecx+eax+736]
mov	DWORD PTR _pLevel$[ebp], edx
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _pLoop$[ebp], ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	edx, DWORD PTR _pLevel$[ebp]
movzx	eax, BYTE PTR [edx+37]
cmp	eax, 156				
je	SHORT $LN38@sqlite3Whe
mov	ecx, DWORD PTR _pLevel$[ebp]
movzx	edx, BYTE PTR [ecx+38]
push	edx
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
mov	ecx, DWORD PTR _pLevel$[ebp]
movzx	edx, BYTE PTR [ecx+37]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _pLevel$[ebp]
movzx	edx, BYTE PTR [ecx+39]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 2048				
je	$LN37@sqlite3Whe
mov	eax, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [eax+48], 0
jle	$LN37@sqlite3Whe
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _j$8[ebp], edx
mov	eax, DWORD PTR _j$8[ebp]
sub	eax, 1
imul	ecx, eax, 12
mov	edx, DWORD PTR _pLevel$[ebp]
add	ecx, DWORD PTR [edx+52]
mov	DWORD PTR _pIn$10[ebp], ecx
jmp	SHORT $LN36@sqlite3Whe
mov	eax, DWORD PTR _j$8[ebp]
sub	eax, 1
mov	DWORD PTR _j$8[ebp], eax
mov	ecx, DWORD PTR _pIn$10[ebp]
sub	ecx, 12					
mov	DWORD PTR _pIn$10[ebp], ecx
cmp	DWORD PTR _j$8[ebp], 0
jle	SHORT $LN34@sqlite3Whe
mov	edx, DWORD PTR _pIn$10[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _pIn$10[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pIn$10[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pIn$10[ebp]
movzx	ecx, BYTE PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pIn$10[ebp]
mov	ecx, DWORD PTR [eax+4]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	SHORT $LN35@sqlite3Whe
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN33@sqlite3Whe
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+20]
sub	edx, 2
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _pLevel$[ebp]
cmp	DWORD PTR [ecx], 0
je	$LN32@sqlite3Whe
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	134					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$2[ebp], eax
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 64					
jne	SHORT $LN31@sqlite3Whe
imul	ecx, DWORD PTR _i$[ebp], 80
mov	edx, DWORD PTR _pTabList$[ebp]
mov	eax, DWORD PTR [edx+ecx+56]
push	eax
push	101					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 512				
je	SHORT $LN30@sqlite3Whe
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	101					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _pLevel$[ebp]
movzx	edx, BYTE PTR [ecx+37]
cmp	edx, 18					
jne	SHORT $LN29@sqlite3Whe
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
push	17					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN28@sqlite3Whe
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addr$2[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN40@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 736				
mov	DWORD PTR _pLevel$[ebp], ecx
jmp	SHORT $LN27@sqlite3Whe
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pLevel$[ebp]
add	eax, 72					
mov	DWORD PTR _pLevel$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, BYTE PTR [ecx+41]
cmp	DWORD PTR _i$[ebp], edx
jge	$LN25@sqlite3Whe
mov	DWORD PTR _pIdx$5[ebp], 0
mov	eax, DWORD PTR _pLevel$[ebp]
movzx	ecx, BYTE PTR [eax+36]
imul	edx, ecx, 80
mov	eax, DWORD PTR _pTabList$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _pTabItem$7[ebp], ecx
mov	edx, DWORD PTR _pTabItem$7[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pTab$6[ebp], eax
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pLoop$[ebp], edx
mov	eax, DWORD PTR _pTabItem$7[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 2
and	ecx, 1
je	$LN24@sqlite3Whe
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	$LN24@sqlite3Whe
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _last$3[ebp], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _k$11[ebp], eax
mov	ecx, DWORD PTR _k$11[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	DWORD PTR _pOp$12[ebp], eax
jmp	SHORT $LN23@sqlite3Whe
mov	eax, DWORD PTR _k$11[ebp]
add	eax, 1
mov	DWORD PTR _k$11[ebp], eax
mov	ecx, DWORD PTR _pOp$12[ebp]
add	ecx, 20					
mov	DWORD PTR _pOp$12[ebp], ecx
mov	edx, DWORD PTR _k$11[ebp]
cmp	edx, DWORD PTR _last$3[ebp]
jge	SHORT $LN21@sqlite3Whe
mov	eax, DWORD PTR _pOp$12[ebp]
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
je	SHORT $LN20@sqlite3Whe
jmp	SHORT $LN22@sqlite3Whe
mov	eax, DWORD PTR _pOp$12[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 46					
jne	SHORT $LN19@sqlite3Whe
mov	edx, DWORD PTR _pOp$12[ebp]
mov	BYTE PTR [edx], 33			
mov	eax, DWORD PTR _pOp$12[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _pTabItem$7[ebp]
add	ecx, DWORD PTR [edx+32]
mov	eax, DWORD PTR _pOp$12[ebp]
mov	DWORD PTR [eax+4], ecx
mov	ecx, DWORD PTR _pOp$12[ebp]
mov	edx, DWORD PTR _pOp$12[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR [ecx+8], eax
mov	ecx, DWORD PTR _pOp$12[ebp]
mov	DWORD PTR [ecx+12], 0
jmp	SHORT $LN18@sqlite3Whe
mov	edx, DWORD PTR _pOp$12[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 100				
jne	SHORT $LN18@sqlite3Whe
mov	ecx, DWORD PTR _pOp$12[ebp]
mov	BYTE PTR [ecx], 28			
mov	edx, DWORD PTR _pOp$12[ebp]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _pOp$12[ebp]
mov	DWORD PTR [eax+12], 0
jmp	$LN22@sqlite3Whe
jmp	$LN26@sqlite3Whe
mov	ecx, DWORD PTR _pTab$6[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 2
jne	$LN16@sqlite3Whe
mov	eax, DWORD PTR _pTab$6[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN16@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, WORD PTR [ecx+34]
and	edx, 16					
jne	SHORT $LN16@sqlite3Whe
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR _ws$4[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, BYTE PTR [edx+38]
test	eax, eax
jne	SHORT $LN15@sqlite3Whe
mov	ecx, DWORD PTR _ws$4[ebp]
and	ecx, 64					
jne	SHORT $LN15@sqlite3Whe
mov	edx, DWORD PTR _pTabItem$7[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
push	58					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	edx, DWORD PTR _ws$4[ebp]
and	edx, 512				
je	SHORT $LN16@sqlite3Whe
mov	eax, DWORD PTR _ws$4[ebp]
and	eax, 16640				
jne	SHORT $LN16@sqlite3Whe
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [edx+8]
cmp	edx, DWORD PTR [eax+ecx+60]
je	SHORT $LN16@sqlite3Whe
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 576				
je	SHORT $LN13@sqlite3Whe
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR _pIdx$5[ebp], eax
jmp	SHORT $LN12@sqlite3Whe
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 8192				
je	SHORT $LN12@sqlite3Whe
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _pIdx$5[ebp], ecx
cmp	DWORD PTR _pIdx$5[ebp], 0
je	$LN10@sqlite3Whe
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	$LN10@sqlite3Whe
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _last$3[ebp], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _k$11[ebp], eax
mov	ecx, DWORD PTR _k$11[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	DWORD PTR _pOp$12[ebp], eax
jmp	SHORT $LN9@sqlite3Whe
mov	eax, DWORD PTR _k$11[ebp]
add	eax, 1
mov	DWORD PTR _k$11[ebp], eax
mov	ecx, DWORD PTR _pOp$12[ebp]
add	ecx, 20					
mov	DWORD PTR _pOp$12[ebp], ecx
mov	edx, DWORD PTR _k$11[ebp]
cmp	edx, DWORD PTR _last$3[ebp]
jge	$LN10@sqlite3Whe
mov	eax, DWORD PTR _pOp$12[ebp]
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
je	SHORT $LN6@sqlite3Whe
jmp	SHORT $LN8@sqlite3Whe
mov	eax, DWORD PTR _pOp$12[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 46					
jne	SHORT $LN5@sqlite3Whe
mov	edx, DWORD PTR _pOp$12[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _x$9[ebp], eax
mov	ecx, DWORD PTR _pTab$6[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
je	SHORT $LN4@sqlite3Whe
mov	eax, DWORD PTR _pTab$6[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$1[ebp], eax
mov	ecx, DWORD PTR _pPk$1[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _x$9[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
mov	DWORD PTR _x$9[ebp], ecx
movzx	edx, WORD PTR _x$9[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$5[ebp]
push	eax
call	_sqlite3ColumnOfIndex
add	esp, 8
movsx	ecx, ax
mov	DWORD PTR _x$9[ebp], ecx
cmp	DWORD PTR _x$9[ebp], 0
jl	SHORT $LN3@sqlite3Whe
mov	edx, DWORD PTR _pOp$12[ebp]
mov	eax, DWORD PTR _x$9[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pOp$12[ebp]
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+4], eax
jmp	SHORT $LN2@sqlite3Whe
mov	ecx, DWORD PTR _pOp$12[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 100				
jne	SHORT $LN2@sqlite3Whe
mov	eax, DWORD PTR _pOp$12[ebp]
mov	ecx, DWORD PTR _pLevel$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _pOp$12[ebp]
mov	BYTE PTR [eax], 109			
jmp	$LN8@sqlite3Whe
jmp	$LN26@sqlite3Whe
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR [ecx+424], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_whereInfoFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WhereBegin PROC
push	ebp
mov	ebp, esp
sub	esp, 160				
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
push	20					
push	0
lea	ecx, DWORD PTR _sWLB$[ebp]
push	ecx
call	_memset
add	esp, 12					
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN78@sqlite3Whe
mov	edx, DWORD PTR _pOrderBy$[ebp]
cmp	DWORD PTR [edx], 64			
jl	SHORT $LN78@sqlite3Whe
mov	DWORD PTR _pOrderBy$[ebp], 0
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	DWORD PTR _sWLB$[ebp+8], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, WORD PTR [ecx+60]
and	edx, 32					
je	SHORT $LN77@sqlite3Whe
movzx	eax, WORD PTR _wctrlFlags$[ebp]
and	eax, -1025				
mov	WORD PTR _wctrlFlags$[ebp], ax
mov	ecx, DWORD PTR _pTabList$[ebp]
cmp	DWORD PTR [ecx], 64			
jle	SHORT $LN76@sqlite3Whe
push	64					
push	OFFSET $SG119078
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
xor	eax, eax
jmp	$LN79@sqlite3Whe
movzx	eax, WORD PTR _wctrlFlags$[ebp]
and	eax, 64					
je	SHORT $LN81@sqlite3Whe
mov	DWORD PTR tv88[ebp], 1
jmp	SHORT $LN82@sqlite3Whe
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR tv88[ebp], edx
mov	eax, DWORD PTR tv88[ebp]
mov	DWORD PTR _nTabList$[ebp], eax
mov	ecx, DWORD PTR _nTabList$[ebp]
sub	ecx, 1
imul	edx, ecx, 72
add	edx, 815				
and	edx, -8					
mov	DWORD PTR _nByteWInfo$[ebp], edx
mov	eax, DWORD PTR _nByteWInfo$[ebp]
add	eax, 72					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pWInfo$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN75@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	DWORD PTR _pWInfo$[ebp], 0
jmp	$whereBeginError$83
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	DWORD PTR [ecx+eax+60], -1
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	DWORD PTR [ecx+eax+60], -1
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	al, BYTE PTR _nTabList$[ebp]
mov	BYTE PTR [edx+41], al
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR _pOrderBy$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _pResultSet$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR tv148[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR tv148[ebp]
mov	DWORD PTR [ecx+48], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR tv148[ebp]
mov	DWORD PTR [eax+52], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	ax, WORD PTR _wctrlFlags$[ebp]
mov	WORD PTR [edx+34], ax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+424]
mov	DWORD PTR [ecx+56], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 68					
mov	DWORD PTR _pMaskSet$[ebp], ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	DWORD PTR _sWLB$[ebp], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
add	eax, 328				
mov	DWORD PTR _sWLB$[ebp+4], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, DWORD PTR _nByteWInfo$[ebp]
mov	DWORD PTR _sWLB$[ebp+12], ecx
mov	edx, DWORD PTR _sWLB$[ebp+12]
push	edx
call	_whereLoopInit
add	esp, 4
mov	eax, DWORD PTR _pMaskSet$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
add	edx, 328				
push	edx
call	_whereClauseInit
add	esp, 8
push	72					
mov	eax, DWORD PTR _pWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 328				
push	ecx
call	_whereSplit
add	esp, 12					
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN74@sqlite3Whe
mov	edx, DWORD PTR _ii$[ebp]
add	edx, 1
mov	DWORD PTR _ii$[ebp], edx
mov	eax, DWORD PTR _sWLB$[ebp+4]
mov	ecx, DWORD PTR _ii$[ebp]
cmp	ecx, DWORD PTR [eax+12]
jge	SHORT $LN72@sqlite3Whe
cmp	DWORD PTR _nTabList$[ebp], 0
je	SHORT $LN70@sqlite3Whe
imul	edx, DWORD PTR _ii$[ebp], 48
mov	eax, DWORD PTR _sWLB$[ebp+4]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR [ecx+edx]
push	edx
call	_sqlite3ExprIsConstantNotJoin
add	esp, 4
test	eax, eax
je	SHORT $LN71@sqlite3Whe
push	8
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax+52]
push	ecx
imul	edx, DWORD PTR _ii$[ebp], 48
mov	eax, DWORD PTR _sWLB$[ebp+4]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprIfFalse
add	esp, 16					
imul	ecx, DWORD PTR _ii$[ebp], 48
mov	edx, DWORD PTR _sWLB$[ebp+4]
mov	eax, DWORD PTR [edx+20]
movzx	ecx, BYTE PTR [eax+ecx+20]
or	ecx, 4
imul	edx, DWORD PTR _ii$[ebp], 48
mov	eax, DWORD PTR _sWLB$[ebp+4]
mov	eax, DWORD PTR [eax+20]
mov	BYTE PTR [eax+edx+20], cl
jmp	SHORT $LN73@sqlite3Whe
cmp	DWORD PTR _nTabList$[ebp], 0
jne	SHORT $LN69@sqlite3Whe
cmp	DWORD PTR _pOrderBy$[ebp], 0
je	SHORT $LN68@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _pOrderBy$[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR [ecx+36], al
movzx	ecx, WORD PTR _wctrlFlags$[ebp]
and	ecx, 1024				
je	SHORT $LN69@sqlite3Whe
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [edx+40], 1
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN66@sqlite3Whe
mov	eax, DWORD PTR _ii$[ebp]
add	eax, 1
mov	DWORD PTR _ii$[ebp], eax
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR _ii$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN64@sqlite3Whe
imul	eax, DWORD PTR _ii$[ebp], 80
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR [ecx+eax+56]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_createMask
add	esp, 8
jmp	SHORT $LN65@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 328				
push	ecx
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
call	_exprAnalyzeAll
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN63@sqlite3Whe
jmp	$whereBeginError$83
movzx	edx, WORD PTR _wctrlFlags$[ebp]
and	edx, 1024				
je	SHORT $LN62@sqlite3Whe
mov	eax, DWORD PTR _pResultSet$[ebp]
push	eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
add	ecx, 328				
push	ecx
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_isDistinctRedundant
add	esp, 16					
test	eax, eax
je	SHORT $LN61@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [ecx+40], 1
jmp	SHORT $LN62@sqlite3Whe
cmp	DWORD PTR _pOrderBy$[ebp], 0
jne	SHORT $LN62@sqlite3Whe
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, WORD PTR [edx+34]
or	eax, 512				
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	WORD PTR [ecx+34], ax
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR _pResultSet$[ebp]
mov	DWORD PTR [edx+8], eax
cmp	DWORD PTR _nTabList$[ebp], 1
jne	SHORT $LN57@sqlite3Whe
lea	ecx, DWORD PTR _sWLB$[ebp]
push	ecx
call	_whereShortCut
add	esp, 4
test	eax, eax
jne	SHORT $LN58@sqlite3Whe
lea	edx, DWORD PTR _sWLB$[ebp]
push	edx
call	_whereLoopAddAll
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN56@sqlite3Whe
jmp	$whereBeginError$83
push	0
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_wherePathSolver
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN55@sqlite3Whe
jmp	$whereBeginError$83
mov	eax, DWORD PTR _pWInfo$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN58@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
movsx	edx, WORD PTR [ecx+32]
add	edx, 1
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_wherePathSolver
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN58@sqlite3Whe
jmp	$whereBeginError$83
mov	eax, DWORD PTR _pWInfo$[ebp]
cmp	DWORD PTR [eax+8], 0
jne	SHORT $LN52@sqlite3Whe
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 131072				
je	SHORT $LN52@sqlite3Whe
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	DWORD PTR [eax+24], -1
mov	DWORD PTR [eax+28], -1
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
jne	SHORT $LN50@sqlite3Whe
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN51@sqlite3Whe
jmp	$whereBeginError$83
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, BYTE PTR [ecx+41]
cmp	edx, 2
jl	$LN49@sqlite3Whe
cmp	DWORD PTR _pResultSet$[ebp], 0
je	$LN49@sqlite3Whe
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, WORD PTR [eax+60]
and	ecx, 1024				
jne	$LN49@sqlite3Whe
mov	edx, DWORD PTR _pResultSet$[ebp]
push	edx
mov	eax, DWORD PTR _pMaskSet$[ebp]
push	eax
call	_exprListTableUsage
add	esp, 8
mov	DWORD PTR _tabUsed$6[ebp], eax
mov	DWORD PTR _tabUsed$6[ebp+4], edx
cmp	DWORD PTR _sWLB$[ebp+8], 0
je	SHORT $LN47@sqlite3Whe
mov	ecx, DWORD PTR _sWLB$[ebp+8]
push	ecx
mov	edx, DWORD PTR _pMaskSet$[ebp]
push	edx
call	_exprListTableUsage
add	esp, 8
or	eax, DWORD PTR _tabUsed$6[ebp]
or	edx, DWORD PTR _tabUsed$6[ebp+4]
mov	DWORD PTR _tabUsed$6[ebp], eax
mov	DWORD PTR _tabUsed$6[ebp+4], edx
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, BYTE PTR [eax+41]
cmp	ecx, 2
jl	$LN49@sqlite3Whe
mov	edx, DWORD PTR _pWInfo$[ebp]
movzx	eax, BYTE PTR [edx+41]
sub	eax, 1
imul	ecx, eax, 72
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+ecx+792]
mov	DWORD PTR _pLoop$[ebp], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _pLoop$[ebp]
movzx	ecx, BYTE PTR [eax+16]
imul	eax, ecx, 80
movzx	ecx, BYTE PTR [edx+eax+44]
and	ecx, 8
jne	SHORT $LN45@sqlite3Whe
jmp	$LN49@sqlite3Whe
movzx	edx, WORD PTR _wctrlFlags$[ebp]
and	edx, 1024				
jne	SHORT $LN44@sqlite3Whe
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 4096				
jne	SHORT $LN44@sqlite3Whe
jmp	$LN49@sqlite3Whe
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR _tabUsed$6[ebp]
and	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR _tabUsed$6[ebp+4]
and	ecx, DWORD PTR [edx+12]
mov	DWORD PTR tv758[ebp], eax
mov	DWORD PTR tv758[ebp+4], ecx
mov	edx, DWORD PTR tv758[ebp]
or	edx, DWORD PTR tv758[ebp+4]
je	SHORT $LN43@sqlite3Whe
jmp	$LN49@sqlite3Whe
mov	eax, DWORD PTR _sWLB$[ebp+4]
imul	ecx, DWORD PTR [eax+12], 48
mov	edx, DWORD PTR _sWLB$[ebp+4]
add	ecx, DWORD PTR [edx+20]
mov	DWORD PTR _pEnd$4[ebp], ecx
mov	eax, DWORD PTR _sWLB$[ebp+4]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pTerm$12[ebp], ecx
jmp	SHORT $LN42@sqlite3Whe
mov	edx, DWORD PTR _pTerm$12[ebp]
add	edx, 48					
mov	DWORD PTR _pTerm$12[ebp], edx
mov	eax, DWORD PTR _pTerm$12[ebp]
cmp	eax, DWORD PTR _pEnd$4[ebp]
jae	SHORT $LN40@sqlite3Whe
mov	ecx, DWORD PTR _pTerm$12[ebp]
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [ecx+40]
and	eax, DWORD PTR [edx+8]
mov	ecx, DWORD PTR [ecx+44]
and	ecx, DWORD PTR [edx+12]
mov	DWORD PTR tv778[ebp], eax
mov	DWORD PTR tv778[ebp+4], ecx
mov	edx, DWORD PTR tv778[ebp]
or	edx, DWORD PTR tv778[ebp+4]
je	SHORT $LN39@sqlite3Whe
mov	eax, DWORD PTR _pTerm$12[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+4]
and	edx, 1
jne	SHORT $LN39@sqlite3Whe
jmp	SHORT $LN40@sqlite3Whe
jmp	SHORT $LN41@sqlite3Whe
mov	eax, DWORD PTR _pTerm$12[ebp]
cmp	eax, DWORD PTR _pEnd$4[ebp]
jae	SHORT $LN38@sqlite3Whe
jmp	SHORT $LN49@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	dl, BYTE PTR [ecx+41]
sub	dl, 1
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [eax+41], dl
mov	ecx, DWORD PTR _nTabList$[ebp]
sub	ecx, 1
mov	DWORD PTR _nTabList$[ebp], ecx
jmp	$LN47@sqlite3Whe
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _pWInfo$[ebp]
movsx	edx, WORD PTR [ecx+32]
add	edx, DWORD PTR [eax+424]
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [ecx+424], edx
movzx	edx, WORD PTR _wctrlFlags$[ebp]
and	edx, 4
je	SHORT $LN37@sqlite3Whe
mov	eax, 72					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+ecx+792]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 4096				
je	SHORT $LN37@sqlite3Whe
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	BYTE PTR [edx+38], 1
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTabList$[ebp]
mov	eax, DWORD PTR [edx+ecx+24]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN37@sqlite3Whe
mov	edx, 72					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+eax+792]
mov	eax, DWORD PTR [edx+36]
and	eax, -65				
mov	ecx, 72					
imul	edx, ecx, 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR [ecx+edx+792]
mov	DWORD PTR [edx+36], eax
mov	DWORD PTR _notReady$[ebp], -1
mov	DWORD PTR _notReady$[ebp+4], -1
mov	DWORD PTR _ii$[ebp], 0
mov	eax, DWORD PTR _pWInfo$[ebp]
add	eax, 736				
mov	DWORD PTR _pLevel$[ebp], eax
jmp	SHORT $LN35@sqlite3Whe
mov	ecx, DWORD PTR _ii$[ebp]
add	ecx, 1
mov	DWORD PTR _ii$[ebp], ecx
mov	edx, DWORD PTR _pLevel$[ebp]
add	edx, 72					
mov	DWORD PTR _pLevel$[ebp], edx
mov	eax, DWORD PTR _ii$[ebp]
cmp	eax, DWORD PTR _nTabList$[ebp]
jge	$LN33@sqlite3Whe
mov	ecx, DWORD PTR _pLevel$[ebp]
movzx	edx, BYTE PTR [ecx+36]
imul	eax, edx, 80
mov	ecx, DWORD PTR _pTabList$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _pTabItem$13[ebp], edx
mov	eax, DWORD PTR _pTabItem$13[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pTab$15[ebp], ecx
mov	edx, DWORD PTR _pTab$15[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$11[ebp], eax
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _pLoop$[ebp], eax
mov	ecx, DWORD PTR _pTab$15[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 2
jne	SHORT $LN31@sqlite3Whe
mov	eax, DWORD PTR _pTab$15[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN32@sqlite3Whe
jmp	$LN30@sqlite3Whe
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+36]
and	edx, 1024				
je	SHORT $LN29@sqlite3Whe
mov	eax, DWORD PTR _pTab$15[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3GetVTable
add	esp, 8
mov	DWORD PTR _pVTab$2[ebp], eax
mov	edx, DWORD PTR _pTabItem$13[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _iCur$1[ebp], eax
push	-10					
mov	ecx, DWORD PTR _pVTab$2[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _iCur$1[ebp]
push	edx
push	149					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	$LN30@sqlite3Whe
mov	ecx, DWORD PTR _pTab$15[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN27@sqlite3Whe
jmp	$LN30@sqlite3Whe
mov	eax, DWORD PTR _pLoop$[ebp]
mov	ecx, DWORD PTR [eax+36]
and	ecx, 64					
jne	$LN25@sqlite3Whe
movzx	edx, WORD PTR _wctrlFlags$[ebp]
and	edx, 16					
jne	$LN25@sqlite3Whe
mov	DWORD PTR _op$3[ebp], 52		
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, BYTE PTR [eax+38]
test	ecx, ecx
je	SHORT $LN24@sqlite3Whe
mov	DWORD PTR _op$3[ebp], 53		
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _pTabItem$13[ebp]
mov	edx, DWORD PTR [edx+48]
mov	DWORD PTR [ecx+eax+60], edx
mov	eax, DWORD PTR _op$3[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$15[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$11[ebp]
push	edx
mov	eax, DWORD PTR _pTabItem$13[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3OpenTable
add	esp, 20					
mov	eax, DWORD PTR _pWInfo$[ebp]
movzx	ecx, BYTE PTR [eax+38]
test	ecx, ecx
jne	SHORT $LN23@sqlite3Whe
mov	edx, DWORD PTR _pTab$15[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	eax, 64					
jge	SHORT $LN23@sqlite3Whe
mov	ecx, DWORD PTR _pTab$15[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN23@sqlite3Whe
mov	eax, DWORD PTR _pTabItem$13[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	DWORD PTR _b$5[ebp], ecx
mov	edx, DWORD PTR [eax+68]
mov	DWORD PTR _b$5[ebp+4], edx
mov	DWORD PTR _n$7[ebp], 0
jmp	SHORT $LN22@sqlite3Whe
mov	eax, DWORD PTR _b$5[ebp]
mov	edx, DWORD PTR _b$5[ebp+4]
mov	cl, 1
call	__aullshr
mov	DWORD PTR _b$5[ebp], eax
mov	DWORD PTR _b$5[ebp+4], edx
mov	eax, DWORD PTR _n$7[ebp]
add	eax, 1
mov	DWORD PTR _n$7[ebp], eax
mov	ecx, DWORD PTR _b$5[ebp]
or	ecx, DWORD PTR _b$5[ebp+4]
je	SHORT $LN20@sqlite3Whe
jmp	SHORT $LN21@sqlite3Whe
push	-14					
mov	edx, DWORD PTR _n$7[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
sub	eax, 1
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
jmp	SHORT $LN30@sqlite3Whe
mov	edx, DWORD PTR _pTab$15[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
mov	ecx, DWORD PTR _pTab$15[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _iDb$11[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TableLock
add	esp, 20					
mov	edx, DWORD PTR _pLoop$[ebp]
mov	eax, DWORD PTR [edx+36]
and	eax, 512				
je	$LN18@sqlite3Whe
mov	ecx, DWORD PTR _pLoop$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	DWORD PTR _pIx$10[ebp], edx
mov	DWORD PTR _op$8[ebp], 52		
mov	eax, DWORD PTR _pTab$15[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
je	SHORT $LN17@sqlite3Whe
mov	edx, DWORD PTR _pIx$10[ebp]
mov	eax, DWORD PTR [edx+56]
and	eax, 3
cmp	eax, 2
jne	SHORT $LN17@sqlite3Whe
movzx	ecx, WORD PTR _wctrlFlags$[ebp]
and	ecx, 64					
je	SHORT $LN17@sqlite3Whe
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _iIndexCur$14[ebp], eax
mov	DWORD PTR _op$8[ebp], 0
jmp	$LN16@sqlite3Whe
mov	ecx, DWORD PTR _pWInfo$[ebp]
movzx	edx, BYTE PTR [ecx+38]
test	edx, edx
je	SHORT $LN15@sqlite3Whe
mov	eax, DWORD PTR _pTabItem$13[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pJ$9[ebp], edx
mov	eax, DWORD PTR _iIdxCur$[ebp]
mov	DWORD PTR _iIndexCur$14[ebp], eax
cmp	DWORD PTR _pJ$9[ebp], 0
je	SHORT $LN13@sqlite3Whe
mov	ecx, DWORD PTR _pJ$9[ebp]
cmp	ecx, DWORD PTR _pIx$10[ebp]
je	SHORT $LN13@sqlite3Whe
mov	edx, DWORD PTR _iIndexCur$14[ebp]
add	edx, 1
mov	DWORD PTR _iIndexCur$14[ebp], edx
mov	eax, DWORD PTR _pJ$9[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pJ$9[ebp], ecx
jmp	SHORT $LN14@sqlite3Whe
mov	DWORD PTR _op$8[ebp], 53		
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pWInfo$[ebp]
mov	ecx, DWORD PTR _iIndexCur$14[ebp]
mov	DWORD PTR [eax+edx+60], ecx
jmp	SHORT $LN16@sqlite3Whe
cmp	DWORD PTR _iIdxCur$[ebp], 0
je	SHORT $LN11@sqlite3Whe
movzx	edx, WORD PTR _wctrlFlags$[ebp]
and	edx, 64					
je	SHORT $LN11@sqlite3Whe
mov	eax, DWORD PTR _iIdxCur$[ebp]
mov	DWORD PTR _iIndexCur$14[ebp], eax
jmp	SHORT $LN16@sqlite3Whe
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _iIndexCur$14[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR _iIndexCur$14[ebp]
mov	DWORD PTR [eax+8], ecx
cmp	DWORD PTR _op$8[ebp], 0
je	SHORT $LN18@sqlite3Whe
mov	edx, DWORD PTR _iDb$11[ebp]
push	edx
mov	eax, DWORD PTR _pIx$10[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _iIndexCur$14[ebp]
push	edx
mov	eax, DWORD PTR _op$8[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _pIx$10[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
cmp	DWORD PTR _iDb$11[ebp], 0
jl	SHORT $LN8@sqlite3Whe
mov	ecx, DWORD PTR _iDb$11[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeVerifySchema
add	esp, 8
mov	eax, DWORD PTR _pTabItem$13[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
add	edx, 68					
push	edx
call	_getMask
add	esp, 8
not	eax
not	edx
and	eax, DWORD PTR _notReady$[ebp]
and	edx, DWORD PTR _notReady$[ebp+4]
mov	DWORD PTR _notReady$[ebp], eax
mov	DWORD PTR _notReady$[ebp+4], edx
jmp	$LN34@sqlite3Whe
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN7@sqlite3Whe
jmp	$whereBeginError$83
mov	DWORD PTR _notReady$[ebp], -1
mov	DWORD PTR _notReady$[ebp+4], -1
mov	DWORD PTR _ii$[ebp], 0
jmp	SHORT $LN6@sqlite3Whe
mov	ecx, DWORD PTR _ii$[ebp]
add	ecx, 1
mov	DWORD PTR _ii$[ebp], ecx
mov	edx, DWORD PTR _ii$[ebp]
cmp	edx, DWORD PTR _nTabList$[ebp]
jge	$LN4@sqlite3Whe
imul	eax, DWORD PTR _ii$[ebp], 72
mov	ecx, DWORD PTR _pWInfo$[ebp]
lea	edx, DWORD PTR [ecx+eax+736]
mov	DWORD PTR _pLevel$[ebp], edx
mov	eax, DWORD PTR _pLevel$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+36]
and	edx, 16384				
je	SHORT $LN3@sqlite3Whe
mov	eax, DWORD PTR _pLevel$[ebp]
push	eax
mov	ecx, DWORD PTR _notReady$[ebp+4]
push	ecx
mov	edx, DWORD PTR _notReady$[ebp]
push	edx
mov	eax, DWORD PTR _pLevel$[ebp]
movzx	ecx, BYTE PTR [eax+36]
imul	edx, ecx, 80
mov	eax, DWORD PTR _pTabList$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
add	edx, 328				
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_constructAutomaticIndex
add	esp, 24					
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN3@sqlite3Whe
jmp	SHORT $whereBeginError$83
movzx	eax, WORD PTR _wctrlFlags$[ebp]
push	eax
mov	ecx, DWORD PTR _pLevel$[ebp]
movzx	edx, BYTE PTR [ecx+36]
push	edx
mov	eax, DWORD PTR _ii$[ebp]
push	eax
mov	ecx, DWORD PTR _pLevel$[ebp]
push	ecx
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_explainOneScan
add	esp, 24					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	edx, DWORD PTR _pLevel$[ebp]
mov	DWORD PTR [edx+32], eax
mov	eax, DWORD PTR _notReady$[ebp+4]
push	eax
mov	ecx, DWORD PTR _notReady$[ebp]
push	ecx
mov	edx, DWORD PTR _ii$[ebp]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_codeOneLoopStart
add	esp, 16					
mov	DWORD PTR _notReady$[ebp], eax
mov	DWORD PTR _notReady$[ebp+4], edx
mov	ecx, DWORD PTR _pWInfo$[ebp]
mov	edx, DWORD PTR _pLevel$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [ecx+48], eax
jmp	$LN5@sqlite3Whe
mov	eax, DWORD PTR _pWInfo$[ebp]
jmp	SHORT $LN79@sqlite3Whe
cmp	DWORD PTR _pWInfo$[ebp], 0
je	SHORT $LN1@sqlite3Whe
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _pWInfo$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR [ecx+424], eax
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_whereInfoFree
add	esp, 8
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Update PROC
push	ebp
mov	ebp, esp
sub	esp, 276				
mov	DWORD PTR _addrTop$[ebp], 0
mov	DWORD PTR _aRegIdx$[ebp], 0
mov	DWORD PTR _aXRef$[ebp], 0
mov	DWORD PTR _pRowidExpr$[ebp], 0
mov	DWORD PTR _iEph$[ebp], 0
mov	DWORD PTR _nKey$[ebp], 0
mov	DWORD PTR _regRowCount$[ebp], 0
mov	DWORD PTR _regOld$[ebp], 0
mov	DWORD PTR _regRowSet$[ebp], 0
mov	DWORD PTR _regKey$[ebp], 0
push	8
push	0
lea	eax, DWORD PTR _sContext$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
jne	SHORT $LN128@sqlite3Upd
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN129@sqlite3Upd
jmp	$update_cleanup$142
mov	eax, DWORD PTR _pTabList$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListLookup
add	esp, 8
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN127@sqlite3Upd
jmp	$update_cleanup$142
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
lea	eax, DWORD PTR _tmask$[ebp]
push	eax
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
push	110					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggersExist
add	esp, 20					
mov	DWORD PTR _pTrigger$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN132@sqlite3Upd
mov	DWORD PTR tv90[ebp], 1
jmp	SHORT $LN133@sqlite3Upd
mov	DWORD PTR tv90[ebp], 0
mov	edx, DWORD PTR tv90[ebp]
mov	DWORD PTR _isView$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ViewGetColumnNames
add	esp, 8
test	eax, eax
je	SHORT $LN126@sqlite3Upd
jmp	$update_cleanup$142
mov	edx, DWORD PTR _tmask$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3IsReadOnly
add	esp, 12					
test	eax, eax
je	SHORT $LN125@sqlite3Upd
jmp	$update_cleanup$142
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _iDataCur$[ebp], eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
mov	DWORD PTR _iBaseCur$[ebp], ecx
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR _iBaseCur$[ebp]
mov	DWORD PTR [ecx+eax+56], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _iDataCur$[ebp]
add	eax, 1
mov	DWORD PTR _iIdxCur$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN134@sqlite3Upd
mov	DWORD PTR tv147[ebp], 0
jmp	SHORT $LN135@sqlite3Upd
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR tv147[ebp], eax
mov	ecx, DWORD PTR tv147[ebp]
mov	DWORD PTR _pPk$[ebp], ecx
mov	DWORD PTR _nIdx$[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$[ebp], eax
jmp	SHORT $LN124@sqlite3Upd
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$[ebp], edx
mov	eax, DWORD PTR _nIdx$[ebp]
add	eax, 1
mov	DWORD PTR _nIdx$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN122@sqlite3Upd
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
jne	SHORT $LN121@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN121@sqlite3Upd
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iDataCur$[ebp], ecx
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR _iDataCur$[ebp]
mov	DWORD PTR [ecx+eax+56], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
jmp	SHORT $LN123@sqlite3Upd
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
add	ecx, DWORD PTR _nIdx$[ebp]
mov	edx, DWORD PTR _nIdx$[ebp]
lea	eax, DWORD PTR [edx+ecx*4+2]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aXRef$[ebp], eax
cmp	DWORD PTR _aXRef$[ebp], 0
jne	SHORT $LN120@sqlite3Upd
jmp	$update_cleanup$142
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
mov	ecx, DWORD PTR _aXRef$[ebp]
lea	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _aRegIdx$[ebp], edx
mov	eax, DWORD PTR _nIdx$[ebp]
mov	ecx, DWORD PTR _aRegIdx$[ebp]
lea	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _aToOpen$[ebp], edx
mov	eax, DWORD PTR _nIdx$[ebp]
add	eax, 1
push	eax
push	1
mov	ecx, DWORD PTR _aToOpen$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _aToOpen$[ebp]
add	edx, DWORD PTR _nIdx$[ebp]
mov	BYTE PTR [edx+1], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN119@sqlite3Upd
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN117@sqlite3Upd
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aXRef$[ebp]
mov	DWORD PTR [ecx+eax*4], -1
jmp	SHORT $LN118@sqlite3Upd
push	32					
push	0
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNC$[ebp], eax
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	DWORD PTR _sNC$[ebp+4], ecx
mov	BYTE PTR _chngPk$[ebp], 0
mov	dl, BYTE PTR _chngPk$[ebp]
mov	BYTE PTR _chngRowid$[ebp], dl
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN116@sqlite3Upd
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pChanges$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	$LN114@sqlite3Upd
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pChanges$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
lea	ecx, DWORD PTR _sNC$[ebp]
push	ecx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN113@sqlite3Upd
jmp	$update_cleanup$142
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN112@sqlite3Upd
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _j$[ebp], ecx
jge	SHORT $LN110@sqlite3Upd
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pChanges$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN109@sqlite3Upd
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _j$[ebp], edx
jne	SHORT $LN108@sqlite3Upd
mov	BYTE PTR _chngRowid$[ebp], 1
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pChanges$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _pRowidExpr$[ebp], eax
jmp	SHORT $LN107@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN107@sqlite3Upd
imul	ecx, DWORD PTR _j$[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
movzx	ecx, BYTE PTR [eax+ecx+23]
and	ecx, 1
je	SHORT $LN107@sqlite3Upd
mov	BYTE PTR _chngPk$[ebp], 1
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR _aXRef$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [eax+edx*4], ecx
jmp	SHORT $LN110@sqlite3Upd
jmp	$LN111@sqlite3Upd
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _j$[ebp], eax
jl	SHORT $LN105@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
jne	SHORT $LN104@sqlite3Upd
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _pChanges$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3IsRowid
add	esp, 4
test	eax, eax
je	SHORT $LN104@sqlite3Upd
mov	DWORD PTR _j$[ebp], -1
mov	BYTE PTR _chngRowid$[ebp], 1
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pChanges$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _pRowidExpr$[ebp], edx
jmp	SHORT $LN105@sqlite3Upd
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pChanges$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
push	OFFSET $SG115853
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [edx+17], 1
jmp	$update_cleanup$142
cmp	DWORD PTR _j$[ebp], 0
jge	SHORT $LN136@sqlite3Upd
mov	DWORD PTR tv307[ebp], OFFSET $SG115855
jmp	SHORT $LN137@sqlite3Upd
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR tv307[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR tv307[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	23					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthCheck
add	esp, 20					
mov	DWORD PTR _rc$2[ebp], eax
cmp	DWORD PTR _rc$2[ebp], 1
jne	SHORT $LN102@sqlite3Upd
jmp	$update_cleanup$142
jmp	SHORT $LN101@sqlite3Upd
cmp	DWORD PTR _rc$2[ebp], 2
jne	SHORT $LN101@sqlite3Upd
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _aXRef$[ebp]
mov	DWORD PTR [ecx+eax*4], -1
jmp	$LN115@sqlite3Upd
movzx	edx, BYTE PTR _chngRowid$[ebp]
movzx	eax, BYTE PTR _chngPk$[ebp]
add	edx, eax
mov	BYTE PTR _chngKey$[ebp], dl
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pTabList$[ebp]
mov	DWORD PTR [eax+edx+72], 0
mov	DWORD PTR [eax+edx+76], 0
movzx	ecx, BYTE PTR _chngKey$[ebp]
push	ecx
mov	edx, DWORD PTR _aXRef$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FkRequired
add	esp, 16					
mov	DWORD PTR _hasFK$[ebp], eax
mov	DWORD PTR _j$[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$[ebp], eax
jmp	SHORT $LN99@sqlite3Upd
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$[ebp], edx
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	$LN97@sqlite3Upd
movzx	ecx, BYTE PTR _chngKey$[ebp]
test	ecx, ecx
jne	SHORT $LN95@sqlite3Upd
cmp	DWORD PTR _hasFK$[ebp], 0
jne	SHORT $LN95@sqlite3Upd
mov	edx, DWORD PTR _pIdx$[ebp]
cmp	DWORD PTR [edx+36], 0
jne	SHORT $LN95@sqlite3Upd
mov	eax, DWORD PTR _pIdx$[ebp]
cmp	eax, DWORD PTR _pPk$[ebp]
jne	SHORT $LN96@sqlite3Upd
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv343[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv343[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv343[ebp]
mov	DWORD PTR _reg$6[ebp], edx
jmp	SHORT $LN94@sqlite3Upd
mov	DWORD PTR _reg$6[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN93@sqlite3Upd
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN94@sqlite3Upd
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	ecx, DWORD PTR _aXRef$[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
jl	SHORT $LN90@sqlite3Upd
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv357[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv357[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv357[ebp]
mov	DWORD PTR _reg$6[ebp], eax
jmp	SHORT $LN94@sqlite3Upd
jmp	SHORT $LN92@sqlite3Upd
cmp	DWORD PTR _reg$6[ebp], 0
jne	SHORT $LN89@sqlite3Upd
mov	ecx, DWORD PTR _aToOpen$[ebp]
add	ecx, DWORD PTR _j$[ebp]
mov	BYTE PTR [ecx+1], 0
mov	edx, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR _aRegIdx$[ebp]
mov	ecx, DWORD PTR _reg$6[ebp]
mov	DWORD PTR [eax+edx*4], ecx
jmp	$LN98@sqlite3Upd
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN88@sqlite3Upd
jmp	$update_cleanup$142
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	SHORT $LN87@sqlite3Upd
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCountChanges
add	esp, 4
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN86@sqlite3Upd
mov	ecx, DWORD PTR _onError$[ebp]
push	ecx
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _aXRef$[ebp]
push	eax
mov	ecx, DWORD PTR _pRowidExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pChanges$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pTabList$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_updateVirtualTable
add	esp, 32					
mov	DWORD PTR _pWhere$[ebp], 0
mov	DWORD PTR _pTabList$[ebp], 0
jmp	$update_cleanup$142
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv388[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv388[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv388[ebp]
mov	DWORD PTR _regRowSet$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv391[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv391[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv391[ebp]
mov	DWORD PTR _regNewRowid$[ebp], eax
mov	ecx, DWORD PTR _regNewRowid$[ebp]
mov	DWORD PTR _regOldRowid$[ebp], ecx
movzx	edx, BYTE PTR _chngPk$[ebp]
test	edx, edx
jne	SHORT $LN84@sqlite3Upd
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	SHORT $LN84@sqlite3Upd
cmp	DWORD PTR _hasFK$[ebp], 0
je	SHORT $LN85@sqlite3Upd
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _regOld$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
mov	ecx, DWORD PTR _pParse$[ebp]
add	eax, DWORD PTR [ecx+72]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], eax
movzx	eax, BYTE PTR _chngKey$[ebp]
test	eax, eax
jne	SHORT $LN82@sqlite3Upd
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	SHORT $LN82@sqlite3Upd
cmp	DWORD PTR _hasFK$[ebp], 0
je	SHORT $LN83@sqlite3Upd
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv409[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv409[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv409[ebp]
mov	DWORD PTR _regNewRowid$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _regNew$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
mov	ecx, DWORD PTR _pParse$[ebp]
add	eax, DWORD PTR [ecx+72]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], eax
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN81@sqlite3Upd
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
lea	edx, DWORD PTR _sContext$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthContextPush
add	esp, 12					
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN80@sqlite3Upd
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3MaterializeView
add	esp, 16					
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
lea	eax, DWORD PTR _sNC$[ebp]
push	eax
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN79@sqlite3Upd
jmp	$update_cleanup$142
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	$LN78@sqlite3Upd
mov	eax, DWORD PTR _regOldRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _regRowSet$[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _iIdxCur$[ebp]
push	eax
push	4
push	0
push	0
mov	ecx, DWORD PTR _pWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pWInfo$[ebp], eax
cmp	DWORD PTR _pWInfo$[ebp], 0
jne	SHORT $LN77@sqlite3Upd
jmp	$update_cleanup$142
lea	ecx, DWORD PTR _aiCurOnePass$[ebp]
push	ecx
mov	edx, DWORD PTR _pWInfo$[ebp]
push	edx
call	_sqlite3WhereOkOnePass
add	esp, 8
mov	DWORD PTR _okOnePass$[ebp], eax
mov	eax, DWORD PTR _regOldRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	100					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _okOnePass$[ebp], 0
jne	SHORT $LN76@sqlite3Upd
mov	eax, DWORD PTR _regOldRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _regRowSet$[ebp]
push	ecx
push	125					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereEnd
add	esp, 4
jmp	$LN75@sqlite3Upd
mov	ecx, DWORD PTR _pPk$[ebp]
mov	dx, WORD PTR [ecx+50]
mov	WORD PTR _nPk$8[ebp], dx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _iPk$7[ebp], ecx
movsx	edx, WORD PTR _nPk$8[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
add	edx, DWORD PTR [eax+72]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], edx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv471[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv471[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv471[ebp]
mov	DWORD PTR _regKey$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _iEph$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _iPk$7[ebp]
push	eax
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
movsx	edx, WORD PTR _nPk$8[ebp]
push	edx
mov	eax, DWORD PTR _iEph$[ebp]
push	eax
push	55					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrOpen$1[ebp], eax
mov	edx, DWORD PTR _pPk$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
push	4
push	0
push	0
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _pTabList$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pWInfo$[ebp], eax
cmp	DWORD PTR _pWInfo$[ebp], 0
jne	SHORT $LN74@sqlite3Upd
jmp	$update_cleanup$142
lea	edx, DWORD PTR _aiCurOnePass$[ebp]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereOkOnePass
add	esp, 8
mov	DWORD PTR _okOnePass$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN73@sqlite3Upd
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
movsx	edx, WORD PTR _nPk$8[ebp]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN71@sqlite3Upd
mov	eax, DWORD PTR _iPk$7[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
jmp	SHORT $LN72@sqlite3Upd
cmp	DWORD PTR _okOnePass$[ebp], 0
je	SHORT $LN70@sqlite3Upd
mov	edx, DWORD PTR _addrOpen$1[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeToNoop
add	esp, 8
movsx	ecx, WORD PTR _nPk$8[ebp]
mov	DWORD PTR _nKey$[ebp], ecx
mov	edx, DWORD PTR _iPk$7[ebp]
mov	DWORD PTR _regKey$[ebp], edx
jmp	SHORT $LN69@sqlite3Upd
movsx	eax, WORD PTR _nPk$8[ebp]
push	eax
mov	ecx, DWORD PTR _pPk$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3IndexAffinityStr
add	esp, 8
push	eax
mov	eax, DWORD PTR _regKey$[ebp]
push	eax
movsx	ecx, WORD PTR _nPk$8[ebp]
push	ecx
mov	edx, DWORD PTR _iPk$7[ebp]
push	edx
push	48					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _regKey$[ebp]
push	ecx
mov	edx, DWORD PTR _iEph$[ebp]
push	edx
push	107					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_sqlite3WhereEnd
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 128				
je	SHORT $LN68@sqlite3Upd
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+412], 0
jne	SHORT $LN68@sqlite3Upd
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv541[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv541[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv541[ebp]
mov	DWORD PTR _regRowCount$[ebp], eax
mov	ecx, DWORD PTR _regRowCount$[ebp]
push	ecx
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _labelBreak$[ebp], eax
cmp	DWORD PTR _isView$[ebp], 0
jne	$LN67@sqlite3Upd
cmp	DWORD PTR _onError$[ebp], 5
jne	SHORT $LN66@sqlite3Upd
mov	ecx, DWORD PTR _nIdx$[ebp]
add	ecx, 1
push	ecx
push	1
mov	edx, DWORD PTR _aToOpen$[ebp]
push	edx
call	_memset
add	esp, 12					
jmp	SHORT $LN65@sqlite3Upd
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$[ebp], ecx
jmp	SHORT $LN64@sqlite3Upd
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$[ebp], eax
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN65@sqlite3Upd
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, BYTE PTR [ecx+54]
cmp	edx, 5
jne	SHORT $LN61@sqlite3Upd
mov	eax, DWORD PTR _nIdx$[ebp]
add	eax, 1
push	eax
push	1
mov	ecx, DWORD PTR _aToOpen$[ebp]
push	ecx
call	_memset
add	esp, 12					
jmp	SHORT $LN65@sqlite3Upd
jmp	SHORT $LN63@sqlite3Upd
cmp	DWORD PTR _okOnePass$[ebp], 0
je	SHORT $LN60@sqlite3Upd
mov	edx, 4
imul	eax, edx, 0
cmp	DWORD PTR _aiCurOnePass$[ebp+eax], 0
jl	SHORT $LN59@sqlite3Upd
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _aiCurOnePass$[ebp+edx]
sub	eax, DWORD PTR _iBaseCur$[ebp]
mov	ecx, DWORD PTR _aToOpen$[ebp]
mov	BYTE PTR [ecx+eax], 0
mov	edx, 4
shl	edx, 0
cmp	DWORD PTR _aiCurOnePass$[ebp+edx], 0
jl	SHORT $LN60@sqlite3Upd
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _aiCurOnePass$[ebp+eax]
sub	ecx, DWORD PTR _iBaseCur$[ebp]
mov	edx, DWORD PTR _aToOpen$[ebp]
mov	BYTE PTR [edx+ecx], 0
push	0
push	0
mov	eax, DWORD PTR _aToOpen$[ebp]
push	eax
mov	ecx, DWORD PTR _iBaseCur$[ebp]
push	ecx
push	53					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3OpenTableAndIndices
add	esp, 28					
cmp	DWORD PTR _okOnePass$[ebp], 0
je	SHORT $LN57@sqlite3Upd
mov	ecx, DWORD PTR _iDataCur$[ebp]
sub	ecx, DWORD PTR _iBaseCur$[ebp]
mov	edx, DWORD PTR _aToOpen$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	SHORT $LN56@sqlite3Upd
mov	ecx, DWORD PTR _nKey$[ebp]
push	ecx
mov	edx, DWORD PTR _regKey$[ebp]
push	edx
mov	eax, DWORD PTR _labelBreak$[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	65					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	eax, DWORD PTR _labelBreak$[ebp]
mov	DWORD PTR _labelContinue$[ebp], eax
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN138@sqlite3Upd
mov	ecx, DWORD PTR _regKey$[ebp]
mov	DWORD PTR tv603[ebp], ecx
jmp	SHORT $LN139@sqlite3Upd
mov	edx, DWORD PTR _regOldRowid$[ebp]
mov	DWORD PTR tv603[ebp], edx
mov	eax, DWORD PTR _labelBreak$[ebp]
push	eax
mov	ecx, DWORD PTR tv603[ebp]
push	ecx
push	76					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN55@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN54@sqlite3Upd
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _labelContinue$[ebp], eax
mov	ecx, DWORD PTR _labelBreak$[ebp]
push	ecx
mov	edx, DWORD PTR _iEph$[ebp]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _regKey$[ebp]
push	ecx
mov	edx, DWORD PTR _iEph$[ebp]
push	edx
push	98					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrTop$[ebp], eax
push	0
mov	ecx, DWORD PTR _regKey$[ebp]
push	ecx
mov	edx, DWORD PTR _labelContinue$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
push	65					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
jmp	SHORT $LN55@sqlite3Upd
mov	edx, DWORD PTR _regOldRowid$[ebp]
push	edx
mov	eax, DWORD PTR _labelBreak$[ebp]
push	eax
mov	ecx, DWORD PTR _regRowSet$[ebp]
push	ecx
push	126					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _labelContinue$[ebp], eax
mov	eax, DWORD PTR _regOldRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _labelContinue$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
push	67					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
movzx	ecx, BYTE PTR _chngRowid$[ebp]
test	ecx, ecx
je	SHORT $LN52@sqlite3Upd
mov	edx, DWORD PTR _regNewRowid$[ebp]
push	edx
mov	eax, DWORD PTR _pRowidExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
mov	edx, DWORD PTR _regNewRowid$[ebp]
push	edx
push	38					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
movzx	ecx, BYTE PTR _chngPk$[ebp]
test	ecx, ecx
jne	SHORT $LN50@sqlite3Upd
cmp	DWORD PTR _hasFK$[ebp], 0
jne	SHORT $LN50@sqlite3Upd
cmp	DWORD PTR _pTrigger$[ebp], 0
je	$LN51@sqlite3Upd
cmp	DWORD PTR _hasFK$[ebp], 0
je	SHORT $LN140@sqlite3Upd
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkOldmask
add	esp, 8
mov	DWORD PTR tv651[ebp], eax
jmp	SHORT $LN141@sqlite3Upd
mov	DWORD PTR tv651[ebp], 0
mov	ecx, DWORD PTR tv651[ebp]
mov	DWORD PTR _oldmask$5[ebp], ecx
mov	edx, DWORD PTR _onError$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
push	3
push	0
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggerColmask
add	esp, 28					
or	eax, DWORD PTR _oldmask$5[ebp]
mov	DWORD PTR _oldmask$5[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN49@sqlite3Upd
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN47@sqlite3Upd
cmp	DWORD PTR _oldmask$5[ebp], -1
je	SHORT $LN45@sqlite3Upd
cmp	DWORD PTR _i$[ebp], 32			
jge	SHORT $LN44@sqlite3Upd
mov	edx, 1
mov	ecx, DWORD PTR _i$[ebp]
shl	edx, cl
and	edx, DWORD PTR _oldmask$5[ebp]
jne	SHORT $LN45@sqlite3Upd
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+eax+23]
and	eax, 1
je	SHORT $LN46@sqlite3Upd
mov	ecx, DWORD PTR _regOld$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
jmp	SHORT $LN43@sqlite3Upd
mov	eax, DWORD PTR _regOld$[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN48@sqlite3Upd
movzx	edx, BYTE PTR _chngRowid$[ebp]
test	edx, edx
jne	SHORT $LN51@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
jne	SHORT $LN51@sqlite3Upd
mov	eax, DWORD PTR _regNewRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _regOldRowid$[ebp]
push	ecx
push	33					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _onError$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
push	1
push	1
mov	edx, DWORD PTR _pChanges$[ebp]
push	edx
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TriggerColmask
add	esp, 28					
mov	DWORD PTR _newmask$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN41@sqlite3Upd
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _i$[ebp], ecx
jge	$LN39@sqlite3Upd
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
cmp	DWORD PTR _i$[ebp], eax
jne	SHORT $LN38@sqlite3Upd
mov	ecx, DWORD PTR _regNew$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN37@sqlite3Upd
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aXRef$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _j$[ebp], edx
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN36@sqlite3Upd
mov	eax, DWORD PTR _regNew$[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
imul	ecx, DWORD PTR _j$[ebp], 24
mov	edx, DWORD PTR _pChanges$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCode
add	esp, 12					
jmp	SHORT $LN37@sqlite3Upd
mov	eax, DWORD PTR _tmask$[ebp]
and	eax, 1
je	SHORT $LN33@sqlite3Upd
cmp	DWORD PTR _i$[ebp], 31			
jg	SHORT $LN33@sqlite3Upd
mov	edx, 1
mov	ecx, DWORD PTR _i$[ebp]
shl	edx, cl
and	edx, DWORD PTR _newmask$[ebp]
je	SHORT $LN34@sqlite3Upd
mov	eax, DWORD PTR _regNew$[ebp]
add	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
jmp	SHORT $LN37@sqlite3Upd
mov	edx, DWORD PTR _regNew$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN40@sqlite3Upd
mov	ecx, DWORD PTR _tmask$[ebp]
and	ecx, 1
je	$LN31@sqlite3Upd
mov	edx, DWORD PTR _regNew$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3TableAffinity
add	esp, 12					
mov	edx, DWORD PTR _labelContinue$[ebp]
push	edx
mov	eax, DWORD PTR _onError$[ebp]
push	eax
mov	ecx, DWORD PTR _regOldRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pChanges$[ebp]
push	eax
push	110					
mov	ecx, DWORD PTR _pTrigger$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeRowTrigger
add	esp, 36					
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN30@sqlite3Upd
mov	eax, DWORD PTR _nKey$[ebp]
push	eax
mov	ecx, DWORD PTR _regKey$[ebp]
push	ecx
mov	edx, DWORD PTR _labelContinue$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
push	65					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
jmp	SHORT $LN29@sqlite3Upd
mov	edx, DWORD PTR _regOldRowid$[ebp]
push	edx
mov	eax, DWORD PTR _labelContinue$[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	67					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN28@sqlite3Upd
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN31@sqlite3Upd
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aXRef$[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
jge	SHORT $LN25@sqlite3Upd
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
cmp	DWORD PTR _i$[ebp], eax
je	SHORT $LN25@sqlite3Upd
mov	ecx, DWORD PTR _regNew$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
jmp	SHORT $LN27@sqlite3Upd
cmp	DWORD PTR _isView$[ebp], 0
jne	$LN24@sqlite3Upd
mov	DWORD PTR _j1$3[ebp], 0
mov	DWORD PTR _bReplace$4[ebp], 0
lea	eax, DWORD PTR _bReplace$4[ebp]
push	eax
mov	ecx, DWORD PTR _labelContinue$[ebp]
push	ecx
movzx	edx, BYTE PTR _onError$[ebp]
push	edx
movzx	eax, BYTE PTR _chngKey$[ebp]
push	eax
mov	ecx, DWORD PTR _regOldRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _regNewRowid$[ebp]
push	edx
mov	eax, DWORD PTR _iIdxCur$[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
mov	edx, DWORD PTR _aRegIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GenerateConstraintChecks
add	esp, 44					
cmp	DWORD PTR _hasFK$[ebp], 0
je	SHORT $LN23@sqlite3Upd
movzx	edx, BYTE PTR _chngKey$[ebp]
push	edx
mov	eax, DWORD PTR _aXRef$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _regOldRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkCheck
add	esp, 24					
cmp	DWORD PTR _bReplace$4[ebp], 0
jne	SHORT $LN21@sqlite3Upd
movzx	ecx, BYTE PTR _chngKey$[ebp]
test	ecx, ecx
je	SHORT $LN22@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN20@sqlite3Upd
mov	edx, DWORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _regKey$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	65					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	DWORD PTR _j1$3[ebp], eax
jmp	SHORT $LN22@sqlite3Upd
mov	eax, DWORD PTR _regOldRowid$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	67					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _j1$3[ebp], eax
mov	eax, DWORD PTR _aRegIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GenerateRowIndexDelete
add	esp, 20					
cmp	DWORD PTR _hasFK$[ebp], 0
jne	SHORT $LN17@sqlite3Upd
movzx	edx, BYTE PTR _chngKey$[ebp]
test	edx, edx
jne	SHORT $LN17@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN18@sqlite3Upd
push	0
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
push	74					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _bReplace$4[ebp], 0
jne	SHORT $LN15@sqlite3Upd
movzx	edx, BYTE PTR _chngKey$[ebp]
test	edx, edx
je	SHORT $LN16@sqlite3Upd
mov	eax, DWORD PTR _j1$3[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
cmp	DWORD PTR _hasFK$[ebp], 0
je	SHORT $LN14@sqlite3Upd
movzx	edx, BYTE PTR _chngKey$[ebp]
push	edx
mov	eax, DWORD PTR _aXRef$[ebp]
push	eax
mov	ecx, DWORD PTR _regNewRowid$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkCheck
add	esp, 24					
push	0
push	0
push	1
mov	ecx, DWORD PTR _aRegIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _regNewRowid$[ebp]
push	edx
mov	eax, DWORD PTR _iIdxCur$[ebp]
push	eax
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CompleteInsertion
add	esp, 36					
cmp	DWORD PTR _hasFK$[ebp], 0
je	SHORT $LN24@sqlite3Upd
movzx	ecx, BYTE PTR _chngKey$[ebp]
push	ecx
mov	edx, DWORD PTR _aXRef$[ebp]
push	edx
mov	eax, DWORD PTR _regOldRowid$[ebp]
push	eax
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkActions
add	esp, 24					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 128				
je	SHORT $LN12@sqlite3Upd
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+412], 0
jne	SHORT $LN12@sqlite3Upd
push	1
mov	ecx, DWORD PTR _regRowCount$[ebp]
push	ecx
push	37					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _labelContinue$[ebp]
push	eax
mov	ecx, DWORD PTR _onError$[ebp]
push	ecx
mov	edx, DWORD PTR _regOldRowid$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
push	2
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
push	110					
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeRowTrigger
add	esp, 36					
cmp	DWORD PTR _okOnePass$[ebp], 0
je	SHORT $LN11@sqlite3Upd
jmp	SHORT $LN10@sqlite3Upd
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN9@sqlite3Upd
mov	ecx, DWORD PTR _labelContinue$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	eax, DWORD PTR _addrTop$[ebp]
push	eax
mov	ecx, DWORD PTR _iEph$[ebp]
push	ecx
push	9
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN10@sqlite3Upd
mov	eax, DWORD PTR _labelContinue$[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _labelBreak$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	DWORD PTR _i$[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN7@sqlite3Upd
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN5@sqlite3Upd
mov	eax, DWORD PTR _aToOpen$[ebp]
add	eax, DWORD PTR _i$[ebp]
movzx	ecx, BYTE PTR [eax+1]
test	ecx, ecx
je	SHORT $LN4@sqlite3Upd
push	0
mov	edx, DWORD PTR _iIdxCur$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN6@sqlite3Upd
mov	ecx, DWORD PTR _iDataCur$[ebp]
cmp	ecx, DWORD PTR _iIdxCur$[ebp]
jge	SHORT $LN3@sqlite3Upd
push	0
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
jne	SHORT $LN2@sqlite3Upd
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+412], 0
jne	SHORT $LN2@sqlite3Upd
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AutoincrementEnd
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 128				
je	SHORT $update_cleanup$142
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+412], 0
jne	SHORT $update_cleanup$142
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+18]
test	eax, eax
jne	SHORT $update_cleanup$142
push	1
mov	ecx, DWORD PTR _regRowCount$[ebp]
push	ecx
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG115976
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
lea	edx, DWORD PTR _sContext$[ebp]
push	edx
call	_sqlite3AuthContextPop
add	esp, 4
mov	eax, DWORD PTR _aXRef$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
mov	ecx, DWORD PTR _pChanges$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _pWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DeleteFrom PROC
push	ebp
mov	ebp, esp
sub	esp, 196				
mov	DWORD PTR _memCnt$[ebp], -1
mov	DWORD PTR _aToOpen$[ebp], 0
mov	DWORD PTR _iPk$[ebp], 0
mov	eax, 1
mov	WORD PTR _nPk$[ebp], ax
mov	DWORD PTR _iEphCur$[ebp], 0
mov	DWORD PTR _iRowSet$[ebp], 0
mov	DWORD PTR _addrBypass$[ebp], 0
mov	DWORD PTR _addrLoop$[ebp], 0
mov	DWORD PTR _addrDelete$[ebp], 0
mov	DWORD PTR _addrEphOpen$[ebp], 0
push	8
push	0
lea	ecx, DWORD PTR _sContext$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
jne	SHORT $LN58@sqlite3Del
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN59@sqlite3Del
jmp	$delete_from_cleanup$68
mov	ecx, DWORD PTR _pTabList$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SrcListLookup
add	esp, 8
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN57@sqlite3Del
jmp	$delete_from_cleanup$68
push	0
push	0
push	109					
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TriggersExist
add	esp, 20					
mov	DWORD PTR _pTrigger$[ebp], eax
mov	edx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN62@sqlite3Del
mov	DWORD PTR tv85[ebp], 1
jmp	SHORT $LN63@sqlite3Del
mov	DWORD PTR tv85[ebp], 0
mov	eax, DWORD PTR tv85[ebp]
mov	DWORD PTR _isView$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ViewGetColumnNames
add	esp, 8
test	eax, eax
je	SHORT $LN56@sqlite3Del
jmp	$delete_from_cleanup$68
cmp	DWORD PTR _pTrigger$[ebp], 0
je	SHORT $LN64@sqlite3Del
mov	DWORD PTR tv92[ebp], 1
jmp	SHORT $LN65@sqlite3Del
mov	DWORD PTR tv92[ebp], 0
mov	eax, DWORD PTR tv92[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3IsReadOnly
add	esp, 12					
test	eax, eax
je	SHORT $LN55@sqlite3Del
jmp	$delete_from_cleanup$68
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zDb$[ebp], eax
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	9
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
mov	DWORD PTR _rcauth$[ebp], eax
cmp	DWORD PTR _rcauth$[ebp], 1
jne	SHORT $LN54@sqlite3Del
jmp	$delete_from_cleanup$68
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [edx+68]
mov	DWORD PTR [ecx+eax+56], edx
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTabList$[ebp]
mov	eax, DWORD PTR [edx+ecx+56]
mov	DWORD PTR _iTabCur$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
mov	DWORD PTR _nIdx$[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN53@sqlite3Del
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
mov	edx, DWORD PTR _nIdx$[ebp]
add	edx, 1
mov	DWORD PTR _nIdx$[ebp], edx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN51@sqlite3Del
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
jmp	SHORT $LN52@sqlite3Del
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN50@sqlite3Del
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
lea	edx, DWORD PTR _sContext$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthContextPush
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN49@sqlite3Del
jmp	$delete_from_cleanup$68
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+18]
test	eax, eax
jne	SHORT $LN48@sqlite3Del
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCountChanges
add	esp, 4
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BeginWriteOperation
add	esp, 12					
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN47@sqlite3Del
mov	ecx, DWORD PTR _iTabCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3MaterializeView
add	esp, 16					
mov	edx, DWORD PTR _iTabCur$[ebp]
mov	DWORD PTR _iIdxCur$[ebp], edx
mov	eax, DWORD PTR _iIdxCur$[ebp]
mov	DWORD PTR _iDataCur$[ebp], eax
push	32					
push	0
lea	ecx, DWORD PTR _sNC$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNC$[ebp], edx
mov	eax, DWORD PTR _pTabList$[ebp]
mov	DWORD PTR _sNC$[ebp+4], eax
mov	ecx, DWORD PTR _pWhere$[ebp]
push	ecx
lea	edx, DWORD PTR _sNC$[ebp]
push	edx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN46@sqlite3Del
jmp	$delete_from_cleanup$68
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 128				
je	SHORT $LN45@sqlite3Del
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv197[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv197[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv197[ebp]
mov	DWORD PTR _memCnt$[ebp], eax
mov	ecx, DWORD PTR _memCnt$[ebp]
push	ecx
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _rcauth$[ebp], 0
jne	$LN44@sqlite3Del
cmp	DWORD PTR _pWhere$[ebp], 0
jne	$LN44@sqlite3Del
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	$LN44@sqlite3Del
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
jne	$LN44@sqlite3Del
push	0
push	0
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3FkRequired
add	esp, 16					
test	eax, eax
jne	$LN44@sqlite3Del
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	1
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TableLock
add	esp, 20					
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN43@sqlite3Del
push	-2					
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _memCnt$[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
push	115					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN42@sqlite3Del
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN40@sqlite3Del
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
push	115					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN41@sqlite3Del
jmp	$LN39@sqlite3Del
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN38@sqlite3Del
mov	DWORD PTR _pPk$[ebp], 0
mov	edx, 1
mov	WORD PTR _nPk$[ebp], dx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv249[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv249[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv249[ebp]
mov	DWORD PTR _iRowSet$[ebp], ecx
mov	edx, DWORD PTR _iRowSet$[ebp]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN37@sqlite3Del
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$[ebp], eax
mov	edx, DWORD PTR _pPk$[ebp]
mov	ax, WORD PTR [edx+50]
mov	WORD PTR _nPk$[ebp], ax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _iPk$[ebp], edx
movsx	eax, WORD PTR _nPk$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
add	eax, DWORD PTR [ecx+72]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _iEphCur$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
movsx	edx, WORD PTR _nPk$[ebp]
push	edx
mov	eax, DWORD PTR _iEphCur$[ebp]
push	eax
push	55					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _addrEphOpen$[ebp], eax
mov	edx, DWORD PTR _pPk$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	ecx, DWORD PTR _iTabCur$[ebp]
add	ecx, 1
push	ecx
push	12					
push	0
push	0
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _pTabList$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pWInfo$[ebp], eax
cmp	DWORD PTR _pWInfo$[ebp], 0
jne	SHORT $LN36@sqlite3Del
jmp	$delete_from_cleanup$68
lea	edx, DWORD PTR _aiCurOnePass$[ebp]
push	edx
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereOkOnePass
add	esp, 8
mov	DWORD PTR _okOnePass$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 128				
je	SHORT $LN35@sqlite3Del
push	1
mov	eax, DWORD PTR _memCnt$[ebp]
push	eax
push	37					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN34@sqlite3Del
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN33@sqlite3Del
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
movsx	eax, WORD PTR _nPk$[ebp]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN31@sqlite3Del
mov	ecx, DWORD PTR _iPk$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pPk$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _i$[ebp]
movsx	edx, WORD PTR [eax+ecx*2]
push	edx
mov	eax, DWORD PTR _iTabCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
jmp	SHORT $LN32@sqlite3Del
mov	eax, DWORD PTR _iPk$[ebp]
mov	DWORD PTR _iKey$[ebp], eax
jmp	SHORT $LN30@sqlite3Del
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _iKey$[ebp], edx
push	0
mov	eax, DWORD PTR _iKey$[ebp]
push	eax
mov	ecx, DWORD PTR _iTabCur$[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeGetColumn
add	esp, 24					
mov	DWORD PTR _iKey$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _iKey$[ebp]
cmp	edx, DWORD PTR [ecx+72]
jle	SHORT $LN30@sqlite3Del
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _iKey$[ebp]
mov	DWORD PTR [eax+72], ecx
cmp	DWORD PTR _okOnePass$[ebp], 0
je	$LN28@sqlite3Del
mov	dx, WORD PTR _nPk$[ebp]
mov	WORD PTR _nKey$[ebp], dx
mov	eax, DWORD PTR _nIdx$[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aToOpen$[ebp], eax
cmp	DWORD PTR _aToOpen$[ebp], 0
jne	SHORT $LN27@sqlite3Del
mov	edx, DWORD PTR _pWInfo$[ebp]
push	edx
call	_sqlite3WhereEnd
add	esp, 4
jmp	$delete_from_cleanup$68
mov	eax, DWORD PTR _nIdx$[ebp]
add	eax, 1
push	eax
push	1
mov	ecx, DWORD PTR _aToOpen$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _aToOpen$[ebp]
add	edx, DWORD PTR _nIdx$[ebp]
mov	BYTE PTR [edx+1], 0
mov	eax, 4
imul	ecx, eax, 0
cmp	DWORD PTR _aiCurOnePass$[ebp+ecx], 0
jl	SHORT $LN26@sqlite3Del
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aiCurOnePass$[ebp+eax]
sub	ecx, DWORD PTR _iTabCur$[ebp]
mov	edx, DWORD PTR _aToOpen$[ebp]
mov	BYTE PTR [edx+ecx], 0
mov	eax, 4
shl	eax, 0
cmp	DWORD PTR _aiCurOnePass$[ebp+eax], 0
jl	SHORT $LN25@sqlite3Del
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _aiCurOnePass$[ebp+ecx]
sub	edx, DWORD PTR _iTabCur$[ebp]
mov	eax, DWORD PTR _aToOpen$[ebp]
mov	BYTE PTR [eax+edx], 0
cmp	DWORD PTR _addrEphOpen$[ebp], 0
je	SHORT $LN24@sqlite3Del
mov	ecx, DWORD PTR _addrEphOpen$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeToNoop
add	esp, 8
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	DWORD PTR _addrDelete$[ebp], eax
jmp	$LN23@sqlite3Del
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN22@sqlite3Del
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv392[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv392[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv392[ebp]
mov	DWORD PTR _iKey$[ebp], edx
xor	eax, eax
mov	WORD PTR _nKey$[ebp], ax
movsx	ecx, WORD PTR _nPk$[ebp]
push	ecx
mov	edx, DWORD PTR _pPk$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3IndexAffinityStr
add	esp, 8
push	eax
mov	ecx, DWORD PTR _iKey$[ebp]
push	ecx
movsx	edx, WORD PTR _nPk$[ebp]
push	edx
mov	eax, DWORD PTR _iPk$[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	edx, DWORD PTR _iKey$[ebp]
push	edx
mov	eax, DWORD PTR _iEphCur$[ebp]
push	eax
push	107					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN23@sqlite3Del
mov	edx, 1
mov	WORD PTR _nKey$[ebp], dx
mov	eax, DWORD PTR _iKey$[ebp]
push	eax
mov	ecx, DWORD PTR _iRowSet$[ebp]
push	ecx
push	125					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereEnd
add	esp, 4
cmp	DWORD PTR _okOnePass$[ebp], 0
je	SHORT $LN20@sqlite3Del
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrBypass$[ebp], eax
mov	edx, DWORD PTR _addrBypass$[ebp]
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrDelete$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
cmp	DWORD PTR _isView$[ebp], 0
jne	SHORT $LN19@sqlite3Del
lea	eax, DWORD PTR _iIdxCur$[ebp]
push	eax
lea	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
mov	edx, DWORD PTR _aToOpen$[ebp]
push	edx
mov	eax, DWORD PTR _iTabCur$[ebp]
push	eax
push	53					
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3OpenTableAndIndices
add	esp, 28					
cmp	DWORD PTR _okOnePass$[ebp], 0
je	SHORT $LN18@sqlite3Del
mov	eax, DWORD PTR _iDataCur$[ebp]
sub	eax, DWORD PTR _iTabCur$[ebp]
mov	ecx, DWORD PTR _aToOpen$[ebp]
movzx	edx, BYTE PTR [ecx+eax]
test	edx, edx
je	SHORT $LN17@sqlite3Del
movsx	eax, WORD PTR _nKey$[ebp]
push	eax
mov	ecx, DWORD PTR _iKey$[ebp]
push	ecx
mov	edx, DWORD PTR _addrBypass$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
push	65					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
jmp	SHORT $LN16@sqlite3Del
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN15@sqlite3Del
mov	edx, DWORD PTR _iEphCur$[ebp]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrLoop$[ebp], eax
mov	ecx, DWORD PTR _iKey$[ebp]
push	ecx
mov	edx, DWORD PTR _iEphCur$[ebp]
push	edx
push	98					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN16@sqlite3Del
mov	ecx, DWORD PTR _iKey$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _iRowSet$[ebp]
push	edx
push	126					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _addrLoop$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN13@sqlite3Del
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3GetVTable
add	esp, 8
mov	DWORD PTR _pVTab$2[ebp], eax
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VtabMakeWritable
add	esp, 8
push	-10					
mov	ecx, DWORD PTR _pVTab$2[ebp]
push	ecx
mov	edx, DWORD PTR _iKey$[ebp]
push	edx
push	1
push	0
push	15					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	2
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3MayAbort
add	esp, 4
jmp	SHORT $LN12@sqlite3Del
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	SHORT $LN66@sqlite3Del
mov	DWORD PTR tv481[ebp], 1
jmp	SHORT $LN67@sqlite3Del
mov	DWORD PTR tv481[ebp], 0
mov	edx, DWORD PTR tv481[ebp]
mov	DWORD PTR _count$1[ebp], edx
movzx	eax, BYTE PTR _okOnePass$[ebp]
push	eax
push	10					
movzx	ecx, BYTE PTR _count$1[ebp]
push	ecx
movzx	edx, WORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _iKey$[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GenerateRowDelete
add	esp, 40					
cmp	DWORD PTR _okOnePass$[ebp], 0
je	SHORT $LN11@sqlite3Del
mov	eax, DWORD PTR _addrBypass$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
jmp	SHORT $LN10@sqlite3Del
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN9@sqlite3Del
mov	edx, DWORD PTR _addrLoop$[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _iEphCur$[ebp]
push	eax
push	9
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addrLoop$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	SHORT $LN10@sqlite3Del
mov	ecx, DWORD PTR _addrLoop$[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addrLoop$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
cmp	DWORD PTR _isView$[ebp], 0
jne	SHORT $LN39@sqlite3Del
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
jne	SHORT $LN39@sqlite3Del
cmp	DWORD PTR _pPk$[ebp], 0
jne	SHORT $LN6@sqlite3Del
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$[ebp], ecx
jmp	SHORT $LN5@sqlite3Del
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN39@sqlite3Del
mov	edx, DWORD PTR _iIdxCur$[ebp]
add	edx, DWORD PTR _i$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN4@sqlite3Del
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
jne	SHORT $LN2@sqlite3Del
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+412], 0
jne	SHORT $LN2@sqlite3Del
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AutoincrementEnd
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 128				
je	SHORT $delete_from_cleanup$68
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
jne	SHORT $delete_from_cleanup$68
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+412], 0
jne	SHORT $delete_from_cleanup$68
push	1
mov	ecx, DWORD PTR _memCnt$[ebp]
push	ecx
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG108293
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
lea	edx, DWORD PTR _sContext$[ebp]
push	edx
call	_sqlite3AuthContextPop
add	esp, 4
mov	eax, DWORD PTR _pTabList$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListDelete
add	esp, 8
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, DWORD PTR _aToOpen$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OpenTable PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _opcode$[ebp], 53		
jne	SHORT $LN5@sqlite3Ope
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN6@sqlite3Ope
mov	DWORD PTR tv69[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
movzx	eax, BYTE PTR tv69[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TableLock
add	esp, 20					
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
jne	SHORT $LN2@sqlite3Ope
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _iCur$[ebp]
push	eax
mov	ecx, DWORD PTR _opcode$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
jmp	SHORT $LN3@sqlite3Ope
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$1[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pPk$1[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _iCur$[ebp]
push	ecx
mov	edx, DWORD PTR _opcode$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _pPk$1[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IsReadOnly PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN2@sqlite3IsR
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3GetVTable
add	esp, 8
mov	edx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [edx]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN3@sqlite3IsR
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 1
je	SHORT $LN4@sqlite3IsR
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+24]
and	edx, 2048				
jne	SHORT $LN4@sqlite3IsR
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	SHORT $LN4@sqlite3IsR
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG108155
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	SHORT $LN5@sqlite3IsR
cmp	DWORD PTR _viewOk$[ebp], 0
jne	SHORT $LN1@sqlite3IsR
mov	edx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN1@sqlite3IsR
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG108157
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	SHORT $LN5@sqlite3IsR
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3SrcListLookup PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pSrc$[ebp]
add	eax, 8
mov	DWORD PTR _pItem$[ebp], eax
mov	ecx, DWORD PTR _pItem$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3LocateTableItem
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DeleteTable
add	esp, 8
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [ecx+16], edx
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN2@sqlite3Src
mov	eax, DWORD PTR _pTab$[ebp]
mov	cx, WORD PTR [eax+40]
add	cx, 1
mov	edx, DWORD PTR _pTab$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pItem$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3IndexedByLookup
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Src
mov	DWORD PTR _pTab$[ebp], 0
mov	eax, DWORD PTR _pTab$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SelectDelete PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3Sel
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_clearSelect
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3SelectNew PROC
push	ebp
mov	ebp, esp
sub	esp, 84					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
push	72					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN6@sqlite3Sel
lea	eax, DWORD PTR _standin$[ebp]
mov	DWORD PTR _pNew$[ebp], eax
push	72					
push	0
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
call	_memset
add	esp, 12					
cmp	DWORD PTR _pEList$[ebp], 0
jne	SHORT $LN5@sqlite3Sel
push	0
push	116					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Expr
add	esp, 12					
push	eax
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pEList$[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pEList$[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _pSrc$[ebp], 0
jne	SHORT $LN4@sqlite3Sel
push	88					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pSrc$[ebp], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pSrc$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _pWhere$[ebp]
mov	DWORD PTR [eax+36], ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pGroupBy$[ebp]
mov	DWORD PTR [edx+40], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pHaving$[ebp]
mov	DWORD PTR [ecx+44], edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _pOrderBy$[ebp]
mov	DWORD PTR [eax+48], ecx
mov	edx, DWORD PTR _pNew$[ebp]
mov	ax, WORD PTR _selFlags$[ebp]
mov	WORD PTR [edx+6], ax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	BYTE PTR [ecx+4], 119			
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pLimit$[ebp]
mov	DWORD PTR [edx+60], eax
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR _pOffset$[ebp]
mov	DWORD PTR [ecx+64], edx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+ecx+16], -1
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+eax+16], -1
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN1@sqlite3Sel
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_clearSelect
add	esp, 8
lea	eax, DWORD PTR _standin$[ebp]
cmp	DWORD PTR _pNew$[ebp], eax
je	SHORT $LN2@sqlite3Sel
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	DWORD PTR _pNew$[ebp], 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Select PROC
push	ebp
mov	ebp, esp
sub	esp, 460				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+464]
mov	DWORD PTR _iRestoreSelectId$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+468]
mov	DWORD PTR [edx+464], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+468]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+468], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN97@sqlite3Sel
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
jne	SHORT $LN97@sqlite3Sel
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
je	SHORT $LN98@sqlite3Sel
mov	eax, 1
jmp	$LN99@sqlite3Sel
push	0
push	0
push	0
push	21					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN96@sqlite3Sel
mov	eax, 1
jmp	$LN99@sqlite3Sel
push	48					
push	0
lea	edx, DWORD PTR _sAggInfo$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 8
jg	SHORT $LN95@sqlite3Sel
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprListDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+48], 0
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, -2					
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+6], cx
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SelectPrep
add	esp, 12					
push	28					
push	0
lea	edx, DWORD PTR _sSort$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _sSort$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _pTabList$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pEList$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
jne	SHORT $LN93@sqlite3Sel
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN94@sqlite3Sel
jmp	$select_end$121
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 4
je	SHORT $LN101@sqlite3Sel
mov	DWORD PTR tv149[ebp], 1
jmp	SHORT $LN102@sqlite3Sel
mov	DWORD PTR tv149[ebp], 0
mov	edx, DWORD PTR tv149[ebp]
mov	DWORD PTR _isAgg$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN92@sqlite3Sel
jmp	$select_end$121
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pDest$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_checkForMultiColumnSelectError
add	esp, 12					
test	eax, eax
je	SHORT $LN91@sqlite3Sel
jmp	$select_end$121
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN90@sqlite3Sel
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+52], 0
jne	$LN88@sqlite3Sel
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	$LN88@sqlite3Sel
imul	eax, DWORD PTR _i$[ebp], 80
mov	ecx, DWORD PTR _pTabList$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _pItem$48[ebp], edx
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pSub$38[ebp], ecx
cmp	DWORD PTR _pSub$38[ebp], 0
jne	SHORT $LN87@sqlite3Sel
jmp	SHORT $LN89@sqlite3Sel
mov	edx, DWORD PTR _pItem$48[ebp]
cmp	DWORD PTR [edx+24], 0
je	SHORT $LN86@sqlite3Sel
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 2
and	ecx, 1
jne	SHORT $LN85@sqlite3Sel
mov	edx, DWORD PTR _pItem$48[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
mov	ecx, DWORD PTR _pItem$48[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN89@sqlite3Sel
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3SelectExprHeight
add	esp, 4
mov	edx, DWORD PTR _pParse$[ebp]
add	eax, DWORD PTR [edx+460]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+460], eax
mov	edx, DWORD PTR _pSub$38[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, 4
je	SHORT $LN103@sqlite3Sel
mov	DWORD PTR tv190[ebp], 1
jmp	SHORT $LN104@sqlite3Sel
mov	DWORD PTR tv190[ebp], 0
mov	ecx, DWORD PTR tv190[ebp]
mov	DWORD PTR _isAggSub$8[ebp], ecx
mov	edx, DWORD PTR _isAggSub$8[ebp]
push	edx
mov	eax, DWORD PTR _isAgg$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_flattenSubquery
add	esp, 20					
test	eax, eax
je	SHORT $LN84@sqlite3Sel
cmp	DWORD PTR _isAggSub$8[ebp], 0
je	SHORT $LN83@sqlite3Sel
mov	DWORD PTR _isAgg$[ebp], 1
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+6]
or	edx, 4
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+6], dx
mov	DWORD PTR _i$[ebp], -1
jmp	$LN82@sqlite3Sel
mov	ecx, DWORD PTR _pTabList$[ebp]
cmp	DWORD PTR [ecx], 1
jne	$LN81@sqlite3Sel
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, WORD PTR [edx+60]
and	eax, 256				
jne	$LN81@sqlite3Sel
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 1
mov	DWORD PTR _addrTop$13[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv216[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv216[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR tv216[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _addrTop$13[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
push	20					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR _addrTop$13[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR _pItem$48[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	13					
lea	ecx, DWORD PTR _dest$1[ebp]
push	ecx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	edx, DWORD PTR _pItem$48[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	cl, BYTE PTR [eax+468]
mov	BYTE PTR [edx+44], cl
lea	edx, DWORD PTR _dest$1[ebp]
push	edx
mov	eax, DWORD PTR _pSub$38[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Select
add	esp, 12					
mov	edx, DWORD PTR _pSub$38[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
mov	ecx, DWORD PTR [edx+24]
push	ecx
call	_sqlite3LogEst
add	esp, 8
mov	edx, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR [edx+16]
mov	WORD PTR [ecx+28], ax
mov	edx, DWORD PTR _pItem$48[ebp]
mov	eax, DWORD PTR [edx+40]
or	eax, 4
mov	ecx, DWORD PTR _pItem$48[ebp]
mov	DWORD PTR [ecx+40], eax
mov	edx, DWORD PTR _pItem$48[ebp]
mov	eax, DWORD PTR _dest$1[ebp+8]
mov	DWORD PTR [edx+32], eax
mov	ecx, DWORD PTR _pItem$48[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	21					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _addrTop$13[ebp]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ClearTempRegCache
add	esp, 4
jmp	$LN82@sqlite3Sel
mov	DWORD PTR _onceAddr$26[ebp], 0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv253[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv253[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR _pItem$48[ebp]
mov	eax, DWORD PTR tv253[ebp]
mov	DWORD PTR [edx+28], eax
mov	ecx, DWORD PTR _pItem$48[ebp]
mov	edx, DWORD PTR [ecx+28]
push	edx
push	0
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _topAddr$10[ebp], eax
mov	ecx, DWORD PTR _topAddr$10[ebp]
add	ecx, 1
mov	edx, DWORD PTR _pItem$48[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR [eax+40]
shr	ecx, 1
and	ecx, 1
jne	SHORT $LN78@sqlite3Sel
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeOnce
add	esp, 4
mov	DWORD PTR _onceAddr$26[ebp], eax
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
push	12					
lea	edx, DWORD PTR _dest$1[ebp]
push	edx
call	_sqlite3SelectDestInit
add	esp, 12					
mov	eax, DWORD PTR _pItem$48[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	dl, BYTE PTR [ecx+468]
mov	BYTE PTR [eax+44], dl
lea	eax, DWORD PTR _dest$1[ebp]
push	eax
mov	ecx, DWORD PTR _pSub$38[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Select
add	esp, 12					
mov	eax, DWORD PTR _pSub$38[ebp]
mov	ecx, DWORD PTR [eax+28]
push	ecx
mov	edx, DWORD PTR [eax+24]
push	edx
call	_sqlite3LogEst
add	esp, 8
mov	ecx, DWORD PTR _pItem$48[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	WORD PTR [edx+28], ax
cmp	DWORD PTR _onceAddr$26[ebp], 0
je	SHORT $LN77@sqlite3Sel
mov	eax, DWORD PTR _onceAddr$26[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _pItem$48[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
push	18					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _retAddr$7[ebp], eax
mov	edx, DWORD PTR _retAddr$7[ebp]
push	edx
mov	eax, DWORD PTR _topAddr$10[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ClearTempRegCache
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN76@sqlite3Sel
jmp	$select_end$121
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3SelectExprHeight
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+460]
sub	edx, eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+460], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pTabList$[ebp], edx
mov	eax, DWORD PTR _pDest$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 8
jle	SHORT $LN75@sqlite3Sel
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	DWORD PTR _sSort$[ebp], eax
jmp	$LN89@sqlite3Sel
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pEList$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR _pWhere$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	DWORD PTR _pGroupBy$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+44]
mov	DWORD PTR _pHaving$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 1
je	SHORT $LN105@sqlite3Sel
mov	DWORD PTR tv315[ebp], 1
jmp	SHORT $LN106@sqlite3Sel
mov	DWORD PTR tv315[ebp], 0
mov	dl, BYTE PTR tv315[ebp]
mov	BYTE PTR _sDistinct$[ebp], dl
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN74@sqlite3Sel
mov	ecx, DWORD PTR _pDest$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_multiSelect
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _iRestoreSelectId$[ebp]
mov	DWORD PTR [ecx+464], edx
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN99@sqlite3Sel
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 5
cmp	ecx, 1
jne	SHORT $LN73@sqlite3Sel
push	-1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _sSort$[ebp]
push	ecx
call	_sqlite3ExprListCompare
add	esp, 12					
test	eax, eax
jne	SHORT $LN73@sqlite3Sel
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+6]
and	eax, -2					
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+6], ax
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprListDup
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+40], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	DWORD PTR _pGroupBy$[ebp], ecx
mov	DWORD PTR _sSort$[ebp], 0
cmp	DWORD PTR _sSort$[ebp], 0
je	SHORT $LN72@sqlite3Sel
push	0
push	0
mov	edx, DWORD PTR _sSort$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_keyInfoFromExprList
add	esp, 16					
mov	DWORD PTR _pKeyInfo$6[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _sSort$[ebp+8], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
push	-6					
mov	eax, DWORD PTR _pKeyInfo$6[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _sSort$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, 2
push	edx
mov	eax, DWORD PTR _sSort$[ebp+8]
push	eax
push	55					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	DWORD PTR _sSort$[ebp+20], eax
jmp	SHORT $LN71@sqlite3Sel
mov	DWORD PTR _sSort$[ebp+20], -1
mov	edx, DWORD PTR _pDest$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 12					
jne	SHORT $LN70@sqlite3Sel
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pDest$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
push	55					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _iEnd$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], -1
mov	DWORD PTR [ecx+28], 2147483647		
mov	edx, DWORD PTR _iEnd$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_computeLimitRegisters
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+8], 0
jne	SHORT $LN69@sqlite3Sel
cmp	DWORD PTR _sSort$[ebp+20], 0
jl	SHORT $LN69@sqlite3Sel
mov	eax, DWORD PTR _sSort$[ebp+20]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	BYTE PTR [eax], 56			
movzx	edx, BYTE PTR _sSort$[ebp+24]
or	edx, 1
mov	BYTE PTR _sSort$[ebp+24], dl
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 1
je	SHORT $LN68@sqlite3Sel
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _sDistinct$[ebp+4], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
push	-6					
push	0
push	0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_keyInfoFromExprList
add	esp, 16					
push	eax
push	0
push	0
mov	ecx, DWORD PTR _sDistinct$[ebp+4]
push	ecx
push	55					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	DWORD PTR _sDistinct$[ebp+8], eax
push	8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	BYTE PTR _sDistinct$[ebp+1], 3
jmp	SHORT $LN67@sqlite3Sel
mov	BYTE PTR _sDistinct$[ebp+1], 0
cmp	DWORD PTR _isAgg$[ebp], 0
jne	$LN66@sqlite3Sel
cmp	DWORD PTR _pGroupBy$[ebp], 0
jne	$LN66@sqlite3Sel
movzx	ecx, BYTE PTR _sDistinct$[ebp]
test	ecx, ecx
je	SHORT $LN107@sqlite3Sel
mov	DWORD PTR tv451[ebp], 1024		
jmp	SHORT $LN108@sqlite3Sel
mov	DWORD PTR tv451[ebp], 0
mov	dx, WORD PTR tv451[ebp]
mov	WORD PTR _wctrlFlags$27[ebp], dx
push	0
movzx	eax, WORD PTR _wctrlFlags$27[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _sSort$[ebp]
push	eax
mov	ecx, DWORD PTR _pWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pWInfo$[ebp], eax
cmp	DWORD PTR _pWInfo$[ebp], 0
jne	SHORT $LN65@sqlite3Sel
jmp	$select_end$121
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_sqlite3WhereOutputRowCount
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv1419[ebp], eax
mov	DWORD PTR tv1419[ebp+4], edx
mov	DWORD PTR tv1422[ebp], ecx
mov	edx, DWORD PTR tv1422[ebp]
mov	eax, DWORD PTR tv1419[ebp+4]
cmp	eax, DWORD PTR [edx+28]
ja	SHORT $LN64@sqlite3Sel
jb	SHORT $LN119@sqlite3Sel
mov	ecx, DWORD PTR tv1422[ebp]
mov	edx, DWORD PTR tv1419[ebp]
cmp	edx, DWORD PTR [ecx+24]
jae	SHORT $LN64@sqlite3Sel
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereOutputRowCount
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	DWORD PTR [ecx+28], edx
movzx	edx, BYTE PTR _sDistinct$[ebp]
test	edx, edx
je	SHORT $LN63@sqlite3Sel
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereIsDistinct
add	esp, 4
test	eax, eax
je	SHORT $LN63@sqlite3Sel
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_sqlite3WhereIsDistinct
add	esp, 4
mov	BYTE PTR _sDistinct$[ebp+1], al
cmp	DWORD PTR _sSort$[ebp], 0
je	SHORT $LN62@sqlite3Sel
mov	edx, DWORD PTR _pWInfo$[ebp]
push	edx
call	_sqlite3WhereIsOrdered
add	esp, 4
mov	DWORD PTR _sSort$[ebp+4], eax
mov	eax, DWORD PTR _sSort$[ebp]
mov	ecx, DWORD PTR _sSort$[ebp+4]
cmp	ecx, DWORD PTR [eax]
jne	SHORT $LN62@sqlite3Sel
mov	DWORD PTR _sSort$[ebp], 0
cmp	DWORD PTR _sSort$[ebp+20], 0
jl	SHORT $LN60@sqlite3Sel
cmp	DWORD PTR _sSort$[ebp], 0
jne	SHORT $LN60@sqlite3Sel
mov	edx, DWORD PTR _sSort$[ebp+20]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeToNoop
add	esp, 8
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_sqlite3WhereBreakLabel
add	esp, 4
push	eax
mov	edx, DWORD PTR _pWInfo$[ebp]
push	edx
call	_sqlite3WhereContinueLabel
add	esp, 4
push	eax
mov	eax, DWORD PTR _pDest$[ebp]
push	eax
lea	ecx, DWORD PTR _sDistinct$[ebp]
push	ecx
lea	edx, DWORD PTR _sSort$[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_selectInnerLoop
add	esp, 36					
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereEnd
add	esp, 4
jmp	$LN59@sqlite3Sel
mov	DWORD PTR _sortPTab$33[ebp], 0
mov	DWORD PTR _sortOut$22[ebp], 0
mov	DWORD PTR _orderByGrp$15[ebp], 0
cmp	DWORD PTR _pGroupBy$[ebp], 0
je	$LN58@sqlite3Sel
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _k$40[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$41[ebp], eax
jmp	SHORT $LN57@sqlite3Sel
mov	ecx, DWORD PTR _k$40[ebp]
sub	ecx, 1
mov	DWORD PTR _k$40[ebp], ecx
mov	edx, DWORD PTR _pItem$41[ebp]
add	edx, 24					
mov	DWORD PTR _pItem$41[ebp], edx
cmp	DWORD PTR _k$40[ebp], 0
jle	SHORT $LN55@sqlite3Sel
xor	eax, eax
mov	ecx, DWORD PTR _pItem$41[ebp]
mov	WORD PTR [ecx+22], ax
jmp	SHORT $LN56@sqlite3Sel
mov	edx, DWORD PTR _pGroupBy$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _k$40[ebp], eax
mov	ecx, DWORD PTR _pGroupBy$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pItem$41[ebp], edx
jmp	SHORT $LN54@sqlite3Sel
mov	eax, DWORD PTR _k$40[ebp]
sub	eax, 1
mov	DWORD PTR _k$40[ebp], eax
mov	ecx, DWORD PTR _pItem$41[ebp]
add	ecx, 24					
mov	DWORD PTR _pItem$41[ebp], ecx
cmp	DWORD PTR _k$40[ebp], 0
jle	SHORT $LN52@sqlite3Sel
xor	edx, edx
mov	eax, DWORD PTR _pItem$41[ebp]
mov	WORD PTR [eax+22], dx
jmp	SHORT $LN53@sqlite3Sel
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv1478[ebp], ecx
mov	edx, DWORD PTR tv1478[ebp]
cmp	DWORD PTR [edx+28], 0
ja	SHORT $LN120@sqlite3Sel
mov	eax, DWORD PTR tv1478[ebp]
cmp	DWORD PTR [eax+24], 100			
jbe	SHORT $LN51@sqlite3Sel
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], 100			
mov	DWORD PTR [ecx+28], 0
jmp	SHORT $LN50@sqlite3Sel
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+24], 1
mov	DWORD PTR [edx+28], 0
push	-1
mov	eax, DWORD PTR _sSort$[ebp]
push	eax
mov	ecx, DWORD PTR _pGroupBy$[ebp]
push	ecx
call	_sqlite3ExprListCompare
add	esp, 12					
test	eax, eax
jne	SHORT $LN49@sqlite3Sel
mov	DWORD PTR _orderByGrp$15[ebp], 1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrEnd$39[ebp], eax
push	32					
push	0
lea	eax, DWORD PTR _sNC$2[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNC$2[ebp], ecx
mov	edx, DWORD PTR _pTabList$[ebp]
mov	DWORD PTR _sNC$2[ebp+4], edx
lea	eax, DWORD PTR _sAggInfo$[ebp]
mov	DWORD PTR _sNC$2[ebp+12], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR _sAggInfo$[ebp+16], edx
cmp	DWORD PTR _pGroupBy$[ebp], 0
je	SHORT $LN109@sqlite3Sel
mov	eax, DWORD PTR _pGroupBy$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	DWORD PTR tv535[ebp], ecx
jmp	SHORT $LN110@sqlite3Sel
mov	DWORD PTR tv535[ebp], 0
mov	edx, DWORD PTR tv535[ebp]
mov	DWORD PTR _sAggInfo$[ebp+12], edx
mov	eax, DWORD PTR _pGroupBy$[ebp]
mov	DWORD PTR _sAggInfo$[ebp+24], eax
mov	ecx, DWORD PTR _pEList$[ebp]
push	ecx
lea	edx, DWORD PTR _sNC$2[ebp]
push	edx
call	_sqlite3ExprAnalyzeAggList
add	esp, 8
mov	eax, DWORD PTR _sSort$[ebp]
push	eax
lea	ecx, DWORD PTR _sNC$2[ebp]
push	ecx
call	_sqlite3ExprAnalyzeAggList
add	esp, 8
cmp	DWORD PTR _pHaving$[ebp], 0
je	SHORT $LN48@sqlite3Sel
mov	edx, DWORD PTR _pHaving$[ebp]
push	edx
lea	eax, DWORD PTR _sNC$2[ebp]
push	eax
call	_sqlite3ExprAnalyzeAggregates
add	esp, 8
mov	ecx, DWORD PTR _sAggInfo$[ebp+32]
mov	DWORD PTR _sAggInfo$[ebp+36], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN47@sqlite3Sel
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _sAggInfo$[ebp+44]
jge	SHORT $LN45@sqlite3Sel
movzx	ecx, BYTE PTR _sNC$2[ebp+28]
or	ecx, 8
mov	BYTE PTR _sNC$2[ebp+28], cl
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _sAggInfo$[ebp+40]
mov	ecx, DWORD PTR [eax+edx]
mov	edx, DWORD PTR [ecx+20]
push	edx
lea	eax, DWORD PTR _sNC$2[ebp]
push	eax
call	_sqlite3ExprAnalyzeAggList
add	esp, 8
movzx	ecx, BYTE PTR _sNC$2[ebp+28]
and	ecx, -9					
mov	BYTE PTR _sNC$2[ebp+28], cl
jmp	SHORT $LN46@sqlite3Sel
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	DWORD PTR _sAggInfo$[ebp+20], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN44@sqlite3Sel
jmp	$select_end$121
cmp	DWORD PTR _pGroupBy$[ebp], 0
je	$LN43@sqlite3Sel
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _sAggInfo$[ebp+4], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], eax
push	0
push	0
mov	edx, DWORD PTR _pGroupBy$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_keyInfoFromExprList
add	esp, 16					
mov	DWORD PTR _pKeyInfo$12[ebp], eax
push	-6					
mov	ecx, DWORD PTR _pKeyInfo$12[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _sAggInfo$[ebp+12]
push	edx
mov	eax, DWORD PTR _sAggInfo$[ebp+4]
push	eax
push	56					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	DWORD PTR _addrSortingIdx$3[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv613[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv613[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv613[ebp]
mov	DWORD PTR _iUseFlag$14[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv616[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv616[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv616[ebp]
mov	DWORD PTR _iAbortFlag$20[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv619[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv619[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv619[ebp]
mov	DWORD PTR _regOutputRow$36[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrOutputRow$42[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv624[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv624[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR tv624[ebp]
mov	DWORD PTR _regReset$25[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrReset$28[ebp], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _iAMem$31[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	ecx, DWORD PTR _pGroupBy$[ebp]
add	eax, DWORD PTR [ecx]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _iBMem$32[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
mov	ecx, DWORD PTR _pGroupBy$[ebp]
add	eax, DWORD PTR [ecx]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], eax
mov	eax, DWORD PTR _iAbortFlag$20[ebp]
push	eax
push	0
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _iUseFlag$14[ebp]
push	edx
push	0
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _pGroupBy$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _iAMem$31[ebp]
lea	ecx, DWORD PTR [eax+edx-1]
push	ecx
mov	edx, DWORD PTR _iAMem$31[ebp]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _addrReset$28[ebp]
push	ecx
mov	edx, DWORD PTR _regReset$25[ebp]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _orderByGrp$15[ebp], 0
je	SHORT $LN111@sqlite3Sel
mov	DWORD PTR tv662[ebp], 2048		
jmp	SHORT $LN112@sqlite3Sel
mov	DWORD PTR tv662[ebp], 0
push	0
mov	ecx, DWORD PTR tv662[ebp]
or	ecx, 256				
push	ecx
push	0
mov	edx, DWORD PTR _pGroupBy$[ebp]
push	edx
mov	eax, DWORD PTR _pWhere$[ebp]
push	eax
mov	ecx, DWORD PTR _pTabList$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pWInfo$[ebp], eax
cmp	DWORD PTR _pWInfo$[ebp], 0
jne	SHORT $LN42@sqlite3Sel
jmp	$select_end$121
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereIsOrdered
add	esp, 4
mov	ecx, DWORD PTR _pGroupBy$[ebp]
cmp	eax, DWORD PTR [ecx]
jne	SHORT $LN41@sqlite3Sel
mov	DWORD PTR _groupBySort$35[ebp], 0
jmp	$LN40@sqlite3Sel
movzx	edx, BYTE PTR _sDistinct$[ebp]
test	edx, edx
je	SHORT $LN113@sqlite3Sel
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 1
jne	SHORT $LN113@sqlite3Sel
mov	DWORD PTR tv682[ebp], OFFSET $SG115057
jmp	SHORT $LN114@sqlite3Sel
mov	DWORD PTR tv682[ebp], OFFSET $SG115058
mov	edx, DWORD PTR tv682[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_explainTempTable
add	esp, 8
mov	DWORD PTR _groupBySort$35[ebp], 1
mov	ecx, DWORD PTR _pGroupBy$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _nGroupBy$30[ebp], edx
mov	eax, DWORD PTR _nGroupBy$30[ebp]
add	eax, 1
mov	DWORD PTR _nCol$37[ebp], eax
mov	ecx, DWORD PTR _nGroupBy$30[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN39@sqlite3Sel
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _sAggInfo$[ebp+32]
jge	SHORT $LN37@sqlite3Sel
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _sAggInfo$[ebp+28]
mov	eax, DWORD PTR [edx+ecx+12]
cmp	eax, DWORD PTR _j$[ebp]
jl	SHORT $LN36@sqlite3Sel
mov	ecx, DWORD PTR _nCol$37[ebp]
add	ecx, 1
mov	DWORD PTR _nCol$37[ebp], ecx
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
jmp	SHORT $LN38@sqlite3Sel
mov	eax, DWORD PTR _nCol$37[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _regBase$34[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheClear
add	esp, 4
push	0
mov	eax, DWORD PTR _regBase$34[ebp]
push	eax
mov	ecx, DWORD PTR _pGroupBy$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeExprList
add	esp, 16					
mov	eax, DWORD PTR _regBase$34[ebp]
add	eax, DWORD PTR _nGroupBy$30[ebp]
push	eax
mov	ecx, DWORD PTR _sAggInfo$[ebp+4]
push	ecx
push	68					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _nGroupBy$30[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN35@sqlite3Sel
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _sAggInfo$[ebp+32]
jge	$LN33@sqlite3Sel
imul	eax, DWORD PTR _i$[ebp], 24
add	eax, DWORD PTR _sAggInfo$[ebp+28]
mov	DWORD PTR _pCol$29[ebp], eax
mov	ecx, DWORD PTR _pCol$29[ebp]
mov	edx, DWORD PTR [ecx+12]
cmp	edx, DWORD PTR _j$[ebp]
jl	SHORT $LN32@sqlite3Sel
mov	eax, DWORD PTR _j$[ebp]
add	eax, DWORD PTR _regBase$34[ebp]
mov	DWORD PTR _r1$18[ebp], eax
push	0
mov	ecx, DWORD PTR _r1$18[ebp]
push	ecx
mov	edx, DWORD PTR _pCol$29[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pCol$29[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pCol$29[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCodeGetColumn
add	esp, 24					
mov	DWORD PTR _r2$9[ebp], eax
mov	eax, DWORD PTR _r1$18[ebp]
cmp	eax, DWORD PTR _r2$9[ebp]
je	SHORT $LN31@sqlite3Sel
mov	ecx, DWORD PTR _r1$18[ebp]
push	ecx
mov	edx, DWORD PTR _r2$9[ebp]
push	edx
push	34					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
jmp	$LN34@sqlite3Sel
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRecord$24[ebp], eax
mov	eax, DWORD PTR _regRecord$24[ebp]
push	eax
mov	ecx, DWORD PTR _nCol$37[ebp]
push	ecx
mov	edx, DWORD PTR _regBase$34[ebp]
push	edx
push	48					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _regRecord$24[ebp]
push	ecx
mov	edx, DWORD PTR _sAggInfo$[ebp+4]
push	edx
push	106					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _regRecord$24[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	eax, DWORD PTR _nCol$37[ebp]
push	eax
mov	ecx, DWORD PTR _regBase$34[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempRange
add	esp, 12					
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereEnd
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _sortPTab$33[ebp], edx
mov	eax, DWORD PTR _sortPTab$33[ebp]
mov	DWORD PTR _sAggInfo$[ebp+8], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _sortOut$22[ebp], eax
mov	edx, DWORD PTR _nCol$37[ebp]
push	edx
mov	eax, DWORD PTR _sortOut$22[ebp]
push	eax
mov	ecx, DWORD PTR _sortPTab$33[ebp]
push	ecx
push	57					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _addrEnd$39[ebp]
push	eax
mov	ecx, DWORD PTR _sAggInfo$[ebp+4]
push	ecx
push	103					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	BYTE PTR _sAggInfo$[ebp+1], 1
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheClear
add	esp, 4
cmp	DWORD PTR _orderByGrp$15[ebp], 0
je	SHORT $LN30@sqlite3Sel
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, WORD PTR [ecx+60]
and	edx, 4
jne	SHORT $LN30@sqlite3Sel
cmp	DWORD PTR _groupBySort$35[ebp], 0
jne	SHORT $LN29@sqlite3Sel
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereIsSorted
add	esp, 4
test	eax, eax
je	SHORT $LN30@sqlite3Sel
mov	DWORD PTR _sSort$[ebp], 0
mov	ecx, DWORD PTR _sSort$[ebp+20]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeToNoop
add	esp, 8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrTopOfLoop$4[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCacheClear
add	esp, 4
cmp	DWORD PTR _groupBySort$35[ebp], 0
je	SHORT $LN28@sqlite3Sel
mov	edx, DWORD PTR _sortOut$22[ebp]
push	edx
mov	eax, DWORD PTR _sAggInfo$[ebp+4]
push	eax
push	95					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN27@sqlite3Sel
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pGroupBy$[ebp]
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN25@sqlite3Sel
cmp	DWORD PTR _groupBySort$35[ebp], 0
je	SHORT $LN24@sqlite3Sel
mov	edx, DWORD PTR _iBMem$32[ebp]
add	edx, DWORD PTR _j$[ebp]
push	edx
mov	eax, DWORD PTR _j$[ebp]
push	eax
mov	ecx, DWORD PTR _sortPTab$33[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
cmp	DWORD PTR _j$[ebp], 0
jne	SHORT $LN23@sqlite3Sel
push	32					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	SHORT $LN22@sqlite3Sel
mov	BYTE PTR _sAggInfo$[ebp], 1
mov	ecx, DWORD PTR _iBMem$32[ebp]
add	ecx, DWORD PTR _j$[ebp]
push	ecx
imul	edx, DWORD PTR _j$[ebp], 24
mov	eax, DWORD PTR _pGroupBy$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCode
add	esp, 12					
jmp	SHORT $LN26@sqlite3Sel
push	-6					
mov	ecx, DWORD PTR _pKeyInfo$12[ebp]
push	ecx
call	_sqlite3KeyInfoRef
add	esp, 4
push	eax
mov	edx, DWORD PTR _pGroupBy$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _iBMem$32[ebp]
push	ecx
mov	edx, DWORD PTR _iAMem$31[ebp]
push	edx
push	41					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _j1$17[ebp], eax
mov	edx, DWORD PTR _j1$17[ebp]
add	edx, 1
push	edx
push	0
mov	eax, DWORD PTR _j1$17[ebp]
add	eax, 1
push	eax
push	42					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _pGroupBy$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _iAMem$31[ebp]
push	ecx
mov	edx, DWORD PTR _iBMem$32[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCodeMove
add	esp, 16					
mov	ecx, DWORD PTR _addrOutputRow$42[ebp]
push	ecx
mov	edx, DWORD PTR _regOutputRow$36[ebp]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrEnd$39[ebp]
push	ecx
mov	edx, DWORD PTR _iAbortFlag$20[ebp]
push	edx
push	134					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrReset$28[ebp]
push	ecx
mov	edx, DWORD PTR _regReset$25[ebp]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _j1$17[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
lea	eax, DWORD PTR _sAggInfo$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_updateAccumulator
add	esp, 8
mov	edx, DWORD PTR _iUseFlag$14[ebp]
push	edx
push	1
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _groupBySort$35[ebp], 0
je	SHORT $LN21@sqlite3Sel
mov	ecx, DWORD PTR _addrTopOfLoop$4[ebp]
push	ecx
mov	edx, DWORD PTR _sAggInfo$[ebp+4]
push	edx
push	5
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN20@sqlite3Sel
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_sqlite3WhereEnd
add	esp, 4
mov	edx, DWORD PTR _addrSortingIdx$3[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeToNoop
add	esp, 8
mov	ecx, DWORD PTR _addrOutputRow$42[ebp]
push	ecx
mov	edx, DWORD PTR _regOutputRow$36[ebp]
push	edx
push	17					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addrEnd$39[ebp]
push	ecx
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrSetAbort$5[ebp], eax
mov	ecx, DWORD PTR _iAbortFlag$20[ebp]
push	ecx
push	1
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regOutputRow$36[ebp]
push	eax
push	18					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	edx, DWORD PTR _addrOutputRow$42[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrOutputRow$42[ebp], eax
mov	edx, DWORD PTR _addrOutputRow$42[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _iUseFlag$14[ebp]
push	eax
push	134					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _regOutputRow$36[ebp]
push	edx
push	18					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
lea	ecx, DWORD PTR _sAggInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_finalizeAggFunctions
add	esp, 8
push	8
mov	eax, DWORD PTR _addrOutputRow$42[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pHaving$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	eax, DWORD PTR _addrSetAbort$5[ebp]
push	eax
mov	ecx, DWORD PTR _addrOutputRow$42[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _pDest$[ebp]
push	edx
lea	eax, DWORD PTR _sDistinct$[ebp]
push	eax
lea	ecx, DWORD PTR _sSort$[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_selectInnerLoop
add	esp, 36					
mov	eax, DWORD PTR _regOutputRow$36[ebp]
push	eax
push	18					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	edx, DWORD PTR _addrReset$28[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
lea	ecx, DWORD PTR _sAggInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_resetAccumulator
add	esp, 8
mov	eax, DWORD PTR _regReset$25[ebp]
push	eax
push	18					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	$LN19@sqlite3Sel
mov	DWORD PTR _pDel$16[ebp], 0
lea	edx, DWORD PTR _sAggInfo$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_isSimpleCount
add	esp, 8
mov	DWORD PTR _pTab$46[ebp], eax
cmp	DWORD PTR _pTab$46[ebp], 0
je	$LN18@sqlite3Sel
mov	ecx, DWORD PTR _pTab$46[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$23[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+68]
mov	DWORD PTR _iCsr$19[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+68], edx
mov	DWORD PTR _pKeyInfo$21[ebp], 0
mov	DWORD PTR _pBest$43[ebp], 0
mov	ecx, DWORD PTR _pTab$46[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _iRoot$11[ebp], edx
mov	eax, DWORD PTR _iDb$23[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeVerifySchema
add	esp, 8
mov	edx, DWORD PTR _pTab$46[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
mov	ecx, DWORD PTR _pTab$46[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _iDb$23[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TableLock
add	esp, 20					
mov	edx, DWORD PTR _pTab$46[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
je	SHORT $LN17@sqlite3Sel
mov	ecx, DWORD PTR _pTab$46[ebp]
push	ecx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pBest$43[ebp], eax
mov	edx, DWORD PTR _pTab$46[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$45[ebp], eax
jmp	SHORT $LN16@sqlite3Sel
mov	ecx, DWORD PTR _pIdx$45[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$45[ebp], edx
cmp	DWORD PTR _pIdx$45[ebp], 0
je	SHORT $LN14@sqlite3Sel
mov	eax, DWORD PTR _pIdx$45[ebp]
mov	ecx, DWORD PTR [eax+56]
shr	ecx, 2
and	ecx, 1
jne	SHORT $LN13@sqlite3Sel
mov	edx, DWORD PTR _pIdx$45[ebp]
movsx	eax, WORD PTR [edx+48]
mov	ecx, DWORD PTR _pTab$46[ebp]
movsx	edx, WORD PTR [ecx+42]
cmp	eax, edx
jge	SHORT $LN13@sqlite3Sel
mov	eax, DWORD PTR _pIdx$45[ebp]
cmp	DWORD PTR [eax+36], 0
jne	SHORT $LN13@sqlite3Sel
cmp	DWORD PTR _pBest$43[ebp], 0
je	SHORT $LN12@sqlite3Sel
mov	ecx, DWORD PTR _pIdx$45[ebp]
movsx	edx, WORD PTR [ecx+48]
mov	eax, DWORD PTR _pBest$43[ebp]
movsx	ecx, WORD PTR [eax+48]
cmp	edx, ecx
jge	SHORT $LN13@sqlite3Sel
mov	edx, DWORD PTR _pIdx$45[ebp]
mov	DWORD PTR _pBest$43[ebp], edx
jmp	SHORT $LN15@sqlite3Sel
cmp	DWORD PTR _pBest$43[ebp], 0
je	SHORT $LN11@sqlite3Sel
mov	eax, DWORD PTR _pBest$43[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	DWORD PTR _iRoot$11[ebp], ecx
mov	edx, DWORD PTR _pBest$43[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3KeyInfoOfIndex
add	esp, 8
mov	DWORD PTR _pKeyInfo$21[ebp], eax
push	1
mov	ecx, DWORD PTR _iDb$23[ebp]
push	ecx
mov	edx, DWORD PTR _iRoot$11[ebp]
push	edx
mov	eax, DWORD PTR _iCsr$19[ebp]
push	eax
push	52					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
cmp	DWORD PTR _pKeyInfo$21[ebp], 0
je	SHORT $LN10@sqlite3Sel
push	-6					
mov	edx, DWORD PTR _pKeyInfo$21[ebp]
push	edx
push	-1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _sAggInfo$[ebp+40]
mov	ecx, DWORD PTR [eax+edx+8]
push	ecx
mov	edx, DWORD PTR _iCsr$19[ebp]
push	edx
push	49					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _iCsr$19[ebp]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	eax, DWORD PTR _pBest$43[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$46[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_explainSimpleCount
add	esp, 12					
jmp	$LN9@sqlite3Sel
mov	DWORD PTR _pMinMax$44[ebp], 0
mov	BYTE PTR _flag$47[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+44], 0
jne	SHORT $LN8@sqlite3Sel
lea	ecx, DWORD PTR _pMinMax$44[ebp]
push	ecx
lea	edx, DWORD PTR _sAggInfo$[ebp]
push	edx
call	_minMaxQuery
add	esp, 8
mov	BYTE PTR _flag$47[ebp], al
movzx	eax, BYTE PTR _flag$47[ebp]
test	eax, eax
je	SHORT $LN7@sqlite3Sel
push	0
mov	ecx, DWORD PTR _pMinMax$44[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDup
add	esp, 12					
mov	DWORD PTR _pMinMax$44[ebp], eax
mov	eax, DWORD PTR _pMinMax$44[ebp]
mov	DWORD PTR _pDel$16[ebp], eax
cmp	DWORD PTR _pMinMax$44[ebp], 0
je	SHORT $LN7@sqlite3Sel
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
jne	SHORT $LN7@sqlite3Sel
movzx	eax, BYTE PTR _flag$47[ebp]
cmp	eax, 1
je	SHORT $LN115@sqlite3Sel
mov	DWORD PTR tv1046[ebp], 1
jmp	SHORT $LN116@sqlite3Sel
mov	DWORD PTR tv1046[ebp], 0
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pMinMax$44[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	al, BYTE PTR tv1046[ebp]
mov	BYTE PTR [ecx+edx+12], al
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pMinMax$44[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
mov	BYTE PTR [edx], 154			
lea	eax, DWORD PTR _sAggInfo$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_resetAccumulator
add	esp, 8
push	0
movzx	dx, BYTE PTR _flag$47[ebp]
movzx	eax, dx
push	eax
push	0
mov	ecx, DWORD PTR _pMinMax$44[ebp]
push	ecx
mov	edx, DWORD PTR _pWhere$[ebp]
push	edx
mov	eax, DWORD PTR _pTabList$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3WhereBegin
add	esp, 28					
mov	DWORD PTR _pWInfo$[ebp], eax
cmp	DWORD PTR _pWInfo$[ebp], 0
jne	SHORT $LN5@sqlite3Sel
mov	edx, DWORD PTR _pDel$16[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
jmp	$select_end$121
lea	ecx, DWORD PTR _sAggInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_updateAccumulator
add	esp, 8
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereIsOrdered
add	esp, 4
test	eax, eax
jle	SHORT $LN4@sqlite3Sel
mov	ecx, DWORD PTR _pWInfo$[ebp]
push	ecx
call	_sqlite3WhereBreakLabel
add	esp, 4
push	eax
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pWInfo$[ebp]
push	eax
call	_sqlite3WhereEnd
add	esp, 4
lea	ecx, DWORD PTR _sAggInfo$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_finalizeAggFunctions
add	esp, 8
mov	DWORD PTR _sSort$[ebp], 0
push	8
mov	eax, DWORD PTR _addrEnd$39[ebp]
push	eax
mov	ecx, DWORD PTR _pHaving$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprIfFalse
add	esp, 16					
mov	eax, DWORD PTR _addrEnd$39[ebp]
push	eax
mov	ecx, DWORD PTR _addrEnd$39[ebp]
push	ecx
mov	edx, DWORD PTR _pDest$[ebp]
push	edx
push	0
push	0
push	-1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_selectInnerLoop
add	esp, 36					
mov	ecx, DWORD PTR _pDel$16[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _addrEnd$39[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
movzx	edx, BYTE PTR _sDistinct$[ebp+1]
cmp	edx, 3
jne	SHORT $LN3@sqlite3Sel
push	OFFSET $SG115115
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_explainTempTable
add	esp, 8
cmp	DWORD PTR _sSort$[ebp], 0
je	SHORT $LN2@sqlite3Sel
cmp	DWORD PTR _sSort$[ebp+4], 0
jle	SHORT $LN117@sqlite3Sel
mov	DWORD PTR tv1105[ebp], OFFSET $SG115117
jmp	SHORT $LN118@sqlite3Sel
mov	DWORD PTR tv1105[ebp], OFFSET $SG115118
mov	ecx, DWORD PTR tv1105[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_explainTempTable
add	esp, 8
mov	eax, DWORD PTR _pDest$[ebp]
push	eax
mov	ecx, DWORD PTR _pEList$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
lea	eax, DWORD PTR _sSort$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_generateSortTail
add	esp, 20					
mov	eax, DWORD PTR _iEnd$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _iRestoreSelectId$[ebp]
mov	DWORD PTR [edx+464], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Sel
mov	ecx, DWORD PTR _pDest$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 9
jne	SHORT $LN1@sqlite3Sel
mov	eax, DWORD PTR _pEList$[ebp]
push	eax
mov	ecx, DWORD PTR _pTabList$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_generateColumnNames
add	esp, 12					
mov	eax, DWORD PTR _sAggInfo$[ebp+28]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _sAggInfo$[ebp+40]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DropIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 40					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN10@sqlite3Dro
jmp	$exit_drop_index$17
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN9@sqlite3Dro
jmp	$exit_drop_index$17
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pName$[ebp]
mov	edx, DWORD PTR [ecx+eax+12]
push	edx
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pName$[ebp]
mov	eax, DWORD PTR [edx+ecx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindIndex
add	esp, 12					
mov	DWORD PTR _pIndex$[ebp], eax
cmp	DWORD PTR _pIndex$[ebp], 0
jne	SHORT $LN8@sqlite3Dro
cmp	DWORD PTR _ifExists$[ebp], 0
jne	SHORT $LN7@sqlite3Dro
push	0
mov	edx, DWORD PTR _pName$[ebp]
push	edx
push	OFFSET $SG107432
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 16					
jmp	SHORT $LN6@sqlite3Dro
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax+edx+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeVerifyNamedSchema
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+17], 1
jmp	$exit_drop_index$17
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
je	SHORT $LN5@sqlite3Dro
push	0
push	OFFSET $SG107435
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_drop_index$17
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	DWORD PTR _code$3[ebp], 10		
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pTab$1[ebp], edx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zDb$4[ebp], eax
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN13@sqlite3Dro
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN13@sqlite3Dro
mov	DWORD PTR tv145[ebp], OFFSET $SG107440
jmp	SHORT $LN14@sqlite3Dro
mov	DWORD PTR tv145[ebp], OFFSET $SG107441
mov	edx, DWORD PTR tv145[ebp]
mov	DWORD PTR _zTab$2[ebp], edx
mov	eax, DWORD PTR _zDb$4[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _zTab$2[ebp]
push	ecx
push	9
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN4@sqlite3Dro
jmp	$exit_drop_index$17
mov	eax, 1
test	eax, eax
je	SHORT $LN3@sqlite3Dro
cmp	DWORD PTR _iDb$[ebp], 0
je	SHORT $LN3@sqlite3Dro
mov	DWORD PTR _code$3[ebp], 12		
mov	ecx, DWORD PTR _zDb$4[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$1[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _code$3[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN2@sqlite3Dro
jmp	$exit_drop_index$17
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	$exit_drop_index$17
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	edx, 1
test	edx, edx
je	SHORT $LN15@sqlite3Dro
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN15@sqlite3Dro
mov	DWORD PTR tv174[ebp], OFFSET $SG107446
jmp	SHORT $LN16@sqlite3Dro
mov	DWORD PTR tv174[ebp], OFFSET $SG107447
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR tv174[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
push	eax
push	OFFSET $SG107448
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3NestedParse
add	esp, 20					
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG107449
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ClearStatTables
add	esp, 16					
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ChangeCookie
add	esp, 8
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_destroyRootPage
add	esp, 12					
push	0
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	122					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _pName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SrcListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CreateIndex PROC
push	ebp
mov	ebp, esp
sub	esp, 200				
push	esi
mov	DWORD PTR _pRet$[ebp], 0
mov	DWORD PTR _pTab$[ebp], 0
mov	DWORD PTR _pIndex$[ebp], 0
mov	DWORD PTR _zName$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	DWORD PTR _pName$[ebp], 0
mov	DWORD PTR _nExtra$[ebp], 0
mov	DWORD PTR _zExtra$[ebp], 0
mov	DWORD PTR _pPk$[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN95@sqlite3Cre
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+451]
test	edx, edx
je	SHORT $LN96@sqlite3Cre
jmp	$exit_create_index$111
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN94@sqlite3Cre
jmp	$exit_create_index$111
cmp	DWORD PTR _pTblName$[ebp], 0
je	$LN93@sqlite3Cre
lea	ecx, DWORD PTR _pName$[ebp]
push	ecx
mov	edx, DWORD PTR _pName2$[ebp]
push	edx
mov	eax, DWORD PTR _pName1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TwoPartName
add	esp, 16					
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN92@sqlite3Cre
jmp	$exit_create_index$111
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
jne	SHORT $LN91@sqlite3Cre
mov	ecx, DWORD PTR _pTblName$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SrcListLookup
add	esp, 8
mov	DWORD PTR _pTab$[ebp], eax
mov	eax, DWORD PTR _pName2$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN91@sqlite3Cre
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN91@sqlite3Cre
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	edx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [edx+68]
cmp	edx, DWORD PTR [eax+ecx+12]
jne	SHORT $LN91@sqlite3Cre
mov	DWORD PTR _iDb$[ebp], 1
mov	eax, DWORD PTR _pName$[ebp]
push	eax
push	OFFSET $SG107238
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
lea	eax, DWORD PTR _sFix$[ebp]
push	eax
call	_sqlite3FixInit
add	esp, 20					
mov	ecx, DWORD PTR _pTblName$[ebp]
push	ecx
lea	edx, DWORD PTR _sFix$[ebp]
push	edx
call	_sqlite3FixSrcList
add	esp, 8
mov	eax, 80					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pTblName$[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateTableItem
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN88@sqlite3Cre
jmp	$exit_create_index$111
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN87@sqlite3Cre
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [ecx+edx+12]
cmp	ecx, DWORD PTR [eax+68]
je	SHORT $LN87@sqlite3Cre
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG107244
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_create_index$111
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
je	SHORT $LN86@sqlite3Cre
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$[ebp], eax
jmp	SHORT $LN85@sqlite3Cre
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN84@sqlite3Cre
jmp	$exit_create_index$111
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
add	ecx, DWORD PTR [edx+16]
mov	DWORD PTR _pDb$[ebp], ecx
push	7
push	OFFSET $SG107253
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN83@sqlite3Cre
push	9
push	OFFSET $SG107254
mov	edx, 1
imul	eax, edx, 7
mov	ecx, DWORD PTR _pTab$[ebp]
add	eax, DWORD PTR [ecx]
push	eax
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
je	SHORT $LN83@sqlite3Cre
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG107255
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_create_index$111
mov	edx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN82@sqlite3Cre
push	OFFSET $SG107257
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$exit_create_index$111
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN81@sqlite3Cre
push	OFFSET $SG107259
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$exit_create_index$111
cmp	DWORD PTR _pName$[ebp], 0
je	$LN80@sqlite3Cre
mov	ecx, DWORD PTR _pName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN79@sqlite3Cre
jmp	$exit_create_index$111
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CheckObjectName
add	esp, 8
test	eax, eax
je	SHORT $LN78@sqlite3Cre
jmp	$exit_create_index$111
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
jne	SHORT $LN77@sqlite3Cre
push	0
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
test	eax, eax
je	SHORT $LN77@sqlite3Cre
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG107266
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_create_index$111
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindIndex
add	esp, 12					
test	eax, eax
je	SHORT $LN75@sqlite3Cre
cmp	DWORD PTR _ifNotExist$[ebp], 0
jne	SHORT $LN74@sqlite3Cre
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG107269
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN73@sqlite3Cre
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
jmp	$exit_create_index$111
jmp	SHORT $LN72@sqlite3Cre
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pLoop$13[ebp], edx
mov	DWORD PTR _n$12[ebp], 1
jmp	SHORT $LN71@sqlite3Cre
mov	eax, DWORD PTR _pLoop$13[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pLoop$13[ebp], ecx
mov	edx, DWORD PTR _n$12[ebp]
add	edx, 1
mov	DWORD PTR _n$12[ebp], edx
cmp	DWORD PTR _pLoop$13[ebp], 0
je	SHORT $LN69@sqlite3Cre
jmp	SHORT $LN70@sqlite3Cre
mov	eax, DWORD PTR _n$12[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG107278
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 16					
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN72@sqlite3Cre
jmp	$exit_create_index$111
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _zDb$3[ebp], edx
mov	eax, 1
test	eax, eax
je	SHORT $LN99@sqlite3Cre
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN99@sqlite3Cre
mov	DWORD PTR tv248[ebp], OFFSET $SG107282
jmp	SHORT $LN100@sqlite3Cre
mov	DWORD PTR tv248[ebp], OFFSET $SG107283
mov	ecx, DWORD PTR _zDb$3[ebp]
push	ecx
push	0
mov	edx, DWORD PTR tv248[ebp]
push	edx
push	18					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN67@sqlite3Cre
jmp	$exit_create_index$111
mov	DWORD PTR _i$[ebp], 1
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN66@sqlite3Cre
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN66@sqlite3Cre
mov	DWORD PTR _i$[ebp], 3
mov	edx, DWORD PTR _zDb$3[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN65@sqlite3Cre
jmp	$exit_create_index$111
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN64@sqlite3Cre
push	0
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	DWORD PTR _pList$[ebp], eax
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN63@sqlite3Cre
jmp	$exit_create_index$111
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
sub	ecx, 1
imul	edx, ecx, 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbStrDup
add	esp, 8
mov	edx, 24					
imul	ecx, edx, 0
mov	edx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [edx+4]
mov	DWORD PTR [edx+ecx+4], eax
mov	eax, 24					
imul	ecx, eax, 0
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	dl, BYTE PTR _sortOrder$[ebp]
mov	BYTE PTR [eax+ecx+12], dl
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN62@sqlite3Cre
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN60@sqlite3Cre
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _pExpr$6[ebp], eax
cmp	DWORD PTR _pExpr$6[ebp], 0
je	SHORT $LN59@sqlite3Cre
mov	ecx, DWORD PTR _pExpr$6[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _nExtra$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _nExtra$[ebp], edx
jmp	SHORT $LN61@sqlite3Cre
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
cmp	DWORD PTR _pPk$[ebp], 0
je	SHORT $LN101@sqlite3Cre
mov	ecx, DWORD PTR _pPk$[ebp]
movzx	edx, WORD PTR [ecx+50]
mov	DWORD PTR tv306[ebp], edx
jmp	SHORT $LN102@sqlite3Cre
mov	DWORD PTR tv306[ebp], 1
mov	eax, DWORD PTR tv306[ebp]
mov	DWORD PTR _nExtraCol$[ebp], eax
lea	ecx, DWORD PTR _zExtra$[ebp]
push	ecx
mov	edx, DWORD PTR _nExtra$[ebp]
mov	eax, DWORD PTR _nName$[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
push	ecx
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx]
add	eax, DWORD PTR _nExtraCol$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3AllocateIndexObject
add	esp, 16					
mov	DWORD PTR _pIndex$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN58@sqlite3Cre
jmp	$exit_create_index$111
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _nName$[ebp]
mov	ecx, DWORD PTR _zExtra$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _zExtra$[ebp], edx
mov	eax, DWORD PTR _nName$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pIndex$[ebp]
mov	cl, BYTE PTR _onError$[ebp]
mov	BYTE PTR [eax+54], cl
cmp	DWORD PTR _onError$[ebp], 0
je	SHORT $LN103@sqlite3Cre
mov	DWORD PTR tv332[ebp], 1
jmp	SHORT $LN104@sqlite3Cre
mov	DWORD PTR tv332[ebp], 0
mov	edx, DWORD PTR tv332[ebp]
and	edx, 1
shl	edx, 3
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+56]
and	ecx, -9					
or	ecx, edx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	DWORD PTR [edx+56], ecx
cmp	DWORD PTR _pName$[ebp], 0
je	SHORT $LN105@sqlite3Cre
mov	DWORD PTR tv340[ebp], 0
jmp	SHORT $LN106@sqlite3Cre
mov	DWORD PTR tv340[ebp], 1
mov	eax, DWORD PTR tv340[ebp]
and	eax, 3
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, -4					
or	edx, eax
mov	eax, DWORD PTR _pIndex$[ebp]
mov	DWORD PTR [eax+56], edx
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [eax+ecx+12]
mov	DWORD PTR [edx+24], eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR _pList$[ebp]
mov	ax, WORD PTR [edx]
mov	WORD PTR [ecx+50], ax
cmp	DWORD PTR _pPIWhere$[ebp], 0
je	SHORT $LN57@sqlite3Cre
push	0
mov	ecx, DWORD PTR _pPIWhere$[ebp]
push	ecx
push	16					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ResolveSelfReference
add	esp, 20					
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR _pPIWhere$[ebp]
mov	DWORD PTR [ecx+36], edx
mov	DWORD PTR _pPIWhere$[ebp], 0
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
movzx	edx, BYTE PTR [ecx+76]
cmp	edx, 4
jl	SHORT $LN56@sqlite3Cre
mov	DWORD PTR _sortOrderMask$[ebp], -1
jmp	SHORT $LN55@sqlite3Cre
mov	DWORD PTR _sortOrderMask$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pListItem$[ebp], ecx
jmp	SHORT $LN54@sqlite3Cre
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pListItem$[ebp]
add	eax, 24					
mov	DWORD PTR _pListItem$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	$LN52@sqlite3Cre
mov	eax, DWORD PTR _pListItem$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _zColName$5[ebp], ecx
mov	DWORD PTR _j$[ebp], 0
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pTabCol$[ebp], eax
jmp	SHORT $LN51@sqlite3Cre
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pTabCol$[ebp]
add	edx, 24					
mov	DWORD PTR _pTabCol$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
cmp	DWORD PTR _j$[ebp], ecx
jge	SHORT $LN49@sqlite3Cre
mov	edx, DWORD PTR _pTabCol$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zColName$5[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN48@sqlite3Cre
jmp	SHORT $LN49@sqlite3Cre
jmp	SHORT $LN50@sqlite3Cre
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _j$[ebp], eax
jl	SHORT $LN47@sqlite3Cre
mov	ecx, DWORD PTR _zColName$5[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG107314
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [edx+17], 1
jmp	$exit_create_index$111
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _i$[ebp]
mov	ax, WORD PTR _j$[ebp]
mov	WORD PTR [ecx+edx*2], ax
mov	ecx, DWORD PTR _pListItem$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN46@sqlite3Cre
mov	edx, DWORD PTR _pListItem$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _zColl$17[ebp], ecx
mov	edx, DWORD PTR _zColl$17[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
mov	DWORD PTR _nColl$11[ebp], eax
mov	eax, DWORD PTR _nColl$11[ebp]
push	eax
mov	ecx, DWORD PTR _zColl$17[ebp]
push	ecx
mov	edx, DWORD PTR _zExtra$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR _zColl$17[ebp], eax
mov	ecx, DWORD PTR _zExtra$[ebp]
add	ecx, DWORD PTR _nColl$11[ebp]
mov	DWORD PTR _zExtra$[ebp], ecx
mov	edx, DWORD PTR _nExtra$[ebp]
sub	edx, DWORD PTR _nColl$11[ebp]
mov	DWORD PTR _nExtra$[ebp], edx
jmp	SHORT $LN45@sqlite3Cre
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+16]
mov	DWORD PTR _zColl$17[ebp], eax
cmp	DWORD PTR _zColl$17[ebp], 0
jne	SHORT $LN45@sqlite3Cre
mov	DWORD PTR _zColl$17[ebp], OFFSET $SG107323
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+137]
test	edx, edx
jne	SHORT $LN43@sqlite3Cre
mov	eax, DWORD PTR _zColl$17[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3LocateCollSeq
add	esp, 8
test	eax, eax
jne	SHORT $LN43@sqlite3Cre
jmp	$exit_create_index$111
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _zColl$17[ebp]
mov	DWORD PTR [eax+ecx*4], edx
mov	eax, DWORD PTR _pListItem$[ebp]
movzx	ecx, BYTE PTR [eax+12]
and	ecx, DWORD PTR _sortOrderMask$[ebp]
mov	DWORD PTR _requestedSortOrder$1[ebp], ecx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	ecx, DWORD PTR _i$[ebp]
mov	dl, BYTE PTR _requestedSortOrder$1[ebp]
mov	BYTE PTR [eax+ecx], dl
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+eax+20]
test	eax, eax
jne	SHORT $LN42@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, -9					
mov	eax, DWORD PTR _pIndex$[ebp]
mov	DWORD PTR [eax+56], edx
jmp	$LN53@sqlite3Cre
cmp	DWORD PTR _pPk$[ebp], 0
je	$LN41@sqlite3Cre
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN40@sqlite3Cre
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
mov	edx, DWORD PTR _pPk$[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _j$[ebp], eax
jge	$LN38@sqlite3Cre
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _j$[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
mov	DWORD PTR _x$4[ebp], ecx
mov	edx, DWORD PTR _x$4[ebp]
push	edx
mov	eax, DWORD PTR _pIndex$[ebp]
movzx	ecx, WORD PTR [eax+50]
push	ecx
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_hasColumn
add	esp, 12					
test	eax, eax
je	SHORT $LN37@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	dx, WORD PTR [ecx+52]
sub	dx, 1
mov	eax, DWORD PTR _pIndex$[ebp]
mov	WORD PTR [eax+52], dx
jmp	SHORT $LN36@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
mov	cx, WORD PTR _x$4[ebp]
mov	WORD PTR [edx+eax*2], cx
mov	edx, DWORD PTR _pPk$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	ecx, DWORD PTR _i$[ebp]
mov	esi, DWORD PTR _j$[ebp]
mov	eax, DWORD PTR [eax+esi*4]
mov	DWORD PTR [edx+ecx*4], eax
mov	ecx, DWORD PTR _pPk$[ebp]
mov	edx, DWORD PTR [ecx+28]
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	eax, DWORD PTR _i$[ebp]
mov	esi, DWORD PTR _j$[ebp]
mov	dl, BYTE PTR [edx+esi]
mov	BYTE PTR [ecx+eax], dl
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	$LN39@sqlite3Cre
jmp	SHORT $LN35@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+4]
or	eax, -1
mov	ecx, DWORD PTR _i$[ebp]
mov	WORD PTR [edx+ecx*2], ax
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [eax+ecx*4], OFFSET $SG107336
mov	edx, DWORD PTR _pIndex$[ebp]
push	edx
call	_sqlite3DefaultRowEst
add	esp, 4
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+484], 0
jne	SHORT $LN34@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
push	ecx
call	_estimateIndexWidth
add	esp, 4
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _pTab$[ebp]
cmp	eax, DWORD PTR [edx+484]
jne	$LN33@sqlite3Cre
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$19[ebp], edx
jmp	SHORT $LN32@sqlite3Cre
mov	eax, DWORD PTR _pIdx$19[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$19[ebp], ecx
cmp	DWORD PTR _pIdx$19[ebp], 0
je	$LN33@sqlite3Cre
mov	edx, DWORD PTR _pIdx$19[ebp]
movzx	eax, WORD PTR [edx+50]
mov	ecx, DWORD PTR _pIndex$[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	eax, edx
je	SHORT $LN29@sqlite3Cre
jmp	SHORT $LN31@sqlite3Cre
mov	DWORD PTR _k$18[ebp], 0
jmp	SHORT $LN28@sqlite3Cre
mov	eax, DWORD PTR _k$18[ebp]
add	eax, 1
mov	DWORD PTR _k$18[ebp], eax
mov	ecx, DWORD PTR _pIdx$19[ebp]
movzx	edx, WORD PTR [ecx+50]
cmp	DWORD PTR _k$18[ebp], edx
jge	SHORT $LN26@sqlite3Cre
mov	eax, DWORD PTR _pIdx$19[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _k$18[ebp]
movsx	eax, WORD PTR [ecx+edx*2]
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _k$18[ebp]
movsx	edx, WORD PTR [edx+ecx*2]
cmp	eax, edx
je	SHORT $LN25@sqlite3Cre
jmp	SHORT $LN26@sqlite3Cre
mov	eax, DWORD PTR _pIdx$19[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	edx, DWORD PTR _k$18[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
mov	DWORD PTR _z1$7[ebp], eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	eax, DWORD PTR _k$18[ebp]
mov	ecx, DWORD PTR [edx+eax*4]
mov	DWORD PTR _z2$8[ebp], ecx
mov	edx, DWORD PTR _z1$7[ebp]
cmp	edx, DWORD PTR _z2$8[ebp]
je	SHORT $LN24@sqlite3Cre
mov	eax, DWORD PTR _z2$8[ebp]
push	eax
mov	ecx, DWORD PTR _z1$7[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN24@sqlite3Cre
jmp	SHORT $LN26@sqlite3Cre
jmp	SHORT $LN27@sqlite3Cre
mov	edx, DWORD PTR _pIdx$19[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _k$18[ebp], eax
jne	SHORT $LN23@sqlite3Cre
mov	ecx, DWORD PTR _pIdx$19[ebp]
movzx	edx, BYTE PTR [ecx+54]
mov	eax, DWORD PTR _pIndex$[ebp]
movzx	ecx, BYTE PTR [eax+54]
cmp	edx, ecx
je	SHORT $LN22@sqlite3Cre
mov	edx, DWORD PTR _pIdx$19[ebp]
movzx	eax, BYTE PTR [edx+54]
cmp	eax, 10					
je	SHORT $LN21@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
movzx	edx, BYTE PTR [ecx+54]
cmp	edx, 10					
je	SHORT $LN21@sqlite3Cre
push	0
push	OFFSET $SG107358
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
mov	ecx, DWORD PTR _pIdx$19[ebp]
movzx	edx, BYTE PTR [ecx+54]
cmp	edx, 10					
jne	SHORT $LN22@sqlite3Cre
mov	eax, DWORD PTR _pIdx$19[ebp]
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	dl, BYTE PTR [ecx+54]
mov	BYTE PTR [eax+54], dl
jmp	$exit_create_index$111
jmp	$LN31@sqlite3Cre
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
je	SHORT $LN19@sqlite3Cre
mov	edx, DWORD PTR _pIndex$[ebp]
push	edx
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 24					
push	edx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _p$2[ebp], eax
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN18@sqlite3Cre
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
jmp	$exit_create_index$111
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
or	edx, 2
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], edx
cmp	DWORD PTR _pTblName$[ebp], 0
je	SHORT $LN17@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+132]
mov	DWORD PTR [ecx+44], eax
jmp	$LN16@sqlite3Cre
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
jne	$LN16@sqlite3Cre
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 32					
je	SHORT $LN14@sqlite3Cre
cmp	DWORD PTR _pTblName$[ebp], 0
je	$LN16@sqlite3Cre
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv600[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv600[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv600[ebp]
mov	DWORD PTR _iMem$9[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$14[ebp], eax
cmp	DWORD PTR _v$14[ebp], 0
jne	SHORT $LN13@sqlite3Cre
jmp	$exit_create_index$111
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	eax, DWORD PTR _iMem$9[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	117					
mov	edx, DWORD PTR _v$14[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _pStart$[ebp], 0
je	SHORT $LN12@sqlite3Cre
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _pName$[ebp]
mov	edx, DWORD PTR [eax+504]
sub	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _pParse$[ebp]
add	edx, DWORD PTR [eax+508]
mov	DWORD PTR _n$15[ebp], edx
mov	ecx, DWORD PTR _pName$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _n$15[ebp]
movsx	ecx, BYTE PTR [edx+eax-1]
cmp	ecx, 59					
jne	SHORT $LN11@sqlite3Cre
mov	edx, DWORD PTR _n$15[ebp]
sub	edx, 1
mov	DWORD PTR _n$15[ebp], edx
cmp	DWORD PTR _onError$[ebp], 0
jne	SHORT $LN107@sqlite3Cre
mov	DWORD PTR tv629[ebp], OFFSET $SG107377
jmp	SHORT $LN108@sqlite3Cre
mov	DWORD PTR tv629[ebp], OFFSET $SG107378
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _n$15[ebp]
push	edx
mov	eax, DWORD PTR tv629[ebp]
push	eax
push	OFFSET $SG107379
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 20					
mov	DWORD PTR _zStmt$10[ebp], eax
jmp	SHORT $LN10@sqlite3Cre
mov	DWORD PTR _zStmt$10[ebp], 0
mov	edx, 1
test	edx, edx
je	SHORT $LN109@sqlite3Cre
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN109@sqlite3Cre
mov	DWORD PTR tv641[ebp], OFFSET $SG107381
jmp	SHORT $LN110@sqlite3Cre
mov	DWORD PTR tv641[ebp], OFFSET $SG107382
mov	eax, DWORD PTR _zStmt$10[ebp]
push	eax
mov	ecx, DWORD PTR _iMem$9[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR tv641[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	OFFSET $SG107383
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 32					
mov	eax, DWORD PTR _zStmt$10[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _pTblName$[ebp], 0
je	SHORT $LN16@sqlite3Cre
mov	edx, DWORD PTR _iMem$9[ebp]
push	edx
mov	eax, DWORD PTR _pIndex$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3RefillIndex
add	esp, 12					
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ChangeCookie
add	esp, 8
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG107385
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _v$14[ebp]
push	edx
call	_sqlite3VdbeAddParseSchemaOp
add	esp, 12					
push	0
push	139					
mov	eax, DWORD PTR _v$14[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+137]
test	edx, edx
jne	SHORT $LN7@sqlite3Cre
cmp	DWORD PTR _pTblName$[ebp], 0
jne	$exit_create_index$111
cmp	DWORD PTR _onError$[ebp], 5
jne	SHORT $LN5@sqlite3Cre
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN5@sqlite3Cre
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+8]
movzx	eax, BYTE PTR [edx+54]
cmp	eax, 5
jne	SHORT $LN6@sqlite3Cre
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+20], eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR _pIndex$[ebp]
mov	DWORD PTR [ecx+8], edx
jmp	SHORT $LN4@sqlite3Cre
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pOther$16[ebp], ecx
mov	edx, DWORD PTR _pOther$16[ebp]
cmp	DWORD PTR [edx+20], 0
je	SHORT $LN2@sqlite3Cre
mov	eax, DWORD PTR _pOther$16[ebp]
mov	ecx, DWORD PTR [eax+20]
movzx	edx, BYTE PTR [ecx+54]
cmp	edx, 5
je	SHORT $LN2@sqlite3Cre
mov	eax, DWORD PTR _pOther$16[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pOther$16[ebp], ecx
jmp	SHORT $LN3@sqlite3Cre
mov	edx, DWORD PTR _pIndex$[ebp]
mov	eax, DWORD PTR _pOther$16[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _pOther$16[ebp]
mov	eax, DWORD PTR _pIndex$[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	DWORD PTR _pRet$[ebp], ecx
mov	DWORD PTR _pIndex$[ebp], 0
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN1@sqlite3Cre
mov	edx, DWORD PTR _pIndex$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_freeIndex
add	esp, 8
mov	ecx, DWORD PTR _pPIWhere$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pList$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprListDelete
add	esp, 8
mov	edx, DWORD PTR _pTblName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pRet$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AllocateIndexObject PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
movsx	eax, WORD PTR _nCol$[ebp]
lea	ecx, DWORD PTR [eax*4+7]
and	ecx, -8					
movsx	edx, WORD PTR _nCol$[ebp]
movsx	eax, WORD PTR _nCol$[ebp]
shl	eax, 1
lea	edx, DWORD PTR [eax+edx*2+2]
movsx	eax, WORD PTR _nCol$[ebp]
lea	edx, DWORD PTR [edx+eax+7]
and	edx, -8					
lea	eax, DWORD PTR [ecx+edx+64]
mov	DWORD PTR _nByte$[ebp], eax
mov	ecx, DWORD PTR _nByte$[ebp]
add	ecx, DWORD PTR _nExtra$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	$LN1@sqlite3All
mov	eax, DWORD PTR _p$[ebp]
add	eax, 64					
mov	DWORD PTR _pExtra$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pExtra$1[ebp]
mov	DWORD PTR [ecx+32], edx
movsx	eax, WORD PTR _nCol$[ebp]
lea	ecx, DWORD PTR [eax*4+7]
and	ecx, -8					
add	ecx, DWORD PTR _pExtra$1[ebp]
mov	DWORD PTR _pExtra$1[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pExtra$1[ebp]
mov	DWORD PTR [edx+8], eax
movsx	ecx, WORD PTR _nCol$[ebp]
mov	edx, DWORD PTR _pExtra$1[ebp]
lea	eax, DWORD PTR [edx+ecx*2+2]
mov	DWORD PTR _pExtra$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pExtra$1[ebp]
mov	DWORD PTR [ecx+4], edx
movsx	eax, WORD PTR _nCol$[ebp]
mov	ecx, DWORD PTR _pExtra$1[ebp]
lea	edx, DWORD PTR [ecx+eax*2]
mov	DWORD PTR _pExtra$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pExtra$1[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	ax, WORD PTR _nCol$[ebp]
mov	WORD PTR [edx+52], ax
movsx	ecx, WORD PTR _nCol$[ebp]
sub	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+50], cx
mov	eax, DWORD PTR _p$[ebp]
add	eax, DWORD PTR _nByte$[ebp]
mov	ecx, DWORD PTR _ppExtra$[ebp]
mov	DWORD PTR [ecx], eax
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN4@sqlite3Src
jmp	$LN5@sqlite3Src
mov	eax, DWORD PTR _pList$[ebp]
add	eax, 8
mov	DWORD PTR _pItem$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Src
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 80					
mov	DWORD PTR _pItem$[ebp], edx
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	$LN1@sqlite3Src
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+72]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTable
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR [edx+56]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3IdListDelete
add	esp, 8
jmp	$LN2@sqlite3Src
mov	edx, DWORD PTR _pList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IdListDelete PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN4@sqlite3IdL
jmp	SHORT $LN5@sqlite3IdL
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3IdL
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+4]
jge	SHORT $LN1@sqlite3IdL
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3IdL
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListAssignCursors PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN7@sqlite3Src
mov	DWORD PTR _i$[ebp], 0
mov	eax, DWORD PTR _pList$[ebp]
add	eax, 8
mov	DWORD PTR _pItem$[ebp], eax
jmp	SHORT $LN5@sqlite3Src
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 80					
mov	DWORD PTR _pItem$[ebp], edx
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN7@sqlite3Src
mov	edx, DWORD PTR _pItem$[ebp]
cmp	DWORD PTR [edx+48], 0
jl	SHORT $LN2@sqlite3Src
jmp	SHORT $LN7@sqlite3Src
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR [eax+48], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _pItem$[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN1@sqlite3Src
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListAssignCursors
add	esp, 8
jmp	SHORT $LN4@sqlite3Src
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListShiftJoinType PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@sqlite3Src
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
mov	DWORD PTR _i$1[ebp], ecx
jmp	SHORT $LN3@sqlite3Src
mov	edx, DWORD PTR _i$1[ebp]
sub	edx, 1
mov	DWORD PTR _i$1[ebp], edx
cmp	DWORD PTR _i$1[ebp], 0
jle	SHORT $LN1@sqlite3Src
mov	eax, DWORD PTR _i$1[ebp]
sub	eax, 1
imul	ecx, eax, 80
imul	edx, DWORD PTR _i$1[ebp], 80
mov	eax, DWORD PTR _p$[ebp]
mov	esi, DWORD PTR _p$[ebp]
mov	cl, BYTE PTR [esi+ecx+44]
mov	BYTE PTR [eax+edx+44], cl
jmp	SHORT $LN2@sqlite3Src
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+eax+44], 0
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IndexedByLookup PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pFrom$[ebp]
cmp	DWORD PTR [eax+16], 0
je	$LN5@sqlite3Ind
mov	ecx, DWORD PTR _pFrom$[ebp]
cmp	DWORD PTR [ecx+72], 0
je	SHORT $LN5@sqlite3Ind
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pTab$1[ebp], eax
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _zIndex$2[ebp], edx
mov	eax, DWORD PTR _pTab$1[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$3[ebp], ecx
jmp	SHORT $LN4@sqlite3Ind
mov	edx, DWORD PTR _pIdx$3[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$3[ebp], eax
cmp	DWORD PTR _pIdx$3[ebp], 0
je	SHORT $LN2@sqlite3Ind
mov	ecx, DWORD PTR _zIndex$2[ebp]
push	ecx
mov	edx, DWORD PTR _pIdx$3[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Ind
jmp	SHORT $LN3@sqlite3Ind
cmp	DWORD PTR _pIdx$3[ebp], 0
jne	SHORT $LN1@sqlite3Ind
push	0
mov	ecx, DWORD PTR _zIndex$2[ebp]
push	ecx
push	OFFSET $SG114522
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 16					
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+17], 1
mov	eax, 1
jmp	SHORT $LN6@sqlite3Ind
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	edx, DWORD PTR _pIdx$3[ebp]
mov	DWORD PTR [ecx+76], edx
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListIndexedBy PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@sqlite3Src
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
jle	SHORT $LN4@sqlite3Src
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
imul	eax, edx, 80
mov	ecx, DWORD PTR _p$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _pItem$1[ebp], edx
mov	eax, DWORD PTR _pIndexedBy$[ebp]
cmp	DWORD PTR [eax+4], 1
jne	SHORT $LN2@sqlite3Src
mov	ecx, DWORD PTR _pIndexedBy$[ebp]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN2@sqlite3Src
mov	edx, DWORD PTR _pItem$1[ebp]
mov	eax, DWORD PTR [edx+40]
or	eax, 1
mov	ecx, DWORD PTR _pItem$1[ebp]
mov	DWORD PTR [ecx+40], eax
jmp	SHORT $LN4@sqlite3Src
mov	edx, DWORD PTR _pIndexedBy$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	edx, DWORD PTR _pItem$1[ebp]
mov	DWORD PTR [edx+72], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListAppendFromTerm PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN5@sqlite3Src
cmp	DWORD PTR _pOn$[ebp], 0
jne	SHORT $LN4@sqlite3Src
cmp	DWORD PTR _pUsing$[ebp], 0
je	SHORT $LN5@sqlite3Src
cmp	DWORD PTR _pOn$[ebp], 0
je	SHORT $LN8@sqlite3Src
mov	DWORD PTR tv69[ebp], OFFSET $SG107592
jmp	SHORT $LN9@sqlite3Src
mov	DWORD PTR tv69[ebp], OFFSET $SG107593
mov	edx, DWORD PTR tv69[ebp]
push	edx
push	OFFSET $SG107594
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $append_from_error$10
mov	ecx, DWORD PTR _pDatabase$[ebp]
push	ecx
mov	edx, DWORD PTR _pTable$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListAppend
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3Src
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $LN3@sqlite3Src
jmp	SHORT $append_from_error$10
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
imul	edx, ecx, 80
mov	eax, DWORD PTR _p$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
mov	DWORD PTR _pItem$[ebp], ecx
mov	edx, DWORD PTR _pAlias$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN1@sqlite3Src
mov	eax, DWORD PTR _pAlias$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	edx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR _pSubquery$[ebp]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR _pItem$[ebp]
mov	eax, DWORD PTR _pOn$[ebp]
mov	DWORD PTR [edx+52], eax
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR _pUsing$[ebp]
mov	DWORD PTR [ecx+56], edx
mov	eax, DWORD PTR _p$[ebp]
jmp	SHORT $LN6@sqlite3Src
mov	eax, DWORD PTR _pOn$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pUsing$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3IdListDelete
add	esp, 8
mov	ecx, DWORD PTR _pSubquery$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListAppend PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN5@sqlite3Src
push	88					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pList$[ebp], eax
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN4@sqlite3Src
xor	eax, eax
jmp	$LN6@sqlite3Src
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR [ecx+4], 1
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	1
mov	ecx, DWORD PTR _pList$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SrcListEnlarge
add	esp, 16					
mov	DWORD PTR _pList$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN3@sqlite3Src
mov	edx, DWORD PTR _pList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
xor	eax, eax
jmp	SHORT $LN6@sqlite3Src
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
imul	eax, edx, 80
mov	ecx, DWORD PTR _pList$[ebp]
lea	edx, DWORD PTR [ecx+eax+8]
mov	DWORD PTR _pItem$[ebp], edx
cmp	DWORD PTR _pDatabase$[ebp], 0
je	SHORT $LN2@sqlite3Src
mov	eax, DWORD PTR _pDatabase$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN2@sqlite3Src
mov	DWORD PTR _pDatabase$[ebp], 0
cmp	DWORD PTR _pDatabase$[ebp], 0
je	SHORT $LN1@sqlite3Src
mov	ecx, DWORD PTR _pDatabase$[ebp]
mov	DWORD PTR _pTemp$1[ebp], ecx
mov	edx, DWORD PTR _pTable$[ebp]
mov	DWORD PTR _pDatabase$[ebp], edx
mov	eax, DWORD PTR _pTemp$1[ebp]
mov	DWORD PTR _pTable$[ebp], eax
mov	ecx, DWORD PTR _pTable$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3NameFromToken
add	esp, 8
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR _pDatabase$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3NameFromToken
add	esp, 8
mov	ecx, DWORD PTR _pItem$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	eax, DWORD PTR _pList$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SrcListEnlarge PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
push	edi
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, DWORD PTR _nExtra$[ebp]
mov	edx, DWORD PTR _pSrc$[ebp]
cmp	ecx, DWORD PTR [edx+4]
jbe	SHORT $LN8@sqlite3Src
mov	eax, DWORD PTR _pSrc$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, DWORD PTR _nExtra$[ebp]
mov	DWORD PTR _nAlloc$2[ebp], ecx
mov	edx, DWORD PTR _nAlloc$2[ebp]
sub	edx, 1
imul	eax, edx, 80
add	eax, 88					
push	eax
mov	ecx, DWORD PTR _pSrc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _pNew$3[ebp], eax
cmp	DWORD PTR _pNew$3[ebp], 0
jne	SHORT $LN7@sqlite3Src
mov	eax, DWORD PTR _pSrc$[ebp]
jmp	$LN9@sqlite3Src
mov	eax, DWORD PTR _pNew$3[ebp]
mov	DWORD PTR _pSrc$[ebp], eax
mov	ecx, DWORD PTR _pNew$3[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocSize
add	esp, 8
sub	eax, 88					
xor	edx, edx
mov	ecx, 80					
div	ecx
add	eax, 1
mov	DWORD PTR _nGot$1[ebp], eax
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR _nGot$1[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN6@sqlite3Src
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _iStart$[ebp]
jl	SHORT $LN4@sqlite3Src
imul	edx, DWORD PTR _i$[ebp], 80
mov	eax, DWORD PTR _pSrc$[ebp]
lea	esi, DWORD PTR [eax+edx+8]
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR _nExtra$[ebp]
imul	edx, ecx, 80
mov	eax, DWORD PTR _pSrc$[ebp]
lea	edi, DWORD PTR [eax+edx+8]
mov	ecx, 20					
rep movsd
jmp	SHORT $LN5@sqlite3Src
mov	ecx, DWORD PTR _pSrc$[ebp]
mov	edx, DWORD PTR [ecx]
add	edx, DWORD PTR _nExtra$[ebp]
mov	eax, DWORD PTR _pSrc$[ebp]
mov	DWORD PTR [eax], edx
imul	ecx, DWORD PTR _nExtra$[ebp], 80
push	ecx
push	0
imul	edx, DWORD PTR _iStart$[ebp], 80
mov	eax, DWORD PTR _pSrc$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _iStart$[ebp]
mov	DWORD PTR _i$[ebp], edx
jmp	SHORT $LN3@sqlite3Src
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _iStart$[ebp]
add	ecx, DWORD PTR _nExtra$[ebp]
cmp	DWORD PTR _i$[ebp], ecx
jge	SHORT $LN1@sqlite3Src
imul	edx, DWORD PTR _i$[ebp], 80
mov	eax, DWORD PTR _pSrc$[ebp]
mov	DWORD PTR [eax+edx+56], -1
jmp	SHORT $LN2@sqlite3Src
mov	eax, DWORD PTR _pSrc$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IdListIndex PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN5@sqlite3IdL
or	eax, -1
jmp	SHORT $LN6@sqlite3IdL
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3IdL
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+4]
jge	SHORT $LN2@sqlite3IdL
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR [edx+eax*8]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@sqlite3IdL
mov	eax, DWORD PTR _i$[ebp]
jmp	SHORT $LN6@sqlite3IdL
jmp	SHORT $LN3@sqlite3IdL
or	eax, -1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3IdListAppend PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN3@sqlite3IdL
push	8
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pList$[ebp], eax
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN3@sqlite3IdL
xor	eax, eax
jmp	SHORT $LN4@sqlite3IdL
lea	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pList$[ebp]
add	edx, 4
push	edx
push	8
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ArrayAllocate
add	esp, 20					
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR [ecx], eax
cmp	DWORD PTR _i$[ebp], 0
jge	SHORT $LN1@sqlite3IdL
mov	edx, DWORD PTR _pList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3IdListDelete
add	esp, 8
xor	eax, eax
jmp	SHORT $LN4@sqlite3IdL
mov	ecx, DWORD PTR _pToken$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3NameFromToken
add	esp, 8
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx]
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR [edx+ecx*8], eax
mov	eax, DWORD PTR _pList$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ArrayAllocate PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pnEntry$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _n$[ebp]
sub	edx, 1
and	edx, DWORD PTR _n$[ebp]
jne	SHORT $LN2@sqlite3Arr
cmp	DWORD PTR _n$[ebp], 0
jne	SHORT $LN5@sqlite3Arr
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN6@sqlite3Arr
mov	eax, DWORD PTR _n$[ebp]
shl	eax, 1
mov	DWORD PTR tv69[ebp], eax
mov	ecx, DWORD PTR tv69[ebp]
mov	DWORD PTR _sz$1[ebp], ecx
mov	edx, DWORD PTR _sz$1[ebp]
imul	edx, DWORD PTR _szEntry$[ebp]
push	edx
mov	eax, DWORD PTR _pArray$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _pNew$2[ebp], eax
cmp	DWORD PTR _pNew$2[ebp], 0
jne	SHORT $LN1@sqlite3Arr
mov	edx, DWORD PTR _pIdx$[ebp]
mov	DWORD PTR [edx], -1
mov	eax, DWORD PTR _pArray$[ebp]
jmp	SHORT $LN3@sqlite3Arr
mov	eax, DWORD PTR _pNew$2[ebp]
mov	DWORD PTR _pArray$[ebp], eax
mov	ecx, DWORD PTR _pArray$[ebp]
mov	DWORD PTR _z$[ebp], ecx
mov	edx, DWORD PTR _szEntry$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _n$[ebp]
imul	eax, DWORD PTR _szEntry$[ebp]
add	eax, DWORD PTR _z$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pnEntry$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	edx, DWORD PTR _pnEntry$[ebp]
mov	DWORD PTR [edx], ecx
mov	eax, DWORD PTR _pArray$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Insert PROC
push	ebp
mov	ebp, esp
sub	esp, 296				
mov	DWORD PTR _nHidden$[ebp], 0
mov	DWORD PTR _iDataCur$[ebp], 0
mov	DWORD PTR _iIdxCur$[ebp], 0
mov	DWORD PTR _ipkColumn$[ebp], -1
mov	DWORD PTR _srcTab$[ebp], 0
mov	DWORD PTR _addrInsTop$[ebp], 0
mov	DWORD PTR _addrCont$[ebp], 0
mov	BYTE PTR _useTempTable$[ebp], 0
mov	BYTE PTR _appendFlag$[ebp], 0
mov	BYTE PTR _bIdListInOrder$[ebp], 1
mov	DWORD PTR _pList$[ebp], 0
mov	DWORD PTR _regFromSelect$[ebp], 0
mov	DWORD PTR _regAutoinc$[ebp], 0
mov	DWORD PTR _regRowCount$[ebp], 0
mov	DWORD PTR _aRegIdx$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
push	20					
push	0
lea	edx, DWORD PTR _dest$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
jne	SHORT $LN124@sqlite3Ins
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN125@sqlite3Ins
jmp	$insert_cleanup$146
cmp	DWORD PTR _pSelect$[ebp], 0
je	SHORT $LN123@sqlite3Ins
mov	eax, DWORD PTR _pSelect$[ebp]
movzx	ecx, WORD PTR [eax+6]
and	ecx, 128				
je	SHORT $LN123@sqlite3Ins
mov	edx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [edx+52], 0
jne	SHORT $LN123@sqlite3Ins
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pList$[ebp], ecx
mov	edx, DWORD PTR _pSelect$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	DWORD PTR _pSelect$[ebp], 0
mov	edx, 80					
imul	eax, edx, 0
mov	ecx, DWORD PTR _pTabList$[ebp]
mov	edx, DWORD PTR [ecx+eax+16]
mov	DWORD PTR _zTab$[ebp], edx
cmp	DWORD PTR _zTab$[ebp], 0
jne	SHORT $LN122@sqlite3Ins
jmp	$insert_cleanup$146
mov	eax, DWORD PTR _pTabList$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListLookup
add	esp, 8
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN121@sqlite3Ins
jmp	$insert_cleanup$146
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$[ebp], edx
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _zDb$[ebp], edx
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	18					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN120@sqlite3Ins
jmp	$insert_cleanup$146
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
je	SHORT $LN128@sqlite3Ins
mov	DWORD PTR tv145[ebp], 1
jmp	SHORT $LN129@sqlite3Ins
mov	DWORD PTR tv145[ebp], 0
mov	al, BYTE PTR tv145[ebp]
mov	BYTE PTR _withoutRowid$[ebp], al
lea	ecx, DWORD PTR _tmask$[ebp]
push	ecx
push	0
push	108					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TriggersExist
add	esp, 20					
mov	DWORD PTR _pTrigger$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN130@sqlite3Ins
mov	DWORD PTR tv155[ebp], 1
jmp	SHORT $LN131@sqlite3Ins
mov	DWORD PTR tv155[ebp], 0
mov	edx, DWORD PTR tv155[ebp]
mov	DWORD PTR _isView$[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ViewGetColumnNames
add	esp, 8
test	eax, eax
je	SHORT $LN119@sqlite3Ins
jmp	$insert_cleanup$146
mov	edx, DWORD PTR _tmask$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3IsReadOnly
add	esp, 12					
test	eax, eax
je	SHORT $LN118@sqlite3Ins
jmp	$insert_cleanup$146
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN117@sqlite3Ins
jmp	$insert_cleanup$146
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	SHORT $LN116@sqlite3Ins
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCountChanges
add	esp, 4
cmp	DWORD PTR _pSelect$[ebp], 0
jne	SHORT $LN132@sqlite3Ins
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	SHORT $LN132@sqlite3Ins
mov	DWORD PTR tv175[ebp], 0
jmp	SHORT $LN133@sqlite3Ins
mov	DWORD PTR tv175[ebp], 1
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR tv175[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3BeginWriteOperation
add	esp, 12					
cmp	DWORD PTR _pColumn$[ebp], 0
jne	SHORT $LN115@sqlite3Ins
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _onError$[ebp]
push	ecx
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_xferOptimization
add	esp, 20					
test	eax, eax
je	SHORT $LN115@sqlite3Ins
jmp	$insert_end$147
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_autoIncBegin
add	esp, 12					
mov	DWORD PTR _regAutoinc$[ebp], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR _regIns$[ebp], eax
mov	ecx, DWORD PTR _regIns$[ebp]
mov	DWORD PTR _regRowid$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
lea	eax, DWORD PTR [eax+edx+1]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN114@sqlite3Ins
mov	ecx, DWORD PTR _regRowid$[ebp]
add	ecx, 1
mov	DWORD PTR _regRowid$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR _regRowid$[ebp]
add	edx, 1
mov	DWORD PTR _regData$[ebp], edx
cmp	DWORD PTR _pColumn$[ebp], 0
je	$LN113@sqlite3Ins
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN112@sqlite3Ins
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pColumn$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+4]
jge	SHORT $LN110@sqlite3Ins
mov	eax, DWORD PTR _pColumn$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR [ecx+edx*8+4], -1
jmp	SHORT $LN111@sqlite3Ins
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN109@sqlite3Ins
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pColumn$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+4]
jge	$LN113@sqlite3Ins
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN106@sqlite3Ins
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _j$[ebp], edx
jge	SHORT $LN104@sqlite3Ins
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pColumn$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR [edx+eax*8]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN103@sqlite3Ins
mov	edx, DWORD PTR _pColumn$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _j$[ebp]
mov	DWORD PTR [eax+ecx*8+4], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _j$[ebp]
je	SHORT $LN102@sqlite3Ins
mov	BYTE PTR _bIdListInOrder$[ebp], 0
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _j$[ebp], edx
jne	SHORT $LN101@sqlite3Ins
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _ipkColumn$[ebp], eax
jmp	SHORT $LN104@sqlite3Ins
jmp	SHORT $LN105@sqlite3Ins
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _j$[ebp], edx
jl	SHORT $LN100@sqlite3Ins
mov	eax, DWORD PTR _pColumn$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*8]
push	eax
call	_sqlite3IsRowid
add	esp, 4
test	eax, eax
je	SHORT $LN99@sqlite3Ins
movzx	ecx, BYTE PTR _withoutRowid$[ebp]
test	ecx, ecx
jne	SHORT $LN99@sqlite3Ins
mov	edx, DWORD PTR _i$[ebp]
mov	DWORD PTR _ipkColumn$[ebp], edx
mov	BYTE PTR _bIdListInOrder$[ebp], 0
jmp	SHORT $LN100@sqlite3Ins
mov	eax, DWORD PTR _pColumn$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*8]
push	eax
push	0
mov	ecx, DWORD PTR _pTabList$[ebp]
push	ecx
push	OFFSET $SG110372
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+17], 1
jmp	$insert_cleanup$146
jmp	$LN108@sqlite3Ins
cmp	DWORD PTR _pSelect$[ebp], 0
je	$LN97@sqlite3Ins
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv300[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv300[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv300[ebp]
mov	DWORD PTR _regYield$12[ebp], edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 1
mov	DWORD PTR _addrTop$7[ebp], eax
mov	ecx, DWORD PTR _addrTop$7[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _regYield$12[ebp]
push	edx
push	20					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _regYield$12[ebp]
push	ecx
push	13					
lea	edx, DWORD PTR _dest$[ebp]
push	edx
call	_sqlite3SelectDestInit
add	esp, 12					
movzx	eax, BYTE PTR _bIdListInOrder$[ebp]
test	eax, eax
je	SHORT $LN134@sqlite3Ins
mov	ecx, DWORD PTR _regData$[ebp]
mov	DWORD PTR tv314[ebp], ecx
jmp	SHORT $LN135@sqlite3Ins
mov	DWORD PTR tv314[ebp], 0
mov	edx, DWORD PTR tv314[ebp]
mov	DWORD PTR _dest$[ebp+8], edx
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
mov	DWORD PTR _dest$[ebp+12], ecx
lea	edx, DWORD PTR _dest$[ebp]
push	edx
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3Select
add	esp, 12					
mov	DWORD PTR _rc$2[ebp], eax
mov	edx, DWORD PTR _dest$[ebp+8]
mov	DWORD PTR _regFromSelect$[ebp], edx
cmp	DWORD PTR _rc$2[ebp], 0
jne	SHORT $LN95@sqlite3Ins
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN96@sqlite3Ins
jmp	$insert_cleanup$146
mov	edx, DWORD PTR _regYield$12[ebp]
push	edx
push	21					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _addrTop$7[ebp]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pSelect$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _nColumn$[ebp], edx
cmp	DWORD PTR _pTrigger$[ebp], 0
jne	SHORT $LN93@sqlite3Ins
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_readsTable
add	esp, 12					
test	eax, eax
je	SHORT $LN94@sqlite3Ins
mov	BYTE PTR _useTempTable$[ebp], 1
movzx	eax, BYTE PTR _useTempTable$[ebp]
test	eax, eax
je	$LN92@sqlite3Ins
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _srcTab$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], ecx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regRec$9[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _regTempRowid$10[ebp], eax
mov	edx, DWORD PTR _nColumn$[ebp]
push	edx
mov	eax, DWORD PTR _srcTab$[ebp]
push	eax
push	55					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _dest$[ebp+4]
push	edx
push	22					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrL$8[ebp], eax
mov	ecx, DWORD PTR _regRec$9[ebp]
push	ecx
mov	edx, DWORD PTR _nColumn$[ebp]
push	edx
mov	eax, DWORD PTR _regFromSelect$[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _regTempRowid$10[ebp]
push	edx
mov	eax, DWORD PTR _srcTab$[ebp]
push	eax
push	69					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _regTempRowid$10[ebp]
push	edx
mov	eax, DWORD PTR _regRec$9[ebp]
push	eax
mov	ecx, DWORD PTR _srcTab$[ebp]
push	ecx
push	70					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _addrL$8[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addrL$8[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _regRec$9[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
mov	eax, DWORD PTR _regTempRowid$10[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN91@sqlite3Ins
push	32					
push	0
lea	edx, DWORD PTR _sNC$1[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR _sNC$1[ebp], eax
mov	DWORD PTR _srcTab$[ebp], -1
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN136@sqlite3Ins
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR tv386[ebp], edx
jmp	SHORT $LN137@sqlite3Ins
mov	DWORD PTR tv386[ebp], 0
mov	eax, DWORD PTR tv386[ebp]
mov	DWORD PTR _nColumn$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN90@sqlite3Ins
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nColumn$[ebp]
jge	SHORT $LN91@sqlite3Ins
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
lea	ecx, DWORD PTR _sNC$1[ebp]
push	ecx
call	_sqlite3ResolveExprNames
add	esp, 8
test	eax, eax
je	SHORT $LN87@sqlite3Ins
jmp	$insert_cleanup$146
jmp	SHORT $LN89@sqlite3Ins
cmp	DWORD PTR _pColumn$[ebp], 0
jne	SHORT $LN86@sqlite3Ins
cmp	DWORD PTR _nColumn$[ebp], 0
jle	SHORT $LN86@sqlite3Ins
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+36]
mov	DWORD PTR _ipkColumn$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN85@sqlite3Ins
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN84@sqlite3Ins
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN85@sqlite3Ins
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+eax+23]
and	eax, 2
je	SHORT $LN138@sqlite3Ins
mov	DWORD PTR tv416[ebp], 1
jmp	SHORT $LN139@sqlite3Ins
mov	DWORD PTR tv416[ebp], 0
mov	ecx, DWORD PTR _nHidden$[ebp]
add	ecx, DWORD PTR tv416[ebp]
mov	DWORD PTR _nHidden$[ebp], ecx
jmp	SHORT $LN83@sqlite3Ins
cmp	DWORD PTR _pColumn$[ebp], 0
jne	SHORT $LN81@sqlite3Ins
cmp	DWORD PTR _nColumn$[ebp], 0
je	SHORT $LN81@sqlite3Ins
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
sub	eax, DWORD PTR _nHidden$[ebp]
cmp	DWORD PTR _nColumn$[ebp], eax
je	SHORT $LN81@sqlite3Ins
mov	ecx, DWORD PTR _nColumn$[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
sub	eax, DWORD PTR _nHidden$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pTabList$[ebp]
push	ecx
push	OFFSET $SG110400
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 24					
jmp	$insert_cleanup$146
cmp	DWORD PTR _pColumn$[ebp], 0
je	SHORT $LN80@sqlite3Ins
mov	eax, DWORD PTR _pColumn$[ebp]
mov	ecx, DWORD PTR _nColumn$[ebp]
cmp	ecx, DWORD PTR [eax+4]
je	SHORT $LN80@sqlite3Ins
mov	edx, DWORD PTR _pColumn$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _nColumn$[ebp]
push	ecx
push	OFFSET $SG110402
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 16					
jmp	$insert_cleanup$146
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 128				
je	SHORT $LN79@sqlite3Ins
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv446[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv446[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv446[ebp]
mov	DWORD PTR _regRowCount$[ebp], eax
mov	ecx, DWORD PTR _regRowCount$[ebp]
push	ecx
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _isView$[ebp], 0
jne	$LN78@sqlite3Ins
lea	eax, DWORD PTR _iIdxCur$[ebp]
push	eax
lea	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	0
push	-1
push	53					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3OpenTableAndIndices
add	esp, 28					
mov	DWORD PTR _nIdx$6[ebp], eax
mov	ecx, DWORD PTR _nIdx$6[ebp]
lea	edx, DWORD PTR [ecx*4+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aRegIdx$[ebp], eax
cmp	DWORD PTR _aRegIdx$[ebp], 0
jne	SHORT $LN77@sqlite3Ins
jmp	$insert_cleanup$146
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN76@sqlite3Ins
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _nIdx$6[ebp]
jge	SHORT $LN78@sqlite3Ins
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv472[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv472[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _aRegIdx$[ebp]
mov	eax, DWORD PTR tv472[ebp]
mov	DWORD PTR [edx+ecx*4], eax
jmp	SHORT $LN75@sqlite3Ins
movzx	ecx, BYTE PTR _useTempTable$[ebp]
test	ecx, ecx
je	SHORT $LN73@sqlite3Ins
mov	edx, DWORD PTR _srcTab$[ebp]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrInsTop$[ebp], eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addrCont$[ebp], eax
jmp	SHORT $LN72@sqlite3Ins
cmp	DWORD PTR _pSelect$[ebp], 0
je	SHORT $LN72@sqlite3Ins
mov	edx, DWORD PTR _dest$[ebp+4]
push	edx
push	22					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrCont$[ebp], eax
mov	ecx, DWORD PTR _addrCont$[ebp]
mov	DWORD PTR _addrInsTop$[ebp], ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _endOfLoop$[ebp], eax
mov	eax, DWORD PTR _tmask$[ebp]
and	eax, 1
je	$LN70@sqlite3Ins
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
add	edx, 1
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetTempRange
add	esp, 8
mov	DWORD PTR _regCols$15[ebp], eax
cmp	DWORD PTR _ipkColumn$[ebp], 0
jge	SHORT $LN69@sqlite3Ins
mov	ecx, DWORD PTR _regCols$15[ebp]
push	ecx
push	-1
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN68@sqlite3Ins
movzx	eax, BYTE PTR _useTempTable$[ebp]
test	eax, eax
je	SHORT $LN67@sqlite3Ins
mov	ecx, DWORD PTR _regCols$15[ebp]
push	ecx
mov	edx, DWORD PTR _ipkColumn$[ebp]
push	edx
mov	eax, DWORD PTR _srcTab$[ebp]
push	eax
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN66@sqlite3Ins
mov	edx, DWORD PTR _regCols$15[ebp]
push	edx
imul	eax, DWORD PTR _ipkColumn$[ebp], 24
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
mov	edx, DWORD PTR _regCols$15[ebp]
push	edx
push	77					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _j1$5[ebp], eax
mov	ecx, DWORD PTR _regCols$15[ebp]
push	ecx
push	-1
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _j1$5[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _regCols$15[ebp]
push	edx
push	38					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN65@sqlite3Ins
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	$LN63@sqlite3Ins
cmp	DWORD PTR _pColumn$[ebp], 0
jne	SHORT $LN62@sqlite3Ins
mov	ecx, DWORD PTR _i$[ebp]
mov	DWORD PTR _j$[ebp], ecx
jmp	SHORT $LN61@sqlite3Ins
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN60@sqlite3Ins
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pColumn$[ebp]
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR [eax+4]
jge	SHORT $LN61@sqlite3Ins
mov	edx, DWORD PTR _pColumn$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR [eax+ecx*8+4]
cmp	edx, DWORD PTR _i$[ebp]
jne	SHORT $LN57@sqlite3Ins
jmp	SHORT $LN61@sqlite3Ins
jmp	SHORT $LN59@sqlite3Ins
movzx	eax, BYTE PTR _useTempTable$[ebp]
test	eax, eax
jne	SHORT $LN54@sqlite3Ins
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN55@sqlite3Ins
cmp	DWORD PTR _pColumn$[ebp], 0
je	SHORT $LN56@sqlite3Ins
mov	ecx, DWORD PTR _pColumn$[ebp]
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR [ecx+4]
jl	SHORT $LN56@sqlite3Ins
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _regCols$15[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
jmp	SHORT $LN53@sqlite3Ins
movzx	edx, BYTE PTR _useTempTable$[ebp]
test	edx, edx
je	SHORT $LN52@sqlite3Ins
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _regCols$15[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
mov	eax, DWORD PTR _j$[ebp]
push	eax
mov	ecx, DWORD PTR _srcTab$[ebp]
push	ecx
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN53@sqlite3Ins
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _regCols$15[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
push	edx
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeAndCache
add	esp, 12					
jmp	$LN64@sqlite3Ins
cmp	DWORD PTR _isView$[ebp], 0
jne	SHORT $LN50@sqlite3Ins
mov	edx, DWORD PTR _regCols$15[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3TableAffinity
add	esp, 12					
mov	edx, DWORD PTR _endOfLoop$[ebp]
push	edx
mov	eax, DWORD PTR _onError$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
mov	eax, DWORD PTR _regCols$15[ebp]
sub	eax, edx
sub	eax, 1
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
push	1
push	0
push	108					
mov	edx, DWORD PTR _pTrigger$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeRowTrigger
add	esp, 36					
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
add	edx, 1
push	edx
mov	eax, DWORD PTR _regCols$15[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReleaseTempRange
add	esp, 12					
cmp	DWORD PTR _isView$[ebp], 0
jne	$LN49@sqlite3Ins
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN48@sqlite3Ins
mov	ecx, DWORD PTR _regIns$[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _ipkColumn$[ebp], 0
jl	$LN47@sqlite3Ins
movzx	eax, BYTE PTR _useTempTable$[ebp]
test	eax, eax
je	SHORT $LN46@sqlite3Ins
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _ipkColumn$[ebp]
push	edx
mov	eax, DWORD PTR _srcTab$[ebp]
push	eax
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	$LN45@sqlite3Ins
cmp	DWORD PTR _pSelect$[ebp], 0
je	SHORT $LN44@sqlite3Ins
mov	edx, DWORD PTR _regRowid$[ebp]
push	edx
mov	eax, DWORD PTR _regFromSelect$[ebp]
add	eax, DWORD PTR _ipkColumn$[ebp]
push	eax
push	33					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN45@sqlite3Ins
mov	edx, DWORD PTR _regRowid$[ebp]
push	edx
imul	eax, DWORD PTR _ipkColumn$[ebp], 24
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeGetOp
add	esp, 8
mov	DWORD PTR _pOp$14[ebp], eax
cmp	DWORD PTR _pOp$14[ebp], 0
je	SHORT $LN45@sqlite3Ins
mov	eax, DWORD PTR _pOp$14[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 28					
jne	SHORT $LN45@sqlite3Ins
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
jne	SHORT $LN45@sqlite3Ins
mov	BYTE PTR _appendFlag$[ebp], 1
mov	ecx, DWORD PTR _pOp$14[ebp]
mov	BYTE PTR [ecx], 69			
mov	edx, DWORD PTR _pOp$14[ebp]
mov	eax, DWORD PTR _iDataCur$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pOp$14[ebp]
mov	edx, DWORD PTR _regRowid$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pOp$14[ebp]
mov	ecx, DWORD PTR _regAutoinc$[ebp]
mov	DWORD PTR [eax+12], ecx
movzx	edx, BYTE PTR _appendFlag$[ebp]
test	edx, edx
jne	$LN41@sqlite3Ins
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
jne	SHORT $LN40@sqlite3Ins
mov	edx, DWORD PTR _regRowid$[ebp]
push	edx
push	77					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _j1$11[ebp], eax
mov	ecx, DWORD PTR _regAutoinc$[ebp]
push	ecx
mov	edx, DWORD PTR _regRowid$[ebp]
push	edx
mov	eax, DWORD PTR _iDataCur$[ebp]
push	eax
push	69					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _j1$11[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	SHORT $LN39@sqlite3Ins
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _j1$11[ebp], eax
mov	edx, DWORD PTR _j1$11[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _regRowid$[ebp]
push	eax
push	76					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _regRowid$[ebp]
push	edx
push	38					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN38@sqlite3Ins
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
jne	SHORT $LN36@sqlite3Ins
movzx	eax, BYTE PTR _withoutRowid$[ebp]
test	eax, eax
je	SHORT $LN37@sqlite3Ins
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN38@sqlite3Ins
mov	eax, DWORD PTR _regAutoinc$[ebp]
push	eax
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
push	69					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	BYTE PTR _appendFlag$[ebp], 1
mov	ecx, DWORD PTR _regRowid$[ebp]
push	ecx
mov	edx, DWORD PTR _regAutoinc$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_autoIncStep
add	esp, 12					
mov	DWORD PTR _nHidden$[ebp], 0
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN34@sqlite3Ins
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	$LN32@sqlite3Ins
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _regRowid$[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
mov	DWORD PTR _iRegStore$13[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _i$[ebp], edx
jne	SHORT $LN31@sqlite3Ins
mov	eax, DWORD PTR _iRegStore$13[ebp]
push	eax
push	29					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN33@sqlite3Ins
cmp	DWORD PTR _pColumn$[ebp], 0
jne	SHORT $LN30@sqlite3Ins
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+23]
and	edx, 2
je	SHORT $LN29@sqlite3Ins
mov	DWORD PTR _j$[ebp], -1
mov	eax, DWORD PTR _nHidden$[ebp]
add	eax, 1
mov	DWORD PTR _nHidden$[ebp], eax
jmp	SHORT $LN28@sqlite3Ins
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, DWORD PTR _nHidden$[ebp]
mov	DWORD PTR _j$[ebp], ecx
jmp	SHORT $LN27@sqlite3Ins
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN26@sqlite3Ins
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _pColumn$[ebp]
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR [eax+4]
jge	SHORT $LN27@sqlite3Ins
mov	edx, DWORD PTR _pColumn$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR [eax+ecx*8+4]
cmp	edx, DWORD PTR _i$[ebp]
jne	SHORT $LN23@sqlite3Ins
jmp	SHORT $LN27@sqlite3Ins
jmp	SHORT $LN25@sqlite3Ins
cmp	DWORD PTR _j$[ebp], 0
jl	SHORT $LN21@sqlite3Ins
cmp	DWORD PTR _nColumn$[ebp], 0
je	SHORT $LN21@sqlite3Ins
cmp	DWORD PTR _pColumn$[ebp], 0
je	SHORT $LN22@sqlite3Ins
mov	eax, DWORD PTR _pColumn$[ebp]
mov	ecx, DWORD PTR _j$[ebp]
cmp	ecx, DWORD PTR [eax+4]
jl	SHORT $LN22@sqlite3Ins
mov	edx, DWORD PTR _iRegStore$13[ebp]
push	edx
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCodeFactorable
add	esp, 12					
jmp	SHORT $LN20@sqlite3Ins
movzx	edx, BYTE PTR _useTempTable$[ebp]
test	edx, edx
je	SHORT $LN19@sqlite3Ins
mov	eax, DWORD PTR _iRegStore$13[ebp]
push	eax
mov	ecx, DWORD PTR _j$[ebp]
push	ecx
mov	edx, DWORD PTR _srcTab$[ebp]
push	edx
push	46					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN20@sqlite3Ins
cmp	DWORD PTR _pSelect$[ebp], 0
je	SHORT $LN17@sqlite3Ins
mov	ecx, DWORD PTR _regFromSelect$[ebp]
cmp	ecx, DWORD PTR _regData$[ebp]
je	SHORT $LN16@sqlite3Ins
mov	edx, DWORD PTR _iRegStore$13[ebp]
push	edx
mov	eax, DWORD PTR _regFromSelect$[ebp]
add	eax, DWORD PTR _j$[ebp]
push	eax
push	34					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN20@sqlite3Ins
mov	edx, DWORD PTR _iRegStore$13[ebp]
push	edx
imul	eax, DWORD PTR _j$[ebp], 24
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
jmp	$LN33@sqlite3Ins
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	$LN14@sqlite3Ins
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3GetVTable
add	esp, 8
mov	DWORD PTR _pVTab$4[ebp], eax
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3VtabMakeWritable
add	esp, 8
push	-10					
mov	edx, DWORD PTR _pVTab$4[ebp]
push	edx
mov	eax, DWORD PTR _regIns$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
add	edx, 2
push	edx
push	1
push	15					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
cmp	DWORD PTR _onError$[ebp], 10		
jne	SHORT $LN140@sqlite3Ins
mov	DWORD PTR tv771[ebp], 2
jmp	SHORT $LN141@sqlite3Ins
mov	ecx, DWORD PTR _onError$[ebp]
mov	DWORD PTR tv771[ebp], ecx
movzx	edx, BYTE PTR tv771[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3MayAbort
add	esp, 4
jmp	$LN49@sqlite3Ins
cmp	DWORD PTR _ipkColumn$[ebp], 0
jl	SHORT $LN142@sqlite3Ins
mov	DWORD PTR tv780[ebp], 1
jmp	SHORT $LN143@sqlite3Ins
mov	DWORD PTR tv780[ebp], 0
lea	edx, DWORD PTR _isReplace$3[ebp]
push	edx
mov	eax, DWORD PTR _endOfLoop$[ebp]
push	eax
movzx	ecx, BYTE PTR _onError$[ebp]
push	ecx
movzx	edx, BYTE PTR tv780[ebp]
push	edx
push	0
mov	eax, DWORD PTR _regIns$[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _aRegIdx$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GenerateConstraintChecks
add	esp, 44					
push	0
push	0
mov	eax, DWORD PTR _regIns$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3FkCheck
add	esp, 24					
cmp	DWORD PTR _isReplace$3[ebp], 0
jne	SHORT $LN144@sqlite3Ins
mov	DWORD PTR tv797[ebp], 1
jmp	SHORT $LN145@sqlite3Ins
mov	DWORD PTR tv797[ebp], 0
mov	eax, DWORD PTR tv797[ebp]
push	eax
movzx	ecx, BYTE PTR _appendFlag$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _aRegIdx$[ebp]
push	edx
mov	eax, DWORD PTR _regIns$[ebp]
push	eax
mov	ecx, DWORD PTR _iIdxCur$[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CompleteInsertion
add	esp, 36					
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 128				
je	SHORT $LN12@sqlite3Ins
push	1
mov	ecx, DWORD PTR _regRowCount$[ebp]
push	ecx
push	37					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _pTrigger$[ebp], 0
je	SHORT $LN11@sqlite3Ins
mov	eax, DWORD PTR _endOfLoop$[ebp]
push	eax
mov	ecx, DWORD PTR _onError$[ebp]
push	ecx
mov	edx, DWORD PTR _regData$[ebp]
sub	edx, 2
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
sub	edx, ecx
push	edx
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
push	2
push	0
push	108					
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeRowTrigger
add	esp, 36					
mov	edx, DWORD PTR _endOfLoop$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
movzx	ecx, BYTE PTR _useTempTable$[ebp]
test	ecx, ecx
je	SHORT $LN10@sqlite3Ins
mov	edx, DWORD PTR _addrCont$[ebp]
push	edx
mov	eax, DWORD PTR _srcTab$[ebp]
push	eax
push	9
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addrInsTop$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _srcTab$[ebp]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN9@sqlite3Ins
cmp	DWORD PTR _pSelect$[ebp], 0
je	SHORT $LN9@sqlite3Ins
mov	eax, DWORD PTR _addrCont$[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addrInsTop$[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
jne	SHORT $insert_end$147
cmp	DWORD PTR _isView$[ebp], 0
jne	SHORT $insert_end$147
mov	eax, DWORD PTR _iDataCur$[ebp]
cmp	eax, DWORD PTR _iIdxCur$[ebp]
jge	SHORT $LN6@sqlite3Ins
mov	ecx, DWORD PTR _iDataCur$[ebp]
push	ecx
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _idx$[ebp], 0
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$[ebp], ecx
jmp	SHORT $LN5@sqlite3Ins
mov	edx, DWORD PTR _pIdx$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$[ebp], eax
mov	ecx, DWORD PTR _idx$[ebp]
add	ecx, 1
mov	DWORD PTR _idx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $insert_end$147
mov	edx, DWORD PTR _idx$[ebp]
add	edx, DWORD PTR _iIdxCur$[ebp]
push	edx
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
jmp	SHORT $LN4@sqlite3Ins
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
jne	SHORT $LN2@sqlite3Ins
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+412], 0
jne	SHORT $LN2@sqlite3Ins
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AutoincrementEnd
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 128				
je	SHORT $insert_cleanup$146
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
jne	SHORT $insert_cleanup$146
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+412], 0
jne	SHORT $insert_cleanup$146
push	1
mov	ecx, DWORD PTR _regRowCount$[ebp]
push	ecx
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG110498
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	edx, DWORD PTR _pTabList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SrcListDelete
add	esp, 8
mov	ecx, DWORD PTR _pList$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SelectDelete
add	esp, 8
mov	edx, DWORD PTR _pColumn$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3IdListDelete
add	esp, 8
mov	ecx, DWORD PTR _aRegIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AutoincrementEnd PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+404]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN3@sqlite3Aut
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	$LN4@sqlite3Aut
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$2[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _memId$4[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetTempReg
add	esp, 4
mov	DWORD PTR _iRec$3[ebp], eax
push	53					
mov	edx, DWORD PTR _pDb$2[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+72]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3OpenTable
add	esp, 20					
mov	edx, DWORD PTR _memId$4[ebp]
add	edx, 1
push	edx
push	77					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _j1$1[ebp], eax
mov	ecx, DWORD PTR _memId$4[ebp]
add	ecx, 1
push	ecx
push	0
push	69					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _j1$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _iRec$3[ebp]
push	edx
push	2
mov	eax, DWORD PTR _memId$4[ebp]
sub	eax, 1
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _memId$4[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _iRec$3[ebp]
push	eax
push	0
push	70					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
push	58					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	ecx, DWORD PTR _iRec$3[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReleaseTempReg
add	esp, 8
jmp	$LN2@sqlite3Aut
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AutoincrementBegin PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+404]
mov	DWORD PTR _p$[ebp], edx
jmp	SHORT $LN3@sqlite3Aut
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	$LN4@sqlite3Aut
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _memId$[ebp], eax
push	52					
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+72]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3OpenTable
add	esp, 20					
mov	ecx, DWORD PTR _memId$[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _memId$[ebp]
push	edx
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addr$[ebp], eax
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
mov	edx, DWORD PTR _memId$[ebp]
sub	edx, 1
push	edx
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _addr$[ebp]
add	ecx, 9
push	ecx
push	0
push	105					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _memId$[ebp]
push	eax
push	0
push	0
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _memId$[ebp]
push	edx
mov	eax, DWORD PTR _addr$[ebp]
add	eax, 7
push	eax
mov	ecx, DWORD PTR _memId$[ebp]
sub	ecx, 1
push	ecx
push	78					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR _memId$[ebp]
add	ecx, 1
push	ecx
push	0
push	100					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _memId$[ebp]
push	eax
push	1
push	0
push	46					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _addr$[ebp]
add	edx, 9
push	edx
push	0
push	16					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addr$[ebp]
add	ecx, 2
push	ecx
push	0
push	9
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _memId$[ebp]
push	eax
push	0
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp0
add	esp, 8
jmp	$LN2@sqlite3Aut
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DeleteTable PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _pTable$[ebp], 0
jne	SHORT $LN8@sqlite3Del
jmp	$LN9@sqlite3Del
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN6@sqlite3Del
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+512], 0
jne	SHORT $LN7@sqlite3Del
mov	ecx, DWORD PTR _pTable$[ebp]
mov	dx, WORD PTR [ecx+40]
sub	dx, 1
mov	WORD PTR tv70[ebp], dx
mov	eax, DWORD PTR _pTable$[ebp]
mov	cx, WORD PTR tv70[ebp]
mov	WORD PTR [eax+40], cx
movzx	edx, WORD PTR tv70[ebp]
test	edx, edx
jle	SHORT $LN7@sqlite3Del
jmp	$LN9@sqlite3Del
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIndex$[ebp], ecx
jmp	SHORT $LN5@sqlite3Del
mov	edx, DWORD PTR _pNext$[ebp]
mov	DWORD PTR _pIndex$[ebp], edx
cmp	DWORD PTR _pIndex$[ebp], 0
je	SHORT $LN3@sqlite3Del
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pNext$[ebp], ecx
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN1@sqlite3Del
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+512], 0
jne	SHORT $LN2@sqlite3Del
mov	eax, DWORD PTR _pIndex$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _zName$1[ebp], ecx
push	0
mov	edx, DWORD PTR _zName$1[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	eax, DWORD PTR _zName$1[ebp]
push	eax
mov	ecx, DWORD PTR _pIndex$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 24					
push	edx
call	_sqlite3HashInsert
add	esp, 16					
mov	eax, DWORD PTR _pIndex$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_freeIndex
add	esp, 8
jmp	SHORT $LN4@sqlite3Del
mov	edx, DWORD PTR _pTable$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FkDelete
add	esp, 8
mov	ecx, DWORD PTR _pTable$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqliteDeleteColumnNames
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3VtabClear
add	esp, 8
mov	edx, DWORD PTR _pTable$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CodeDropTable PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$[ebp], edx
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN6@sqlite3Cod
push	141					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TriggerList
add	esp, 8
mov	DWORD PTR _pTrigger$[ebp], eax
cmp	DWORD PTR _pTrigger$[ebp], 0
je	SHORT $LN4@sqlite3Cod
mov	eax, DWORD PTR _pTrigger$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3DropTriggerPtr
add	esp, 8
mov	edx, DWORD PTR _pTrigger$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _pTrigger$[ebp], eax
jmp	SHORT $LN5@sqlite3Cod
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 8
je	SHORT $LN3@sqlite3Cod
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG106997
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3NestedParse
add	esp, 16					
mov	edx, 1
test	edx, edx
je	SHORT $LN9@sqlite3Cod
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN9@sqlite3Cod
mov	DWORD PTR tv132[ebp], OFFSET $SG106998
jmp	SHORT $LN10@sqlite3Cod
mov	DWORD PTR tv132[ebp], OFFSET $SG106999
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR tv132[ebp]
push	edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG107000
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 20					
cmp	DWORD PTR _isView$[ebp], 0
jne	SHORT $LN2@sqlite3Cod
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
jne	SHORT $LN2@sqlite3Cod
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_destroyTable
add	esp, 8
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN1@sqlite3Cod
push	0
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	148					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
push	0
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	121					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ChangeCookie
add	esp, 8
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqliteViewResetAll
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DropTable PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN21@sqlite3Dro
jmp	$exit_drop_table$26
cmp	DWORD PTR _noErr$[ebp], 0
je	SHORT $LN20@sqlite3Dro
mov	ecx, DWORD PTR _db$[ebp]
mov	dl, BYTE PTR [ecx+67]
add	dl, 1
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+67], dl
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pName$[ebp]
lea	ecx, DWORD PTR [eax+edx+8]
push	ecx
mov	edx, DWORD PTR _isView$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3LocateTableItem
add	esp, 12					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _noErr$[ebp], 0
je	SHORT $LN19@sqlite3Dro
mov	ecx, DWORD PTR _db$[ebp]
mov	dl, BYTE PTR [ecx+67]
sub	dl, 1
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+67], dl
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN18@sqlite3Dro
cmp	DWORD PTR _noErr$[ebp], 0
je	SHORT $LN17@sqlite3Dro
mov	ecx, 80					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax+edx+12]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeVerifyNamedSchema
add	esp, 8
jmp	$exit_drop_table$26
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN16@sqlite3Dro
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ViewGetColumnNames
add	esp, 8
test	eax, eax
je	SHORT $LN16@sqlite3Dro
jmp	$exit_drop_table$26
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN24@sqlite3Dro
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN24@sqlite3Dro
mov	DWORD PTR tv139[ebp], OFFSET $SG107028
jmp	SHORT $LN25@sqlite3Dro
mov	DWORD PTR tv139[ebp], OFFSET $SG107029
mov	edx, DWORD PTR tv139[ebp]
mov	DWORD PTR _zTab$1[ebp], edx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zDb$3[ebp], eax
mov	DWORD PTR _zArg2$2[ebp], 0
mov	ecx, DWORD PTR _zDb$3[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _zTab$1[ebp]
push	edx
push	9
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN15@sqlite3Dro
jmp	$exit_drop_table$26
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN14@sqlite3Dro
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN13@sqlite3Dro
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN13@sqlite3Dro
mov	DWORD PTR _code$4[ebp], 15		
jmp	SHORT $LN12@sqlite3Dro
mov	DWORD PTR _code$4[ebp], 17		
jmp	SHORT $LN11@sqlite3Dro
mov	edx, DWORD PTR _pTab$[ebp]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
je	SHORT $LN10@sqlite3Dro
mov	DWORD PTR _code$4[ebp], 30		
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3GetVTable
add	esp, 8
mov	eax, DWORD PTR [eax+4]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _zArg2$2[ebp], ecx
jmp	SHORT $LN11@sqlite3Dro
mov	edx, 1
test	edx, edx
je	SHORT $LN8@sqlite3Dro
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN8@sqlite3Dro
mov	DWORD PTR _code$4[ebp], 13		
jmp	SHORT $LN11@sqlite3Dro
mov	DWORD PTR _code$4[ebp], 11		
mov	eax, DWORD PTR _zDb$3[ebp]
push	eax
mov	ecx, DWORD PTR _zArg2$2[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _code$4[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN6@sqlite3Dro
jmp	$exit_drop_table$26
mov	eax, DWORD PTR _zDb$3[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	9
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN5@sqlite3Dro
jmp	$exit_drop_table$26
push	7
push	OFFSET $SG107044
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN4@sqlite3Dro
push	11					
push	OFFSET $SG107045
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
je	SHORT $LN4@sqlite3Dro
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG107046
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_drop_table$26
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN3@sqlite3Dro
mov	edx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN3@sqlite3Dro
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG107048
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$exit_drop_table$26
cmp	DWORD PTR _isView$[ebp], 0
jne	SHORT $LN2@sqlite3Dro
mov	eax, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN2@sqlite3Dro
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG107050
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $exit_drop_table$26
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $exit_drop_table$26
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BeginWriteOperation
add	esp, 12					
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG107052
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ClearStatTables
add	esp, 16					
mov	edx, DWORD PTR _pTab$[ebp]
push	edx
mov	eax, DWORD PTR _pName$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FkDropTable
add	esp, 12					
mov	edx, DWORD PTR _isView$[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeDropTable
add	esp, 16					
mov	eax, DWORD PTR _pName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SrcListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ViewGetColumnNames PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _nErr$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pTable$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VtabCallConnect
add	esp, 8
test	eax, eax
je	SHORT $LN8@sqlite3Vie
mov	eax, 1
jmp	$LN9@sqlite3Vie
mov	ecx, DWORD PTR _pTable$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 16					
je	SHORT $LN7@sqlite3Vie
xor	eax, eax
jmp	$LN9@sqlite3Vie
mov	eax, DWORD PTR _pTable$[ebp]
movsx	ecx, WORD PTR [eax+38]
test	ecx, ecx
jle	SHORT $LN6@sqlite3Vie
xor	eax, eax
jmp	$LN9@sqlite3Vie
mov	edx, DWORD PTR _pTable$[ebp]
movsx	eax, WORD PTR [edx+38]
test	eax, eax
jge	SHORT $LN5@sqlite3Vie
mov	ecx, DWORD PTR _pTable$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG106872
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 1
jmp	$LN9@sqlite3Vie
push	0
mov	ecx, DWORD PTR _pTable$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDup
add	esp, 12					
mov	DWORD PTR _pSel$[ebp], eax
cmp	DWORD PTR _pSel$[ebp], 0
je	$LN4@sqlite3Vie
mov	ecx, DWORD PTR _db$[ebp]
mov	dl, BYTE PTR [ecx+242]
mov	BYTE PTR _enableLookaside$1[ebp], dl
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _n$[ebp], ecx
mov	edx, DWORD PTR _pSel$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3SrcListAssignCursors
add	esp, 8
or	edx, -1
mov	eax, DWORD PTR _pTable$[ebp]
mov	WORD PTR [eax+38], dx
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+242], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+276]
mov	DWORD PTR _xAuth$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+276], 0
mov	edx, DWORD PTR _pSel$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ResultSetOfSelect
add	esp, 8
mov	DWORD PTR _pSelTab$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _xAuth$[ebp]
mov	DWORD PTR [ecx+276], edx
mov	eax, DWORD PTR _db$[ebp]
mov	cl, BYTE PTR _enableLookaside$1[ebp]
mov	BYTE PTR [eax+242], cl
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _n$[ebp]
mov	DWORD PTR [edx+68], eax
cmp	DWORD PTR _pSelTab$[ebp], 0
je	SHORT $LN3@sqlite3Vie
mov	ecx, DWORD PTR _pTable$[ebp]
mov	edx, DWORD PTR _pSelTab$[ebp]
mov	ax, WORD PTR [edx+38]
mov	WORD PTR [ecx+38], ax
mov	ecx, DWORD PTR _pTable$[ebp]
mov	edx, DWORD PTR _pSelTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+4], eax
xor	ecx, ecx
mov	edx, DWORD PTR _pSelTab$[ebp]
mov	WORD PTR [edx+38], cx
mov	eax, DWORD PTR _pSelTab$[ebp]
mov	DWORD PTR [eax+4], 0
mov	ecx, DWORD PTR _pSelTab$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DeleteTable
add	esp, 8
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+68]
movzx	edx, WORD PTR [ecx+78]
or	edx, 2
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	WORD PTR [ecx+78], dx
jmp	SHORT $LN2@sqlite3Vie
xor	edx, edx
mov	eax, DWORD PTR _pTable$[ebp]
mov	WORD PTR [eax+38], dx
mov	ecx, DWORD PTR _nErr$[ebp]
add	ecx, 1
mov	DWORD PTR _nErr$[ebp], ecx
mov	edx, DWORD PTR _pSel$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
jmp	SHORT $LN1@sqlite3Vie
mov	ecx, DWORD PTR _nErr$[ebp]
add	ecx, 1
mov	DWORD PTR _nErr$[ebp], ecx
mov	eax, DWORD PTR _nErr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CreateView PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
mov	DWORD PTR _pName$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+440], 0
jle	SHORT $LN9@sqlite3Cre
push	OFFSET $SG106837
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	ecx, DWORD PTR _pSelect$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
jmp	$LN10@sqlite3Cre
mov	eax, DWORD PTR _noErr$[ebp]
push	eax
push	0
push	1
mov	ecx, DWORD PTR _isTemp$[ebp]
push	ecx
mov	edx, DWORD PTR _pName2$[ebp]
push	edx
mov	eax, DWORD PTR _pName1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3StartTable
add	esp, 28					
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN7@sqlite3Cre
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
je	SHORT $LN8@sqlite3Cre
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
jmp	$LN10@sqlite3Cre
lea	ecx, DWORD PTR _pName$[ebp]
push	ecx
mov	edx, DWORD PTR _pName2$[ebp]
push	edx
mov	eax, DWORD PTR _pName1$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3TwoPartName
add	esp, 16					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	edx, DWORD PTR _pName$[ebp]
push	edx
push	OFFSET $SG106840
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
lea	edx, DWORD PTR _sFix$[ebp]
push	edx
call	_sqlite3FixInit
add	esp, 20					
mov	eax, DWORD PTR _pSelect$[ebp]
push	eax
lea	ecx, DWORD PTR _sFix$[ebp]
push	ecx
call	_sqlite3FixSelect
add	esp, 8
test	eax, eax
je	SHORT $LN6@sqlite3Cre
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
jmp	$LN10@sqlite3Cre
push	1
mov	ecx, DWORD PTR _pSelect$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDup
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SelectDelete
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN5@sqlite3Cre
jmp	$LN10@sqlite3Cre
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
jne	SHORT $LN4@sqlite3Cre
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ViewGetColumnNames
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+504]
mov	eax, DWORD PTR [ecx+508]
mov	DWORD PTR _sEnd$[ebp], edx
mov	DWORD PTR _sEnd$[ebp+4], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _sEnd$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN3@sqlite3Cre
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _sEnd$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 59					
je	SHORT $LN3@sqlite3Cre
mov	eax, DWORD PTR _sEnd$[ebp]
add	eax, DWORD PTR _sEnd$[ebp+4]
mov	DWORD PTR _sEnd$[ebp], eax
mov	DWORD PTR _sEnd$[ebp+4], 0
mov	ecx, DWORD PTR _pBegin$[ebp]
mov	edx, DWORD PTR _sEnd$[ebp]
sub	edx, DWORD PTR [ecx]
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _pBegin$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _z$[ebp], ecx
cmp	DWORD PTR _n$[ebp], 0
jle	SHORT $LN1@sqlite3Cre
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _n$[ebp]
movzx	eax, BYTE PTR [edx-1]
movzx	ecx, BYTE PTR _sqlite3CtypeMap[eax]
and	ecx, 1
je	SHORT $LN1@sqlite3Cre
mov	edx, DWORD PTR _n$[ebp]
sub	edx, 1
mov	DWORD PTR _n$[ebp], edx
jmp	SHORT $LN2@sqlite3Cre
mov	eax, DWORD PTR _n$[ebp]
mov	ecx, DWORD PTR _z$[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
mov	DWORD PTR _sEnd$[ebp], edx
mov	DWORD PTR _sEnd$[ebp+4], 1
push	0
push	0
lea	eax, DWORD PTR _sEnd$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3EndTable
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RowSetNext PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+26]
and	ecx, 2
jne	SHORT $LN4@sqlite3Row
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_rowSetToList
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN3@sqlite3Row
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	eax, DWORD PTR _pRowid$[ebp]
mov	ecx, DWORD PTR [edx]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR [edx+4]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx+8]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+8], 0
jne	SHORT $LN2@sqlite3Row
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3RowSetClear
add	esp, 4
mov	eax, 1
jmp	SHORT $LN5@sqlite3Row
jmp	SHORT $LN5@sqlite3Row
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3RowSetTest PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pRowSet$[ebp]
mov	ecx, DWORD PTR _iBatch$[ebp]
cmp	ecx, DWORD PTR [eax+28]
je	$LN19@sqlite3Row
mov	edx, DWORD PTR _pRowSet$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	$LN18@sqlite3Row
mov	ecx, DWORD PTR _pRowSet$[ebp]
add	ecx, 20					
mov	DWORD PTR _ppPrevTree$3[ebp], ecx
mov	edx, DWORD PTR _pRowSet$[ebp]
movzx	eax, WORD PTR [edx+26]
and	eax, 1
jne	SHORT $LN17@sqlite3Row
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_rowSetEntrySort
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
mov	edx, DWORD PTR _pRowSet$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pTree$[ebp], eax
jmp	SHORT $LN16@sqlite3Row
mov	ecx, DWORD PTR _pTree$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTree$[ebp], edx
cmp	DWORD PTR _pTree$[ebp], 0
je	SHORT $LN14@sqlite3Row
mov	eax, DWORD PTR _pTree$[ebp]
add	eax, 8
mov	DWORD PTR _ppPrevTree$3[ebp], eax
mov	ecx, DWORD PTR _pTree$[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN13@sqlite3Row
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_rowSetListToTree
add	esp, 4
mov	ecx, DWORD PTR _pTree$[ebp]
mov	DWORD PTR [ecx+12], eax
jmp	SHORT $LN14@sqlite3Row
jmp	SHORT $LN12@sqlite3Row
lea	edx, DWORD PTR _pTail$1[ebp]
push	edx
lea	eax, DWORD PTR _pAux$2[ebp]
push	eax
mov	ecx, DWORD PTR _pTree$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_rowSetTreeToList
add	esp, 12					
mov	eax, DWORD PTR _pTree$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pAux$2[ebp]
push	edx
call	_rowSetEntryMerge
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN15@sqlite3Row
cmp	DWORD PTR _pTree$[ebp], 0
jne	SHORT $LN11@sqlite3Row
mov	eax, DWORD PTR _pRowSet$[ebp]
push	eax
call	_rowSetEntryAlloc
add	esp, 4
mov	DWORD PTR _pTree$[ebp], eax
mov	ecx, DWORD PTR _ppPrevTree$3[ebp]
mov	edx, DWORD PTR _pTree$[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _pTree$[ebp], 0
je	SHORT $LN11@sqlite3Row
mov	eax, DWORD PTR _pTree$[ebp]
mov	DWORD PTR [eax], 0
mov	DWORD PTR [eax+4], 0
mov	ecx, DWORD PTR _pTree$[ebp]
mov	DWORD PTR [ecx+8], 0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_rowSetListToTree
add	esp, 4
mov	ecx, DWORD PTR _pTree$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _pRowSet$[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _pRowSet$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _pRowSet$[ebp]
movzx	edx, WORD PTR [ecx+26]
or	edx, 1
mov	eax, DWORD PTR _pRowSet$[ebp]
mov	WORD PTR [eax+26], dx
mov	ecx, DWORD PTR _pRowSet$[ebp]
mov	edx, DWORD PTR _iBatch$[ebp]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _pRowSet$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pTree$[ebp], ecx
jmp	SHORT $LN9@sqlite3Row
mov	edx, DWORD PTR _pTree$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pTree$[ebp], eax
cmp	DWORD PTR _pTree$[ebp], 0
je	SHORT $LN7@sqlite3Row
mov	ecx, DWORD PTR _pTree$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@sqlite3Row
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR tv200[ebp], eax
mov	ecx, DWORD PTR tv200[ebp]
mov	edx, DWORD PTR [ecx+4]
cmp	edx, DWORD PTR _iRowid$[ebp+4]
jg	SHORT $LN4@sqlite3Row
jl	SHORT $LN22@sqlite3Row
mov	eax, DWORD PTR tv200[ebp]
mov	ecx, DWORD PTR [eax]
cmp	ecx, DWORD PTR _iRowid$[ebp]
jae	SHORT $LN4@sqlite3Row
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN3@sqlite3Row
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR tv210[ebp], ecx
mov	edx, DWORD PTR tv210[ebp]
mov	eax, DWORD PTR [edx+4]
cmp	eax, DWORD PTR _iRowid$[ebp+4]
jl	SHORT $LN2@sqlite3Row
jg	SHORT $LN23@sqlite3Row
mov	ecx, DWORD PTR tv210[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _iRowid$[ebp]
jbe	SHORT $LN2@sqlite3Row
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@sqlite3Row
mov	eax, 1
jmp	SHORT $LN20@sqlite3Row
jmp	SHORT $LN6@sqlite3Row
jmp	SHORT $LN8@sqlite3Row
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RowSetInsert PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_rowSetEntryAlloc
add	esp, 4
mov	DWORD PTR _pEntry$[ebp], eax
cmp	DWORD PTR _pEntry$[ebp], 0
jne	SHORT $LN4@sqlite3Row
jmp	SHORT $LN5@sqlite3Row
mov	ecx, DWORD PTR _pEntry$[ebp]
mov	edx, DWORD PTR _rowid$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _rowid$[ebp+4]
mov	DWORD PTR [ecx+4], eax
mov	ecx, DWORD PTR _pEntry$[ebp]
mov	DWORD PTR [ecx+8], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pLast$[ebp], eax
cmp	DWORD PTR _pLast$[ebp], 0
je	SHORT $LN3@sqlite3Row
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+26]
and	edx, 1
je	SHORT $LN2@sqlite3Row
mov	eax, DWORD PTR _pLast$[ebp]
mov	DWORD PTR tv128[ebp], eax
mov	ecx, DWORD PTR tv128[ebp]
mov	edx, DWORD PTR _rowid$[ebp+4]
cmp	edx, DWORD PTR [ecx+4]
jg	SHORT $LN2@sqlite3Row
jl	SHORT $LN7@sqlite3Row
mov	eax, DWORD PTR tv128[ebp]
mov	ecx, DWORD PTR _rowid$[ebp]
cmp	ecx, DWORD PTR [eax]
ja	SHORT $LN2@sqlite3Row
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+26]
and	eax, -2					
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+26], ax
mov	edx, DWORD PTR _pLast$[ebp]
mov	eax, DWORD PTR _pEntry$[ebp]
mov	DWORD PTR [edx+8], eax
jmp	SHORT $LN1@sqlite3Row
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pEntry$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pEntry$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RowSetClear PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pChunk$[ebp], ecx
jmp	SHORT $LN3@sqlite3Row
mov	edx, DWORD PTR _pNextChunk$[ebp]
mov	DWORD PTR _pChunk$[ebp], edx
cmp	DWORD PTR _pChunk$[ebp], 0
je	SHORT $LN1@sqlite3Row
mov	eax, DWORD PTR _pChunk$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pNextChunk$[ebp], ecx
mov	edx, DWORD PTR _pChunk$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Row
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx], 0
xor	eax, eax
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+20], 0
mov	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+26], dx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RowSetInit PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pSpace$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], 0
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+20], 0
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 32					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], ecx
mov	eax, DWORD PTR _N$[ebp]
sub	eax, 32					
shr	eax, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+26], dx
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+28], 0
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BitvecBuiltinTest PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
push	esi
mov	DWORD PTR _pBitvec$[ebp], 0
mov	DWORD PTR _pV$[ebp], 0
mov	DWORD PTR _rc$[ebp], -1
mov	eax, DWORD PTR _sz$[ebp]
push	eax
call	_sqlite3BitvecCreate
add	esp, 4
mov	DWORD PTR _pBitvec$[ebp], eax
mov	eax, DWORD PTR _sz$[ebp]
add	eax, 7
cdq
and	edx, 7
add	eax, edx
sar	eax, 3
add	eax, 1
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pV$[ebp], eax
push	512					
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _pTmpSpace$[ebp], eax
cmp	DWORD PTR _pBitvec$[ebp], 0
je	SHORT $LN16@sqlite3Bit
cmp	DWORD PTR _pV$[ebp], 0
je	SHORT $LN16@sqlite3Bit
cmp	DWORD PTR _pTmpSpace$[ebp], 0
jne	SHORT $LN17@sqlite3Bit
jmp	$bitvec_end$22
push	1
push	0
call	_sqlite3BitvecSet
add	esp, 8
mov	ecx, DWORD PTR _pTmpSpace$[ebp]
push	ecx
push	1
push	0
call	_sqlite3BitvecClear
add	esp, 12					
mov	DWORD PTR _pc$[ebp], 0
mov	edx, DWORD PTR _pc$[ebp]
mov	eax, DWORD PTR _aOp$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
mov	DWORD PTR _op$[ebp], ecx
cmp	DWORD PTR _op$[ebp], 0
je	$LN14@sqlite3Bit
mov	edx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv84[ebp], edx
cmp	DWORD PTR tv84[ebp], 0
jle	SHORT $LN10@sqlite3Bit
cmp	DWORD PTR tv84[ebp], 2
jle	SHORT $LN11@sqlite3Bit
cmp	DWORD PTR tv84[ebp], 5
je	SHORT $LN11@sqlite3Bit
jmp	SHORT $LN10@sqlite3Bit
mov	DWORD PTR _nx$[ebp], 4
mov	eax, DWORD PTR _pc$[ebp]
mov	ecx, DWORD PTR _aOp$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+8]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pc$[ebp]
mov	ecx, DWORD PTR _aOp$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+8]
mov	eax, DWORD PTR _pc$[ebp]
mov	ecx, DWORD PTR _aOp$[ebp]
add	edx, DWORD PTR [ecx+eax*4+12]
mov	eax, DWORD PTR _pc$[ebp]
mov	ecx, DWORD PTR _aOp$[ebp]
mov	DWORD PTR [ecx+eax*4+8], edx
jmp	SHORT $LN12@sqlite3Bit
mov	DWORD PTR _nx$[ebp], 2
lea	edx, DWORD PTR _i$[ebp]
push	edx
push	4
call	_sqlite3_randomness
add	esp, 8
mov	eax, DWORD PTR _pc$[ebp]
mov	ecx, DWORD PTR _aOp$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+4]
sub	edx, 1
mov	DWORD PTR tv142[ebp], edx
mov	eax, DWORD PTR _pc$[ebp]
mov	ecx, DWORD PTR _aOp$[ebp]
mov	edx, DWORD PTR tv142[ebp]
mov	DWORD PTR [ecx+eax*4+4], edx
cmp	DWORD PTR tv142[ebp], 0
jle	SHORT $LN9@sqlite3Bit
mov	DWORD PTR _nx$[ebp], 0
mov	eax, DWORD PTR _pc$[ebp]
add	eax, DWORD PTR _nx$[ebp]
mov	DWORD PTR _pc$[ebp], eax
mov	eax, DWORD PTR _i$[ebp]
and	eax, 2147483647				
cdq
idiv	DWORD PTR _sz$[ebp]
mov	DWORD PTR _i$[ebp], edx
mov	ecx, DWORD PTR _op$[ebp]
and	ecx, 1
je	SHORT $LN8@sqlite3Bit
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
sar	edx, 3
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
and	ecx, 7
mov	eax, 1
shl	eax, cl
mov	ecx, DWORD PTR _pV$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
or	edx, eax
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
sar	eax, 3
mov	ecx, DWORD PTR _pV$[ebp]
mov	BYTE PTR [ecx+eax], dl
cmp	DWORD PTR _op$[ebp], 5
je	SHORT $LN7@sqlite3Bit
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _pBitvec$[ebp]
push	eax
call	_sqlite3BitvecSet
add	esp, 8
test	eax, eax
je	SHORT $LN7@sqlite3Bit
jmp	$bitvec_end$22
jmp	SHORT $LN5@sqlite3Bit
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
sar	edx, 3
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
and	ecx, 7
mov	eax, 1
shl	eax, cl
not	eax
mov	ecx, DWORD PTR _pV$[ebp]
movzx	edx, BYTE PTR [ecx+edx]
and	edx, eax
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
sar	eax, 3
mov	ecx, DWORD PTR _pV$[ebp]
mov	BYTE PTR [ecx+eax], dl
mov	edx, DWORD PTR _pTmpSpace$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pBitvec$[ebp]
push	ecx
call	_sqlite3BitvecClear
add	esp, 12					
jmp	$LN15@sqlite3Bit
push	0
push	0
call	_sqlite3BitvecTest
add	esp, 8
mov	esi, eax
mov	edx, DWORD PTR _sz$[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _pBitvec$[ebp]
push	eax
call	_sqlite3BitvecTest
add	esp, 8
add	esi, eax
push	0
mov	ecx, DWORD PTR _pBitvec$[ebp]
push	ecx
call	_sqlite3BitvecTest
add	esp, 8
add	esi, eax
mov	edx, DWORD PTR _pBitvec$[ebp]
push	edx
call	_sqlite3BitvecSize
add	esp, 4
sub	eax, DWORD PTR _sz$[ebp]
add	esi, eax
mov	DWORD PTR _rc$[ebp], esi
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN4@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _sz$[ebp]
jg	SHORT $bitvec_end$22
mov	edx, DWORD PTR _i$[ebp]
sar	edx, 3
mov	eax, DWORD PTR _pV$[ebp]
movzx	edx, BYTE PTR [eax+edx]
mov	ecx, DWORD PTR _i$[ebp]
and	ecx, 7
mov	eax, 1
shl	eax, cl
and	edx, eax
je	SHORT $LN20@sqlite3Bit
mov	DWORD PTR tv217[ebp], 1
jmp	SHORT $LN21@sqlite3Bit
mov	DWORD PTR tv217[ebp], 0
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pBitvec$[ebp]
push	edx
call	_sqlite3BitvecTest
add	esp, 8
cmp	DWORD PTR tv217[ebp], eax
je	SHORT $LN1@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $bitvec_end$22
jmp	SHORT $LN3@sqlite3Bit
mov	ecx, DWORD PTR _pTmpSpace$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _pV$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pBitvec$[ebp]
push	eax
call	_sqlite3BitvecDestroy
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BitvecSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax]
pop	ebp
ret	0
ENDP
_sqlite3BitvecDestroy PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN5@sqlite3Bit
jmp	SHORT $LN6@sqlite3Bit
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN4@sqlite3Bit
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN3@sqlite3Bit
mov	ecx, DWORD PTR _i$1[ebp]
add	ecx, 1
mov	DWORD PTR _i$1[ebp], ecx
cmp	DWORD PTR _i$1[ebp], 125		
jae	SHORT $LN4@sqlite3Bit
mov	edx, DWORD PTR _i$1[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+12]
push	ecx
call	_sqlite3BitvecDestroy
add	esp, 4
jmp	SHORT $LN2@sqlite3Bit
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BitvecClear PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	esi
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN13@sqlite3Bit
jmp	$LN14@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+8], 0
je	SHORT $LN11@sqlite3Bit
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+8]
mov	DWORD PTR _bin$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+8]
mov	DWORD PTR _i$[ebp], edx
mov	edx, DWORD PTR _bin$1[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+12]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN10@sqlite3Bit
jmp	$LN14@sqlite3Bit
jmp	SHORT $LN12@sqlite3Bit
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 4000			
ja	SHORT $LN9@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
shr	eax, 3
mov	ecx, DWORD PTR _i$[ebp]
and	ecx, 7
mov	edx, 1
shl	edx, cl
not	edx
mov	ecx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [ecx+eax+12]
and	eax, edx
mov	ecx, DWORD PTR _i$[ebp]
shr	ecx, 3
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+ecx+12], al
jmp	$LN14@sqlite3Bit
mov	eax, DWORD PTR _pBuf$[ebp]
mov	DWORD PTR _aiValues$2[ebp], eax
push	500					
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 12					
push	ecx
mov	edx, DWORD PTR _aiValues$2[ebp]
push	edx
call	_memcpy
add	esp, 12					
push	500					
push	0
mov	eax, DWORD PTR _p$[ebp]
add	eax, 12					
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], 0
mov	DWORD PTR _j$4[ebp], 0
jmp	SHORT $LN7@sqlite3Bit
mov	edx, DWORD PTR _j$4[ebp]
add	edx, 1
mov	DWORD PTR _j$4[ebp], edx
cmp	DWORD PTR _j$4[ebp], 125		
jae	$LN14@sqlite3Bit
mov	eax, DWORD PTR _j$4[ebp]
mov	ecx, DWORD PTR _aiValues$2[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
je	SHORT $LN4@sqlite3Bit
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	eax, DWORD PTR _j$4[ebp]
mov	ecx, DWORD PTR _aiValues$2[ebp]
cmp	DWORD PTR [ecx+eax*4], edx
je	SHORT $LN4@sqlite3Bit
mov	edx, DWORD PTR _j$4[ebp]
mov	eax, DWORD PTR _aiValues$2[ebp]
mov	eax, DWORD PTR [eax+edx*4]
sub	eax, 1
xor	edx, edx
mov	ecx, 125				
div	ecx
mov	DWORD PTR _h$3[ebp], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _h$3[ebp]
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+edx*4+12], 0
je	SHORT $LN2@sqlite3Bit
mov	ecx, DWORD PTR _h$3[ebp]
add	ecx, 1
mov	DWORD PTR _h$3[ebp], ecx
cmp	DWORD PTR _h$3[ebp], 125		
jb	SHORT $LN1@sqlite3Bit
mov	DWORD PTR _h$3[ebp], 0
jmp	SHORT $LN3@sqlite3Bit
mov	edx, DWORD PTR _h$3[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _j$4[ebp]
mov	esi, DWORD PTR _aiValues$2[ebp]
mov	ecx, DWORD PTR [esi+ecx*4]
mov	DWORD PTR [eax+edx*4+12], ecx
jmp	$LN6@sqlite3Bit
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BitvecSet PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN21@sqlite3Bit
xor	eax, eax
jmp	$LN22@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 4000			
jbe	SHORT $LN19@sqlite3Bit
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN19@sqlite3Bit
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+8]
mov	DWORD PTR _bin$2[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+8]
mov	DWORD PTR _i$[ebp], edx
mov	edx, DWORD PTR _bin$2[ebp]
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+edx*4+12], 0
jne	SHORT $LN18@sqlite3Bit
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3BitvecCreate
add	esp, 4
mov	ecx, DWORD PTR _bin$2[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+ecx*4+12], eax
mov	eax, DWORD PTR _bin$2[ebp]
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+eax*4+12], 0
jne	SHORT $LN18@sqlite3Bit
mov	eax, 7
jmp	$LN22@sqlite3Bit
mov	edx, DWORD PTR _bin$2[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+12]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN20@sqlite3Bit
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 4000			
ja	SHORT $LN16@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
shr	eax, 3
mov	ecx, DWORD PTR _i$[ebp]
and	ecx, 7
mov	edx, 1
shl	edx, cl
mov	ecx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [ecx+eax+12]
or	eax, edx
mov	ecx, DWORD PTR _i$[ebp]
shr	ecx, 3
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+ecx+12], al
xor	eax, eax
jmp	$LN22@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
mov	ecx, 125				
div	ecx
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _h$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+eax*4+12], 0
jne	SHORT $LN12@sqlite3Bit
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+4], 124			
jae	SHORT $LN14@sqlite3Bit
jmp	$bitvec_set_end$24
jmp	SHORT $LN12@sqlite3Bit
jmp	SHORT $bitvec_set_rehash$25
mov	eax, DWORD PTR _h$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+12]
cmp	edx, DWORD PTR _i$[ebp]
jne	SHORT $LN9@sqlite3Bit
xor	eax, eax
jmp	$LN22@sqlite3Bit
mov	eax, DWORD PTR _h$[ebp]
add	eax, 1
mov	DWORD PTR _h$[ebp], eax
cmp	DWORD PTR _h$[ebp], 125			
jb	SHORT $LN11@sqlite3Bit
mov	DWORD PTR _h$[ebp], 0
mov	ecx, DWORD PTR _h$[ebp]
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+ecx*4+12], 0
jne	SHORT $LN12@sqlite3Bit
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+4], 62			
jb	$bitvec_set_end$24
push	500					
push	0
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _aiValues$3[ebp], eax
cmp	DWORD PTR _aiValues$3[ebp], 0
jne	SHORT $LN6@sqlite3Bit
mov	eax, 7
jmp	$LN22@sqlite3Bit
jmp	$bitvec_set_end$24
push	500					
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 12					
push	ecx
mov	edx, DWORD PTR _aiValues$3[ebp]
push	edx
call	_memcpy
add	esp, 12					
push	500					
push	0
mov	eax, DWORD PTR _p$[ebp]
add	eax, 12					
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [ecx]
add	eax, 124				
xor	edx, edx
mov	ecx, 125				
div	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], eax
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BitvecSet
add	esp, 8
mov	DWORD PTR _rc$1[ebp], eax
mov	DWORD PTR _j$4[ebp], 0
jmp	SHORT $LN4@sqlite3Bit
mov	edx, DWORD PTR _j$4[ebp]
add	edx, 1
mov	DWORD PTR _j$4[ebp], edx
cmp	DWORD PTR _j$4[ebp], 125		
jae	SHORT $LN2@sqlite3Bit
mov	eax, DWORD PTR _j$4[ebp]
mov	ecx, DWORD PTR _aiValues$3[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
je	SHORT $LN1@sqlite3Bit
mov	edx, DWORD PTR _j$4[ebp]
mov	eax, DWORD PTR _aiValues$3[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BitvecSet
add	esp, 8
or	eax, DWORD PTR _rc$1[ebp]
mov	DWORD PTR _rc$1[ebp], eax
jmp	SHORT $LN3@sqlite3Bit
mov	eax, DWORD PTR _aiValues$3[ebp]
push	eax
push	0
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$1[ebp]
jmp	SHORT $LN22@sqlite3Bit
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
add	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _h$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR [edx+ecx*4+12], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BitvecTest PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN11@sqlite3Bit
xor	eax, eax
jmp	$LN12@sqlite3Bit
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR [eax]
ja	SHORT $LN9@sqlite3Bit
cmp	DWORD PTR _i$[ebp], 0
jne	SHORT $LN10@sqlite3Bit
xor	eax, eax
jmp	$LN12@sqlite3Bit
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN7@sqlite3Bit
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+8]
mov	DWORD PTR _bin$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
div	DWORD PTR [ecx+8]
mov	DWORD PTR _i$[ebp], edx
mov	edx, DWORD PTR _bin$1[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+12]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN6@sqlite3Bit
xor	eax, eax
jmp	$LN12@sqlite3Bit
jmp	SHORT $LN8@sqlite3Bit
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 4000			
ja	SHORT $LN5@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
shr	eax, 3
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+eax+12]
mov	ecx, DWORD PTR _i$[ebp]
and	ecx, 7
mov	eax, 1
shl	eax, cl
and	edx, eax
je	SHORT $LN14@sqlite3Bit
mov	DWORD PTR tv90[ebp], 1
jmp	SHORT $LN15@sqlite3Bit
mov	DWORD PTR tv90[ebp], 0
mov	eax, DWORD PTR tv90[ebp]
jmp	SHORT $LN12@sqlite3Bit
jmp	SHORT $LN12@sqlite3Bit
mov	eax, DWORD PTR _i$[ebp]
xor	edx, edx
mov	ecx, 125				
div	ecx
mov	DWORD PTR _h$2[ebp], edx
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _h$2[ebp]
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+eax*4+12], 0
je	SHORT $LN2@sqlite3Bit
mov	edx, DWORD PTR _h$2[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+12]
cmp	ecx, DWORD PTR _i$[ebp]
jne	SHORT $LN1@sqlite3Bit
mov	eax, 1
jmp	SHORT $LN12@sqlite3Bit
mov	eax, DWORD PTR _h$2[ebp]
add	eax, 1
xor	edx, edx
mov	ecx, 125				
div	ecx
mov	DWORD PTR _h$2[ebp], edx
jmp	SHORT $LN3@sqlite3Bit
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BitvecCreate PROC
push	ebp
mov	ebp, esp
push	ecx
push	512					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Bit
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _iSize$[ebp]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FaultSim PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _sqlite3Config+260
mov	DWORD PTR _xCallback$[ebp], eax
cmp	DWORD PTR _xCallback$[ebp], 0
je	SHORT $LN3@sqlite3Fau
mov	ecx, DWORD PTR _iTest$[ebp]
push	ecx
call	DWORD PTR _xCallback$[ebp]
add	esp, 4
mov	DWORD PTR tv67[ebp], eax
jmp	SHORT $LN4@sqlite3Fau
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CodeOnce PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+80]
mov	DWORD PTR tv71[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+80]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+80], ecx
mov	eax, DWORD PTR tv71[ebp]
push	eax
push	43					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbNameToBtree PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN5@sqlite3DbN
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN3@sqlite3DbN
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
cmp	DWORD PTR [edx+eax+4], 0
je	SHORT $LN2@sqlite3DbN
cmp	DWORD PTR _zDbName$[ebp], 0
je	SHORT $LN1@sqlite3DbN
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _zDbName$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN2@sqlite3DbN
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	eax, DWORD PTR [ecx+edx+4]
jmp	SHORT $LN6@sqlite3DbN
jmp	SHORT $LN4@sqlite3DbN
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ParseUri PROC
push	ebp
mov	ebp, esp
sub	esp, 100				
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pFlags$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _flags$[ebp], ecx
mov	edx, DWORD PTR _zDefaultVfs$[ebp]
mov	DWORD PTR _zVfs$[ebp], edx
mov	eax, DWORD PTR _zUri$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nUri$[ebp], eax
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 64					
jne	SHORT $LN49@sqlite3Par
cmp	DWORD PTR _sqlite3Config+12, 0
je	$LN50@sqlite3Par
cmp	DWORD PTR _nUri$[ebp], 5
jl	$LN50@sqlite3Par
push	5
push	OFFSET $SG121364
mov	edx, DWORD PTR _zUri$[ebp]
push	edx
call	_memcmp
add	esp, 12					
test	eax, eax
jne	$LN50@sqlite3Par
mov	DWORD PTR _iOut$15[ebp], 0
mov	eax, DWORD PTR _nUri$[ebp]
add	eax, 2
mov	DWORD PTR _nByte$4[ebp], eax
mov	ecx, DWORD PTR _flags$[ebp]
or	ecx, 64					
mov	DWORD PTR _flags$[ebp], ecx
mov	DWORD PTR _iIn$16[ebp], 0
jmp	SHORT $LN48@sqlite3Par
mov	edx, DWORD PTR _iIn$16[ebp]
add	edx, 1
mov	DWORD PTR _iIn$16[ebp], edx
mov	eax, DWORD PTR _iIn$16[ebp]
cmp	eax, DWORD PTR _nUri$[ebp]
jge	SHORT $LN46@sqlite3Par
mov	ecx, DWORD PTR _zUri$[ebp]
add	ecx, DWORD PTR _iIn$16[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, 38					
jne	SHORT $LN53@sqlite3Par
mov	DWORD PTR tv83[ebp], 1
jmp	SHORT $LN54@sqlite3Par
mov	DWORD PTR tv83[ebp], 0
mov	eax, DWORD PTR _nByte$4[ebp]
add	eax, DWORD PTR tv83[ebp]
mov	DWORD PTR _nByte$4[ebp], eax
jmp	SHORT $LN47@sqlite3Par
mov	ecx, DWORD PTR _nByte$4[ebp]
push	ecx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _zFile$[ebp], eax
cmp	DWORD PTR _zFile$[ebp], 0
jne	SHORT $LN45@sqlite3Par
mov	eax, 7
jmp	$LN51@sqlite3Par
mov	DWORD PTR _iIn$16[ebp], 5
mov	edx, 1
imul	eax, edx, 5
mov	ecx, DWORD PTR _zUri$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 47					
jne	$LN44@sqlite3Par
mov	eax, 1
imul	ecx, eax, 6
mov	edx, DWORD PTR _zUri$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 47					
jne	$LN44@sqlite3Par
mov	DWORD PTR _iIn$16[ebp], 7
mov	ecx, DWORD PTR _zUri$[ebp]
add	ecx, DWORD PTR _iIn$16[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN42@sqlite3Par
mov	eax, DWORD PTR _zUri$[ebp]
add	eax, DWORD PTR _iIn$16[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 47					
je	SHORT $LN42@sqlite3Par
mov	edx, DWORD PTR _iIn$16[ebp]
add	edx, 1
mov	DWORD PTR _iIn$16[ebp], edx
jmp	SHORT $LN43@sqlite3Par
cmp	DWORD PTR _iIn$16[ebp], 7
je	SHORT $LN44@sqlite3Par
cmp	DWORD PTR _iIn$16[ebp], 16		
jne	SHORT $LN40@sqlite3Par
push	9
mov	eax, 1
imul	ecx, eax, 7
add	ecx, DWORD PTR _zUri$[ebp]
push	ecx
push	OFFSET $SG121380
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN44@sqlite3Par
mov	edx, 1
imul	eax, edx, 7
add	eax, DWORD PTR _zUri$[ebp]
push	eax
mov	ecx, DWORD PTR _iIn$16[ebp]
sub	ecx, 7
push	ecx
push	OFFSET $SG121381
call	_sqlite3_mprintf
add	esp, 12					
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR _rc$[ebp], 1
jmp	$parse_uri_out$57
mov	DWORD PTR _eState$14[ebp], 0
mov	eax, DWORD PTR _zUri$[ebp]
add	eax, DWORD PTR _iIn$16[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR _c$[ebp], cl
movsx	edx, BYTE PTR _c$[ebp]
test	edx, edx
je	$LN38@sqlite3Par
movsx	eax, BYTE PTR _c$[ebp]
cmp	eax, 35					
je	$LN38@sqlite3Par
mov	ecx, DWORD PTR _iIn$16[ebp]
add	ecx, 1
mov	DWORD PTR _iIn$16[ebp], ecx
movsx	edx, BYTE PTR _c$[ebp]
cmp	edx, 37					
jne	$LN37@sqlite3Par
mov	eax, DWORD PTR _zUri$[ebp]
add	eax, DWORD PTR _iIn$16[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 8
je	$LN37@sqlite3Par
mov	eax, DWORD PTR _zUri$[ebp]
add	eax, DWORD PTR _iIn$16[ebp]
movzx	ecx, BYTE PTR [eax+1]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 8
je	$LN37@sqlite3Par
mov	eax, DWORD PTR _zUri$[ebp]
add	eax, DWORD PTR _iIn$16[ebp]
movsx	ecx, BYTE PTR [eax]
mov	DWORD PTR tv184[ebp], ecx
mov	edx, DWORD PTR tv184[ebp]
push	edx
call	_sqlite3HexToInt
add	esp, 4
movzx	eax, al
shl	eax, 4
mov	DWORD PTR _octet$8[ebp], eax
mov	ecx, DWORD PTR _iIn$16[ebp]
add	ecx, 1
mov	DWORD PTR _iIn$16[ebp], ecx
mov	edx, DWORD PTR _zUri$[ebp]
add	edx, DWORD PTR _iIn$16[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR tv193[ebp], eax
mov	ecx, DWORD PTR tv193[ebp]
push	ecx
call	_sqlite3HexToInt
add	esp, 4
movzx	edx, al
add	edx, DWORD PTR _octet$8[ebp]
mov	DWORD PTR _octet$8[ebp], edx
mov	eax, DWORD PTR _iIn$16[ebp]
add	eax, 1
mov	DWORD PTR _iIn$16[ebp], eax
cmp	DWORD PTR _octet$8[ebp], 0
jne	SHORT $LN36@sqlite3Par
mov	ecx, DWORD PTR _zUri$[ebp]
add	ecx, DWORD PTR _iIn$16[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR _c$[ebp], dl
movsx	eax, BYTE PTR _c$[ebp]
test	eax, eax
je	SHORT $LN34@sqlite3Par
movsx	ecx, BYTE PTR _c$[ebp]
cmp	ecx, 35					
je	SHORT $LN34@sqlite3Par
cmp	DWORD PTR _eState$14[ebp], 0
jne	SHORT $LN33@sqlite3Par
movsx	edx, BYTE PTR _c$[ebp]
cmp	edx, 63					
je	SHORT $LN34@sqlite3Par
cmp	DWORD PTR _eState$14[ebp], 1
jne	SHORT $LN32@sqlite3Par
movsx	eax, BYTE PTR _c$[ebp]
cmp	eax, 61					
je	SHORT $LN34@sqlite3Par
movsx	ecx, BYTE PTR _c$[ebp]
cmp	ecx, 38					
je	SHORT $LN34@sqlite3Par
cmp	DWORD PTR _eState$14[ebp], 2
jne	SHORT $LN31@sqlite3Par
movsx	edx, BYTE PTR _c$[ebp]
cmp	edx, 38					
je	SHORT $LN34@sqlite3Par
mov	eax, DWORD PTR _iIn$16[ebp]
add	eax, 1
mov	DWORD PTR _iIn$16[ebp], eax
jmp	SHORT $LN35@sqlite3Par
jmp	$LN39@sqlite3Par
mov	cl, BYTE PTR _octet$8[ebp]
mov	BYTE PTR _c$[ebp], cl
jmp	$LN30@sqlite3Par
cmp	DWORD PTR _eState$14[ebp], 1
jne	$LN29@sqlite3Par
movsx	edx, BYTE PTR _c$[ebp]
cmp	edx, 38					
je	SHORT $LN28@sqlite3Par
movsx	eax, BYTE PTR _c$[ebp]
cmp	eax, 61					
jne	SHORT $LN29@sqlite3Par
mov	ecx, DWORD PTR _zFile$[ebp]
add	ecx, DWORD PTR _iOut$15[ebp]
movsx	edx, BYTE PTR [ecx-1]
test	edx, edx
jne	SHORT $LN27@sqlite3Par
mov	eax, DWORD PTR _zUri$[ebp]
add	eax, DWORD PTR _iIn$16[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	SHORT $LN25@sqlite3Par
mov	edx, DWORD PTR _zUri$[ebp]
add	edx, DWORD PTR _iIn$16[ebp]
movsx	eax, BYTE PTR [edx]
cmp	eax, 35					
je	SHORT $LN25@sqlite3Par
mov	ecx, DWORD PTR _zUri$[ebp]
add	ecx, DWORD PTR _iIn$16[ebp]
movsx	edx, BYTE PTR [ecx-1]
cmp	edx, 38					
je	SHORT $LN25@sqlite3Par
mov	eax, DWORD PTR _iIn$16[ebp]
add	eax, 1
mov	DWORD PTR _iIn$16[ebp], eax
jmp	SHORT $LN26@sqlite3Par
jmp	$LN39@sqlite3Par
movsx	ecx, BYTE PTR _c$[ebp]
cmp	ecx, 38					
jne	SHORT $LN24@sqlite3Par
mov	edx, DWORD PTR _zFile$[ebp]
add	edx, DWORD PTR _iOut$15[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _iOut$15[ebp]
add	eax, 1
mov	DWORD PTR _iOut$15[ebp], eax
jmp	SHORT $LN23@sqlite3Par
mov	DWORD PTR _eState$14[ebp], 2
mov	BYTE PTR _c$[ebp], 0
jmp	SHORT $LN30@sqlite3Par
cmp	DWORD PTR _eState$14[ebp], 0
jne	SHORT $LN19@sqlite3Par
movsx	ecx, BYTE PTR _c$[ebp]
cmp	ecx, 63					
je	SHORT $LN20@sqlite3Par
cmp	DWORD PTR _eState$14[ebp], 2
jne	SHORT $LN30@sqlite3Par
movsx	edx, BYTE PTR _c$[ebp]
cmp	edx, 38					
jne	SHORT $LN30@sqlite3Par
mov	BYTE PTR _c$[ebp], 0
mov	DWORD PTR _eState$14[ebp], 1
mov	eax, DWORD PTR _zFile$[ebp]
add	eax, DWORD PTR _iOut$15[ebp]
mov	cl, BYTE PTR _c$[ebp]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _iOut$15[ebp]
add	edx, 1
mov	DWORD PTR _iOut$15[ebp], edx
jmp	$LN39@sqlite3Par
cmp	DWORD PTR _eState$14[ebp], 1
jne	SHORT $LN18@sqlite3Par
mov	eax, DWORD PTR _zFile$[ebp]
add	eax, DWORD PTR _iOut$15[ebp]
mov	BYTE PTR [eax], 0
mov	ecx, DWORD PTR _iOut$15[ebp]
add	ecx, 1
mov	DWORD PTR _iOut$15[ebp], ecx
mov	edx, DWORD PTR _zFile$[ebp]
add	edx, DWORD PTR _iOut$15[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _iOut$15[ebp]
add	eax, 1
mov	DWORD PTR _iOut$15[ebp], eax
mov	ecx, DWORD PTR _zFile$[ebp]
add	ecx, DWORD PTR _iOut$15[ebp]
mov	BYTE PTR [ecx], 0
mov	edx, DWORD PTR _iOut$15[ebp]
add	edx, 1
mov	DWORD PTR _iOut$15[ebp], edx
mov	eax, DWORD PTR _zFile$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _zFile$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _zOpt$13[ebp], edx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zOpt$13[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	$LN16@sqlite3Par
mov	ecx, DWORD PTR _zOpt$13[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nOpt$7[ebp], eax
mov	edx, DWORD PTR _nOpt$7[ebp]
mov	eax, DWORD PTR _zOpt$13[ebp]
lea	ecx, DWORD PTR [eax+edx+1]
mov	DWORD PTR _zVal$11[ebp], ecx
mov	edx, DWORD PTR _zVal$11[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nVal$2[ebp], eax
cmp	DWORD PTR _nOpt$7[ebp], 3
jne	SHORT $LN15@sqlite3Par
push	3
mov	eax, DWORD PTR _zOpt$13[ebp]
push	eax
push	OFFSET $SG121419
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN15@sqlite3Par
mov	ecx, DWORD PTR _zVal$11[ebp]
mov	DWORD PTR _zVfs$[ebp], ecx
jmp	$LN14@sqlite3Par
mov	DWORD PTR _aMode$12[ebp], 0
mov	DWORD PTR _zModeType$6[ebp], 0
mov	DWORD PTR _mask$9[ebp], 0
mov	DWORD PTR _limit$3[ebp], 0
cmp	DWORD PTR _nOpt$7[ebp], 5
jne	SHORT $LN13@sqlite3Par
push	5
mov	edx, DWORD PTR _zOpt$13[ebp]
push	edx
push	OFFSET $SG121429
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN13@sqlite3Par
mov	DWORD PTR _mask$9[ebp], 393216		
mov	DWORD PTR _aMode$12[ebp], OFFSET ?aCacheMode@?BD@??sqlite3ParseUri@@9@9
mov	eax, DWORD PTR _mask$9[ebp]
mov	DWORD PTR _limit$3[ebp], eax
mov	DWORD PTR _zModeType$6[ebp], OFFSET $SG121434
cmp	DWORD PTR _nOpt$7[ebp], 4
jne	SHORT $LN12@sqlite3Par
push	4
mov	ecx, DWORD PTR _zOpt$13[ebp]
push	ecx
push	OFFSET $SG121436
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN12@sqlite3Par
mov	DWORD PTR _mask$9[ebp], 135		
mov	DWORD PTR _aMode$12[ebp], OFFSET ?aOpenMode@?BE@??sqlite3ParseUri@@9@9
mov	edx, DWORD PTR _mask$9[ebp]
and	edx, DWORD PTR _flags$[ebp]
mov	DWORD PTR _limit$3[ebp], edx
mov	DWORD PTR _zModeType$6[ebp], OFFSET $SG121443
cmp	DWORD PTR _aMode$12[ebp], 0
je	$LN14@sqlite3Par
mov	DWORD PTR _mode$5[ebp], 0
mov	DWORD PTR _i$10[ebp], 0
jmp	SHORT $LN10@sqlite3Par
mov	eax, DWORD PTR _i$10[ebp]
add	eax, 1
mov	DWORD PTR _i$10[ebp], eax
mov	ecx, DWORD PTR _i$10[ebp]
mov	edx, DWORD PTR _aMode$12[ebp]
cmp	DWORD PTR [edx+ecx*8], 0
je	SHORT $LN8@sqlite3Par
mov	eax, DWORD PTR _i$10[ebp]
mov	ecx, DWORD PTR _aMode$12[ebp]
mov	edx, DWORD PTR [ecx+eax*8]
mov	DWORD PTR _z$1[ebp], edx
mov	eax, DWORD PTR _z$1[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
cmp	DWORD PTR _nVal$2[ebp], eax
jne	SHORT $LN7@sqlite3Par
mov	ecx, DWORD PTR _nVal$2[ebp]
push	ecx
mov	edx, DWORD PTR _z$1[ebp]
push	edx
mov	eax, DWORD PTR _zVal$11[ebp]
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN7@sqlite3Par
mov	ecx, DWORD PTR _i$10[ebp]
mov	edx, DWORD PTR _aMode$12[ebp]
mov	eax, DWORD PTR [edx+ecx*8+4]
mov	DWORD PTR _mode$5[ebp], eax
jmp	SHORT $LN8@sqlite3Par
jmp	SHORT $LN9@sqlite3Par
cmp	DWORD PTR _mode$5[ebp], 0
jne	SHORT $LN6@sqlite3Par
mov	ecx, DWORD PTR _zVal$11[ebp]
push	ecx
mov	edx, DWORD PTR _zModeType$6[ebp]
push	edx
push	OFFSET $SG121453
call	_sqlite3_mprintf
add	esp, 12					
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR _rc$[ebp], 1
jmp	$parse_uri_out$57
mov	edx, DWORD PTR _mode$5[ebp]
and	edx, -129				
cmp	edx, DWORD PTR _limit$3[ebp]
jle	SHORT $LN5@sqlite3Par
mov	eax, DWORD PTR _zVal$11[ebp]
push	eax
mov	ecx, DWORD PTR _zModeType$6[ebp]
push	ecx
push	OFFSET $SG121455
call	_sqlite3_mprintf
add	esp, 12					
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [edx], eax
mov	DWORD PTR _rc$[ebp], 3
jmp	$parse_uri_out$57
mov	eax, DWORD PTR _mask$9[ebp]
not	eax
and	eax, DWORD PTR _flags$[ebp]
or	eax, DWORD PTR _mode$5[ebp]
mov	DWORD PTR _flags$[ebp], eax
mov	ecx, DWORD PTR _nVal$2[ebp]
mov	edx, DWORD PTR _zVal$11[ebp]
lea	eax, DWORD PTR [edx+ecx+1]
mov	DWORD PTR _zOpt$13[ebp], eax
jmp	$LN17@sqlite3Par
jmp	SHORT $LN4@sqlite3Par
mov	ecx, DWORD PTR _nUri$[ebp]
add	ecx, 2
push	ecx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _zFile$[ebp], eax
cmp	DWORD PTR _zFile$[ebp], 0
jne	SHORT $LN3@sqlite3Par
mov	eax, 7
jmp	$LN51@sqlite3Par
mov	edx, DWORD PTR _nUri$[ebp]
push	edx
mov	eax, DWORD PTR _zUri$[ebp]
push	eax
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _zFile$[ebp]
add	edx, DWORD PTR _nUri$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _zFile$[ebp]
add	eax, DWORD PTR _nUri$[ebp]
mov	BYTE PTR [eax+1], 0
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, -65				
mov	DWORD PTR _flags$[ebp], ecx
mov	edx, DWORD PTR _zVfs$[ebp]
push	edx
call	_sqlite3_vfs_find
add	esp, 4
mov	ecx, DWORD PTR _ppVfs$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _ppVfs$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $parse_uri_out$57
mov	eax, DWORD PTR _zVfs$[ebp]
push	eax
push	OFFSET $SG121459
call	_sqlite3_mprintf
add	esp, 8
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR _rc$[ebp], 1
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3Par
mov	edx, DWORD PTR _zFile$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _zFile$[ebp], 0
mov	eax, DWORD PTR _pFlags$[ebp]
mov	ecx, DWORD PTR _flags$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pzFile$[ebp]
mov	eax, DWORD PTR _zFile$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3EndTable PROC
push	ebp
mov	ebp, esp
sub	esp, 92					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pEnd$[ebp], 0
jne	SHORT $LN27@sqlite3End
cmp	DWORD PTR _pSelect$[ebp], 0
je	SHORT $LN28@sqlite3End
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN29@sqlite3End
jmp	$LN30@sqlite3End
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+484]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN26@sqlite3End
jmp	$LN30@sqlite3End
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
je	SHORT $LN25@sqlite3End
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+132]
mov	DWORD PTR [edx+32], ecx
movzx	edx, BYTE PTR _tabOpts$[ebp]
and	edx, 32					
je	SHORT $LN24@sqlite3End
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 8
je	SHORT $LN23@sqlite3End
push	OFFSET $SG106756
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN30@sqlite3End
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 4
jne	SHORT $LN22@sqlite3End
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG106758
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN24@sqlite3End
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+44]
or	eax, 32					
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+44], al
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_convertToWithoutRowidTable
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+24], 0
je	SHORT $LN20@sqlite3End
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
push	0
push	4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ResolveSelfReference
add	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_estimateTableWidth
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$[ebp], edx
jmp	SHORT $LN19@sqlite3End
mov	eax, DWORD PTR _pIdx$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$[ebp], ecx
cmp	DWORD PTR _pIdx$[ebp], 0
je	SHORT $LN17@sqlite3End
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
call	_estimateIndexWidth
add	esp, 4
jmp	SHORT $LN18@sqlite3End
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
jne	$LN16@sqlite3End
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$12[ebp], eax
cmp	DWORD PTR _v$12[ebp], 0
jne	SHORT $LN15@sqlite3End
jmp	$LN30@sqlite3End
push	0
push	58					
mov	eax, DWORD PTR _v$12[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+12], 0
jne	SHORT $LN14@sqlite3End
mov	DWORD PTR _zType$7[ebp], OFFSET $SG106772
mov	DWORD PTR _zType2$8[ebp], OFFSET $SG106773
jmp	SHORT $LN13@sqlite3End
mov	DWORD PTR _zType$7[ebp], OFFSET $SG106775
mov	DWORD PTR _zType2$8[ebp], OFFSET $SG106776
cmp	DWORD PTR _pSelect$[ebp], 0
je	$LN12@sqlite3End
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+388]
push	ecx
push	1
push	53					
mov	edx, DWORD PTR _v$12[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	2
mov	eax, DWORD PTR _v$12[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+68], 2
push	1
push	14					
lea	edx, DWORD PTR _dest$1[ebp]
push	edx
call	_sqlite3SelectDestInit
add	esp, 12					
lea	eax, DWORD PTR _dest$1[ebp]
push	eax
mov	ecx, DWORD PTR _pSelect$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3Select
add	esp, 12					
push	1
push	58					
mov	eax, DWORD PTR _v$12[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
jne	SHORT $LN12@sqlite3End
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ResultSetOfSelect
add	esp, 8
mov	DWORD PTR _pSelTab$13[ebp], eax
cmp	DWORD PTR _pSelTab$13[ebp], 0
jne	SHORT $LN10@sqlite3End
jmp	$LN30@sqlite3End
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pSelTab$13[ebp]
mov	ax, WORD PTR [edx+38]
mov	WORD PTR [ecx+38], ax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pSelTab$13[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+4], eax
xor	ecx, ecx
mov	edx, DWORD PTR _pSelTab$13[ebp]
mov	WORD PTR [edx+38], cx
mov	eax, DWORD PTR _pSelTab$13[ebp]
mov	DWORD PTR [eax+4], 0
mov	ecx, DWORD PTR _pSelTab$13[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DeleteTable
add	esp, 8
cmp	DWORD PTR _pSelect$[ebp], 0
je	SHORT $LN9@sqlite3End
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_createTableStmt
add	esp, 8
mov	DWORD PTR _zStmt$9[ebp], eax
jmp	SHORT $LN8@sqlite3End
movzx	edx, BYTE PTR _tabOpts$[ebp]
test	edx, edx
je	SHORT $LN32@sqlite3End
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 504				
mov	DWORD PTR tv201[ebp], eax
jmp	SHORT $LN33@sqlite3End
mov	ecx, DWORD PTR _pEnd$[ebp]
mov	DWORD PTR tv201[ebp], ecx
mov	edx, DWORD PTR tv201[ebp]
mov	DWORD PTR _pEnd2$11[ebp], edx
mov	eax, DWORD PTR _pEnd2$11[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [eax]
sub	edx, DWORD PTR [ecx+496]
mov	DWORD PTR _n$10[ebp], edx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pEnd2$11[ebp]
mov	eax, DWORD PTR [edx]
movsx	ecx, BYTE PTR [eax+ecx]
cmp	ecx, 59					
je	SHORT $LN7@sqlite3End
mov	edx, DWORD PTR _pEnd2$11[ebp]
mov	eax, DWORD PTR _n$10[ebp]
add	eax, DWORD PTR [edx+4]
mov	DWORD PTR _n$10[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+496]
push	edx
mov	eax, DWORD PTR _n$10[ebp]
push	eax
mov	ecx, DWORD PTR _zType2$8[ebp]
push	ecx
push	OFFSET $SG106789
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 20					
mov	DWORD PTR _zStmt$9[ebp], eax
mov	eax, 1
test	eax, eax
je	SHORT $LN34@sqlite3End
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN34@sqlite3End
mov	DWORD PTR tv231[ebp], OFFSET $SG106790
jmp	SHORT $LN35@sqlite3End
mov	DWORD PTR tv231[ebp], OFFSET $SG106791
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+384]
push	edx
mov	eax, DWORD PTR _zStmt$9[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+388]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zType$7[ebp]
push	ecx
mov	edx, DWORD PTR tv231[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
push	eax
push	OFFSET $SG106792
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3NestedParse
add	esp, 40					
mov	edx, DWORD PTR _zStmt$9[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ChangeCookie
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 8
je	SHORT $LN6@sqlite3End
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pDb$6[ebp], edx
mov	ecx, DWORD PTR _pDb$6[ebp]
mov	edx, DWORD PTR [ecx+12]
cmp	DWORD PTR [edx+72], 0
jne	SHORT $LN6@sqlite3End
mov	eax, DWORD PTR _pDb$6[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG106797
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3NestedParse
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG106798
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
push	eax
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _v$12[ebp]
push	ecx
call	_sqlite3VdbeAddParseSchemaOp
add	esp, 12					
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+137]
test	eax, eax
je	$LN30@sqlite3End
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _pSchema$4[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pSchema$4[ebp]
add	edx, 8
push	edx
call	_sqlite3HashInsert
add	esp, 16					
mov	DWORD PTR _pOld$3[ebp], eax
cmp	DWORD PTR _pOld$3[ebp], 0
je	SHORT $LN3@sqlite3End
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
jmp	SHORT $LN30@sqlite3End
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+484], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
or	eax, 2
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN30@sqlite3End
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+496]
mov	DWORD PTR _zName$5[ebp], ecx
mov	edx, DWORD PTR _pCons$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $LN1@sqlite3End
mov	eax, DWORD PTR _pEnd$[ebp]
mov	DWORD PTR _pCons$[ebp], eax
mov	ecx, DWORD PTR _pCons$[ebp]
mov	edx, DWORD PTR [ecx]
sub	edx, DWORD PTR _zName$5[ebp]
mov	DWORD PTR _nName$2[ebp], edx
mov	eax, DWORD PTR _nName$2[ebp]
push	eax
mov	ecx, DWORD PTR _zName$5[ebp]
push	ecx
call	_sqlite3Utf8CharLen
add	esp, 8
add	eax, 13					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+48], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddCollateType PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
push	esi
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN8@sqlite3Add
jmp	$LN9@sqlite3Add
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pToken$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zColl$[ebp], eax
cmp	DWORD PTR _zColl$[ebp], 0
jne	SHORT $LN7@sqlite3Add
jmp	$LN9@sqlite3Add
mov	edx, DWORD PTR _zColl$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3LocateCollSeq
add	esp, 8
test	eax, eax
je	$LN6@sqlite3Add
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
imul	eax, DWORD PTR _i$[ebp], 24
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _zColl$[ebp]
mov	DWORD PTR [edx+eax+16], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$1[ebp], eax
jmp	SHORT $LN5@sqlite3Add
mov	ecx, DWORD PTR _pIdx$1[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$1[ebp], edx
cmp	DWORD PTR _pIdx$1[ebp], 0
je	SHORT $LN3@sqlite3Add
mov	eax, 2
imul	ecx, eax, 0
mov	edx, DWORD PTR _pIdx$1[ebp]
mov	eax, DWORD PTR [edx+4]
movsx	ecx, WORD PTR [eax+ecx]
cmp	ecx, DWORD PTR _i$[ebp]
jne	SHORT $LN2@sqlite3Add
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, 4
imul	eax, eax, 0
mov	esi, DWORD PTR _pIdx$1[ebp]
mov	esi, DWORD PTR [esi+32]
mov	ecx, DWORD PTR [ecx+edx+16]
mov	DWORD PTR [eax+esi], ecx
jmp	SHORT $LN4@sqlite3Add
jmp	SHORT $LN9@sqlite3Add
mov	edx, DWORD PTR _zColl$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddDefaultValue PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	$LN3@sqlite3Add
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
sub	edx, 1
imul	eax, edx, 24
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$[ebp], eax
mov	edx, DWORD PTR _pSpan$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprIsConstantOrFunction
add	esp, 4
test	eax, eax
jne	SHORT $LN2@sqlite3Add
mov	ecx, DWORD PTR _pCol$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	OFFSET $SG106446
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN3@sqlite3Add
mov	ecx, DWORD PTR _pCol$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
push	1
mov	ecx, DWORD PTR _pSpan$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDup
add	esp, 12					
mov	ecx, DWORD PTR _pCol$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pCol$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pSpan$[ebp]
mov	eax, DWORD PTR _pSpan$[ebp]
mov	ecx, DWORD PTR [edx+8]
sub	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _pSpan$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	edx, DWORD PTR _pCol$[ebp]
mov	DWORD PTR [edx+8], eax
mov	eax, DWORD PTR _pSpan$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddColumnType PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Add
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	eax, 1
jge	SHORT $LN2@sqlite3Add
jmp	SHORT $LN3@sqlite3Add
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
sub	edx, 1
imul	eax, edx, 24
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$[ebp], eax
mov	edx, DWORD PTR _pType$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	edx, DWORD PTR _pCol$[ebp]
mov	DWORD PTR [edx+12], eax
mov	eax, DWORD PTR _pCol$[ebp]
add	eax, 22					
push	eax
mov	ecx, DWORD PTR _pCol$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3AffinityType
add	esp, 8
mov	ecx, DWORD PTR _pCol$[ebp]
mov	BYTE PTR [ecx+21], al
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddCheckConstraint PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	DWORD PTR _pTab$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN3@sqlite3Add
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+451]
test	edx, edx
jne	SHORT $LN3@sqlite3Add
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+136]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreeIsReadonly
add	esp, 4
test	eax, eax
jne	SHORT $LN3@sqlite3Add
mov	edx, DWORD PTR _pCheckExpr$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprListAppend
add	esp, 12					
mov	ecx, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+324], 0
je	SHORT $LN2@sqlite3Add
push	1
mov	eax, DWORD PTR _pParse$[ebp]
add	eax, 320				
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprListSetName
add	esp, 16					
jmp	SHORT $LN4@sqlite3Add
mov	ecx, DWORD PTR _pCheckExpr$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddPrimaryKey PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	DWORD PTR _pTab$[ebp], ecx
mov	DWORD PTR _zType$[ebp], 0
mov	DWORD PTR _iCol$[ebp], -1
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN19@sqlite3Add
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+451]
test	eax, eax
je	SHORT $LN20@sqlite3Add
jmp	$primary_key_exit$23
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 4
je	SHORT $LN18@sqlite3Add
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG106470
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$primary_key_exit$23
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
or	ecx, 4
mov	edx, DWORD PTR _pTab$[ebp]
mov	BYTE PTR [edx+44], cl
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN17@sqlite3Add
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
sub	ecx, 1
mov	DWORD PTR _iCol$[ebp], ecx
imul	edx, DWORD PTR _iCol$[ebp], 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+edx+23]
or	edx, 1
imul	eax, DWORD PTR _iCol$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [ecx+4]
mov	BYTE PTR [ecx+eax+23], dl
imul	edx, DWORD PTR _iCol$[ebp], 24
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+12]
mov	DWORD PTR _zType$[ebp], edx
mov	DWORD PTR _nTerm$[ebp], 1
jmp	$LN16@sqlite3Add
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _nTerm$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN15@sqlite3Add
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nTerm$[ebp]
jge	$LN16@sqlite3Add
mov	DWORD PTR _iCol$[ebp], 0
jmp	SHORT $LN12@sqlite3Add
mov	ecx, DWORD PTR _iCol$[ebp]
add	ecx, 1
mov	DWORD PTR _iCol$[ebp], ecx
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _iCol$[ebp], eax
jge	SHORT $LN10@sqlite3Add
imul	ecx, DWORD PTR _iCol$[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+4]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN9@sqlite3Add
imul	eax, DWORD PTR _iCol$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+eax+23]
or	eax, 1
imul	ecx, DWORD PTR _iCol$[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [edx+4]
mov	BYTE PTR [edx+ecx+23], al
imul	eax, DWORD PTR _iCol$[ebp], 24
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax+12]
mov	DWORD PTR _zType$[ebp], eax
jmp	SHORT $LN10@sqlite3Add
jmp	SHORT $LN11@sqlite3Add
jmp	$LN14@sqlite3Add
cmp	DWORD PTR _nTerm$[ebp], 1
jne	SHORT $LN8@sqlite3Add
cmp	DWORD PTR _zType$[ebp], 0
je	SHORT $LN8@sqlite3Add
push	OFFSET $SG106481
mov	ecx, DWORD PTR _zType$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN8@sqlite3Add
cmp	DWORD PTR _sortOrder$[ebp], 0
jne	SHORT $LN8@sqlite3Add
mov	edx, DWORD PTR _pTab$[ebp]
mov	ax, WORD PTR _iCol$[ebp]
mov	WORD PTR [edx+36], ax
mov	ecx, DWORD PTR _pTab$[ebp]
mov	dl, BYTE PTR _onError$[ebp]
mov	BYTE PTR [ecx+45], dl
mov	eax, DWORD PTR _autoInc$[ebp]
shl	eax, 3
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
or	edx, eax
mov	eax, DWORD PTR _pTab$[ebp]
mov	BYTE PTR [eax+44], dl
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN7@sqlite3Add
mov	ecx, 24					
imul	edx, ecx, 0
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _pParse$[ebp]
mov	cl, BYTE PTR [ecx+edx+12]
mov	BYTE PTR [eax+448], cl
jmp	$primary_key_exit$23
cmp	DWORD PTR _autoInc$[ebp], 0
je	SHORT $LN5@sqlite3Add
push	OFFSET $SG106487
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$primary_key_exit$23
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$2[ebp], ecx
cmp	DWORD PTR _v$2[ebp], 0
je	SHORT $LN3@sqlite3Add
push	156					
mov	edx, DWORD PTR _v$2[ebp]
push	edx
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+420], eax
push	0
mov	edx, DWORD PTR _sortOrder$[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _onError$[ebp]
push	eax
mov	ecx, DWORD PTR _pList$[ebp]
push	ecx
push	0
push	0
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CreateIndex
add	esp, 40					
mov	DWORD PTR _p$1[ebp], eax
cmp	DWORD PTR _p$1[ebp], 0
je	SHORT $LN2@sqlite3Add
mov	eax, DWORD PTR _p$1[ebp]
mov	ecx, DWORD PTR [eax+56]
and	ecx, -4					
or	ecx, 2
mov	edx, DWORD PTR _p$1[ebp]
mov	DWORD PTR [edx+56], ecx
cmp	DWORD PTR _v$2[ebp], 0
je	SHORT $LN2@sqlite3Add
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+420]
push	ecx
mov	edx, DWORD PTR _v$2[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	DWORD PTR _pList$[ebp], 0
mov	eax, DWORD PTR _pList$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddNotNull PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Add
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	eax, 1
jge	SHORT $LN2@sqlite3Add
jmp	SHORT $LN3@sqlite3Add
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
sub	edx, 1
imul	eax, edx, 24
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	cl, BYTE PTR _onError$[ebp]
mov	BYTE PTR [edx+eax+20], cl
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3AddColumn PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN9@sqlite3Add
jmp	$LN10@sqlite3Add
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
add	edx, 1
mov	eax, 4
shl	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
cmp	edx, DWORD PTR [ecx+eax+88]
jle	SHORT $LN8@sqlite3Add
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	OFFSET $SG106365
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$LN10@sqlite3Add
mov	edx, DWORD PTR _pName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN7@sqlite3Add
jmp	$LN10@sqlite3Add
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN6@sqlite3Add
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$[ebp], eax
jge	SHORT $LN4@sqlite3Add
mov	ecx, DWORD PTR _z$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3UpperToLower[edx]
imul	ecx, DWORD PTR _i$[ebp], 24
mov	edx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [edx+ecx]
movzx	edx, BYTE PTR [ecx]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[edx]
cmp	eax, ecx
jne	SHORT $LN3@sqlite3Add
imul	edx, DWORD PTR _i$[ebp], 24
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx]
add	edx, 1
push	edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, 1
push	eax
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN3@sqlite3Add
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
push	OFFSET $SG106373
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN10@sqlite3Add
jmp	$LN5@sqlite3Add
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
and	eax, 7
jne	SHORT $LN2@sqlite3Add
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+38]
add	edx, 8
imul	eax, edx, 24
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _aNew$1[ebp], eax
cmp	DWORD PTR _aNew$1[ebp], 0
jne	SHORT $LN1@sqlite3Add
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN10@sqlite3Add
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _aNew$1[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+38]
imul	ecx, eax, 24
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pCol$[ebp], ecx
push	24					
push	0
mov	eax, DWORD PTR _pCol$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pCol$[ebp]
mov	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pCol$[ebp]
mov	BYTE PTR [eax+21], 98			
mov	ecx, DWORD PTR _pCol$[ebp]
mov	BYTE PTR [ecx+22], 1
mov	edx, DWORD PTR _p$[ebp]
mov	ax, WORD PTR [edx+38]
add	ax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+38], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3StartTable PROC
push	ebp
mov	ebp, esp
sub	esp, 76					
mov	DWORD PTR _zName$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
lea	edx, DWORD PTR _pName$[ebp]
push	edx
mov	eax, DWORD PTR _pName2$[ebp]
push	eax
mov	ecx, DWORD PTR _pName1$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TwoPartName
add	esp, 16					
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN27@sqlite3Sta
jmp	$LN28@sqlite3Sta
mov	eax, 1
test	eax, eax
je	SHORT $LN26@sqlite3Sta
cmp	DWORD PTR _isTemp$[ebp], 0
je	SHORT $LN26@sqlite3Sta
mov	ecx, DWORD PTR _pName2$[ebp]
cmp	DWORD PTR [ecx+4], 0
jbe	SHORT $LN26@sqlite3Sta
cmp	DWORD PTR _iDb$[ebp], 1
je	SHORT $LN26@sqlite3Sta
push	OFFSET $SG106307
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$LN28@sqlite3Sta
mov	eax, 1
test	eax, eax
je	SHORT $LN25@sqlite3Sta
cmp	DWORD PTR _isTemp$[ebp], 0
je	SHORT $LN25@sqlite3Sta
mov	DWORD PTR _iDb$[ebp], 1
mov	ecx, DWORD PTR _pName$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+496], edx
mov	DWORD PTR [ecx+500], eax
mov	edx, DWORD PTR _pName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zName$[ebp], eax
cmp	DWORD PTR _zName$[ebp], 0
jne	SHORT $LN24@sqlite3Sta
jmp	$LN28@sqlite3Sta
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CheckObjectName
add	esp, 8
test	eax, eax
je	SHORT $LN23@sqlite3Sta
jmp	$begin_table_error$34
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+136]
cmp	ecx, 1
jne	SHORT $LN22@sqlite3Sta
mov	DWORD PTR _isTemp$[ebp], 1
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx]
mov	DWORD PTR _zDb$6[ebp], edx
mov	eax, 1
test	eax, eax
je	SHORT $LN30@sqlite3Sta
cmp	DWORD PTR _isTemp$[ebp], 1
jne	SHORT $LN30@sqlite3Sta
mov	DWORD PTR tv134[ebp], OFFSET $SG106317
jmp	SHORT $LN31@sqlite3Sta
mov	DWORD PTR tv134[ebp], OFFSET $SG106318
mov	ecx, DWORD PTR _zDb$6[ebp]
push	ecx
push	0
mov	edx, DWORD PTR tv134[ebp]
push	edx
push	18					
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN21@sqlite3Sta
jmp	$begin_table_error$34
cmp	DWORD PTR _isView$[ebp], 0
je	SHORT $LN20@sqlite3Sta
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN19@sqlite3Sta
cmp	DWORD PTR _isTemp$[ebp], 0
je	SHORT $LN19@sqlite3Sta
mov	DWORD PTR _code$7[ebp], 6
jmp	SHORT $LN18@sqlite3Sta
mov	DWORD PTR _code$7[ebp], 8
jmp	SHORT $LN17@sqlite3Sta
mov	edx, 1
test	edx, edx
je	SHORT $LN16@sqlite3Sta
cmp	DWORD PTR _isTemp$[ebp], 0
je	SHORT $LN16@sqlite3Sta
mov	DWORD PTR _code$7[ebp], 4
jmp	SHORT $LN17@sqlite3Sta
mov	DWORD PTR _code$7[ebp], 2
cmp	DWORD PTR _isVirtual$[ebp], 0
jne	SHORT $LN14@sqlite3Sta
mov	eax, DWORD PTR _zDb$6[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _code$7[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN14@sqlite3Sta
jmp	$begin_table_error$34
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+451]
test	edx, edx
jne	$LN13@sqlite3Sta
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax]
mov	DWORD PTR _zDb$5[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN12@sqlite3Sta
jmp	$begin_table_error$34
mov	edx, DWORD PTR _zDb$5[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTable$[ebp], eax
cmp	DWORD PTR _pTable$[ebp], 0
je	SHORT $LN11@sqlite3Sta
cmp	DWORD PTR _noErr$[ebp], 0
jne	SHORT $LN10@sqlite3Sta
mov	edx, DWORD PTR _pName$[ebp]
push	edx
push	OFFSET $SG106331
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	SHORT $LN9@sqlite3Sta
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeVerifySchema
add	esp, 8
jmp	$begin_table_error$34
mov	eax, DWORD PTR _zDb$5[ebp]
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindIndex
add	esp, 12					
test	eax, eax
je	SHORT $LN13@sqlite3Sta
mov	eax, DWORD PTR _zName$[ebp]
push	eax
push	OFFSET $SG106335
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$begin_table_error$34
push	76					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTable$[ebp], eax
cmp	DWORD PTR _pTable$[ebp], 0
jne	SHORT $LN7@sqlite3Sta
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+12], 7
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+64]
add	eax, 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+64], eax
jmp	$begin_table_error$34
mov	edx, DWORD PTR _pTable$[ebp]
mov	eax, DWORD PTR _zName$[ebp]
mov	DWORD PTR [edx], eax
or	ecx, -1
mov	edx, DWORD PTR _pTable$[ebp]
mov	WORD PTR [edx+36], cx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR _pTable$[ebp]
mov	edx, DWORD PTR [edx+eax+12]
mov	DWORD PTR [ecx+68], edx
mov	eax, 1
mov	ecx, DWORD PTR _pTable$[ebp]
mov	WORD PTR [ecx+40], ax
mov	edx, 200				
mov	eax, DWORD PTR _pTable$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _pTable$[ebp]
mov	DWORD PTR [ecx+484], edx
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+18]
test	ecx, ecx
jne	SHORT $LN6@sqlite3Sta
push	OFFSET $SG106341
mov	edx, DWORD PTR _zName$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN6@sqlite3Sta
mov	eax, DWORD PTR _pTable$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	edx, DWORD PTR _pTable$[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
jne	$LN5@sqlite3Sta
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	$LN5@sqlite3Sta
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginWriteOperation
add	esp, 12					
cmp	DWORD PTR _isVirtual$[ebp], 0
je	SHORT $LN4@sqlite3Sta
push	141					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR tv225[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv225[ebp]
mov	DWORD PTR [edx+72], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv225[ebp]
mov	DWORD PTR [ecx+384], edx
mov	eax, DWORD PTR tv225[ebp]
mov	DWORD PTR _reg1$3[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv229[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv229[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR tv229[ebp]
mov	DWORD PTR [edx+388], eax
mov	ecx, DWORD PTR tv229[ebp]
mov	DWORD PTR _reg2$4[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv232[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv232[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv232[ebp]
mov	DWORD PTR _reg3$8[ebp], eax
push	2
mov	ecx, DWORD PTR _reg3$8[ebp]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	50					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeUsesBtree
add	esp, 8
mov	eax, DWORD PTR _reg3$8[ebp]
push	eax
push	44					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _j1$1[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, 32768				
je	SHORT $LN32@sqlite3Sta
mov	DWORD PTR tv247[ebp], 1
jmp	SHORT $LN33@sqlite3Sta
mov	DWORD PTR tv247[ebp], 4
mov	ecx, DWORD PTR tv247[ebp]
mov	DWORD PTR _fileFormat$2[ebp], ecx
mov	edx, DWORD PTR _reg3$8[ebp]
push	edx
mov	eax, DWORD PTR _fileFormat$2[ebp]
push	eax
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _reg3$8[ebp]
push	edx
push	2
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	51					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _reg3$8[ebp]
push	edx
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
movzx	edx, BYTE PTR [ecx+77]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _reg3$8[ebp]
push	ecx
push	5
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	51					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	ecx, DWORD PTR _j1$1[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
cmp	DWORD PTR _isView$[ebp], 0
jne	SHORT $LN2@sqlite3Sta
cmp	DWORD PTR _isVirtual$[ebp], 0
je	SHORT $LN3@sqlite3Sta
mov	eax, DWORD PTR _reg2$4[ebp]
push	eax
push	0
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN1@sqlite3Sta
mov	edx, DWORD PTR _reg2$4[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	118					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+416], eax
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3OpenMasterTable
add	esp, 8
mov	edx, DWORD PTR _reg1$3[ebp]
push	edx
push	0
push	69					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _reg3$8[ebp]
push	ecx
push	0
push	28					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _reg1$3[ebp]
push	eax
mov	ecx, DWORD PTR _reg3$8[ebp]
push	ecx
push	0
push	70					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
push	58					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp0
add	esp, 8
jmp	SHORT $LN28@sqlite3Sta
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ColumnOfIndex PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Col
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pIdx$[ebp]
movzx	edx, WORD PTR [ecx+52]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN2@sqlite3Col
movsx	eax, WORD PTR _iCol$[ebp]
mov	ecx, DWORD PTR _pIdx$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	ecx, DWORD PTR _i$[ebp]
movsx	edx, WORD PTR [edx+ecx*2]
cmp	eax, edx
jne	SHORT $LN1@sqlite3Col
mov	ax, WORD PTR _i$[ebp]
jmp	SHORT $LN5@sqlite3Col
jmp	SHORT $LN3@sqlite3Col
or	eax, -1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PrimaryKeyIndex PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@sqlite3Pri
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Pri
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
and	edx, 3
cmp	edx, 2
je	SHORT $LN1@sqlite3Pri
jmp	SHORT $LN2@sqlite3Pri
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OpenMasterTable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN4@sqlite3Ope
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN4@sqlite3Ope
mov	DWORD PTR tv68[ebp], OFFSET $SG106218
jmp	SHORT $LN5@sqlite3Ope
mov	DWORD PTR tv68[ebp], OFFSET $SG106219
mov	edx, DWORD PTR tv68[ebp]
push	edx
push	1
push	1
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3TableLock
add	esp, 20					
push	5
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	1
push	0
push	53					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+68], 0
jne	SHORT $LN2@sqlite3Ope
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+68], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ResultSetOfSelect PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _savedFlags$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, -33				
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], edx
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
or	edx, 64					
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], edx
push	0
mov	ecx, DWORD PTR _pSelect$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3SelectPrep
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
je	SHORT $LN4@sqlite3Res
xor	eax, eax
jmp	$LN6@sqlite3Res
mov	ecx, DWORD PTR _pSelect$[ebp]
cmp	DWORD PTR [ecx+52], 0
je	SHORT $LN3@sqlite3Res
mov	edx, DWORD PTR _pSelect$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _pSelect$[ebp], eax
jmp	SHORT $LN4@sqlite3Res
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _savedFlags$[ebp]
mov	DWORD PTR [ecx+24], edx
push	76					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN2@sqlite3Res
xor	eax, eax
jmp	$LN6@sqlite3Res
mov	ecx, 1
mov	edx, DWORD PTR _pTab$[ebp]
mov	WORD PTR [edx+40], cx
mov	eax, DWORD PTR _pTab$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, 200				
mov	edx, DWORD PTR _pTab$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pTab$[ebp]
add	eax, 4
push	eax
mov	ecx, DWORD PTR _pTab$[ebp]
add	ecx, 38					
push	ecx
mov	edx, DWORD PTR _pSelect$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_selectColumnsFromExprList
add	esp, 16					
mov	edx, DWORD PTR _pSelect$[ebp]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_selectAddColumnTypeAndCollation
add	esp, 12					
or	edx, -1
mov	eax, DWORD PTR _pTab$[ebp]
mov	WORD PTR [eax+36], dx
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN1@sqlite3Res
mov	eax, DWORD PTR _pTab$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTable
add	esp, 8
xor	eax, eax
jmp	SHORT $LN6@sqlite3Res
mov	eax, DWORD PTR _pTab$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CommitInternalChanges PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -3					
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
pop	ebp
ret	0
ENDP
_sqlite3BeginParse PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pParse$[ebp]
mov	cl, BYTE PTR _explainFlag$[ebp]
mov	BYTE PTR [eax+450], cl
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+440], 0
pop	ebp
ret	0
ENDP
_sqlite3CollapseDatabaseArray PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _j$[ebp], 2
mov	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN6@sqlite3Col
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN4@sqlite3Col
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
add	ecx, DWORD PTR [edx+16]
mov	DWORD PTR _pDb$1[ebp], ecx
mov	eax, DWORD PTR _pDb$1[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN3@sqlite3Col
mov	ecx, DWORD PTR _pDb$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pDb$1[ebp]
mov	DWORD PTR [ecx], 0
jmp	SHORT $LN5@sqlite3Col
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR _i$[ebp]
jge	SHORT $LN2@sqlite3Col
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
add	edx, eax
mov	eax, DWORD PTR _j$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [ecx+16]
add	ecx, eax
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx], eax
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+4], eax
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+8], eax
mov	edx, DWORD PTR [edx+12]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _j$[ebp]
add	eax, 1
mov	DWORD PTR _j$[ebp], eax
jmp	$LN5@sqlite3Col
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
sub	edx, DWORD PTR _j$[ebp]
shl	edx, 4
push	edx
push	0
mov	eax, DWORD PTR _j$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
push	eax
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _j$[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+20], 2
jg	SHORT $LN7@sqlite3Col
mov	edx, DWORD PTR _db$[ebp]
add	edx, 448				
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+16], edx
je	SHORT $LN7@sqlite3Col
push	32					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _db$[ebp]
add	eax, 448				
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
add	ecx, 448				
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+16], ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ResetOneSchema PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$[ebp], eax
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3SchemaClear
add	esp, 4
cmp	DWORD PTR _iDb$[ebp], 1
je	SHORT $LN2@sqlite3Res
mov	ecx, 16					
shl	ecx, 0
mov	edx, DWORD PTR _db$[ebp]
add	ecx, DWORD PTR [edx+16]
mov	DWORD PTR _pDb$[ebp], ecx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3SchemaClear
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ResetAllSchemasOfConnection PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Res
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN2@sqlite3Res
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
add	ecx, DWORD PTR [edx+16]
mov	DWORD PTR _pDb$1[ebp], ecx
mov	eax, DWORD PTR _pDb$1[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN1@sqlite3Res
mov	ecx, DWORD PTR _pDb$1[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3SchemaClear
add	esp, 4
jmp	SHORT $LN3@sqlite3Res
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, -3					
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VtabUnlockList
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CollapseDatabaseArray
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Pragma PROC
push	ebp
mov	ebp, esp
sub	esp, 584				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _zLeft$[ebp], 0
mov	DWORD PTR _zRight$[ebp], 0
mov	DWORD PTR _zDb$[ebp], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
jne	SHORT $LN272@sqlite3Pra
jmp	$LN273@sqlite3Pra
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeRunOnlyOnce
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 2
lea	edx, DWORD PTR _pId$[ebp]
push	edx
mov	eax, DWORD PTR _pId2$[ebp]
push	eax
mov	ecx, DWORD PTR _pId1$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TwoPartName
add	esp, 16					
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN271@sqlite3Pra
jmp	$LN273@sqlite3Pra
mov	eax, DWORD PTR _iDb$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
add	eax, DWORD PTR [ecx+16]
mov	DWORD PTR _pDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 1
jne	SHORT $LN270@sqlite3Pra
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3OpenTempDatabase
add	esp, 4
test	eax, eax
je	SHORT $LN270@sqlite3Pra
jmp	$LN273@sqlite3Pra
mov	eax, DWORD PTR _pId$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zLeft$[ebp], eax
cmp	DWORD PTR _zLeft$[ebp], 0
jne	SHORT $LN269@sqlite3Pra
jmp	$LN273@sqlite3Pra
cmp	DWORD PTR _minusFlag$[ebp], 0
je	SHORT $LN268@sqlite3Pra
mov	edx, DWORD PTR _pValue$[ebp]
push	edx
push	OFFSET $SG112103
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zRight$[ebp], eax
jmp	SHORT $LN267@sqlite3Pra
mov	ecx, DWORD PTR _pValue$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3NameFromToken
add	esp, 8
mov	DWORD PTR _zRight$[ebp], eax
mov	eax, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [eax+4], 0
jbe	SHORT $LN275@sqlite3Pra
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR tv130[ebp], edx
jmp	SHORT $LN276@sqlite3Pra
mov	DWORD PTR tv130[ebp], 0
mov	eax, DWORD PTR tv130[ebp]
mov	DWORD PTR _zDb$[ebp], eax
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
mov	eax, DWORD PTR _zLeft$[ebp]
push	eax
push	19					
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3AuthCheck
add	esp, 20					
test	eax, eax
je	SHORT $LN266@sqlite3Pra
jmp	$pragma_out$311
mov	edx, 4
imul	eax, edx, 0
mov	DWORD PTR _aFcntl$[ebp+eax], 0
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _zLeft$[ebp]
mov	DWORD PTR _aFcntl$[ebp+ecx], edx
mov	eax, 4
shl	eax, 1
mov	ecx, DWORD PTR _zRight$[ebp]
mov	DWORD PTR _aFcntl$[ebp+eax], ecx
mov	edx, 4
imul	eax, edx, 3
mov	DWORD PTR _aFcntl$[ebp+eax], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+444], 0
lea	edx, DWORD PTR _aFcntl$[ebp]
push	edx
push	14					
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_file_control
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN265@sqlite3Pra
mov	edx, 4
imul	eax, edx, 0
cmp	DWORD PTR _aFcntl$[ebp+eax], 0
je	$LN264@sqlite3Pra
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv158[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv158[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv158[ebp]
mov	DWORD PTR _mem$18[ebp], edx
push	0
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _aFcntl$[ebp+ecx]
push	edx
push	0
mov	eax, DWORD PTR _mem$18[ebp]
push	eax
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112113
push	0
push	0
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	1
mov	ecx, DWORD PTR _mem$18[ebp]
push	ecx
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _aFcntl$[ebp+ecx]
push	edx
call	_sqlite3_free
add	esp, 4
jmp	$pragma_out$311
cmp	DWORD PTR _rc$[ebp], 12			
je	SHORT $LN263@sqlite3Pra
mov	eax, 4
imul	ecx, eax, 0
cmp	DWORD PTR _aFcntl$[ebp+ecx], 0
je	SHORT $LN262@sqlite3Pra
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _aFcntl$[ebp+eax]
push	ecx
push	OFFSET $SG112116
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _aFcntl$[ebp+ecx]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+64]
add	ecx, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+64], ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [eax+12], ecx
jmp	$pragma_out$311
mov	DWORD PTR _lwr$[ebp], 0
mov	DWORD PTR _upr$[ebp], 54		
mov	edx, DWORD PTR _lwr$[ebp]
cmp	edx, DWORD PTR _upr$[ebp]
jg	SHORT $LN260@sqlite3Pra
mov	eax, DWORD PTR _lwr$[ebp]
add	eax, DWORD PTR _upr$[ebp]
cdq
sub	eax, edx
sar	eax, 1
mov	DWORD PTR _mid$[ebp], eax
imul	eax, DWORD PTR _mid$[ebp], 12
mov	ecx, DWORD PTR _aPragmaNames[eax]
push	ecx
mov	edx, DWORD PTR _zLeft$[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN259@sqlite3Pra
jmp	SHORT $LN260@sqlite3Pra
cmp	DWORD PTR _rc$[ebp], 0
jge	SHORT $LN258@sqlite3Pra
mov	eax, DWORD PTR _mid$[ebp]
sub	eax, 1
mov	DWORD PTR _upr$[ebp], eax
jmp	SHORT $LN257@sqlite3Pra
mov	ecx, DWORD PTR _mid$[ebp]
add	ecx, 1
mov	DWORD PTR _lwr$[ebp], ecx
jmp	SHORT $LN261@sqlite3Pra
mov	edx, DWORD PTR _lwr$[ebp]
cmp	edx, DWORD PTR _upr$[ebp]
jle	SHORT $LN256@sqlite3Pra
jmp	$pragma_out$311
imul	eax, DWORD PTR _mid$[ebp], 12
movzx	ecx, BYTE PTR _aPragmaNames[eax+5]
and	ecx, 1
je	SHORT $LN255@sqlite3Pra
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN255@sqlite3Pra
jmp	$pragma_out$311
imul	eax, DWORD PTR _mid$[ebp], 12
movzx	ecx, BYTE PTR _aPragmaNames[eax+4]
mov	DWORD PTR tv226[ebp], ecx
cmp	DWORD PTR tv226[ebp], 34		
ja	$LN4@sqlite3Pra
mov	edx, DWORD PTR tv226[ebp]
jmp	DWORD PTR $LN309@sqlite3Pra[edx*4]
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeUsesBtree
add	esp, 8
cmp	DWORD PTR _zRight$[ebp], 0
jne	$LN250@sqlite3Pra
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112139
push	0
push	0
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 2
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], edx
mov	ecx, DWORD PTR ?iLn@?BA@??sqlite3Pragma@@9@9
push	ecx
push	OFFSET ?getCacheSize@?BA@??sqlite3Pragma@@9@9
push	9
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOpList
add	esp, 16					
mov	DWORD PTR _addr$40[ebp], eax
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _addr$40[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _addr$40[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP1
add	esp, 12					
push	2000					
mov	eax, DWORD PTR _addr$40[ebp]
add	eax, 6
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP1
add	esp, 12					
jmp	$LN249@sqlite3Pra
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3Atoi
add	esp, 4
push	eax
call	_sqlite3AbsInt32
add	esp, 4
mov	DWORD PTR _size$32[ebp], eax
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3BeginWriteOperation
add	esp, 12					
push	1
mov	edx, DWORD PTR _size$32[ebp]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
push	3
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	51					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _size$32[ebp]
mov	DWORD PTR [ecx+80], edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+80]
push	edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeSetCacheSize
add	esp, 8
jmp	$pragma_out$311
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$37[ebp], eax
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN247@sqlite3Pra
cmp	DWORD PTR _pBt$37[ebp], 0
je	SHORT $LN277@sqlite3Pra
mov	ecx, DWORD PTR _pBt$37[ebp]
push	ecx
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR tv284[ebp], eax
jmp	SHORT $LN278@sqlite3Pra
mov	DWORD PTR tv284[ebp], 0
mov	edx, DWORD PTR tv284[ebp]
mov	DWORD PTR _size$7[ebp], edx
mov	eax, DWORD PTR _size$7[ebp]
cdq
push	edx
push	eax
push	OFFSET $SG112149
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_returnSingleInt
add	esp, 16					
jmp	SHORT $LN246@sqlite3Pra
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3Atoi
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+72], eax
push	0
push	-1
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+72]
push	ecx
mov	edx, DWORD PTR _pBt$37[ebp]
push	edx
call	_sqlite3BtreeSetPageSize
add	esp, 16					
cmp	eax, 7
jne	SHORT $LN246@sqlite3Pra
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
jmp	$pragma_out$311
mov	ecx, DWORD PTR _pDb$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pBt$5[ebp], edx
mov	DWORD PTR _b$72[ebp], -1
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN243@sqlite3Pra
push	0
mov	eax, DWORD PTR _zRight$[ebp]
push	eax
call	_sqlite3GetBoolean
add	esp, 8
movzx	ecx, al
mov	DWORD PTR _b$72[ebp], ecx
mov	edx, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [edx+4], 0
jne	SHORT $LN242@sqlite3Pra
cmp	DWORD PTR _b$72[ebp], 0
jl	SHORT $LN242@sqlite3Pra
mov	DWORD PTR _ii$55[ebp], 0
jmp	SHORT $LN241@sqlite3Pra
mov	eax, DWORD PTR _ii$55[ebp]
add	eax, 1
mov	DWORD PTR _ii$55[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _ii$55[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN242@sqlite3Pra
mov	eax, DWORD PTR _b$72[ebp]
push	eax
mov	ecx, DWORD PTR _ii$55[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreeSecureDelete
add	esp, 8
jmp	SHORT $LN240@sqlite3Pra
mov	edx, DWORD PTR _b$72[ebp]
push	edx
mov	eax, DWORD PTR _pBt$5[ebp]
push	eax
call	_sqlite3BtreeSecureDelete
add	esp, 8
mov	DWORD PTR _b$72[ebp], eax
mov	eax, DWORD PTR _b$72[ebp]
cdq
push	edx
push	eax
push	OFFSET $SG112162
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_returnSingleInt
add	esp, 16					
jmp	$pragma_out$311
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv329[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv329[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv329[ebp]
mov	DWORD PTR _iReg$35[ebp], edx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zLeft$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[eax]
cmp	ecx, 112				
jne	SHORT $LN237@sqlite3Pra
mov	edx, DWORD PTR _iReg$35[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	153					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN236@sqlite3Pra
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3Atoi
add	esp, 4
push	eax
call	_sqlite3AbsInt32
add	esp, 4
push	eax
mov	eax, DWORD PTR _iReg$35[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	154					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	1
mov	eax, DWORD PTR _iReg$35[ebp]
push	eax
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	-1
mov	eax, DWORD PTR _zLeft$[ebp]
push	eax
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	$pragma_out$311
mov	DWORD PTR _zRet$25[ebp], OFFSET $SG112171
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_getLockingMode
add	esp, 4
mov	DWORD PTR _eMode$81[ebp], eax
mov	eax, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN234@sqlite3Pra
cmp	DWORD PTR _eMode$81[ebp], -1
jne	SHORT $LN234@sqlite3Pra
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+65]
mov	DWORD PTR _eMode$81[ebp], edx
jmp	$LN233@sqlite3Pra
mov	eax, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN232@sqlite3Pra
mov	DWORD PTR _ii$53[ebp], 2
jmp	SHORT $LN231@sqlite3Pra
mov	ecx, DWORD PTR _ii$53[ebp]
add	ecx, 1
mov	DWORD PTR _ii$53[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _ii$53[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN229@sqlite3Pra
mov	ecx, DWORD PTR _ii$53[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$50[ebp], eax
mov	edx, DWORD PTR _eMode$81[ebp]
push	edx
mov	eax, DWORD PTR _pPager$50[ebp]
push	eax
call	_sqlite3PagerLockingMode
add	esp, 8
jmp	SHORT $LN230@sqlite3Pra
mov	ecx, DWORD PTR _db$[ebp]
mov	dl, BYTE PTR _eMode$81[ebp]
mov	BYTE PTR [ecx+65], dl
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$50[ebp], eax
mov	edx, DWORD PTR _eMode$81[ebp]
push	edx
mov	eax, DWORD PTR _pPager$50[ebp]
push	eax
call	_sqlite3PagerLockingMode
add	esp, 8
mov	DWORD PTR _eMode$81[ebp], eax
cmp	DWORD PTR _eMode$81[ebp], 1
jne	SHORT $LN228@sqlite3Pra
mov	DWORD PTR _zRet$25[ebp], OFFSET $SG112185
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112187
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
mov	eax, DWORD PTR _zRet$25[ebp]
push	eax
push	0
push	1
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$pragma_out$311
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112192
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN226@sqlite3Pra
mov	DWORD PTR _eMode$86[ebp], -1
jmp	SHORT $LN225@sqlite3Pra
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$3[ebp], eax
mov	DWORD PTR _eMode$86[ebp], 0
jmp	SHORT $LN224@sqlite3Pra
mov	eax, DWORD PTR _eMode$86[ebp]
add	eax, 1
mov	DWORD PTR _eMode$86[ebp], eax
mov	ecx, DWORD PTR _eMode$86[ebp]
push	ecx
call	_sqlite3JournalModename
add	esp, 4
mov	DWORD PTR _zMode$39[ebp], eax
cmp	DWORD PTR _zMode$39[ebp], 0
je	SHORT $LN222@sqlite3Pra
mov	edx, DWORD PTR _n$3[ebp]
push	edx
mov	eax, DWORD PTR _zMode$39[ebp]
push	eax
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN221@sqlite3Pra
jmp	SHORT $LN222@sqlite3Pra
jmp	SHORT $LN223@sqlite3Pra
cmp	DWORD PTR _zMode$39[ebp], 0
jne	SHORT $LN225@sqlite3Pra
mov	DWORD PTR _eMode$86[ebp], -1
cmp	DWORD PTR _eMode$86[ebp], -1
jne	SHORT $LN219@sqlite3Pra
mov	edx, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [edx+4], 0
jne	SHORT $LN219@sqlite3Pra
mov	DWORD PTR _iDb$[ebp], 0
mov	eax, DWORD PTR _pId2$[ebp]
mov	DWORD PTR [eax+4], 1
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+20]
sub	edx, 1
mov	DWORD PTR _ii$82[ebp], edx
jmp	SHORT $LN218@sqlite3Pra
mov	eax, DWORD PTR _ii$82[ebp]
sub	eax, 1
mov	DWORD PTR _ii$82[ebp], eax
cmp	DWORD PTR _ii$82[ebp], 0
jl	SHORT $LN216@sqlite3Pra
mov	ecx, DWORD PTR _ii$82[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
cmp	DWORD PTR [eax+ecx+4], 0
je	SHORT $LN215@sqlite3Pra
mov	ecx, DWORD PTR _ii$82[ebp]
cmp	ecx, DWORD PTR _iDb$[ebp]
je	SHORT $LN214@sqlite3Pra
mov	edx, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [edx+4], 0
jne	SHORT $LN215@sqlite3Pra
mov	eax, DWORD PTR _ii$82[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeUsesBtree
add	esp, 8
mov	edx, DWORD PTR _eMode$86[ebp]
push	edx
push	1
mov	eax, DWORD PTR _ii$82[ebp]
push	eax
push	12					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
jmp	SHORT $LN217@sqlite3Pra
push	1
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$pragma_out$311
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$10[ebp], eax
mov	DWORD PTR _iLimit$71[ebp], -2		
mov	DWORD PTR _iLimit$71[ebp+4], -1
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN212@sqlite3Pra
push	1
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	eax, DWORD PTR _iLimit$71[ebp]
push	eax
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3Atoi64
add	esp, 16					
cmp	DWORD PTR _iLimit$71[ebp+4], -1
jg	SHORT $LN212@sqlite3Pra
jl	SHORT $LN306@sqlite3Pra
cmp	DWORD PTR _iLimit$71[ebp], -1
jae	SHORT $LN212@sqlite3Pra
mov	DWORD PTR _iLimit$71[ebp], -1
mov	DWORD PTR _iLimit$71[ebp+4], -1
mov	edx, DWORD PTR _iLimit$71[ebp+4]
push	edx
mov	eax, DWORD PTR _iLimit$71[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$10[ebp]
push	ecx
call	_sqlite3PagerJournalSizeLimit
add	esp, 12					
mov	DWORD PTR _iLimit$71[ebp], eax
mov	DWORD PTR _iLimit$71[ebp+4], edx
mov	edx, DWORD PTR _iLimit$71[ebp+4]
push	edx
mov	eax, DWORD PTR _iLimit$71[ebp]
push	eax
push	OFFSET $SG112213
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_returnSingleInt
add	esp, 16					
jmp	$pragma_out$311
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$30[ebp], eax
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN209@sqlite3Pra
mov	ecx, DWORD PTR _pBt$30[ebp]
push	ecx
call	_sqlite3BtreeGetAutoVacuum
add	esp, 4
cdq
push	edx
push	eax
push	OFFSET $SG112218
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_returnSingleInt
add	esp, 16					
jmp	$LN208@sqlite3Pra
mov	eax, DWORD PTR _zRight$[ebp]
push	eax
call	_getAutoVacuum
add	esp, 4
mov	DWORD PTR _eAuto$66[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	dl, BYTE PTR _eAuto$66[ebp]
mov	BYTE PTR [ecx+66], dl
mov	eax, DWORD PTR _eAuto$66[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$30[ebp]
push	ecx
call	_sqlite3BtreeSetAutoVacuum
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN208@sqlite3Pra
cmp	DWORD PTR _eAuto$66[ebp], 1
je	SHORT $LN206@sqlite3Pra
cmp	DWORD PTR _eAuto$66[ebp], 2
jne	$LN208@sqlite3Pra
mov	edx, DWORD PTR ?iLn@?DF@??sqlite3Pragma@@9@9
push	edx
push	OFFSET ?setMeta6@?DF@??sqlite3Pragma@@9@9
push	6
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOpList
add	esp, 16					
mov	DWORD PTR _iAddr$80[ebp], eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _iAddr$80[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _iAddr$80[ebp]
add	edx, 1
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	ecx, DWORD PTR _iAddr$80[ebp]
add	ecx, 4
push	ecx
mov	edx, DWORD PTR _iAddr$80[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP2
add	esp, 12					
mov	ecx, DWORD PTR _eAuto$66[ebp]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _iAddr$80[ebp]
add	edx, 4
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _iAddr$80[ebp]
add	edx, 5
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeUsesBtree
add	esp, 8
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN203@sqlite3Pra
lea	eax, DWORD PTR _iLimit$42[ebp]
push	eax
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3GetInt32
add	esp, 8
test	eax, eax
je	SHORT $LN203@sqlite3Pra
cmp	DWORD PTR _iLimit$42[ebp], 0
jg	SHORT $LN204@sqlite3Pra
mov	DWORD PTR _iLimit$42[ebp], 2147483647	
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3BeginWriteOperation
add	esp, 12					
push	1
mov	ecx, DWORD PTR _iLimit$42[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	138					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$23[ebp], eax
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
push	-1
push	1
push	37					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addr$23[ebp]
push	ecx
push	1
push	134					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addr$23[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN201@sqlite3Pra
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	eax, DWORD PTR [eax+80]
cdq
push	edx
push	eax
push	OFFSET $SG112239
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_returnSingleInt
add	esp, 16					
jmp	SHORT $LN200@sqlite3Pra
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3Atoi
add	esp, 4
mov	DWORD PTR _size$15[ebp], eax
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR _size$15[ebp]
mov	DWORD PTR [ecx+80], edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+80]
push	edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeSetCacheSize
add	esp, 8
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	$LN198@sqlite3Pra
push	1
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	eax, DWORD PTR _sz$77[ebp]
push	eax
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3Atoi64
add	esp, 16					
cmp	DWORD PTR _sz$77[ebp+4], 0
jg	SHORT $LN197@sqlite3Pra
jl	SHORT $LN307@sqlite3Pra
cmp	DWORD PTR _sz$77[ebp], 0
jae	SHORT $LN197@sqlite3Pra
mov	edx, DWORD PTR _sqlite3Config+176
mov	DWORD PTR _sz$77[ebp], edx
mov	eax, DWORD PTR _sqlite3Config+180
mov	DWORD PTR _sz$77[ebp+4], eax
mov	ecx, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [ecx+4], 0
jne	SHORT $LN196@sqlite3Pra
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _sz$77[ebp]
mov	DWORD PTR [edx+40], eax
mov	ecx, DWORD PTR _sz$77[ebp+4]
mov	DWORD PTR [edx+44], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+20]
sub	eax, 1
mov	DWORD PTR _ii$78[ebp], eax
jmp	SHORT $LN195@sqlite3Pra
mov	ecx, DWORD PTR _ii$78[ebp]
sub	ecx, 1
mov	DWORD PTR _ii$78[ebp], ecx
cmp	DWORD PTR _ii$78[ebp], 0
jl	SHORT $LN198@sqlite3Pra
mov	edx, DWORD PTR _ii$78[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
cmp	DWORD PTR [ecx+edx+4], 0
je	SHORT $LN192@sqlite3Pra
mov	edx, DWORD PTR _ii$78[ebp]
cmp	edx, DWORD PTR _iDb$[ebp]
je	SHORT $LN191@sqlite3Pra
mov	eax, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN192@sqlite3Pra
mov	ecx, DWORD PTR _sz$77[ebp+4]
push	ecx
mov	edx, DWORD PTR _sz$77[ebp]
push	edx
mov	eax, DWORD PTR _ii$78[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeSetMmapLimit
add	esp, 12					
jmp	SHORT $LN194@sqlite3Pra
mov	DWORD PTR _sz$77[ebp], -1
mov	DWORD PTR _sz$77[ebp+4], -1
lea	ecx, DWORD PTR _sz$77[ebp]
push	ecx
push	18					
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_file_control
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN190@sqlite3Pra
mov	ecx, DWORD PTR _sz$77[ebp+4]
push	ecx
mov	edx, DWORD PTR _sz$77[ebp]
push	edx
push	OFFSET $SG112255
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_returnSingleInt
add	esp, 16					
jmp	SHORT $LN189@sqlite3Pra
cmp	DWORD PTR _rc$[ebp], 12			
je	SHORT $LN189@sqlite3Pra
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+64]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+64], edx
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _rc$[ebp]
mov	DWORD PTR [ecx+12], edx
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN186@sqlite3Pra
mov	eax, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [eax+63]
cdq
push	edx
push	eax
push	OFFSET $SG112260
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_returnSingleInt
add	esp, 16					
jmp	SHORT $LN185@sqlite3Pra
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_changeTempStorage
add	esp, 8
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN183@sqlite3Pra
cmp	DWORD PTR _sqlite3_temp_directory, 0
je	SHORT $LN182@sqlite3Pra
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112266
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
mov	eax, DWORD PTR _sqlite3_temp_directory
push	eax
push	0
push	1
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN181@sqlite3Pra
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zRight$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	SHORT $LN180@sqlite3Pra
lea	ecx, DWORD PTR _res$2[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN178@sqlite3Pra
cmp	DWORD PTR _res$2[ebp], 0
jne	SHORT $LN180@sqlite3Pra
push	OFFSET $SG112272
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$pragma_out$311
xor	eax, eax
jne	SHORT $LN176@sqlite3Pra
mov	ecx, 1
test	ecx, ecx
je	SHORT $LN175@sqlite3Pra
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+63]
cmp	eax, 1
jle	SHORT $LN176@sqlite3Pra
xor	ecx, ecx
je	SHORT $LN177@sqlite3Pra
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_invalidateTempStorage
add	esp, 4
mov	eax, DWORD PTR _sqlite3_temp_directory
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zRight$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN174@sqlite3Pra
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
push	OFFSET $SG112277
call	_sqlite3_mprintf
add	esp, 8
mov	DWORD PTR _sqlite3_temp_directory, eax
jmp	SHORT $LN181@sqlite3Pra
mov	DWORD PTR _sqlite3_temp_directory, 0
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN171@sqlite3Pra
cmp	DWORD PTR _sqlite3_data_directory, 0
je	SHORT $LN170@sqlite3Pra
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112283
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
mov	edx, DWORD PTR _sqlite3_data_directory
push	edx
push	0
push	1
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
push	1
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN169@sqlite3Pra
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zRight$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
test	edx, edx
je	SHORT $LN168@sqlite3Pra
lea	eax, DWORD PTR _res$13[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN166@sqlite3Pra
cmp	DWORD PTR _res$13[ebp], 0
jne	SHORT $LN168@sqlite3Pra
push	OFFSET $SG112289
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
jmp	$pragma_out$311
mov	edx, DWORD PTR _sqlite3_data_directory
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zRight$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	SHORT $LN165@sqlite3Pra
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
push	OFFSET $SG112291
call	_sqlite3_mprintf
add	esp, 8
mov	DWORD PTR _sqlite3_data_directory, eax
jmp	SHORT $LN169@sqlite3Pra
mov	DWORD PTR _sqlite3_data_directory, 0
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN162@sqlite3Pra
mov	edx, DWORD PTR _pDb$[ebp]
movzx	eax, BYTE PTR [edx+8]
sub	eax, 1
cdq
push	edx
push	eax
push	OFFSET $SG112295
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_returnSingleInt
add	esp, 16					
jmp	SHORT $LN161@sqlite3Pra
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+62]
test	edx, edx
jne	SHORT $LN160@sqlite3Pra
push	OFFSET $SG112298
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
jmp	SHORT $LN161@sqlite3Pra
push	1
push	0
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_getSafetyLevel
add	esp, 12					
movzx	edx, al
add	edx, 1
mov	eax, DWORD PTR _pDb$[ebp]
mov	BYTE PTR [eax+8], dl
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_setAllPagerFlags
add	esp, 4
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
jne	SHORT $LN157@sqlite3Pra
imul	edx, DWORD PTR _mid$[ebp], 12
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, DWORD PTR _aPragmaNames[edx+8]
je	SHORT $LN279@sqlite3Pra
mov	DWORD PTR tv767[ebp], 1
jmp	SHORT $LN280@sqlite3Pra
mov	DWORD PTR tv767[ebp], 0
mov	eax, DWORD PTR tv767[ebp]
cdq
push	edx
push	eax
imul	edx, DWORD PTR _mid$[ebp], 12
mov	eax, DWORD PTR _aPragmaNames[edx]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_returnSingleInt
add	esp, 16					
jmp	$LN156@sqlite3Pra
imul	edx, DWORD PTR _mid$[ebp], 12
mov	eax, DWORD PTR _aPragmaNames[edx+8]
mov	DWORD PTR _mask$62[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+62]
test	edx, edx
jne	SHORT $LN155@sqlite3Pra
mov	eax, DWORD PTR _mask$62[ebp]
and	eax, -524289				
mov	DWORD PTR _mask$62[ebp], eax
push	0
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3GetBoolean
add	esp, 8
movzx	edx, al
test	edx, edx
je	SHORT $LN154@sqlite3Pra
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
or	ecx, DWORD PTR _mask$62[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
jmp	SHORT $LN153@sqlite3Pra
mov	eax, DWORD PTR _mask$62[ebp]
not	eax
mov	ecx, DWORD PTR _db$[ebp]
and	eax, DWORD PTR [ecx+24]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], eax
cmp	DWORD PTR _mask$62[ebp], 16777216	
jne	SHORT $LN153@sqlite3Pra
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+504], 0
mov	DWORD PTR [eax+508], 0
push	0
push	0
push	139					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_setAllPagerFlags
add	esp, 4
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	$LN150@sqlite3Pra
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$73[ebp], eax
cmp	DWORD PTR _pTab$73[ebp], 0
je	$LN150@sqlite3Pra
mov	DWORD PTR _nHidden$48[ebp], 0
mov	eax, DWORD PTR _pTab$73[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR _pPk$21[ebp], eax
push	6
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], 6
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeVerifySchema
add	esp, 8
push	0
push	OFFSET $SG112318
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112320
push	0
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112322
push	0
push	2
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112324
push	0
push	3
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112326
push	0
push	4
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112328
push	0
push	5
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	edx, DWORD PTR _pTab$73[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ViewGetColumnNames
add	esp, 8
mov	DWORD PTR _i$65[ebp], 0
mov	ecx, DWORD PTR _pTab$73[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pCol$94[ebp], edx
jmp	SHORT $LN148@sqlite3Pra
mov	eax, DWORD PTR _i$65[ebp]
add	eax, 1
mov	DWORD PTR _i$65[ebp], eax
mov	ecx, DWORD PTR _pCol$94[ebp]
add	ecx, 24					
mov	DWORD PTR _pCol$94[ebp], ecx
mov	edx, DWORD PTR _pTab$73[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _i$65[ebp], eax
jge	$LN150@sqlite3Pra
mov	ecx, DWORD PTR _pCol$94[ebp]
movzx	edx, BYTE PTR [ecx+23]
and	edx, 2
je	SHORT $LN145@sqlite3Pra
mov	eax, DWORD PTR _nHidden$48[ebp]
add	eax, 1
mov	DWORD PTR _nHidden$48[ebp], eax
jmp	SHORT $LN147@sqlite3Pra
push	1
mov	ecx, DWORD PTR _i$65[ebp]
sub	ecx, DWORD PTR _nHidden$48[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	eax, DWORD PTR _pCol$94[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	2
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	eax, DWORD PTR _pCol$94[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN281@sqlite3Pra
mov	ecx, DWORD PTR _pCol$94[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR tv907[ebp], edx
jmp	SHORT $LN282@sqlite3Pra
mov	DWORD PTR tv907[ebp], OFFSET $SG112333
push	0
mov	eax, DWORD PTR tv907[ebp]
push	eax
push	0
push	3
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	edx, DWORD PTR _pCol$94[ebp]
movzx	eax, BYTE PTR [edx+20]
test	eax, eax
je	SHORT $LN283@sqlite3Pra
mov	DWORD PTR tv918[ebp], 1
jmp	SHORT $LN284@sqlite3Pra
mov	DWORD PTR tv918[ebp], 0
push	4
mov	ecx, DWORD PTR tv918[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _pCol$94[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN144@sqlite3Pra
push	0
mov	ecx, DWORD PTR _pCol$94[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
push	0
push	5
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN143@sqlite3Pra
push	5
push	0
push	28					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pCol$94[ebp]
movzx	eax, BYTE PTR [edx+23]
and	eax, 1
jne	SHORT $LN142@sqlite3Pra
mov	DWORD PTR _k$84[ebp], 0
jmp	SHORT $LN141@sqlite3Pra
cmp	DWORD PTR _pPk$21[ebp], 0
jne	SHORT $LN140@sqlite3Pra
mov	DWORD PTR _k$84[ebp], 1
jmp	SHORT $LN141@sqlite3Pra
mov	DWORD PTR _k$84[ebp], 1
jmp	SHORT $LN138@sqlite3Pra
mov	ecx, DWORD PTR _k$84[ebp]
add	ecx, 1
mov	DWORD PTR _k$84[ebp], ecx
mov	edx, DWORD PTR _pTab$73[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _k$84[ebp], eax
jg	SHORT $LN141@sqlite3Pra
mov	ecx, DWORD PTR _pPk$21[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _k$84[ebp]
movsx	ecx, WORD PTR [edx+eax*2-2]
cmp	ecx, DWORD PTR _i$65[ebp]
je	SHORT $LN141@sqlite3Pra
jmp	SHORT $LN137@sqlite3Pra
push	6
mov	edx, DWORD PTR _k$84[ebp]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	6
push	1
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN147@sqlite3Pra
jmp	$pragma_out$311
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
push	4
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 4
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
push	0
push	OFFSET $SG112348
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112350
push	0
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112352
push	0
push	2
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112354
push	0
push	3
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _i$61[ebp], ecx
jmp	SHORT $LN134@sqlite3Pra
mov	edx, DWORD PTR _i$61[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _i$61[ebp], eax
cmp	DWORD PTR _i$61[ebp], 0
je	$LN132@sqlite3Pra
mov	ecx, DWORD PTR _i$61[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTab$54[ebp], edx
push	0
mov	eax, DWORD PTR _pTab$54[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	1
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	2
push	0
push	28					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	3
mov	ecx, DWORD PTR _pTab$54[ebp]
movzx	edx, WORD PTR [ecx+42]
push	edx
call	_sqlite3LogEstToInt
add	esp, 4
push	eax
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	4
mov	ecx, DWORD PTR _pTab$54[ebp]
movzx	edx, WORD PTR [ecx+28]
push	edx
call	_sqlite3LogEstToInt
add	esp, 4
push	eax
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	4
push	1
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pTab$54[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$75[ebp], eax
jmp	SHORT $LN131@sqlite3Pra
mov	ecx, DWORD PTR _pIdx$75[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$75[ebp], edx
cmp	DWORD PTR _pIdx$75[ebp], 0
je	$LN129@sqlite3Pra
push	0
mov	eax, DWORD PTR _pIdx$75[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	2
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	3
mov	eax, DWORD PTR _pIdx$75[ebp]
movzx	ecx, WORD PTR [eax+48]
push	ecx
call	_sqlite3LogEstToInt
add	esp, 4
push	eax
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	4
mov	eax, 2
imul	ecx, eax, 0
mov	edx, DWORD PTR _pIdx$75[ebp]
mov	eax, DWORD PTR [edx+8]
movzx	ecx, WORD PTR [eax+ecx]
push	ecx
call	_sqlite3LogEstToInt
add	esp, 4
push	eax
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	4
push	1
push	35					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN130@sqlite3Pra
jmp	$LN133@sqlite3Pra
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	$LN127@sqlite3Pra
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindIndex
add	esp, 12					
mov	DWORD PTR _pIdx$59[ebp], eax
cmp	DWORD PTR _pIdx$59[ebp], 0
je	$LN127@sqlite3Pra
mov	ecx, DWORD PTR _pIdx$59[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pTab$8[ebp], edx
push	3
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 3
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
push	0
push	OFFSET $SG112373
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112375
push	0
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112377
push	0
push	2
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	DWORD PTR _i$70[ebp], 0
jmp	SHORT $LN125@sqlite3Pra
mov	ecx, DWORD PTR _i$70[ebp]
add	ecx, 1
mov	DWORD PTR _i$70[ebp], ecx
mov	edx, DWORD PTR _pIdx$59[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _i$70[ebp], eax
jge	$LN127@sqlite3Pra
mov	ecx, DWORD PTR _pIdx$59[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$70[ebp]
mov	cx, WORD PTR [edx+eax*2]
mov	WORD PTR _cnum$64[ebp], cx
push	1
mov	edx, DWORD PTR _i$70[ebp]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	2
movsx	ecx, WORD PTR _cnum$64[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
movsx	eax, WORD PTR _cnum$64[ebp]
imul	ecx, eax, 24
mov	edx, DWORD PTR _pTab$8[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	0
push	3
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	3
push	1
push	35					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN124@sqlite3Pra
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	$LN121@sqlite3Pra
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$20[ebp], eax
cmp	DWORD PTR _pTab$20[ebp], 0
je	$LN121@sqlite3Pra
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
push	3
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], 3
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3CodeVerifySchema
add	esp, 8
push	0
push	OFFSET $SG112390
push	0
push	0
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112392
push	0
push	1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112394
push	0
push	2
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	eax, DWORD PTR _pTab$20[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$67[ebp], ecx
mov	DWORD PTR _i$38[ebp], 0
jmp	SHORT $LN119@sqlite3Pra
mov	edx, DWORD PTR _pIdx$67[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$67[ebp], eax
mov	ecx, DWORD PTR _i$38[ebp]
add	ecx, 1
mov	DWORD PTR _i$38[ebp], ecx
cmp	DWORD PTR _pIdx$67[ebp], 0
je	$LN121@sqlite3Pra
push	1
mov	edx, DWORD PTR _i$38[ebp]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	ecx, DWORD PTR _pIdx$67[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
push	2
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	ecx, DWORD PTR _pIdx$67[ebp]
movzx	edx, BYTE PTR [ecx+54]
test	edx, edx
je	SHORT $LN285@sqlite3Pra
mov	DWORD PTR tv1195[ebp], 1
jmp	SHORT $LN286@sqlite3Pra
mov	DWORD PTR tv1195[ebp], 0
push	3
mov	eax, DWORD PTR tv1195[ebp]
push	eax
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	3
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN118@sqlite3Pra
jmp	$pragma_out$311
push	3
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 3
push	0
push	OFFSET $SG112401
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112403
push	0
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112405
push	0
push	2
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	DWORD PTR _i$87[ebp], 0
jmp	SHORT $LN115@sqlite3Pra
mov	edx, DWORD PTR _i$87[ebp]
add	edx, 1
mov	DWORD PTR _i$87[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$87[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	$LN113@sqlite3Pra
mov	edx, DWORD PTR _i$87[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
cmp	DWORD PTR [ecx+edx+4], 0
jne	SHORT $LN112@sqlite3Pra
jmp	SHORT $LN114@sqlite3Pra
push	1
mov	edx, DWORD PTR _i$87[ebp]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	ecx, DWORD PTR _i$87[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	0
push	2
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
mov	eax, DWORD PTR _i$87[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
push	eax
call	_sqlite3BtreeGetFilename
add	esp, 4
push	eax
push	0
push	3
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	3
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN114@sqlite3Pra
jmp	$pragma_out$311
mov	DWORD PTR _i$46[ebp], 0
push	2
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 2
push	0
push	OFFSET $SG112415
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112417
push	0
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+428]
mov	DWORD PTR _p$56[ebp], edx
jmp	SHORT $LN110@sqlite3Pra
mov	eax, DWORD PTR _p$56[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$56[ebp], ecx
cmp	DWORD PTR _p$56[ebp], 0
je	SHORT $LN108@sqlite3Pra
mov	edx, DWORD PTR _p$56[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pColl$4[ebp], eax
mov	ecx, DWORD PTR _i$46[ebp]
mov	DWORD PTR tv1280[ebp], ecx
push	1
mov	edx, DWORD PTR tv1280[ebp]
push	edx
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _i$46[ebp]
add	ecx, 1
mov	DWORD PTR _i$46[ebp], ecx
push	0
mov	edx, DWORD PTR _pColl$4[ebp]
mov	eax, DWORD PTR [edx]
push	eax
push	0
push	2
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	2
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN109@sqlite3Pra
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	$LN106@sqlite3Pra
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pTab$52[ebp], eax
cmp	DWORD PTR _pTab$52[ebp], 0
je	$LN106@sqlite3Pra
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
mov	ecx, DWORD PTR _pTab$52[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pFK$95[ebp], edx
cmp	DWORD PTR _pFK$95[ebp], 0
je	$LN106@sqlite3Pra
mov	DWORD PTR _i$44[ebp], 0
push	8
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 8
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
push	0
push	OFFSET $SG112431
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112433
push	0
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112435
push	0
push	2
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112437
push	0
push	3
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112439
push	0
push	4
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112441
push	0
push	5
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112443
push	0
push	6
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112445
push	0
push	7
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
cmp	DWORD PTR _pFK$95[ebp], 0
je	$LN106@sqlite3Pra
mov	DWORD PTR _j$79[ebp], 0
jmp	SHORT $LN101@sqlite3Pra
mov	eax, DWORD PTR _j$79[ebp]
add	eax, 1
mov	DWORD PTR _j$79[ebp], eax
mov	ecx, DWORD PTR _pFK$95[ebp]
mov	edx, DWORD PTR _j$79[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	$LN99@sqlite3Pra
mov	eax, DWORD PTR _j$79[ebp]
mov	ecx, DWORD PTR _pFK$95[ebp]
mov	edx, DWORD PTR [ecx+eax*8+40]
mov	DWORD PTR _zCol$24[ebp], edx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pFK$95[ebp]
movzx	eax, BYTE PTR [edx+ecx+25]
push	eax
call	_actionName
add	esp, 4
mov	DWORD PTR _zOnDelete$6[ebp], eax
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _pFK$95[ebp]
movzx	eax, BYTE PTR [edx+ecx+25]
push	eax
call	_actionName
add	esp, 4
mov	DWORD PTR _zOnUpdate$11[ebp], eax
push	1
mov	ecx, DWORD PTR _i$44[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	2
mov	eax, DWORD PTR _j$79[ebp]
push	eax
push	25					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	edx, DWORD PTR _pFK$95[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	0
push	3
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
mov	edx, DWORD PTR _j$79[ebp]
mov	eax, DWORD PTR _pFK$95[ebp]
imul	ecx, DWORD PTR [eax+edx*8+36], 24
mov	edx, DWORD PTR _pTab$52[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	0
push	4
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
cmp	DWORD PTR _zCol$24[ebp], 0
je	SHORT $LN287@sqlite3Pra
mov	DWORD PTR tv1406[ebp], 97		
jmp	SHORT $LN288@sqlite3Pra
mov	DWORD PTR tv1406[ebp], 28		
push	0
mov	eax, DWORD PTR _zCol$24[ebp]
push	eax
push	0
push	5
push	0
mov	ecx, DWORD PTR tv1406[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
mov	eax, DWORD PTR _zOnUpdate$11[ebp]
push	eax
push	0
push	6
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
mov	edx, DWORD PTR _zOnDelete$6[ebp]
push	edx
push	0
push	7
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
push	OFFSET $SG112458
push	0
push	8
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	8
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN100@sqlite3Pra
mov	eax, DWORD PTR _i$44[ebp]
add	eax, 1
mov	DWORD PTR _i$44[ebp], eax
mov	ecx, DWORD PTR _pFK$95[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pFK$95[ebp], edx
jmp	$LN103@sqlite3Pra
jmp	$pragma_out$311
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
add	ecx, 1
mov	DWORD PTR _regResult$63[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 4
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv1474[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv1474[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv1474[ebp]
mov	DWORD PTR _regKey$19[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, 1
mov	DWORD PTR tv1477[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv1477[ebp]
mov	DWORD PTR [eax+72], ecx
mov	edx, DWORD PTR tv1477[ebp]
mov	DWORD PTR _regRow$96[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
push	4
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112475
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112477
push	0
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112479
push	0
push	2
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112481
push	0
push	3
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3CodeVerifySchema
add	esp, 8
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _k$76[ebp], eax
cmp	DWORD PTR _k$76[ebp], 0
je	$LN96@sqlite3Pra
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN95@sqlite3Pra
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3LocateTable
add	esp, 16					
mov	DWORD PTR _pTab$99[ebp], eax
mov	DWORD PTR _k$76[ebp], 0
jmp	SHORT $LN94@sqlite3Pra
mov	ecx, DWORD PTR _k$76[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTab$99[ebp], edx
mov	eax, DWORD PTR _k$76[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _k$76[ebp], ecx
cmp	DWORD PTR _pTab$99[ebp], 0
je	SHORT $LN92@sqlite3Pra
mov	edx, DWORD PTR _pTab$99[ebp]
cmp	DWORD PTR [edx+16], 0
jne	SHORT $LN93@sqlite3Pra
jmp	SHORT $LN97@sqlite3Pra
mov	eax, DWORD PTR _pTab$99[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
mov	edx, DWORD PTR _pTab$99[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3TableLock
add	esp, 20					
mov	eax, DWORD PTR _pTab$99[ebp]
movsx	ecx, WORD PTR [eax+38]
add	ecx, DWORD PTR _regRow$96[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
cmp	ecx, DWORD PTR [edx+72]
jle	SHORT $LN91@sqlite3Pra
mov	eax, DWORD PTR _pTab$99[ebp]
movsx	ecx, WORD PTR [eax+38]
add	ecx, DWORD PTR _regRow$96[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], ecx
push	52					
mov	eax, DWORD PTR _pTab$99[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3OpenTable
add	esp, 20					
push	0
mov	eax, DWORD PTR _pTab$99[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
mov	edx, DWORD PTR _regResult$63[ebp]
push	edx
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	DWORD PTR _i$98[ebp], 1
mov	ecx, DWORD PTR _pTab$99[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pFK$102[ebp], edx
jmp	SHORT $LN90@sqlite3Pra
mov	eax, DWORD PTR _i$98[ebp]
add	eax, 1
mov	DWORD PTR _i$98[ebp], eax
mov	ecx, DWORD PTR _pFK$102[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pFK$102[ebp], edx
cmp	DWORD PTR _pFK$102[ebp], 0
je	$LN88@sqlite3Pra
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pFK$102[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pParent$93[ebp], eax
cmp	DWORD PTR _pParent$93[ebp], 0
jne	SHORT $LN87@sqlite3Pra
jmp	SHORT $LN89@sqlite3Pra
mov	DWORD PTR _pIdx$90[ebp], 0
mov	ecx, DWORD PTR _pParent$93[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
push	0
mov	eax, DWORD PTR _pParent$93[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3TableLock
add	esp, 20					
push	0
lea	ecx, DWORD PTR _pIdx$90[ebp]
push	ecx
mov	edx, DWORD PTR _pFK$102[ebp]
push	edx
mov	eax, DWORD PTR _pParent$93[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FkLocateIndex
add	esp, 20					
mov	DWORD PTR _x$22[ebp], eax
cmp	DWORD PTR _x$22[ebp], 0
jne	SHORT $LN86@sqlite3Pra
cmp	DWORD PTR _pIdx$90[ebp], 0
jne	SHORT $LN85@sqlite3Pra
push	52					
mov	edx, DWORD PTR _pParent$93[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _i$98[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3OpenTable
add	esp, 20					
jmp	SHORT $LN84@sqlite3Pra
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pIdx$90[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _i$98[ebp]
push	eax
push	52					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	edx, DWORD PTR _pIdx$90[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3VdbeSetP4KeyInfo
add	esp, 8
jmp	SHORT $LN83@sqlite3Pra
mov	DWORD PTR _k$76[ebp], 0
jmp	SHORT $LN88@sqlite3Pra
jmp	$LN89@sqlite3Pra
cmp	DWORD PTR _pFK$102[ebp], 0
je	SHORT $LN82@sqlite3Pra
jmp	$LN96@sqlite3Pra
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+68]
cmp	edx, DWORD PTR _i$98[ebp]
jge	SHORT $LN81@sqlite3Pra
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _i$98[ebp]
mov	DWORD PTR [eax+68], ecx
push	0
push	105					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addrTop$34[ebp], eax
mov	DWORD PTR _i$98[ebp], 1
mov	eax, DWORD PTR _pTab$99[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pFK$102[ebp], ecx
jmp	SHORT $LN80@sqlite3Pra
mov	edx, DWORD PTR _i$98[ebp]
add	edx, 1
mov	DWORD PTR _i$98[ebp], edx
mov	eax, DWORD PTR _pFK$102[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pFK$102[ebp], ecx
cmp	DWORD PTR _pFK$102[ebp], 0
je	$LN78@sqlite3Pra
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _pFK$102[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3FindTable
add	esp, 12					
mov	DWORD PTR _pParent$93[ebp], eax
mov	DWORD PTR _pIdx$90[ebp], 0
mov	DWORD PTR _aiCols$57[ebp], 0
cmp	DWORD PTR _pParent$93[ebp], 0
je	SHORT $LN77@sqlite3Pra
lea	eax, DWORD PTR _aiCols$57[ebp]
push	eax
lea	ecx, DWORD PTR _pIdx$90[ebp]
push	ecx
mov	edx, DWORD PTR _pFK$102[ebp]
push	edx
mov	eax, DWORD PTR _pParent$93[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3FkLocateIndex
add	esp, 20					
mov	DWORD PTR _x$22[ebp], eax
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeMakeLabel
add	esp, 4
mov	DWORD PTR _addrOk$69[ebp], eax
cmp	DWORD PTR _pParent$93[ebp], 0
je	$LN76@sqlite3Pra
cmp	DWORD PTR _pIdx$90[ebp], 0
jne	$LN76@sqlite3Pra
mov	eax, 8
imul	ecx, eax, 0
mov	edx, DWORD PTR _pFK$102[ebp]
mov	eax, DWORD PTR [edx+ecx+36]
mov	DWORD PTR _iKey$36[ebp], eax
mov	ecx, DWORD PTR _pTab$99[ebp]
movsx	edx, WORD PTR [ecx+36]
cmp	DWORD PTR _iKey$36[ebp], edx
je	SHORT $LN75@sqlite3Pra
mov	eax, DWORD PTR _regRow$96[ebp]
push	eax
mov	ecx, DWORD PTR _iKey$36[ebp]
push	ecx
push	0
push	46					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _regRow$96[ebp]
push	eax
mov	ecx, DWORD PTR _iKey$36[ebp]
push	ecx
mov	edx, DWORD PTR _pTab$99[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3ColumnDefault
add	esp, 16					
mov	ecx, DWORD PTR _addrOk$69[ebp]
push	ecx
mov	edx, DWORD PTR _regRow$96[ebp]
push	edx
push	76					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
add	eax, 3
push	eax
mov	edx, DWORD PTR _regRow$96[ebp]
push	edx
push	38					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN74@sqlite3Pra
mov	ecx, DWORD PTR _regRow$96[ebp]
push	ecx
push	0
push	100					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _regRow$96[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _i$98[ebp]
push	ecx
push	67					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	eax, DWORD PTR _addrOk$69[ebp]
push	eax
push	0
push	16					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
sub	eax, 2
push	eax
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN73@sqlite3Pra
mov	DWORD PTR _j$85[ebp], 0
jmp	SHORT $LN72@sqlite3Pra
mov	ecx, DWORD PTR _j$85[ebp]
add	ecx, 1
mov	DWORD PTR _j$85[ebp], ecx
mov	edx, DWORD PTR _pFK$102[ebp]
mov	eax, DWORD PTR _j$85[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN70@sqlite3Pra
cmp	DWORD PTR _aiCols$57[ebp], 0
je	SHORT $LN289@sqlite3Pra
mov	ecx, DWORD PTR _j$85[ebp]
mov	edx, DWORD PTR _aiCols$57[ebp]
mov	eax, DWORD PTR [edx+ecx*4]
mov	DWORD PTR tv1673[ebp], eax
jmp	SHORT $LN290@sqlite3Pra
mov	ecx, DWORD PTR _j$85[ebp]
mov	edx, DWORD PTR _pFK$102[ebp]
mov	eax, DWORD PTR [edx+ecx*8+36]
mov	DWORD PTR tv1673[ebp], eax
mov	ecx, DWORD PTR _regRow$96[ebp]
add	ecx, DWORD PTR _j$85[ebp]
push	ecx
mov	edx, DWORD PTR tv1673[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pTab$99[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3ExprCodeGetColumnOfTable
add	esp, 20					
mov	edx, DWORD PTR _addrOk$69[ebp]
push	edx
mov	eax, DWORD PTR _regRow$96[ebp]
add	eax, DWORD PTR _j$85[ebp]
push	eax
push	76					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN71@sqlite3Pra
cmp	DWORD PTR _pParent$93[ebp], 0
je	SHORT $LN73@sqlite3Pra
mov	edx, DWORD PTR _pFK$102[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pIdx$90[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3IndexAffinityStr
add	esp, 8
push	eax
mov	eax, DWORD PTR _regKey$19[ebp]
push	eax
mov	ecx, DWORD PTR _pFK$102[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _regRow$96[ebp]
push	eax
push	48					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	0
mov	edx, DWORD PTR _regKey$19[ebp]
push	edx
mov	eax, DWORD PTR _addrOk$69[ebp]
push	eax
mov	ecx, DWORD PTR _i$98[ebp]
push	ecx
push	66					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	eax, DWORD PTR _regResult$63[ebp]
add	eax, 1
push	eax
push	0
push	100					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	edx, DWORD PTR _pFK$102[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
push	0
mov	ecx, DWORD PTR _regResult$63[ebp]
add	ecx, 2
push	ecx
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	eax, DWORD PTR _regResult$63[ebp]
add	eax, 3
push	eax
mov	ecx, DWORD PTR _i$98[ebp]
sub	ecx, 1
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	4
mov	eax, DWORD PTR _regResult$63[ebp]
push	eax
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addrOk$69[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeResolveLabel
add	esp, 8
mov	ecx, DWORD PTR _aiCols$57[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	$LN79@sqlite3Pra
mov	eax, DWORD PTR _addrTop$34[ebp]
add	eax, 1
push	eax
push	0
push	9
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _addrTop$34[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeJumpHere
add	esp, 8
jmp	$LN97@sqlite3Pra
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN67@sqlite3Pra
push	0
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3GetBoolean
add	esp, 8
movzx	edx, al
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3RegisterLikeFunctions
add	esp, 8
jmp	$pragma_out$311
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zLeft$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
movzx	edx, BYTE PTR _sqlite3UpperToLower[ecx]
cmp	edx, 113				
jne	SHORT $LN291@sqlite3Pra
mov	DWORD PTR tv1751[ebp], 1
jmp	SHORT $LN292@sqlite3Pra
mov	DWORD PTR tv1751[ebp], 0
mov	eax, DWORD PTR tv1751[ebp]
mov	DWORD PTR _isQuick$17[ebp], eax
mov	ecx, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN65@sqlite3Pra
mov	DWORD PTR _iDb$[ebp], -1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+72], 6
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112534
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	DWORD PTR _mxErr$68[ebp], 100		
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN64@sqlite3Pra
lea	edx, DWORD PTR _mxErr$68[ebp]
push	edx
mov	eax, DWORD PTR _zRight$[ebp]
push	eax
call	_sqlite3GetInt32
add	esp, 8
cmp	DWORD PTR _mxErr$68[ebp], 0
jg	SHORT $LN64@sqlite3Pra
mov	DWORD PTR _mxErr$68[ebp], 100		
push	1
mov	ecx, DWORD PTR _mxErr$68[ebp]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _i$89[ebp], 0
jmp	SHORT $LN62@sqlite3Pra
mov	eax, DWORD PTR _i$89[ebp]
add	eax, 1
mov	DWORD PTR _i$89[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$89[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	$LN60@sqlite3Pra
mov	DWORD PTR _cnt$91[ebp], 0
xor	eax, eax
je	SHORT $LN59@sqlite3Pra
jmp	SHORT $LN61@sqlite3Pra
cmp	DWORD PTR _iDb$[ebp], 0
jl	SHORT $LN58@sqlite3Pra
mov	ecx, DWORD PTR _i$89[ebp]
cmp	ecx, DWORD PTR _iDb$[ebp]
je	SHORT $LN58@sqlite3Pra
jmp	SHORT $LN61@sqlite3Pra
mov	edx, DWORD PTR _i$89[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3CodeVerifySchema
add	esp, 8
push	1
push	134					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$97[ebp], eax
push	0
push	0
push	24					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _addr$97[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _i$89[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
add	edx, 8
mov	DWORD PTR _pTbls$29[ebp], edx
mov	eax, DWORD PTR _pTbls$29[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _x$92[ebp], ecx
jmp	SHORT $LN57@sqlite3Pra
mov	edx, DWORD PTR _x$92[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _x$92[ebp], eax
cmp	DWORD PTR _x$92[ebp], 0
je	$LN55@sqlite3Pra
mov	ecx, DWORD PTR _x$92[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTab$51[ebp], edx
mov	eax, DWORD PTR _pTab$51[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 32					
jne	SHORT $LN54@sqlite3Pra
mov	edx, DWORD PTR _cnt$91[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _pTab$51[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _cnt$91[ebp]
add	eax, 1
mov	DWORD PTR _cnt$91[ebp], eax
mov	ecx, DWORD PTR _pTab$51[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$60[ebp], edx
jmp	SHORT $LN53@sqlite3Pra
mov	eax, DWORD PTR _pIdx$60[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$60[ebp], ecx
cmp	DWORD PTR _pIdx$60[ebp], 0
je	SHORT $LN51@sqlite3Pra
mov	edx, DWORD PTR _cnt$91[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _pIdx$60[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	eax, DWORD PTR _cnt$91[ebp]
add	eax, 1
mov	DWORD PTR _cnt$91[ebp], eax
jmp	SHORT $LN52@sqlite3Pra
jmp	$LN56@sqlite3Pra
mov	ecx, DWORD PTR _cnt$91[ebp]
add	ecx, 8
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+72], ecx
jle	SHORT $LN293@sqlite3Pra
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR tv1856[ebp], ecx
jmp	SHORT $LN294@sqlite3Pra
mov	edx, DWORD PTR _cnt$91[ebp]
add	edx, 8
mov	DWORD PTR tv1856[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv1856[ebp]
mov	DWORD PTR [eax+72], ecx
push	1
mov	edx, DWORD PTR _cnt$91[ebp]
push	edx
push	2
push	124					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
movzx	ecx, BYTE PTR _i$89[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
push	2
push	76					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$97[ebp], eax
push	-1
mov	ecx, DWORD PTR _i$89[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
push	OFFSET $SG112556
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
push	eax
push	0
push	3
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
push	4
push	2
push	32					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	2
push	3
push	4
push	94					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	1
push	2
push	35					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addr$97[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pTbls$29[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _x$92[ebp], ecx
jmp	SHORT $LN50@sqlite3Pra
mov	edx, DWORD PTR _x$92[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _x$92[ebp], eax
cmp	DWORD PTR _x$92[ebp], 0
je	$LN48@sqlite3Pra
cmp	DWORD PTR _isQuick$17[ebp], 0
jne	$LN48@sqlite3Pra
mov	ecx, DWORD PTR _x$92[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pTab$83[ebp], edx
mov	DWORD PTR _pPrior$28[ebp], 0
mov	DWORD PTR _r1$49[ebp], -1
mov	eax, DWORD PTR _pTab$83[ebp]
cmp	DWORD PTR [eax+8], 0
jne	SHORT $LN47@sqlite3Pra
jmp	SHORT $LN49@sqlite3Pra
mov	ecx, DWORD PTR _pTab$83[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
jne	SHORT $LN295@sqlite3Pra
mov	DWORD PTR tv1912[ebp], 0
jmp	SHORT $LN296@sqlite3Pra
mov	eax, DWORD PTR _pTab$83[ebp]
push	eax
call	_sqlite3PrimaryKeyIndex
add	esp, 4
mov	DWORD PTR tv1912[ebp], eax
mov	ecx, DWORD PTR tv1912[ebp]
mov	DWORD PTR _pPk$26[ebp], ecx
push	1
push	134					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _addr$97[ebp], eax
push	0
push	0
push	24					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _addr$97[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCacheClear
add	esp, 4
lea	ecx, DWORD PTR _iIdxCur$33[ebp]
push	ecx
lea	edx, DWORD PTR _iDataCur$47[ebp]
push	edx
push	0
push	1
push	52					
mov	eax, DWORD PTR _pTab$83[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3OpenTableAndIndices
add	esp, 28					
push	7
push	0
push	25					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _j$100[ebp], 0
mov	eax, DWORD PTR _pTab$83[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$101[ebp], ecx
jmp	SHORT $LN46@sqlite3Pra
mov	edx, DWORD PTR _pIdx$101[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$101[ebp], eax
mov	ecx, DWORD PTR _j$100[ebp]
add	ecx, 1
mov	DWORD PTR _j$100[ebp], ecx
cmp	DWORD PTR _pIdx$101[ebp], 0
je	SHORT $LN44@sqlite3Pra
mov	edx, DWORD PTR _j$100[ebp]
add	edx, 8
push	edx
push	0
push	25					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN45@sqlite3Pra
mov	ecx, DWORD PTR _j$100[ebp]
add	ecx, 8
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+72], ecx
jle	SHORT $LN297@sqlite3Pra
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR tv1950[ebp], ecx
jmp	SHORT $LN298@sqlite3Pra
mov	edx, DWORD PTR _j$100[ebp]
add	edx, 8
mov	DWORD PTR tv1950[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv1950[ebp]
mov	DWORD PTR [eax+72], ecx
push	0
mov	edx, DWORD PTR _iDataCur$47[ebp]
push	edx
push	105					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
push	7
push	37					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	DWORD PTR _loopTop$27[ebp], eax
mov	DWORD PTR _j$100[ebp], 0
mov	edx, DWORD PTR _pTab$83[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _pIdx$101[ebp], eax
jmp	SHORT $LN43@sqlite3Pra
mov	ecx, DWORD PTR _pIdx$101[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pIdx$101[ebp], edx
mov	eax, DWORD PTR _j$100[ebp]
add	eax, 1
mov	DWORD PTR _j$100[ebp], eax
cmp	DWORD PTR _pIdx$101[ebp], 0
je	$LN41@sqlite3Pra
mov	ecx, DWORD PTR _pPk$26[ebp]
cmp	ecx, DWORD PTR _pIdx$101[ebp]
jne	SHORT $LN40@sqlite3Pra
jmp	SHORT $LN42@sqlite3Pra
mov	edx, DWORD PTR _r1$49[ebp]
push	edx
mov	eax, DWORD PTR _pPrior$28[ebp]
push	eax
lea	ecx, DWORD PTR _jmp3$12[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _iDataCur$47[ebp]
push	edx
mov	eax, DWORD PTR _pIdx$101[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GenerateIndexKey
add	esp, 32					
mov	DWORD PTR _r1$49[ebp], eax
mov	edx, DWORD PTR _pIdx$101[ebp]
mov	DWORD PTR _pPrior$28[ebp], edx
push	1
mov	eax, DWORD PTR _j$100[ebp]
add	eax, 8
push	eax
push	37					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	edx, DWORD PTR _pIdx$101[ebp]
movzx	eax, WORD PTR [edx+52]
push	eax
mov	ecx, DWORD PTR _r1$49[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _iIdxCur$33[ebp]
add	edx, DWORD PTR _j$100[ebp]
push	edx
push	66					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	DWORD PTR _jmp2$14[ebp], eax
push	-1
push	1
push	37					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	-2					
push	OFFSET $SG112579
push	0
push	3
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	3
push	3
push	7
push	94					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	-2					
push	OFFSET $SG112580
push	0
push	4
push	0
push	97					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	3
push	3
push	4
push	94					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	0
mov	eax, DWORD PTR _pIdx$101[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	4
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	3
push	3
push	4
push	94					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	1
push	3
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	1
push	134					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp1
add	esp, 12					
mov	DWORD PTR _jmp4$16[ebp], eax
push	24					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	ecx, DWORD PTR _jmp4$16[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	eax, DWORD PTR _jmp2$14[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	edx, DWORD PTR _jmp3$12[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ResolvePartIdxLabel
add	esp, 8
jmp	$LN42@sqlite3Pra
mov	ecx, DWORD PTR _loopTop$27[ebp]
push	ecx
mov	edx, DWORD PTR _iDataCur$47[ebp]
push	edx
push	9
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
mov	ecx, DWORD PTR _loopTop$27[ebp]
sub	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
push	-2					
push	OFFSET $SG112581
push	0
push	2
push	0
push	97					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
mov	DWORD PTR _j$100[ebp], 0
mov	ecx, DWORD PTR _pTab$83[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pIdx$101[ebp], edx
jmp	SHORT $LN39@sqlite3Pra
mov	eax, DWORD PTR _pIdx$101[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pIdx$101[ebp], ecx
mov	edx, DWORD PTR _j$100[ebp]
add	edx, 1
mov	DWORD PTR _j$100[ebp], edx
cmp	DWORD PTR _pIdx$101[ebp], 0
je	$LN37@sqlite3Pra
mov	eax, DWORD PTR _pPk$26[ebp]
cmp	eax, DWORD PTR _pIdx$101[ebp]
jne	SHORT $LN36@sqlite3Pra
jmp	SHORT $LN38@sqlite3Pra
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeCurrentAddr
add	esp, 4
mov	DWORD PTR _addr$97[ebp], eax
mov	edx, DWORD PTR _addr$97[ebp]
add	edx, 2
push	edx
push	1
push	134					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
push	0
push	24					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	3
mov	edx, DWORD PTR _iIdxCur$33[ebp]
add	edx, DWORD PTR _j$100[ebp]
push	edx
push	49					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	3
mov	ecx, DWORD PTR _addr$97[ebp]
add	ecx, 8
push	ecx
mov	edx, DWORD PTR _j$100[ebp]
add	edx, 8
push	edx
push	79					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	136					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP5
add	esp, 8
push	-1
push	1
push	37					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	0
mov	eax, DWORD PTR _pIdx$101[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	0
push	3
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	7
push	2
push	3
push	94					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	1
push	7
push	35					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN38@sqlite3Pra
jmp	$LN49@sqlite3Pra
jmp	$LN61@sqlite3Pra
mov	edx, DWORD PTR ?iLn@?JM@??sqlite3Pragma@@9@9
push	edx
push	OFFSET ?endCode@?JM@??sqlite3Pragma@@9@9
push	4
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOpList
add	esp, 16					
mov	DWORD PTR _addr$97[ebp], eax
mov	ecx, DWORD PTR _mxErr$68[ebp]
neg	ecx
push	ecx
mov	edx, DWORD PTR _addr$97[ebp]
push	edx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeChangeP2
add	esp, 12					
mov	ecx, DWORD PTR _addr$97[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
push	-2					
push	OFFSET $SG112587
mov	eax, DWORD PTR _addr$97[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
jne	$LN34@sqlite3Pra
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ReadSchema
add	esp, 4
test	eax, eax
je	SHORT $LN33@sqlite3Pra
jmp	$pragma_out$311
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	0
push	OFFSET $SG112606
push	0
push	0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	1
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
push	-2					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+eax+12]
movzx	eax, BYTE PTR [edx+77]
mov	ecx, DWORD PTR ?encnames@?KO@??sqlite3Pragma@@9@9[eax*8]
push	ecx
push	-1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
push	1
push	1
push	35					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$LN32@sqlite3Pra
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	eax, WORD PTR [edx+78]
and	eax, 1
je	SHORT $LN30@sqlite3Pra
mov	ecx, 16					
imul	edx, ecx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	eax, WORD PTR [edx+78]
and	eax, 4
je	$LN32@sqlite3Pra
mov	ecx, 8
imul	edx, ecx, 0
add	edx, OFFSET ?encnames@?KO@??sqlite3Pragma@@9@9
mov	DWORD PTR _pEnc$88[ebp], edx
jmp	SHORT $LN29@sqlite3Pra
mov	eax, DWORD PTR _pEnc$88[ebp]
add	eax, 8
mov	DWORD PTR _pEnc$88[ebp], eax
mov	ecx, DWORD PTR _pEnc$88[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN27@sqlite3Pra
mov	edx, DWORD PTR _pEnc$88[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN26@sqlite3Pra
mov	edx, DWORD PTR _pEnc$88[ebp]
movzx	eax, BYTE PTR [edx+4]
test	eax, eax
je	SHORT $LN299@sqlite3Pra
mov	ecx, DWORD PTR _pEnc$88[ebp]
movzx	edx, BYTE PTR [ecx+4]
mov	DWORD PTR tv2198[ebp], edx
jmp	SHORT $LN300@sqlite3Pra
mov	DWORD PTR tv2198[ebp], 2
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+eax+12]
mov	al, BYTE PTR tv2198[ebp]
mov	BYTE PTR [edx+77], al
jmp	SHORT $LN27@sqlite3Pra
jmp	SHORT $LN28@sqlite3Pra
mov	ecx, DWORD PTR _pEnc$88[ebp]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN32@sqlite3Pra
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
push	OFFSET $SG112618
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
jmp	$pragma_out$311
mov	ecx, DWORD PTR _iDb$[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeUsesBtree
add	esp, 8
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zLeft$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
mov	DWORD PTR tv2210[ebp], eax
mov	ecx, DWORD PTR tv2210[ebp]
sub	ecx, 65					
mov	DWORD PTR tv2210[ebp], ecx
cmp	DWORD PTR tv2210[ebp], 50		
ja	SHORT $LN18@sqlite3Pra
mov	edx, DWORD PTR tv2210[ebp]
movzx	eax, BYTE PTR $LN308@sqlite3Pra[edx]
jmp	DWORD PTR $LN310@sqlite3Pra[eax*4]
mov	DWORD PTR _iCookie$74[ebp], 8
jmp	SHORT $LN22@sqlite3Pra
mov	DWORD PTR _iCookie$74[ebp], 0
jmp	SHORT $LN22@sqlite3Pra
mov	DWORD PTR _iCookie$74[ebp], 1
jmp	SHORT $LN22@sqlite3Pra
mov	DWORD PTR _iCookie$74[ebp], 6
cmp	DWORD PTR _zRight$[ebp], 0
je	$LN17@sqlite3Pra
cmp	DWORD PTR _iCookie$74[ebp], 0
je	$LN17@sqlite3Pra
push	0
push	OFFSET ?setCookie@?LI@??sqlite3Pragma@@9@9
push	3
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOpList
add	esp, 16					
mov	DWORD PTR _addr$58[ebp], eax
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _addr$58[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3Atoi
add	esp, 4
push	eax
mov	eax, DWORD PTR _addr$58[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	edx, DWORD PTR _iDb$[ebp]
push	edx
mov	eax, DWORD PTR _addr$58[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	edx, DWORD PTR _iCookie$74[ebp]
push	edx
mov	eax, DWORD PTR _addr$58[ebp]
add	eax, 2
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP2
add	esp, 12					
jmp	$LN16@sqlite3Pra
push	0
push	OFFSET ?readCookie@?LJ@??sqlite3Pragma@@9@9
push	3
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOpList
add	esp, 16					
mov	DWORD PTR _addr$45[ebp], eax
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _addr$45[ebp]
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _addr$45[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	eax, DWORD PTR _iCookie$74[ebp]
push	eax
mov	ecx, DWORD PTR _addr$45[ebp]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP3
add	esp, 12					
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
push	-1
mov	ecx, DWORD PTR _zLeft$[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
jmp	$pragma_out$311
mov	DWORD PTR _i$43[ebp], 0
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 1
push	0
push	OFFSET $SG112644
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
mov	eax, DWORD PTR _i$43[ebp]
mov	DWORD PTR tv2270[ebp], eax
mov	ecx, DWORD PTR tv2270[ebp]
push	ecx
call	_sqlite3_compileoption_get
add	esp, 4
mov	DWORD PTR _zOpt$31[ebp], eax
mov	edx, DWORD PTR _zOpt$31[ebp]
mov	DWORD PTR tv2273[ebp], edx
mov	eax, DWORD PTR _i$43[ebp]
add	eax, 1
mov	DWORD PTR _i$43[ebp], eax
cmp	DWORD PTR tv2273[ebp], 0
je	SHORT $LN13@sqlite3Pra
push	0
mov	ecx, DWORD PTR _zOpt$31[ebp]
push	ecx
push	0
push	1
push	0
push	97					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4
add	esp, 28					
push	1
push	1
push	35					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	SHORT $LN14@sqlite3Pra
jmp	$pragma_out$311
mov	ecx, DWORD PTR _pId2$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN301@sqlite3Pra
mov	edx, DWORD PTR _iDb$[ebp]
mov	DWORD PTR tv2287[ebp], edx
jmp	SHORT $LN302@sqlite3Pra
mov	DWORD PTR tv2287[ebp], 10		
mov	eax, DWORD PTR tv2287[ebp]
mov	DWORD PTR _iBt$9[ebp], eax
mov	DWORD PTR _eMode$41[ebp], 0
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN11@sqlite3Pra
push	OFFSET $SG112653
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN10@sqlite3Pra
mov	DWORD PTR _eMode$41[ebp], 1
jmp	SHORT $LN11@sqlite3Pra
push	OFFSET $SG112656
mov	edx, DWORD PTR _zRight$[ebp]
push	edx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN11@sqlite3Pra
mov	DWORD PTR _eMode$41[ebp], 2
push	3
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetNumCols
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 3
push	0
push	OFFSET $SG112658
push	0
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112660
push	0
push	1
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeSetColName
add	esp, 20					
push	0
push	OFFSET $SG112662
push	0
push	2
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeSetColName
add	esp, 20					
push	1
mov	edx, DWORD PTR _eMode$41[ebp]
push	edx
mov	eax, DWORD PTR _iBt$9[ebp]
push	eax
push	11					
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
push	3
push	1
push	35					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN6@sqlite3Pra
mov	eax, DWORD PTR _zRight$[ebp]
push	eax
call	_sqlite3Atoi
add	esp, 4
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_wal_autocheckpoint
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+204], OFFSET _sqlite3WalDefaultHook
jne	SHORT $LN303@sqlite3Pra
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+208]
mov	DWORD PTR tv2332[ebp], ecx
jmp	SHORT $LN304@sqlite3Pra
mov	DWORD PTR tv2332[ebp], 0
mov	eax, DWORD PTR tv2332[ebp]
cdq
push	edx
push	eax
push	OFFSET $SG112668
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_returnSingleInt
add	esp, 16					
jmp	$pragma_out$311
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_db_release_memory
add	esp, 4
jmp	$pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN3@sqlite3Pra
mov	ecx, DWORD PTR _zRight$[ebp]
push	ecx
call	_sqlite3Atoi
add	esp, 4
push	eax
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_busy_timeout
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+484]
cdq
push	edx
push	eax
push	OFFSET $SG112673
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_returnSingleInt
add	esp, 16					
jmp	SHORT $pragma_out$311
cmp	DWORD PTR _zRight$[ebp], 0
je	SHORT $LN1@sqlite3Pra
push	1
push	1000000					
lea	edx, DWORD PTR _N$1[ebp]
push	edx
mov	eax, DWORD PTR _zRight$[ebp]
push	eax
call	_sqlite3Atoi64
add	esp, 16					
test	eax, eax
jne	SHORT $LN1@sqlite3Pra
mov	ecx, DWORD PTR _N$1[ebp+4]
push	ecx
mov	edx, DWORD PTR _N$1[ebp]
push	edx
call	_sqlite3_soft_heap_limit64
add	esp, 8
push	-1
push	-1
call	_sqlite3_soft_heap_limit64
add	esp, 8
push	edx
push	eax
push	OFFSET $SG112677
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_returnSingleInt
add	esp, 16					
mov	ecx, DWORD PTR _zLeft$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _zRight$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN24@sqlite3Pra
DD	$LN210@sqlite3Pra
DD	$LN158@sqlite3Pra
DD	$LN4@sqlite3Pra
DD	$LN202@sqlite3Pra
DD	$LN68@sqlite3Pra
DD	$LN111@sqlite3Pra
DD	$LN15@sqlite3Pra
DD	$LN172@sqlite3Pra
DD	$LN116@sqlite3Pra
DD	$LN251@sqlite3Pra
DD	$LN35@sqlite3Pra
DD	$LN98@sqlite3Pra
DD	$LN107@sqlite3Pra
DD	$LN205@sqlite3Pra
DD	$LN128@sqlite3Pra
DD	$LN122@sqlite3Pra
DD	$LN66@sqlite3Pra
DD	$LN227@sqlite3Pra
DD	$LN213@sqlite3Pra
DD	$LN4@sqlite3Pra
DD	$LN235@sqlite3Pra
DD	$LN238@sqlite3Pra
DD	$LN199@sqlite3Pra
DD	$LN248@sqlite3Pra
DD	$LN244@sqlite3Pra
DD	$LN5@sqlite3Pra
DD	$LN2@sqlite3Pra
DD	$LN135@sqlite3Pra
DD	$LN163@sqlite3Pra
DD	$LN151@sqlite3Pra
DD	$LN187@sqlite3Pra
DD	$LN184@sqlite3Pra
DD	$LN7@sqlite3Pra
DD	$LN12@sqlite3Pra
DD	$LN21@sqlite3Pra
DD	$LN20@sqlite3Pra
DD	$LN19@sqlite3Pra
DD	$LN18@sqlite3Pra
DB	0
DB	3
DB	3
DB	3
DB	3
DB	1
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	2
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	0
DB	3
DB	3
DB	3
DB	3
DB	1
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	2
ENDP
_sqlite3InitCallback PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pInit$[ebp]
mov	DWORD PTR _pData$[ebp], eax
mov	ecx, DWORD PTR _pData$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _pData$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _iDb$[ebp], ecx
mov	edx, DWORD PTR _iDb$[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
movzx	eax, WORD PTR [edx+78]
and	eax, -5					
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [edx+ecx+12]
mov	WORD PTR [ecx+78], ax
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN17@sqlite3Ini
push	0
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
mov	edx, DWORD PTR _pData$[ebp]
push	edx
call	_corruptSchema
add	esp, 12					
mov	eax, 1
jmp	$LN18@sqlite3Ini
cmp	DWORD PTR _argv$[ebp], 0
jne	SHORT $LN16@sqlite3Ini
xor	eax, eax
jmp	$LN18@sqlite3Ini
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _argv$[ebp]
cmp	DWORD PTR [ecx+eax], 0
jne	SHORT $LN15@sqlite3Ini
push	0
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
mov	eax, DWORD PTR _pData$[ebp]
push	eax
call	_corruptSchema
add	esp, 12					
jmp	$LN14@sqlite3Ini
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _argv$[ebp]
cmp	DWORD PTR [edx+ecx], 0
je	$LN13@sqlite3Ini
mov	eax, 4
shl	eax, 1
mov	ecx, 1
imul	edx, ecx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [ecx+eax]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	$LN13@sqlite3Ini
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR _iDb$[ebp]
mov	BYTE PTR [edx+136], al
mov	ecx, 4
shl	ecx, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
call	_sqlite3Atoi
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+132], eax
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+138], 0
push	0
lea	eax, DWORD PTR _pStmt$1[ebp]
push	eax
push	-1
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_prepare
add	esp, 20					
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+52]
mov	DWORD PTR _rc$3[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+136], 0
cmp	DWORD PTR _rc$3[ebp], 0
je	SHORT $LN12@sqlite3Ini
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+138]
test	eax, eax
je	SHORT $LN11@sqlite3Ini
jmp	SHORT $LN12@sqlite3Ini
mov	ecx, DWORD PTR _pData$[ebp]
mov	edx, DWORD PTR _rc$3[ebp]
mov	DWORD PTR [ecx+12], edx
cmp	DWORD PTR _rc$3[ebp], 7
jne	SHORT $LN9@sqlite3Ini
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
jmp	SHORT $LN12@sqlite3Ini
cmp	DWORD PTR _rc$3[ebp], 9
je	SHORT $LN12@sqlite3Ini
mov	ecx, DWORD PTR _rc$3[ebp]
and	ecx, 255				
cmp	ecx, 6
je	SHORT $LN12@sqlite3Ini
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_errmsg
add	esp, 4
push	eax
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
mov	eax, DWORD PTR [edx+ecx]
push	eax
mov	ecx, DWORD PTR _pData$[ebp]
push	ecx
call	_corruptSchema
add	esp, 12					
mov	edx, DWORD PTR _pStmt$1[ebp]
push	edx
call	_sqlite3_finalize
add	esp, 4
jmp	$LN14@sqlite3Ini
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _argv$[ebp]
cmp	DWORD PTR [edx+ecx], 0
jne	SHORT $LN5@sqlite3Ini
push	0
push	0
mov	eax, DWORD PTR _pData$[ebp]
push	eax
call	_corruptSchema
add	esp, 12					
jmp	SHORT $LN14@sqlite3Ini
mov	ecx, DWORD PTR _iDb$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindIndex
add	esp, 12					
mov	DWORD PTR _pIndex$2[ebp], eax
cmp	DWORD PTR _pIndex$2[ebp], 0
jne	SHORT $LN3@sqlite3Ini
jmp	SHORT $LN14@sqlite3Ini
mov	ecx, DWORD PTR _pIndex$2[ebp]
add	ecx, 44					
push	ecx
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _argv$[ebp]
mov	ecx, DWORD PTR [eax+edx]
push	ecx
call	_sqlite3GetInt32
add	esp, 8
test	eax, eax
jne	SHORT $LN14@sqlite3Ini
push	OFFSET $SG112734
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _argv$[ebp]
mov	edx, DWORD PTR [ecx+eax]
push	edx
mov	eax, DWORD PTR _pData$[ebp]
push	eax
call	_corruptSchema
add	esp, 12					
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Init PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 2
jne	SHORT $LN12@sqlite3Ini
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN13@sqlite3Ini
mov	DWORD PTR tv67[ebp], 0
mov	edx, DWORD PTR tv67[ebp]
mov	DWORD PTR _commit_internal$[ebp], edx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+137], 1
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN9@sqlite3Ini
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Ini
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN7@sqlite3Ini
mov	ecx, DWORD PTR _i$[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
movzx	edx, WORD PTR [ecx+78]
and	edx, 1
jne	SHORT $LN5@sqlite3Ini
cmp	DWORD PTR _i$[ebp], 1
jne	SHORT $LN6@sqlite3Ini
jmp	SHORT $LN8@sqlite3Ini
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3InitOne
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Ini
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ResetOneSchema
add	esp, 8
jmp	SHORT $LN8@sqlite3Ini
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@sqlite3Ini
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+20], 1
jle	SHORT $LN3@sqlite3Ini
mov	eax, 16					
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
movzx	ecx, WORD PTR [eax+78]
and	ecx, 1
jne	SHORT $LN3@sqlite3Ini
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
push	1
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3InitOne
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@sqlite3Ini
push	1
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ResetOneSchema
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+137], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Ini
cmp	DWORD PTR _commit_internal$[ebp], 0
je	SHORT $LN1@sqlite3Ini
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3CommitInternalChanges
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprListDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN4@sqlite3Exp
jmp	$LN5@sqlite3Exp
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$[ebp]
add	eax, 24					
mov	DWORD PTR _pItem$[ebp], eax
mov	ecx, DWORD PTR _pList$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx]
jge	SHORT $LN1@sqlite3Exp
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Exp
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pList$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprListSetSpan PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN2@sqlite3Exp
mov	edx, DWORD PTR _pList$[ebp]
mov	eax, DWORD PTR [edx]
sub	eax, 1
imul	ecx, eax, 24
mov	edx, DWORD PTR _pList$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$1[ebp], ecx
mov	eax, DWORD PTR _pItem$1[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pSpan$[ebp]
mov	ecx, DWORD PTR _pSpan$[ebp]
mov	edx, DWORD PTR [eax+8]
sub	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pSpan$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	ecx, DWORD PTR _pItem$1[ebp]
mov	DWORD PTR [ecx+8], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprListSetName PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pList$[ebp], 0
je	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
imul	edx, ecx, 24
mov	eax, DWORD PTR _pList$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _pItem$1[ebp], edx
mov	ecx, DWORD PTR _pName$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pName$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbStrNDup
add	esp, 12					
mov	ecx, DWORD PTR _pItem$1[ebp]
mov	DWORD PTR [ecx+4], eax
cmp	DWORD PTR _dequote$[ebp], 0
je	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _pItem$1[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _pItem$1[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3Dequote
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprListAppend PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN7@sqlite3Exp
push	8
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pList$[ebp], eax
cmp	DWORD PTR _pList$[ebp], 0
jne	SHORT $LN6@sqlite3Exp
jmp	$no_mem$10
push	24					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR [ecx+4], eax
mov	edx, DWORD PTR _pList$[ebp]
cmp	DWORD PTR [edx+4], 0
jne	SHORT $LN5@sqlite3Exp
jmp	$no_mem$10
jmp	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax]
sub	ecx, 1
mov	edx, DWORD PTR _pList$[ebp]
and	ecx, DWORD PTR [edx]
jne	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax]
shl	ecx, 1
imul	edx, ecx, 24
push	edx
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _a$2[ebp], eax
cmp	DWORD PTR _a$2[ebp], 0
jne	SHORT $LN2@sqlite3Exp
jmp	SHORT $no_mem$10
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR _a$2[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, 1
test	edx, edx
je	SHORT $LN1@sqlite3Exp
mov	eax, DWORD PTR _pList$[ebp]
imul	ecx, DWORD PTR [eax], 24
mov	edx, DWORD PTR _pList$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$1[ebp], ecx
mov	eax, DWORD PTR _pList$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 1
mov	edx, DWORD PTR _pList$[ebp]
mov	DWORD PTR [edx], ecx
push	24					
push	0
mov	eax, DWORD PTR _pItem$1[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pItem$1[ebp]
mov	edx, DWORD PTR _pExpr$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pList$[ebp]
jmp	SHORT $LN8@sqlite3Exp
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pList$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprListDelete
add	esp, 8
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprDelete PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN6@sqlite3Exp
jmp	$LN7@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 16384				
jne	SHORT $LN5@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
and	eax, 65536				
je	SHORT $LN4@sqlite3Exp
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 2048				
je	SHORT $LN3@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SelectDelete
add	esp, 8
jmp	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 32768				
jne	SHORT $LN7@sqlite3Exp
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3ExprAssignVarNumber PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN19@sqlite3Exp
jmp	$LN20@sqlite3Exp
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _z$[ebp], eax
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
jne	SHORT $LN18@sqlite3Exp
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+440]
add	edx, 1
mov	DWORD PTR tv74[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv74[ebp]
mov	DWORD PTR [eax+440], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	ax, WORD PTR tv74[ebp]
mov	WORD PTR [edx+32], ax
jmp	$LN17@sqlite3Exp
xor	ecx, ecx
mov	WORD PTR _x$6[ebp], cx
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$3[ebp], eax
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _z$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 63					
jne	$LN16@sqlite3Exp
push	1
mov	ecx, DWORD PTR _n$3[ebp]
sub	ecx, 1
push	ecx
lea	edx, DWORD PTR _i$1[ebp]
push	edx
mov	eax, 1
shl	eax, 0
add	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Atoi64
add	esp, 16					
test	eax, eax
jne	SHORT $LN22@sqlite3Exp
mov	DWORD PTR tv91[ebp], 1
jmp	SHORT $LN23@sqlite3Exp
mov	DWORD PTR tv91[ebp], 0
mov	ecx, DWORD PTR tv91[ebp]
mov	DWORD PTR _bOk$2[ebp], ecx
mov	dx, WORD PTR _i$1[ebp]
mov	WORD PTR _x$6[ebp], dx
mov	eax, DWORD PTR _pExpr$[ebp]
mov	cx, WORD PTR _x$6[ebp]
mov	WORD PTR [eax+32], cx
cmp	DWORD PTR _bOk$2[ebp], 0
je	SHORT $LN14@sqlite3Exp
cmp	DWORD PTR _i$1[ebp+4], 0
jl	SHORT $LN14@sqlite3Exp
jg	SHORT $LN24@sqlite3Exp
cmp	DWORD PTR _i$1[ebp], 1
jb	SHORT $LN14@sqlite3Exp
mov	edx, 4
imul	eax, edx, 9
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [ecx+eax+88]
cdq
mov	DWORD PTR tv276[ebp], eax
mov	DWORD PTR tv276[ebp+4], edx
mov	edx, DWORD PTR _i$1[ebp+4]
cmp	edx, DWORD PTR tv276[ebp+4]
jl	SHORT $LN15@sqlite3Exp
jg	SHORT $LN14@sqlite3Exp
mov	eax, DWORD PTR _i$1[ebp]
cmp	eax, DWORD PTR tv276[ebp]
jbe	SHORT $LN15@sqlite3Exp
mov	ecx, 4
imul	edx, ecx, 9
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+edx+88]
push	ecx
push	OFFSET $SG103355
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ErrorMsg
add	esp, 12					
xor	eax, eax
mov	WORD PTR _x$6[ebp], ax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [ecx+440]
cdq
mov	DWORD PTR tv296[ebp], eax
mov	DWORD PTR tv296[ebp+4], edx
mov	edx, DWORD PTR _i$1[ebp+4]
cmp	edx, DWORD PTR tv296[ebp+4]
jl	SHORT $LN13@sqlite3Exp
jg	SHORT $LN26@sqlite3Exp
mov	eax, DWORD PTR _i$1[ebp]
cmp	eax, DWORD PTR tv296[ebp]
jbe	SHORT $LN13@sqlite3Exp
mov	ecx, DWORD PTR _i$1[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+440], ecx
jmp	$LN12@sqlite3Exp
xor	eax, eax
mov	WORD PTR _i$5[ebp], ax
jmp	SHORT $LN11@sqlite3Exp
mov	cx, WORD PTR _i$5[ebp]
add	cx, 1
mov	WORD PTR _i$5[ebp], cx
movsx	edx, WORD PTR _i$5[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
cmp	edx, DWORD PTR [eax+444]
jge	SHORT $LN9@sqlite3Exp
movsx	ecx, WORD PTR _i$5[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+472]
cmp	DWORD PTR [eax+ecx*4], 0
je	SHORT $LN8@sqlite3Exp
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
movsx	edx, WORD PTR _i$5[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+472]
mov	edx, DWORD PTR [ecx+edx*4]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN8@sqlite3Exp
movsx	eax, WORD PTR _i$5[ebp]
add	eax, 1
mov	WORD PTR _x$6[ebp], ax
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	dx, WORD PTR _x$6[ebp]
mov	WORD PTR [ecx+32], dx
jmp	SHORT $LN9@sqlite3Exp
jmp	SHORT $LN10@sqlite3Exp
movsx	eax, WORD PTR _x$6[ebp]
test	eax, eax
jne	SHORT $LN12@sqlite3Exp
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+440]
add	edx, 1
mov	DWORD PTR tv170[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR tv170[ebp]
mov	DWORD PTR [eax+440], ecx
mov	edx, DWORD PTR _pExpr$[ebp]
mov	ax, WORD PTR tv170[ebp]
mov	WORD PTR [edx+32], ax
mov	cx, WORD PTR tv170[ebp]
mov	WORD PTR _x$6[ebp], cx
movsx	edx, WORD PTR _x$6[ebp]
test	edx, edx
jle	$LN17@sqlite3Exp
movsx	eax, WORD PTR _x$6[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	eax, DWORD PTR [ecx+444]
jle	SHORT $LN5@sqlite3Exp
movsx	edx, WORD PTR _x$6[ebp]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+472]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _a$4[ebp], eax
cmp	DWORD PTR _a$4[ebp], 0
jne	SHORT $LN4@sqlite3Exp
jmp	$LN20@sqlite3Exp
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _a$4[ebp]
mov	DWORD PTR [eax+472], ecx
movsx	edx, WORD PTR _x$6[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
sub	edx, DWORD PTR [eax+444]
shl	edx, 2
push	edx
push	0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+444]
mov	eax, DWORD PTR _a$4[ebp]
lea	ecx, DWORD PTR [eax+edx*4]
push	ecx
call	_memset
add	esp, 12					
movsx	edx, WORD PTR _x$6[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+444], edx
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _z$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 63					
jne	SHORT $LN2@sqlite3Exp
movsx	edx, WORD PTR _x$6[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+472]
cmp	DWORD PTR [ecx+edx*4-4], 0
jne	SHORT $LN17@sqlite3Exp
movsx	edx, WORD PTR _x$6[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+472]
mov	edx, DWORD PTR [ecx+edx*4-4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _n$3[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbStrNDup
add	esp, 12					
movsx	ecx, WORD PTR _x$6[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [edx+472]
mov	DWORD PTR [edx+ecx*4-4], eax
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
jne	SHORT $LN20@sqlite3Exp
mov	ecx, 4
imul	edx, ecx, 9
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+440]
cmp	eax, DWORD PTR [ecx+edx+88]
jle	SHORT $LN20@sqlite3Exp
push	OFFSET $SG103374
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprFunction PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
push	1
mov	edx, DWORD PTR _pToken$[ebp]
push	edx
push	153					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprAlloc
add	esp, 16					
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _pList$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprListDelete
add	esp, 8
xor	eax, eax
jmp	SHORT $LN2@sqlite3Exp
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _pList$[ebp]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR _pNew$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprSetHeight
add	esp, 8
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprAnd PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pLeft$[ebp], 0
jne	SHORT $LN7@sqlite3Exp
mov	eax, DWORD PTR _pRight$[ebp]
jmp	$LN8@sqlite3Exp
jmp	$LN8@sqlite3Exp
cmp	DWORD PTR _pRight$[ebp], 0
jne	SHORT $LN5@sqlite3Exp
mov	eax, DWORD PTR _pLeft$[ebp]
jmp	$LN8@sqlite3Exp
jmp	$LN8@sqlite3Exp
mov	eax, DWORD PTR _pLeft$[ebp]
push	eax
call	_exprAlwaysFalse
add	esp, 4
test	eax, eax
jne	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pRight$[ebp]
push	ecx
call	_exprAlwaysFalse
add	esp, 4
test	eax, eax
je	SHORT $LN3@sqlite3Exp
mov	edx, DWORD PTR _pLeft$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
mov	ecx, DWORD PTR _pRight$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprDelete
add	esp, 8
push	0
mov	eax, 8
imul	ecx, eax, 0
add	ecx, OFFSET _sqlite3IntTokens
push	ecx
push	132					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprAlloc
add	esp, 16					
jmp	SHORT $LN8@sqlite3Exp
jmp	SHORT $LN8@sqlite3Exp
push	0
push	0
push	72					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprAlloc
add	esp, 16					
mov	DWORD PTR _pNew$1[ebp], eax
mov	ecx, DWORD PTR _pRight$[ebp]
push	ecx
mov	edx, DWORD PTR _pLeft$[ebp]
push	edx
mov	eax, DWORD PTR _pNew$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprAttachSubtrees
add	esp, 16					
mov	eax, DWORD PTR _pNew$1[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PExpr PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _op$[ebp], 72			
jne	SHORT $LN3@sqlite3PEx
cmp	DWORD PTR _pLeft$[ebp], 0
je	SHORT $LN3@sqlite3PEx
cmp	DWORD PTR _pRight$[ebp], 0
je	SHORT $LN3@sqlite3PEx
mov	eax, DWORD PTR _pRight$[ebp]
push	eax
mov	ecx, DWORD PTR _pLeft$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprAnd
add	esp, 12					
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN2@sqlite3PEx
push	1
mov	ecx, DWORD PTR _pToken$[ebp]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3ExprAlloc
add	esp, 16					
mov	DWORD PTR _p$[ebp], eax
mov	edx, DWORD PTR _pRight$[ebp]
push	edx
mov	eax, DWORD PTR _pLeft$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ExprAttachSubtrees
add	esp, 16					
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3PEx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ExprCheckHeight
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprAttachSubtrees PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pRoot$[ebp], 0
jne	SHORT $LN4@sqlite3Exp
mov	eax, DWORD PTR _pLeft$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ExprDelete
add	esp, 8
mov	edx, DWORD PTR _pRight$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExprDelete
add	esp, 8
jmp	SHORT $LN5@sqlite3Exp
cmp	DWORD PTR _pRight$[ebp], 0
je	SHORT $LN2@sqlite3Exp
mov	ecx, DWORD PTR _pRoot$[ebp]
mov	edx, DWORD PTR _pRight$[ebp]
mov	DWORD PTR [ecx+16], edx
mov	eax, DWORD PTR _pRight$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 256				
mov	edx, DWORD PTR _pRoot$[ebp]
or	ecx, DWORD PTR [edx+4]
mov	eax, DWORD PTR _pRoot$[ebp]
mov	DWORD PTR [eax+4], ecx
cmp	DWORD PTR _pLeft$[ebp], 0
je	SHORT $LN1@sqlite3Exp
mov	ecx, DWORD PTR _pRoot$[ebp]
mov	edx, DWORD PTR _pLeft$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pLeft$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 256				
mov	edx, DWORD PTR _pRoot$[ebp]
or	ecx, DWORD PTR [edx+4]
mov	eax, DWORD PTR _pRoot$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	ecx, DWORD PTR _pRoot$[ebp]
push	ecx
call	_exprSetHeight
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3Expr PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _zToken$[ebp]
mov	DWORD PTR _x$[ebp], eax
cmp	DWORD PTR _zToken$[ebp], 0
je	SHORT $LN3@sqlite3Exp
mov	ecx, DWORD PTR _zToken$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR tv67[ebp], eax
jmp	SHORT $LN4@sqlite3Exp
mov	DWORD PTR tv67[ebp], 0
mov	edx, DWORD PTR tv67[ebp]
mov	DWORD PTR _x$[ebp+4], edx
push	0
lea	eax, DWORD PTR _x$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ExprAlloc
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ExprAlloc PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _nExtra$[ebp], 0
mov	DWORD PTR _iValue$[ebp], 0
cmp	DWORD PTR _pToken$[ebp], 0
je	SHORT $LN11@sqlite3Exp
cmp	DWORD PTR _op$[ebp], 132		
jne	SHORT $LN9@sqlite3Exp
mov	eax, DWORD PTR _pToken$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN9@sqlite3Exp
lea	ecx, DWORD PTR _iValue$[ebp]
push	ecx
mov	edx, DWORD PTR _pToken$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3GetInt32
add	esp, 8
test	eax, eax
jne	SHORT $LN11@sqlite3Exp
mov	ecx, DWORD PTR _pToken$[ebp]
mov	edx, DWORD PTR [ecx+4]
add	edx, 1
mov	DWORD PTR _nExtra$[ebp], edx
mov	eax, DWORD PTR _nExtra$[ebp]
add	eax, 48					
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
je	$LN8@sqlite3Exp
mov	edx, DWORD PTR _pNew$[ebp]
mov	al, BYTE PTR _op$[ebp]
mov	BYTE PTR [edx], al
or	ecx, -1
mov	edx, DWORD PTR _pNew$[ebp]
mov	WORD PTR [edx+34], cx
cmp	DWORD PTR _pToken$[ebp], 0
je	$LN7@sqlite3Exp
cmp	DWORD PTR _nExtra$[ebp], 0
jne	SHORT $LN6@sqlite3Exp
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+4]
or	ecx, 1024				
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR _iValue$[ebp]
mov	DWORD PTR [eax+8], ecx
jmp	$LN7@sqlite3Exp
mov	edx, 48					
shl	edx, 0
add	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+8], edx
mov	ecx, DWORD PTR _pToken$[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN4@sqlite3Exp
mov	edx, DWORD PTR _pToken$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pToken$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pNew$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _pToken$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	BYTE PTR [edx+eax], 0
cmp	DWORD PTR _dequote$[ebp], 0
je	SHORT $LN7@sqlite3Exp
cmp	DWORD PTR _nExtra$[ebp], 3
jl	SHORT $LN7@sqlite3Exp
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _pToken$[ebp]
mov	eax, DWORD PTR [edx]
movsx	ecx, BYTE PTR [eax+ecx]
mov	DWORD PTR _c$1[ebp], ecx
cmp	DWORD PTR _c$1[ebp], 39			
je	SHORT $LN2@sqlite3Exp
cmp	DWORD PTR _c$1[ebp], 34			
je	SHORT $LN2@sqlite3Exp
cmp	DWORD PTR _c$1[ebp], 91			
je	SHORT $LN2@sqlite3Exp
cmp	DWORD PTR _c$1[ebp], 96			
jne	SHORT $LN7@sqlite3Exp
mov	edx, DWORD PTR _pNew$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_sqlite3Dequote
add	esp, 4
cmp	DWORD PTR _c$1[ebp], 34			
jne	SHORT $LN7@sqlite3Exp
mov	ecx, DWORD PTR _pNew$[ebp]
mov	edx, DWORD PTR [ecx+4]
or	edx, 64					
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+4], edx
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+24], 1
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ClearTempRegCache PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+19], 0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+56], 0
pop	ebp
ret	0
ENDP
_sqlite3ReleaseTempRange PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _nReg$[ebp]
push	eax
mov	ecx, DWORD PTR _iReg$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ExprCacheRemove
add	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _nReg$[ebp]
cmp	ecx, DWORD PTR [eax+56]
jle	SHORT $LN2@sqlite3Rel
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _nReg$[ebp]
mov	DWORD PTR [edx+56], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _iReg$[ebp]
mov	DWORD PTR [ecx+60], edx
pop	ebp
ret	0
ENDP
_sqlite3GetTempRange PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+56]
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _nReg$[ebp]
cmp	ecx, DWORD PTR _n$[ebp]
jg	SHORT $LN2@sqlite3Get
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+60]
add	eax, DWORD PTR _nReg$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+60], eax
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+56]
sub	eax, DWORD PTR _nReg$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+56], eax
jmp	SHORT $LN1@sqlite3Get
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
add	edx, DWORD PTR _nReg$[ebp]
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], edx
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ReleaseTempReg PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _iReg$[ebp], 0
je	SHORT $LN6@sqlite3Rel
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+19]
cmp	ecx, 8
jge	SHORT $LN6@sqlite3Rel
mov	DWORD PTR _i$1[ebp], 0
mov	edx, DWORD PTR _pParse$[ebp]
add	edx, 116				
mov	DWORD PTR _p$2[ebp], edx
jmp	SHORT $LN4@sqlite3Rel
mov	eax, DWORD PTR _i$1[ebp]
add	eax, 1
mov	DWORD PTR _i$1[ebp], eax
mov	ecx, DWORD PTR _p$2[ebp]
add	ecx, 20					
mov	DWORD PTR _p$2[ebp], ecx
cmp	DWORD PTR _i$1[ebp], 10			
jge	SHORT $LN2@sqlite3Rel
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx+12]
cmp	eax, DWORD PTR _iReg$[ebp]
jne	SHORT $LN1@sqlite3Rel
mov	ecx, DWORD PTR _p$2[ebp]
mov	BYTE PTR [ecx+6], 1
jmp	SHORT $LN6@sqlite3Rel
jmp	SHORT $LN3@sqlite3Rel
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+19]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _iReg$[ebp]
mov	DWORD PTR [ecx+eax*4+24], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	cl, BYTE PTR [eax+19]
add	cl, 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [edx+19], cl
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3GetTempReg PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+19]
test	ecx, ecx
jne	SHORT $LN1@sqlite3Get
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+72]
add	eax, 1
mov	DWORD PTR tv69[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR [ecx+72], edx
mov	eax, DWORD PTR tv69[ebp]
jmp	SHORT $LN2@sqlite3Get
mov	eax, DWORD PTR _pParse$[ebp]
mov	cl, BYTE PTR [eax+19]
sub	cl, 1
mov	BYTE PTR tv73[ebp], cl
mov	edx, DWORD PTR _pParse$[ebp]
mov	al, BYTE PTR tv73[ebp]
mov	BYTE PTR [edx+19], al
movzx	ecx, BYTE PTR tv73[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+24]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3FinishCoding PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
je	SHORT $LN23@sqlite3Fin
jmp	$LN24@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
je	SHORT $LN22@sqlite3Fin
jmp	$LN24@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
je	SHORT $LN21@sqlite3Fin
jmp	$LN24@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3GetVdbe
add	esp, 4
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	$LN20@sqlite3Fin
push	58					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeDeletePriorOpcode
add	esp, 8
test	eax, eax
je	SHORT $LN18@sqlite3Fin
jmp	SHORT $LN19@sqlite3Fin
push	24					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp0
add	esp, 8
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
jne	$LN20@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+332], 0
jne	SHORT $LN16@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+316], 0
je	$LN20@sqlite3Fin
push	0
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeJumpHere
add	esp, 8
mov	DWORD PTR _iDb$4[ebp], 0
mov	DWORD PTR _mask$3[ebp], 1
jmp	SHORT $LN15@sqlite3Fin
mov	eax, DWORD PTR _mask$3[ebp]
shl	eax, 1
mov	DWORD PTR _mask$3[ebp], eax
mov	ecx, DWORD PTR _iDb$4[ebp]
add	ecx, 1
mov	DWORD PTR _iDb$4[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _iDb$4[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	$LN13@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _mask$3[ebp]
and	edx, DWORD PTR [ecx+332]
jne	SHORT $LN12@sqlite3Fin
jmp	SHORT $LN14@sqlite3Fin
mov	eax, DWORD PTR _iDb$4[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeUsesBtree
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _mask$3[ebp]
and	eax, DWORD PTR [edx+328]
je	SHORT $LN26@sqlite3Fin
mov	DWORD PTR tv146[ebp], 1
jmp	SHORT $LN27@sqlite3Fin
mov	DWORD PTR tv146[ebp], 0
mov	ecx, DWORD PTR _iDb$4[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+12]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _iDb$4[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+336]
push	edx
mov	eax, DWORD PTR tv146[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$4[ebp]
push	ecx
push	4
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+137]
test	ecx, ecx
jne	SHORT $LN11@sqlite3Fin
push	1
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeChangeP5
add	esp, 8
jmp	$LN14@sqlite3Fin
mov	DWORD PTR _i$5[ebp], 0
jmp	SHORT $LN10@sqlite3Fin
mov	eax, DWORD PTR _i$5[ebp]
add	eax, 1
mov	DWORD PTR _i$5[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _i$5[ebp]
cmp	edx, DWORD PTR [ecx+452]
jge	SHORT $LN8@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+520]
mov	edx, DWORD PTR _i$5[ebp]
mov	eax, DWORD PTR [ecx+edx*4]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3GetVTable
add	esp, 8
mov	DWORD PTR _vtab$1[ebp], eax
push	-10					
mov	edx, DWORD PTR _vtab$1[ebp]
push	edx
push	0
push	0
push	0
push	141					
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3VdbeAddOp4
add	esp, 28					
jmp	SHORT $LN9@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+452], 0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_codeTableLocks
add	esp, 4
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3AutoincrementBegin
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+316], 0
je	SHORT $LN7@sqlite3Fin
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+316]
mov	DWORD PTR _pEL$2[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+23], 0
mov	DWORD PTR _i$5[ebp], 0
jmp	SHORT $LN6@sqlite3Fin
mov	edx, DWORD PTR _i$5[ebp]
add	edx, 1
mov	DWORD PTR _i$5[ebp], edx
mov	eax, DWORD PTR _pEL$2[ebp]
mov	ecx, DWORD PTR _i$5[ebp]
cmp	ecx, DWORD PTR [eax]
jge	SHORT $LN7@sqlite3Fin
imul	edx, DWORD PTR _i$5[ebp], 24
mov	eax, DWORD PTR _pEL$2[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx+edx+20]
push	edx
imul	eax, DWORD PTR _i$5[ebp], 24
mov	ecx, DWORD PTR _pEL$2[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+eax]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ExprCode
add	esp, 12					
jmp	SHORT $LN5@sqlite3Fin
push	1
push	0
push	16					
mov	edx, DWORD PTR _v$[ebp]
push	edx
call	_sqlite3VdbeAddOp2
add	esp, 16					
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN3@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+64], 0
jne	SHORT $LN3@sqlite3Fin
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
jne	SHORT $LN3@sqlite3Fin
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+404], 0
je	SHORT $LN2@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+68], 0
jne	SHORT $LN2@sqlite3Fin
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], 1
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeMakeReady
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+12], 101			
mov	eax, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [eax+16], 0
jmp	SHORT $LN1@sqlite3Fin
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+12], 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+72], 0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+76], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+440], 0
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+332], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3RunParser PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	DWORD PTR _nErr$[ebp], 0
mov	DWORD PTR _lastTokenParsed$[ebp], -1
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+edx+88]
mov	DWORD PTR _mxSqlLen$[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+140], 0
jne	SHORT $LN31@sqlite3Run
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+232], 0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+12], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _zSql$[ebp]
mov	DWORD PTR [edx+480], eax
mov	DWORD PTR _i$[ebp], 0
push	OFFSET _sqlite3Malloc
call	_sqlite3ParserAlloc
add	esp, 4
mov	DWORD PTR _pEngine$[ebp], eax
cmp	DWORD PTR _pEngine$[ebp], 0
jne	SHORT $LN30@sqlite3Run
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
mov	eax, 7
jmp	$LN32@sqlite3Run
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR [edx+242]
mov	BYTE PTR _enableLookaside$[ebp], al
mov	ecx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [ecx+268], 0
je	SHORT $LN28@sqlite3Run
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+242], 1
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	$abort_parse$34
mov	edx, DWORD PTR _zSql$[ebp]
add	edx, DWORD PTR _i$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	$abort_parse$34
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+504], ecx
lea	eax, DWORD PTR _tokenType$[ebp]
push	eax
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, DWORD PTR _i$[ebp]
push	ecx
call	_sqlite3GetToken
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+508], eax
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, DWORD PTR [eax+508]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _mxSqlLen$[ebp]
jle	SHORT $LN26@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+12], 18			
jmp	$abort_parse$34
mov	ecx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR tv133[ebp], ecx
cmp	DWORD PTR tv133[ebp], 1
je	$LN20@sqlite3Run
cmp	DWORD PTR tv133[ebp], 150		
je	SHORT $LN21@sqlite3Run
cmp	DWORD PTR tv133[ebp], 151		
je	SHORT $LN23@sqlite3Run
jmp	SHORT $LN19@sqlite3Run
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+232], 0
je	SHORT $LN22@sqlite3Run
push	OFFSET $SG120166
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+12], 9
jmp	$abort_parse$34
jmp	$LN24@sqlite3Run
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
add	edx, 504				
push	edx
push	OFFSET $SG120169
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3MPrintf
add	esp, 12					
mov	ecx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _nErr$[ebp]
add	edx, 1
mov	DWORD PTR _nErr$[ebp], edx
jmp	SHORT $abort_parse$34
mov	eax, DWORD PTR _zSql$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+480], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+508]
push	ecx
mov	edx, DWORD PTR [eax+504]
push	edx
mov	eax, DWORD PTR _tokenType$[ebp]
push	eax
mov	ecx, DWORD PTR _pEngine$[ebp]
push	ecx
call	_sqlite3Parser
add	esp, 20					
mov	edx, DWORD PTR _tokenType$[ebp]
mov	DWORD PTR _lastTokenParsed$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN24@sqlite3Run
jmp	SHORT $abort_parse$34
jmp	$LN28@sqlite3Run
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, DWORD PTR _i$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
jne	SHORT $LN17@sqlite3Run
cmp	DWORD PTR _nErr$[ebp], 0
jne	SHORT $LN17@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN17@sqlite3Run
cmp	DWORD PTR _lastTokenParsed$[ebp], 1
je	SHORT $LN16@sqlite3Run
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+508]
push	eax
mov	ecx, DWORD PTR [edx+504]
push	ecx
push	1
mov	edx, DWORD PTR _pEngine$[ebp]
push	edx
call	_sqlite3Parser
add	esp, 20					
mov	eax, DWORD PTR _zSql$[ebp]
add	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+480], eax
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+508]
push	ecx
mov	edx, DWORD PTR [eax+504]
push	edx
push	0
mov	eax, DWORD PTR _pEngine$[ebp]
push	eax
call	_sqlite3Parser
add	esp, 20					
push	OFFSET _sqlite3_free
mov	ecx, DWORD PTR _pEngine$[ebp]
push	ecx
call	_sqlite3ParserFree
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
mov	al, BYTE PTR _enableLookaside$[ebp]
mov	BYTE PTR [edx+242], al
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN15@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+12], 7
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+12], 0
je	SHORT $LN14@sqlite3Run
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+12], 101			
je	SHORT $LN14@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN14@sqlite3Run
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3ErrStr
add	esp, 4
push	eax
push	OFFSET $SG120177
mov	eax, DWORD PTR _db$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
add	ecx, 4
push	ecx
call	_sqlite3SetString
add	esp, 16					
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN13@sqlite3Run
mov	eax, DWORD PTR _pzErrMsg$[ebp]
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pzErrMsg$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	OFFSET $SG120180
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_log
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+4], 0
mov	edx, DWORD PTR _nErr$[ebp]
add	edx, 1
mov	DWORD PTR _nErr$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+8], 0
je	SHORT $LN12@sqlite3Run
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+64], 0
jle	SHORT $LN12@sqlite3Run
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+18]
test	eax, eax
jne	SHORT $LN12@sqlite3Run
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
call	_sqlite3VdbeDelete
add	esp, 4
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+18]
test	edx, edx
jne	SHORT $LN11@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+400]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+400], 0
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+396], 0
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+520]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _pParse$[ebp]
movzx	edx, BYTE PTR [ecx+451]
test	edx, edx
jne	SHORT $LN10@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DeleteTable
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+449]
test	ecx, ecx
je	SHORT $LN9@sqlite3Run
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+532]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3WithDelete
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+488]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTrigger
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+444]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN8@sqlite3Run
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN6@sqlite3Run
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+472]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN7@sqlite3Run
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+472]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [ecx+404], 0
je	SHORT $LN3@sqlite3Run
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+404]
mov	DWORD PTR _p$2[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _p$2[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx+404], eax
mov	ecx, DWORD PTR _p$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN5@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [eax+524], 0
je	SHORT $LN2@sqlite3Run
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+524]
mov	DWORD PTR _p$1[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR _p$1[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR [eax+524], edx
mov	eax, DWORD PTR _p$1[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTable
add	esp, 8
jmp	SHORT $LN3@sqlite3Run
cmp	DWORD PTR _nErr$[ebp], 0
jle	SHORT $LN1@sqlite3Run
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN1@sqlite3Run
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+12], 1
mov	eax, DWORD PTR _nErr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3KeywordCode PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_keywordCode
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3Dequote PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN15@sqlite3Deq
or	eax, -1
jmp	$LN16@sqlite3Deq
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _z$[ebp]
mov	al, BYTE PTR [edx+ecx]
mov	BYTE PTR _quote$[ebp], al
movsx	ecx, BYTE PTR _quote$[ebp]
mov	DWORD PTR tv68[ebp], ecx
mov	edx, DWORD PTR tv68[ebp]
sub	edx, 34					
mov	DWORD PTR tv68[ebp], edx
cmp	DWORD PTR tv68[ebp], 62			
ja	SHORT $LN8@sqlite3Deq
mov	eax, DWORD PTR tv68[ebp]
movzx	ecx, BYTE PTR $LN18@sqlite3Deq[eax]
jmp	DWORD PTR $LN19@sqlite3Deq[ecx*4]
jmp	SHORT $LN13@sqlite3Deq
jmp	SHORT $LN13@sqlite3Deq
jmp	SHORT $LN13@sqlite3Deq
mov	BYTE PTR _quote$[ebp], 93		
jmp	SHORT $LN13@sqlite3Deq
or	eax, -1
jmp	$LN16@sqlite3Deq
mov	DWORD PTR _i$[ebp], 1
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN7@sqlite3Deq
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax]
movsx	edx, BYTE PTR _quote$[ebp]
cmp	ecx, edx
jne	SHORT $LN4@sqlite3Deq
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [eax+1]
movsx	edx, BYTE PTR _quote$[ebp]
cmp	ecx, edx
jne	SHORT $LN3@sqlite3Deq
mov	eax, DWORD PTR _z$[ebp]
add	eax, DWORD PTR _j$[ebp]
mov	cl, BYTE PTR _quote$[ebp]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN2@sqlite3Deq
jmp	SHORT $LN5@sqlite3Deq
jmp	SHORT $LN1@sqlite3Deq
mov	ecx, DWORD PTR _z$[ebp]
add	ecx, DWORD PTR _j$[ebp]
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _i$[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR [ecx], al
mov	ecx, DWORD PTR _j$[ebp]
add	ecx, 1
mov	DWORD PTR _j$[ebp], ecx
jmp	SHORT $LN6@sqlite3Deq
mov	edx, DWORD PTR _z$[ebp]
add	edx, DWORD PTR _j$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _j$[ebp]
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN11@sqlite3Deq
DD	$LN12@sqlite3Deq
DD	$LN9@sqlite3Deq
DD	$LN10@sqlite3Deq
DD	$LN8@sqlite3Deq
DB	0
DB	4
DB	4
DB	4
DB	4
DB	1
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	4
DB	2
DB	4
DB	4
DB	4
DB	4
DB	3
ENDP
_sqlite3ErrorMsg PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
lea	edx, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
push	eax
mov	ecx, DWORD PTR _zFormat$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3VMPrintf
add	esp, 12					
mov	DWORD PTR _zMsg$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+67]
test	ecx, ecx
je	SHORT $LN2@sqlite3Err
mov	edx, DWORD PTR _zMsg$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN3@sqlite3Err
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+64]
add	edx, 1
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+64], edx
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _zMsg$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+12], 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3SetString PROC
push	ebp
mov	ebp, esp
sub	esp, 8
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VMPrintf
add	esp, 12					
mov	DWORD PTR _z$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
mov	ecx, DWORD PTR _pz$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _pz$[ebp]
mov	edx, DWORD PTR _z$[ebp]
mov	DWORD PTR [ecx], edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MAppendf PROC
push	ebp
mov	ebp, esp
sub	esp, 8
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VMPrintf
add	esp, 12					
mov	DWORD PTR _z$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
mov	ecx, DWORD PTR _zStr$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VMPrintf PROC
push	ebp
mov	ebp, esp
sub	esp, 108				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+ecx+88]
push	eax
push	70					
lea	ecx, DWORD PTR _zBase$[ebp]
push	ecx
lea	edx, DWORD PTR _acc$[ebp]
push	edx
call	_sqlite3StrAccumInit
add	esp, 16					
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR _acc$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
push	1
lea	eax, DWORD PTR _acc$[ebp]
push	eax
call	_sqlite3VXPrintf
add	esp, 16					
lea	ecx, DWORD PTR _acc$[ebp]
push	ecx
call	_sqlite3StrAccumFinish
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
movzx	edx, BYTE PTR _acc$[ebp+25]
cmp	edx, 1
jne	SHORT $LN1@sqlite3VMP
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	eax, DWORD PTR _z$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MPrintf PROC
push	ebp
mov	ebp, esp
sub	esp, 8
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VMPrintf
add	esp, 12					
mov	DWORD PTR _z$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3XPrintf PROC
push	ebp
mov	ebp, esp
push	ecx
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _bFlags$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VXPrintf
add	esp, 16					
mov	DWORD PTR _ap$[ebp], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VXPrintf PROC
push	ebp
mov	ebp, esp
sub	esp, 336				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	BYTE PTR _xtype$[ebp], 0
mov	DWORD PTR _pArgList$[ebp], 0
mov	DWORD PTR _bufpt$[ebp], 0
cmp	DWORD PTR _bFlags$[ebp], 0
je	SHORT $LN216@sqlite3VXP
mov	eax, DWORD PTR _bFlags$[ebp]
and	eax, 2
mov	BYTE PTR _bArgList$[ebp], al
movzx	ecx, BYTE PTR _bArgList$[ebp]
test	ecx, ecx
je	SHORT $LN215@sqlite3VXP
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	ecx, DWORD PTR [eax-4]
mov	DWORD PTR _pArgList$[ebp], ecx
mov	edx, DWORD PTR _bFlags$[ebp]
and	edx, 1
mov	BYTE PTR _useIntern$[ebp], dl
jmp	SHORT $LN214@sqlite3VXP
mov	BYTE PTR _useIntern$[ebp], 0
mov	al, BYTE PTR _useIntern$[ebp]
mov	BYTE PTR _bArgList$[ebp], al
jmp	SHORT $LN213@sqlite3VXP
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
je	$LN211@sqlite3VXP
cmp	DWORD PTR _c$[ebp], 37			
je	SHORT $LN207@sqlite3VXP
mov	ecx, DWORD PTR _fmt$[ebp]
mov	DWORD PTR _bufpt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
add	edx, 1
mov	DWORD PTR _fmt$[ebp], edx
mov	eax, DWORD PTR _fmt$[ebp]
movsx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
cmp	DWORD PTR _c$[ebp], 37			
je	SHORT $LN208@sqlite3VXP
cmp	DWORD PTR _c$[ebp], 0
je	SHORT $LN208@sqlite3VXP
jmp	SHORT $LN209@sqlite3VXP
mov	edx, DWORD PTR _fmt$[ebp]
sub	edx, DWORD PTR _bufpt$[ebp]
push	edx
mov	eax, DWORD PTR _bufpt$[ebp]
push	eax
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
cmp	DWORD PTR _c$[ebp], 0
jne	SHORT $LN207@sqlite3VXP
jmp	$LN211@sqlite3VXP
mov	edx, DWORD PTR _fmt$[ebp]
add	edx, 1
mov	DWORD PTR _fmt$[ebp], edx
mov	eax, DWORD PTR _fmt$[ebp]
movsx	ecx, BYTE PTR [eax]
mov	DWORD PTR _c$[ebp], ecx
cmp	DWORD PTR _c$[ebp], 0
jne	SHORT $LN206@sqlite3VXP
push	1
push	OFFSET $SG85240
mov	edx, DWORD PTR _pAccum$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
jmp	$LN211@sqlite3VXP
mov	BYTE PTR _flag_zeropad$[ebp], 0
mov	al, BYTE PTR _flag_zeropad$[ebp]
mov	BYTE PTR _flag_altform2$[ebp], al
mov	cl, BYTE PTR _flag_altform2$[ebp]
mov	BYTE PTR _flag_alternateform$[ebp], cl
mov	dl, BYTE PTR _flag_alternateform$[ebp]
mov	BYTE PTR _flag_blanksign$[ebp], dl
mov	al, BYTE PTR _flag_blanksign$[ebp]
mov	BYTE PTR _flag_plussign$[ebp], al
mov	cl, BYTE PTR _flag_plussign$[ebp]
mov	BYTE PTR _flag_leftjustify$[ebp], cl
mov	BYTE PTR _done$[ebp], 0
mov	edx, DWORD PTR _c$[ebp]
mov	DWORD PTR tv92[ebp], edx
mov	eax, DWORD PTR tv92[ebp]
sub	eax, 32					
mov	DWORD PTR tv92[ebp], eax
cmp	DWORD PTR tv92[ebp], 16			
ja	SHORT $LN194@sqlite3VXP
mov	ecx, DWORD PTR tv92[ebp]
movzx	edx, BYTE PTR $LN243@sqlite3VXP[ecx]
jmp	DWORD PTR $LN246@sqlite3VXP[edx*4]
mov	BYTE PTR _flag_leftjustify$[ebp], 1
jmp	SHORT $LN201@sqlite3VXP
mov	BYTE PTR _flag_plussign$[ebp], 1
jmp	SHORT $LN201@sqlite3VXP
mov	BYTE PTR _flag_blanksign$[ebp], 1
jmp	SHORT $LN201@sqlite3VXP
mov	BYTE PTR _flag_alternateform$[ebp], 1
jmp	SHORT $LN201@sqlite3VXP
mov	BYTE PTR _flag_altform2$[ebp], 1
jmp	SHORT $LN201@sqlite3VXP
mov	BYTE PTR _flag_zeropad$[ebp], 1
jmp	SHORT $LN201@sqlite3VXP
mov	BYTE PTR _done$[ebp], 1
movzx	eax, BYTE PTR _done$[ebp]
test	eax, eax
jne	SHORT $LN193@sqlite3VXP
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 0
jne	$LN205@sqlite3VXP
mov	DWORD PTR _width$[ebp], 0
cmp	DWORD PTR _c$[ebp], 42			
jne	SHORT $LN192@sqlite3VXP
movzx	ecx, BYTE PTR _bArgList$[ebp]
test	ecx, ecx
je	SHORT $LN191@sqlite3VXP
mov	edx, DWORD PTR _pArgList$[ebp]
push	edx
call	_getIntArg
add	esp, 4
mov	DWORD PTR _width$[ebp], eax
jmp	SHORT $LN190@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _width$[ebp], edx
cmp	DWORD PTR _width$[ebp], 0
jge	SHORT $LN189@sqlite3VXP
mov	BYTE PTR _flag_leftjustify$[ebp], 1
mov	eax, DWORD PTR _width$[ebp]
neg	eax
mov	DWORD PTR _width$[ebp], eax
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
jmp	SHORT $LN186@sqlite3VXP
cmp	DWORD PTR _c$[ebp], 48			
jl	SHORT $LN186@sqlite3VXP
cmp	DWORD PTR _c$[ebp], 57			
jg	SHORT $LN186@sqlite3VXP
imul	ecx, DWORD PTR _width$[ebp], 10
mov	edx, DWORD PTR _c$[ebp]
lea	eax, DWORD PTR [ecx+edx-48]
mov	DWORD PTR _width$[ebp], eax
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
jmp	SHORT $LN192@sqlite3VXP
cmp	DWORD PTR _c$[ebp], 46			
jne	$LN185@sqlite3VXP
mov	DWORD PTR _precision$[ebp], 0
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 42			
jne	SHORT $LN184@sqlite3VXP
movzx	ecx, BYTE PTR _bArgList$[ebp]
test	ecx, ecx
je	SHORT $LN183@sqlite3VXP
mov	edx, DWORD PTR _pArgList$[ebp]
push	edx
call	_getIntArg
add	esp, 4
mov	DWORD PTR _precision$[ebp], eax
jmp	SHORT $LN182@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _precision$[ebp], edx
cmp	DWORD PTR _precision$[ebp], 0
jge	SHORT $LN181@sqlite3VXP
mov	eax, DWORD PTR _precision$[ebp]
neg	eax
mov	DWORD PTR _precision$[ebp], eax
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
jmp	SHORT $LN178@sqlite3VXP
cmp	DWORD PTR _c$[ebp], 48			
jl	SHORT $LN178@sqlite3VXP
cmp	DWORD PTR _c$[ebp], 57			
jg	SHORT $LN178@sqlite3VXP
imul	ecx, DWORD PTR _precision$[ebp], 10
mov	edx, DWORD PTR _c$[ebp]
lea	eax, DWORD PTR [ecx+edx-48]
mov	DWORD PTR _precision$[ebp], eax
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
jmp	SHORT $LN184@sqlite3VXP
jmp	SHORT $LN177@sqlite3VXP
mov	DWORD PTR _precision$[ebp], -1
cmp	DWORD PTR _c$[ebp], 108			
jne	SHORT $LN176@sqlite3VXP
mov	BYTE PTR _flag_long$[ebp], 1
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
cmp	DWORD PTR _c$[ebp], 108			
jne	SHORT $LN175@sqlite3VXP
mov	BYTE PTR _flag_longlong$[ebp], 1
mov	ecx, DWORD PTR _fmt$[ebp]
add	ecx, 1
mov	DWORD PTR _fmt$[ebp], ecx
mov	edx, DWORD PTR _fmt$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$[ebp], eax
jmp	SHORT $LN174@sqlite3VXP
mov	BYTE PTR _flag_longlong$[ebp], 0
jmp	SHORT $LN173@sqlite3VXP
mov	BYTE PTR _flag_longlong$[ebp], 0
mov	cl, BYTE PTR _flag_longlong$[ebp]
mov	BYTE PTR _flag_long$[ebp], cl
mov	edx, 6
imul	eax, edx, 0
add	eax, OFFSET _fmtinfo
mov	DWORD PTR _infop$[ebp], eax
mov	BYTE PTR _xtype$[ebp], 0
mov	DWORD PTR _idx$[ebp], 0
jmp	SHORT $LN172@sqlite3VXP
mov	ecx, DWORD PTR _idx$[ebp]
add	ecx, 1
mov	DWORD PTR _idx$[ebp], ecx
cmp	DWORD PTR _idx$[ebp], 23		
jge	SHORT $LN170@sqlite3VXP
imul	edx, DWORD PTR _idx$[ebp], 6
movsx	eax, BYTE PTR _fmtinfo[edx]
cmp	DWORD PTR _c$[ebp], eax
jne	SHORT $LN169@sqlite3VXP
imul	ecx, DWORD PTR _idx$[ebp], 6
add	ecx, OFFSET _fmtinfo
mov	DWORD PTR _infop$[ebp], ecx
movzx	edx, BYTE PTR _useIntern$[ebp]
test	edx, edx
jne	SHORT $LN167@sqlite3VXP
mov	eax, DWORD PTR _infop$[ebp]
movzx	ecx, BYTE PTR [eax+2]
and	ecx, 2
jne	SHORT $LN168@sqlite3VXP
mov	edx, DWORD PTR _infop$[ebp]
mov	al, BYTE PTR [edx+3]
mov	BYTE PTR _xtype$[ebp], al
jmp	SHORT $LN166@sqlite3VXP
jmp	$LN211@sqlite3VXP
jmp	SHORT $LN170@sqlite3VXP
jmp	SHORT $LN171@sqlite3VXP
mov	DWORD PTR _zExtra$[ebp], 0
movzx	ecx, BYTE PTR _xtype$[ebp]
mov	DWORD PTR tv198[ebp], ecx
mov	edx, DWORD PTR tv198[ebp]
sub	edx, 1
mov	DWORD PTR tv198[ebp], edx
cmp	DWORD PTR tv198[ebp], 15		
ja	$LN4@sqlite3VXP
mov	eax, DWORD PTR tv198[ebp]
jmp	DWORD PTR $LN247@sqlite3VXP[eax*4]
mov	BYTE PTR _flag_longlong$[ebp], 0
mov	BYTE PTR _flag_long$[ebp], 1
mov	ecx, DWORD PTR _infop$[ebp]
movzx	edx, BYTE PTR [ecx+2]
and	edx, 1
je	$LN161@sqlite3VXP
movzx	eax, BYTE PTR _bArgList$[ebp]
test	eax, eax
je	SHORT $LN160@sqlite3VXP
mov	ecx, DWORD PTR _pArgList$[ebp]
push	ecx
call	_getIntArg
add	esp, 4
mov	DWORD PTR _v$15[ebp], eax
mov	DWORD PTR _v$15[ebp+4], edx
jmp	SHORT $LN155@sqlite3VXP
movzx	edx, BYTE PTR _flag_longlong$[ebp]
test	edx, edx
je	SHORT $LN158@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 8
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-8]
mov	DWORD PTR _v$15[ebp], edx
mov	eax, DWORD PTR [ecx-4]
mov	DWORD PTR _v$15[ebp+4], eax
jmp	SHORT $LN155@sqlite3VXP
movzx	ecx, BYTE PTR _flag_long$[ebp]
test	ecx, ecx
je	SHORT $LN156@sqlite3VXP
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [eax-4]
cdq
mov	DWORD PTR _v$15[ebp], eax
mov	DWORD PTR _v$15[ebp+4], edx
jmp	SHORT $LN155@sqlite3VXP
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
cdq
mov	DWORD PTR _v$15[ebp], eax
mov	DWORD PTR _v$15[ebp+4], edx
cmp	DWORD PTR _v$15[ebp+4], 0
jg	SHORT $LN154@sqlite3VXP
jl	SHORT $LN244@sqlite3VXP
cmp	DWORD PTR _v$15[ebp], 0
jae	SHORT $LN154@sqlite3VXP
cmp	DWORD PTR _v$15[ebp], 0
jne	SHORT $LN153@sqlite3VXP
cmp	DWORD PTR _v$15[ebp+4], -2147483648	
jne	SHORT $LN153@sqlite3VXP
mov	DWORD PTR _longvalue$[ebp], 0
mov	DWORD PTR _longvalue$[ebp+4], -2147483648 
jmp	SHORT $LN152@sqlite3VXP
mov	eax, DWORD PTR _v$15[ebp]
neg	eax
mov	ecx, DWORD PTR _v$15[ebp+4]
adc	ecx, 0
neg	ecx
mov	DWORD PTR _longvalue$[ebp], eax
mov	DWORD PTR _longvalue$[ebp+4], ecx
mov	BYTE PTR _prefix$[ebp], 45		
jmp	SHORT $LN147@sqlite3VXP
mov	edx, DWORD PTR _v$15[ebp]
mov	DWORD PTR _longvalue$[ebp], edx
mov	eax, DWORD PTR _v$15[ebp+4]
mov	DWORD PTR _longvalue$[ebp+4], eax
movzx	ecx, BYTE PTR _flag_plussign$[ebp]
test	ecx, ecx
je	SHORT $LN150@sqlite3VXP
mov	BYTE PTR _prefix$[ebp], 43		
jmp	SHORT $LN147@sqlite3VXP
movzx	edx, BYTE PTR _flag_blanksign$[ebp]
test	edx, edx
je	SHORT $LN148@sqlite3VXP
mov	BYTE PTR _prefix$[ebp], 32		
jmp	SHORT $LN147@sqlite3VXP
mov	BYTE PTR _prefix$[ebp], 0
jmp	$LN146@sqlite3VXP
movzx	eax, BYTE PTR _bArgList$[ebp]
test	eax, eax
je	SHORT $LN145@sqlite3VXP
mov	ecx, DWORD PTR _pArgList$[ebp]
push	ecx
call	_getIntArg
add	esp, 4
mov	DWORD PTR _longvalue$[ebp], eax
mov	DWORD PTR _longvalue$[ebp+4], edx
jmp	SHORT $LN140@sqlite3VXP
movzx	edx, BYTE PTR _flag_longlong$[ebp]
test	edx, edx
je	SHORT $LN143@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 8
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-8]
mov	DWORD PTR _longvalue$[ebp], edx
mov	eax, DWORD PTR [ecx-4]
mov	DWORD PTR _longvalue$[ebp+4], eax
jmp	SHORT $LN140@sqlite3VXP
movzx	ecx, BYTE PTR _flag_long$[ebp]
test	ecx, ecx
je	SHORT $LN141@sqlite3VXP
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	ecx, DWORD PTR [eax-4]
xor	edx, edx
mov	DWORD PTR _longvalue$[ebp], ecx
mov	DWORD PTR _longvalue$[ebp+4], edx
jmp	SHORT $LN140@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
xor	eax, eax
mov	DWORD PTR _longvalue$[ebp], edx
mov	DWORD PTR _longvalue$[ebp+4], eax
mov	BYTE PTR _prefix$[ebp], 0
mov	ecx, DWORD PTR _longvalue$[ebp]
or	ecx, DWORD PTR _longvalue$[ebp+4]
jne	SHORT $LN139@sqlite3VXP
mov	BYTE PTR _flag_alternateform$[ebp], 0
movzx	edx, BYTE PTR _flag_zeropad$[ebp]
test	edx, edx
je	SHORT $LN138@sqlite3VXP
movsx	eax, BYTE PTR _prefix$[ebp]
test	eax, eax
je	SHORT $LN219@sqlite3VXP
mov	DWORD PTR tv247[ebp], 1
jmp	SHORT $LN220@sqlite3VXP
mov	DWORD PTR tv247[ebp], 0
mov	ecx, DWORD PTR _width$[ebp]
sub	ecx, DWORD PTR tv247[ebp]
cmp	DWORD PTR _precision$[ebp], ecx
jge	SHORT $LN138@sqlite3VXP
movsx	edx, BYTE PTR _prefix$[ebp]
test	edx, edx
je	SHORT $LN221@sqlite3VXP
mov	DWORD PTR tv252[ebp], 1
jmp	SHORT $LN222@sqlite3VXP
mov	DWORD PTR tv252[ebp], 0
mov	eax, DWORD PTR _width$[ebp]
sub	eax, DWORD PTR tv252[ebp]
mov	DWORD PTR _precision$[ebp], eax
cmp	DWORD PTR _precision$[ebp], 60		
jge	SHORT $LN137@sqlite3VXP
mov	DWORD PTR _nOut$[ebp], 70		
lea	ecx, DWORD PTR _buf$[ebp]
mov	DWORD PTR _zOut$[ebp], ecx
jmp	SHORT $LN135@sqlite3VXP
mov	edx, DWORD PTR _precision$[ebp]
add	edx, 10					
mov	DWORD PTR _nOut$[ebp], edx
mov	eax, DWORD PTR _nOut$[ebp]
push	eax
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _zExtra$[ebp], eax
mov	ecx, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR _zOut$[ebp], ecx
cmp	DWORD PTR _zOut$[ebp], 0
jne	SHORT $LN135@sqlite3VXP
push	1
mov	edx, DWORD PTR _pAccum$[ebp]
push	edx
call	_setStrAccumError
add	esp, 8
jmp	$LN211@sqlite3VXP
mov	eax, DWORD PTR _nOut$[ebp]
mov	ecx, DWORD PTR _zOut$[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
mov	DWORD PTR _bufpt$[ebp], edx
movzx	eax, BYTE PTR _xtype$[ebp]
cmp	eax, 16					
jne	$LN134@sqlite3VXP
push	0
push	10					
mov	ecx, DWORD PTR _longvalue$[ebp+4]
push	ecx
mov	edx, DWORD PTR _longvalue$[ebp]
push	edx
call	__aullrem
mov	DWORD PTR _x$9[ebp], eax
cmp	DWORD PTR _x$9[ebp], 4
jge	SHORT $LN132@sqlite3VXP
push	0
push	10					
mov	eax, DWORD PTR _longvalue$[ebp+4]
push	eax
mov	ecx, DWORD PTR _longvalue$[ebp]
push	ecx
call	__aulldiv
push	0
push	10					
push	edx
push	eax
call	__aullrem
mov	DWORD PTR tv920[ebp], eax
mov	DWORD PTR tv920[ebp+4], edx
cmp	DWORD PTR tv920[ebp], 1
jne	SHORT $LN133@sqlite3VXP
cmp	DWORD PTR tv920[ebp+4], 0
jne	SHORT $LN133@sqlite3VXP
mov	DWORD PTR _x$9[ebp], 0
mov	edx, DWORD PTR _bufpt$[ebp]
sub	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
mov	eax, DWORD PTR _bufpt$[ebp]
mov	ecx, DWORD PTR _x$9[ebp]
mov	dl, BYTE PTR ?zOrd@?DG@??sqlite3VXPrintf@@9@9[ecx*2+1]
mov	BYTE PTR [eax], dl
mov	eax, DWORD PTR _bufpt$[ebp]
sub	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
mov	ecx, DWORD PTR _bufpt$[ebp]
mov	edx, DWORD PTR _x$9[ebp]
mov	al, BYTE PTR ?zOrd@?DG@??sqlite3VXPrintf@@9@9[edx*2]
mov	BYTE PTR [ecx], al
mov	ecx, DWORD PTR _infop$[ebp]
movzx	edx, BYTE PTR [ecx+4]
add	edx, OFFSET _aDigits
mov	DWORD PTR _cset$3[ebp], edx
mov	eax, DWORD PTR _infop$[ebp]
mov	cl, BYTE PTR [eax+1]
mov	BYTE PTR _base$18[ebp], cl
mov	edx, DWORD PTR _bufpt$[ebp]
sub	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
movzx	eax, BYTE PTR _base$18[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _longvalue$[ebp+4]
push	eax
mov	ecx, DWORD PTR _longvalue$[ebp]
push	ecx
call	__aullrem
push	0
push	1
push	edx
push	eax
call	__allmul
mov	edx, DWORD PTR _bufpt$[ebp]
mov	ecx, DWORD PTR _cset$3[ebp]
mov	al, BYTE PTR [ecx+eax]
mov	BYTE PTR [edx], al
movzx	eax, BYTE PTR _base$18[ebp]
cdq
push	edx
push	eax
mov	ecx, DWORD PTR _longvalue$[ebp+4]
push	ecx
mov	edx, DWORD PTR _longvalue$[ebp]
push	edx
call	__aulldiv
mov	DWORD PTR _longvalue$[ebp], eax
mov	DWORD PTR _longvalue$[ebp+4], edx
cmp	DWORD PTR _longvalue$[ebp+4], 0
ja	SHORT $LN131@sqlite3VXP
jb	SHORT $LN245@sqlite3VXP
cmp	DWORD PTR _longvalue$[ebp], 0
ja	SHORT $LN131@sqlite3VXP
mov	eax, DWORD PTR _nOut$[ebp]
mov	ecx, DWORD PTR _zOut$[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
sub	edx, DWORD PTR _bufpt$[ebp]
mov	DWORD PTR _length$[ebp], edx
mov	eax, DWORD PTR _precision$[ebp]
sub	eax, DWORD PTR _length$[ebp]
mov	DWORD PTR _idx$[ebp], eax
jmp	SHORT $LN128@sqlite3VXP
mov	ecx, DWORD PTR _idx$[ebp]
sub	ecx, 1
mov	DWORD PTR _idx$[ebp], ecx
cmp	DWORD PTR _idx$[ebp], 0
jle	SHORT $LN126@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
sub	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
mov	eax, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [eax], 48			
jmp	SHORT $LN127@sqlite3VXP
movsx	ecx, BYTE PTR _prefix$[ebp]
test	ecx, ecx
je	SHORT $LN125@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
sub	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
mov	eax, DWORD PTR _bufpt$[ebp]
mov	cl, BYTE PTR _prefix$[ebp]
mov	BYTE PTR [eax], cl
movzx	edx, BYTE PTR _flag_alternateform$[ebp]
test	edx, edx
je	SHORT $LN121@sqlite3VXP
mov	eax, DWORD PTR _infop$[ebp]
movzx	ecx, BYTE PTR [eax+5]
test	ecx, ecx
je	SHORT $LN121@sqlite3VXP
mov	edx, DWORD PTR _infop$[ebp]
movzx	eax, BYTE PTR [edx+5]
add	eax, OFFSET _aPrefix
mov	DWORD PTR _pre$6[ebp], eax
jmp	SHORT $LN123@sqlite3VXP
mov	ecx, DWORD PTR _pre$6[ebp]
add	ecx, 1
mov	DWORD PTR _pre$6[ebp], ecx
mov	edx, DWORD PTR _pre$6[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR _x$19[ebp], al
movsx	ecx, BYTE PTR _x$19[ebp]
test	ecx, ecx
je	SHORT $LN121@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
sub	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
mov	eax, DWORD PTR _bufpt$[ebp]
mov	cl, BYTE PTR _x$19[ebp]
mov	BYTE PTR [eax], cl
jmp	SHORT $LN122@sqlite3VXP
mov	edx, DWORD PTR _nOut$[ebp]
mov	eax, DWORD PTR _zOut$[ebp]
lea	ecx, DWORD PTR [eax+edx-1]
sub	ecx, DWORD PTR _bufpt$[ebp]
mov	DWORD PTR _length$[ebp], ecx
jmp	$LN164@sqlite3VXP
movzx	edx, BYTE PTR _bArgList$[ebp]
test	edx, edx
je	SHORT $LN119@sqlite3VXP
mov	eax, DWORD PTR _pArgList$[ebp]
push	eax
call	_getDoubleArg
add	esp, 4
fstp	QWORD PTR _realvalue$[ebp]
jmp	SHORT $LN118@sqlite3VXP
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 8
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
movsd	xmm0, QWORD PTR [edx-8]
movsd	QWORD PTR _realvalue$[ebp], xmm0
cmp	DWORD PTR _precision$[ebp], 0
jge	SHORT $LN117@sqlite3VXP
mov	DWORD PTR _precision$[ebp], 6
movsd	xmm0, QWORD PTR __real@0000000000000000
comisd	xmm0, QWORD PTR _realvalue$[ebp]
jbe	SHORT $LN116@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
movsd	QWORD PTR _realvalue$[ebp], xmm0
mov	BYTE PTR _prefix$[ebp], 45		
jmp	SHORT $LN111@sqlite3VXP
movzx	eax, BYTE PTR _flag_plussign$[ebp]
test	eax, eax
je	SHORT $LN114@sqlite3VXP
mov	BYTE PTR _prefix$[ebp], 43		
jmp	SHORT $LN111@sqlite3VXP
movzx	ecx, BYTE PTR _flag_blanksign$[ebp]
test	ecx, ecx
je	SHORT $LN112@sqlite3VXP
mov	BYTE PTR _prefix$[ebp], 32		
jmp	SHORT $LN111@sqlite3VXP
mov	BYTE PTR _prefix$[ebp], 0
movzx	edx, BYTE PTR _xtype$[ebp]
cmp	edx, 4
jne	SHORT $LN110@sqlite3VXP
cmp	DWORD PTR _precision$[ebp], 0
jle	SHORT $LN110@sqlite3VXP
mov	eax, DWORD PTR _precision$[ebp]
sub	eax, 1
mov	DWORD PTR _precision$[ebp], eax
mov	ecx, DWORD PTR _precision$[ebp]
mov	DWORD PTR _idx$[ebp], ecx
movsd	xmm0, QWORD PTR __real@3fe0000000000000
movsd	QWORD PTR _rounder$[ebp], xmm0
jmp	SHORT $LN109@sqlite3VXP
mov	edx, DWORD PTR _idx$[ebp]
sub	edx, 1
mov	DWORD PTR _idx$[ebp], edx
movsd	xmm0, QWORD PTR _rounder$[ebp]
mulsd	xmm0, QWORD PTR __real@3fb999999999999a
movsd	QWORD PTR _rounder$[ebp], xmm0
cmp	DWORD PTR _idx$[ebp], 0
jle	SHORT $LN107@sqlite3VXP
jmp	SHORT $LN108@sqlite3VXP
movzx	eax, BYTE PTR _xtype$[ebp]
cmp	eax, 2
jne	SHORT $LN106@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
addsd	xmm0, QWORD PTR _rounder$[ebp]
movsd	QWORD PTR _realvalue$[ebp], xmm0
mov	DWORD PTR _exp$[ebp], 0
sub	esp, 8
movsd	xmm0, QWORD PTR _realvalue$[ebp]
movsd	QWORD PTR [esp], xmm0
call	_sqlite3IsNaN
add	esp, 8
test	eax, eax
je	SHORT $LN105@sqlite3VXP
mov	DWORD PTR _bufpt$[ebp], OFFSET $SG85434
mov	DWORD PTR _length$[ebp], 3
jmp	$LN164@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
comisd	xmm0, QWORD PTR __real@0000000000000000
jbe	$LN91@sqlite3VXP
movsd	xmm0, QWORD PTR __real@3ff0000000000000
movsd	QWORD PTR _scale$13[ebp], xmm0
movsd	xmm0, QWORD PTR __real@54b249ad2594c37d
mulsd	xmm0, QWORD PTR _scale$13[ebp]
movsd	xmm1, QWORD PTR _realvalue$[ebp]
comisd	xmm1, xmm0
jb	SHORT $LN102@sqlite3VXP
cmp	DWORD PTR _exp$[ebp], 350		
jg	SHORT $LN102@sqlite3VXP
movsd	xmm0, QWORD PTR _scale$13[ebp]
mulsd	xmm0, QWORD PTR __real@54b249ad2594c37d
movsd	QWORD PTR _scale$13[ebp], xmm0
mov	ecx, DWORD PTR _exp$[ebp]
add	ecx, 100				
mov	DWORD PTR _exp$[ebp], ecx
jmp	SHORT $LN103@sqlite3VXP
movsd	xmm0, QWORD PTR __real@4d384f03e93ff9f5
mulsd	xmm0, QWORD PTR _scale$13[ebp]
movsd	xmm1, QWORD PTR _realvalue$[ebp]
comisd	xmm1, xmm0
jb	SHORT $LN100@sqlite3VXP
cmp	DWORD PTR _exp$[ebp], 350		
jg	SHORT $LN100@sqlite3VXP
movsd	xmm0, QWORD PTR _scale$13[ebp]
mulsd	xmm0, QWORD PTR __real@4d384f03e93ff9f5
movsd	QWORD PTR _scale$13[ebp], xmm0
mov	edx, DWORD PTR _exp$[ebp]
add	edx, 64					
mov	DWORD PTR _exp$[ebp], edx
jmp	SHORT $LN102@sqlite3VXP
movsd	xmm0, QWORD PTR __real@4197d78400000000
mulsd	xmm0, QWORD PTR _scale$13[ebp]
movsd	xmm1, QWORD PTR _realvalue$[ebp]
comisd	xmm1, xmm0
jb	SHORT $LN98@sqlite3VXP
cmp	DWORD PTR _exp$[ebp], 350		
jg	SHORT $LN98@sqlite3VXP
movsd	xmm0, QWORD PTR _scale$13[ebp]
mulsd	xmm0, QWORD PTR __real@4197d78400000000
movsd	QWORD PTR _scale$13[ebp], xmm0
mov	eax, DWORD PTR _exp$[ebp]
add	eax, 8
mov	DWORD PTR _exp$[ebp], eax
jmp	SHORT $LN100@sqlite3VXP
movsd	xmm0, QWORD PTR __real@4024000000000000
mulsd	xmm0, QWORD PTR _scale$13[ebp]
movsd	xmm1, QWORD PTR _realvalue$[ebp]
comisd	xmm1, xmm0
jb	SHORT $LN96@sqlite3VXP
cmp	DWORD PTR _exp$[ebp], 350		
jg	SHORT $LN96@sqlite3VXP
movsd	xmm0, QWORD PTR _scale$13[ebp]
mulsd	xmm0, QWORD PTR __real@4024000000000000
movsd	QWORD PTR _scale$13[ebp], xmm0
mov	ecx, DWORD PTR _exp$[ebp]
add	ecx, 1
mov	DWORD PTR _exp$[ebp], ecx
jmp	SHORT $LN98@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
divsd	xmm0, QWORD PTR _scale$13[ebp]
movsd	QWORD PTR _realvalue$[ebp], xmm0
movsd	xmm0, QWORD PTR __real@3e45798ee2308c3a
comisd	xmm0, QWORD PTR _realvalue$[ebp]
jbe	SHORT $LN94@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
mulsd	xmm0, QWORD PTR __real@4197d78400000000
movsd	QWORD PTR _realvalue$[ebp], xmm0
mov	edx, DWORD PTR _exp$[ebp]
sub	edx, 8
mov	DWORD PTR _exp$[ebp], edx
jmp	SHORT $LN95@sqlite3VXP
movsd	xmm0, QWORD PTR __real@3ff0000000000000
comisd	xmm0, QWORD PTR _realvalue$[ebp]
jbe	SHORT $LN92@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
mulsd	xmm0, QWORD PTR __real@4024000000000000
movsd	QWORD PTR _realvalue$[ebp], xmm0
mov	eax, DWORD PTR _exp$[ebp]
sub	eax, 1
mov	DWORD PTR _exp$[ebp], eax
jmp	SHORT $LN94@sqlite3VXP
cmp	DWORD PTR _exp$[ebp], 350		
jle	SHORT $LN91@sqlite3VXP
movsx	ecx, BYTE PTR _prefix$[ebp]
cmp	ecx, 45					
jne	SHORT $LN90@sqlite3VXP
mov	DWORD PTR _bufpt$[ebp], OFFSET $SG85457
jmp	SHORT $LN87@sqlite3VXP
movsx	edx, BYTE PTR _prefix$[ebp]
cmp	edx, 43					
jne	SHORT $LN88@sqlite3VXP
mov	DWORD PTR _bufpt$[ebp], OFFSET $SG85460
jmp	SHORT $LN87@sqlite3VXP
mov	DWORD PTR _bufpt$[ebp], OFFSET $SG85462
mov	eax, DWORD PTR _bufpt$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _length$[ebp], eax
jmp	$LN164@sqlite3VXP
lea	ecx, DWORD PTR _buf$[ebp]
mov	DWORD PTR _bufpt$[ebp], ecx
movzx	edx, BYTE PTR _xtype$[ebp]
cmp	edx, 2
je	SHORT $LN85@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
addsd	xmm0, QWORD PTR _rounder$[ebp]
movsd	QWORD PTR _realvalue$[ebp], xmm0
movsd	xmm0, QWORD PTR _realvalue$[ebp]
comisd	xmm0, QWORD PTR __real@4024000000000000
jb	SHORT $LN85@sqlite3VXP
movsd	xmm0, QWORD PTR _realvalue$[ebp]
mulsd	xmm0, QWORD PTR __real@3fb999999999999a
movsd	QWORD PTR _realvalue$[ebp], xmm0
mov	eax, DWORD PTR _exp$[ebp]
add	eax, 1
mov	DWORD PTR _exp$[ebp], eax
movzx	ecx, BYTE PTR _xtype$[ebp]
cmp	ecx, 4
jne	SHORT $LN84@sqlite3VXP
movzx	edx, BYTE PTR _flag_alternateform$[ebp]
test	edx, edx
jne	SHORT $LN223@sqlite3VXP
mov	DWORD PTR tv429[ebp], 1
jmp	SHORT $LN224@sqlite3VXP
mov	DWORD PTR tv429[ebp], 0
mov	al, BYTE PTR tv429[ebp]
mov	BYTE PTR _flag_rtz$[ebp], al
cmp	DWORD PTR _exp$[ebp], -4		
jl	SHORT $LN82@sqlite3VXP
mov	ecx, DWORD PTR _exp$[ebp]
cmp	ecx, DWORD PTR _precision$[ebp]
jle	SHORT $LN83@sqlite3VXP
mov	BYTE PTR _xtype$[ebp], 3
jmp	SHORT $LN81@sqlite3VXP
mov	edx, DWORD PTR _precision$[ebp]
sub	edx, DWORD PTR _exp$[ebp]
mov	DWORD PTR _precision$[ebp], edx
mov	BYTE PTR _xtype$[ebp], 2
jmp	SHORT $LN80@sqlite3VXP
mov	al, BYTE PTR _flag_altform2$[ebp]
mov	BYTE PTR _flag_rtz$[ebp], al
movzx	ecx, BYTE PTR _xtype$[ebp]
cmp	ecx, 3
jne	SHORT $LN79@sqlite3VXP
mov	DWORD PTR _e2$[ebp], 0
jmp	SHORT $LN78@sqlite3VXP
mov	edx, DWORD PTR _exp$[ebp]
mov	DWORD PTR _e2$[ebp], edx
cmp	DWORD PTR _e2$[ebp], 0
jle	SHORT $LN225@sqlite3VXP
mov	eax, DWORD PTR _e2$[ebp]
mov	DWORD PTR tv437[ebp], eax
jmp	SHORT $LN226@sqlite3VXP
mov	DWORD PTR tv437[ebp], 0
mov	ecx, DWORD PTR tv437[ebp]
add	ecx, DWORD PTR _precision$[ebp]
add	ecx, DWORD PTR _width$[ebp]
cmp	ecx, 55					
jle	SHORT $LN76@sqlite3VXP
cmp	DWORD PTR _e2$[ebp], 0
jle	SHORT $LN227@sqlite3VXP
mov	edx, DWORD PTR _e2$[ebp]
mov	DWORD PTR tv443[ebp], edx
jmp	SHORT $LN228@sqlite3VXP
mov	DWORD PTR tv443[ebp], 0
mov	eax, DWORD PTR tv443[ebp]
add	eax, DWORD PTR _precision$[ebp]
mov	ecx, DWORD PTR _width$[ebp]
lea	edx, DWORD PTR [eax+ecx+15]
push	edx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _zExtra$[ebp], eax
mov	eax, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR _bufpt$[ebp], eax
cmp	DWORD PTR _bufpt$[ebp], 0
jne	SHORT $LN76@sqlite3VXP
push	1
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_setStrAccumError
add	esp, 8
jmp	$LN211@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
mov	DWORD PTR _zOut$[ebp], edx
movzx	eax, BYTE PTR _flag_altform2$[ebp]
imul	ecx, eax, 10
add	ecx, 16					
mov	DWORD PTR _nsd$[ebp], ecx
cmp	DWORD PTR _precision$[ebp], 0
jle	SHORT $LN229@sqlite3VXP
mov	DWORD PTR tv455[ebp], 1
jmp	SHORT $LN230@sqlite3VXP
mov	DWORD PTR tv455[ebp], 0
movzx	edx, BYTE PTR _flag_alternateform$[ebp]
or	edx, DWORD PTR tv455[ebp]
movzx	eax, BYTE PTR _flag_altform2$[ebp]
or	edx, eax
mov	BYTE PTR _flag_dp$[ebp], dl
movsx	ecx, BYTE PTR _prefix$[ebp]
test	ecx, ecx
je	SHORT $LN75@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
mov	al, BYTE PTR _prefix$[ebp]
mov	BYTE PTR [edx], al
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, 1
mov	DWORD PTR _bufpt$[ebp], ecx
cmp	DWORD PTR _e2$[ebp], 0
jge	SHORT $LN74@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [edx], 48			
mov	eax, DWORD PTR _bufpt$[ebp]
add	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
jmp	SHORT $LN70@sqlite3VXP
jmp	SHORT $LN72@sqlite3VXP
mov	ecx, DWORD PTR _e2$[ebp]
sub	ecx, 1
mov	DWORD PTR _e2$[ebp], ecx
cmp	DWORD PTR _e2$[ebp], 0
jl	SHORT $LN70@sqlite3VXP
lea	edx, DWORD PTR _nsd$[ebp]
push	edx
lea	eax, DWORD PTR _realvalue$[ebp]
push	eax
call	_et_getdigit
add	esp, 8
mov	ecx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _bufpt$[ebp]
add	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
jmp	SHORT $LN71@sqlite3VXP
movzx	eax, BYTE PTR _flag_dp$[ebp]
test	eax, eax
je	SHORT $LN69@sqlite3VXP
mov	ecx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [ecx], 46			
mov	edx, DWORD PTR _bufpt$[ebp]
add	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
mov	eax, DWORD PTR _e2$[ebp]
add	eax, 1
mov	DWORD PTR _e2$[ebp], eax
jmp	SHORT $LN68@sqlite3VXP
mov	ecx, DWORD PTR _precision$[ebp]
sub	ecx, 1
mov	DWORD PTR _precision$[ebp], ecx
mov	edx, DWORD PTR _e2$[ebp]
add	edx, 1
mov	DWORD PTR _e2$[ebp], edx
cmp	DWORD PTR _e2$[ebp], 0
jge	SHORT $LN66@sqlite3VXP
mov	eax, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [eax], 48			
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, 1
mov	DWORD PTR _bufpt$[ebp], ecx
jmp	SHORT $LN67@sqlite3VXP
mov	edx, DWORD PTR _precision$[ebp]
mov	DWORD PTR tv482[ebp], edx
mov	eax, DWORD PTR _precision$[ebp]
sub	eax, 1
mov	DWORD PTR _precision$[ebp], eax
cmp	DWORD PTR tv482[ebp], 0
jle	SHORT $LN64@sqlite3VXP
lea	ecx, DWORD PTR _nsd$[ebp]
push	ecx
lea	edx, DWORD PTR _realvalue$[ebp]
push	edx
call	_et_getdigit
add	esp, 8
mov	ecx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [ecx], al
mov	edx, DWORD PTR _bufpt$[ebp]
add	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
jmp	SHORT $LN66@sqlite3VXP
movzx	eax, BYTE PTR _flag_rtz$[ebp]
test	eax, eax
je	SHORT $LN58@sqlite3VXP
movzx	ecx, BYTE PTR _flag_dp$[ebp]
test	ecx, ecx
je	SHORT $LN58@sqlite3VXP
mov	edx, 1
imul	eax, edx, -1
mov	ecx, DWORD PTR _bufpt$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 48					
jne	SHORT $LN61@sqlite3VXP
mov	eax, DWORD PTR _bufpt$[ebp]
sub	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
mov	ecx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [ecx], 0
jmp	SHORT $LN62@sqlite3VXP
mov	edx, 1
imul	eax, edx, -1
mov	ecx, DWORD PTR _bufpt$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 46					
jne	SHORT $LN58@sqlite3VXP
movzx	eax, BYTE PTR _flag_altform2$[ebp]
test	eax, eax
je	SHORT $LN59@sqlite3VXP
mov	ecx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [ecx], 48			
mov	edx, DWORD PTR _bufpt$[ebp]
add	edx, 1
mov	DWORD PTR _bufpt$[ebp], edx
jmp	SHORT $LN58@sqlite3VXP
mov	eax, DWORD PTR _bufpt$[ebp]
sub	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
mov	ecx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [ecx], 0
movzx	edx, BYTE PTR _xtype$[ebp]
cmp	edx, 3
jne	$LN57@sqlite3VXP
mov	eax, DWORD PTR _infop$[ebp]
movzx	ecx, BYTE PTR [eax+4]
mov	edx, DWORD PTR _bufpt$[ebp]
mov	al, BYTE PTR _aDigits[ecx]
mov	BYTE PTR [edx], al
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, 1
mov	DWORD PTR _bufpt$[ebp], ecx
cmp	DWORD PTR _exp$[ebp], 0
jge	SHORT $LN56@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [edx], 45			
mov	eax, DWORD PTR _bufpt$[ebp]
add	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
mov	ecx, DWORD PTR _exp$[ebp]
neg	ecx
mov	DWORD PTR _exp$[ebp], ecx
jmp	SHORT $LN55@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [edx], 43			
mov	eax, DWORD PTR _bufpt$[ebp]
add	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
cmp	DWORD PTR _exp$[ebp], 100		
jl	SHORT $LN54@sqlite3VXP
mov	eax, DWORD PTR _exp$[ebp]
cdq
mov	ecx, 100				
idiv	ecx
add	eax, 48					
mov	edx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [edx], al
mov	eax, DWORD PTR _bufpt$[ebp]
add	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
mov	eax, DWORD PTR _exp$[ebp]
cdq
mov	ecx, 100				
idiv	ecx
mov	DWORD PTR _exp$[ebp], edx
mov	eax, DWORD PTR _exp$[ebp]
cdq
mov	ecx, 10					
idiv	ecx
add	eax, 48					
mov	edx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [edx], al
mov	eax, DWORD PTR _bufpt$[ebp]
add	eax, 1
mov	DWORD PTR _bufpt$[ebp], eax
mov	eax, DWORD PTR _exp$[ebp]
cdq
mov	ecx, 10					
idiv	ecx
add	edx, 48					
mov	eax, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [eax], dl
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, 1
mov	DWORD PTR _bufpt$[ebp], ecx
mov	edx, DWORD PTR _bufpt$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _bufpt$[ebp]
sub	eax, DWORD PTR _zOut$[ebp]
mov	DWORD PTR _length$[ebp], eax
mov	ecx, DWORD PTR _zOut$[ebp]
mov	DWORD PTR _bufpt$[ebp], ecx
movzx	edx, BYTE PTR _flag_zeropad$[ebp]
test	edx, edx
je	$LN53@sqlite3VXP
movzx	eax, BYTE PTR _flag_leftjustify$[ebp]
test	eax, eax
jne	$LN53@sqlite3VXP
mov	ecx, DWORD PTR _length$[ebp]
cmp	ecx, DWORD PTR _width$[ebp]
jge	$LN53@sqlite3VXP
mov	edx, DWORD PTR _width$[ebp]
sub	edx, DWORD PTR _length$[ebp]
mov	DWORD PTR _nPad$12[ebp], edx
mov	eax, DWORD PTR _width$[ebp]
mov	DWORD PTR _i$16[ebp], eax
jmp	SHORT $LN52@sqlite3VXP
mov	ecx, DWORD PTR _i$16[ebp]
sub	ecx, 1
mov	DWORD PTR _i$16[ebp], ecx
mov	edx, DWORD PTR _i$16[ebp]
cmp	edx, DWORD PTR _nPad$12[ebp]
jl	SHORT $LN50@sqlite3VXP
mov	eax, DWORD PTR _i$16[ebp]
sub	eax, DWORD PTR _nPad$12[ebp]
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, DWORD PTR _i$16[ebp]
mov	edx, DWORD PTR _bufpt$[ebp]
mov	al, BYTE PTR [edx+eax]
mov	BYTE PTR [ecx], al
jmp	SHORT $LN51@sqlite3VXP
movsx	ecx, BYTE PTR _prefix$[ebp]
test	ecx, ecx
je	SHORT $LN231@sqlite3VXP
mov	DWORD PTR tv545[ebp], 1
jmp	SHORT $LN232@sqlite3VXP
mov	DWORD PTR tv545[ebp], 0
mov	edx, DWORD PTR tv545[ebp]
mov	DWORD PTR _i$16[ebp], edx
mov	eax, DWORD PTR _nPad$12[ebp]
mov	DWORD PTR tv548[ebp], eax
mov	ecx, DWORD PTR _nPad$12[ebp]
sub	ecx, 1
mov	DWORD PTR _nPad$12[ebp], ecx
cmp	DWORD PTR tv548[ebp], 0
je	SHORT $LN48@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
add	edx, DWORD PTR _i$16[ebp]
mov	BYTE PTR [edx], 48			
mov	eax, DWORD PTR _i$16[ebp]
add	eax, 1
mov	DWORD PTR _i$16[ebp], eax
jmp	SHORT $LN49@sqlite3VXP
mov	ecx, DWORD PTR _width$[ebp]
mov	DWORD PTR _length$[ebp], ecx
jmp	$LN164@sqlite3VXP
movzx	edx, BYTE PTR _bArgList$[ebp]
test	edx, edx
jne	SHORT $LN46@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	eax, DWORD PTR _pAccum$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR [edx], ecx
mov	DWORD PTR _width$[ebp], 0
mov	edx, DWORD PTR _width$[ebp]
mov	DWORD PTR _length$[ebp], edx
jmp	$LN164@sqlite3VXP
mov	eax, 1
imul	ecx, eax, 0
mov	BYTE PTR _buf$[ebp+ecx], 37		
lea	edx, DWORD PTR _buf$[ebp]
mov	DWORD PTR _bufpt$[ebp], edx
mov	DWORD PTR _length$[ebp], 1
jmp	$LN164@sqlite3VXP
movzx	eax, BYTE PTR _bArgList$[ebp]
test	eax, eax
je	SHORT $LN43@sqlite3VXP
mov	ecx, DWORD PTR _pArgList$[ebp]
push	ecx
call	_getTextArg
add	esp, 4
mov	DWORD PTR _bufpt$[ebp], eax
cmp	DWORD PTR _bufpt$[ebp], 0
je	SHORT $LN233@sqlite3VXP
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _bufpt$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
mov	DWORD PTR tv568[ebp], edx
jmp	SHORT $LN234@sqlite3VXP
mov	DWORD PTR tv568[ebp], 0
mov	eax, DWORD PTR tv568[ebp]
mov	DWORD PTR _c$[ebp], eax
jmp	SHORT $LN42@sqlite3VXP
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _c$[ebp], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	al, BYTE PTR _c$[ebp]
mov	BYTE PTR _buf$[ebp+edx], al
cmp	DWORD PTR _precision$[ebp], 0
jl	SHORT $LN41@sqlite3VXP
mov	DWORD PTR _idx$[ebp], 1
jmp	SHORT $LN40@sqlite3VXP
mov	ecx, DWORD PTR _idx$[ebp]
add	ecx, 1
mov	DWORD PTR _idx$[ebp], ecx
mov	edx, DWORD PTR _idx$[ebp]
cmp	edx, DWORD PTR _precision$[ebp]
jge	SHORT $LN38@sqlite3VXP
mov	eax, DWORD PTR _idx$[ebp]
mov	cl, BYTE PTR _c$[ebp]
mov	BYTE PTR _buf$[ebp+eax], cl
jmp	SHORT $LN39@sqlite3VXP
mov	edx, DWORD PTR _precision$[ebp]
mov	DWORD PTR _length$[ebp], edx
jmp	SHORT $LN37@sqlite3VXP
mov	DWORD PTR _length$[ebp], 1
lea	eax, DWORD PTR _buf$[ebp]
mov	DWORD PTR _bufpt$[ebp], eax
jmp	$LN164@sqlite3VXP
movzx	ecx, BYTE PTR _bArgList$[ebp]
test	ecx, ecx
je	SHORT $LN35@sqlite3VXP
mov	edx, DWORD PTR _pArgList$[ebp]
push	edx
call	_getTextArg
add	esp, 4
mov	DWORD PTR _bufpt$[ebp], eax
jmp	SHORT $LN34@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _bufpt$[ebp], edx
cmp	DWORD PTR _bufpt$[ebp], 0
jne	SHORT $LN33@sqlite3VXP
mov	DWORD PTR _bufpt$[ebp], OFFSET $SG85551
jmp	SHORT $LN31@sqlite3VXP
movzx	eax, BYTE PTR _xtype$[ebp]
cmp	eax, 7
jne	SHORT $LN31@sqlite3VXP
movzx	ecx, BYTE PTR _bArgList$[ebp]
test	ecx, ecx
jne	SHORT $LN31@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
mov	DWORD PTR _zExtra$[ebp], edx
cmp	DWORD PTR _precision$[ebp], 0
jl	SHORT $LN30@sqlite3VXP
mov	DWORD PTR _length$[ebp], 0
jmp	SHORT $LN29@sqlite3VXP
mov	eax, DWORD PTR _length$[ebp]
add	eax, 1
mov	DWORD PTR _length$[ebp], eax
mov	ecx, DWORD PTR _length$[ebp]
cmp	ecx, DWORD PTR _precision$[ebp]
jge	SHORT $LN27@sqlite3VXP
mov	edx, DWORD PTR _bufpt$[ebp]
add	edx, DWORD PTR _length$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN27@sqlite3VXP
jmp	SHORT $LN28@sqlite3VXP
jmp	SHORT $LN26@sqlite3VXP
mov	ecx, DWORD PTR _bufpt$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _length$[ebp], eax
jmp	$LN164@sqlite3VXP
movzx	edx, BYTE PTR _xtype$[ebp]
cmp	edx, 15					
jne	SHORT $LN235@sqlite3VXP
mov	DWORD PTR tv600[ebp], 34		
jmp	SHORT $LN236@sqlite3VXP
mov	DWORD PTR tv600[ebp], 39		
mov	al, BYTE PTR tv600[ebp]
mov	BYTE PTR _q$21[ebp], al
movzx	ecx, BYTE PTR _bArgList$[ebp]
test	ecx, ecx
je	SHORT $LN24@sqlite3VXP
mov	edx, DWORD PTR _pArgList$[ebp]
push	edx
call	_getTextArg
add	esp, 4
mov	DWORD PTR _escarg$11[ebp], eax
jmp	SHORT $LN23@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _escarg$11[ebp], edx
cmp	DWORD PTR _escarg$11[ebp], 0
jne	SHORT $LN237@sqlite3VXP
mov	DWORD PTR tv609[ebp], 1
jmp	SHORT $LN238@sqlite3VXP
mov	DWORD PTR tv609[ebp], 0
mov	eax, DWORD PTR tv609[ebp]
mov	DWORD PTR _isnull$4[ebp], eax
cmp	DWORD PTR _isnull$4[ebp], 0
je	SHORT $LN22@sqlite3VXP
movzx	ecx, BYTE PTR _xtype$[ebp]
cmp	ecx, 11					
jne	SHORT $LN239@sqlite3VXP
mov	DWORD PTR tv613[ebp], OFFSET $SG85579
jmp	SHORT $LN240@sqlite3VXP
mov	DWORD PTR tv613[ebp], OFFSET $SG85580
mov	edx, DWORD PTR tv613[ebp]
mov	DWORD PTR _escarg$11[ebp], edx
mov	eax, DWORD PTR _precision$[ebp]
mov	DWORD PTR _k$10[ebp], eax
mov	DWORD PTR _n$14[ebp], 0
mov	ecx, DWORD PTR _n$14[ebp]
mov	DWORD PTR _i$17[ebp], ecx
jmp	SHORT $LN21@sqlite3VXP
mov	edx, DWORD PTR _i$17[ebp]
add	edx, 1
mov	DWORD PTR _i$17[ebp], edx
mov	eax, DWORD PTR _k$10[ebp]
sub	eax, 1
mov	DWORD PTR _k$10[ebp], eax
cmp	DWORD PTR _k$10[ebp], 0
je	SHORT $LN19@sqlite3VXP
mov	ecx, DWORD PTR _escarg$11[ebp]
add	ecx, DWORD PTR _i$17[ebp]
mov	dl, BYTE PTR [ecx]
mov	BYTE PTR _ch$22[ebp], dl
movsx	eax, BYTE PTR _ch$22[ebp]
test	eax, eax
je	SHORT $LN19@sqlite3VXP
movsx	ecx, BYTE PTR _ch$22[ebp]
movsx	edx, BYTE PTR _q$21[ebp]
cmp	ecx, edx
jne	SHORT $LN18@sqlite3VXP
mov	eax, DWORD PTR _n$14[ebp]
add	eax, 1
mov	DWORD PTR _n$14[ebp], eax
jmp	SHORT $LN20@sqlite3VXP
cmp	DWORD PTR _isnull$4[ebp], 0
jne	SHORT $LN241@sqlite3VXP
movzx	ecx, BYTE PTR _xtype$[ebp]
cmp	ecx, 11					
jne	SHORT $LN241@sqlite3VXP
mov	DWORD PTR tv628[ebp], 1
jmp	SHORT $LN242@sqlite3VXP
mov	DWORD PTR tv628[ebp], 0
mov	edx, DWORD PTR tv628[ebp]
mov	DWORD PTR _needQuote$5[ebp], edx
mov	eax, DWORD PTR _n$14[ebp]
mov	ecx, DWORD PTR _i$17[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	eax, DWORD PTR _needQuote$5[ebp]
lea	ecx, DWORD PTR [edx+eax*2]
mov	DWORD PTR _n$14[ebp], ecx
cmp	DWORD PTR _n$14[ebp], 70		
jle	SHORT $LN17@sqlite3VXP
mov	edx, DWORD PTR _n$14[ebp]
push	edx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _zExtra$[ebp], eax
mov	eax, DWORD PTR _zExtra$[ebp]
mov	DWORD PTR _bufpt$[ebp], eax
cmp	DWORD PTR _bufpt$[ebp], 0
jne	SHORT $LN16@sqlite3VXP
push	1
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_setStrAccumError
add	esp, 8
jmp	$LN211@sqlite3VXP
jmp	SHORT $LN15@sqlite3VXP
lea	edx, DWORD PTR _buf$[ebp]
mov	DWORD PTR _bufpt$[ebp], edx
mov	DWORD PTR _j$20[ebp], 0
cmp	DWORD PTR _needQuote$5[ebp], 0
je	SHORT $LN14@sqlite3VXP
mov	eax, DWORD PTR _bufpt$[ebp]
add	eax, DWORD PTR _j$20[ebp]
mov	cl, BYTE PTR _q$21[ebp]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _j$20[ebp]
add	edx, 1
mov	DWORD PTR _j$20[ebp], edx
mov	eax, DWORD PTR _i$17[ebp]
mov	DWORD PTR _k$10[ebp], eax
mov	DWORD PTR _i$17[ebp], 0
jmp	SHORT $LN13@sqlite3VXP
mov	ecx, DWORD PTR _i$17[ebp]
add	ecx, 1
mov	DWORD PTR _i$17[ebp], ecx
mov	edx, DWORD PTR _i$17[ebp]
cmp	edx, DWORD PTR _k$10[ebp]
jge	SHORT $LN11@sqlite3VXP
mov	eax, DWORD PTR _escarg$11[ebp]
add	eax, DWORD PTR _i$17[ebp]
mov	cl, BYTE PTR [eax]
mov	BYTE PTR _ch$22[ebp], cl
mov	edx, DWORD PTR _bufpt$[ebp]
add	edx, DWORD PTR _j$20[ebp]
mov	al, BYTE PTR _ch$22[ebp]
mov	BYTE PTR [edx], al
mov	ecx, DWORD PTR _j$20[ebp]
add	ecx, 1
mov	DWORD PTR _j$20[ebp], ecx
movsx	edx, BYTE PTR _ch$22[ebp]
movsx	eax, BYTE PTR _q$21[ebp]
cmp	edx, eax
jne	SHORT $LN10@sqlite3VXP
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, DWORD PTR _j$20[ebp]
mov	dl, BYTE PTR _ch$22[ebp]
mov	BYTE PTR [ecx], dl
mov	eax, DWORD PTR _j$20[ebp]
add	eax, 1
mov	DWORD PTR _j$20[ebp], eax
jmp	SHORT $LN12@sqlite3VXP
cmp	DWORD PTR _needQuote$5[ebp], 0
je	SHORT $LN9@sqlite3VXP
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, DWORD PTR _j$20[ebp]
mov	dl, BYTE PTR _q$21[ebp]
mov	BYTE PTR [ecx], dl
mov	eax, DWORD PTR _j$20[ebp]
add	eax, 1
mov	DWORD PTR _j$20[ebp], eax
mov	ecx, DWORD PTR _bufpt$[ebp]
add	ecx, DWORD PTR _j$20[ebp]
mov	BYTE PTR [ecx], 0
mov	edx, DWORD PTR _j$20[ebp]
mov	DWORD PTR _length$[ebp], edx
jmp	$LN164@sqlite3VXP
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _pToken$8[ebp], edx
cmp	DWORD PTR _pToken$8[ebp], 0
je	SHORT $LN7@sqlite3VXP
mov	eax, DWORD PTR _pToken$8[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN7@sqlite3VXP
mov	ecx, DWORD PTR _pToken$8[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pToken$8[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pAccum$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	DWORD PTR _width$[ebp], 0
mov	eax, DWORD PTR _width$[ebp]
mov	DWORD PTR _length$[ebp], eax
jmp	$LN164@sqlite3VXP
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _pSrc$1[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _k$2[ebp], eax
imul	ecx, DWORD PTR _k$2[ebp], 80
mov	edx, DWORD PTR _pSrc$1[ebp]
lea	eax, DWORD PTR [edx+ecx+8]
mov	DWORD PTR _pItem$7[ebp], eax
mov	ecx, DWORD PTR _pItem$7[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN5@sqlite3VXP
mov	edx, DWORD PTR _pItem$7[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_sqlite3StrAccumAppendAll
add	esp, 8
push	1
push	OFFSET $SG85627
mov	edx, DWORD PTR _pAccum$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	eax, DWORD PTR _pItem$7[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _pAccum$[ebp]
push	edx
call	_sqlite3StrAccumAppendAll
add	esp, 8
mov	DWORD PTR _width$[ebp], 0
mov	eax, DWORD PTR _width$[ebp]
mov	DWORD PTR _length$[ebp], eax
jmp	SHORT $LN164@sqlite3VXP
jmp	SHORT $LN211@sqlite3VXP
mov	ecx, DWORD PTR _width$[ebp]
sub	ecx, DWORD PTR _length$[ebp]
mov	DWORD PTR _width$[ebp], ecx
cmp	DWORD PTR _width$[ebp], 0
jle	SHORT $LN3@sqlite3VXP
movzx	edx, BYTE PTR _flag_leftjustify$[ebp]
test	edx, edx
jne	SHORT $LN3@sqlite3VXP
mov	eax, DWORD PTR _width$[ebp]
push	eax
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_sqlite3AppendSpace
add	esp, 8
mov	edx, DWORD PTR _length$[ebp]
push	edx
mov	eax, DWORD PTR _bufpt$[ebp]
push	eax
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
cmp	DWORD PTR _width$[ebp], 0
jle	SHORT $LN2@sqlite3VXP
movzx	edx, BYTE PTR _flag_leftjustify$[ebp]
test	edx, edx
je	SHORT $LN2@sqlite3VXP
mov	eax, DWORD PTR _width$[ebp]
push	eax
mov	ecx, DWORD PTR _pAccum$[ebp]
push	ecx
call	_sqlite3AppendSpace
add	esp, 8
cmp	DWORD PTR _zExtra$[ebp], 0
je	SHORT $LN1@sqlite3VXP
mov	edx, DWORD PTR _zExtra$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
jmp	$LN212@sqlite3VXP
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN198@sqlite3VXP
DD	$LN196@sqlite3VXP
DD	$LN197@sqlite3VXP
DD	$LN199@sqlite3VXP
DD	$LN200@sqlite3VXP
DD	$LN195@sqlite3VXP
DD	$LN194@sqlite3VXP
DB	0
DB	1
DB	6
DB	2
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	3
DB	6
DB	4
DB	6
DB	6
DB	5
npad	3
DD	$LN162@sqlite3VXP
DD	$LN120@sqlite3VXP
DD	$LN120@sqlite3VXP
DD	$LN120@sqlite3VXP
DD	$LN47@sqlite3VXP
DD	$LN36@sqlite3VXP
DD	$LN36@sqlite3VXP
DD	$LN45@sqlite3VXP
DD	$LN44@sqlite3VXP
DD	$LN25@sqlite3VXP
DD	$LN25@sqlite3VXP
DD	$LN8@sqlite3VXP
DD	$LN6@sqlite3VXP
DD	$LN163@sqlite3VXP
DD	$LN25@sqlite3VXP
DD	$LN162@sqlite3VXP
ENDP
_sqlite3IsNaN PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
movsd	xmm0, QWORD PTR _x$[ebp]
movsd	QWORD PTR _y$[ebp], xmm0
movsd	xmm0, QWORD PTR _y$[ebp]
movsd	QWORD PTR _z$[ebp], xmm0
movsd	xmm0, QWORD PTR _y$[ebp]
ucomisd	xmm0, QWORD PTR _z$[ebp]
lahf
test	ah, 68					
jnp	SHORT $LN3@sqlite3IsN
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@sqlite3IsN
mov	DWORD PTR tv68[ebp], 0
mov	eax, DWORD PTR tv68[ebp]
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3StatusSet PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _X$[ebp]
mov	DWORD PTR _sqlite3Stat[eax*4], ecx
mov	edx, DWORD PTR _op$[ebp]
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _sqlite3Stat[edx*4]
cmp	ecx, DWORD PTR _sqlite3Stat[eax*4+40]
jle	SHORT $LN2@sqlite3Sta
mov	edx, DWORD PTR _op$[ebp]
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _sqlite3Stat[eax*4]
mov	DWORD PTR _sqlite3Stat[edx*4+40], ecx
pop	ebp
ret	0
ENDP
_sqlite3StatusAdd PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _sqlite3Stat[eax*4]
add	ecx, DWORD PTR _N$[ebp]
mov	edx, DWORD PTR _op$[ebp]
mov	DWORD PTR _sqlite3Stat[edx*4], ecx
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _sqlite3Stat[eax*4]
cmp	edx, DWORD PTR _sqlite3Stat[ecx*4+40]
jle	SHORT $LN2@sqlite3Sta
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _sqlite3Stat[ecx*4]
mov	DWORD PTR _sqlite3Stat[eax*4+40], edx
pop	ebp
ret	0
ENDP
_sqlite3StatusValue PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _op$[ebp]
mov	eax, DWORD PTR _sqlite3Stat[eax*4]
pop	ebp
ret	0
ENDP
_sqlite3MutexEnd PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _sqlite3Config+72, 0
je	SHORT $LN1@sqlite3Mut
call	DWORD PTR _sqlite3Config+72
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MutexInit PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _sqlite3Config+76, 0
jne	SHORT $LN3@sqlite3Mut
mov	DWORD PTR _pTo$1[ebp], OFFSET _sqlite3Config+68
cmp	DWORD PTR _sqlite3Config+4, 0
je	SHORT $LN2@sqlite3Mut
call	_sqlite3DefaultMutex
mov	DWORD PTR _pFrom$2[ebp], eax
jmp	SHORT $LN1@sqlite3Mut
call	_sqlite3NoopMutex
mov	DWORD PTR _pFrom$2[ebp], eax
push	8
mov	eax, DWORD PTR _pFrom$2[ebp]
push	eax
mov	ecx, DWORD PTR _pTo$1[ebp]
push	ecx
call	_memcpy
add	esp, 12					
push	24					
mov	edx, DWORD PTR _pFrom$2[ebp]
add	edx, 12					
push	edx
mov	eax, DWORD PTR _pTo$1[ebp]
add	eax, 12					
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pTo$1[ebp]
mov	edx, DWORD PTR _pFrom$2[ebp]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR [ecx+8], eax
call	DWORD PTR _sqlite3Config+68
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MutexAlloc PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _sqlite3Config+4, 0
jne	SHORT $LN1@sqlite3Mut
xor	eax, eax
jmp	SHORT $LN2@sqlite3Mut
mov	eax, DWORD PTR _id$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+76
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3NoopMutex PROC
push	ebp
mov	ebp, esp
mov	eax, OFFSET ?sMutex@?1??sqlite3NoopMutex@@9@9
pop	ebp
ret	0
ENDP
_sqlite3DefaultMutex PROC
push	ebp
mov	ebp, esp
mov	eax, OFFSET ?sMutex@?1??sqlite3DefaultMutex@@9@9
pop	ebp
ret	0
ENDP
_sqlite3HeapNearlyFull PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _mem0+36
pop	ebp
ret	0
ENDP
_sqlite3BenignMallocHooks PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xBenignBegin$[ebp]
mov	DWORD PTR _sqlite3Hooks, eax
mov	ecx, DWORD PTR _xBenignEnd$[ebp]
mov	DWORD PTR _sqlite3Hooks+4, ecx
pop	ebp
ret	0
ENDP
_sqlite3MemSetDefault PROC
push	ebp
mov	ebp, esp
push	OFFSET ?defaultMethods@?1??sqlite3MemSetDefault@@9@9
push	4
call	_sqlite3_config
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3PageFree PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_pcache1Free
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PageMalloc PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _sz$[ebp]
push	eax
call	_pcache1Alloc
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3ScratchFree PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _p$[ebp], 0
je	$LN6@sqlite3Scr
mov	eax, DWORD PTR _p$[ebp]
cmp	eax, DWORD PTR _sqlite3Config+192
jb	SHORT $LN4@sqlite3Scr
mov	ecx, DWORD PTR _p$[ebp]
cmp	ecx, DWORD PTR _mem0+24
jae	SHORT $LN4@sqlite3Scr
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pSlot$2[ebp], edx
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pSlot$2[ebp]
mov	edx, DWORD PTR _mem0+28
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pSlot$2[ebp]
mov	DWORD PTR _mem0+28, eax
mov	ecx, DWORD PTR _mem0+32
add	ecx, 1
mov	DWORD PTR _mem0+32, ecx
push	-1
push	3
call	_sqlite3StatusAdd
add	esp, 8
mov	edx, DWORD PTR _mem0
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN6@sqlite3Scr
cmp	DWORD PTR _sqlite3Config, 0
je	SHORT $LN2@sqlite3Scr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3MallocSize
add	esp, 4
mov	DWORD PTR _iSize$1[ebp], eax
mov	ecx, DWORD PTR _mem0
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _iSize$1[ebp]
neg	edx
push	edx
push	4
call	_sqlite3StatusAdd
add	esp, 8
mov	eax, DWORD PTR _iSize$1[ebp]
neg	eax
push	eax
push	0
call	_sqlite3StatusAdd
add	esp, 8
push	-1
push	9
call	_sqlite3StatusAdd
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	DWORD PTR _sqlite3Config+40
add	esp, 4
mov	edx, DWORD PTR _mem0
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN6@sqlite3Scr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+40
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3ScratchMalloc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _mem0+32, 0
je	SHORT $LN5@sqlite3Scr
mov	ecx, DWORD PTR _sqlite3Config+196
cmp	ecx, DWORD PTR _n$[ebp]
jl	SHORT $LN5@sqlite3Scr
mov	edx, DWORD PTR _mem0+28
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _mem0+28
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _mem0+28, ecx
mov	edx, DWORD PTR _mem0+32
sub	edx, 1
mov	DWORD PTR _mem0+32, edx
push	1
push	3
call	_sqlite3StatusAdd
add	esp, 8
mov	eax, DWORD PTR _n$[ebp]
push	eax
push	8
call	_sqlite3StatusSet
add	esp, 8
mov	ecx, DWORD PTR _mem0
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN4@sqlite3Scr
cmp	DWORD PTR _sqlite3Config, 0
je	SHORT $LN3@sqlite3Scr
mov	edx, DWORD PTR _n$[ebp]
push	edx
push	8
call	_sqlite3StatusSet
add	esp, 8
lea	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
call	_mallocWithAlarm
add	esp, 8
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3Scr
mov	edx, DWORD PTR _n$[ebp]
push	edx
push	4
call	_sqlite3StatusAdd
add	esp, 8
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN4@sqlite3Scr
mov	ecx, DWORD PTR _mem0
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	edx, DWORD PTR _n$[ebp]
push	edx
call	DWORD PTR _sqlite3Config+36
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbMallocSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_isLookaside
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3DbM
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, WORD PTR [edx+240]
jmp	SHORT $LN3@sqlite3DbM
jmp	SHORT $LN3@sqlite3DbM
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+48
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3MallocSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+48
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3DbFree PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN4@sqlite3DbF
jmp	$LN5@sqlite3DbF
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN3@sqlite3DbF
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+512], 0
je	SHORT $LN2@sqlite3DbF
mov	ecx, DWORD PTR _db$[ebp]
mov	esi, DWORD PTR [ecx+512]
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocSize
add	esp, 8
add	eax, DWORD PTR [esi]
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+512]
mov	DWORD PTR [edx], eax
jmp	SHORT $LN5@sqlite3DbF
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_isLookaside
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3DbF
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR _pBuf$1[ebp], edx
mov	eax, DWORD PTR _pBuf$1[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+264]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pBuf$1[ebp]
mov	DWORD PTR [eax+264], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+244]
sub	eax, 1
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+244], eax
jmp	SHORT $LN5@sqlite3DbF
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbRealloc PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _pNew$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	$LN7@sqlite3DbR
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN6@sqlite3DbR
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
jmp	$LN8@sqlite3DbR
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_isLookaside
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3DbR
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, WORD PTR [eax+240]
cmp	DWORD PTR _n$[ebp], ecx
jg	SHORT $LN4@sqlite3DbR
mov	eax, DWORD PTR _p$[ebp]
jmp	SHORT $LN8@sqlite3DbR
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
je	SHORT $LN3@sqlite3DbR
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, WORD PTR [ecx+240]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pNew$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN7@sqlite3DbR
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN7@sqlite3DbR
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbReallocOrFree PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbRealloc
add	esp, 12					
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN1@sqlite3DbR
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Realloc PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
push	esi
push	edi
cmp	DWORD PTR _pOld$[ebp], 0
jne	SHORT $LN10@sqlite3Rea
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
call	_sqlite3Malloc
add	esp, 4
jmp	$LN11@sqlite3Rea
cmp	DWORD PTR _nBytes$[ebp], 0
jg	SHORT $LN9@sqlite3Rea
mov	ecx, DWORD PTR _pOld$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
xor	eax, eax
jmp	$LN11@sqlite3Rea
cmp	DWORD PTR _nBytes$[ebp], 2147483392	
jl	SHORT $LN8@sqlite3Rea
xor	eax, eax
jmp	$LN11@sqlite3Rea
mov	edx, DWORD PTR _pOld$[ebp]
push	edx
call	_sqlite3MallocSize
add	esp, 4
mov	DWORD PTR _nOld$[ebp], eax
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+52
add	esp, 4
mov	DWORD PTR _nNew$[ebp], eax
mov	ecx, DWORD PTR _nOld$[ebp]
cmp	ecx, DWORD PTR _nNew$[ebp]
jne	SHORT $LN7@sqlite3Rea
mov	edx, DWORD PTR _pOld$[ebp]
mov	DWORD PTR _pNew$[ebp], edx
jmp	$LN6@sqlite3Rea
cmp	DWORD PTR _sqlite3Config, 0
je	$LN5@sqlite3Rea
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _nBytes$[ebp]
push	ecx
push	5
call	_sqlite3StatusSet
add	esp, 8
mov	edx, DWORD PTR _nNew$[ebp]
sub	edx, DWORD PTR _nOld$[ebp]
mov	DWORD PTR _nDiff$[ebp], edx
push	0
call	_sqlite3StatusValue
add	esp, 4
cdq
mov	ecx, eax
mov	esi, edx
mov	eax, DWORD PTR _nDiff$[ebp]
cdq
mov	edi, DWORD PTR _mem0+8
sub	edi, eax
mov	eax, DWORD PTR _mem0+12
sbb	eax, edx
mov	DWORD PTR tv171[ebp], ecx
mov	DWORD PTR tv171[ebp+4], esi
mov	DWORD PTR tv174[ebp], edi
mov	DWORD PTR tv174[ebp+4], eax
mov	ecx, DWORD PTR tv171[ebp+4]
cmp	ecx, DWORD PTR tv174[ebp+4]
jl	SHORT $LN4@sqlite3Rea
jg	SHORT $LN13@sqlite3Rea
mov	edx, DWORD PTR tv171[ebp]
cmp	edx, DWORD PTR tv174[ebp]
jb	SHORT $LN4@sqlite3Rea
mov	eax, DWORD PTR _nDiff$[ebp]
push	eax
call	_sqlite3MallocAlarm
add	esp, 4
mov	ecx, DWORD PTR _nNew$[ebp]
push	ecx
mov	edx, DWORD PTR _pOld$[ebp]
push	edx
call	DWORD PTR _sqlite3Config+44
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
jne	SHORT $LN3@sqlite3Rea
cmp	DWORD PTR _mem0+16, 0
je	SHORT $LN3@sqlite3Rea
mov	eax, DWORD PTR _nBytes$[ebp]
push	eax
call	_sqlite3MallocAlarm
add	esp, 4
mov	ecx, DWORD PTR _nNew$[ebp]
push	ecx
mov	edx, DWORD PTR _pOld$[ebp]
push	edx
call	DWORD PTR _sqlite3Config+44
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
cmp	DWORD PTR _pNew$[ebp], 0
je	SHORT $LN2@sqlite3Rea
mov	eax, DWORD PTR _pNew$[ebp]
push	eax
call	_sqlite3MallocSize
add	esp, 4
mov	DWORD PTR _nNew$[ebp], eax
mov	ecx, DWORD PTR _nNew$[ebp]
sub	ecx, DWORD PTR _nOld$[ebp]
push	ecx
push	0
call	_sqlite3StatusAdd
add	esp, 8
mov	edx, DWORD PTR _mem0
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN6@sqlite3Rea
mov	eax, DWORD PTR _nNew$[ebp]
push	eax
mov	ecx, DWORD PTR _pOld$[ebp]
push	ecx
call	DWORD PTR _sqlite3Config+44
add	esp, 8
mov	DWORD PTR _pNew$[ebp], eax
mov	eax, DWORD PTR _pNew$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbStrNDup PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN2@sqlite3DbS
xor	eax, eax
jmp	SHORT $LN3@sqlite3DbS
mov	eax, DWORD PTR _n$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zNew$[ebp], eax
cmp	DWORD PTR _zNew$[ebp], 0
je	SHORT $LN1@sqlite3DbS
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _zNew$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _zNew$[ebp]
add	edx, DWORD PTR _n$[ebp]
mov	BYTE PTR [edx], 0
mov	eax, DWORD PTR _zNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbStrDup PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN2@sqlite3DbS
xor	eax, eax
jmp	SHORT $LN3@sqlite3DbS
mov	eax, DWORD PTR _z$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zNew$[ebp], eax
cmp	DWORD PTR _zNew$[ebp], 0
je	SHORT $LN1@sqlite3DbS
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _zNew$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _zNew$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbMallocRaw PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _db$[ebp], 0
je	$LN9@sqlite3DbM
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN8@sqlite3DbM
xor	eax, eax
jmp	$LN10@sqlite3DbM
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+242]
test	eax, eax
je	$LN9@sqlite3DbM
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, WORD PTR [ecx+240]
cmp	DWORD PTR _n$[ebp], edx
jle	SHORT $LN6@sqlite3DbM
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+eax+252]
add	edx, 1
mov	eax, 4
shl	eax, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+eax+252], edx
jmp	$LN9@sqlite3DbM
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+264]
mov	DWORD PTR _pBuf$1[ebp], eax
cmp	DWORD PTR _pBuf$1[ebp], 0
jne	SHORT $LN4@sqlite3DbM
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+ecx+252]
add	eax, 1
mov	ecx, 4
shl	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+ecx+252], eax
jmp	SHORT $LN9@sqlite3DbM
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pBuf$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+264], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+244]
add	ecx, 1
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+244], ecx
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+ecx+252]
add	eax, 1
mov	ecx, 4
imul	edx, ecx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+edx+252], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [edx+244]
cmp	ecx, DWORD PTR [eax+248]
jle	SHORT $LN2@sqlite3DbM
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+244]
mov	DWORD PTR [edx+248], ecx
mov	eax, DWORD PTR _pBuf$1[ebp]
jmp	SHORT $LN10@sqlite3DbM
mov	edx, DWORD PTR _n$[ebp]
push	edx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@sqlite3DbM
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN1@sqlite3DbM
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 1
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3DbMallocZero PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3DbM
mov	edx, DWORD PTR _n$[ebp]
push	edx
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MallocZero PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _n$[ebp]
push	eax
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Mal
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Malloc PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _n$[ebp], 0
jle	SHORT $LN4@sqlite3Mal
cmp	DWORD PTR _n$[ebp], 2147483392		
jl	SHORT $LN5@sqlite3Mal
mov	DWORD PTR _p$[ebp], 0
jmp	SHORT $LN3@sqlite3Mal
cmp	DWORD PTR _sqlite3Config, 0
je	SHORT $LN2@sqlite3Mal
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
lea	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _n$[ebp]
push	edx
call	_mallocWithAlarm
add	esp, 8
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN3@sqlite3Mal
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
call	DWORD PTR _sqlite3Config+36
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3MallocEnd PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _sqlite3Config+60, 0
je	SHORT $LN1@sqlite3Mal
mov	eax, DWORD PTR _sqlite3Config+64
push	eax
call	DWORD PTR _sqlite3Config+60
add	esp, 4
push	40					
push	0
push	OFFSET _mem0
call	_memset
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3MallocInit PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _sqlite3Config+36, 0
jne	SHORT $LN9@sqlite3Mal
call	_sqlite3MemSetDefault
push	40					
push	0
push	OFFSET _mem0
call	_memset
add	esp, 12					
cmp	DWORD PTR _sqlite3Config+4, 0
je	SHORT $LN8@sqlite3Mal
push	3
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mem0, eax
cmp	DWORD PTR _sqlite3Config+192, 0
je	$LN7@sqlite3Mal
cmp	DWORD PTR _sqlite3Config+196, 100	
jl	$LN7@sqlite3Mal
cmp	DWORD PTR _sqlite3Config+200, 0
jle	$LN7@sqlite3Mal
mov	eax, DWORD PTR _sqlite3Config+196
and	eax, -8					
mov	DWORD PTR _sz$1[ebp], eax
mov	ecx, DWORD PTR _sz$1[ebp]
mov	DWORD PTR _sqlite3Config+196, ecx
mov	edx, DWORD PTR _sqlite3Config+192
mov	DWORD PTR _pSlot$4[ebp], edx
mov	eax, DWORD PTR _sqlite3Config+200
mov	DWORD PTR _n$2[ebp], eax
mov	ecx, DWORD PTR _pSlot$4[ebp]
mov	DWORD PTR _mem0+28, ecx
mov	edx, DWORD PTR _n$2[ebp]
mov	DWORD PTR _mem0+32, edx
mov	DWORD PTR _i$3[ebp], 0
jmp	SHORT $LN6@sqlite3Mal
mov	eax, DWORD PTR _i$3[ebp]
add	eax, 1
mov	DWORD PTR _i$3[ebp], eax
mov	ecx, DWORD PTR _n$2[ebp]
sub	ecx, 1
cmp	DWORD PTR _i$3[ebp], ecx
jge	SHORT $LN4@sqlite3Mal
mov	edx, DWORD PTR _pSlot$4[ebp]
add	edx, DWORD PTR _sz$1[ebp]
mov	eax, DWORD PTR _pSlot$4[ebp]
mov	DWORD PTR [eax], edx
mov	ecx, DWORD PTR _pSlot$4[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pSlot$4[ebp], edx
jmp	SHORT $LN5@sqlite3Mal
mov	eax, DWORD PTR _pSlot$4[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, 4
shl	ecx, 0
add	ecx, DWORD PTR _pSlot$4[ebp]
mov	DWORD PTR _mem0+24, ecx
jmp	SHORT $LN3@sqlite3Mal
mov	DWORD PTR _mem0+24, 0
mov	DWORD PTR _sqlite3Config+192, 0
mov	DWORD PTR _sqlite3Config+196, 0
mov	DWORD PTR _sqlite3Config+200, 0
cmp	DWORD PTR _sqlite3Config+204, 0
je	SHORT $LN1@sqlite3Mal
cmp	DWORD PTR _sqlite3Config+208, 512	
jl	SHORT $LN1@sqlite3Mal
cmp	DWORD PTR _sqlite3Config+212, 1
jge	SHORT $LN2@sqlite3Mal
mov	DWORD PTR _sqlite3Config+204, 0
mov	DWORD PTR _sqlite3Config+208, 0
mov	DWORD PTR _sqlite3Config+212, 0
mov	edx, DWORD PTR _sqlite3Config+64
push	edx
call	DWORD PTR _sqlite3Config+56
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3Strlen30 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _z$[ebp]
mov	DWORD PTR _z2$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN2@sqlite3Str
xor	eax, eax
jmp	SHORT $LN4@sqlite3Str
mov	ecx, DWORD PTR _z2$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN1@sqlite3Str
mov	eax, DWORD PTR _z2$[ebp]
add	eax, 1
mov	DWORD PTR _z2$[ebp], eax
jmp	SHORT $LN2@sqlite3Str
mov	eax, DWORD PTR _z2$[ebp]
sub	eax, DWORD PTR _z$[ebp]
and	eax, 1073741823				
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3CantopenError PROC
push	ebp
mov	ebp, esp
call	_sqlite3_sourceid
add	eax, 20					
push	eax
mov	eax, DWORD PTR _lineno$[ebp]
push	eax
push	OFFSET $SG121655
push	14					
call	_sqlite3_log
add	esp, 16					
mov	eax, 14					
pop	ebp
ret	0
ENDP
_sqlite3MisuseError PROC
push	ebp
mov	ebp, esp
call	_sqlite3_sourceid
add	eax, 20					
push	eax
mov	eax, DWORD PTR _lineno$[ebp]
push	eax
push	OFFSET $SG121651
push	21					
call	_sqlite3_log
add	esp, 16					
mov	eax, 21					
pop	ebp
ret	0
ENDP
_sqlite3CorruptError PROC
push	ebp
mov	ebp, esp
call	_sqlite3_sourceid
add	eax, 20					
push	eax
mov	eax, DWORD PTR _lineno$[ebp]
push	eax
push	OFFSET $SG121647
push	11					
call	_sqlite3_log
add	esp, 16					
mov	eax, 11					
pop	ebp
ret	0
ENDP
_sqlite3WalkSelectFrom PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _pSrc$[ebp], ecx
cmp	DWORD PTR _pSrc$[ebp], 0
je	SHORT $LN5@sqlite3Wal
mov	edx, DWORD PTR _pSrc$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _pSrc$[ebp]
add	ecx, 8
mov	DWORD PTR _pItem$[ebp], ecx
jmp	SHORT $LN4@sqlite3Wal
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _pItem$[ebp]
add	eax, 80					
mov	DWORD PTR _pItem$[ebp], eax
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN5@sqlite3Wal
mov	ecx, DWORD PTR _pItem$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR _pWalker$[ebp]
push	eax
call	_sqlite3WalkSelect
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN6@sqlite3Wal
jmp	SHORT $LN3@sqlite3Wal
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalkSelectExpr PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExprList
add	esp, 8
test	eax, eax
je	SHORT $LN7@sqlite3Wal
mov	eax, 2
jmp	$LN8@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExpr
add	esp, 8
test	eax, eax
je	SHORT $LN6@sqlite3Wal
mov	eax, 2
jmp	$LN8@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExprList
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN8@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExpr
add	esp, 8
test	eax, eax
je	SHORT $LN4@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN8@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExprList
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN8@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExpr
add	esp, 8
test	eax, eax
je	SHORT $LN2@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN8@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExpr
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN8@sqlite3Wal
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3WalkSelect PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN8@sqlite3Wal
mov	eax, DWORD PTR _pWalker$[ebp]
cmp	DWORD PTR [eax+4], 0
jne	SHORT $LN9@sqlite3Wal
mov	ecx, DWORD PTR _pWalker$[ebp]
cmp	DWORD PTR [ecx+8], 0
jne	SHORT $LN9@sqlite3Wal
xor	eax, eax
jmp	$LN10@sqlite3Wal
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx+16]
add	eax, 1
mov	ecx, DWORD PTR _pWalker$[ebp]
mov	DWORD PTR [ecx+16], eax
cmp	DWORD PTR _p$[ebp], 0
je	$LN6@sqlite3Wal
mov	edx, DWORD PTR _pWalker$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN5@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx+4]
call	eax
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@sqlite3Wal
jmp	SHORT $LN6@sqlite3Wal
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkSelectExpr
add	esp, 8
test	eax, eax
jne	SHORT $LN2@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
call	_sqlite3WalkSelectFrom
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3Wal
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx+16]
sub	eax, 1
mov	ecx, DWORD PTR _pWalker$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	eax, 2
jmp	SHORT $LN10@sqlite3Wal
mov	edx, DWORD PTR _pWalker$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN1@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx+8]
call	eax
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _p$[ebp], edx
jmp	$LN7@sqlite3Wal
mov	eax, DWORD PTR _pWalker$[ebp]
mov	ecx, DWORD PTR [eax+16]
sub	ecx, 1
mov	edx, DWORD PTR _pWalker$[ebp]
mov	DWORD PTR [edx+16], ecx
mov	eax, DWORD PTR _rc$[ebp]
and	eax, 2
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalkExprList PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN5@sqlite3Wal
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pItem$[ebp], eax
jmp	SHORT $LN4@sqlite3Wal
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pItem$[ebp]
add	edx, 24					
mov	DWORD PTR _pItem$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jle	SHORT $LN5@sqlite3Wal
mov	eax, DWORD PTR _pItem$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExpr
add	esp, 8
test	eax, eax
je	SHORT $LN1@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN6@sqlite3Wal
jmp	SHORT $LN3@sqlite3Wal
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3WalkExpr PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pExpr$[ebp], 0
jne	SHORT $LN8@sqlite3Wal
xor	eax, eax
jmp	$LN9@sqlite3Wal
mov	eax, DWORD PTR _pExpr$[ebp]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
mov	eax, DWORD PTR [edx]
call	eax
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN7@sqlite3Wal
mov	ecx, DWORD PTR _pExpr$[ebp]
mov	edx, DWORD PTR [ecx+4]
and	edx, 16384				
jne	$LN7@sqlite3Wal
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExpr
add	esp, 8
test	eax, eax
je	SHORT $LN6@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN9@sqlite3Wal
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pWalker$[ebp]
push	edx
call	_sqlite3WalkExpr
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN9@sqlite3Wal
mov	eax, DWORD PTR _pExpr$[ebp]
mov	ecx, DWORD PTR [eax+4]
and	ecx, 2048				
je	SHORT $LN4@sqlite3Wal
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
call	_sqlite3WalkSelect
add	esp, 8
test	eax, eax
je	SHORT $LN3@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN9@sqlite3Wal
jmp	SHORT $LN7@sqlite3Wal
mov	edx, DWORD PTR _pExpr$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pWalker$[ebp]
push	ecx
call	_sqlite3WalkExprList
add	esp, 8
test	eax, eax
je	SHORT $LN7@sqlite3Wal
mov	eax, 2
jmp	SHORT $LN9@sqlite3Wal
mov	eax, DWORD PTR _rc$[ebp]
and	eax, 2
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OsCloseFree PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pFile$[ebp]
push	eax
call	_sqlite3OsClose
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OsOpenMalloc PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 7
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pFile$[ebp], eax
cmp	DWORD PTR _pFile$[ebp], 0
je	SHORT $LN3@sqlite3OsO
mov	edx, DWORD PTR _pOutFlags$[ebp]
push	edx
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
mov	edx, DWORD PTR _zFile$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3OsO
mov	ecx, DWORD PTR _pFile$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN3@sqlite3OsO
mov	edx, DWORD PTR _ppFile$[ebp]
mov	eax, DWORD PTR _pFile$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OsCurrentTimeInt64 PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pVfs$[ebp]
cmp	DWORD PTR [eax], 2
jl	SHORT $LN2@sqlite3OsC
mov	ecx, DWORD PTR _pVfs$[ebp]
cmp	DWORD PTR [ecx+72], 0
je	SHORT $LN2@sqlite3OsC
mov	edx, DWORD PTR _pTimeOut$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR [ecx+72]
call	edx
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN1@sqlite3OsC
lea	eax, DWORD PTR _r$1[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+64]
call	eax
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
movsd	xmm0, QWORD PTR _r$1[ebp]
mulsd	xmm0, QWORD PTR __real@4194997000000000
call	__dtol3
mov	ecx, DWORD PTR _pTimeOut$[ebp]
mov	DWORD PTR [ecx], eax
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OsSleep PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _nMicro$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+60]
call	eax
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsRandomness PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zBufOut$[ebp]
push	eax
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+56]
call	ecx
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3OsDlClose PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pHandle$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+52]
call	eax
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsDlSym PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zSym$[ebp]
push	eax
mov	ecx, DWORD PTR _pHdle$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+48]
call	ecx
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3OsDlError PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zBufOut$[ebp]
push	eax
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+44]
call	ecx
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3OsDlOpen PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zPath$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+40]
call	eax
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsFullPathname PROC
push	ebp
mov	ebp, esp
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zPathOut$[ebp]
mov	BYTE PTR [edx+ecx], 0
mov	eax, DWORD PTR _zPathOut$[ebp]
push	eax
mov	ecx, DWORD PTR _nPathOut$[ebp]
push	ecx
mov	edx, DWORD PTR _zPath$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR [ecx+36]
call	edx
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3OsAccess PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pResOut$[ebp]
push	eax
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
mov	edx, DWORD PTR _zPath$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR [ecx+32]
call	edx
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3OsDelete PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _dirSync$[ebp]
push	eax
mov	ecx, DWORD PTR _zPath$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+28]
call	ecx
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3OsOpen PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pFlagsOut$[ebp]
push	eax
mov	ecx, DWORD PTR _flags$[ebp]
and	ecx, 556927				
push	ecx
mov	edx, DWORD PTR _pFile$[ebp]
push	edx
mov	eax, DWORD PTR _zPath$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+24]
call	eax
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OsUnfetch PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _iOff$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iOff$[ebp]
push	edx
mov	eax, DWORD PTR _id$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+72]
call	eax
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3OsFetch PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pp$[ebp]
push	eax
mov	ecx, DWORD PTR _iAmt$[ebp]
push	ecx
mov	edx, DWORD PTR _iOff$[ebp+4]
push	edx
mov	eax, DWORD PTR _iOff$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+68]
call	ecx
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3OsShmUnmap PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _deleteFlag$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+64]
call	ecx
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsShmBarrier PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _id$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+60]
call	eax
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3OsShmLock PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _offset$[ebp]
push	edx
mov	eax, DWORD PTR _id$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+56]
call	eax
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3OsShmMap PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pp$[ebp]
push	eax
mov	ecx, DWORD PTR _bExtend$[ebp]
push	ecx
mov	edx, DWORD PTR _pgsz$[ebp]
push	edx
mov	eax, DWORD PTR _iPage$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+52]
call	ecx
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3OsDeviceCharacteristics PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _id$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+48]
call	eax
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3OsSectorSize PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _id$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+44]
mov	DWORD PTR _xSectorSize$[ebp], edx
cmp	DWORD PTR _xSectorSize$[ebp], 0
je	SHORT $LN3@sqlite3OsS
mov	eax, DWORD PTR _id$[ebp]
push	eax
call	DWORD PTR _xSectorSize$[ebp]
add	esp, 4
mov	DWORD PTR tv69[ebp], eax
jmp	SHORT $LN4@sqlite3OsS
mov	DWORD PTR tv69[ebp], 4096		
mov	eax, DWORD PTR tv69[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OsFileControlHint PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pArg$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
push	edx
mov	eax, DWORD PTR _id$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+40]
call	edx
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3OsFileControl PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pArg$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
push	edx
mov	eax, DWORD PTR _id$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+40]
call	edx
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3OsCheckReservedLock PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pResOut$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+36]
call	ecx
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsUnlock PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _lockType$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+32]
call	ecx
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsLock PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _lockType$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+28]
call	ecx
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsFileSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pSize$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+24]
call	ecx
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsSync PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+20]
call	ecx
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3OsTruncate PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _size$[ebp+4]
push	eax
mov	ecx, DWORD PTR _size$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
push	edx
mov	eax, DWORD PTR _id$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+16]
call	edx
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3OsWrite PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _offset$[ebp+4]
push	eax
mov	ecx, DWORD PTR _offset$[ebp]
push	ecx
mov	edx, DWORD PTR _amt$[ebp]
push	edx
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
call	ecx
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3OsRead PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _offset$[ebp+4]
push	eax
mov	ecx, DWORD PTR _offset$[ebp]
push	ecx
mov	edx, DWORD PTR _amt$[ebp]
push	edx
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _id$[ebp]
push	ecx
mov	edx, DWORD PTR _id$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+8]
call	ecx
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3OsClose PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pId$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN1@sqlite3OsC
mov	ecx, DWORD PTR _pId$[ebp]
push	ecx
mov	edx, DWORD PTR _pId$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+4]
call	ecx
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pId$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3OsInit PROC
push	ebp
mov	ebp, esp
push	ecx
push	10					
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@sqlite3OsI
mov	eax, 7
jmp	SHORT $LN2@sqlite3OsI
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
call	_sqlite3_os_init
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PCacheSetDefault PROC
push	ebp
mov	ebp, esp
push	OFFSET ?defaultMethods@?1??sqlite3PCacheSetDefault@@9@9
push	18					
call	_sqlite3_config
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3PcacheShrink PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN2@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	DWORD PTR _sqlite3Config+152
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PcacheSetCachesize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR _mxPage$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [edx+40], 0
je	SHORT $LN2@sqlite3Pca
mov	eax, DWORD PTR _pCache$[ebp]
push	eax
call	_numberOfCachePages
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	DWORD PTR _sqlite3Config+124
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3PcachePagecount PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _nPage$[ebp], 0
mov	eax, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN1@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	DWORD PTR _sqlite3Config+128
add	esp, 4
mov	DWORD PTR _nPage$[ebp], eax
mov	eax, DWORD PTR _nPage$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcachePageRefcount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [eax+26]
pop	ebp
ret	0
ENDP
_sqlite3PcacheRef PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR [eax+26]
add	cx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+26], cx
pop	ebp
ret	0
ENDP
_sqlite3PcacheRefCount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [eax+12]
pop	ebp
ret	0
ENDP
_sqlite3PcacheClear PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _pCache$[ebp]
push	eax
call	_sqlite3PcacheTruncate
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3PcacheClearSyncFlags PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Pca
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+24]
and	edx, -5					
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+24], dx
jmp	SHORT $LN2@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR [ecx+8], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheClose PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN2@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	DWORD PTR _sqlite3Config+148
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PcacheDirtyList PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
jmp	SHORT $LN3@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Pca
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR [ecx+12], eax
jmp	SHORT $LN2@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_pcacheSortDirtyList
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheTruncate PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [eax+40], 0
je	$LN7@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _p$2[ebp], edx
jmp	SHORT $LN5@sqlite3Pca
mov	eax, DWORD PTR _pNext$1[ebp]
mov	DWORD PTR _p$2[ebp], eax
cmp	DWORD PTR _p$2[ebp], 0
je	SHORT $LN3@sqlite3Pca
mov	ecx, DWORD PTR _p$2[ebp]
mov	edx, DWORD PTR [ecx+32]
mov	DWORD PTR _pNext$1[ebp], edx
mov	eax, DWORD PTR _p$2[ebp]
mov	ecx, DWORD PTR [eax+20]
cmp	ecx, DWORD PTR _pgno$[ebp]
jbe	SHORT $LN2@sqlite3Pca
mov	edx, DWORD PTR _p$2[ebp]
push	edx
call	_sqlite3PcacheMakeClean
add	esp, 4
jmp	SHORT $LN4@sqlite3Pca
cmp	DWORD PTR _pgno$[ebp], 0
jne	SHORT $LN1@sqlite3Pca
mov	eax, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [eax+44], 0
je	SHORT $LN1@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
push	0
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_memset
add	esp, 12					
mov	DWORD PTR _pgno$[ebp], 1
mov	eax, DWORD PTR _pgno$[ebp]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	DWORD PTR _sqlite3Config+144
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheMove PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pCache$[ebp], ecx
mov	edx, DWORD PTR _newPgno$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	DWORD PTR _sqlite3Config+140
add	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _newPgno$[ebp]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, 2
je	SHORT $LN2@sqlite3Pca
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+24]
and	edx, 4
je	SHORT $LN2@sqlite3Pca
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_pcacheRemoveFromDirtyList
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_pcacheAddToDirtyList
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheCleanAll PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3PcacheMakeClean
add	esp, 4
jmp	SHORT $LN2@sqlite3Pca
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheMakeClean PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 2
je	SHORT $LN3@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_pcacheRemoveFromDirtyList
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, -7					
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+24], cx
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+26]
test	ecx, ecx
jne	SHORT $LN3@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_pcacheUnpin
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PcacheMakeDirty PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, -33				
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+24], cx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 2
jne	SHORT $LN2@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+24]
or	eax, 2
mov	ecx, DWORD PTR _p$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_pcacheAddToDirtyList
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PcacheDrop PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 2
je	SHORT $LN2@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_pcacheRemoveFromDirtyList
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _pCache$[ebp], ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+12]
sub	eax, 1
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+20], 1
jne	SHORT $LN1@sqlite3Pca
mov	eax, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [eax+44], 0
push	1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+40]
push	ecx
call	DWORD PTR _sqlite3Config+136
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheRelease PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR [eax+26]
sub	cx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+26], cx
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+26]
test	ecx, ecx
jne	SHORT $LN4@sqlite3Pca
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR _pCache$1[ebp], eax
mov	ecx, DWORD PTR _pCache$1[ebp]
mov	edx, DWORD PTR [ecx+12]
sub	edx, 1
mov	eax, DWORD PTR _pCache$1[ebp]
mov	DWORD PTR [eax+12], edx
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+24]
and	edx, 2
jne	SHORT $LN2@sqlite3Pca
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_pcacheUnpin
add	esp, 4
jmp	SHORT $LN4@sqlite3Pca
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_pcacheRemoveFromDirtyList
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_pcacheAddToDirtyList
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheFetch PROC
push	ebp
mov	ebp, esp
sub	esp, 32					
mov	DWORD PTR _pPgHdr$[ebp], 0
mov	eax, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [eax+40], 0
jne	SHORT $LN18@sqlite3Pca
cmp	DWORD PTR _createFlag$[ebp], 0
jne	SHORT $LN17@sqlite3Pca
mov	ecx, DWORD PTR _ppPage$[ebp]
mov	DWORD PTR [ecx], 0
xor	eax, eax
jmp	$LN19@sqlite3Pca
mov	edx, DWORD PTR _pCache$[ebp]
movzx	eax, BYTE PTR [edx+28]
push	eax
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+24]
add	edx, 40					
push	edx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
call	DWORD PTR _sqlite3Config+120
add	esp, 12					
mov	DWORD PTR _p$2[ebp], eax
cmp	DWORD PTR _p$2[ebp], 0
jne	SHORT $LN16@sqlite3Pca
mov	eax, 7
jmp	$LN19@sqlite3Pca
mov	edx, DWORD PTR _pCache$[ebp]
push	edx
call	_numberOfCachePages
add	esp, 4
push	eax
mov	eax, DWORD PTR _p$2[ebp]
push	eax
call	DWORD PTR _sqlite3Config+124
add	esp, 8
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _p$2[ebp]
mov	DWORD PTR [ecx+40], edx
cmp	DWORD PTR _createFlag$[ebp], 0
jne	SHORT $LN21@sqlite3Pca
mov	DWORD PTR tv85[ebp], 0
jmp	SHORT $LN22@sqlite3Pca
mov	eax, DWORD PTR _pCache$[ebp]
movzx	ecx, BYTE PTR [eax+29]
mov	DWORD PTR tv85[ebp], ecx
mov	edx, DWORD PTR tv85[ebp]
mov	DWORD PTR _eCreate$[ebp], edx
mov	eax, DWORD PTR _eCreate$[ebp]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
call	DWORD PTR _sqlite3Config+132
add	esp, 12					
mov	DWORD PTR _pPage$[ebp], eax
cmp	DWORD PTR _pPage$[ebp], 0
jne	$LN15@sqlite3Pca
cmp	DWORD PTR _eCreate$[ebp], 1
jne	$LN15@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pPg$3[ebp], edx
jmp	SHORT $LN14@sqlite3Pca
mov	eax, DWORD PTR _pPg$3[ebp]
mov	ecx, DWORD PTR [eax+36]
mov	DWORD PTR _pPg$3[ebp], ecx
cmp	DWORD PTR _pPg$3[ebp], 0
je	SHORT $LN12@sqlite3Pca
mov	edx, DWORD PTR _pPg$3[ebp]
movsx	eax, WORD PTR [edx+26]
test	eax, eax
jne	SHORT $LN11@sqlite3Pca
mov	ecx, DWORD PTR _pPg$3[ebp]
movzx	edx, WORD PTR [ecx+24]
and	edx, 4
je	SHORT $LN12@sqlite3Pca
jmp	SHORT $LN13@sqlite3Pca
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR _pPg$3[ebp]
mov	DWORD PTR [eax+8], ecx
cmp	DWORD PTR _pPg$3[ebp], 0
jne	SHORT $LN10@sqlite3Pca
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pPg$3[ebp], eax
jmp	SHORT $LN9@sqlite3Pca
mov	ecx, DWORD PTR _pPg$3[ebp]
mov	edx, DWORD PTR [ecx+36]
mov	DWORD PTR _pPg$3[ebp], edx
cmp	DWORD PTR _pPg$3[ebp], 0
je	SHORT $LN10@sqlite3Pca
mov	eax, DWORD PTR _pPg$3[ebp]
movsx	ecx, WORD PTR [eax+26]
test	ecx, ecx
je	SHORT $LN10@sqlite3Pca
jmp	SHORT $LN8@sqlite3Pca
cmp	DWORD PTR _pPg$3[ebp], 0
je	SHORT $LN6@sqlite3Pca
mov	edx, DWORD PTR _pPg$3[ebp]
push	edx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+32]
call	eax
add	esp, 8
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN6@sqlite3Pca
cmp	DWORD PTR _rc$1[ebp], 5
je	SHORT $LN6@sqlite3Pca
mov	eax, DWORD PTR _rc$1[ebp]
jmp	$LN19@sqlite3Pca
push	2
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR [edx+40]
push	eax
call	DWORD PTR _sqlite3Config+132
add	esp, 12					
mov	DWORD PTR _pPage$[ebp], eax
cmp	DWORD PTR _pPage$[ebp], 0
je	$LN4@sqlite3Pca
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pPgHdr$[ebp], edx
mov	eax, DWORD PTR _pPgHdr$[ebp]
cmp	DWORD PTR [eax], 0
jne	SHORT $LN3@sqlite3Pca
push	40					
push	0
mov	ecx, DWORD PTR _pPgHdr$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pPgHdr$[ebp]
mov	eax, DWORD PTR _pPage$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pPgHdr$[ebp]
mov	edx, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR [ecx+4], eax
mov	ecx, 40					
shl	ecx, 0
add	ecx, DWORD PTR _pPgHdr$[ebp]
mov	edx, DWORD PTR _pPgHdr$[ebp]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR _pCache$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
push	0
mov	edx, DWORD PTR _pPgHdr$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pPgHdr$[ebp]
mov	edx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+28], edx
mov	eax, DWORD PTR _pPgHdr$[ebp]
mov	ecx, DWORD PTR _pgno$[ebp]
mov	DWORD PTR [eax+20], ecx
mov	edx, DWORD PTR _pPgHdr$[ebp]
movsx	eax, WORD PTR [edx+26]
test	eax, eax
jne	SHORT $LN2@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+12]
add	edx, 1
mov	eax, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [eax+12], edx
mov	ecx, DWORD PTR _pPgHdr$[ebp]
mov	dx, WORD PTR [ecx+26]
add	dx, 1
mov	eax, DWORD PTR _pPgHdr$[ebp]
mov	WORD PTR [eax+26], dx
cmp	DWORD PTR _pgno$[ebp], 1
jne	SHORT $LN4@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR _pPgHdr$[ebp]
mov	DWORD PTR [ecx+44], edx
mov	eax, DWORD PTR _ppPage$[ebp]
mov	ecx, DWORD PTR _pPgHdr$[ebp]
mov	DWORD PTR [eax], ecx
cmp	DWORD PTR _pPgHdr$[ebp], 0
jne	SHORT $LN23@sqlite3Pca
cmp	DWORD PTR _eCreate$[ebp], 0
je	SHORT $LN23@sqlite3Pca
mov	DWORD PTR tv191[ebp], 7
jmp	SHORT $LN24@sqlite3Pca
mov	DWORD PTR tv191[ebp], 0
mov	eax, DWORD PTR tv191[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheSize PROC
push	ebp
mov	ebp, esp
mov	eax, 48					
pop	ebp
ret	0
ENDP
_sqlite3PcacheSetPageSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCache$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN1@sqlite3Pca
mov	ecx, DWORD PTR _pCache$[ebp]
mov	edx, DWORD PTR [ecx+40]
push	edx
call	DWORD PTR _sqlite3Config+148
add	esp, 4
mov	eax, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [eax+40], 0
mov	ecx, DWORD PTR _pCache$[ebp]
mov	DWORD PTR [ecx+44], 0
mov	edx, DWORD PTR _pCache$[ebp]
mov	eax, DWORD PTR _szPage$[ebp]
mov	DWORD PTR [edx+20], eax
pop	ebp
ret	0
ENDP
_sqlite3PcacheOpen PROC
push	ebp
mov	ebp, esp
push	48					
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _szPage$[ebp]
mov	DWORD PTR [ecx+20], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _szExtra$[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	al, BYTE PTR _bPurgeable$[ebp]
mov	BYTE PTR [edx+28], al
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+29], 2
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _xStress$[ebp]
mov	DWORD PTR [edx+32], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pStress$[ebp]
mov	DWORD PTR [ecx+36], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+16], 100			
pop	ebp
ret	0
ENDP
_sqlite3PCacheBufferSetup PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _pcache1_g+28, 0
je	$LN4@sqlite3PCa
mov	eax, DWORD PTR _sz$[ebp]
and	eax, -8					
mov	DWORD PTR _sz$[ebp], eax
mov	ecx, DWORD PTR _sz$[ebp]
mov	DWORD PTR _pcache1_g+32, ecx
mov	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR _pcache1_g+60, edx
mov	eax, DWORD PTR _pcache1_g+60
mov	DWORD PTR _pcache1_g+36, eax
cmp	DWORD PTR _n$[ebp], 90			
jle	SHORT $LN6@sqlite3PCa
mov	DWORD PTR tv69[ebp], 10			
jmp	SHORT $LN7@sqlite3PCa
mov	eax, DWORD PTR _n$[ebp]
cdq
mov	ecx, 10					
idiv	ecx
add	eax, 1
mov	DWORD PTR tv69[ebp], eax
mov	edx, DWORD PTR tv69[ebp]
mov	DWORD PTR _pcache1_g+40, edx
mov	eax, DWORD PTR _pBuf$[ebp]
mov	DWORD PTR _pcache1_g+44, eax
mov	DWORD PTR _pcache1_g+56, 0
mov	DWORD PTR _pcache1_g+64, 0
mov	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR tv72[ebp], ecx
mov	edx, DWORD PTR _n$[ebp]
sub	edx, 1
mov	DWORD PTR _n$[ebp], edx
cmp	DWORD PTR tv72[ebp], 0
je	SHORT $LN1@sqlite3PCa
mov	eax, DWORD PTR _pBuf$[ebp]
mov	DWORD PTR _p$1[ebp], eax
mov	ecx, DWORD PTR _p$1[ebp]
mov	edx, DWORD PTR _pcache1_g+56
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _p$1[ebp]
mov	DWORD PTR _pcache1_g+56, eax
mov	ecx, DWORD PTR _pBuf$[ebp]
add	ecx, DWORD PTR _sz$[ebp]
mov	DWORD PTR _pBuf$[ebp], ecx
jmp	SHORT $LN2@sqlite3PCa
mov	edx, DWORD PTR _pBuf$[ebp]
mov	DWORD PTR _pcache1_g+48, edx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PcacheShutdown PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _sqlite3Config+116, 0
je	SHORT $LN2@sqlite3Pca
mov	eax, DWORD PTR _sqlite3Config+108
push	eax
call	DWORD PTR _sqlite3Config+116
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PcacheInitialize PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _sqlite3Config+112, 0
jne	SHORT $LN1@sqlite3Pca
call	_sqlite3PCacheSetDefault
mov	eax, DWORD PTR _sqlite3Config+108
push	eax
call	DWORD PTR _sqlite3Config+112
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerTruncateImage PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _nPage$[ebp]
mov	DWORD PTR [eax+24], ecx
pop	ebp
ret	0
ENDP
_sqlite3SectorSize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pFile$[ebp]
push	eax
call	_sqlite3OsSectorSize
add	esp, 4
mov	DWORD PTR _iRet$[ebp], eax
cmp	DWORD PTR _iRet$[ebp], 32		
jge	SHORT $LN3@sqlite3Sec
mov	DWORD PTR _iRet$[ebp], 512		
jmp	SHORT $LN2@sqlite3Sec
cmp	DWORD PTR _iRet$[ebp], 65536		
jle	SHORT $LN2@sqlite3Sec
mov	DWORD PTR _iRet$[ebp], 65536		
mov	eax, DWORD PTR _iRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerClearCache PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+15]
test	ecx, ecx
jne	SHORT $LN2@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+12]
test	eax, eax
jne	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_reset
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerCacheStat PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pnVal$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _eStat$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
add	ecx, DWORD PTR [eax+edx*4+156]
mov	edx, DWORD PTR _pnVal$[ebp]
mov	DWORD PTR [edx], ecx
cmp	DWORD PTR _reset$[ebp], 0
je	SHORT $LN2@sqlite3Pag
mov	eax, DWORD PTR _eStat$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+eax*4+156], 0
pop	ebp
ret	0
ENDP
_sqlite3PagerIsMemdb PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [eax+15]
pop	ebp
ret	0
ENDP
_sqlite3PagerTempSpace PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+200]
pop	ebp
ret	0
ENDP
_sqlite3PagerNosync PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [eax+7]
pop	ebp
ret	0
ENDP
_sqlite3PagerJournalname PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+172]
pop	ebp
ret	0
ENDP
_sqlite3PagerFile PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+60]
pop	ebp
ret	0
ENDP
_sqlite3PagerVfs PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax]
pop	ebp
ret	0
ENDP
_sqlite3PagerFilename PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _nullIfMemDb$[ebp], 0
je	SHORT $LN3@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+15]
test	ecx, ecx
je	SHORT $LN3@sqlite3Pag
mov	DWORD PTR tv69[ebp], OFFSET $SG91732
jmp	SHORT $LN4@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+168]
mov	DWORD PTR tv69[ebp], eax
mov	eax, DWORD PTR tv69[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerMemUsed PROC
push	ebp
mov	ebp, esp
push	ecx
push	esi
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, WORD PTR [eax+140]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
lea	ecx, DWORD PTR [eax+ecx+60]
mov	DWORD PTR _perPageSize$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcachePagecount
add	esp, 4
mov	esi, eax
imul	esi, DWORD PTR _perPageSize$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3MallocSize
add	esp, 4
add	esi, eax
mov	edx, DWORD PTR _pPager$[ebp]
add	esi, DWORD PTR [edx+152]
mov	eax, esi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerRefcount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
call	_sqlite3PcacheRefCount
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerIsreadonly PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	al, BYTE PTR [eax+14]
pop	ebp
ret	0
ENDP
_sqlite3PagerCloseWal PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+208], 0
jne	SHORT $LN5@sqlite3Pag
mov	DWORD PTR _logexists$1[ebp], 0
push	1
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerLockDb
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@sqlite3Pag
lea	edx, DWORD PTR _logexists$1[ebp]
push	edx
push	0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+212]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Pag
cmp	DWORD PTR _logexists$1[ebp], 0
je	SHORT $LN5@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerOpenWal
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+208], 0
je	SHORT $LN2@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerExclusiveLock
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+200]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+9]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+208]
push	edx
call	_sqlite3WalClose
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [eax+208], 0
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerFixMaplimit
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerOpenWal PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
jne	SHORT $LN4@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+208], 0
jne	SHORT $LN4@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerWalSupported
add	esp, 4
test	eax, eax
jne	SHORT $LN3@sqlite3Pag
mov	eax, 14					
jmp	SHORT $LN5@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsClose
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerOpenWal
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+5], 5
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+16], 0
jmp	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pbOpen$[ebp]
mov	DWORD PTR [eax], 1
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerWalCallback PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalCallback
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerWalSupported PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _pMethods$[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+4]
test	ecx, ecx
jne	SHORT $LN4@sqlite3Pag
mov	edx, DWORD PTR _pMethods$[ebp]
cmp	DWORD PTR [edx], 2
jl	SHORT $LN3@sqlite3Pag
mov	eax, DWORD PTR _pMethods$[ebp]
cmp	DWORD PTR [eax+52], 0
jne	SHORT $LN4@sqlite3Pag
mov	DWORD PTR tv73[ebp], 0
jmp	SHORT $LN5@sqlite3Pag
mov	DWORD PTR tv73[ebp], 1
mov	eax, DWORD PTR tv73[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerCheckpoint PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+208], 0
je	SHORT $LN1@sqlite3Pag
mov	ecx, DWORD PTR _pnCkpt$[ebp]
push	ecx
mov	edx, DWORD PTR _pnLog$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+200]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+9]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+180]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+176]
push	eax
mov	ecx, DWORD PTR _eMode$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalCheckpoint
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerSharedLock PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+15]
test	ecx, ecx
je	SHORT $LN28@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+40], 0
je	SHORT $LN28@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+40]
jmp	$LN29@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
jne	$LN27@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
test	eax, eax
jne	$LN27@sqlite3Pag
mov	DWORD PTR _bHotJournal$3[ebp], 1
push	1
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_wait_on_lock
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN26@sqlite3Pag
jmp	$failed$31
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+17]
cmp	eax, 1
jg	SHORT $LN25@sqlite3Pag
lea	ecx, DWORD PTR _bHotJournal$3[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_hasHotJournal
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN24@sqlite3Pag
jmp	$failed$31
cmp	DWORD PTR _bHotJournal$3[ebp], 0
je	$LN23@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+14]
test	ecx, ecx
je	SHORT $LN22@sqlite3Pag
mov	DWORD PTR _rc$[ebp], 776		
jmp	$failed$31
push	4
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerLockDb
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN21@sqlite3Pag
jmp	$failed$31
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
cmp	DWORD PTR [ecx], 0
jne	$LN20@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pVfs$4[ebp], eax
lea	ecx, DWORD PTR _bExists$2[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+172]
push	eax
mov	ecx, DWORD PTR _pVfs$4[ebp]
push	ecx
call	_sqlite3OsAccess
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN20@sqlite3Pag
cmp	DWORD PTR _bExists$2[ebp], 0
je	SHORT $LN20@sqlite3Pag
mov	DWORD PTR _fout$6[ebp], 0
mov	DWORD PTR _f$1[ebp], 2050		
lea	edx, DWORD PTR _fout$6[ebp]
push	edx
mov	eax, DWORD PTR _f$1[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+172]
push	ecx
mov	edx, DWORD PTR _pVfs$4[ebp]
push	edx
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN20@sqlite3Pag
mov	eax, DWORD PTR _fout$6[ebp]
and	eax, 1
je	SHORT $LN20@sqlite3Pag
push	44932					
call	_sqlite3CantopenError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
push	edx
call	_sqlite3OsClose
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN17@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerSyncHotJournal
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN16@sqlite3Pag
push	1
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_playback
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+16], 0
jmp	SHORT $LN15@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+4]
test	eax, eax
jne	SHORT $LN15@sqlite3Pag
push	1
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUnlockDb
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN23@sqlite3Pag
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_error
add	esp, 8
jmp	$failed$31
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+12]
test	edx, edx
jne	$LN12@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+88], 0
jne	SHORT $LN11@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+204]
push	edx
call	_sqlite3PcachePagecount
add	esp, 4
test	eax, eax
jg	SHORT $LN11@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+116]
test	ecx, ecx
je	$LN12@sqlite3Pag
mov	DWORD PTR _nPage$5[ebp], 0
lea	edx, DWORD PTR _nPage$5[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerPagecount
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@sqlite3Pag
jmp	$failed$31
cmp	DWORD PTR _nPage$5[ebp], 0
jbe	SHORT $LN9@sqlite3Pag
push	0
push	24					
push	16					
lea	ecx, DWORD PTR _dbFileVers$7[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@sqlite3Pag
cmp	DWORD PTR _rc$[ebp], 522		
je	SHORT $LN8@sqlite3Pag
jmp	$failed$31
jmp	SHORT $LN7@sqlite3Pag
push	16					
push	0
lea	ecx, DWORD PTR _dbFileVers$7[ebp]
push	ecx
call	_memset
add	esp, 12					
push	16					
lea	edx, DWORD PTR _dbFileVers$7[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 100				
push	eax
call	_memcmp
add	esp, 12					
test	eax, eax
je	SHORT $LN12@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_reset
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+116]
test	eax, eax
je	SHORT $LN12@sqlite3Pag
push	0
push	0
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsUnfetch
add	esp, 16					
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerOpenWalIfPresent
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN4@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerBeginReadTransaction
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
test	ecx, ecx
jne	SHORT $failed$31
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $failed$31
mov	edx, DWORD PTR _pPager$[ebp]
add	edx, 24					
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerPagecount
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_unlock
add	esp, 4
jmp	SHORT $LN1@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+16], 1
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerSavepoint PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+40]
mov	DWORD PTR _rc$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN10@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _iSavepoint$[ebp]
cmp	eax, DWORD PTR [edx+96]
jge	$LN10@sqlite3Pag
cmp	DWORD PTR _op$[ebp], 1
jne	SHORT $LN13@sqlite3Pag
mov	DWORD PTR tv69[ebp], 0
jmp	SHORT $LN14@sqlite3Pag
mov	DWORD PTR tv69[ebp], 1
mov	ecx, DWORD PTR _iSavepoint$[ebp]
add	ecx, DWORD PTR tv69[ebp]
mov	DWORD PTR _nNew$3[ebp], ecx
mov	edx, DWORD PTR _nNew$3[ebp]
mov	DWORD PTR _ii$2[ebp], edx
jmp	SHORT $LN9@sqlite3Pag
mov	eax, DWORD PTR _ii$2[ebp]
add	eax, 1
mov	DWORD PTR _ii$2[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _ii$2[ebp]
cmp	edx, DWORD PTR [ecx+96]
jge	SHORT $LN7@sqlite3Pag
imul	eax, DWORD PTR _ii$2[ebp], 48
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+92]
mov	eax, DWORD PTR [edx+eax+16]
push	eax
call	_sqlite3BitvecDestroy
add	esp, 4
jmp	SHORT $LN8@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _nNew$3[ebp]
mov	DWORD PTR [ecx+96], edx
cmp	DWORD PTR _op$[ebp], 1
jne	SHORT $LN6@sqlite3Pag
cmp	DWORD PTR _nNew$3[ebp], 0
jne	SHORT $LN5@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+68]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN5@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3IsMemJournal
add	esp, 4
test	eax, eax
je	SHORT $LN4@sqlite3Pag
push	0
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3OsTruncate
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [eax+52], 0
jmp	SHORT $LN10@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
jne	SHORT $LN1@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
cmp	DWORD PTR [eax], 0
je	SHORT $LN10@sqlite3Pag
cmp	DWORD PTR _nNew$3[ebp], 0
jne	SHORT $LN15@sqlite3Pag
mov	DWORD PTR tv137[ebp], 0
jmp	SHORT $LN16@sqlite3Pag
mov	ecx, DWORD PTR _nNew$3[ebp]
sub	ecx, 1
imul	edx, ecx, 48
mov	eax, DWORD PTR _pPager$[ebp]
add	edx, DWORD PTR [eax+92]
mov	DWORD PTR tv137[ebp], edx
mov	ecx, DWORD PTR tv137[ebp]
mov	DWORD PTR _pSavepoint$1[ebp], ecx
mov	edx, DWORD PTR _pSavepoint$1[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerPlaybackSavepoint
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerOpenSavepoint PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+96]
mov	DWORD PTR _nCurrent$[ebp], ecx
mov	edx, DWORD PTR _nSavepoint$[ebp]
cmp	edx, DWORD PTR _nCurrent$[ebp]
jle	$LN9@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+6]
test	ecx, ecx
je	$LN9@sqlite3Pag
imul	edx, DWORD PTR _nSavepoint$[ebp], 48
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+92]
push	ecx
call	_sqlite3Realloc
add	esp, 8
mov	DWORD PTR _aNew$1[ebp], eax
cmp	DWORD PTR _aNew$1[ebp], 0
jne	SHORT $LN8@sqlite3Pag
mov	eax, 7
jmp	$LN10@sqlite3Pag
mov	edx, DWORD PTR _nSavepoint$[ebp]
sub	edx, DWORD PTR _nCurrent$[ebp]
imul	eax, edx, 48
push	eax
push	0
imul	ecx, DWORD PTR _nCurrent$[ebp], 48
add	ecx, DWORD PTR _aNew$1[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _aNew$1[ebp]
mov	DWORD PTR [edx+92], eax
mov	ecx, DWORD PTR _nCurrent$[ebp]
mov	DWORD PTR _ii$2[ebp], ecx
jmp	SHORT $LN7@sqlite3Pag
mov	edx, DWORD PTR _ii$2[ebp]
add	edx, 1
mov	DWORD PTR _ii$2[ebp], edx
mov	eax, DWORD PTR _ii$2[ebp]
cmp	eax, DWORD PTR _nSavepoint$[ebp]
jge	$LN9@sqlite3Pag
imul	ecx, DWORD PTR _ii$2[ebp], 48
mov	edx, DWORD PTR _aNew$1[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+24]
mov	DWORD PTR [edx+ecx+20], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
cmp	DWORD PTR [edx], 0
je	SHORT $LN4@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv180[ebp], eax
mov	ecx, DWORD PTR tv180[ebp]
cmp	DWORD PTR [ecx+76], 0
jl	SHORT $LN4@sqlite3Pag
jg	SHORT $LN12@sqlite3Pag
mov	edx, DWORD PTR tv180[ebp]
cmp	DWORD PTR [edx+72], 0
jbe	SHORT $LN4@sqlite3Pag
imul	eax, DWORD PTR _ii$2[ebp], 48
mov	ecx, DWORD PTR _aNew$1[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	esi, DWORD PTR [edx+72]
mov	DWORD PTR [ecx+eax], esi
mov	edx, DWORD PTR [edx+76]
mov	DWORD PTR [ecx+eax+4], edx
jmp	SHORT $LN3@sqlite3Pag
imul	eax, DWORD PTR _ii$2[ebp], 48
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+148]
xor	ecx, ecx
mov	esi, DWORD PTR _aNew$1[ebp]
mov	DWORD PTR [esi+eax], edx
mov	DWORD PTR [esi+eax+4], ecx
imul	edx, DWORD PTR _ii$2[ebp], 48
mov	eax, DWORD PTR _aNew$1[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [ecx+52]
mov	DWORD PTR [eax+edx+24], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3BitvecCreate
add	esp, 4
imul	ecx, DWORD PTR _ii$2[ebp], 48
mov	edx, DWORD PTR _aNew$1[ebp]
mov	DWORD PTR [edx+ecx+16], eax
imul	eax, DWORD PTR _ii$2[ebp], 48
mov	ecx, DWORD PTR _aNew$1[ebp]
cmp	DWORD PTR [ecx+eax+16], 0
jne	SHORT $LN2@sqlite3Pag
mov	eax, 7
jmp	SHORT $LN10@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN1@sqlite3Pag
imul	eax, DWORD PTR _ii$2[ebp], 48
mov	ecx, DWORD PTR _aNew$1[ebp]
lea	edx, DWORD PTR [ecx+eax+28]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalSavepoint
add	esp, 8
mov	edx, DWORD PTR _ii$2[ebp]
add	edx, 1
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [eax+96], edx
jmp	$LN6@sqlite3Pag
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerRollback PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 6
jne	SHORT $LN9@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+40]
jmp	$LN10@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 1
jg	SHORT $LN8@sqlite3Pag
xor	eax, eax
jmp	$LN10@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN7@sqlite3Pag
push	-1
push	2
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+19]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_end_transaction
add	esp, 12					
mov	DWORD PTR _rc2$2[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@sqlite3Pag
mov	ecx, DWORD PTR _rc2$2[ebp]
mov	DWORD PTR _rc$[ebp], ecx
jmp	SHORT $LN5@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
cmp	DWORD PTR [eax], 0
je	SHORT $LN3@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+16]
cmp	edx, 2
jne	SHORT $LN4@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
mov	DWORD PTR _eState$1[ebp], ecx
push	0
push	0
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_end_transaction
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+15]
test	ecx, ecx
jne	SHORT $LN2@sqlite3Pag
cmp	DWORD PTR _eState$1[ebp], 2
jle	SHORT $LN2@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+40], 4
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+16], 6
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN10@sqlite3Pag
jmp	SHORT $LN5@sqlite3Pag
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_playback
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_error
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerCommitPhaseTwo PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+40]
jmp	SHORT $LN3@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	eax, 2
jne	SHORT $LN1@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
je	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+5]
cmp	ecx, 1
jne	SHORT $LN1@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+16], 1
xor	eax, eax
jmp	SHORT $LN3@sqlite3Pag
push	1
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+19]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_end_transaction
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_error
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerSync PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN3@sqlite3Pag
mov	edx, DWORD PTR _zMaster$[ebp]
mov	DWORD PTR _pArg$1[ebp], edx
mov	eax, DWORD PTR _pArg$1[ebp]
push	eax
push	21					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsFileControl
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 12			
jne	SHORT $LN3@sqlite3Pag
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
jne	SHORT $LN1@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+11]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerExclusiveLock PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUseWal
add	esp, 4
test	eax, eax
jne	SHORT $LN1@sqlite3Pag
push	4
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_wait_on_lock
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerCommitPhaseOne PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN17@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+40]
jmp	$LN18@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	eax, 3
jge	SHORT $LN16@sqlite3Pag
xor	eax, eax
jmp	$LN18@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+15]
test	edx, edx
je	SHORT $LN15@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+88]
push	ecx
call	_sqlite3BackupRestart
add	esp, 4
jmp	$commit_phase_one_exit$22
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	$LN13@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
call	_sqlite3PcacheDirtyList
add	esp, 4
mov	DWORD PTR _pList$3[ebp], eax
mov	DWORD PTR _pPageOne$2[ebp], 0
cmp	DWORD PTR _pList$3[ebp], 0
jne	SHORT $LN12@sqlite3Pag
push	0
lea	edx, DWORD PTR _pPageOne$2[ebp]
push	edx
push	1
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPageOne$2[ebp]
mov	DWORD PTR _pList$3[ebp], ecx
mov	edx, DWORD PTR _pList$3[ebp]
mov	DWORD PTR [edx+12], 0
cmp	DWORD PTR _pList$3[ebp], 0
je	SHORT $LN11@sqlite3Pag
push	1
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pList$3[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerWalFrames
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pPageOne$2[ebp]
push	ecx
call	_sqlite3PagerUnref
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheCleanAll
add	esp, 4
jmp	$commit_phase_one_exit$22
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_incr_changecounter
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@sqlite3Pag
jmp	$commit_phase_one_exit$22
mov	edx, DWORD PTR _zMaster$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_writeMasterJournal
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@sqlite3Pag
jmp	$commit_phase_one_exit$22
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_syncJournal
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@sqlite3Pag
jmp	$commit_phase_one_exit$22
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheDirtyList
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_write_pagelist
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@sqlite3Pag
jmp	$commit_phase_one_exit$22
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheCleanAll
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+24]
cmp	eax, DWORD PTR [edx+32]
jbe	SHORT $LN4@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
cdq
idiv	DWORD PTR [ecx+152]
add	eax, 1
mov	edx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [edx+24], eax
jne	SHORT $LN20@sqlite3Pag
mov	DWORD PTR tv161[ebp], 1
jmp	SHORT $LN21@sqlite3Pag
mov	DWORD PTR tv161[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+24]
sub	ecx, DWORD PTR tv161[ebp]
mov	DWORD PTR _nNew$1[ebp], ecx
mov	edx, DWORD PTR _nNew$1[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_truncate
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Pag
jmp	SHORT $commit_phase_one_exit$22
cmp	DWORD PTR _noSync$[ebp], 0
jne	SHORT $commit_phase_one_exit$22
mov	ecx, DWORD PTR _zMaster$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_sqlite3PagerSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUseWal
add	esp, 4
test	eax, eax
jne	SHORT $LN1@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+16], 5
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerBegin PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+40], 0
je	SHORT $LN8@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+40]
jmp	$LN9@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	al, BYTE PTR _subjInMemory$[ebp]
mov	BYTE PTR [edx+21], al
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+16]
cmp	edx, 1
jne	$LN7@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN6@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+4]
test	edx, edx
je	SHORT $LN5@sqlite3Pag
push	-1
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalExclusiveMode
add	esp, 8
test	eax, eax
je	SHORT $LN5@sqlite3Pag
push	4
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerLockDb
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Pag
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN9@sqlite3Pag
push	1
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalExclusiveMode
add	esp, 8
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalBeginWriteTransaction
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@sqlite3Pag
push	2
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerLockDb
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@sqlite3Pag
cmp	DWORD PTR _exFlag$[ebp], 0
je	SHORT $LN3@sqlite3Pag
push	4
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_wait_on_lock
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+16], 2
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [ecx+36], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [ecx+32], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [ecx+28], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+72], 0
mov	DWORD PTR [ecx+76], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerPagecount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pnPage$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [eax], edx
pop	ebp
ret	0
ENDP
_sqlite3PagerGetExtra PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [eax+8]
pop	ebp
ret	0
ENDP
_sqlite3PagerGetData PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [eax+4]
pop	ebp
ret	0
ENDP
_sqlite3PagerPageRefcount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_sqlite3PcachePageRefcount
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerMovepage PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _needSyncPgno$[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+15]
test	ecx, ecx
je	SHORT $LN11@sqlite3Pag
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@sqlite3Pag
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN12@sqlite3Pag
mov	eax, DWORD PTR _pPg$[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 2
je	SHORT $LN9@sqlite3Pag
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_subjRequiresPage
add	esp, 4
test	eax, eax
je	SHORT $LN9@sqlite3Pag
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_subjournalPage
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@sqlite3Pag
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN12@sqlite3Pag
mov	ecx, DWORD PTR _pPg$[ebp]
movzx	edx, WORD PTR [ecx+24]
and	edx, 4
je	SHORT $LN8@sqlite3Pag
cmp	DWORD PTR _isCommit$[ebp], 0
jne	SHORT $LN8@sqlite3Pag
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _needSyncPgno$[ebp], ecx
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, -5					
mov	ecx, DWORD PTR _pPg$[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_lookup
add	esp, 8
mov	DWORD PTR _pPgOld$[ebp], eax
cmp	DWORD PTR _pPgOld$[ebp], 0
je	SHORT $LN7@sqlite3Pag
mov	ecx, DWORD PTR _pPgOld$[ebp]
movzx	edx, WORD PTR [ecx+24]
and	edx, 4
mov	eax, DWORD PTR _pPg$[ebp]
movzx	ecx, WORD PTR [eax+24]
or	ecx, edx
mov	edx, DWORD PTR _pPg$[ebp]
mov	WORD PTR [edx+24], cx
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+15]
test	ecx, ecx
je	SHORT $LN6@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+24]
add	eax, 1
push	eax
mov	ecx, DWORD PTR _pPgOld$[ebp]
push	ecx
call	_sqlite3PcacheMove
add	esp, 8
jmp	SHORT $LN7@sqlite3Pag
mov	edx, DWORD PTR _pPgOld$[ebp]
push	edx
call	_sqlite3PcacheDrop
add	esp, 4
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _origPgno$[ebp], ecx
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_sqlite3PcacheMove
add	esp, 8
mov	ecx, DWORD PTR _pPg$[ebp]
push	ecx
call	_sqlite3PcacheMakeDirty
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+15]
test	eax, eax
je	SHORT $LN4@sqlite3Pag
mov	ecx, DWORD PTR _origPgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pPgOld$[ebp]
push	edx
call	_sqlite3PcacheMove
add	esp, 8
mov	eax, DWORD PTR _pPgOld$[ebp]
push	eax
call	_sqlite3PagerUnrefNotNull
add	esp, 4
cmp	DWORD PTR _needSyncPgno$[ebp], 0
je	SHORT $LN3@sqlite3Pag
push	0
lea	ecx, DWORD PTR _pPgHdr$1[ebp]
push	ecx
mov	edx, DWORD PTR _needSyncPgno$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _needSyncPgno$[ebp]
cmp	edx, DWORD PTR [ecx+28]
ja	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+200]
push	ecx
mov	edx, DWORD PTR _needSyncPgno$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3BitvecClear
add	esp, 12					
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN12@sqlite3Pag
mov	edx, DWORD PTR _pPgHdr$1[ebp]
movzx	eax, WORD PTR [edx+24]
or	eax, 4
mov	ecx, DWORD PTR _pPgHdr$1[ebp]
mov	WORD PTR [ecx+24], ax
mov	edx, DWORD PTR _pPgHdr$1[ebp]
push	edx
call	_sqlite3PcacheMakeDirty
add	esp, 4
mov	eax, DWORD PTR _pPgHdr$1[ebp]
push	eax
call	_sqlite3PagerUnrefNotNull
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerDontWrite PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, 2
je	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [ecx+96], 0
jne	SHORT $LN2@sqlite3Pag
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
or	eax, 32					
mov	ecx, DWORD PTR _pPg$[ebp]
mov	WORD PTR [ecx+24], ax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerWrite PROC
push	ebp
mov	ebp, esp
sub	esp, 48					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pDbPage$[ebp]
mov	DWORD PTR _pPg$[ebp], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pPager$[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [eax+148]
cmp	edx, DWORD PTR [ecx+152]
jbe	$LN22@sqlite3Pag
mov	DWORD PTR _nPage$6[ebp], 0
mov	DWORD PTR _needSync$1[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [eax+148]
xor	edx, edx
div	DWORD PTR [ecx+152]
mov	DWORD PTR _nPagePerSector$2[ebp], eax
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+20]
or	eax, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+20], al
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR [edx+20]
sub	eax, 1
mov	ecx, DWORD PTR _nPagePerSector$2[ebp]
sub	ecx, 1
not	ecx
and	eax, ecx
add	eax, 1
mov	DWORD PTR _pg1$5[ebp], eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _nPageCount$3[ebp], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR [ecx+20]
cmp	edx, DWORD PTR _nPageCount$3[ebp]
jbe	SHORT $LN21@sqlite3Pag
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+20]
sub	ecx, DWORD PTR _pg1$5[ebp]
add	ecx, 1
mov	DWORD PTR _nPage$6[ebp], ecx
jmp	SHORT $LN20@sqlite3Pag
mov	edx, DWORD PTR _nPagePerSector$2[ebp]
mov	eax, DWORD PTR _pg1$5[ebp]
lea	ecx, DWORD PTR [eax+edx-1]
cmp	ecx, DWORD PTR _nPageCount$3[ebp]
jbe	SHORT $LN19@sqlite3Pag
mov	edx, DWORD PTR _nPageCount$3[ebp]
add	edx, 1
sub	edx, DWORD PTR _pg1$5[ebp]
mov	DWORD PTR _nPage$6[ebp], edx
jmp	SHORT $LN20@sqlite3Pag
mov	eax, DWORD PTR _nPagePerSector$2[ebp]
mov	DWORD PTR _nPage$6[ebp], eax
mov	DWORD PTR _ii$9[ebp], 0
jmp	SHORT $LN17@sqlite3Pag
mov	ecx, DWORD PTR _ii$9[ebp]
add	ecx, 1
mov	DWORD PTR _ii$9[ebp], ecx
mov	edx, DWORD PTR _ii$9[ebp]
cmp	edx, DWORD PTR _nPage$6[ebp]
jge	$LN15@sqlite3Pag
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN15@sqlite3Pag
mov	eax, DWORD PTR _pg1$5[ebp]
add	eax, DWORD PTR _ii$9[ebp]
mov	DWORD PTR _pg$7[ebp], eax
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR _pg$7[ebp]
cmp	edx, DWORD PTR [ecx+20]
je	SHORT $LN13@sqlite3Pag
mov	eax, DWORD PTR _pg$7[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3BitvecTest
add	esp, 8
test	eax, eax
jne	SHORT $LN14@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
cdq
idiv	DWORD PTR [ecx+152]
add	eax, 1
cmp	DWORD PTR _pg$7[ebp], eax
je	SHORT $LN12@sqlite3Pag
push	0
lea	edx, DWORD PTR _pPage$8[ebp]
push	edx
mov	eax, DWORD PTR _pg$7[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN12@sqlite3Pag
mov	edx, DWORD PTR _pPage$8[ebp]
push	edx
call	_pager_write
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPage$8[ebp]
movzx	ecx, WORD PTR [eax+24]
and	ecx, 4
je	SHORT $LN10@sqlite3Pag
mov	DWORD PTR _needSync$1[ebp], 1
mov	edx, DWORD PTR _pPage$8[ebp]
push	edx
call	_sqlite3PagerUnrefNotNull
add	esp, 4
jmp	SHORT $LN9@sqlite3Pag
mov	eax, DWORD PTR _pg$7[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_lookup
add	esp, 8
mov	DWORD PTR _pPage$8[ebp], eax
cmp	DWORD PTR _pPage$8[ebp], 0
je	SHORT $LN9@sqlite3Pag
mov	edx, DWORD PTR _pPage$8[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, 4
je	SHORT $LN7@sqlite3Pag
mov	DWORD PTR _needSync$1[ebp], 1
mov	ecx, DWORD PTR _pPage$8[ebp]
push	ecx
call	_sqlite3PagerUnrefNotNull
add	esp, 4
jmp	$LN16@sqlite3Pag
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@sqlite3Pag
cmp	DWORD PTR _needSync$1[ebp], 0
je	SHORT $LN6@sqlite3Pag
mov	DWORD PTR _ii$9[ebp], 0
jmp	SHORT $LN5@sqlite3Pag
mov	edx, DWORD PTR _ii$9[ebp]
add	edx, 1
mov	DWORD PTR _ii$9[ebp], edx
mov	eax, DWORD PTR _ii$9[ebp]
cmp	eax, DWORD PTR _nPage$6[ebp]
jge	SHORT $LN6@sqlite3Pag
mov	ecx, DWORD PTR _pg1$5[ebp]
add	ecx, DWORD PTR _ii$9[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_lookup
add	esp, 8
mov	DWORD PTR _pPage$4[ebp], eax
cmp	DWORD PTR _pPage$4[ebp], 0
je	SHORT $LN2@sqlite3Pag
mov	eax, DWORD PTR _pPage$4[ebp]
movzx	ecx, WORD PTR [eax+24]
or	ecx, 4
mov	edx, DWORD PTR _pPage$4[ebp]
mov	WORD PTR [edx+24], cx
mov	eax, DWORD PTR _pPage$4[ebp]
push	eax
call	_sqlite3PagerUnrefNotNull
add	esp, 4
jmp	SHORT $LN4@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+20]
and	edx, -5					
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+20], dl
jmp	SHORT $LN1@sqlite3Pag
mov	ecx, DWORD PTR _pDbPage$[ebp]
push	ecx
call	_pager_write
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerUnrefNotNull PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPg$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pPg$[ebp]
movzx	eax, WORD PTR [edx+24]
and	eax, 64					
je	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPg$[ebp]
push	ecx
call	_pagerReleaseMapPage
add	esp, 4
jmp	SHORT $LN1@sqlite3Pag
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_sqlite3PcacheRelease
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUnlockIfUnused
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerUnref PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _pPg$[ebp], 0
je	SHORT $LN2@sqlite3Pag
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_sqlite3PagerUnrefNotNull
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerRef PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_sqlite3PcacheRef
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerLookup PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _pPg$[ebp], 0
lea	eax, DWORD PTR _pPg$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheFetch
add	esp, 16					
mov	eax, DWORD PTR _pPg$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerAcquire PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _pPg$[ebp], 0
mov	DWORD PTR _iFrame$[ebp], 0
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 1
mov	DWORD PTR _noContent$[ebp], eax
cmp	DWORD PTR _pgno$[ebp], 1
je	SHORT $LN30@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+116]
test	edx, edx
je	SHORT $LN30@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 1
je	SHORT $LN31@sqlite3Pag
mov	edx, DWORD PTR _flags$[ebp]
and	edx, 2
je	SHORT $LN30@sqlite3Pag
mov	DWORD PTR tv74[ebp], 1
jmp	SHORT $LN32@sqlite3Pag
mov	DWORD PTR tv74[ebp], 0
mov	eax, DWORD PTR tv74[ebp]
mov	DWORD PTR _bMmapOk$[ebp], eax
cmp	DWORD PTR _pgno$[ebp], 0
jne	SHORT $LN27@sqlite3Pag
push	45156					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN28@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [ecx+40], 0
je	SHORT $LN26@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+40]
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN25@sqlite3Pag
cmp	DWORD PTR _bMmapOk$[ebp], 0
je	SHORT $LN24@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN24@sqlite3Pag
lea	edx, DWORD PTR _iFrame$[ebp]
push	edx
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+208]
push	edx
call	_sqlite3WalFindFrame
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN24@sqlite3Pag
jmp	$pager_acquire_err$33
cmp	DWORD PTR _bMmapOk$[ebp], 0
je	$LN22@sqlite3Pag
cmp	DWORD PTR _iFrame$[ebp], 0
jne	$LN22@sqlite3Pag
mov	DWORD PTR _pData$1[ebp], 0
lea	eax, DWORD PTR _pData$1[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+152]
push	edx
mov	ecx, DWORD PTR _pgno$[ebp]
sub	ecx, 1
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
push	edx
push	eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsFetch
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN21@sqlite3Pag
cmp	DWORD PTR _pData$1[ebp], 0
je	$LN21@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	eax, 1
jle	SHORT $LN20@sqlite3Pag
lea	ecx, DWORD PTR _pPg$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
call	_sqlite3PcacheFetch
add	esp, 16					
cmp	DWORD PTR _pPg$[ebp], 0
jne	SHORT $LN19@sqlite3Pag
lea	edx, DWORD PTR _pPg$[ebp]
push	edx
mov	eax, DWORD PTR _pData$1[ebp]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerAcquireMapPage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN18@sqlite3Pag
mov	eax, DWORD PTR _pData$1[ebp]
push	eax
mov	ecx, DWORD PTR _pgno$[ebp]
sub	ecx, 1
xor	esi, esi
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
push	edx
push	eax
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsUnfetch
add	esp, 16					
cmp	DWORD PTR _pPg$[ebp], 0
je	SHORT $LN21@sqlite3Pag
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR _pPg$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
jmp	$LN28@sqlite3Pag
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN22@sqlite3Pag
jmp	$pager_acquire_err$33
mov	ecx, DWORD PTR _ppPage$[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
call	_sqlite3PcacheFetch
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@sqlite3Pag
mov	DWORD PTR _pPg$[ebp], 0
jmp	$pager_acquire_err$33
mov	edx, DWORD PTR _ppPage$[ebp]
mov	eax, DWORD PTR [edx]
cmp	DWORD PTR [eax+16], 0
je	SHORT $LN14@sqlite3Pag
cmp	DWORD PTR _noContent$[ebp], 0
jne	SHORT $LN14@sqlite3Pag
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+edx+184]
add	ecx, 1
mov	edx, 4
imul	eax, edx, 0
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+eax+184], ecx
xor	eax, eax
jmp	$LN28@sqlite3Pag
jmp	$LN13@sqlite3Pag
mov	eax, DWORD PTR _ppPage$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pPg$[ebp], ecx
mov	edx, DWORD PTR _pPg$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+16], eax
cmp	DWORD PTR _pgno$[ebp], 2147483647	
ja	SHORT $LN11@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
cdq
idiv	DWORD PTR [ecx+152]
add	eax, 1
cmp	DWORD PTR _pgno$[ebp], eax
jne	SHORT $LN12@sqlite3Pag
push	45227					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$pager_acquire_err$33
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+15]
test	eax, eax
jne	SHORT $LN9@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+24]
cmp	edx, DWORD PTR _pgno$[ebp]
jb	SHORT $LN9@sqlite3Pag
cmp	DWORD PTR _noContent$[ebp], 0
jne	SHORT $LN9@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
cmp	DWORD PTR [ecx], 0
jne	SHORT $LN10@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pgno$[ebp]
cmp	eax, DWORD PTR [edx+156]
jbe	SHORT $LN8@sqlite3Pag
mov	DWORD PTR _rc$[ebp], 13			
jmp	$pager_acquire_err$33
cmp	DWORD PTR _noContent$[ebp], 0
je	SHORT $LN7@sqlite3Pag
call	_sqlite3BeginBenignMalloc
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pgno$[ebp]
cmp	edx, DWORD PTR [ecx+28]
ja	SHORT $LN6@sqlite3Pag
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3BitvecSet
add	esp, 8
mov	eax, DWORD PTR _pgno$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_addToSavepointBitvecs
add	esp, 8
call	_sqlite3EndBenignMalloc
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
push	eax
push	0
mov	ecx, DWORD PTR _pPg$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_memset
add	esp, 12					
jmp	SHORT $LN13@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUseWal
add	esp, 4
test	eax, eax
je	SHORT $LN4@sqlite3Pag
cmp	DWORD PTR _bMmapOk$[ebp], 0
jne	SHORT $LN4@sqlite3Pag
lea	ecx, DWORD PTR _iFrame$[ebp]
push	ecx
mov	edx, DWORD PTR _pgno$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalFindFrame
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Pag
jmp	SHORT $pager_acquire_err$33
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+edx+184]
add	ecx, 1
mov	edx, 4
shl	edx, 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [eax+edx+184], ecx
mov	ecx, DWORD PTR _iFrame$[ebp]
push	ecx
mov	edx, DWORD PTR _pPg$[ebp]
push	edx
call	_readDbPage
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN13@sqlite3Pag
jmp	SHORT $pager_acquire_err$33
xor	eax, eax
jmp	SHORT $LN28@sqlite3Pag
cmp	DWORD PTR _pPg$[ebp], 0
je	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPg$[ebp]
push	eax
call	_sqlite3PcacheDrop
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerUnlockIfUnused
add	esp, 4
mov	edx, DWORD PTR _ppPage$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerBackupPtr PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 88					
pop	ebp
ret	0
ENDP
_sqlite3PagerJournalSizeLimit PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _iLimit$[ebp+4], -1
jl	SHORT $LN1@sqlite3Pag
jg	SHORT $LN4@sqlite3Pag
cmp	DWORD PTR _iLimit$[ebp], -1
jb	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _iLimit$[ebp]
mov	DWORD PTR [eax+160], ecx
mov	edx, DWORD PTR _iLimit$[ebp+4]
mov	DWORD PTR [eax+164], edx
mov	eax, DWORD PTR _iLimit$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iLimit$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalLimit
add	esp, 12					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [ecx+160]
mov	edx, DWORD PTR [ecx+164]
pop	ebp
ret	0
ENDP
_sqlite3PagerOkToChangeJournalMode PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
cmp	ecx, 3
jl	SHORT $LN2@sqlite3Pag
xor	eax, eax
jmp	SHORT $LN3@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+64]
cmp	DWORD PTR [eax], 0
je	SHORT $LN1@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR tv77[ebp], ecx
mov	edx, DWORD PTR tv77[ebp]
cmp	DWORD PTR [edx+76], 0
jl	SHORT $LN1@sqlite3Pag
jg	SHORT $LN5@sqlite3Pag
mov	eax, DWORD PTR tv77[ebp]
cmp	DWORD PTR [eax+72], 0
jbe	SHORT $LN1@sqlite3Pag
xor	eax, eax
jmp	SHORT $LN3@sqlite3Pag
mov	eax, 1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerGetJournalMode PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [eax+5]
pop	ebp
ret	0
ENDP
_sqlite3PagerSetJournalMode PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pPager$[ebp]
mov	cl, BYTE PTR [eax+5]
mov	BYTE PTR _eOld$[ebp], cl
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+15]
test	eax, eax
je	SHORT $LN12@sqlite3Pag
cmp	DWORD PTR _eMode$[ebp], 4
je	SHORT $LN12@sqlite3Pag
cmp	DWORD PTR _eMode$[ebp], 2
je	SHORT $LN12@sqlite3Pag
movzx	ecx, BYTE PTR _eOld$[ebp]
mov	DWORD PTR _eMode$[ebp], ecx
movzx	edx, BYTE PTR _eOld$[ebp]
cmp	DWORD PTR _eMode$[ebp], edx
je	$LN10@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	cl, BYTE PTR _eMode$[ebp]
mov	BYTE PTR [eax+5], cl
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+4]
test	eax, eax
jne	$LN10@sqlite3Pag
movzx	ecx, BYTE PTR _eOld$[ebp]
and	ecx, 5
cmp	ecx, 1
jne	$LN10@sqlite3Pag
mov	edx, DWORD PTR _eMode$[ebp]
and	edx, 1
jne	$LN10@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsClose
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+17]
cmp	eax, 2
jl	SHORT $LN8@sqlite3Pag
push	0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+172]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3OsDelete
add	esp, 12					
jmp	$LN10@sqlite3Pag
mov	DWORD PTR _rc$2[ebp], 0
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
mov	DWORD PTR _state$1[ebp], eax
cmp	DWORD PTR _state$1[ebp], 0
jne	SHORT $LN6@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3PagerSharedLock
add	esp, 4
mov	DWORD PTR _rc$2[ebp], eax
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+16]
cmp	eax, 1
jne	SHORT $LN5@sqlite3Pag
push	2
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pagerLockDb
add	esp, 8
mov	DWORD PTR _rc$2[ebp], eax
cmp	DWORD PTR _rc$2[ebp], 0
jne	SHORT $LN4@sqlite3Pag
push	0
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+172]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3OsDelete
add	esp, 12					
cmp	DWORD PTR _rc$2[ebp], 0
jne	SHORT $LN3@sqlite3Pag
cmp	DWORD PTR _state$1[ebp], 1
jne	SHORT $LN3@sqlite3Pag
push	1
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerUnlockDb
add	esp, 8
jmp	SHORT $LN10@sqlite3Pag
cmp	DWORD PTR _state$1[ebp], 0
jne	SHORT $LN10@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_unlock
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+5]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerLockingMode PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _eMode$[ebp], 0
jl	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+12]
test	ecx, ecx
jne	SHORT $LN1@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+208]
push	eax
call	_sqlite3WalHeapMemory
add	esp, 4
test	eax, eax
jne	SHORT $LN1@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR _eMode$[ebp]
mov	BYTE PTR [ecx+4], dl
mov	eax, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [eax+4]
pop	ebp
ret	0
ENDP
_sqlite3PagerSetFlags PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pgFlags$[ebp]
and	eax, 3
mov	DWORD PTR _level$[ebp], eax
cmp	DWORD PTR _level$[ebp], 1
je	SHORT $LN12@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+12]
test	edx, edx
jne	SHORT $LN12@sqlite3Pag
mov	DWORD PTR tv70[ebp], 0
jmp	SHORT $LN13@sqlite3Pag
mov	DWORD PTR tv70[ebp], 1
mov	eax, DWORD PTR _pPager$[ebp]
mov	cl, BYTE PTR tv70[ebp]
mov	BYTE PTR [eax+7], cl
cmp	DWORD PTR _level$[ebp], 3
jne	SHORT $LN14@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+12]
test	eax, eax
jne	SHORT $LN14@sqlite3Pag
mov	DWORD PTR tv77[ebp], 1
jmp	SHORT $LN15@sqlite3Pag
mov	DWORD PTR tv77[ebp], 0
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR tv77[ebp]
mov	BYTE PTR [ecx+8], dl
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
je	SHORT $LN9@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+11], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+9], 0
jmp	SHORT $LN8@sqlite3Pag
mov	ecx, DWORD PTR _pgFlags$[ebp]
and	ecx, 4
je	SHORT $LN7@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+11], 3
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+9], 3
jmp	SHORT $LN8@sqlite3Pag
mov	ecx, DWORD PTR _pgFlags$[ebp]
and	ecx, 8
je	SHORT $LN5@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+11], 2
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+9], 3
jmp	SHORT $LN8@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+11], 2
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+9], 2
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR [ecx+11]
mov	BYTE PTR [eax+10], dl
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
je	SHORT $LN3@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+10]
or	eax, 32					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+10], al
mov	edx, DWORD PTR _pgFlags$[ebp]
and	edx, 16					
je	SHORT $LN2@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+20]
and	ecx, -2					
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+20], cl
jmp	SHORT $LN10@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+20]
or	ecx, 1
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+20], cl
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerShrink PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
call	_sqlite3PcacheShrink
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerSetMmapLimit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _szMmap$[ebp]
mov	DWORD PTR [eax+128], ecx
mov	edx, DWORD PTR _szMmap$[ebp+4]
mov	DWORD PTR [eax+132], edx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerFixMaplimit
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3PagerSetCachesize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _mxPage$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+204]
push	edx
call	_sqlite3PcacheSetCachesize
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3PagerMaxPageCount PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _mxPage$[ebp], 0
jle	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _mxPage$[ebp]
mov	DWORD PTR [eax+156], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+156]
pop	ebp
ret	0
ENDP
_sqlite3PagerSetPagesize PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
push	esi
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPageSize$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pageSize$[ebp], ecx
mov	edx, DWORD PTR _pPager$[ebp]
movzx	eax, BYTE PTR [edx+15]
test	eax, eax
je	SHORT $LN7@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [ecx+24], 0
jne	$LN8@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheRefCount
add	esp, 4
test	eax, eax
jne	$LN8@sqlite3Pag
cmp	DWORD PTR _pageSize$[ebp], 0
je	$LN8@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pageSize$[ebp]
cmp	edx, DWORD PTR [ecx+152]
je	$LN8@sqlite3Pag
mov	DWORD PTR _pNew$2[ebp], 0
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nByte$1[ebp], xmm0
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+16]
test	ecx, ecx
jle	SHORT $LN6@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
cmp	DWORD PTR [eax], 0
je	SHORT $LN6@sqlite3Pag
lea	ecx, DWORD PTR _nByte$1[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsFileSize
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Pag
mov	ecx, DWORD PTR _pageSize$[ebp]
push	ecx
call	_sqlite3PageMalloc
add	esp, 4
mov	DWORD PTR _pNew$2[ebp], eax
cmp	DWORD PTR _pNew$2[ebp], 0
jne	SHORT $LN5@sqlite3Pag
mov	DWORD PTR _rc$[ebp], 7
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pager_reset
add	esp, 4
mov	eax, DWORD PTR _pageSize$[ebp]
xor	ecx, ecx
add	eax, DWORD PTR _nByte$1[ebp]
adc	ecx, DWORD PTR _nByte$1[ebp+4]
sub	eax, 1
sbb	ecx, 0
mov	edx, DWORD PTR _pageSize$[ebp]
xor	esi, esi
push	esi
push	edx
push	ecx
push	eax
call	__alldiv
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pageSize$[ebp]
mov	DWORD PTR [edx+152], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+200]
push	edx
call	_sqlite3PageFree
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pNew$2[ebp]
mov	DWORD PTR [eax+200], ecx
mov	edx, DWORD PTR _pageSize$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
call	_sqlite3PcacheSetPageSize
add	esp, 8
mov	edx, DWORD PTR _pPageSize$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+152]
mov	DWORD PTR [edx], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Pag
cmp	DWORD PTR _nReserve$[ebp], 0
jge	SHORT $LN1@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
movsx	eax, WORD PTR [edx+142]
mov	DWORD PTR _nReserve$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dx, WORD PTR _nReserve$[ebp]
mov	WORD PTR [ecx+142], dx
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerFixMaplimit
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerSetBusyhandler PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _xBusyHandler$[ebp]
mov	DWORD PTR [eax+176], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pBusyHandlerArg$[ebp]
mov	DWORD PTR [edx+180], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
cmp	DWORD PTR [edx], 0
je	SHORT $LN2@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
add	eax, 176				
mov	DWORD PTR _ap$1[ebp], eax
mov	ecx, DWORD PTR _ap$1[ebp]
push	ecx
push	15					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsFileControlHint
add	esp, 12					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerReadFileheader PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _N$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pDest$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
cmp	DWORD PTR [eax], 0
je	SHORT $LN2@sqlite3Pag
push	0
push	0
mov	ecx, DWORD PTR _N$[ebp]
push	ecx
mov	edx, DWORD PTR _pDest$[ebp]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_sqlite3OsRead
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 522		
jne	SHORT $LN2@sqlite3Pag
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerClose PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+200]
mov	DWORD PTR _pTmp$[ebp], ecx
call	_sqlite3BeginBenignMalloc
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerFreeMapHdrs
add	esp, 4
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+4], 0
mov	ecx, DWORD PTR _pTmp$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+152]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+9]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+208]
push	ecx
call	_sqlite3WalClose
add	esp, 16					
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+208], 0
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_reset
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
movzx	edx, BYTE PTR [ecx+15]
test	edx, edx
je	SHORT $LN3@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pager_unlock
add	esp, 4
jmp	SHORT $LN2@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+64]
cmp	DWORD PTR [edx], 0
je	SHORT $LN1@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_pagerSyncHotJournal
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_pager_error
add	esp, 8
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
call	_pagerUnlockAndRollback
add	esp, 4
call	_sqlite3EndBenignMalloc
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3OsClose
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsClose
add	esp, 4
mov	ecx, DWORD PTR _pTmp$[ebp]
push	ecx
call	_sqlite3PageFree
add	esp, 4
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+204]
push	eax
call	_sqlite3PcacheClose
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3PagerOpen PROC
push	ebp
mov	ebp, esp
sub	esp, 84					
mov	DWORD PTR _pPager$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _tempFile$[ebp], 0
mov	DWORD PTR _memDb$[ebp], 0
mov	DWORD PTR _readOnly$[ebp], 0
mov	DWORD PTR _zPathname$[ebp], 0
mov	DWORD PTR _nPathname$[ebp], 0
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 1
jne	SHORT $LN33@sqlite3Pag
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN34@sqlite3Pag
mov	DWORD PTR tv66[ebp], 0
mov	ecx, DWORD PTR tv66[ebp]
mov	DWORD PTR _useJournal$[ebp], ecx
call	_sqlite3PcacheSize
mov	DWORD PTR _pcacheSize$[ebp], eax
mov	DWORD PTR _szPageDflt$[ebp], 1024	
mov	DWORD PTR _zUri$[ebp], 0
mov	DWORD PTR _nUri$[ebp], 0
call	_sqlite3MemJournalSize
mov	edx, DWORD PTR _pVfs$[ebp]
cmp	DWORD PTR [edx+4], eax
jle	SHORT $LN30@sqlite3Pag
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 7
and	ecx, -8					
mov	DWORD PTR _journalFileSize$[ebp], ecx
jmp	SHORT $LN29@sqlite3Pag
call	_sqlite3MemJournalSize
add	eax, 7
and	eax, -8					
mov	DWORD PTR _journalFileSize$[ebp], eax
mov	edx, DWORD PTR _ppPager$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _flags$[ebp]
and	eax, 2
je	SHORT $LN28@sqlite3Pag
mov	DWORD PTR _memDb$[ebp], 1
cmp	DWORD PTR _zFilename$[ebp], 0
je	SHORT $LN28@sqlite3Pag
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zFilename$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN28@sqlite3Pag
mov	edx, DWORD PTR _zFilename$[ebp]
push	edx
push	0
call	_sqlite3DbStrDup
add	esp, 8
mov	DWORD PTR _zPathname$[ebp], eax
cmp	DWORD PTR _zPathname$[ebp], 0
jne	SHORT $LN26@sqlite3Pag
mov	eax, 7
jmp	$LN31@sqlite3Pag
mov	eax, DWORD PTR _zPathname$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nPathname$[ebp], eax
mov	DWORD PTR _zFilename$[ebp], 0
cmp	DWORD PTR _zFilename$[ebp], 0
je	$LN25@sqlite3Pag
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zFilename$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	$LN25@sqlite3Pag
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+8]
add	eax, 1
mov	DWORD PTR _nPathname$[ebp], eax
mov	ecx, DWORD PTR _nPathname$[ebp]
shl	ecx, 1
push	ecx
push	0
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _zPathname$[ebp], eax
cmp	DWORD PTR _zPathname$[ebp], 0
jne	SHORT $LN24@sqlite3Pag
mov	eax, 7
jmp	$LN31@sqlite3Pag
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zPathname$[ebp]
mov	BYTE PTR [ecx+eax], 0
mov	edx, DWORD PTR _zPathname$[ebp]
push	edx
mov	eax, DWORD PTR _nPathname$[ebp]
push	eax
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3OsFullPathname
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _zPathname$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nPathname$[ebp], eax
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	edx, DWORD PTR _zFilename$[ebp]
lea	eax, DWORD PTR [edx+eax+1]
mov	DWORD PTR _zUri$[ebp], eax
mov	ecx, DWORD PTR _zUri$[ebp]
mov	DWORD PTR _z$3[ebp], ecx
mov	edx, DWORD PTR _z$3[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN22@sqlite3Pag
mov	ecx, DWORD PTR _z$3[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	edx, DWORD PTR _z$3[ebp]
lea	eax, DWORD PTR [edx+eax+1]
mov	DWORD PTR _z$3[ebp], eax
mov	ecx, DWORD PTR _z$3[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	edx, DWORD PTR _z$3[ebp]
lea	eax, DWORD PTR [edx+eax+1]
mov	DWORD PTR _z$3[ebp], eax
jmp	SHORT $LN23@sqlite3Pag
mov	ecx, 1
shl	ecx, 0
add	ecx, DWORD PTR _z$3[ebp]
sub	ecx, DWORD PTR _zUri$[ebp]
mov	DWORD PTR _nUri$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN21@sqlite3Pag
mov	edx, DWORD PTR _nPathname$[ebp]
add	edx, 8
mov	eax, DWORD PTR _pVfs$[ebp]
cmp	edx, DWORD PTR [eax+8]
jle	SHORT $LN21@sqlite3Pag
push	44459					
call	_sqlite3CantopenError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN25@sqlite3Pag
mov	ecx, DWORD PTR _zPathname$[ebp]
push	ecx
push	0
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN31@sqlite3Pag
mov	edx, DWORD PTR _pcacheSize$[ebp]
add	edx, 7
and	edx, -8					
mov	eax, DWORD PTR _pVfs$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 7
and	ecx, -8					
add	ecx, DWORD PTR _nPathname$[ebp]
lea	edx, DWORD PTR [ecx+edx+216]
mov	eax, DWORD PTR _journalFileSize$[ebp]
lea	ecx, DWORD PTR [edx+eax*2]
mov	edx, DWORD PTR _nUri$[ebp]
lea	eax, DWORD PTR [ecx+edx+1]
add	eax, DWORD PTR _nPathname$[ebp]
mov	ecx, DWORD PTR _nPathname$[ebp]
lea	edx, DWORD PTR [eax+ecx+16]
push	edx
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pPtr$[ebp], eax
cmp	DWORD PTR _pPtr$[ebp], 0
jne	SHORT $LN19@sqlite3Pag
mov	eax, DWORD PTR _zPathname$[ebp]
push	eax
push	0
call	_sqlite3DbFree
add	esp, 8
mov	eax, 7
jmp	$LN31@sqlite3Pag
mov	ecx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR _pPager$[ebp], ecx
mov	edx, DWORD PTR _pPtr$[ebp]
add	edx, 216				
mov	DWORD PTR _pPtr$[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR [eax+204], ecx
mov	edx, DWORD PTR _pcacheSize$[ebp]
add	edx, 7
and	edx, -8					
add	edx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR _pPtr$[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR [eax+60], ecx
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+4]
add	eax, 7
and	eax, -8					
add	eax, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR _pPtr$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR [ecx+68], edx
mov	eax, DWORD PTR _pPtr$[ebp]
add	eax, DWORD PTR _journalFileSize$[ebp]
mov	DWORD PTR _pPtr$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR [ecx+64], edx
mov	eax, DWORD PTR _pPtr$[ebp]
add	eax, DWORD PTR _journalFileSize$[ebp]
mov	DWORD PTR _pPtr$[ebp], eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR [ecx+168], edx
cmp	DWORD PTR _zPathname$[ebp], 0
je	$LN18@sqlite3Pag
mov	eax, DWORD PTR _nUri$[ebp]
mov	ecx, DWORD PTR _nPathname$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
add	edx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR _pPtr$[ebp], edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPtr$[ebp]
mov	DWORD PTR [eax+172], ecx
mov	edx, DWORD PTR _nPathname$[ebp]
push	edx
mov	eax, DWORD PTR _zPathname$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+168]
push	edx
call	_memcpy
add	esp, 12					
cmp	DWORD PTR _nUri$[ebp], 0
je	SHORT $LN17@sqlite3Pag
mov	eax, DWORD PTR _nUri$[ebp]
push	eax
mov	ecx, DWORD PTR _zUri$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+168]
mov	ecx, DWORD PTR _nPathname$[ebp]
lea	edx, DWORD PTR [eax+ecx+1]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _nPathname$[ebp]
push	eax
mov	ecx, DWORD PTR _zPathname$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+172]
push	eax
call	_memcpy
add	esp, 12					
push	10					
push	OFFSET $SG91174
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+172]
add	edx, DWORD PTR _nPathname$[ebp]
push	edx
call	_memcpy
add	esp, 12					
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+172]
mov	edx, DWORD PTR _nPathname$[ebp]
lea	eax, DWORD PTR [ecx+edx+9]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [ecx+212], eax
mov	edx, DWORD PTR _nPathname$[ebp]
push	edx
mov	eax, DWORD PTR _zPathname$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+212]
push	edx
call	_memcpy
add	esp, 12					
push	5
push	OFFSET $SG91175
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+212]
add	ecx, DWORD PTR _nPathname$[ebp]
push	ecx
call	_memcpy
add	esp, 12					
mov	edx, DWORD PTR _zPathname$[ebp]
push	edx
push	0
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _vfsFlags$[ebp]
mov	DWORD PTR [edx+144], eax
cmp	DWORD PTR _zFilename$[ebp], 0
je	$act_like_temp_file$41
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zFilename$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	$act_like_temp_file$41
mov	DWORD PTR _fout$2[ebp], 0
lea	edx, DWORD PTR _fout$2[ebp]
push	edx
mov	eax, DWORD PTR _vfsFlags$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+168]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3OsOpen
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _fout$2[ebp]
and	eax, 1
mov	DWORD PTR _readOnly$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN15@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+60]
push	edx
call	_sqlite3OsDeviceCharacteristics
add	esp, 4
mov	DWORD PTR _iDc$1[ebp], eax
cmp	DWORD PTR _readOnly$[ebp], 0
jne	SHORT $LN14@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_setSectorSize
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR _szPageDflt$[ebp]
cmp	edx, DWORD PTR [ecx+148]
jae	SHORT $LN14@sqlite3Pag
mov	eax, DWORD PTR _pPager$[ebp]
cmp	DWORD PTR [eax+148], 8192		
jbe	SHORT $LN12@sqlite3Pag
mov	DWORD PTR _szPageDflt$[ebp], 8192	
jmp	SHORT $LN14@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	edx, DWORD PTR [ecx+148]
mov	DWORD PTR _szPageDflt$[ebp], edx
push	0
push	OFFSET $SG91187
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_sqlite3_uri_boolean
add	esp, 12					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+13], al
mov	edx, DWORD PTR _iDc$1[ebp]
and	edx, 8192				
jne	SHORT $LN9@sqlite3Pag
push	0
push	OFFSET $SG91190
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_sqlite3_uri_boolean
add	esp, 12					
test	eax, eax
je	SHORT $LN15@sqlite3Pag
mov	ecx, DWORD PTR _vfsFlags$[ebp]
or	ecx, 1
mov	DWORD PTR _vfsFlags$[ebp], ecx
jmp	SHORT $act_like_temp_file$41
jmp	SHORT $LN8@sqlite3Pag
mov	DWORD PTR _tempFile$[ebp], 1
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+16], 1
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+17], 4
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+13], 1
mov	edx, DWORD PTR _vfsFlags$[ebp]
and	edx, 1
mov	DWORD PTR _readOnly$[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3Pag
push	-1
lea	eax, DWORD PTR _szPageDflt$[ebp]
push	eax
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3PagerSetPagesize
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_sqlite3OsClose
add	esp, 4
mov	ecx, DWORD PTR _pPager$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN31@sqlite3Pag
mov	edx, DWORD PTR _nExtra$[ebp]
add	edx, 7
and	edx, -8					
mov	DWORD PTR _nExtra$[ebp], edx
cmp	DWORD PTR _memDb$[ebp], 0
jne	SHORT $LN35@sqlite3Pag
mov	DWORD PTR tv313[ebp], 1
jmp	SHORT $LN36@sqlite3Pag
mov	DWORD PTR tv313[ebp], 0
cmp	DWORD PTR tv313[ebp], 0
je	SHORT $LN37@sqlite3Pag
mov	DWORD PTR tv315[ebp], OFFSET _pagerStress
jmp	SHORT $LN38@sqlite3Pag
mov	DWORD PTR tv315[ebp], 0
cmp	DWORD PTR _memDb$[ebp], 0
jne	SHORT $LN39@sqlite3Pag
mov	DWORD PTR tv318[ebp], 1
jmp	SHORT $LN40@sqlite3Pag
mov	DWORD PTR tv318[ebp], 0
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR [eax+204]
push	ecx
mov	edx, DWORD PTR _pPager$[ebp]
push	edx
mov	eax, DWORD PTR tv315[ebp]
push	eax
mov	ecx, DWORD PTR tv318[ebp]
push	ecx
mov	edx, DWORD PTR _nExtra$[ebp]
push	edx
mov	eax, DWORD PTR _szPageDflt$[ebp]
push	eax
call	_sqlite3PcacheOpen
add	esp, 24					
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR _useJournal$[ebp]
mov	BYTE PTR [ecx+6], dl
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [eax+156], 1073741823		
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR _tempFile$[ebp]
mov	BYTE PTR [ecx+12], dl
mov	eax, DWORD PTR _pPager$[ebp]
mov	cl, BYTE PTR _tempFile$[ebp]
mov	BYTE PTR [eax+4], cl
mov	edx, DWORD PTR _pPager$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	cl, BYTE PTR [eax+12]
mov	BYTE PTR [edx+18], cl
mov	edx, DWORD PTR _pPager$[ebp]
mov	al, BYTE PTR _memDb$[ebp]
mov	BYTE PTR [edx+15], al
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR _readOnly$[ebp]
mov	BYTE PTR [ecx+14], dl
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _pPager$[ebp]
mov	dl, BYTE PTR [ecx+12]
mov	BYTE PTR [eax+7], dl
mov	eax, DWORD PTR _pPager$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
je	SHORT $LN5@sqlite3Pag
jmp	SHORT $LN4@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+8], 1
mov	eax, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [eax+11], 2
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+10], 34			
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+9], 2
mov	eax, DWORD PTR _pPager$[ebp]
mov	cx, WORD PTR _nExtra$[ebp]
mov	WORD PTR [eax+140], cx
mov	edx, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx+160], -1
mov	DWORD PTR [edx+164], -1
mov	eax, DWORD PTR _pPager$[ebp]
push	eax
call	_setSectorSize
add	esp, 4
cmp	DWORD PTR _useJournal$[ebp], 0
jne	SHORT $LN3@sqlite3Pag
mov	ecx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [ecx+5], 2
jmp	SHORT $LN2@sqlite3Pag
cmp	DWORD PTR _memDb$[ebp], 0
je	SHORT $LN2@sqlite3Pag
mov	edx, DWORD PTR _pPager$[ebp]
mov	BYTE PTR [edx+5], 4
mov	eax, DWORD PTR _pPager$[ebp]
mov	ecx, DWORD PTR _xReinit$[ebp]
mov	DWORD PTR [eax+196], ecx
mov	edx, DWORD PTR _ppPager$[ebp]
mov	eax, DWORD PTR _pPager$[ebp]
mov	DWORD PTR [edx], eax
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeLinkSubProgram PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pVdbe$[ebp]
mov	edx, DWORD PTR [ecx+192]
mov	DWORD PTR [eax+24], edx
mov	eax, DWORD PTR _pVdbe$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+192], ecx
pop	ebp
ret	0
ENDP
_sqlite3VdbeFindCompare PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, WORD PTR [ecx+6]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	eax, WORD PTR [ecx+8]
add	edx, eax
cmp	edx, 13					
jg	$LN5@sqlite3Vdb
mov	ecx, 40					
imul	edx, ecx, 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
movzx	edx, WORD PTR [ecx+edx+28]
mov	DWORD PTR _flags$1[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+16]
movzx	edx, BYTE PTR [ecx+eax]
test	edx, edx
je	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+16], -1
jmp	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+12], -1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+16], 1
mov	ecx, DWORD PTR _flags$1[ebp]
and	ecx, 4
je	SHORT $LN2@sqlite3Vdb
mov	eax, OFFSET _vdbeRecordCompareInt
jmp	SHORT $LN6@sqlite3Vdb
mov	edx, DWORD PTR _flags$1[ebp]
and	edx, 25					
jne	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 4
imul	eax, edx, 0
cmp	DWORD PTR [ecx+eax+20], 0
jne	SHORT $LN5@sqlite3Vdb
mov	eax, OFFSET _vdbeRecordCompareString
jmp	SHORT $LN6@sqlite3Vdb
mov	eax, OFFSET _sqlite3VdbeRecordCompare
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeAllocUnpackedRecord PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pSpace$[ebp]
and	eax, 7
mov	ecx, 8
sub	ecx, eax
and	ecx, 7
mov	DWORD PTR _nOff$[ebp], ecx
mov	edx, DWORD PTR _pKeyInfo$[ebp]
movzx	eax, WORD PTR [edx+6]
add	eax, 1
imul	ecx, eax, 40
add	ecx, 24					
mov	DWORD PTR _nByte$[ebp], ecx
mov	edx, DWORD PTR _szSpace$[ebp]
add	edx, DWORD PTR _nOff$[ebp]
cmp	DWORD PTR _nByte$[ebp], edx
jle	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _pKeyInfo$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
mov	eax, DWORD PTR _ppFree$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax], ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN2@sqlite3Vdb
xor	eax, eax
jmp	SHORT $LN4@sqlite3Vdb
jmp	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _pSpace$[ebp]
add	edx, DWORD PTR _nOff$[ebp]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _ppFree$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, 1
imul	edx, ecx, 24
add	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+8], edx
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pKeyInfo$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _pKeyInfo$[ebp]
movzx	ecx, WORD PTR [eax+6]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	WORD PTR [edx+4], cx
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeRecordCompare PROC
push	ebp
mov	ebp, esp
sub	esp, 160				
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pPKey2$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pRhs$[ebp], ecx
mov	edx, DWORD PTR _pPKey2$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pKeyInfo$[ebp], eax
mov	ecx, DWORD PTR _pKey1$[ebp]
mov	DWORD PTR _aKey1$[ebp], ecx
cmp	DWORD PTR _bSkip$[ebp], 0
je	$LN53@sqlite3Vdb
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _aKey1$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
cmp	ecx, 128				
jge	SHORT $LN56@sqlite3Vdb
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _aKey1$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
mov	DWORD PTR _s1$7[ebp], ecx
mov	DWORD PTR tv80[ebp], 1
jmp	SHORT $LN57@sqlite3Vdb
lea	edx, DWORD PTR _s1$7[ebp]
push	edx
mov	eax, 1
shl	eax, 0
add	eax, DWORD PTR _aKey1$[ebp]
push	eax
call	_sqlite3GetVarint32
add	esp, 8
movzx	ecx, al
mov	DWORD PTR tv80[ebp], ecx
movzx	edx, BYTE PTR tv80[ebp]
add	edx, 1
mov	DWORD PTR _idx1$[ebp], edx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _aKey1$[ebp]
movzx	eax, BYTE PTR [edx+ecx]
mov	DWORD PTR _szHdr1$[ebp], eax
mov	ecx, DWORD PTR _s1$7[ebp]
push	ecx
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
add	eax, DWORD PTR _szHdr1$[ebp]
mov	DWORD PTR _d1$[ebp], eax
mov	DWORD PTR _i$[ebp], 1
mov	edx, DWORD PTR _pRhs$[ebp]
add	edx, 40					
mov	DWORD PTR _pRhs$[ebp], edx
jmp	SHORT $LN52@sqlite3Vdb
mov	eax, DWORD PTR _aKey1$[ebp]
movzx	ecx, BYTE PTR [eax]
cmp	ecx, 128				
jge	SHORT $LN58@sqlite3Vdb
mov	edx, DWORD PTR _aKey1$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _szHdr1$[ebp], eax
mov	DWORD PTR tv130[ebp], 1
jmp	SHORT $LN59@sqlite3Vdb
lea	ecx, DWORD PTR _szHdr1$[ebp]
push	ecx
mov	edx, DWORD PTR _aKey1$[ebp]
push	edx
call	_sqlite3GetVarint32
add	esp, 8
movzx	eax, al
mov	DWORD PTR tv130[ebp], eax
movzx	ecx, BYTE PTR tv130[ebp]
mov	DWORD PTR _idx1$[ebp], ecx
mov	edx, DWORD PTR _szHdr1$[ebp]
mov	DWORD PTR _d1$[ebp], edx
mov	eax, DWORD PTR _d1$[ebp]
cmp	eax, DWORD PTR _nKey1$[ebp]
jbe	SHORT $LN51@sqlite3Vdb
push	65169					
call	_sqlite3CorruptError
add	esp, 4
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	BYTE PTR [ecx+7], al
xor	eax, eax
jmp	$LN54@sqlite3Vdb
mov	DWORD PTR _i$[ebp], 0
mov	edx, DWORD PTR _pRhs$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 4
je	$LN47@sqlite3Vdb
mov	ecx, DWORD PTR _aKey1$[ebp]
add	ecx, DWORD PTR _idx1$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _serial_type$10[ebp], edx
cmp	DWORD PTR _serial_type$10[ebp], 12	
jb	SHORT $LN46@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN35@sqlite3Vdb
cmp	DWORD PTR _serial_type$10[ebp], 0
jne	SHORT $LN44@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], -1
jmp	$LN35@sqlite3Vdb
cmp	DWORD PTR _serial_type$10[ebp], 7
jne	SHORT $LN42@sqlite3Vdb
mov	eax, DWORD PTR _pRhs$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [eax+20]
call	__ltod3
movsd	QWORD PTR _rhs$2[ebp], xmm0
lea	ecx, DWORD PTR _mem1$[ebp]
push	ecx
mov	edx, DWORD PTR _serial_type$10[ebp]
push	edx
mov	eax, DWORD PTR _aKey1$[ebp]
add	eax, DWORD PTR _d1$[ebp]
push	eax
call	_sqlite3VdbeSerialGet
add	esp, 12					
movsd	xmm0, QWORD PTR _rhs$2[ebp]
comisd	xmm0, QWORD PTR _mem1$[ebp+8]
jbe	SHORT $LN41@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], -1
jmp	SHORT $LN39@sqlite3Vdb
movsd	xmm0, QWORD PTR _mem1$[ebp+8]
comisd	xmm0, QWORD PTR _rhs$2[ebp]
jbe	SHORT $LN39@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
jmp	SHORT $LN35@sqlite3Vdb
mov	ecx, DWORD PTR _aKey1$[ebp]
add	ecx, DWORD PTR _d1$[ebp]
push	ecx
mov	edx, DWORD PTR _serial_type$10[ebp]
push	edx
call	_vdbeRecordDecodeInt
add	esp, 8
mov	DWORD PTR _lhs$6[ebp], eax
mov	DWORD PTR _lhs$6[ebp+4], edx
mov	eax, DWORD PTR _pRhs$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _rhs$8[ebp], ecx
mov	edx, DWORD PTR [eax+20]
mov	DWORD PTR _rhs$8[ebp+4], edx
mov	eax, DWORD PTR _lhs$6[ebp+4]
cmp	eax, DWORD PTR _rhs$8[ebp+4]
jg	SHORT $LN37@sqlite3Vdb
jl	SHORT $LN70@sqlite3Vdb
mov	ecx, DWORD PTR _lhs$6[ebp]
cmp	ecx, DWORD PTR _rhs$8[ebp]
jae	SHORT $LN37@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], -1
jmp	SHORT $LN35@sqlite3Vdb
mov	edx, DWORD PTR _lhs$6[ebp+4]
cmp	edx, DWORD PTR _rhs$8[ebp+4]
jl	SHORT $LN35@sqlite3Vdb
jg	SHORT $LN71@sqlite3Vdb
mov	eax, DWORD PTR _lhs$6[ebp]
cmp	eax, DWORD PTR _rhs$8[ebp]
jbe	SHORT $LN35@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN4@sqlite3Vdb
mov	ecx, DWORD PTR _pRhs$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 8
je	$LN33@sqlite3Vdb
mov	eax, DWORD PTR _aKey1$[ebp]
add	eax, DWORD PTR _idx1$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _serial_type$10[ebp], ecx
cmp	DWORD PTR _serial_type$10[ebp], 12	
jb	SHORT $LN32@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN24@sqlite3Vdb
cmp	DWORD PTR _serial_type$10[ebp], 0
jne	SHORT $LN30@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], -1
jmp	SHORT $LN24@sqlite3Vdb
mov	edx, DWORD PTR _pRhs$[ebp]
movsd	xmm0, QWORD PTR [edx+8]
movsd	QWORD PTR _rhs$1[ebp], xmm0
lea	eax, DWORD PTR _mem1$[ebp]
push	eax
mov	ecx, DWORD PTR _serial_type$10[ebp]
push	ecx
mov	edx, DWORD PTR _aKey1$[ebp]
add	edx, DWORD PTR _d1$[ebp]
push	edx
call	_sqlite3VdbeSerialGet
add	esp, 12					
cmp	DWORD PTR _serial_type$10[ebp], 7
jne	SHORT $LN28@sqlite3Vdb
movsd	xmm0, QWORD PTR _mem1$[ebp+8]
movsd	QWORD PTR _lhs$5[ebp], xmm0
jmp	SHORT $LN27@sqlite3Vdb
mov	edx, DWORD PTR _mem1$[ebp+20]
mov	ecx, DWORD PTR _mem1$[ebp+16]
call	__ltod3
movsd	QWORD PTR _lhs$5[ebp], xmm0
movsd	xmm0, QWORD PTR _rhs$1[ebp]
comisd	xmm0, QWORD PTR _lhs$5[ebp]
jbe	SHORT $LN26@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], -1
jmp	SHORT $LN24@sqlite3Vdb
movsd	xmm0, QWORD PTR _lhs$5[ebp]
comisd	xmm0, QWORD PTR _rhs$1[ebp]
jbe	SHORT $LN24@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN4@sqlite3Vdb
mov	eax, DWORD PTR _pRhs$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 2
je	$LN22@sqlite3Vdb
mov	edx, DWORD PTR _aKey1$[ebp]
add	edx, DWORD PTR _idx1$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 128				
jge	SHORT $LN60@sqlite3Vdb
mov	ecx, DWORD PTR _aKey1$[ebp]
add	ecx, DWORD PTR _idx1$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _serial_type$10[ebp], edx
mov	DWORD PTR tv201[ebp], 1
jmp	SHORT $LN61@sqlite3Vdb
lea	eax, DWORD PTR _serial_type$10[ebp]
push	eax
mov	ecx, DWORD PTR _aKey1$[ebp]
add	ecx, DWORD PTR _idx1$[ebp]
push	ecx
call	_sqlite3GetVarint32
add	esp, 8
movzx	edx, al
mov	DWORD PTR tv201[ebp], edx
cmp	DWORD PTR _serial_type$10[ebp], 12	
jae	SHORT $LN21@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], -1
jmp	$LN13@sqlite3Vdb
mov	eax, DWORD PTR _serial_type$10[ebp]
and	eax, 1
jne	SHORT $LN19@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN13@sqlite3Vdb
mov	ecx, DWORD PTR _serial_type$10[ebp]
sub	ecx, 12					
shr	ecx, 1
mov	DWORD PTR _mem1$[ebp+24], ecx
mov	edx, DWORD PTR _d1$[ebp]
add	edx, DWORD PTR _mem1$[ebp+24]
cmp	edx, DWORD PTR _nKey1$[ebp]
jbe	SHORT $LN17@sqlite3Vdb
push	65248					
call	_sqlite3CorruptError
add	esp, 4
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	BYTE PTR [ecx+7], al
xor	eax, eax
jmp	$LN54@sqlite3Vdb
jmp	$LN13@sqlite3Vdb
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _pKeyInfo$[ebp]
cmp	DWORD PTR [eax+edx*4+20], 0
je	SHORT $LN15@sqlite3Vdb
mov	ecx, DWORD PTR _pKeyInfo$[ebp]
mov	dl, BYTE PTR [ecx+4]
mov	BYTE PTR _mem1$[ebp+30], dl
mov	eax, DWORD PTR _pKeyInfo$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _mem1$[ebp], ecx
mov	edx, 2
mov	WORD PTR _mem1$[ebp+28], dx
mov	eax, DWORD PTR _aKey1$[ebp]
add	eax, DWORD PTR _d1$[ebp]
mov	DWORD PTR _mem1$[ebp+4], eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _pKeyInfo$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+20]
push	eax
mov	ecx, DWORD PTR _pRhs$[ebp]
push	ecx
lea	edx, DWORD PTR _mem1$[ebp]
push	edx
call	_vdbeCompareMemString
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN13@sqlite3Vdb
mov	eax, DWORD PTR _pRhs$[ebp]
mov	ecx, DWORD PTR _mem1$[ebp+24]
cmp	ecx, DWORD PTR [eax+24]
jge	SHORT $LN62@sqlite3Vdb
mov	edx, DWORD PTR _mem1$[ebp+24]
mov	DWORD PTR tv264[ebp], edx
jmp	SHORT $LN63@sqlite3Vdb
mov	eax, DWORD PTR _pRhs$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR tv264[ebp], ecx
mov	edx, DWORD PTR tv264[ebp]
mov	DWORD PTR _nCmp$3[ebp], edx
mov	eax, DWORD PTR _nCmp$3[ebp]
push	eax
mov	ecx, DWORD PTR _pRhs$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _aKey1$[ebp]
add	eax, DWORD PTR _d1$[ebp]
push	eax
call	_memcmp
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN13@sqlite3Vdb
mov	ecx, DWORD PTR _pRhs$[ebp]
mov	edx, DWORD PTR _mem1$[ebp+24]
sub	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _rc$[ebp], edx
jmp	$LN4@sqlite3Vdb
mov	eax, DWORD PTR _pRhs$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 16					
je	$LN11@sqlite3Vdb
mov	edx, DWORD PTR _aKey1$[ebp]
add	edx, DWORD PTR _idx1$[ebp]
movzx	eax, BYTE PTR [edx]
cmp	eax, 128				
jge	SHORT $LN64@sqlite3Vdb
mov	ecx, DWORD PTR _aKey1$[ebp]
add	ecx, DWORD PTR _idx1$[ebp]
movzx	edx, BYTE PTR [ecx]
mov	DWORD PTR _serial_type$10[ebp], edx
mov	DWORD PTR tv292[ebp], 1
jmp	SHORT $LN65@sqlite3Vdb
lea	eax, DWORD PTR _serial_type$10[ebp]
push	eax
mov	ecx, DWORD PTR _aKey1$[ebp]
add	ecx, DWORD PTR _idx1$[ebp]
push	ecx
call	_sqlite3GetVarint32
add	esp, 8
movzx	edx, al
mov	DWORD PTR tv292[ebp], edx
cmp	DWORD PTR _serial_type$10[ebp], 12	
jb	SHORT $LN9@sqlite3Vdb
mov	eax, DWORD PTR _serial_type$10[ebp]
and	eax, 1
je	SHORT $LN10@sqlite3Vdb
mov	DWORD PTR _rc$[ebp], -1
jmp	$LN5@sqlite3Vdb
mov	ecx, DWORD PTR _serial_type$10[ebp]
sub	ecx, 12					
shr	ecx, 1
mov	DWORD PTR _nStr$9[ebp], ecx
mov	edx, DWORD PTR _d1$[ebp]
add	edx, DWORD PTR _nStr$9[ebp]
cmp	edx, DWORD PTR _nKey1$[ebp]
jbe	SHORT $LN7@sqlite3Vdb
push	65275					
call	_sqlite3CorruptError
add	esp, 4
mov	ecx, DWORD PTR _pPKey2$[ebp]
mov	BYTE PTR [ecx+7], al
xor	eax, eax
jmp	$LN54@sqlite3Vdb
jmp	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _pRhs$[ebp]
mov	eax, DWORD PTR _nStr$9[ebp]
cmp	eax, DWORD PTR [edx+24]
jge	SHORT $LN66@sqlite3Vdb
mov	ecx, DWORD PTR _nStr$9[ebp]
mov	DWORD PTR tv308[ebp], ecx
jmp	SHORT $LN67@sqlite3Vdb
mov	edx, DWORD PTR _pRhs$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR tv308[ebp], eax
mov	ecx, DWORD PTR tv308[ebp]
mov	DWORD PTR _nCmp$4[ebp], ecx
mov	edx, DWORD PTR _nCmp$4[ebp]
push	edx
mov	eax, DWORD PTR _pRhs$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _aKey1$[ebp]
add	edx, DWORD PTR _d1$[ebp]
push	edx
call	_memcmp
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _pRhs$[ebp]
mov	ecx, DWORD PTR _nStr$9[ebp]
sub	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _rc$[ebp], ecx
jmp	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _aKey1$[ebp]
add	edx, DWORD PTR _idx1$[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR _serial_type$10[ebp], eax
cmp	DWORD PTR _serial_type$10[ebp], 0
je	SHORT $LN68@sqlite3Vdb
mov	DWORD PTR tv323[ebp], 1
jmp	SHORT $LN69@sqlite3Vdb
mov	DWORD PTR tv323[ebp], 0
mov	ecx, DWORD PTR tv323[ebp]
mov	DWORD PTR _rc$[ebp], ecx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _pKeyInfo$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR _i$[ebp]
movzx	edx, BYTE PTR [eax+ecx]
test	edx, edx
je	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _rc$[ebp]
neg	eax
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN54@sqlite3Vdb
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _pRhs$[ebp]
add	edx, 40					
mov	DWORD PTR _pRhs$[ebp], edx
mov	eax, DWORD PTR _serial_type$10[ebp]
push	eax
call	_sqlite3VdbeSerialTypeLen
add	esp, 4
add	eax, DWORD PTR _d1$[ebp]
mov	DWORD PTR _d1$[ebp], eax
mov	ecx, DWORD PTR _serial_type$10[ebp]
xor	edx, edx
push	edx
push	ecx
call	_sqlite3VarintLen
add	esp, 8
add	eax, DWORD PTR _idx1$[ebp]
mov	DWORD PTR _idx1$[ebp], eax
mov	eax, DWORD PTR _idx1$[ebp]
cmp	eax, DWORD PTR _szHdr1$[ebp]
jae	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pPKey2$[ebp]
movzx	edx, WORD PTR [ecx+4]
cmp	DWORD PTR _i$[ebp], edx
jge	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _d1$[ebp]
cmp	eax, DWORD PTR _nKey1$[ebp]
jbe	$LN52@sqlite3Vdb
mov	ecx, DWORD PTR _pPKey2$[ebp]
movsx	eax, BYTE PTR [ecx+6]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeRecordUnpack PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pKey$[ebp]
mov	DWORD PTR _aKey$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _pMem$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+6], 0
mov	ecx, DWORD PTR _aKey$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 128				
jge	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _aKey$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _szHdr$[ebp], ecx
mov	DWORD PTR tv73[ebp], 1
jmp	SHORT $LN6@sqlite3Vdb
lea	edx, DWORD PTR _szHdr$[ebp]
push	edx
mov	eax, DWORD PTR _aKey$[ebp]
push	eax
call	_sqlite3GetVarint32
add	esp, 8
movzx	ecx, al
mov	DWORD PTR tv73[ebp], ecx
movzx	edx, BYTE PTR tv73[ebp]
mov	DWORD PTR _idx$[ebp], edx
mov	eax, DWORD PTR _szHdr$[ebp]
mov	DWORD PTR _d$[ebp], eax
xor	ecx, ecx
mov	WORD PTR _u$[ebp], cx
mov	edx, DWORD PTR _idx$[ebp]
cmp	edx, DWORD PTR _szHdr$[ebp]
jae	$LN1@sqlite3Vdb
movzx	eax, WORD PTR _u$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+4]
cmp	eax, edx
jge	$LN1@sqlite3Vdb
mov	eax, DWORD PTR _d$[ebp]
cmp	eax, DWORD PTR _nKey$[ebp]
jg	$LN1@sqlite3Vdb
mov	ecx, DWORD PTR _aKey$[ebp]
add	ecx, DWORD PTR _idx$[ebp]
movzx	edx, BYTE PTR [ecx]
cmp	edx, 128				
jge	SHORT $LN7@sqlite3Vdb
mov	eax, DWORD PTR _aKey$[ebp]
add	eax, DWORD PTR _idx$[ebp]
movzx	ecx, BYTE PTR [eax]
mov	DWORD PTR _serial_type$1[ebp], ecx
mov	DWORD PTR tv95[ebp], 1
jmp	SHORT $LN8@sqlite3Vdb
lea	edx, DWORD PTR _serial_type$1[ebp]
push	edx
mov	eax, DWORD PTR _aKey$[ebp]
add	eax, DWORD PTR _idx$[ebp]
push	eax
call	_sqlite3GetVarint32
add	esp, 8
movzx	ecx, al
mov	DWORD PTR tv95[ebp], ecx
movzx	edx, BYTE PTR tv95[ebp]
add	edx, DWORD PTR _idx$[ebp]
mov	DWORD PTR _idx$[ebp], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR _pKeyInfo$[ebp]
mov	dl, BYTE PTR [ecx+4]
mov	BYTE PTR [eax+30], dl
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR _pKeyInfo$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [eax+36], 0
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
mov	edx, DWORD PTR _serial_type$1[ebp]
push	edx
mov	eax, DWORD PTR _aKey$[ebp]
add	eax, DWORD PTR _d$[ebp]
push	eax
call	_sqlite3VdbeSerialGet
add	esp, 12					
add	eax, DWORD PTR _d$[ebp]
mov	DWORD PTR _d$[ebp], eax
mov	ecx, DWORD PTR _pMem$[ebp]
add	ecx, 40					
mov	DWORD PTR _pMem$[ebp], ecx
mov	dx, WORD PTR _u$[ebp]
add	dx, 1
mov	WORD PTR _u$[ebp], dx
jmp	$LN2@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	cx, WORD PTR _u$[ebp]
mov	WORD PTR [eax+4], cx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeExpandSql PROC
push	ebp
mov	ebp, esp
sub	esp, 220				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _idx$[ebp], 0
mov	DWORD PTR _nextIndex$[ebp], 1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, 4
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+eax+88]
push	edx
push	100					
lea	eax, DWORD PTR _zBase$[ebp]
push	eax
lea	ecx, DWORD PTR _out$[ebp]
push	ecx
call	_sqlite3StrAccumInit
add	esp, 16					
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR _out$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
cmp	DWORD PTR [eax+152], 1
jle	SHORT $LN28@sqlite3Vdb
mov	ecx, DWORD PTR _zRawSql$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN26@sqlite3Vdb
mov	eax, DWORD PTR _zRawSql$[ebp]
mov	DWORD PTR _zStart$4[ebp], eax
mov	ecx, DWORD PTR _zRawSql$[ebp]
movsx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv79[ebp], edx
mov	eax, DWORD PTR _zRawSql$[ebp]
add	eax, 1
mov	DWORD PTR _zRawSql$[ebp], eax
cmp	DWORD PTR tv79[ebp], 10			
je	SHORT $LN24@sqlite3Vdb
mov	ecx, DWORD PTR _zRawSql$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN24@sqlite3Vdb
jmp	SHORT $LN25@sqlite3Vdb
push	3
push	OFFSET $SG99740
lea	eax, DWORD PTR _out$[ebp]
push	eax
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	ecx, DWORD PTR _zRawSql$[ebp]
sub	ecx, DWORD PTR _zStart$4[ebp]
push	ecx
mov	edx, DWORD PTR _zStart$4[ebp]
push	edx
lea	eax, DWORD PTR _out$[ebp]
push	eax
call	_sqlite3StrAccumAppend
add	esp, 12					
jmp	SHORT $LN27@sqlite3Vdb
jmp	$LN21@sqlite3Vdb
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zRawSql$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	$LN21@sqlite3Vdb
lea	edx, DWORD PTR _nToken$[ebp]
push	edx
mov	eax, DWORD PTR _zRawSql$[ebp]
push	eax
call	_findNextHostParameter
add	esp, 8
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _zRawSql$[ebp]
push	edx
lea	eax, DWORD PTR _out$[ebp]
push	eax
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	ecx, DWORD PTR _zRawSql$[ebp]
add	ecx, DWORD PTR _n$[ebp]
mov	DWORD PTR _zRawSql$[ebp], ecx
cmp	DWORD PTR _nToken$[ebp], 0
jne	SHORT $LN20@sqlite3Vdb
jmp	$LN21@sqlite3Vdb
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zRawSql$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
cmp	edx, 63					
jne	SHORT $LN19@sqlite3Vdb
cmp	DWORD PTR _nToken$[ebp], 1
jle	SHORT $LN18@sqlite3Vdb
lea	eax, DWORD PTR _idx$[ebp]
push	eax
mov	ecx, 1
shl	ecx, 0
add	ecx, DWORD PTR _zRawSql$[ebp]
push	ecx
call	_sqlite3GetInt32
add	esp, 8
jmp	SHORT $LN17@sqlite3Vdb
mov	edx, DWORD PTR _nextIndex$[ebp]
mov	DWORD PTR _idx$[ebp], edx
jmp	SHORT $LN16@sqlite3Vdb
mov	eax, DWORD PTR _nToken$[ebp]
push	eax
mov	ecx, DWORD PTR _zRawSql$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeParameterIndex
add	esp, 12					
mov	DWORD PTR _idx$[ebp], eax
mov	eax, DWORD PTR _zRawSql$[ebp]
add	eax, DWORD PTR _nToken$[ebp]
mov	DWORD PTR _zRawSql$[ebp], eax
mov	ecx, DWORD PTR _idx$[ebp]
add	ecx, 1
mov	DWORD PTR _nextIndex$[ebp], ecx
mov	edx, DWORD PTR _idx$[ebp]
sub	edx, 1
imul	eax, edx, 40
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+60]
mov	DWORD PTR _pVar$[ebp], eax
mov	edx, DWORD PTR _pVar$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 1
je	SHORT $LN15@sqlite3Vdb
push	4
push	OFFSET $SG99759
lea	ecx, DWORD PTR _out$[ebp]
push	ecx
call	_sqlite3StrAccumAppend
add	esp, 12					
jmp	$LN4@sqlite3Vdb
mov	edx, DWORD PTR _pVar$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 4
je	SHORT $LN13@sqlite3Vdb
mov	ecx, DWORD PTR _pVar$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
mov	eax, DWORD PTR [ecx+16]
push	eax
push	OFFSET $SG99762
push	0
lea	ecx, DWORD PTR _out$[ebp]
push	ecx
call	_sqlite3XPrintf
add	esp, 20					
jmp	$LN4@sqlite3Vdb
mov	edx, DWORD PTR _pVar$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 8
je	SHORT $LN11@sqlite3Vdb
mov	ecx, DWORD PTR _pVar$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [ecx+8]
movsd	QWORD PTR [esp], xmm0
push	OFFSET $SG99765
push	0
lea	edx, DWORD PTR _out$[ebp]
push	edx
call	_sqlite3XPrintf
add	esp, 20					
jmp	$LN4@sqlite3Vdb
mov	eax, DWORD PTR _pVar$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 2
je	$LN9@sqlite3Vdb
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+12]
mov	cl, BYTE PTR [eax+77]
mov	BYTE PTR _enc$5[ebp], cl
movzx	edx, BYTE PTR _enc$5[ebp]
cmp	edx, 1
je	SHORT $LN8@sqlite3Vdb
push	40					
push	0
lea	eax, DWORD PTR _utf8$1[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR _utf8$1[ebp], ecx
push	0
movzx	edx, BYTE PTR _enc$5[ebp]
push	edx
mov	eax, DWORD PTR _pVar$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
mov	edx, DWORD PTR _pVar$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
lea	ecx, DWORD PTR _utf8$1[ebp]
push	ecx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
push	1
lea	edx, DWORD PTR _utf8$1[ebp]
push	edx
call	_sqlite3VdbeChangeEncoding
add	esp, 8
lea	eax, DWORD PTR _utf8$1[ebp]
mov	DWORD PTR _pVar$[ebp], eax
mov	ecx, DWORD PTR _pVar$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _nOut$2[ebp], edx
mov	eax, DWORD PTR _pVar$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _nOut$2[ebp]
push	edx
push	OFFSET $SG99773
push	0
lea	eax, DWORD PTR _out$[ebp]
push	eax
call	_sqlite3XPrintf
add	esp, 20					
movzx	ecx, BYTE PTR _enc$5[ebp]
cmp	ecx, 1
je	SHORT $LN7@sqlite3Vdb
lea	edx, DWORD PTR _utf8$1[ebp]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
jmp	$LN4@sqlite3Vdb
mov	eax, DWORD PTR _pVar$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 16384				
je	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _pVar$[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
push	OFFSET $SG99777
push	0
lea	ecx, DWORD PTR _out$[ebp]
push	ecx
call	_sqlite3XPrintf
add	esp, 16					
jmp	$LN4@sqlite3Vdb
push	2
push	OFFSET $SG99781
lea	edx, DWORD PTR _out$[ebp]
push	edx
call	_sqlite3StrAccumAppend
add	esp, 12					
mov	eax, DWORD PTR _pVar$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _nOut$3[ebp], ecx
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _i$[ebp]
cmp	eax, DWORD PTR _nOut$3[ebp]
jge	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pVar$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _i$[ebp]
movsx	ecx, BYTE PTR [edx+eax]
and	ecx, 255				
push	ecx
push	OFFSET $SG99785
push	0
lea	edx, DWORD PTR _out$[ebp]
push	edx
call	_sqlite3XPrintf
add	esp, 16					
jmp	SHORT $LN2@sqlite3Vdb
push	1
push	OFFSET $SG99786
lea	eax, DWORD PTR _out$[ebp]
push	eax
call	_sqlite3StrAccumAppend
add	esp, 12					
jmp	$LN28@sqlite3Vdb
lea	ecx, DWORD PTR _out$[ebp]
push	ecx
call	_sqlite3StrAccumFinish
add	esp, 4
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSetVarmask PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _iVar$[ebp], 32		
jle	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _v$[ebp]
mov	DWORD PTR [eax+188], -1
jmp	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _iVar$[ebp]
sub	ecx, 1
mov	edx, 1
shl	edx, cl
mov	eax, DWORD PTR _v$[ebp]
or	edx, DWORD PTR [eax+188]
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx+188], edx
pop	ebp
ret	0
ENDP
_sqlite3VdbeGetBoundValue PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _iVar$[ebp]
sub	eax, 1
imul	ecx, eax, 40
mov	edx, DWORD PTR _v$[ebp]
add	ecx, DWORD PTR [edx+60]
mov	DWORD PTR _pMem$1[ebp], ecx
mov	eax, DWORD PTR _pMem$1[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 1
jne	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3ValueNew
add	esp, 4
mov	DWORD PTR _pRet$2[ebp], eax
cmp	DWORD PTR _pRet$2[ebp], 0
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _pMem$1[ebp]
push	ecx
mov	edx, DWORD PTR _pRet$2[ebp]
push	edx
call	_sqlite3VdbeMemCopy
add	esp, 8
push	1
movzx	eax, BYTE PTR _aff$[ebp]
push	eax
mov	ecx, DWORD PTR _pRet$2[ebp]
push	ecx
call	_sqlite3ValueApplyAffinity
add	esp, 12					
mov	eax, DWORD PTR _pRet$2[ebp]
jmp	SHORT $LN4@sqlite3Vdb
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeTakeOpArray PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _aOp$[ebp], ecx
mov	edx, DWORD PTR _pnMaxArg$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_resolveP2Values
add	esp, 8
mov	ecx, DWORD PTR _pnOp$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], 0
mov	eax, DWORD PTR _aOp$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSwap PROC
push	ebp
mov	ebp, esp
sub	esp, 220				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
push	esi
push	edi
mov	ecx, 52					
mov	esi, DWORD PTR _pA$[ebp]
lea	edi, DWORD PTR _tmp$[ebp]
rep movsd
mov	ecx, 52					
mov	esi, DWORD PTR _pB$[ebp]
mov	edi, DWORD PTR _pA$[ebp]
rep movsd
mov	ecx, 52					
lea	esi, DWORD PTR _tmp$[ebp]
mov	edi, DWORD PTR _pB$[ebp]
rep movsd
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pTmp$[ebp], ecx
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR [edx+52], ecx
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR _pTmp$[ebp]
mov	DWORD PTR [edx+52], eax
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _pTmp$[ebp], edx
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR _pB$[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR [eax+48], edx
mov	eax, DWORD PTR _pB$[ebp]
mov	ecx, DWORD PTR _pTmp$[ebp]
mov	DWORD PTR [eax+48], ecx
mov	edx, DWORD PTR _pA$[ebp]
mov	eax, DWORD PTR [edx+168]
mov	DWORD PTR _zTmp$[ebp], eax
mov	ecx, DWORD PTR _pA$[ebp]
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [edx+168]
mov	DWORD PTR [ecx+168], eax
mov	ecx, DWORD PTR _pB$[ebp]
mov	edx, DWORD PTR _zTmp$[ebp]
mov	DWORD PTR [ecx+168], edx
mov	eax, DWORD PTR _pA$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 10					
and	ecx, 1
and	ecx, 1
shl	ecx, 10					
mov	edx, DWORD PTR _pB$[ebp]
mov	eax, DWORD PTR [edx+88]
and	eax, -1025				
or	eax, ecx
mov	ecx, DWORD PTR _pB$[ebp]
mov	DWORD PTR [ecx+88], eax
pop	edi
pop	esi
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSetSql PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN1@sqlite3Vdb
jmp	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbStrNDup
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+168], eax
movzx	edx, BYTE PTR _isPrepareV2$[ebp]
and	edx, 1
shl	edx, 10					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, -1025				
or	ecx, edx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
pop	ebp
ret	0
ENDP
_sqlite3VdbeDb PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [eax]
pop	ebp
ret	0
ENDP
_sqlite3VdbeCountChanges PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 16					
mov	edx, DWORD PTR _v$[ebp]
mov	DWORD PTR [edx+88], ecx
pop	ebp
ret	0
ENDP
_sqlite3VdbeSetColName PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN1@sqlite3Vdb
mov	eax, 7
jmp	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, WORD PTR [eax+84]
imul	ecx, DWORD PTR _var$[ebp]
add	ecx, DWORD PTR _idx$[ebp]
imul	edx, ecx, 40
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+16]
mov	DWORD PTR _pColName$[ebp], edx
mov	ecx, DWORD PTR _xDel$[ebp]
push	ecx
push	1
push	-1
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _pColName$[ebp]
push	eax
call	_sqlite3VdbeMemSetStr
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeSetNumCols PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, WORD PTR [edx+84]
shl	eax, 1
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
call	_releaseMemArray
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _nResColumn$[ebp]
shl	eax, 1
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	dx, WORD PTR _nResColumn$[ebp]
mov	WORD PTR [ecx+84], dx
imul	eax, DWORD PTR _n$[ebp], 40
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pColName$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pColName$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+16], 0
jne	SHORT $LN2@sqlite3Vdb
jmp	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _n$[ebp]
mov	DWORD PTR tv85[ebp], edx
mov	eax, DWORD PTR _n$[ebp]
sub	eax, 1
mov	DWORD PTR _n$[ebp], eax
cmp	DWORD PTR tv85[ebp], 0
jle	SHORT $LN4@sqlite3Vdb
mov	ecx, 1
mov	edx, DWORD PTR _pColName$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pColName$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pColName$[ebp]
add	eax, 40					
mov	DWORD PTR _pColName$[ebp], eax
jmp	SHORT $LN2@sqlite3Vdb
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeReset PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeHalt
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+76], 0
jl	SHORT $LN4@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeTransferError
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+44], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 6
and	ecx, 1
je	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
or	eax, 32					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
jmp	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+80], 0
je	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 5
and	ecx, 1
je	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+44], 0
je	SHORT $LN7@sqlite3Vdb
mov	DWORD PTR tv90[ebp], OFFSET $SG98285
jmp	SHORT $LN8@sqlite3Vdb
mov	DWORD PTR tv90[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR tv90[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+80]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+44], 0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_Cleanup
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+136], 0
mov	DWORD PTR [edx+140], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+40], 649915045		
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [ecx+80]
and	eax, DWORD PTR [edx+56]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeRewind PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+40], -1108210269		
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+76], -1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+80], 0
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+86], 2
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+40], -1108210269		
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+92], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+72], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+87], 255			
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+104], 0
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+144], 0
mov	DWORD PTR [eax+148], 0
pop	ebp
ret	0
ENDP
_sqlite3VdbeResetStepResult PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+80], 0
pop	ebp
ret	0
ENDP
_sqlite3VdbeCurrentAddr PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+32]
pop	ebp
ret	0
ENDP
_sqlite3VdbeResolveLabel PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _p$[ebp], ecx
or	edx, -1
sub	edx, DWORD PTR _x$[ebp]
mov	DWORD PTR _j$[ebp], edx
js	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+112], 0
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+112]
mov	eax, DWORD PTR _j$[ebp]
mov	ecx, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [ecx+32]
mov	DWORD PTR [edx+eax*4], ecx
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [edx+32]
sub	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeFinalize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+40], -1108210269		
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+40], 1369188723		
jne	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeReset
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeDelete
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeMakeReady PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+440]
mov	DWORD PTR _nVar$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _nMem$[ebp], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	DWORD PTR _nCursor$[ebp], ecx
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+392]
mov	DWORD PTR _nArg$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+80]
mov	DWORD PTR _nOnce$[ebp], edx
cmp	DWORD PTR _nOnce$[ebp], 0
jne	SHORT $LN16@sqlite3Vdb
mov	DWORD PTR _nOnce$[ebp], 1
mov	eax, DWORD PTR _nMem$[ebp]
add	eax, DWORD PTR _nCursor$[ebp]
mov	DWORD PTR _nMem$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
imul	edx, DWORD PTR [ecx+32], 20
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _zCsr$[ebp], edx
mov	ecx, DWORD PTR _pParse$[ebp]
imul	edx, DWORD PTR [ecx+84], 20
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _zEnd$[ebp], edx
lea	ecx, DWORD PTR _nArg$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_resolveP2Values
add	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
movzx	ecx, BYTE PTR [eax+20]
test	ecx, ecx
je	SHORT $LN19@sqlite3Vdb
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+21]
test	eax, eax
je	SHORT $LN19@sqlite3Vdb
mov	BYTE PTR tv89[ebp], 1
jmp	SHORT $LN20@sqlite3Vdb
mov	BYTE PTR tv89[ebp], 0
movzx	ecx, BYTE PTR tv89[ebp]
and	ecx, 1
shl	ecx, 7
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+88]
and	eax, -129				
or	eax, ecx
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+88], eax
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+450]
test	eax, eax
je	SHORT $LN15@sqlite3Vdb
cmp	DWORD PTR _nMem$[ebp], 10		
jge	SHORT $LN15@sqlite3Vdb
mov	DWORD PTR _nMem$[ebp], 10		
mov	ecx, DWORD PTR _zEnd$[ebp]
sub	ecx, DWORD PTR _zCsr$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _zCsr$[ebp]
push	edx
call	_memset
add	esp, 12					
mov	eax, DWORD PTR _zCsr$[ebp]
and	eax, 7
add	eax, DWORD PTR _zCsr$[ebp]
mov	DWORD PTR _zCsr$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, -33				
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+88], edx
mov	DWORD PTR _nByte$[ebp], 0
lea	ecx, DWORD PTR _nByte$[ebp]
push	ecx
mov	edx, DWORD PTR _zEnd$[ebp]
push	edx
lea	eax, DWORD PTR _zCsr$[ebp]
push	eax
imul	ecx, DWORD PTR _nMem$[ebp], 40
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
call	_allocSpace
add	esp, 20					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+8], eax
lea	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _zEnd$[ebp]
push	eax
lea	ecx, DWORD PTR _zCsr$[ebp]
push	ecx
imul	edx, DWORD PTR _nVar$[ebp], 40
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
push	ecx
call	_allocSpace
add	esp, 20					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+60], eax
lea	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _zEnd$[ebp]
push	ecx
lea	edx, DWORD PTR _zCsr$[ebp]
push	edx
mov	eax, DWORD PTR _nArg$[ebp]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_allocSpace
add	esp, 20					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], eax
lea	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _zEnd$[ebp]
push	eax
lea	ecx, DWORD PTR _zCsr$[ebp]
push	ecx
mov	edx, DWORD PTR _nVar$[ebp]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_allocSpace
add	esp, 20					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+64], eax
lea	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _zEnd$[ebp]
push	ecx
lea	edx, DWORD PTR _zCsr$[ebp]
push	edx
mov	eax, DWORD PTR _nCursor$[ebp]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+56]
push	edx
call	_allocSpace
add	esp, 20					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+56], eax
lea	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _zEnd$[ebp]
push	eax
lea	ecx, DWORD PTR _zCsr$[ebp]
push	ecx
mov	edx, DWORD PTR _nOnce$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+200]
push	ecx
call	_allocSpace
add	esp, 20					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+200], eax
cmp	DWORD PTR _nByte$[ebp], 0
je	SHORT $LN11@sqlite3Vdb
mov	eax, DWORD PTR _nByte$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+172], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+172]
mov	DWORD PTR _zCsr$[ebp], ecx
mov	edx, DWORD PTR _zCsr$[ebp]
add	edx, DWORD PTR _nByte$[ebp]
mov	DWORD PTR _zEnd$[ebp], edx
cmp	DWORD PTR _nByte$[ebp], 0
je	SHORT $LN12@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	$LN14@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _nCursor$[ebp]
mov	DWORD PTR [edx+36], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _nOnce$[ebp]
mov	DWORD PTR [ecx+196], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+60], 0
je	SHORT $LN9@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	dx, WORD PTR _nVar$[ebp]
mov	WORD PTR [ecx+68], dx
mov	DWORD PTR _n$[ebp], 0
jmp	SHORT $LN8@sqlite3Vdb
mov	eax, DWORD PTR _n$[ebp]
add	eax, 1
mov	DWORD PTR _n$[ebp], eax
mov	ecx, DWORD PTR _n$[ebp]
cmp	ecx, DWORD PTR _nVar$[ebp]
jge	SHORT $LN9@sqlite3Vdb
imul	edx, DWORD PTR _n$[ebp], 40
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+60]
mov	eax, 1
mov	WORD PTR [ecx+edx+28], ax
imul	ecx, DWORD PTR _n$[ebp], 40
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+60]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+ecx], edx
jmp	SHORT $LN7@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+64], 0
je	SHORT $LN5@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	ax, WORD PTR [edx+444]
mov	WORD PTR [ecx+70], ax
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+70]
shl	edx, 2
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+472]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+64]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+444]
shl	edx, 2
push	edx
push	0
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+472]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+8]
sub	ecx, 40					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+8], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _nMem$[ebp]
mov	DWORD PTR [eax+28], ecx
mov	DWORD PTR _n$[ebp], 1
jmp	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _n$[ebp]
add	edx, 1
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _n$[ebp]
cmp	eax, DWORD PTR _nMem$[ebp]
jg	SHORT $LN4@sqlite3Vdb
imul	ecx, DWORD PTR _n$[ebp], 40
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
mov	edx, 128				
mov	WORD PTR [eax+ecx+28], dx
imul	eax, DWORD PTR _n$[ebp], 40
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+eax], ecx
jmp	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _pParse$[ebp]
movzx	eax, BYTE PTR [edx+450]
and	eax, 3
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
and	edx, -4					
or	edx, eax
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+88], edx
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeRewind
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeClearObject PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+60]
push	eax
call	_releaseMemArray
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+84]
shl	edx, 1
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
call	_releaseMemArray
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+192]
mov	DWORD PTR _pSub$[ebp], eax
jmp	SHORT $LN6@sqlite3Vdb
mov	ecx, DWORD PTR _pNext$[ebp]
mov	DWORD PTR _pSub$[ebp], ecx
cmp	DWORD PTR _pSub$[ebp], 0
je	SHORT $LN4@sqlite3Vdb
mov	edx, DWORD PTR _pSub$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _pNext$[ebp], eax
mov	ecx, DWORD PTR _pSub$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pSub$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeFreeOpArray
add	esp, 12					
mov	eax, DWORD PTR _pSub$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+70]
sub	eax, 1
mov	DWORD PTR _i$[ebp], eax
jmp	SHORT $LN3@sqlite3Vdb
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN1@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+64]
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR [eax+ecx*4]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_vdbeFreeOpArray
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+168]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+172]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeDelete PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN4@sqlite3Vdb
jmp	SHORT $LN5@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VdbeClearObject
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+48], 0
je	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+48]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR [eax+52], edx
jmp	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR [eax+4], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR [edx+48], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+40], -1241070648		
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeRunOnlyOnce PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 64					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
pop	ebp
ret	0
ENDP
_sqlite3VdbeMakeLabel PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+108]
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+108]
add	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+108], edx
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
and	ecx, DWORD PTR _i$[ebp]
jne	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 1
lea	eax, DWORD PTR [edx*4+4]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+112]
push	edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3DbReallocOrFree
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+112], eax
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+112], 0
je	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+112]
mov	eax, DWORD PTR _i$[ebp]
mov	DWORD PTR [edx+eax*4], -1
or	eax, -1
sub	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeGetOp PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _addr$[ebp], 0
jge	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
sub	ecx, 1
mov	DWORD PTR _addr$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN2@sqlite3Vdb
mov	eax, OFFSET ?dummy@?1??sqlite3VdbeGetOp@@9@9
jmp	SHORT $LN4@sqlite3Vdb
jmp	SHORT $LN4@sqlite3Vdb
imul	eax, DWORD PTR _addr$[ebp], 20
mov	edx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [edx+4]
pop	ebp
ret	0
ENDP
_sqlite3VdbeUsesBtree PROC
push	ebp
mov	ebp, esp
mov	eax, 1
mov	ecx, DWORD PTR _i$[ebp]
shl	eax, cl
mov	ecx, DWORD PTR _p$[ebp]
or	eax, DWORD PTR [ecx+96]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+96], eax
cmp	DWORD PTR _i$[ebp], 1
je	SHORT $LN2@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _i$[ebp]
shl	edx, 4
mov	eax, DWORD PTR [ecx+16]
mov	ecx, DWORD PTR [eax+edx+4]
push	ecx
call	_sqlite3BtreeSharable
add	esp, 4
test	eax, eax
je	SHORT $LN2@sqlite3Vdb
mov	edx, 1
mov	ecx, DWORD PTR _i$[ebp]
shl	edx, cl
mov	eax, DWORD PTR _p$[ebp]
or	edx, DWORD PTR [eax+100]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+100], edx
pop	ebp
ret	0
ENDP
_sqlite3VdbeSetP4KeyInfo PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _v$[ebp], ecx
push	-6					
mov	edx, DWORD PTR _pIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3KeyInfoOfIndex
add	esp, 8
push	eax
push	-1
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeChangeP4 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN14@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN15@sqlite3Vdb
cmp	DWORD PTR _n$[ebp], -10			
je	SHORT $LN13@sqlite3Vdb
mov	edx, DWORD PTR _zP4$[ebp]
push	edx
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_freeP4
add	esp, 12					
jmp	$LN16@sqlite3Vdb
cmp	DWORD PTR _addr$[ebp], 0
jge	SHORT $LN12@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
sub	eax, 1
mov	DWORD PTR _addr$[ebp], eax
imul	ecx, DWORD PTR _addr$[ebp], 20
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pOp$[ebp], ecx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR [eax+16]
push	ecx
mov	edx, DWORD PTR _pOp$[ebp]
movsx	eax, BYTE PTR [edx+1]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_freeP4
add	esp, 12					
mov	edx, DWORD PTR _pOp$[ebp]
mov	DWORD PTR [edx+16], 0
cmp	DWORD PTR _n$[ebp], -14			
jne	SHORT $LN11@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR _zP4$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [edx+1], -14			
jmp	$LN16@sqlite3Vdb
cmp	DWORD PTR _zP4$[ebp], 0
jne	SHORT $LN9@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	DWORD PTR [eax+16], 0
mov	ecx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [ecx+1], 0
jmp	$LN16@sqlite3Vdb
cmp	DWORD PTR _n$[ebp], -6			
jne	SHORT $LN7@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR _zP4$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [ecx+1], -6			
jmp	SHORT $LN16@sqlite3Vdb
cmp	DWORD PTR _n$[ebp], -10			
jne	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR _zP4$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [ecx+1], -10			
mov	edx, DWORD PTR _zP4$[ebp]
push	edx
call	_sqlite3VtabLock
add	esp, 4
jmp	SHORT $LN16@sqlite3Vdb
cmp	DWORD PTR _n$[ebp], 0
jge	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR _zP4$[ebp]
mov	DWORD PTR [eax+16], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	al, BYTE PTR _n$[ebp]
mov	BYTE PTR [edx+1], al
jmp	SHORT $LN16@sqlite3Vdb
cmp	DWORD PTR _n$[ebp], 0
jne	SHORT $LN1@sqlite3Vdb
mov	ecx, DWORD PTR _zP4$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _zP4$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbStrNDup
add	esp, 12					
mov	ecx, DWORD PTR _pOp$[ebp]
mov	DWORD PTR [ecx+16], eax
mov	edx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [edx+1], -1
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeDeletePriorOpcode PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
sub	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
cmp	ecx, DWORD PTR [eax+88]
jle	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
sub	edx, 1
imul	eax, edx, 20
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+eax]
movzx	ecx, BYTE PTR _op$[ebp]
cmp	eax, ecx
jne	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
sub	eax, 1
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeChangeToNoop
add	esp, 8
mov	eax, 1
jmp	SHORT $LN3@sqlite3Vdb
jmp	SHORT $LN3@sqlite3Vdb
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeChangeToNoop PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN3@sqlite3Vdb
imul	ecx, DWORD PTR _addr$[ebp], 20
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+4]
mov	DWORD PTR _pOp$2[ebp], ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$1[ebp], ecx
mov	edx, DWORD PTR _pOp$2[ebp]
mov	eax, DWORD PTR [edx+16]
push	eax
mov	ecx, DWORD PTR _pOp$2[ebp]
movsx	edx, BYTE PTR [ecx+1]
push	edx
mov	eax, DWORD PTR _db$1[ebp]
push	eax
call	_freeP4
add	esp, 12					
push	20					
push	0
mov	ecx, DWORD PTR _pOp$2[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pOp$2[ebp]
mov	BYTE PTR [edx], 156			
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
sub	ecx, 1
cmp	DWORD PTR _addr$[ebp], ecx
jne	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
sub	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+32], eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeJumpHere PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
push	ecx
mov	edx, DWORD PTR _addr$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeChangeP2
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
sub	edx, 1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR [ecx+88], edx
pop	ebp
ret	0
ENDP
_sqlite3VdbeChangeP5 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN2@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+32]
sub	edx, 1
imul	eax, edx, 20
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	cl, BYTE PTR _val$[ebp]
mov	BYTE PTR [edx+eax+3], cl
pop	ebp
ret	0
ENDP
_sqlite3VdbeChangeP3 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
cmp	ecx, DWORD PTR _addr$[ebp]
jbe	SHORT $LN2@sqlite3Vdb
imul	edx, DWORD PTR _addr$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _val$[ebp]
mov	DWORD PTR [ecx+edx+12], eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeChangeP2 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
cmp	ecx, DWORD PTR _addr$[ebp]
jbe	SHORT $LN2@sqlite3Vdb
imul	edx, DWORD PTR _addr$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _val$[ebp]
mov	DWORD PTR [ecx+edx+8], eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeChangeP1 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
cmp	ecx, DWORD PTR _addr$[ebp]
jbe	SHORT $LN2@sqlite3Vdb
imul	edx, DWORD PTR _addr$[ebp], 20
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _val$[ebp]
mov	DWORD PTR [ecx+edx+4], eax
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddParseSchemaOp PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	0
push	0
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
push	119					
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _addr$[ebp], eax
push	-1
mov	edx, DWORD PTR _zWhere$[ebp]
push	edx
mov	eax, DWORD PTR _addr$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	DWORD PTR _j$[ebp], 0
jmp	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _j$[ebp]
add	edx, 1
mov	DWORD PTR _j$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR _j$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN4@sqlite3Vdb
mov	eax, DWORD PTR _j$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeUsesBtree
add	esp, 8
jmp	SHORT $LN2@sqlite3Vdb
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddOpList PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
add	ecx, DWORD PTR _nOp$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
cmp	ecx, DWORD PTR [eax+84]
jle	SHORT $LN7@sqlite3Vdb
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_growOpArray
add	esp, 4
test	eax, eax
je	SHORT $LN7@sqlite3Vdb
xor	eax, eax
jmp	$LN8@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
mov	DWORD PTR _addr$[ebp], eax
cmp	DWORD PTR _nOp$[ebp], 0
jle	$LN6@sqlite3Vdb
mov	ecx, DWORD PTR _aOp$[ebp]
mov	DWORD PTR _pIn$3[ebp], ecx
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN5@sqlite3Vdb
mov	edx, DWORD PTR _i$2[ebp]
add	edx, 1
mov	DWORD PTR _i$2[ebp], edx
mov	eax, DWORD PTR _pIn$3[ebp]
add	eax, 4
mov	DWORD PTR _pIn$3[ebp], eax
mov	ecx, DWORD PTR _i$2[ebp]
cmp	ecx, DWORD PTR _nOp$[ebp]
jge	SHORT $LN3@sqlite3Vdb
mov	edx, DWORD PTR _pIn$3[ebp]
movsx	eax, BYTE PTR [edx+2]
mov	DWORD PTR _p2$1[ebp], eax
mov	ecx, DWORD PTR _i$2[ebp]
add	ecx, DWORD PTR _addr$[ebp]
imul	edx, ecx, 20
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+4]
mov	DWORD PTR _pOut$4[ebp], edx
mov	ecx, DWORD PTR _pOut$4[ebp]
mov	edx, DWORD PTR _pIn$3[ebp]
mov	al, BYTE PTR [edx]
mov	BYTE PTR [ecx], al
mov	ecx, DWORD PTR _pIn$3[ebp]
movsx	edx, BYTE PTR [ecx+1]
mov	eax, DWORD PTR _pOut$4[ebp]
mov	DWORD PTR [eax+4], edx
cmp	DWORD PTR _p2$1[ebp], 0
jge	SHORT $LN2@sqlite3Vdb
or	ecx, -1
sub	ecx, DWORD PTR _p2$1[ebp]
add	ecx, DWORD PTR _addr$[ebp]
mov	edx, DWORD PTR _pOut$4[ebp]
mov	DWORD PTR [edx+8], ecx
jmp	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _pOut$4[ebp]
mov	ecx, DWORD PTR _p2$1[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _pIn$3[ebp]
movsx	eax, BYTE PTR [edx+3]
mov	ecx, DWORD PTR _pOut$4[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _pOut$4[ebp]
mov	BYTE PTR [edx+1], 0
mov	eax, DWORD PTR _pOut$4[ebp]
mov	DWORD PTR [eax+16], 0
mov	ecx, DWORD PTR _pOut$4[ebp]
mov	BYTE PTR [ecx+3], 0
jmp	$LN4@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+32]
add	eax, DWORD PTR _nOp$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+32], eax
mov	eax, DWORD PTR _addr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddOp4Int PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p3$[ebp]
push	eax
mov	ecx, DWORD PTR _p2$[ebp]
push	ecx
mov	edx, DWORD PTR _p1$[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _addr$[ebp], eax
push	-14					
mov	edx, DWORD PTR _p4$[ebp]
push	edx
mov	eax, DWORD PTR _addr$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	eax, DWORD PTR _addr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddOp4 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p3$[ebp]
push	eax
mov	ecx, DWORD PTR _p2$[ebp]
push	ecx
mov	edx, DWORD PTR _p1$[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
mov	DWORD PTR _addr$[ebp], eax
mov	edx, DWORD PTR _p4type$[ebp]
push	edx
mov	eax, DWORD PTR _zP4$[ebp]
push	eax
mov	ecx, DWORD PTR _addr$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	eax, DWORD PTR _addr$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddOp3 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR [eax+84]
cmp	ecx, DWORD PTR _i$[ebp]
jg	SHORT $LN2@sqlite3Vdb
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_growOpArray
add	esp, 4
test	eax, eax
je	SHORT $LN2@sqlite3Vdb
mov	eax, 1
jmp	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+32]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+32], ecx
imul	eax, DWORD PTR _i$[ebp], 20
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+4]
mov	DWORD PTR _pOp$[ebp], eax
mov	edx, DWORD PTR _pOp$[ebp]
mov	al, BYTE PTR _op$[ebp]
mov	BYTE PTR [edx], al
mov	ecx, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [ecx+3], 0
mov	edx, DWORD PTR _pOp$[ebp]
mov	eax, DWORD PTR _p1$[ebp]
mov	DWORD PTR [edx+4], eax
mov	ecx, DWORD PTR _pOp$[ebp]
mov	edx, DWORD PTR _p2$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pOp$[ebp]
mov	ecx, DWORD PTR _p3$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _pOp$[ebp]
mov	DWORD PTR [edx+16], 0
mov	eax, DWORD PTR _pOp$[ebp]
mov	BYTE PTR [eax+1], 0
mov	eax, DWORD PTR _i$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddOp2 PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _p2$[ebp]
push	eax
mov	ecx, DWORD PTR _p1$[ebp]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeAddOp3
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddOp1 PROC
push	ebp
mov	ebp, esp
push	0
push	0
mov	eax, DWORD PTR _p1$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3VdbeAddOp3
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3VdbeAddOp0 PROC
push	ebp
mov	ebp, esp
push	0
push	0
push	0
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3VdbeAddOp3
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3VdbeCreate PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _db$[ebp], ecx
push	208					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN2@sqlite3Vdb
xor	eax, eax
jmp	SHORT $LN3@sqlite3Vdb
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN1@sqlite3Vdb
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+48], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [eax+52], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+48], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+40], 649915045		
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+24], edx
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeLeaveAll PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN5@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
jmp	SHORT $LN3@sqlite3Btr
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeLeaveCursor PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3BtreeEnterCursor PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3BtreeLeave PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
je	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
sub	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+12], 0
jne	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_unlockBtreeMutex
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3BtreeSharable PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [eax+9]
pop	ebp
ret	0
ENDP
_sqlite3BtreeEnterAll PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN5@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
jmp	SHORT $LN3@sqlite3Btr
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeEnter PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
jne	SHORT $LN11@sqlite3Btr
jmp	$LN12@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+12]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+12], eax
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+10]
test	eax, eax
je	SHORT $LN10@sqlite3Btr
jmp	$LN12@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+56]
push	eax
call	_sqlite3_mutex_try
add	esp, 4
test	eax, eax
jne	SHORT $LN9@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR [edx+4], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+10], 1
jmp	SHORT $LN12@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pLater$[ebp], ecx
jmp	SHORT $LN8@sqlite3Btr
mov	edx, DWORD PTR _pLater$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pLater$[ebp], eax
cmp	DWORD PTR _pLater$[ebp], 0
je	SHORT $LN6@sqlite3Btr
mov	ecx, DWORD PTR _pLater$[ebp]
movzx	edx, BYTE PTR [ecx+10]
test	edx, edx
je	SHORT $LN5@sqlite3Btr
mov	eax, DWORD PTR _pLater$[ebp]
push	eax
call	_unlockBtreeMutex
add	esp, 4
jmp	SHORT $LN7@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_lockBtreeMutex
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pLater$[ebp], eax
jmp	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _pLater$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _pLater$[ebp], edx
cmp	DWORD PTR _pLater$[ebp], 0
je	SHORT $LN12@sqlite3Btr
mov	eax, DWORD PTR _pLater$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _pLater$[ebp]
push	ecx
call	_lockBtreeMutex
add	esp, 4
jmp	SHORT $LN3@sqlite3Btr
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCheckpoint PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$1[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$1[ebp]
movzx	ecx, BYTE PTR [eax+20]
test	ecx, ecx
je	SHORT $LN2@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 6
jmp	SHORT $LN1@sqlite3Btr
mov	edx, DWORD PTR _pnCkpt$[ebp]
push	edx
mov	eax, DWORD PTR _pnLog$[ebp]
push	eax
mov	ecx, DWORD PTR _eMode$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$1[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3PagerCheckpoint
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCount PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
push	esi
xorpd	xmm0, xmm0
movlpd	QWORD PTR _nEntry$[ebp], xmm0
mov	eax, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [eax+68], 0
jne	SHORT $LN12@sqlite3Btr
mov	ecx, DWORD PTR _pnEntry$[ebp]
mov	DWORD PTR [ecx], 0
mov	DWORD PTR [ecx+4], 0
xor	eax, eax
jmp	$LN13@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_moveToRoot
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN10@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$2[ebp], eax
mov	ecx, DWORD PTR _pPage$2[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	SHORT $LN8@sqlite3Btr
mov	eax, DWORD PTR _pPage$2[ebp]
movzx	ecx, BYTE PTR [eax+2]
test	ecx, ecx
jne	SHORT $LN9@sqlite3Btr
mov	edx, DWORD PTR _pPage$2[ebp]
movzx	eax, WORD PTR [edx+16]
cdq
add	eax, DWORD PTR _nEntry$[ebp]
adc	edx, DWORD PTR _nEntry$[ebp+4]
mov	DWORD PTR _nEntry$[ebp], eax
mov	DWORD PTR _nEntry$[ebp+4], edx
mov	eax, DWORD PTR _pPage$2[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
je	$LN7@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
test	eax, eax
jne	SHORT $LN3@sqlite3Btr
mov	ecx, DWORD PTR _pnEntry$[ebp]
mov	edx, DWORD PTR _nEntry$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _nEntry$[ebp+4]
mov	DWORD PTR [ecx+4], eax
xor	eax, eax
jmp	$LN13@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToParent
add	esp, 4
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+eax*2+86]
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+ecx*4+128]
movzx	eax, WORD PTR [ecx+16]
cmp	edx, eax
jge	SHORT $LN6@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	cx, WORD PTR [eax+edx*2+86]
add	cx, 1
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+eax*2+86], cx
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$2[ebp], eax
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+edx*2+86]
mov	DWORD PTR _iIdx$1[ebp], ecx
mov	edx, DWORD PTR _pPage$2[ebp]
movzx	eax, WORD PTR [edx+16]
cmp	DWORD PTR _iIdx$1[ebp], eax
jne	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pPage$2[ebp]
movzx	edx, BYTE PTR [ecx+5]
mov	eax, DWORD PTR _pPage$2[ebp]
mov	ecx, DWORD PTR [eax+56]
lea	edx, DWORD PTR [ecx+edx+8]
push	edx
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _pPage$2[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$2[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _iIdx$1[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$2[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _iIdx$1[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$2[ebp]
add	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN11@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeIsReadonly PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, WORD PTR [ecx+22]
and	edx, 1
je	SHORT $LN3@sqlite3Btr
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@sqlite3Btr
mov	DWORD PTR tv69[ebp], 0
mov	eax, DWORD PTR tv69[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCursorHints PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCsr$[ebp]
mov	cl, BYTE PTR _mask$[ebp]
mov	BYTE PTR [eax+82], cl
pop	ebp
ret	0
ENDP
_sqlite3BtreeSetVersion PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pBtree$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, -17				
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
cmp	DWORD PTR _iVersion$[ebp], 1
jne	SHORT $LN6@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
or	eax, 16					
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
push	0
mov	edx, DWORD PTR _pBtree$[ebp]
push	edx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN5@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _aData$1[ebp], edx
mov	eax, 1
imul	ecx, eax, 18
mov	edx, DWORD PTR _aData$1[ebp]
movzx	eax, BYTE PTR [edx+ecx]
movzx	ecx, BYTE PTR _iVersion$[ebp]
cmp	eax, ecx
jne	SHORT $LN3@sqlite3Btr
mov	edx, 1
imul	eax, edx, 19
mov	ecx, DWORD PTR _aData$1[ebp]
movzx	edx, BYTE PTR [ecx+eax]
movzx	eax, BYTE PTR _iVersion$[ebp]
cmp	edx, eax
je	SHORT $LN5@sqlite3Btr
push	2
mov	ecx, DWORD PTR _pBtree$[ebp]
push	ecx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Btr
mov	edx, 1
imul	eax, edx, 18
mov	ecx, DWORD PTR _aData$1[ebp]
mov	dl, BYTE PTR _iVersion$[ebp]
mov	BYTE PTR [ecx+eax], dl
mov	eax, 1
imul	ecx, eax, 19
mov	edx, DWORD PTR _aData$1[ebp]
mov	al, BYTE PTR _iVersion$[ebp]
mov	BYTE PTR [edx+ecx], al
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
and	edx, -17				
mov	eax, DWORD PTR _pBt$[ebp]
mov	WORD PTR [eax+22], dx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeClearCursor PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+64]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [edx+64], 0
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+81], 0
pop	ebp
ret	0
ENDP
_sqlite3BtreeIncrblobCursor PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
or	ecx, 16					
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+80], cl
pop	ebp
ret	0
ENDP
_sqlite3BtreePutData PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pCsr$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 3
jl	SHORT $LN6@sqlite3Btr
mov	edx, DWORD PTR _pCsr$[ebp]
push	edx
call	_btreeRestoreCursorPosition
add	esp, 4
mov	DWORD PTR tv69[ebp], eax
jmp	SHORT $LN7@sqlite3Btr
mov	DWORD PTR tv69[ebp], 0
mov	eax, DWORD PTR tv69[ebp]
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _pCsr$[ebp]
movzx	edx, BYTE PTR [ecx+81]
cmp	edx, 1
je	SHORT $LN2@sqlite3Btr
mov	eax, 4
jmp	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pCsr$[ebp]
push	eax
mov	ecx, DWORD PTR _pCsr$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _pCsr$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_saveAllCursors
add	esp, 12					
mov	edx, DWORD PTR _pCsr$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, 1
jne	SHORT $LN1@sqlite3Btr
mov	eax, 8
jmp	SHORT $LN4@sqlite3Btr
push	1
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
mov	edx, DWORD PTR _amt$[ebp]
push	edx
mov	eax, DWORD PTR _offset$[ebp]
push	eax
mov	ecx, DWORD PTR _pCsr$[ebp]
push	ecx
call	_accessPayload
add	esp, 20					
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreePager PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [ecx]
pop	ebp
ret	0
ENDP
_sqlite3BtreeIntegrityCheck PROC
push	ebp
mov	ebp, esp
sub	esp, 172				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerRefcount
add	esp, 4
mov	DWORD PTR _nRef$[ebp], eax
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR _sCheck$[ebp], edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _sCheck$[ebp+4], ecx
mov	edx, DWORD PTR _sCheck$[ebp]
push	edx
call	_btreePagecount
add	esp, 4
mov	DWORD PTR _sCheck$[ebp+12], eax
mov	eax, DWORD PTR _mxErr$[ebp]
mov	DWORD PTR _sCheck$[ebp+16], eax
mov	DWORD PTR _sCheck$[ebp+20], 0
mov	DWORD PTR _sCheck$[ebp+24], 0
mov	ecx, DWORD PTR _pnErr$[ebp]
mov	DWORD PTR [ecx], 0
cmp	DWORD PTR _sCheck$[ebp+12], 0
jne	SHORT $LN17@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
xor	eax, eax
jmp	$LN18@sqlite3Btr
mov	eax, DWORD PTR _sCheck$[ebp+12]
shr	eax, 3
add	eax, 1
push	eax
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _sCheck$[ebp+8], eax
cmp	DWORD PTR _sCheck$[ebp+8], 0
jne	SHORT $LN16@sqlite3Btr
mov	ecx, DWORD PTR _pnErr$[ebp]
mov	DWORD PTR [ecx], 1
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
xor	eax, eax
jmp	$LN18@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _sCheck$[ebp+12]
ja	SHORT $LN15@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
push	eax
lea	ecx, DWORD PTR _sCheck$[ebp]
push	ecx
call	_setPageReferenced
add	esp, 8
push	1000000000				
push	100					
lea	edx, DWORD PTR _zErr$[ebp]
push	edx
lea	eax, DWORD PTR _sCheck$[ebp+28]
push	eax
call	_sqlite3StrAccumInit
add	esp, 16					
mov	BYTE PTR _sCheck$[ebp+52], 2
push	OFFSET $SG96416
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, 1
imul	ecx, eax, 36
add	ecx, DWORD PTR [edx+56]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	ecx, 1
shl	ecx, 5
add	ecx, DWORD PTR [eax+56]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
push	eax
push	1
lea	edx, DWORD PTR _sCheck$[ebp]
push	edx
call	_checkList
add	esp, 20					
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN14@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
cmp	ecx, DWORD PTR _nRoot$[ebp]
jge	SHORT $LN12@sqlite3Btr
cmp	DWORD PTR _sCheck$[ebp+16], 0
je	SHORT $LN12@sqlite3Btr
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aRoot$[ebp]
cmp	DWORD PTR [eax+edx*4], 0
jne	SHORT $LN11@sqlite3Btr
jmp	SHORT $LN13@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
je	SHORT $LN10@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aRoot$[ebp]
cmp	DWORD PTR [ecx+eax*4], 1
jle	SHORT $LN10@sqlite3Btr
push	0
push	0
push	1
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _aRoot$[ebp]
mov	ecx, DWORD PTR [eax+edx*4]
push	ecx
lea	edx, DWORD PTR _sCheck$[ebp]
push	edx
call	_checkPtrmap
add	esp, 20					
push	0
push	0
push	OFFSET $SG96425
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _aRoot$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
lea	eax, DWORD PTR _sCheck$[ebp]
push	eax
call	_checkTreePage
add	esp, 20					
jmp	$LN13@sqlite3Btr
mov	DWORD PTR _i$[ebp], 1
jmp	SHORT $LN9@sqlite3Btr
mov	ecx, DWORD PTR _i$[ebp]
add	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR _sCheck$[ebp+12]
ja	$LN7@sqlite3Btr
cmp	DWORD PTR _sCheck$[ebp+16], 0
je	$LN7@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
push	eax
lea	ecx, DWORD PTR _sCheck$[ebp]
push	ecx
call	_getPageReferenced
add	esp, 8
test	eax, eax
jne	SHORT $LN6@sqlite3Btr
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _i$[ebp]
jne	SHORT $LN5@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
test	edx, edx
jne	SHORT $LN6@sqlite3Btr
mov	eax, DWORD PTR _i$[ebp]
push	eax
push	OFFSET $SG96431
push	0
lea	ecx, DWORD PTR _sCheck$[ebp]
push	ecx
call	_checkAppendMsg
add	esp, 16					
mov	edx, DWORD PTR _i$[ebp]
push	edx
lea	eax, DWORD PTR _sCheck$[ebp]
push	eax
call	_getPageReferenced
add	esp, 8
test	eax, eax
je	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_ptrmapPageno
add	esp, 8
cmp	eax, DWORD PTR _i$[ebp]
jne	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
je	SHORT $LN4@sqlite3Btr
mov	edx, DWORD PTR _i$[ebp]
push	edx
push	OFFSET $SG96433
push	0
lea	eax, DWORD PTR _sCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 16					
jmp	$LN8@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerRefcount
add	esp, 4
cmp	DWORD PTR _nRef$[ebp], eax
je	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerRefcount
add	esp, 4
push	eax
mov	edx, DWORD PTR _nRef$[ebp]
push	edx
push	OFFSET $SG96435
push	0
lea	eax, DWORD PTR _sCheck$[ebp]
push	eax
call	_checkAppendMsg
add	esp, 20					
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	edx, DWORD PTR _sCheck$[ebp+8]
push	edx
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _sCheck$[ebp+24], 0
je	SHORT $LN2@sqlite3Btr
lea	eax, DWORD PTR _sCheck$[ebp+28]
push	eax
call	_sqlite3StrAccumReset
add	esp, 4
mov	ecx, DWORD PTR _sCheck$[ebp+20]
add	ecx, 1
mov	edx, DWORD PTR _pnErr$[ebp]
mov	DWORD PTR [edx], ecx
xor	eax, eax
jmp	SHORT $LN18@sqlite3Btr
mov	eax, DWORD PTR _pnErr$[ebp]
mov	ecx, DWORD PTR _sCheck$[ebp+20]
mov	DWORD PTR [eax], ecx
cmp	DWORD PTR _sCheck$[ebp+20], 0
jne	SHORT $LN1@sqlite3Btr
lea	edx, DWORD PTR _sCheck$[ebp+28]
push	edx
call	_sqlite3StrAccumReset
add	esp, 4
lea	eax, DWORD PTR _sCheck$[ebp+28]
push	eax
call	_sqlite3StrAccumFinish
add	esp, 4
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeData PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
test	ecx, ecx
jne	SHORT $LN2@sqlite3Btr
mov	eax, 4
jmp	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
cmp	eax, 3
jl	SHORT $LN5@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_btreeRestoreCursorPosition
add	esp, 4
mov	DWORD PTR tv72[ebp], eax
jmp	SHORT $LN6@sqlite3Btr
mov	DWORD PTR tv72[ebp], 0
mov	edx, DWORD PTR tv72[ebp]
mov	DWORD PTR _rc$[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Btr
push	0
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _amt$[ebp]
push	ecx
mov	edx, DWORD PTR _offset$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_accessPayload
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeDataSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_getCellInfo
add	esp, 4
mov	ecx, DWORD PTR _pSize$[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+36]
mov	DWORD PTR [ecx], eax
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3BtreeDataFetch PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pAmt$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_fetchPayload
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3BtreeKeyFetch PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pAmt$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_fetchPayload
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3BtreeKey PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _pBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _amt$[ebp]
push	ecx
mov	edx, DWORD PTR _offset$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_accessPayload
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3BtreeKeySize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
je	SHORT $LN2@sqlite3Btr
mov	edx, DWORD PTR _pSize$[ebp]
mov	DWORD PTR [edx], 0
mov	DWORD PTR [edx+4], 0
jmp	SHORT $LN1@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_getCellInfo
add	esp, 4
mov	ecx, DWORD PTR _pSize$[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR [edx+28]
mov	DWORD PTR [ecx+4], edx
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3BtreePrevious PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	esi
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
and	ecx, -13				
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+80], cl
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
je	$LN14@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
cmp	eax, 3
jl	SHORT $LN13@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_btreeRestoreCursorPosition
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN13@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
test	ecx, ecx
jne	SHORT $LN11@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], 1
xor	eax, eax
jmp	$LN15@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [eax+76], 0
je	SHORT $LN14@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+81], 1
mov	edx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [edx+76], 0
jge	SHORT $LN9@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [eax+76], 0
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 0
xor	eax, eax
jmp	$LN15@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [edx+76], 0
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	$LN5@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, WORD PTR [edx+ecx*2+86]
mov	DWORD PTR _idx$1[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _idx$1[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _idx$1[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@sqlite3Btr
mov	eax, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToRightmost
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN6@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+eax*2+86]
test	edx, edx
jne	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
test	ecx, ecx
jne	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+81], 0
mov	eax, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [eax], 1
xor	eax, eax
jmp	$LN15@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToParent
add	esp, 4
jmp	SHORT $LN5@sqlite3Btr
xor	edx, edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+50], dx
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, -7					
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+80], dl
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	cx, WORD PTR [eax+edx*2+86]
sub	cx, 1
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+eax*2+86], cx
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+2]
test	edx, edx
je	SHORT $LN2@sqlite3Btr
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
jne	SHORT $LN2@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_sqlite3BtreePrevious
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN6@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 0
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeEof PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
je	SHORT $LN3@sqlite3Btr
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@sqlite3Btr
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeNext PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
je	$LN15@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, -5					
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+80], al
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
cmp	eax, 3
jl	SHORT $LN18@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_btreeRestoreCursorPosition
add	esp, 4
mov	DWORD PTR tv77[ebp], eax
jmp	SHORT $LN19@sqlite3Btr
mov	DWORD PTR tv77[ebp], 0
mov	edx, DWORD PTR tv77[ebp]
mov	DWORD PTR _rc$[ebp], edx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN14@sqlite3Btr
mov	eax, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [eax], 0
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+81]
test	edx, edx
jne	SHORT $LN13@sqlite3Btr
mov	eax, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [eax], 1
xor	eax, eax
jmp	$LN16@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [ecx+76], 0
je	SHORT $LN15@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+81], 1
mov	eax, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [eax+76], 0
jle	SHORT $LN11@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [ecx+76], 0
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], 0
xor	eax, eax
jmp	$LN16@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
mov	DWORD PTR [eax+76], 0
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+128]
mov	DWORD PTR _pPage$[ebp], ecx
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	dx, WORD PTR [ecx+eax*2+86]
add	dx, 1
mov	WORD PTR tv136[ebp], dx
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	ax, WORD PTR tv136[ebp]
mov	WORD PTR [edx+ecx*2+86], ax
movzx	ecx, WORD PTR tv136[ebp]
mov	DWORD PTR _idx$[ebp], ecx
xor	edx, edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+50], dx
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, -7					
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+80], dl
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+16]
cmp	DWORD PTR _idx$[ebp], edx
jl	$LN10@sqlite3Btr
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
jne	SHORT $LN7@sqlite3Btr
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+5]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+56]
lea	eax, DWORD PTR [edx+eax+8]
push	eax
call	_sqlite3Get4byte
add	esp, 4
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_moveToLeftmost
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 0
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN16@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
test	eax, eax
jne	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 1
mov	edx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [edx+81], 0
xor	eax, eax
jmp	$LN16@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_moveToParent
add	esp, 4
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+128]
mov	DWORD PTR _pPage$[ebp], ecx
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+eax*2+86]
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+16]
cmp	edx, ecx
jge	SHORT $LN7@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+2]
test	ecx, ecx
je	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_sqlite3BtreeNext
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN2@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN16@sqlite3Btr
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
je	SHORT $LN1@sqlite3Btr
xor	eax, eax
jmp	SHORT $LN16@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToLeftmost
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeLast PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
jne	SHORT $LN6@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, 8
je	SHORT $LN6@sqlite3Btr
xor	eax, eax
jmp	SHORT $LN7@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToRoot
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN5@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
test	eax, eax
jne	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 1
jmp	SHORT $LN5@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_moveToRightmost
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
or	edx, 8
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+80], dl
jmp	SHORT $LN5@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, -9					
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+80], dl
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeFirst PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_moveToRoot
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+81]
test	edx, edx
jne	SHORT $LN2@sqlite3Btr
mov	eax, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [eax], 1
jmp	SHORT $LN3@sqlite3Btr
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_moveToLeftmost
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeInsert PROC
push	ebp
mov	ebp, esp
sub	esp, 56					
push	esi
mov	eax, DWORD PTR _seekResult$[ebp]
mov	DWORD PTR _loc$[ebp], eax
mov	DWORD PTR _szNew$[ebp], 0
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _p$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	DWORD PTR _newCell$[ebp], 0
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
cmp	eax, 4
jne	SHORT $LN16@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [ecx+76]
jmp	$LN17@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_saveAllCursors
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN15@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [eax+16], 0
jne	SHORT $LN14@sqlite3Btr
push	0
mov	ecx, DWORD PTR _nKey$[ebp+4]
push	ecx
mov	edx, DWORD PTR _nKey$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_invalidateIncrblobCursors
add	esp, 16					
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, 2
je	SHORT $LN14@sqlite3Btr
cmp	DWORD PTR _nKey$[ebp+4], 0
jl	SHORT $LN14@sqlite3Btr
jg	SHORT $LN19@sqlite3Btr
cmp	DWORD PTR _nKey$[ebp], 0
jbe	SHORT $LN14@sqlite3Btr
mov	eax, DWORD PTR _nKey$[ebp]
sub	eax, 1
mov	ecx, DWORD PTR _nKey$[ebp+4]
sbb	ecx, 0
mov	edx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR tv272[ebp], edx
mov	DWORD PTR tv273[ebp], eax
mov	DWORD PTR tv273[ebp+4], ecx
mov	eax, DWORD PTR tv272[ebp]
mov	ecx, DWORD PTR [eax+24]
cmp	ecx, DWORD PTR tv273[ebp]
jne	SHORT $LN14@sqlite3Btr
mov	edx, DWORD PTR tv272[ebp]
mov	eax, DWORD PTR [edx+28]
cmp	eax, DWORD PTR tv273[ebp+4]
jne	SHORT $LN14@sqlite3Btr
mov	DWORD PTR _loc$[ebp], -1
cmp	DWORD PTR _loc$[ebp], 0
jne	SHORT $LN12@sqlite3Btr
lea	ecx, DWORD PTR _loc$[ebp]
push	ecx
mov	edx, DWORD PTR _appendBias$[ebp]
push	edx
mov	eax, DWORD PTR _nKey$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_btreeMoveto
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN17@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+128]
mov	DWORD PTR _pPage$[ebp], ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_allocateTempSpace
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+80]
mov	DWORD PTR _newCell$[ebp], ecx
cmp	DWORD PTR _newCell$[ebp], 0
jne	SHORT $LN10@sqlite3Btr
mov	eax, 7
jmp	$LN17@sqlite3Btr
lea	edx, DWORD PTR _szNew$[ebp]
push	edx
mov	eax, DWORD PTR _nZero$[ebp]
push	eax
mov	ecx, DWORD PTR _nData$[ebp]
push	ecx
mov	edx, DWORD PTR _pData$[ebp]
push	edx
mov	eax, DWORD PTR _nKey$[ebp+4]
push	eax
mov	ecx, DWORD PTR _nKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
mov	eax, DWORD PTR _newCell$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_fillInCell
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@sqlite3Btr
jmp	$end_insert$20
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, WORD PTR [ecx+eax*2+86]
mov	DWORD PTR _idx$[ebp], edx
cmp	DWORD PTR _loc$[ebp], 0
jne	$LN8@sqlite3Btr
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@sqlite3Btr
jmp	$end_insert$20
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, WORD PTR [edx+18]
mov	ecx, DWORD PTR _pPage$[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	ecx, DWORD PTR _idx$[ebp]
lea	edx, DWORD PTR [edx+ecx*2]
mov	ecx, 1
imul	ecx, ecx, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	ecx, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [ecx+64]
mov	esi, DWORD PTR _idx$[ebp]
lea	ecx, DWORD PTR [ecx+esi*2]
mov	esi, 1
shl	esi, 0
movzx	ecx, BYTE PTR [ecx+esi]
or	edx, ecx
and	eax, edx
mov	edx, DWORD PTR _pPage$[ebp]
add	eax, DWORD PTR [edx+56]
mov	DWORD PTR _oldCell$[ebp], eax
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
jne	SHORT $LN6@sqlite3Btr
push	4
mov	edx, DWORD PTR _oldCell$[ebp]
push	edx
mov	eax, DWORD PTR _newCell$[ebp]
push	eax
call	_memcpy
add	esp, 12					
mov	ecx, DWORD PTR _oldCell$[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_cellSizePtr
add	esp, 8
mov	WORD PTR _szOld$1[ebp], ax
mov	eax, DWORD PTR _oldCell$[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$[ebp]
push	ecx
call	_clearCell
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
lea	edx, DWORD PTR _rc$[ebp]
push	edx
movzx	eax, WORD PTR _szOld$1[ebp]
push	eax
mov	ecx, DWORD PTR _idx$[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_dropCell
add	esp, 16					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@sqlite3Btr
jmp	$end_insert$20
jmp	SHORT $LN4@sqlite3Btr
cmp	DWORD PTR _loc$[ebp], 0
jge	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, WORD PTR [eax+16]
test	ecx, ecx
jle	SHORT $LN4@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	dx, WORD PTR [ecx+eax*2+86]
add	dx, 1
mov	WORD PTR tv211[ebp], dx
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	ax, WORD PTR tv211[ebp]
mov	WORD PTR [edx+ecx*2+86], ax
movzx	ecx, WORD PTR tv211[ebp]
mov	DWORD PTR _idx$[ebp], ecx
lea	edx, DWORD PTR _rc$[ebp]
push	edx
push	0
push	0
mov	eax, DWORD PTR _szNew$[ebp]
push	eax
mov	ecx, DWORD PTR _newCell$[ebp]
push	ecx
mov	edx, DWORD PTR _idx$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_insertCell
add	esp, 28					
xor	ecx, ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [edx+50], cx
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $end_insert$20
mov	eax, DWORD PTR _pPage$[ebp]
movzx	ecx, BYTE PTR [eax+1]
test	ecx, ecx
je	SHORT $end_insert$20
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, -3					
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+80], al
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_balance
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	BYTE PTR [eax+1], 0
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+81], 0
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 52					
push	esi
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$[ebp], eax
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, WORD PTR [eax+edx*2+86]
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+eax*4+128]
movzx	edx, WORD PTR [eax+16]
cmp	ecx, edx
jge	SHORT $LN13@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
je	SHORT $LN14@sqlite3Btr
mov	eax, 1
jmp	$LN15@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	DWORD PTR _iCellDepth$[ebp], eax
mov	ecx, DWORD PTR _iCellDepth$[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, WORD PTR [edx+ecx*2+86]
mov	DWORD PTR _iCellIdx$[ebp], eax
mov	ecx, DWORD PTR _iCellDepth$[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pPage$[ebp], eax
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _iCellIdx$[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _iCellIdx$[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$[ebp]
add	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pCell$[ebp], edx
mov	edx, DWORD PTR _pPage$[ebp]
movzx	eax, BYTE PTR [edx+3]
test	eax, eax
jne	SHORT $LN12@sqlite3Btr
mov	DWORD PTR _notUsed$3[ebp], 0
lea	ecx, DWORD PTR _notUsed$3[ebp]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_sqlite3BtreePrevious
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+68]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_saveAllCursors
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN10@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [ecx+16], 0
jne	SHORT $LN9@sqlite3Btr
push	0
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+28]
push	eax
mov	ecx, DWORD PTR [edx+24]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_invalidateIncrblobCursors
add	esp, 16					
mov	eax, DWORD PTR _pPage$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN8@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@sqlite3Btr
mov	edx, DWORD PTR _pCell$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_clearCell
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
lea	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _pCell$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_cellSizePtr
add	esp, 8
movzx	ecx, ax
push	ecx
mov	edx, DWORD PTR _iCellIdx$[ebp]
push	edx
mov	eax, DWORD PTR _pPage$[ebp]
push	eax
call	_dropCell
add	esp, 16					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN7@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@sqlite3Btr
mov	ecx, DWORD PTR _pPage$[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
jne	$LN6@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
mov	DWORD PTR _pLeaf$5[ebp], eax
mov	ecx, DWORD PTR _iCellDepth$[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+132]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR _n$2[ebp], ecx
mov	edx, DWORD PTR _pLeaf$5[ebp]
movzx	eax, WORD PTR [edx+18]
mov	ecx, DWORD PTR _pLeaf$5[ebp]
movzx	edx, WORD PTR [ecx+16]
mov	ecx, DWORD PTR _pLeaf$5[ebp]
mov	ecx, DWORD PTR [ecx+64]
lea	edx, DWORD PTR [ecx+edx*2-2]
mov	ecx, 1
imul	ecx, ecx, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	ecx, DWORD PTR _pLeaf$5[ebp]
movzx	ecx, WORD PTR [ecx+16]
mov	esi, DWORD PTR _pLeaf$5[ebp]
mov	esi, DWORD PTR [esi+64]
lea	ecx, DWORD PTR [esi+ecx*2-2]
mov	esi, 1
shl	esi, 0
movzx	ecx, BYTE PTR [ecx+esi]
or	edx, ecx
and	eax, edx
mov	edx, DWORD PTR _pLeaf$5[ebp]
add	eax, DWORD PTR [edx+56]
mov	DWORD PTR _pCell$[ebp], eax
mov	eax, DWORD PTR _pCell$[ebp]
push	eax
mov	ecx, DWORD PTR _pLeaf$5[ebp]
push	ecx
call	_cellSizePtr
add	esp, 8
movzx	edx, ax
mov	DWORD PTR _nCell$4[ebp], edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_allocateTempSpace
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+80]
mov	DWORD PTR _pTmp$1[ebp], edx
mov	eax, DWORD PTR _pLeaf$5[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
lea	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _n$2[ebp]
push	eax
mov	ecx, DWORD PTR _pTmp$1[ebp]
push	ecx
mov	edx, DWORD PTR _nCell$4[ebp]
add	edx, 4
push	edx
mov	eax, DWORD PTR _pCell$[ebp]
sub	eax, 4
push	eax
mov	ecx, DWORD PTR _iCellIdx$[ebp]
push	ecx
mov	edx, DWORD PTR _pPage$[ebp]
push	edx
call	_insertCell
add	esp, 28					
lea	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _nCell$4[ebp]
push	ecx
mov	edx, DWORD PTR _pLeaf$5[ebp]
movzx	eax, WORD PTR [edx+16]
sub	eax, 1
push	eax
mov	ecx, DWORD PTR _pLeaf$5[ebp]
push	ecx
call	_dropCell
add	esp, 16					
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN15@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_balance
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
cmp	ecx, DWORD PTR _iCellDepth$[ebp]
jle	SHORT $LN4@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
cmp	eax, DWORD PTR _iCellDepth$[ebp]
jle	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
movsx	edx, WORD PTR [ecx+84]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx*4+128]
mov	DWORD PTR tv263[ebp], ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	ax, WORD PTR [edx+84]
sub	ax, 1
mov	ecx, DWORD PTR _pCur$[ebp]
mov	WORD PTR [ecx+84], ax
mov	edx, DWORD PTR tv263[ebp]
push	edx
call	_releasePage
add	esp, 4
jmp	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
push	eax
call	_balance
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToRoot
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCursorHasMoved PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
jne	SHORT $LN5@sqlite3Btr
mov	edx, DWORD PTR _pHasMoved$[ebp]
mov	DWORD PTR [edx], 0
xor	eax, eax
jmp	SHORT $LN6@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 3
jl	SHORT $LN8@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_btreeRestoreCursorPosition
add	esp, 4
mov	DWORD PTR tv72[ebp], eax
jmp	SHORT $LN9@sqlite3Btr
mov	DWORD PTR tv72[ebp], 0
mov	eax, DWORD PTR tv72[ebp]
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _pHasMoved$[ebp]
mov	DWORD PTR [ecx], 2
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN6@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
cmp	eax, 1
jne	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [ecx+76], 0
je	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _pHasMoved$[ebp]
mov	DWORD PTR [edx], 2
jmp	SHORT $LN1@sqlite3Btr
mov	eax, DWORD PTR _pHasMoved$[ebp]
mov	DWORD PTR [eax], 1
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeMovetoUnpacked PROC
push	ebp
mov	ebp, esp
sub	esp, 68					
push	esi
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+81]
cmp	ecx, 1
jne	$LN43@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
and	eax, 2
je	$LN43@sqlite3Btr
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+edx+128]
movzx	edx, BYTE PTR [ecx+2]
test	edx, edx
je	SHORT $LN43@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
mov	DWORD PTR tv379[ebp], eax
mov	ecx, DWORD PTR tv379[ebp]
mov	edx, DWORD PTR [ecx+24]
cmp	edx, DWORD PTR _intKey$[ebp]
jne	SHORT $LN42@sqlite3Btr
mov	eax, DWORD PTR tv379[ebp]
mov	ecx, DWORD PTR [eax+28]
cmp	ecx, DWORD PTR _intKey$[ebp+4]
jne	SHORT $LN42@sqlite3Btr
mov	edx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [edx], 0
xor	eax, eax
jmp	$LN44@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
movzx	ecx, BYTE PTR [eax+80]
and	ecx, 8
je	SHORT $LN43@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR tv389[ebp], edx
mov	eax, DWORD PTR tv389[ebp]
mov	ecx, DWORD PTR [eax+28]
cmp	ecx, DWORD PTR _intKey$[ebp+4]
jg	SHORT $LN43@sqlite3Btr
jl	SHORT $LN46@sqlite3Btr
mov	edx, DWORD PTR tv389[ebp]
mov	eax, DWORD PTR [edx+24]
cmp	eax, DWORD PTR _intKey$[ebp]
jae	SHORT $LN43@sqlite3Btr
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], -1
xor	eax, eax
jmp	$LN44@sqlite3Btr
cmp	DWORD PTR _pIdxKey$[ebp], 0
je	SHORT $LN40@sqlite3Btr
mov	edx, DWORD PTR _pIdxKey$[ebp]
push	edx
call	_sqlite3VdbeFindCompare
add	esp, 4
mov	DWORD PTR _xRecordCompare$[ebp], eax
mov	eax, DWORD PTR _pIdxKey$[ebp]
mov	BYTE PTR [eax+7], 0
jmp	SHORT $LN39@sqlite3Btr
mov	DWORD PTR _xRecordCompare$[ebp], 0
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToRoot
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN38@sqlite3Btr
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN44@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+81]
test	eax, eax
jne	SHORT $LN36@sqlite3Btr
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], -1
xor	eax, eax
jmp	$LN44@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+128]
mov	DWORD PTR _pPage$11[ebp], edx
mov	DWORD PTR _lwr$8[ebp], 0
mov	eax, DWORD PTR _pPage$11[ebp]
movzx	ecx, WORD PTR [eax+16]
sub	ecx, 1
mov	DWORD PTR _upr$6[ebp], ecx
mov	ecx, 1
sub	ecx, DWORD PTR _biasRight$[ebp]
mov	edx, DWORD PTR _upr$6[ebp]
sar	edx, cl
mov	DWORD PTR _idx$10[ebp], edx
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	ax, WORD PTR _idx$10[ebp]
mov	WORD PTR [edx+ecx*2+86], ax
cmp	DWORD PTR _xRecordCompare$[ebp], 0
jne	$LN18@sqlite3Btr
mov	ecx, DWORD PTR _pPage$11[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$11[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _idx$10[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$11[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _idx$10[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$11[ebp]
mov	eax, DWORD PTR [ecx+56]
add	eax, edx
mov	ecx, DWORD PTR _pPage$11[ebp]
movzx	edx, BYTE PTR [ecx+6]
add	eax, edx
mov	DWORD PTR _pCell$9[ebp], eax
mov	eax, DWORD PTR _pPage$11[ebp]
movzx	ecx, BYTE PTR [eax+4]
test	ecx, ecx
je	SHORT $LN31@sqlite3Btr
mov	edx, DWORD PTR _pCell$9[ebp]
movzx	eax, BYTE PTR [edx]
mov	DWORD PTR tv173[ebp], eax
mov	ecx, DWORD PTR _pCell$9[ebp]
add	ecx, 1
mov	DWORD PTR _pCell$9[ebp], ecx
cmp	DWORD PTR tv173[ebp], 128		
jl	SHORT $LN31@sqlite3Btr
mov	edx, DWORD PTR _pPage$11[ebp]
mov	eax, DWORD PTR _pCell$9[ebp]
cmp	eax, DWORD PTR [edx+60]
jb	SHORT $LN28@sqlite3Btr
push	55807					
call	_sqlite3CorruptError
add	esp, 4
jmp	$LN44@sqlite3Btr
jmp	SHORT $LN30@sqlite3Btr
lea	ecx, DWORD PTR _nCellKey$1[ebp]
push	ecx
mov	edx, DWORD PTR _pCell$9[ebp]
push	edx
call	_sqlite3GetVarint
add	esp, 8
mov	eax, DWORD PTR _nCellKey$1[ebp+4]
cmp	eax, DWORD PTR _intKey$[ebp+4]
jg	SHORT $LN27@sqlite3Btr
jl	SHORT $LN47@sqlite3Btr
mov	ecx, DWORD PTR _nCellKey$1[ebp]
cmp	ecx, DWORD PTR _intKey$[ebp]
jae	SHORT $LN27@sqlite3Btr
mov	edx, DWORD PTR _idx$10[ebp]
add	edx, 1
mov	DWORD PTR _lwr$8[ebp], edx
mov	eax, DWORD PTR _lwr$8[ebp]
cmp	eax, DWORD PTR _upr$6[ebp]
jle	SHORT $LN26@sqlite3Btr
mov	DWORD PTR _c$5[ebp], -1
jmp	$LN32@sqlite3Btr
jmp	$LN25@sqlite3Btr
mov	ecx, DWORD PTR _nCellKey$1[ebp+4]
cmp	ecx, DWORD PTR _intKey$[ebp+4]
jl	SHORT $LN24@sqlite3Btr
jg	SHORT $LN48@sqlite3Btr
mov	edx, DWORD PTR _nCellKey$1[ebp]
cmp	edx, DWORD PTR _intKey$[ebp]
jbe	SHORT $LN24@sqlite3Btr
mov	eax, DWORD PTR _idx$10[ebp]
sub	eax, 1
mov	DWORD PTR _upr$6[ebp], eax
mov	ecx, DWORD PTR _lwr$8[ebp]
cmp	ecx, DWORD PTR _upr$6[ebp]
jle	SHORT $LN23@sqlite3Btr
mov	DWORD PTR _c$5[ebp], 1
jmp	SHORT $LN32@sqlite3Btr
jmp	SHORT $LN25@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
movzx	eax, BYTE PTR [edx+80]
or	eax, 2
mov	ecx, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [ecx+80], al
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR _nCellKey$1[ebp]
mov	DWORD PTR [edx+24], eax
mov	ecx, DWORD PTR _nCellKey$1[ebp+4]
mov	DWORD PTR [edx+28], ecx
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	dx, WORD PTR _idx$10[ebp]
mov	WORD PTR [ecx+eax*2+86], dx
mov	eax, DWORD PTR _pPage$11[ebp]
movzx	ecx, BYTE PTR [eax+3]
test	ecx, ecx
jne	SHORT $LN21@sqlite3Btr
mov	edx, DWORD PTR _idx$10[ebp]
mov	DWORD PTR _lwr$8[ebp], edx
jmp	$moveto_next_layer$49
jmp	SHORT $LN25@sqlite3Btr
mov	eax, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [eax], 0
mov	DWORD PTR _rc$[ebp], 0
jmp	$moveto_finish$50
mov	ecx, DWORD PTR _lwr$8[ebp]
add	ecx, DWORD PTR _upr$6[ebp]
sar	ecx, 1
mov	DWORD PTR _idx$10[ebp], ecx
jmp	$LN33@sqlite3Btr
jmp	$LN19@sqlite3Btr
mov	edx, DWORD PTR _pPage$11[ebp]
movzx	eax, WORD PTR [edx+18]
mov	ecx, DWORD PTR _pPage$11[ebp]
mov	edx, DWORD PTR [ecx+64]
mov	ecx, DWORD PTR _idx$10[ebp]
lea	edx, DWORD PTR [edx+ecx*2]
mov	ecx, 1
imul	ecx, ecx, 0
movzx	edx, BYTE PTR [edx+ecx]
shl	edx, 8
mov	ecx, DWORD PTR _pPage$11[ebp]
mov	ecx, DWORD PTR [ecx+64]
mov	esi, DWORD PTR _idx$10[ebp]
lea	ecx, DWORD PTR [ecx+esi*2]
mov	esi, 1
shl	esi, 0
movzx	ecx, BYTE PTR [ecx+esi]
or	edx, ecx
and	eax, edx
mov	edx, DWORD PTR _pPage$11[ebp]
mov	ecx, DWORD PTR [edx+56]
add	ecx, eax
mov	edx, DWORD PTR _pPage$11[ebp]
movzx	eax, BYTE PTR [edx+6]
add	ecx, eax
mov	DWORD PTR _pCell$9[ebp], ecx
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _pCell$9[ebp]
movzx	ecx, BYTE PTR [eax+edx]
mov	DWORD PTR _nCell$7[ebp], ecx
mov	edx, DWORD PTR _pPage$11[ebp]
movzx	eax, BYTE PTR [edx+7]
cmp	DWORD PTR _nCell$7[ebp], eax
jg	SHORT $LN16@sqlite3Btr
push	0
mov	ecx, DWORD PTR _pIdxKey$[ebp]
push	ecx
mov	edx, 1
shl	edx, 0
add	edx, DWORD PTR _pCell$9[ebp]
push	edx
mov	eax, DWORD PTR _nCell$7[ebp]
push	eax
call	DWORD PTR _xRecordCompare$[ebp]
add	esp, 16					
mov	DWORD PTR _c$5[ebp], eax
jmp	$LN15@sqlite3Btr
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _pCell$9[ebp]
movzx	eax, BYTE PTR [edx+ecx]
and	eax, 128				
jne	SHORT $LN14@sqlite3Btr
mov	ecx, DWORD PTR _nCell$7[ebp]
and	ecx, 127				
shl	ecx, 7
mov	edx, 1
shl	edx, 0
mov	eax, DWORD PTR _pCell$9[ebp]
movzx	edx, BYTE PTR [eax+edx]
add	ecx, edx
mov	DWORD PTR _nCell$7[ebp], ecx
mov	eax, DWORD PTR _pPage$11[ebp]
movzx	ecx, WORD PTR [eax+8]
cmp	DWORD PTR _nCell$7[ebp], ecx
jg	SHORT $LN14@sqlite3Btr
push	0
mov	edx, DWORD PTR _pIdxKey$[ebp]
push	edx
mov	eax, 1
shl	eax, 1
add	eax, DWORD PTR _pCell$9[ebp]
push	eax
mov	ecx, DWORD PTR _nCell$7[ebp]
push	ecx
call	DWORD PTR _xRecordCompare$[ebp]
add	esp, 16					
mov	DWORD PTR _c$5[ebp], eax
jmp	$LN15@sqlite3Btr
mov	edx, DWORD PTR _pPage$11[ebp]
movzx	eax, BYTE PTR [edx+6]
mov	ecx, DWORD PTR _pCell$9[ebp]
sub	ecx, eax
mov	DWORD PTR _pCellBody$2[ebp], ecx
mov	edx, DWORD PTR _pCur$[ebp]
add	edx, 24					
push	edx
mov	eax, DWORD PTR _pCellBody$2[ebp]
push	eax
mov	ecx, DWORD PTR _pPage$11[ebp]
push	ecx
call	_btreeParseCellPtr
add	esp, 12					
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR _nCell$7[ebp], eax
mov	ecx, DWORD PTR _nCell$7[ebp]
push	ecx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _pCellKey$4[ebp], eax
cmp	DWORD PTR _pCellKey$4[ebp], 0
jne	SHORT $LN12@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 7
jmp	$moveto_finish$50
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	dx, WORD PTR _idx$10[ebp]
mov	WORD PTR [ecx+eax*2+86], dx
push	2
mov	eax, DWORD PTR _pCellKey$4[ebp]
push	eax
mov	ecx, DWORD PTR _nCell$7[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_accessPayload
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN11@sqlite3Btr
mov	eax, DWORD PTR _pCellKey$4[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
jmp	$moveto_finish$50
push	0
mov	ecx, DWORD PTR _pIdxKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pCellKey$4[ebp]
push	edx
mov	eax, DWORD PTR _nCell$7[ebp]
push	eax
call	DWORD PTR _xRecordCompare$[ebp]
add	esp, 16					
mov	DWORD PTR _c$5[ebp], eax
mov	ecx, DWORD PTR _pCellKey$4[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _c$5[ebp], 0
jge	SHORT $LN10@sqlite3Btr
mov	edx, DWORD PTR _idx$10[ebp]
add	edx, 1
mov	DWORD PTR _lwr$8[ebp], edx
jmp	SHORT $LN9@sqlite3Btr
cmp	DWORD PTR _c$5[ebp], 0
jle	SHORT $LN8@sqlite3Btr
mov	eax, DWORD PTR _idx$10[ebp]
sub	eax, 1
mov	DWORD PTR _upr$6[ebp], eax
jmp	SHORT $LN9@sqlite3Btr
mov	ecx, DWORD PTR _pRes$[ebp]
mov	DWORD PTR [ecx], 0
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	dx, WORD PTR _idx$10[ebp]
mov	WORD PTR [ecx+eax*2+86], dx
mov	eax, DWORD PTR _pIdxKey$[ebp]
movzx	ecx, BYTE PTR [eax+7]
test	ecx, ecx
je	SHORT $LN6@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 11			
jmp	$moveto_finish$50
mov	edx, DWORD PTR _lwr$8[ebp]
cmp	edx, DWORD PTR _upr$6[ebp]
jle	SHORT $LN5@sqlite3Btr
jmp	SHORT $LN19@sqlite3Btr
mov	eax, DWORD PTR _lwr$8[ebp]
add	eax, DWORD PTR _upr$6[ebp]
sar	eax, 1
mov	DWORD PTR _idx$10[ebp], eax
jmp	$LN18@sqlite3Btr
mov	ecx, DWORD PTR _pPage$11[ebp]
movzx	edx, BYTE PTR [ecx+3]
test	edx, edx
je	SHORT $moveto_next_layer$49
mov	eax, DWORD PTR _pCur$[ebp]
movsx	ecx, WORD PTR [eax+84]
mov	edx, DWORD PTR _pCur$[ebp]
mov	ax, WORD PTR _idx$10[ebp]
mov	WORD PTR [edx+ecx*2+86], ax
mov	ecx, DWORD PTR _pRes$[ebp]
mov	edx, DWORD PTR _c$5[ebp]
mov	DWORD PTR [ecx], edx
mov	DWORD PTR _rc$[ebp], 0
jmp	$moveto_finish$50
mov	eax, DWORD PTR _pPage$11[ebp]
movzx	ecx, WORD PTR [eax+16]
cmp	DWORD PTR _lwr$8[ebp], ecx
jl	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _pPage$11[ebp]
movzx	eax, BYTE PTR [edx+5]
mov	ecx, DWORD PTR _pPage$11[ebp]
mov	edx, DWORD PTR [ecx+56]
lea	eax, DWORD PTR [edx+eax+8]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _chldPg$3[ebp], eax
jmp	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pPage$11[ebp]
movzx	edx, WORD PTR [ecx+18]
mov	eax, DWORD PTR _pPage$11[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	eax, DWORD PTR _lwr$8[ebp]
lea	ecx, DWORD PTR [ecx+eax*2]
mov	eax, 1
imul	eax, eax, 0
movzx	ecx, BYTE PTR [ecx+eax]
shl	ecx, 8
mov	eax, DWORD PTR _pPage$11[ebp]
mov	eax, DWORD PTR [eax+64]
mov	esi, DWORD PTR _lwr$8[ebp]
lea	eax, DWORD PTR [eax+esi*2]
mov	esi, 1
shl	esi, 0
movzx	eax, BYTE PTR [eax+esi]
or	ecx, eax
and	edx, ecx
mov	ecx, DWORD PTR _pPage$11[ebp]
add	edx, DWORD PTR [ecx+56]
push	edx
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _chldPg$3[ebp], eax
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
mov	ecx, DWORD PTR _pCur$[ebp]
mov	dx, WORD PTR _lwr$8[ebp]
mov	WORD PTR [ecx+eax*2+86], dx
mov	eax, DWORD PTR _chldPg$3[ebp]
push	eax
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
call	_moveToChild
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3Btr
jmp	SHORT $moveto_finish$50
jmp	$LN36@sqlite3Btr
xor	edx, edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	WORD PTR [eax+50], dx
mov	ecx, DWORD PTR _pCur$[ebp]
movzx	edx, BYTE PTR [ecx+80]
and	edx, -7					
mov	eax, DWORD PTR _pCur$[ebp]
mov	BYTE PTR [eax+80], dl
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCloseCursor PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _pBtree$[ebp], ecx
cmp	DWORD PTR _pBtree$[ebp], 0
je	$LN7@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$1[ebp], eax
mov	ecx, DWORD PTR _pBtree$[ebp]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
mov	edx, DWORD PTR _pCur$[ebp]
push	edx
call	_sqlite3BtreeClearCursor
add	esp, 4
mov	eax, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN6@sqlite3Btr
mov	ecx, DWORD PTR _pCur$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
jmp	SHORT $LN5@sqlite3Btr
mov	edx, DWORD PTR _pBt$1[ebp]
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR [edx+8], ecx
mov	edx, DWORD PTR _pCur$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR [ecx+12], eax
mov	DWORD PTR _i$2[ebp], 0
jmp	SHORT $LN3@sqlite3Btr
mov	ecx, DWORD PTR _i$2[ebp]
add	ecx, 1
mov	DWORD PTR _i$2[ebp], ecx
mov	edx, DWORD PTR _pCur$[ebp]
movsx	eax, WORD PTR [edx+84]
cmp	DWORD PTR _i$2[ebp], eax
jg	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _i$2[ebp]
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
push	eax
call	_releasePage
add	esp, 4
jmp	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pBt$1[ebp]
push	ecx
call	_unlockBtreeIfUnused
add	esp, 4
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
mov	ecx, DWORD PTR _pBtree$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _pBtree$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCursorZero PROC
push	ebp
mov	ebp, esp
push	84					
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_memset
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3BtreeCursorSize PROC
push	ebp
mov	ebp, esp
mov	eax, 208				
pop	ebp
ret	0
ENDP
_sqlite3BtreeCursor PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _pCur$[ebp]
push	ecx
mov	edx, DWORD PTR _pKeyInfo$[ebp]
push	edx
mov	eax, DWORD PTR _wrFlag$[ebp]
push	eax
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_btreeCursor
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeNewDb PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR [edx+44], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_newDatabase
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeUpdateMeta PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+56]
mov	DWORD PTR _pP1$[ebp], edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+68]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Btr
mov	eax, DWORD PTR _iMeta$[ebp]
push	eax
mov	ecx, DWORD PTR _idx$[ebp]
mov	edx, DWORD PTR _pP1$[ebp]
lea	eax, DWORD PTR [edx+ecx*4+36]
push	eax
call	_sqlite3Put4byte
add	esp, 8
cmp	DWORD PTR _idx$[ebp], 7
jne	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dl, BYTE PTR _iMeta$[ebp]
mov	BYTE PTR [ecx+18], dl
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeGetMeta PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, DWORD PTR [ecx+56]
mov	eax, DWORD PTR _idx$[ebp]
lea	ecx, DWORD PTR [edx+eax*4+36]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
mov	edx, DWORD PTR _pMeta$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeTripAllCursors PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pBtree$[ebp], 0
jne	SHORT $LN7@sqlite3Btr
jmp	$LN8@sqlite3Btr
mov	eax, DWORD PTR _pBtree$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _pBtree$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx+8]
mov	DWORD PTR _p$[ebp], eax
jmp	SHORT $LN6@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR _p$[ebp], edx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeClearCursor
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+81], 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _errCode$[ebp]
mov	DWORD PTR [edx+76], eax
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN3@sqlite3Btr
mov	ecx, DWORD PTR _i$1[ebp]
add	ecx, 1
mov	DWORD PTR _i$1[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
movsx	eax, WORD PTR [edx+84]
cmp	DWORD PTR _i$1[ebp], eax
jg	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _i$1[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+128]
push	eax
call	_releasePage
add	esp, 4
mov	ecx, DWORD PTR _i$1[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+ecx*4+128], 0
jmp	SHORT $LN2@sqlite3Btr
jmp	SHORT $LN5@sqlite3Btr
mov	eax, DWORD PTR _pBtree$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeClearTableOfCursor PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _pCur$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3BtreeClearTable
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3BtreeClearTable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
push	0
mov	eax, DWORD PTR _iTable$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_saveAllCursors
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Btr
push	1
push	0
push	0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_invalidateIncrblobCursors
add	esp, 16					
mov	eax, DWORD PTR _pnChange$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _iTable$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_clearDatabasePage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeDropTable PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _piMoved$[ebp]
push	ecx
mov	edx, DWORD PTR _iTable$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_btreeDropTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeIncrVacuum PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+17]
test	ecx, ecx
jne	SHORT $LN8@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 101		
jmp	$LN7@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreePagecount
add	esp, 4
mov	DWORD PTR _nOrig$3[ebp], eax
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, 1
imul	eax, edx, 36
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nFree$2[ebp], eax
mov	ecx, DWORD PTR _nFree$2[ebp]
push	ecx
mov	edx, DWORD PTR _nOrig$3[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_finalDbSize
add	esp, 12					
mov	DWORD PTR _nFin$1[ebp], eax
mov	ecx, DWORD PTR _nOrig$3[ebp]
cmp	ecx, DWORD PTR _nFin$1[ebp]
jae	SHORT $LN6@sqlite3Btr
push	54318					
call	_sqlite3CorruptError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN7@sqlite3Btr
cmp	DWORD PTR _nFree$2[ebp], 0
jbe	SHORT $LN4@sqlite3Btr
push	0
push	0
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_saveAllCursors
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_invalidateAllOverflowCache
add	esp, 4
push	0
mov	ecx, DWORD PTR _nOrig$3[ebp]
push	ecx
mov	edx, DWORD PTR _nFin$1[ebp]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_incrVacuumStep
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+44]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	edx, 1
imul	eax, edx, 28
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Put4byte
add	esp, 8
jmp	SHORT $LN7@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 101		
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCopyFile PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
push	esi
push	edi
mov	eax, DWORD PTR _pTo$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _pFrom$[ebp]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
mov	edx, DWORD PTR _pTo$[ebp]
push	edx
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerFile
add	esp, 4
mov	DWORD PTR _pFd$[ebp], eax
mov	eax, DWORD PTR _pFd$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN5@sqlite3Btr
mov	ecx, DWORD PTR _pFrom$[ebp]
push	ecx
call	_sqlite3BtreeGetPageSize
add	esp, 4
cdq
mov	esi, eax
mov	edi, edx
mov	edx, DWORD PTR _pFrom$[ebp]
push	edx
call	_sqlite3BtreeLastPage
add	esp, 4
xor	ecx, ecx
push	ecx
push	eax
push	edi
push	esi
call	__allmul
mov	DWORD PTR _nByte$1[ebp], eax
mov	DWORD PTR _nByte$1[ebp+4], edx
lea	edx, DWORD PTR _nByte$1[ebp]
push	edx
push	11					
mov	eax, DWORD PTR _pFd$[ebp]
push	eax
call	_sqlite3OsFileControl
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 12			
jne	SHORT $LN4@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@sqlite3Btr
jmp	SHORT $copy_finished$8
push	48					
push	0
lea	ecx, DWORD PTR _b$[ebp]
push	ecx
call	_memset
add	esp, 12					
mov	edx, DWORD PTR _pFrom$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _b$[ebp+20], eax
mov	ecx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR _b$[ebp+24], ecx
mov	edx, DWORD PTR _pTo$[ebp]
mov	DWORD PTR _b$[ebp+4], edx
mov	DWORD PTR _b$[ebp+16], 1
push	2147483647				
lea	eax, DWORD PTR _b$[ebp]
push	eax
call	_sqlite3_backup_step
add	esp, 8
lea	ecx, DWORD PTR _b$[ebp]
push	ecx
call	_sqlite3_backup_finish
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Btr
mov	edx, DWORD PTR _pTo$[ebp]
mov	eax, DWORD PTR [edx+4]
movzx	ecx, WORD PTR [eax+22]
and	ecx, -3					
mov	edx, DWORD PTR _pTo$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	WORD PTR [eax+22], cx
jmp	SHORT $copy_finished$8
mov	ecx, DWORD PTR _b$[ebp+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerClearCache
add	esp, 4
mov	edx, DWORD PTR _pFrom$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _pTo$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeGetJournalname PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerJournalname
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3BtreeGetFilename PROC
push	ebp
mov	ebp, esp
push	1
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerFilename
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3BtreeSavepoint PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
je	$LN3@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
cmp	ecx, 2
jne	$LN3@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
mov	edx, DWORD PTR _iSavepoint$[ebp]
push	edx
mov	eax, DWORD PTR _op$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerSavepoint
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3Btr
cmp	DWORD PTR _iSavepoint$[ebp], 0
jge	SHORT $LN1@sqlite3Btr
mov	eax, DWORD PTR _pBt$1[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 8
je	SHORT $LN1@sqlite3Btr
mov	edx, DWORD PTR _pBt$1[ebp]
mov	DWORD PTR [edx+44], 0
mov	eax, DWORD PTR _pBt$1[ebp]
push	eax
call	_newDatabase
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _pBt$1[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR [edx+56]
add	eax, 28					
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	ecx, DWORD PTR _pBt$1[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeLockTable PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
je	SHORT $LN2@sqlite3Btr
movzx	edx, BYTE PTR _isWriteLock$[ebp]
add	edx, 1
mov	BYTE PTR _lockType$1[ebp], dl
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
movzx	ecx, BYTE PTR _lockType$1[ebp]
push	ecx
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_querySharedCacheTableLock
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Btr
movzx	ecx, BYTE PTR _lockType$1[ebp]
push	ecx
mov	edx, DWORD PTR _iTab$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_setSharedCacheTableLock
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSchemaLocked PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
push	1
push	1
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_querySharedCacheTableLock
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSchema PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax+48], 0
jne	SHORT $LN1@sqlite3Btr
cmp	DWORD PTR _nBytes$[ebp], 0
je	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _nBytes$[ebp]
push	ecx
push	0
call	_sqlite3DbMallocZero
add	esp, 8
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+48], eax
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _xFree$[ebp]
mov	DWORD PTR [eax+52], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [eax+48]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeIsInBackup PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+16], 0
je	SHORT $LN3@sqlite3Btr
mov	DWORD PTR tv66[ebp], 1
jmp	SHORT $LN4@sqlite3Btr
mov	DWORD PTR tv66[ebp], 0
mov	eax, DWORD PTR tv66[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeIsInReadTrans PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
je	SHORT $LN3@sqlite3Btr
mov	DWORD PTR tv67[ebp], 1
jmp	SHORT $LN4@sqlite3Btr
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeIsInTrans PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
cmp	ecx, 2
jne	SHORT $LN3@sqlite3Btr
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@sqlite3Btr
mov	DWORD PTR tv68[ebp], 0
mov	eax, DWORD PTR tv68[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCreateTable PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
mov	edx, DWORD PTR _piTable$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_btreeCreateTable
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeBeginStmt PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _iStatement$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerOpenSavepoint
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeRollback PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
cmp	DWORD PTR _tripCode$[ebp], 0
jne	SHORT $LN7@sqlite3Btr
push	0
push	0
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_saveAllCursors
add	esp, 12					
mov	DWORD PTR _tripCode$[ebp], eax
mov	ecx, DWORD PTR _tripCode$[ebp]
mov	DWORD PTR _rc$[ebp], ecx
jmp	SHORT $LN6@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _tripCode$[ebp], 0
je	SHORT $LN5@sqlite3Btr
mov	edx, DWORD PTR _tripCode$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeTripAllCursors
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+8]
cmp	edx, 2
jne	$LN4@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerRollback
add	esp, 4
mov	DWORD PTR _rc2$1[ebp], eax
cmp	DWORD PTR _rc2$1[ebp], 0
je	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _rc2$1[ebp]
mov	DWORD PTR _rc$[ebp], edx
push	0
lea	eax, DWORD PTR _pPage1$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_btreeGetPage
add	esp, 16					
test	eax, eax
jne	SHORT $LN2@sqlite3Btr
mov	edx, DWORD PTR _pPage1$[ebp]
mov	eax, DWORD PTR [edx+56]
add	eax, 28					
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	DWORD PTR _nPage$2[ebp], eax
cmp	DWORD PTR _nPage$2[ebp], 0
jne	SHORT $LN1@sqlite3Btr
lea	ecx, DWORD PTR _nPage$2[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3PagerPagecount
add	esp, 8
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _nPage$2[ebp]
mov	DWORD PTR [ecx+44], edx
mov	eax, DWORD PTR _pPage1$[ebp]
push	eax
call	_releasePage
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [ecx+20], 1
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeClearHasContent
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_btreeEndTransaction
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCommit PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
push	0
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeCommitPhaseOne
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Btr
push	0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeCommitPhaseTwo
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCommitPhaseTwo PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
jne	SHORT $LN3@sqlite3Btr
xor	eax, eax
jmp	SHORT $LN4@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
cmp	ecx, 2
jne	SHORT $LN2@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$2[ebp], eax
mov	ecx, DWORD PTR _pBt$2[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerCommitPhaseTwo
add	esp, 4
mov	DWORD PTR _rc$1[ebp], eax
cmp	DWORD PTR _rc$1[ebp], 0
je	SHORT $LN1@sqlite3Btr
cmp	DWORD PTR _bCleanup$[ebp], 0
jne	SHORT $LN1@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$1[ebp]
jmp	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _pBt$2[ebp]
mov	BYTE PTR [ecx+20], 1
mov	edx, DWORD PTR _pBt$2[ebp]
push	edx
call	_btreeClearHasContent
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_btreeEndTransaction
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeCommitPhaseOne PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
cmp	ecx, 2
jne	$LN4@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pBt$1[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
mov	edx, DWORD PTR _pBt$1[ebp]
movzx	eax, BYTE PTR [edx+17]
test	eax, eax
je	SHORT $LN3@sqlite3Btr
mov	ecx, DWORD PTR _pBt$1[ebp]
push	ecx
call	_autoVacuumCommit
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN5@sqlite3Btr
mov	eax, DWORD PTR _pBt$1[ebp]
movzx	ecx, BYTE PTR [eax+19]
test	ecx, ecx
je	SHORT $LN1@sqlite3Btr
mov	edx, DWORD PTR _pBt$1[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _pBt$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerTruncateImage
add	esp, 8
push	0
mov	eax, DWORD PTR _zMaster$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerCommitPhaseOne
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeBeginTrans PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _pBlock$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
cmp	ecx, 2
je	SHORT $LN34@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+8]
cmp	eax, 1
jne	SHORT $LN35@sqlite3Btr
cmp	DWORD PTR _wrflag$[ebp], 0
jne	SHORT $LN35@sqlite3Btr
jmp	$trans_begun$42
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
and	edx, 1
je	SHORT $LN33@sqlite3Btr
cmp	DWORD PTR _wrflag$[ebp], 0
je	SHORT $LN33@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 8
jmp	$trans_begun$42
cmp	DWORD PTR _wrflag$[ebp], 0
je	SHORT $LN30@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+20]
cmp	ecx, 2
je	SHORT $LN31@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, 64					
je	SHORT $LN32@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+76]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pBlock$[ebp], eax
jmp	SHORT $LN29@sqlite3Btr
cmp	DWORD PTR _wrflag$[ebp], 1
jle	SHORT $LN29@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+72]
mov	DWORD PTR _pIter$2[ebp], edx
jmp	SHORT $LN27@sqlite3Btr
mov	eax, DWORD PTR _pIter$2[ebp]
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR _pIter$2[ebp], ecx
cmp	DWORD PTR _pIter$2[ebp], 0
je	SHORT $LN29@sqlite3Btr
mov	edx, DWORD PTR _pIter$2[ebp]
mov	eax, DWORD PTR [edx]
cmp	eax, DWORD PTR _p$[ebp]
je	SHORT $LN24@sqlite3Btr
mov	ecx, DWORD PTR _pIter$2[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _pBlock$[ebp], eax
jmp	SHORT $LN29@sqlite3Btr
jmp	SHORT $LN26@sqlite3Btr
cmp	DWORD PTR _pBlock$[ebp], 0
je	SHORT $LN23@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 262		
jmp	$trans_begun$42
push	1
push	1
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_querySharedCacheTableLock
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN22@sqlite3Btr
jmp	$trans_begun$42
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, -9					
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+44], 0
jne	SHORT $LN17@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
or	ecx, 8
mov	edx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [edx+22], cx
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN16@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_lockBtree
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN16@sqlite3Btr
jmp	SHORT $LN17@sqlite3Btr
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN15@sqlite3Btr
cmp	DWORD PTR _wrflag$[ebp], 0
je	SHORT $LN15@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, 1
je	SHORT $LN14@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 8
jmp	SHORT $LN15@sqlite3Btr
cmp	DWORD PTR _wrflag$[ebp], 1
jle	SHORT $LN38@sqlite3Btr
mov	DWORD PTR tv163[ebp], 1
jmp	SHORT $LN39@sqlite3Btr
mov	DWORD PTR tv163[ebp], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3TempInMemory
add	esp, 4
push	eax
mov	eax, DWORD PTR tv163[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerBegin
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN15@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_newDatabase
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN19@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
call	_unlockBtreeIfUnused
add	esp, 4
mov	edx, DWORD PTR _rc$[ebp]
and	edx, 255				
cmp	edx, 5
jne	SHORT $LN18@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, BYTE PTR [eax+20]
test	ecx, ecx
jne	SHORT $LN18@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_btreeInvokeBusyHandler
add	esp, 4
test	eax, eax
jne	$LN17@sqlite3Btr
cmp	DWORD PTR _rc$[ebp], 0
jne	$trans_begun$42
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
test	ecx, ecx
jne	SHORT $LN8@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+40]
add	eax, 1
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+40], eax
mov	edx, DWORD PTR _p$[ebp]
movzx	eax, BYTE PTR [edx+9]
test	eax, eax
je	SHORT $LN8@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	BYTE PTR [ecx+36], 1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+72]
mov	DWORD PTR [edx+40], ecx
mov	edx, DWORD PTR _p$[ebp]
add	edx, 28					
mov	eax, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [eax+72], edx
cmp	DWORD PTR _wrflag$[ebp], 0
je	SHORT $LN40@sqlite3Btr
mov	DWORD PTR tv198[ebp], 2
jmp	SHORT $LN41@sqlite3Btr
mov	DWORD PTR tv198[ebp], 1
mov	ecx, DWORD PTR _p$[ebp]
mov	dl, BYTE PTR tv198[ebp]
mov	BYTE PTR [ecx+8], dl
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+8]
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, BYTE PTR [edx+20]
cmp	ecx, eax
jle	SHORT $LN6@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	al, BYTE PTR [edx+8]
mov	BYTE PTR [ecx+20], al
cmp	DWORD PTR _wrflag$[ebp], 0
je	$trans_begun$42
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	DWORD PTR _pPage1$1[ebp], edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+76], ecx
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
and	eax, -33				
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
cmp	DWORD PTR _wrflag$[ebp], 1
jle	SHORT $LN4@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
movzx	eax, WORD PTR [edx+22]
or	eax, 32					
mov	ecx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [ecx+22], ax
mov	edx, 1
imul	eax, edx, 28
mov	ecx, DWORD PTR _pPage1$1[ebp]
add	eax, DWORD PTR [ecx+56]
push	eax
call	_sqlite3Get4byte
add	esp, 4
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+44], eax
je	SHORT $trans_begun$42
mov	eax, DWORD PTR _pPage1$1[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $trans_begun$42
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, 1
imul	edx, ecx, 28
mov	eax, DWORD PTR _pPage1$1[ebp]
add	edx, DWORD PTR [eax+56]
push	edx
call	_sqlite3Put4byte
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3Btr
cmp	DWORD PTR _wrflag$[ebp], 0
je	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+488]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerOpenSavepoint
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeGetAutoVacuum PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+17]
test	eax, eax
jne	SHORT $LN3@sqlite3Btr
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@sqlite3Btr
mov	DWORD PTR tv69[ebp], 0
cmp	DWORD PTR tv69[ebp], 0
je	SHORT $LN9@sqlite3Btr
mov	DWORD PTR tv78[ebp], 0
jmp	SHORT $LN10@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, BYTE PTR [edx+18]
test	eax, eax
jne	SHORT $LN5@sqlite3Btr
mov	DWORD PTR tv74[ebp], 1
jmp	SHORT $LN6@sqlite3Btr
mov	DWORD PTR tv74[ebp], 0
cmp	DWORD PTR tv74[ebp], 0
je	SHORT $LN7@sqlite3Btr
mov	DWORD PTR tv76[ebp], 1
jmp	SHORT $LN8@sqlite3Btr
mov	DWORD PTR tv76[ebp], 2
mov	ecx, DWORD PTR tv76[ebp]
mov	DWORD PTR tv78[ebp], ecx
mov	edx, DWORD PTR tv78[ebp]
mov	DWORD PTR _rc$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSetAutoVacuum PROC
push	ebp
mov	ebp, esp
sub	esp, 24					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	DWORD PTR _rc$[ebp], 0
mov	dl, BYTE PTR _autoVacuum$[ebp]
mov	BYTE PTR _av$[ebp], dl
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
and	edx, 2
je	SHORT $LN2@sqlite3Btr
movzx	eax, BYTE PTR _av$[ebp]
test	eax, eax
je	SHORT $LN5@sqlite3Btr
mov	DWORD PTR tv72[ebp], 1
jmp	SHORT $LN6@sqlite3Btr
mov	DWORD PTR tv72[ebp], 0
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, BYTE PTR [ecx+17]
cmp	DWORD PTR tv72[ebp], edx
je	SHORT $LN2@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 8
jmp	SHORT $LN1@sqlite3Btr
movzx	eax, BYTE PTR _av$[ebp]
test	eax, eax
je	SHORT $LN7@sqlite3Btr
mov	DWORD PTR tv79[ebp], 1
jmp	SHORT $LN8@sqlite3Btr
mov	DWORD PTR tv79[ebp], 0
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dl, BYTE PTR tv79[ebp]
mov	BYTE PTR [ecx+17], dl
movzx	eax, BYTE PTR _av$[ebp]
cmp	eax, 2
jne	SHORT $LN9@sqlite3Btr
mov	DWORD PTR tv84[ebp], 1
jmp	SHORT $LN10@sqlite3Btr
mov	DWORD PTR tv84[ebp], 0
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dl, BYTE PTR tv84[ebp]
mov	BYTE PTR [ecx+18], dl
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeGetReserve PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	edx, DWORD PTR [edx+32]
sub	edx, DWORD PTR [ecx+36]
mov	DWORD PTR _n$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _n$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSecureDelete PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN3@sqlite3Btr
xor	eax, eax
jmp	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
cmp	DWORD PTR _newFlag$[ebp], 0
jl	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
movzx	eax, WORD PTR [edx+22]
and	eax, -5					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	WORD PTR [edx+22], ax
cmp	DWORD PTR _newFlag$[ebp], 0
je	SHORT $LN2@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, WORD PTR [ecx+22]
or	edx, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	WORD PTR [ecx+22], dx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 4
je	SHORT $LN6@sqlite3Btr
mov	DWORD PTR tv87[ebp], 1
jmp	SHORT $LN7@sqlite3Btr
mov	DWORD PTR tv87[ebp], 0
mov	edx, DWORD PTR tv87[ebp]
mov	DWORD PTR _b$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _b$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeLastPage PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_btreePagecount
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3BtreeMaxPageCount PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeEnter
add	esp, 4
mov	ecx, DWORD PTR _mxPage$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerMaxPageCount
add	esp, 8
mov	DWORD PTR _n$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _n$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeGetPageSize PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR [ecx+32]
pop	ebp
ret	0
ENDP
_sqlite3BtreeSetPageSize PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
and	ecx, 2
je	SHORT $LN4@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, 8
jmp	$LN5@sqlite3Btr
cmp	DWORD PTR _nReserve$[ebp], 0
jge	SHORT $LN3@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [eax+32]
sub	edx, DWORD PTR [ecx+36]
mov	DWORD PTR _nReserve$[ebp], edx
cmp	DWORD PTR _pageSize$[ebp], 512		
jl	SHORT $LN2@sqlite3Btr
cmp	DWORD PTR _pageSize$[ebp], 65536	
jg	SHORT $LN2@sqlite3Btr
mov	eax, DWORD PTR _pageSize$[ebp]
sub	eax, 1
and	eax, DWORD PTR _pageSize$[ebp]
jne	SHORT $LN2@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _pageSize$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_freeTempSpace
add	esp, 4
mov	ecx, DWORD PTR _nReserve$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
add	edx, 32					
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerSetPagesize
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
movzx	edx, WORD PTR _nReserve$[ebp]
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+32]
sub	ecx, edx
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+36], ecx
cmp	DWORD PTR _iFix$[ebp], 0
je	SHORT $LN1@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
movzx	ecx, WORD PTR [eax+22]
or	ecx, 2
mov	edx, DWORD PTR _pBt$[ebp]
mov	WORD PTR [edx+22], cx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSyncDisabled PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerNosync
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeLeave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSetPagerFlags PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pgFlags$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerSetFlags
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSetMmapLimit PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _szMmap$[ebp+4]
push	eax
mov	ecx, DWORD PTR _szMmap$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3PagerSetMmapLimit
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeSetCacheSize PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _mxPage$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerSetCachesize
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeClose PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
mov	DWORD PTR _pBt$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pCur$[ebp], ecx
cmp	DWORD PTR _pCur$[ebp], 0
je	SHORT $LN7@sqlite3Btr
mov	edx, DWORD PTR _pCur$[ebp]
mov	DWORD PTR _pTmp$1[ebp], edx
mov	eax, DWORD PTR _pCur$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pCur$[ebp], ecx
mov	edx, DWORD PTR _pTmp$1[ebp]
mov	eax, DWORD PTR [edx]
cmp	eax, DWORD PTR _p$[ebp]
jne	SHORT $LN6@sqlite3Btr
mov	ecx, DWORD PTR _pTmp$1[ebp]
push	ecx
call	_sqlite3BtreeCloseCursor
add	esp, 4
jmp	SHORT $LN8@sqlite3Btr
push	0
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3BtreeRollback
add	esp, 8
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, BYTE PTR [ecx+9]
test	edx, edx
je	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_removeFromSharingList
add	esp, 4
test	eax, eax
je	SHORT $LN5@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerClose
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax+52], 0
je	SHORT $LN3@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [ecx+48], 0
je	SHORT $LN3@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+48]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+52]
call	edx
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+48]
push	ecx
push	0
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_freeTempSpace
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+24], 0
je	SHORT $LN2@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR [eax+20], edx
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR [edx+24], ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3BtreeOpen PROC
push	ebp
mov	ebp, esp
sub	esp, 180				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	DWORD PTR _pBt$[ebp], 0
mov	DWORD PTR _mutexOpen$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _zFilename$[ebp], 0
je	SHORT $LN52@sqlite3Btr
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zFilename$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	SHORT $LN52@sqlite3Btr
mov	DWORD PTR tv69[ebp], 0
jmp	SHORT $LN53@sqlite3Btr
mov	DWORD PTR tv69[ebp], 1
mov	ecx, DWORD PTR tv69[ebp]
mov	DWORD PTR _isTempDb$[ebp], ecx
cmp	DWORD PTR _zFilename$[ebp], 0
je	SHORT $LN54@sqlite3Btr
push	OFFSET $SG93970
mov	edx, DWORD PTR _zFilename$[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
je	SHORT $LN56@sqlite3Btr
cmp	DWORD PTR _isTempDb$[ebp], 0
je	SHORT $LN55@sqlite3Btr
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3TempInMemory
add	esp, 4
test	eax, eax
jne	SHORT $LN56@sqlite3Btr
mov	ecx, DWORD PTR _vfsFlags$[ebp]
and	ecx, 128				
jne	SHORT $LN56@sqlite3Btr
mov	DWORD PTR tv81[ebp], 0
jmp	SHORT $LN57@sqlite3Btr
mov	DWORD PTR tv81[ebp], 1
mov	edx, DWORD PTR tv81[ebp]
mov	DWORD PTR _isMemdb$[ebp], edx
cmp	DWORD PTR _isMemdb$[ebp], 0
je	SHORT $LN49@sqlite3Btr
mov	eax, DWORD PTR _flags$[ebp]
or	eax, 2
mov	DWORD PTR _flags$[ebp], eax
mov	ecx, DWORD PTR _vfsFlags$[ebp]
and	ecx, 256				
je	SHORT $LN48@sqlite3Btr
cmp	DWORD PTR _isMemdb$[ebp], 0
jne	SHORT $LN47@sqlite3Btr
cmp	DWORD PTR _isTempDb$[ebp], 0
je	SHORT $LN48@sqlite3Btr
mov	edx, DWORD PTR _vfsFlags$[ebp]
and	edx, -257				
or	edx, 512				
mov	DWORD PTR _vfsFlags$[ebp], edx
push	44					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN46@sqlite3Btr
mov	eax, 7
jmp	$LN50@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
mov	BYTE PTR [eax+8], 0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+28], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+32], 1
cmp	DWORD PTR _isTempDb$[ebp], 0
jne	$LN45@sqlite3Btr
cmp	DWORD PTR _isMemdb$[ebp], 0
je	SHORT $LN44@sqlite3Btr
mov	eax, DWORD PTR _vfsFlags$[ebp]
and	eax, 64					
je	$LN45@sqlite3Btr
mov	ecx, DWORD PTR _vfsFlags$[ebp]
and	ecx, 131072				
je	$LN45@sqlite3Btr
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+8]
add	eax, 1
mov	DWORD PTR _nFullPathname$3[ebp], eax
mov	ecx, DWORD PTR _nFullPathname$3[ebp]
push	ecx
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _zFullPathname$7[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	BYTE PTR [edx+9], 1
cmp	DWORD PTR _zFullPathname$7[ebp], 0
jne	SHORT $LN42@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	eax, 7
jmp	$LN50@sqlite3Btr
cmp	DWORD PTR _isMemdb$[ebp], 0
je	SHORT $LN41@sqlite3Btr
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
push	eax
mov	edx, DWORD PTR _zFilename$[ebp]
push	edx
mov	eax, DWORD PTR _zFullPathname$7[ebp]
push	eax
call	_memcpy
add	esp, 12					
jmp	SHORT $LN40@sqlite3Btr
mov	ecx, DWORD PTR _zFullPathname$7[ebp]
push	ecx
mov	edx, DWORD PTR _nFullPathname$3[ebp]
push	edx
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsFullPathname
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN40@sqlite3Btr
mov	edx, DWORD PTR _zFullPathname$7[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN50@sqlite3Btr
push	4
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutexOpen$[ebp], eax
mov	ecx, DWORD PTR _mutexOpen$[ebp]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutexShared$4[ebp], eax
mov	edx, DWORD PTR _mutexShared$4[ebp]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _sqlite3SharedCacheList
mov	DWORD PTR _pBt$[ebp], eax
jmp	SHORT $LN38@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+68]
mov	DWORD PTR _pBt$[ebp], edx
cmp	DWORD PTR _pBt$[ebp], 0
je	$LN36@sqlite3Btr
push	0
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerFilename
add	esp, 8
push	eax
mov	edx, DWORD PTR _zFullPathname$7[ebp]
push	edx
call	_strcmp
add	esp, 8
test	eax, eax
jne	$LN35@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerVfs
add	esp, 4
cmp	eax, DWORD PTR _pVfs$[ebp]
jne	$LN35@sqlite3Btr
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+20]
sub	eax, 1
mov	DWORD PTR _iDb$5[ebp], eax
jmp	SHORT $LN34@sqlite3Btr
mov	ecx, DWORD PTR _iDb$5[ebp]
sub	ecx, 1
mov	DWORD PTR _iDb$5[ebp], ecx
cmp	DWORD PTR _iDb$5[ebp], 0
jl	SHORT $LN32@sqlite3Btr
mov	edx, DWORD PTR _iDb$5[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pExisting$2[ebp], edx
cmp	DWORD PTR _pExisting$2[ebp], 0
je	SHORT $LN31@sqlite3Btr
mov	eax, DWORD PTR _pExisting$2[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _pBt$[ebp]
jne	SHORT $LN31@sqlite3Btr
mov	edx, DWORD PTR _mutexShared$4[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _mutexOpen$[ebp]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	ecx, DWORD PTR _zFullPathname$7[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, 19					
jmp	$LN50@sqlite3Btr
jmp	$LN33@sqlite3Btr
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR [edx+64]
add	eax, 1
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+64], eax
jmp	SHORT $LN36@sqlite3Btr
jmp	$LN37@sqlite3Btr
mov	edx, DWORD PTR _mutexShared$4[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _zFullPathname$7[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _pBt$[ebp], 0
jne	$LN30@sqlite3Btr
push	84					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _pBt$[ebp], eax
cmp	DWORD PTR _pBt$[ebp], 0
jne	SHORT $LN29@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 7
jmp	$btree_open_out$62
push	OFFSET _pageReinit
mov	ecx, DWORD PTR _vfsFlags$[ebp]
push	ecx
mov	edx, DWORD PTR _flags$[ebp]
push	edx
push	76					
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
mov	ecx, DWORD PTR _pBt$[ebp]
push	ecx
mov	edx, DWORD PTR _pVfs$[ebp]
push	edx
call	_sqlite3PagerOpen
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN28@sqlite3Btr
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+44]
push	ecx
mov	edx, DWORD PTR [eax+40]
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerSetMmapLimit
add	esp, 12					
lea	edx, DWORD PTR _zDbHeader$[ebp]
push	edx
push	100					
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerReadFileheader
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN27@sqlite3Btr
jmp	$btree_open_out$62
mov	edx, DWORD PTR _pBt$[ebp]
mov	al, BYTE PTR _flags$[ebp]
mov	BYTE PTR [edx+16], al
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
push	OFFSET _btreeInvokeBusyHandler
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerSetBusyhandler
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [eax+4], ecx
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [eax+12], 0
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerIsreadonly
add	esp, 4
movzx	eax, al
test	eax, eax
je	SHORT $LN26@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
or	edx, 1
mov	eax, DWORD PTR _pBt$[ebp]
mov	WORD PTR [eax+22], dx
mov	ecx, 1
shl	ecx, 4
movzx	edx, BYTE PTR _zDbHeader$[ebp+ecx]
shl	edx, 8
mov	eax, 1
imul	ecx, eax, 17
movzx	eax, BYTE PTR _zDbHeader$[ebp+ecx]
shl	eax, 16					
or	edx, eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+32], 512			
jb	SHORT $LN24@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax+32], 65536		
ja	SHORT $LN24@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx+32]
sub	edx, 1
mov	eax, DWORD PTR _pBt$[ebp]
and	edx, DWORD PTR [eax+32]
je	SHORT $LN25@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+32], 0
cmp	DWORD PTR _zFilename$[ebp], 0
je	SHORT $LN23@sqlite3Btr
cmp	DWORD PTR _isMemdb$[ebp], 0
jne	SHORT $LN23@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [edx+17], 0
mov	eax, DWORD PTR _pBt$[ebp]
mov	BYTE PTR [eax+18], 0
mov	BYTE PTR _nReserve$[ebp], 0
jmp	$LN22@sqlite3Btr
mov	ecx, 1
imul	edx, ecx, 20
mov	al, BYTE PTR _zDbHeader$[ebp+edx]
mov	BYTE PTR _nReserve$[ebp], al
mov	ecx, DWORD PTR _pBt$[ebp]
movzx	edx, WORD PTR [ecx+22]
or	edx, 2
mov	eax, DWORD PTR _pBt$[ebp]
mov	WORD PTR [eax+22], dx
mov	ecx, 1
imul	edx, ecx, 52
lea	eax, DWORD PTR _zDbHeader$[ebp+edx]
push	eax
call	_sqlite3Get4byte
add	esp, 4
test	eax, eax
je	SHORT $LN58@sqlite3Btr
mov	DWORD PTR tv279[ebp], 1
jmp	SHORT $LN59@sqlite3Btr
mov	DWORD PTR tv279[ebp], 0
mov	ecx, DWORD PTR _pBt$[ebp]
mov	dl, BYTE PTR tv279[ebp]
mov	BYTE PTR [ecx+17], dl
mov	eax, 1
shl	eax, 6
lea	ecx, DWORD PTR _zDbHeader$[ebp+eax]
push	ecx
call	_sqlite3Get4byte
add	esp, 4
test	eax, eax
je	SHORT $LN60@sqlite3Btr
mov	DWORD PTR tv287[ebp], 1
jmp	SHORT $LN61@sqlite3Btr
mov	DWORD PTR tv287[ebp], 0
mov	edx, DWORD PTR _pBt$[ebp]
mov	al, BYTE PTR tv287[ebp]
mov	BYTE PTR [edx+18], al
movzx	ecx, BYTE PTR _nReserve$[ebp]
push	ecx
mov	edx, DWORD PTR _pBt$[ebp]
add	edx, 32					
push	edx
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3PagerSetPagesize
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN21@sqlite3Btr
jmp	$btree_open_out$62
movzx	edx, BYTE PTR _nReserve$[ebp]
mov	eax, DWORD PTR _pBt$[ebp]
mov	ecx, DWORD PTR [eax+32]
sub	ecx, edx
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+36], ecx
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
je	$LN30@sqlite3Btr
mov	edx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [edx+64], 1
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutexShared$1[ebp], eax
mov	eax, 1
test	eax, eax
je	SHORT $LN19@sqlite3Btr
cmp	DWORD PTR _sqlite3Config+4, 0
je	SHORT $LN19@sqlite3Btr
push	0
call	_sqlite3MutexAlloc
add	esp, 4
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR [ecx+56], eax
mov	edx, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [edx+56], 0
jne	SHORT $LN19@sqlite3Btr
mov	DWORD PTR _rc$[ebp], 7
mov	eax, DWORD PTR _db$[ebp]
mov	BYTE PTR [eax+64], 0
jmp	$btree_open_out$62
mov	ecx, DWORD PTR _mutexShared$1[ebp]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _pBt$[ebp]
mov	eax, DWORD PTR _sqlite3SharedCacheList
mov	DWORD PTR [edx+68], eax
mov	ecx, DWORD PTR _pBt$[ebp]
mov	DWORD PTR _sqlite3SharedCacheList, ecx
mov	edx, DWORD PTR _mutexShared$1[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
je	$LN17@sqlite3Btr
mov	DWORD PTR _i$6[ebp], 0
jmp	SHORT $LN16@sqlite3Btr
mov	edx, DWORD PTR _i$6[ebp]
add	edx, 1
mov	DWORD PTR _i$6[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$6[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	$LN17@sqlite3Btr
mov	edx, DWORD PTR _i$6[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+4]
mov	DWORD PTR _pSib$8[ebp], edx
cmp	DWORD PTR _pSib$8[ebp], 0
je	$LN13@sqlite3Btr
mov	eax, DWORD PTR _pSib$8[ebp]
movzx	ecx, BYTE PTR [eax+9]
test	ecx, ecx
je	$LN13@sqlite3Btr
mov	edx, DWORD PTR _pSib$8[ebp]
cmp	DWORD PTR [edx+24], 0
je	SHORT $LN11@sqlite3Btr
mov	eax, DWORD PTR _pSib$8[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _pSib$8[ebp], ecx
jmp	SHORT $LN12@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pSib$8[ebp]
mov	ecx, DWORD PTR [edx+4]
cmp	ecx, DWORD PTR [eax+4]
jae	SHORT $LN8@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pSib$8[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], 0
mov	edx, DWORD PTR _pSib$8[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+24], eax
jmp	SHORT $LN9@sqlite3Btr
mov	ecx, DWORD PTR _pSib$8[ebp]
cmp	DWORD PTR [ecx+20], 0
je	SHORT $LN7@sqlite3Btr
mov	edx, DWORD PTR _pSib$8[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [eax+4]
cmp	edx, DWORD PTR [ecx+4]
jae	SHORT $LN7@sqlite3Btr
mov	eax, DWORD PTR _pSib$8[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pSib$8[ebp], ecx
jmp	SHORT $LN8@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pSib$8[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR [edx+20], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pSib$8[ebp]
mov	DWORD PTR [edx+24], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+20], 0
je	SHORT $LN6@sqlite3Btr
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR _pSib$8[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+20], eax
jmp	SHORT $LN17@sqlite3Btr
jmp	$LN15@sqlite3Btr
mov	ecx, DWORD PTR _ppBtree$[ebp]
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@sqlite3Btr
cmp	DWORD PTR _pBt$[ebp], 0
je	SHORT $LN4@sqlite3Btr
mov	eax, DWORD PTR _pBt$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN4@sqlite3Btr
mov	ecx, DWORD PTR _pBt$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3PagerClose
add	esp, 4
mov	eax, DWORD PTR _pBt$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _ppBtree$[ebp]
mov	DWORD PTR [edx], 0
jmp	SHORT $LN3@sqlite3Btr
push	0
push	0
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3BtreeSchema
add	esp, 12					
test	eax, eax
jne	SHORT $LN3@sqlite3Btr
push	2000					
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3PagerSetCachesize
add	esp, 8
cmp	DWORD PTR _mutexOpen$[ebp], 0
je	SHORT $LN1@sqlite3Btr
mov	ecx, DWORD PTR _mutexOpen$[ebp]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3HashClear PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _elem$[ebp], ecx
mov	edx, DWORD PTR _pH$[ebp]
mov	DWORD PTR [edx+8], 0
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_free
add	esp, 4
mov	edx, DWORD PTR _pH$[ebp]
mov	DWORD PTR [edx+12], 0
mov	eax, DWORD PTR _pH$[ebp]
mov	DWORD PTR [eax], 0
cmp	DWORD PTR _elem$[ebp], 0
je	SHORT $LN1@sqlite3Has
mov	ecx, DWORD PTR _elem$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _next_elem$1[ebp], edx
mov	eax, DWORD PTR _elem$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _next_elem$1[ebp]
mov	DWORD PTR _elem$[ebp], ecx
jmp	SHORT $LN2@sqlite3Has
mov	edx, DWORD PTR _pH$[ebp]
mov	DWORD PTR [edx+4], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3HashFind PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN2@sqlite3Has
mov	ecx, DWORD PTR _nKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
call	_strHash
add	esp, 8
mov	ecx, DWORD PTR _pH$[ebp]
xor	edx, edx
div	DWORD PTR [ecx]
mov	DWORD PTR _h$[ebp], edx
jmp	SHORT $LN1@sqlite3Has
mov	DWORD PTR _h$[ebp], 0
mov	edx, DWORD PTR _h$[ebp]
push	edx
mov	eax, DWORD PTR _nKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pH$[ebp]
push	edx
call	_findElementGivenHash
add	esp, 16					
mov	DWORD PTR _elem$[ebp], eax
cmp	DWORD PTR _elem$[ebp], 0
je	SHORT $LN5@sqlite3Has
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR tv78[ebp], ecx
jmp	SHORT $LN6@sqlite3Has
mov	DWORD PTR tv78[ebp], 0
mov	eax, DWORD PTR tv78[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3HashInsert PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN11@sqlite3Has
mov	ecx, DWORD PTR _nKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
call	_strHash
add	esp, 8
mov	ecx, DWORD PTR _pH$[ebp]
xor	edx, edx
div	DWORD PTR [ecx]
mov	DWORD PTR _h$[ebp], edx
jmp	SHORT $LN10@sqlite3Has
mov	DWORD PTR _h$[ebp], 0
mov	edx, DWORD PTR _h$[ebp]
push	edx
mov	eax, DWORD PTR _nKey$[ebp]
push	eax
mov	ecx, DWORD PTR _pKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pH$[ebp]
push	edx
call	_findElementGivenHash
add	esp, 16					
mov	DWORD PTR _elem$[ebp], eax
cmp	DWORD PTR _elem$[ebp], 0
je	SHORT $LN9@sqlite3Has
mov	eax, DWORD PTR _elem$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _old_data$1[ebp], ecx
cmp	DWORD PTR _data$[ebp], 0
jne	SHORT $LN8@sqlite3Has
mov	edx, DWORD PTR _h$[ebp]
push	edx
mov	eax, DWORD PTR _elem$[ebp]
push	eax
mov	ecx, DWORD PTR _pH$[ebp]
push	ecx
call	_removeElementGivenHash
add	esp, 12					
jmp	SHORT $LN7@sqlite3Has
mov	edx, DWORD PTR _elem$[ebp]
mov	eax, DWORD PTR _data$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _elem$[ebp]
mov	edx, DWORD PTR _pKey$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _old_data$1[ebp]
jmp	$LN12@sqlite3Has
cmp	DWORD PTR _data$[ebp], 0
jne	SHORT $LN6@sqlite3Has
xor	eax, eax
jmp	$LN12@sqlite3Has
push	20					
call	_sqlite3Malloc
add	esp, 4
mov	DWORD PTR _new_elem$[ebp], eax
cmp	DWORD PTR _new_elem$[ebp], 0
jne	SHORT $LN5@sqlite3Has
mov	eax, DWORD PTR _data$[ebp]
jmp	$LN12@sqlite3Has
mov	eax, DWORD PTR _new_elem$[ebp]
mov	ecx, DWORD PTR _pKey$[ebp]
mov	DWORD PTR [eax+12], ecx
mov	edx, DWORD PTR _new_elem$[ebp]
mov	eax, DWORD PTR _nKey$[ebp]
mov	DWORD PTR [edx+16], eax
mov	ecx, DWORD PTR _new_elem$[ebp]
mov	edx, DWORD PTR _data$[ebp]
mov	DWORD PTR [ecx+8], edx
mov	eax, DWORD PTR _pH$[ebp]
mov	ecx, DWORD PTR [eax+4]
add	ecx, 1
mov	edx, DWORD PTR _pH$[ebp]
mov	DWORD PTR [edx+4], ecx
mov	eax, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [eax+4], 10			
jb	SHORT $LN4@sqlite3Has
mov	ecx, DWORD PTR _pH$[ebp]
mov	edx, DWORD PTR [ecx]
shl	edx, 1
mov	eax, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [eax+4], edx
jbe	SHORT $LN4@sqlite3Has
mov	ecx, DWORD PTR _pH$[ebp]
mov	edx, DWORD PTR [ecx+4]
shl	edx, 1
push	edx
mov	eax, DWORD PTR _pH$[ebp]
push	eax
call	_rehash
add	esp, 8
test	eax, eax
je	SHORT $LN4@sqlite3Has
mov	ecx, DWORD PTR _nKey$[ebp]
push	ecx
mov	edx, DWORD PTR _pKey$[ebp]
push	edx
call	_strHash
add	esp, 8
mov	ecx, DWORD PTR _pH$[ebp]
xor	edx, edx
div	DWORD PTR [ecx]
mov	DWORD PTR _h$[ebp], edx
mov	edx, DWORD PTR _pH$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN2@sqlite3Has
mov	eax, DWORD PTR _new_elem$[ebp]
push	eax
mov	ecx, DWORD PTR _pH$[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	eax, DWORD PTR _h$[ebp]
lea	ecx, DWORD PTR [edx+eax*8]
push	ecx
mov	edx, DWORD PTR _pH$[ebp]
push	edx
call	_insertElement
add	esp, 12					
jmp	SHORT $LN1@sqlite3Has
mov	eax, DWORD PTR _new_elem$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _pH$[ebp]
push	ecx
call	_insertElement
add	esp, 12					
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3HashInit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+8], 0
mov	ecx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [ecx+4], 0
mov	edx, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _pNew$[ebp]
mov	DWORD PTR [eax+12], 0
pop	ebp
ret	0
ENDP
_sqlite3_vtab_on_conflict PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+68]
movzx	eax, BYTE PTR ?aMap@?1??sqlite3_vtab_on_conflict@@9@9[ecx-1]
pop	ebp
ret	0
ENDP
_sqlite3_vtab_config PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
lea	edx, DWORD PTR _op$[ebp+4]
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _op$[ebp]
mov	DWORD PTR tv67[ebp], eax
cmp	DWORD PTR tv67[ebp], 1
je	SHORT $LN5@sqlite3_vt
jmp	SHORT $LN2@sqlite3_vt
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+316]
mov	DWORD PTR _p$1[ebp], edx
cmp	DWORD PTR _p$1[ebp], 0
jne	SHORT $LN4@sqlite3_vt
push	109555					
call	_sqlite3MisuseError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@sqlite3_vt
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _p$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR _ap$[ebp]
mov	cl, BYTE PTR [eax-4]
mov	BYTE PTR [edx+16], cl
jmp	SHORT $LN6@sqlite3_vt
push	109563					
call	_sqlite3MisuseError
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN1@sqlite3_vt
push	0
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_wal_checkpoint_v2 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _iDb$[ebp], 10		
cmp	DWORD PTR _pnLog$[ebp], 0
je	SHORT $LN7@sqlite3_wa
mov	eax, DWORD PTR _pnLog$[ebp]
mov	DWORD PTR [eax], -1
cmp	DWORD PTR _pnCkpt$[ebp], 0
je	SHORT $LN6@sqlite3_wa
mov	ecx, DWORD PTR _pnCkpt$[ebp]
mov	DWORD PTR [ecx], -1
cmp	DWORD PTR _eMode$[ebp], 0
jl	SHORT $LN4@sqlite3_wa
cmp	DWORD PTR _eMode$[ebp], 2
jle	SHORT $LN5@sqlite3_wa
mov	eax, 21					
jmp	$LN8@sqlite3_wa
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _zDb$[ebp], 0
je	SHORT $LN3@sqlite3_wa
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zDb$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	SHORT $LN3@sqlite3_wa
mov	edx, DWORD PTR _zDb$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindDbName
add	esp, 8
mov	DWORD PTR _iDb$[ebp], eax
cmp	DWORD PTR _iDb$[ebp], 0
jge	SHORT $LN2@sqlite3_wa
mov	DWORD PTR _rc$[ebp], 1
mov	ecx, DWORD PTR _zDb$[ebp]
push	ecx
push	OFFSET $SG121177
push	1
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 16					
jmp	SHORT $LN1@sqlite3_wa
mov	eax, DWORD PTR _pnCkpt$[ebp]
push	eax
mov	ecx, DWORD PTR _pnLog$[ebp]
push	ecx
mov	edx, DWORD PTR _eMode$[ebp]
push	edx
mov	eax, DWORD PTR _iDb$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Checkpoint
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
push	0
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_wal_checkpoint PROC
push	ebp
mov	ebp, esp
push	0
push	0
push	0
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_wal_checkpoint_v2
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_wal_autocheckpoint PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _nFrame$[ebp], 0
jle	SHORT $LN2@sqlite3_wa
mov	eax, DWORD PTR _nFrame$[ebp]
push	eax
push	OFFSET _sqlite3WalDefaultHook
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_wal_hook
add	esp, 12					
jmp	SHORT $LN1@sqlite3_wa
push	0
push	0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_wal_hook
add	esp, 12					
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_wal_hook PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+208]
mov	DWORD PTR _pRet$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _xCallback$[ebp]
mov	DWORD PTR [ecx+204], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+208], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_log PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _sqlite3Config+252, 0
je	SHORT $LN2@sqlite3_lo
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _iErrCode$[ebp]
push	eax
call	_renderLogMsg
add	esp, 12					
mov	DWORD PTR _ap$[ebp], 0
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_strglob PROC
push	ebp
mov	ebp, esp
push	ecx
push	0
push	OFFSET _globInfo
mov	eax, DWORD PTR _zString$[ebp]
push	eax
mov	ecx, DWORD PTR _zGlobPattern$[ebp]
push	ecx
call	_patternCompare
add	esp, 16					
test	eax, eax
jne	SHORT $LN3@sqlite3_st
mov	DWORD PTR tv70[ebp], 1
jmp	SHORT $LN4@sqlite3_st
mov	DWORD PTR tv70[ebp], 0
mov	eax, DWORD PTR tv70[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_strnicmp PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _zLeft$[ebp]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _zRight$[ebp]
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _N$[ebp]
mov	DWORD PTR tv66[ebp], edx
mov	eax, DWORD PTR _N$[ebp]
sub	eax, 1
mov	DWORD PTR _N$[ebp], eax
cmp	DWORD PTR tv66[ebp], 0
jle	SHORT $LN1@sqlite3_st
mov	ecx, DWORD PTR _a$[ebp]
movzx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN1@sqlite3_st
mov	eax, DWORD PTR _a$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3UpperToLower[ecx]
mov	eax, DWORD PTR _b$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	eax, BYTE PTR _sqlite3UpperToLower[ecx]
cmp	edx, eax
jne	SHORT $LN1@sqlite3_st
mov	ecx, DWORD PTR _a$[ebp]
add	ecx, 1
mov	DWORD PTR _a$[ebp], ecx
mov	edx, DWORD PTR _b$[ebp]
add	edx, 1
mov	DWORD PTR _b$[ebp], edx
jmp	SHORT $LN2@sqlite3_st
cmp	DWORD PTR _N$[ebp], 0
jge	SHORT $LN5@sqlite3_st
mov	DWORD PTR tv90[ebp], 0
jmp	SHORT $LN6@sqlite3_st
mov	eax, DWORD PTR _a$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3UpperToLower[ecx]
mov	eax, DWORD PTR _b$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	eax, BYTE PTR _sqlite3UpperToLower[ecx]
sub	edx, eax
mov	DWORD PTR tv90[ebp], edx
mov	eax, DWORD PTR tv90[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_stricmp PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zLeft$[ebp]
mov	DWORD PTR _a$[ebp], eax
mov	ecx, DWORD PTR _zRight$[ebp]
mov	DWORD PTR _b$[ebp], ecx
mov	edx, DWORD PTR _a$[ebp]
movzx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN1@sqlite3_st
mov	ecx, DWORD PTR _a$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3UpperToLower[edx]
mov	ecx, DWORD PTR _b$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[edx]
cmp	eax, ecx
jne	SHORT $LN1@sqlite3_st
mov	edx, DWORD PTR _a$[ebp]
add	edx, 1
mov	DWORD PTR _a$[ebp], edx
mov	eax, DWORD PTR _b$[ebp]
add	eax, 1
mov	DWORD PTR _b$[ebp], eax
jmp	SHORT $LN2@sqlite3_st
mov	ecx, DWORD PTR _a$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3UpperToLower[edx]
mov	ecx, DWORD PTR _b$[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	ecx, BYTE PTR _sqlite3UpperToLower[edx]
sub	eax, ecx
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_backup_pagecount PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+36]
pop	ebp
ret	0
ENDP
_sqlite3_backup_remaining PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+32]
pop	ebp
ret	0
ENDP
_sqlite3_backup_finish PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN8@sqlite3_ba
xor	eax, eax
jmp	$LN9@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	DWORD PTR _pSrcDb$[ebp], ecx
mov	edx, DWORD PTR _pSrcDb$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3BtreeEnter
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN7@sqlite3_ba
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN6@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR [eax+16]
sub	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	DWORD PTR [eax+16], ecx
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+40], 0
je	SHORT $LN5@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerBackupPtr
add	esp, 4
mov	DWORD PTR _pp$[ebp], eax
mov	ecx, DWORD PTR _pp$[ebp]
mov	edx, DWORD PTR [ecx]
cmp	edx, DWORD PTR _p$[ebp]
je	SHORT $LN3@sqlite3_ba
mov	eax, DWORD PTR _pp$[ebp]
mov	ecx, DWORD PTR [eax]
add	ecx, 44					
mov	DWORD PTR _pp$[ebp], ecx
jmp	SHORT $LN4@sqlite3_ba
mov	edx, DWORD PTR _pp$[ebp]
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+44]
mov	DWORD PTR [edx], ecx
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeRollback
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+28], 101			
jne	SHORT $LN11@sqlite3_ba
mov	DWORD PTR tv132[ebp], 0
jmp	SHORT $LN12@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+28]
mov	DWORD PTR tv132[ebp], eax
mov	ecx, DWORD PTR tv132[ebp]
mov	DWORD PTR _rc$[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN2@sqlite3_ba
push	0
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_sqlite3LeaveMutexAndCloseZombie
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN1@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_sqlite3_free
add	esp, 4
mov	eax, DWORD PTR _pSrcDb$[ebp]
push	eax
call	_sqlite3LeaveMutexAndCloseZombie
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_backup_step PROC
push	ebp
mov	ebp, esp
sub	esp, 120				
push	esi
mov	DWORD PTR _pgszSrc$[ebp], 0
mov	DWORD PTR _pgszDest$[ebp], 0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+20]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx], 0
je	SHORT $LN46@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+28]
mov	DWORD PTR _rc$[ebp], ecx
mov	edx, DWORD PTR _rc$[ebp]
push	edx
call	_isFatalError
add	esp, 4
test	eax, eax
jne	$LN45@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pSrcPager$9[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pDestPager$18[ebp], eax
mov	DWORD PTR _nSrcPage$19[ebp], -1
mov	DWORD PTR _bCloseTrans$7[ebp], 0
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN44@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR [eax+4]
movzx	edx, BYTE PTR [ecx+20]
cmp	edx, 2
jne	SHORT $LN44@sqlite3_ba
mov	DWORD PTR _rc$[ebp], 5
jmp	SHORT $LN43@sqlite3_ba
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN42@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN42@sqlite3_ba
push	2
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN42@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+12], 1
mov	ecx, DWORD PTR _p$[ebp]
add	ecx, 8
push	ecx
push	1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeGetMeta
add	esp, 12					
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN41@sqlite3_ba
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3BtreeIsInReadTrans
add	esp, 4
test	eax, eax
jne	SHORT $LN41@sqlite3_ba
push	0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3BtreeBeginTrans
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _bCloseTrans$7[ebp], 1
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR _pgszSrc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeGetPageSize
add	esp, 4
mov	DWORD PTR _pgszDest$[ebp], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
push	eax
call	_sqlite3PagerGetJournalMode
add	esp, 4
mov	DWORD PTR _destMode$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN40@sqlite3_ba
cmp	DWORD PTR _destMode$[ebp], 5
jne	SHORT $LN40@sqlite3_ba
mov	edx, DWORD PTR _pgszSrc$[ebp]
cmp	edx, DWORD PTR _pgszDest$[ebp]
je	SHORT $LN40@sqlite3_ba
mov	DWORD PTR _rc$[ebp], 8
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3BtreeLastPage
add	esp, 4
mov	DWORD PTR _nSrcPage$19[ebp], eax
mov	DWORD PTR _ii$15[ebp], 0
jmp	SHORT $LN39@sqlite3_ba
mov	edx, DWORD PTR _ii$15[ebp]
add	edx, 1
mov	DWORD PTR _ii$15[ebp], edx
cmp	DWORD PTR _nPage$[ebp], 0
jl	SHORT $LN36@sqlite3_ba
mov	eax, DWORD PTR _ii$15[ebp]
cmp	eax, DWORD PTR _nPage$[ebp]
jge	$LN37@sqlite3_ba
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+16]
cmp	edx, DWORD PTR _nSrcPage$19[ebp]
ja	$LN37@sqlite3_ba
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN37@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _iSrcPg$14[ebp], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _iSrcPg$14[ebp], eax
je	SHORT $LN35@sqlite3_ba
push	2
lea	edx, DWORD PTR _pSrcPg$12[ebp]
push	edx
mov	eax, DWORD PTR _iSrcPg$14[ebp]
push	eax
mov	ecx, DWORD PTR _pSrcPager$9[ebp]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN35@sqlite3_ba
push	0
mov	edx, DWORD PTR _pSrcPg$12[ebp]
push	edx
call	_sqlite3PagerGetData
add	esp, 4
push	eax
mov	eax, DWORD PTR _iSrcPg$14[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_backupOnePage
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _pSrcPg$12[ebp]
push	edx
call	_sqlite3PagerUnref
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+16]
add	ecx, 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+16], ecx
jmp	$LN38@sqlite3_ba
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN33@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _nSrcPage$19[ebp]
mov	DWORD PTR [eax+36], ecx
mov	edx, DWORD PTR _nSrcPage$19[ebp]
add	edx, 1
mov	eax, DWORD PTR _p$[ebp]
sub	edx, DWORD PTR [eax+16]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+32], edx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+16]
cmp	eax, DWORD PTR _nSrcPage$19[ebp]
jbe	SHORT $LN32@sqlite3_ba
mov	DWORD PTR _rc$[ebp], 101		
jmp	SHORT $LN33@sqlite3_ba
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+40], 0
jne	SHORT $LN33@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_attachBackupObject
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 101		
jne	$LN29@sqlite3_ba
cmp	DWORD PTR _nSrcPage$19[ebp], 0
jne	SHORT $LN28@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeNewDb
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _nSrcPage$19[ebp], 1
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN26@sqlite3_ba
cmp	DWORD PTR _rc$[ebp], 101		
jne	SHORT $LN27@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+8]
add	eax, 1
push	eax
push	1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
call	_sqlite3BtreeUpdateMeta
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN25@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN24@sqlite3_ba
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ResetAllSchemasOfConnection
add	esp, 4
cmp	DWORD PTR _destMode$[ebp], 5
jne	SHORT $LN25@sqlite3_ba
push	2
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
call	_sqlite3BtreeSetVersion
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN29@sqlite3_ba
mov	edx, DWORD PTR _pgszSrc$[ebp]
cmp	edx, DWORD PTR _pgszDest$[ebp]
jge	SHORT $LN21@sqlite3_ba
mov	eax, DWORD PTR _pgszDest$[ebp]
cdq
idiv	DWORD PTR _pgszSrc$[ebp]
mov	DWORD PTR _ratio$11[ebp], eax
mov	eax, DWORD PTR _ratio$11[ebp]
mov	ecx, DWORD PTR _nSrcPage$19[ebp]
lea	eax, DWORD PTR [ecx+eax-1]
cdq
idiv	DWORD PTR _ratio$11[ebp]
mov	DWORD PTR _nDestTruncate$17[ebp], eax
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _nDestTruncate$17[ebp], eax
jne	SHORT $LN20@sqlite3_ba
mov	edx, DWORD PTR _nDestTruncate$17[ebp]
sub	edx, 1
mov	DWORD PTR _nDestTruncate$17[ebp], edx
jmp	SHORT $LN19@sqlite3_ba
mov	eax, DWORD PTR _pgszSrc$[ebp]
cdq
idiv	DWORD PTR _pgszDest$[ebp]
imul	eax, DWORD PTR _nSrcPage$19[ebp]
mov	DWORD PTR _nDestTruncate$17[ebp], eax
mov	eax, DWORD PTR _pgszSrc$[ebp]
cmp	eax, DWORD PTR _pgszDest$[ebp]
jge	$LN18@sqlite3_ba
mov	eax, DWORD PTR _pgszSrc$[ebp]
cdq
mov	ecx, eax
mov	esi, edx
mov	eax, DWORD PTR _nSrcPage$19[ebp]
cdq
push	edx
push	eax
push	esi
push	ecx
call	__allmul
mov	DWORD PTR _iSize$2[ebp], eax
mov	DWORD PTR _iSize$2[ebp+4], edx
mov	edx, DWORD PTR _pDestPager$18[ebp]
push	edx
call	_sqlite3PagerFile
add	esp, 4
mov	DWORD PTR _pFile$8[ebp], eax
lea	eax, DWORD PTR _nDstPage$6[ebp]
push	eax
mov	ecx, DWORD PTR _pDestPager$18[ebp]
push	ecx
call	_sqlite3PagerPagecount
add	esp, 8
mov	edx, DWORD PTR _nDestTruncate$17[ebp]
mov	DWORD PTR _iPg$16[ebp], edx
jmp	SHORT $LN17@sqlite3_ba
mov	eax, DWORD PTR _iPg$16[ebp]
add	eax, 1
mov	DWORD PTR _iPg$16[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN15@sqlite3_ba
mov	ecx, DWORD PTR _iPg$16[ebp]
cmp	ecx, DWORD PTR _nDstPage$6[ebp]
ja	SHORT $LN15@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+4]
mov	eax, DWORD PTR _sqlite3PendingByte
xor	edx, edx
div	DWORD PTR [ecx+32]
add	eax, 1
cmp	DWORD PTR _iPg$16[ebp], eax
je	SHORT $LN14@sqlite3_ba
push	0
lea	edx, DWORD PTR _pPg$10[ebp]
push	edx
mov	eax, DWORD PTR _iPg$16[ebp]
push	eax
mov	ecx, DWORD PTR _pDestPager$18[ebp]
push	ecx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN14@sqlite3_ba
mov	edx, DWORD PTR _pPg$10[ebp]
push	edx
call	_sqlite3PagerWrite
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pPg$10[ebp]
push	eax
call	_sqlite3PagerUnref
add	esp, 4
jmp	SHORT $LN16@sqlite3_ba
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN12@sqlite3_ba
push	1
push	0
mov	ecx, DWORD PTR _pDestPager$18[ebp]
push	ecx
call	_sqlite3PagerCommitPhaseOne
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _sqlite3PendingByte
add	eax, DWORD PTR _pgszDest$[ebp]
cdq
mov	DWORD PTR tv521[ebp], eax
mov	DWORD PTR tv521[ebp+4], edx
mov	edx, DWORD PTR tv521[ebp+4]
cmp	edx, DWORD PTR _iSize$2[ebp+4]
jg	SHORT $LN49@sqlite3_ba
jl	SHORT $LN51@sqlite3_ba
mov	eax, DWORD PTR tv521[ebp]
cmp	eax, DWORD PTR _iSize$2[ebp]
jae	SHORT $LN49@sqlite3_ba
mov	eax, DWORD PTR _sqlite3PendingByte
add	eax, DWORD PTR _pgszDest$[ebp]
cdq
mov	DWORD PTR tv280[ebp], eax
mov	DWORD PTR tv280[ebp+4], edx
jmp	SHORT $LN50@sqlite3_ba
mov	ecx, DWORD PTR _iSize$2[ebp]
mov	DWORD PTR tv280[ebp], ecx
mov	edx, DWORD PTR _iSize$2[ebp+4]
mov	DWORD PTR tv280[ebp+4], edx
mov	eax, DWORD PTR tv280[ebp]
mov	DWORD PTR _iEnd$1[ebp], eax
mov	ecx, DWORD PTR tv280[ebp+4]
mov	DWORD PTR _iEnd$1[ebp+4], ecx
mov	eax, DWORD PTR _sqlite3PendingByte
add	eax, DWORD PTR _pgszSrc$[ebp]
cdq
mov	DWORD PTR _iOff$3[ebp], eax
mov	DWORD PTR _iOff$3[ebp+4], edx
jmp	SHORT $LN11@sqlite3_ba
mov	eax, DWORD PTR _pgszSrc$[ebp]
cdq
add	eax, DWORD PTR _iOff$3[ebp]
adc	edx, DWORD PTR _iOff$3[ebp+4]
mov	DWORD PTR _iOff$3[ebp], eax
mov	DWORD PTR _iOff$3[ebp+4], edx
cmp	DWORD PTR _rc$[ebp], 0
jne	$LN9@sqlite3_ba
mov	edx, DWORD PTR _iOff$3[ebp+4]
cmp	edx, DWORD PTR _iEnd$1[ebp+4]
jg	$LN9@sqlite3_ba
jl	SHORT $LN52@sqlite3_ba
mov	eax, DWORD PTR _iOff$3[ebp]
cmp	eax, DWORD PTR _iEnd$1[ebp]
jae	$LN9@sqlite3_ba
mov	DWORD PTR _pSrcPg$13[ebp], 0
mov	eax, DWORD PTR _pgszSrc$[ebp]
cdq
push	edx
push	eax
mov	ecx, DWORD PTR _iOff$3[ebp+4]
push	ecx
mov	edx, DWORD PTR _iOff$3[ebp]
push	edx
call	__alldiv
add	eax, 1
adc	edx, 0
mov	DWORD PTR _iSrcPg$5[ebp], eax
push	0
lea	eax, DWORD PTR _pSrcPg$13[ebp]
push	eax
mov	ecx, DWORD PTR _iSrcPg$5[ebp]
push	ecx
mov	edx, DWORD PTR _pSrcPager$9[ebp]
push	edx
call	_sqlite3PagerAcquire
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN8@sqlite3_ba
mov	eax, DWORD PTR _pSrcPg$13[ebp]
push	eax
call	_sqlite3PagerGetData
add	esp, 4
mov	DWORD PTR _zData$4[ebp], eax
mov	ecx, DWORD PTR _iOff$3[ebp+4]
push	ecx
mov	edx, DWORD PTR _iOff$3[ebp]
push	edx
mov	eax, DWORD PTR _pgszSrc$[ebp]
push	eax
mov	ecx, DWORD PTR _zData$4[ebp]
push	ecx
mov	edx, DWORD PTR _pFile$8[ebp]
push	edx
call	_sqlite3OsWrite
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _pSrcPg$13[ebp]
push	eax
call	_sqlite3PagerUnref
add	esp, 4
jmp	$LN10@sqlite3_ba
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3_ba
mov	ecx, DWORD PTR _iSize$2[ebp+4]
push	ecx
mov	edx, DWORD PTR _iSize$2[ebp]
push	edx
mov	eax, DWORD PTR _pFile$8[ebp]
push	eax
call	_backupTruncateFile
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN6@sqlite3_ba
push	0
mov	ecx, DWORD PTR _pDestPager$18[ebp]
push	ecx
call	_sqlite3PagerSync
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN5@sqlite3_ba
mov	edx, DWORD PTR _nDestTruncate$17[ebp]
push	edx
mov	eax, DWORD PTR _pDestPager$18[ebp]
push	eax
call	_sqlite3PagerTruncateImage
add	esp, 8
push	0
push	0
mov	ecx, DWORD PTR _pDestPager$18[ebp]
push	ecx
call	_sqlite3PagerCommitPhaseOne
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN29@sqlite3_ba
push	0
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_sqlite3BtreeCommitPhaseTwo
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN29@sqlite3_ba
mov	DWORD PTR _rc$[ebp], 101		
cmp	DWORD PTR _bCloseTrans$7[ebp], 0
je	SHORT $LN3@sqlite3_ba
push	0
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
call	_sqlite3BtreeCommitPhaseOne
add	esp, 8
push	0
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+24]
push	ecx
call	_sqlite3BtreeCommitPhaseTwo
add	esp, 8
cmp	DWORD PTR _rc$[ebp], 3082		
jne	SHORT $LN2@sqlite3_ba
mov	DWORD PTR _rc$[ebp], 7
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx+28], eax
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx], 0
je	SHORT $LN1@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
call	_sqlite3BtreeLeave
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_backup_init PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pSrcDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _pDestDb$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pSrcDb$[ebp]
cmp	ecx, DWORD PTR _pDestDb$[ebp]
jne	SHORT $LN7@sqlite3_ba
push	OFFSET $SG96606
push	1
mov	edx, DWORD PTR _pDestDb$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	DWORD PTR _p$[ebp], 0
jmp	SHORT $LN6@sqlite3_ba
push	48					
call	_sqlite3MallocZero
add	esp, 4
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN6@sqlite3_ba
push	0
push	7
mov	eax, DWORD PTR _pDestDb$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
cmp	DWORD PTR _p$[ebp], 0
je	$LN4@sqlite3_ba
mov	ecx, DWORD PTR _zSrcDb$[ebp]
push	ecx
mov	edx, DWORD PTR _pSrcDb$[ebp]
push	edx
mov	eax, DWORD PTR _pDestDb$[ebp]
push	eax
call	_findBtree
add	esp, 12					
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _zDestDb$[ebp]
push	edx
mov	eax, DWORD PTR _pDestDb$[ebp]
push	eax
mov	ecx, DWORD PTR _pDestDb$[ebp]
push	ecx
call	_findBtree
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+4], eax
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR _pDestDb$[ebp]
mov	DWORD PTR [eax], ecx
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR _pSrcDb$[ebp]
mov	DWORD PTR [edx+20], eax
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [ecx+16], 1
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+40], 0
mov	eax, DWORD PTR _p$[ebp]
cmp	DWORD PTR [eax+24], 0
je	SHORT $LN2@sqlite3_ba
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+4], 0
je	SHORT $LN2@sqlite3_ba
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_setDestPgsz
add	esp, 4
cmp	eax, 7
jne	SHORT $LN4@sqlite3_ba
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _p$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3_ba
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	eax, DWORD PTR [edx+16]
add	eax, 1
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR [edx+16], eax
mov	eax, DWORD PTR _pDestDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	edx, DWORD PTR _pSrcDb$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _p$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_stmt_status PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _pVdbe$[ebp], eax
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _pVdbe$[ebp]
mov	eax, DWORD PTR [edx+ecx*4+108]
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _resetFlag$[ebp], 0
je	SHORT $LN1@sqlite3_st
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _pVdbe$[ebp]
mov	DWORD PTR [edx+ecx*4+108], 0
mov	eax, DWORD PTR _v$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_db_status PROC
push	ebp
mov	ebp, esp
sub	esp, 72					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv66[ebp], edx
cmp	DWORD PTR tv66[ebp], 10			
ja	$LN1@sqlite3_db
mov	eax, DWORD PTR tv66[ebp]
jmp	DWORD PTR $LN40@sqlite3_db[eax*4]
mov	ecx, DWORD PTR _pCurrent$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+244]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _pHighwater$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+248]
mov	DWORD PTR [ecx], eax
cmp	DWORD PTR _resetFlag$[ebp], 0
je	SHORT $LN30@sqlite3_db
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+244]
mov	DWORD PTR [ecx+248], eax
jmp	$LN32@sqlite3_db
mov	ecx, DWORD PTR _pCurrent$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _pHighwater$[ebp]
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [ecx+eax*4+236]
mov	DWORD PTR [edx], eax
cmp	DWORD PTR _resetFlag$[ebp], 0
je	SHORT $LN28@sqlite3_db
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+ecx*4+236], 0
jmp	$LN32@sqlite3_db
mov	DWORD PTR _totalUsed$6[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	DWORD PTR _i$8[ebp], 0
jmp	SHORT $LN26@sqlite3_db
mov	ecx, DWORD PTR _i$8[ebp]
add	ecx, 1
mov	DWORD PTR _i$8[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$8[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN24@sqlite3_db
mov	ecx, DWORD PTR _i$8[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
mov	DWORD PTR _pBt$5[ebp], ecx
cmp	DWORD PTR _pBt$5[ebp], 0
je	SHORT $LN23@sqlite3_db
mov	edx, DWORD PTR _pBt$5[ebp]
push	edx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$2[ebp], eax
mov	eax, DWORD PTR _pPager$2[ebp]
push	eax
call	_sqlite3PagerMemUsed
add	esp, 4
add	eax, DWORD PTR _totalUsed$6[ebp]
mov	DWORD PTR _totalUsed$6[ebp], eax
jmp	SHORT $LN25@sqlite3_db
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	edx, DWORD PTR _pCurrent$[ebp]
mov	eax, DWORD PTR _totalUsed$6[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pHighwater$[ebp]
mov	DWORD PTR [ecx], 0
jmp	$LN32@sqlite3_db
mov	DWORD PTR _nByte$13[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
lea	ecx, DWORD PTR _nByte$13[ebp]
mov	DWORD PTR [eax+512], ecx
mov	DWORD PTR _i$7[ebp], 0
jmp	SHORT $LN21@sqlite3_db
mov	edx, DWORD PTR _i$7[ebp]
add	edx, 1
mov	DWORD PTR _i$7[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _i$7[ebp]
cmp	ecx, DWORD PTR [eax+20]
jge	$LN19@sqlite3_db
mov	edx, DWORD PTR _i$7[ebp]
shl	edx, 4
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	edx, DWORD PTR [ecx+edx+12]
mov	DWORD PTR _pSchema$12[ebp], edx
cmp	DWORD PTR _pSchema$12[ebp], 0
je	$LN18@sqlite3_db
push	20					
call	DWORD PTR _sqlite3Config+52
add	esp, 4
mov	ecx, DWORD PTR _pSchema$12[ebp]
mov	edx, DWORD PTR [ecx+12]
mov	ecx, DWORD PTR _pSchema$12[ebp]
add	edx, DWORD PTR [ecx+44]
mov	ecx, DWORD PTR _pSchema$12[ebp]
add	edx, DWORD PTR [ecx+28]
mov	ecx, DWORD PTR _pSchema$12[ebp]
add	edx, DWORD PTR [ecx+60]
imul	eax, edx
add	eax, DWORD PTR _nByte$13[ebp]
mov	DWORD PTR _nByte$13[ebp], eax
mov	edx, DWORD PTR _pSchema$12[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
call	_sqlite3MallocSize
add	esp, 4
add	eax, DWORD PTR _nByte$13[ebp]
mov	DWORD PTR _nByte$13[ebp], eax
mov	ecx, DWORD PTR _pSchema$12[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
call	_sqlite3MallocSize
add	esp, 4
add	eax, DWORD PTR _nByte$13[ebp]
mov	DWORD PTR _nByte$13[ebp], eax
mov	eax, DWORD PTR _pSchema$12[ebp]
mov	ecx, DWORD PTR [eax+36]
push	ecx
call	_sqlite3MallocSize
add	esp, 4
add	eax, DWORD PTR _nByte$13[ebp]
mov	DWORD PTR _nByte$13[ebp], eax
mov	edx, DWORD PTR _pSchema$12[ebp]
mov	eax, DWORD PTR [edx+68]
push	eax
call	_sqlite3MallocSize
add	esp, 4
add	eax, DWORD PTR _nByte$13[ebp]
mov	DWORD PTR _nByte$13[ebp], eax
mov	ecx, DWORD PTR _pSchema$12[ebp]
mov	edx, DWORD PTR [ecx+48]
mov	DWORD PTR _p$11[ebp], edx
jmp	SHORT $LN17@sqlite3_db
mov	eax, DWORD PTR _p$11[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR _p$11[ebp], ecx
cmp	DWORD PTR _p$11[ebp], 0
je	SHORT $LN15@sqlite3_db
mov	edx, DWORD PTR _p$11[ebp]
mov	eax, DWORD PTR [edx+8]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTrigger
add	esp, 8
jmp	SHORT $LN16@sqlite3_db
mov	edx, DWORD PTR _pSchema$12[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _p$11[ebp], eax
jmp	SHORT $LN14@sqlite3_db
mov	ecx, DWORD PTR _p$11[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _p$11[ebp], edx
cmp	DWORD PTR _p$11[ebp], 0
je	SHORT $LN18@sqlite3_db
mov	eax, DWORD PTR _p$11[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DeleteTable
add	esp, 8
jmp	SHORT $LN13@sqlite3_db
jmp	$LN20@sqlite3_db
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+512], 0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	edx, DWORD PTR _pHighwater$[ebp]
mov	DWORD PTR [edx], 0
mov	eax, DWORD PTR _pCurrent$[ebp]
mov	ecx, DWORD PTR _nByte$13[ebp]
mov	DWORD PTR [eax], ecx
jmp	$LN32@sqlite3_db
mov	DWORD PTR _nByte$4[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
lea	eax, DWORD PTR _nByte$4[ebp]
mov	DWORD PTR [edx+512], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pVdbe$10[ebp], edx
jmp	SHORT $LN10@sqlite3_db
mov	eax, DWORD PTR _pVdbe$10[ebp]
mov	ecx, DWORD PTR [eax+52]
mov	DWORD PTR _pVdbe$10[ebp], ecx
cmp	DWORD PTR _pVdbe$10[ebp], 0
je	SHORT $LN8@sqlite3_db
mov	edx, DWORD PTR _pVdbe$10[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3VdbeClearObject
add	esp, 8
mov	ecx, DWORD PTR _pVdbe$10[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
jmp	SHORT $LN9@sqlite3_db
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+512], 0
mov	ecx, DWORD PTR _pHighwater$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _pCurrent$[ebp]
mov	eax, DWORD PTR _nByte$4[ebp]
mov	DWORD PTR [edx], eax
jmp	$LN32@sqlite3_db
mov	DWORD PTR _nRet$3[ebp], 0
mov	DWORD PTR _i$9[ebp], 0
jmp	SHORT $LN6@sqlite3_db
mov	ecx, DWORD PTR _i$9[ebp]
add	ecx, 1
mov	DWORD PTR _i$9[ebp], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$9[ebp]
cmp	eax, DWORD PTR [edx+20]
jge	SHORT $LN4@sqlite3_db
mov	ecx, DWORD PTR _i$9[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
cmp	DWORD PTR [eax+ecx+4], 0
je	SHORT $LN3@sqlite3_db
mov	ecx, DWORD PTR _i$9[ebp]
shl	ecx, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$1[ebp], eax
lea	edx, DWORD PTR _nRet$3[ebp]
push	edx
mov	eax, DWORD PTR _resetFlag$[ebp]
push	eax
mov	ecx, DWORD PTR _op$[ebp]
push	ecx
mov	edx, DWORD PTR _pPager$1[ebp]
push	edx
call	_sqlite3PagerCacheStat
add	esp, 16					
jmp	SHORT $LN5@sqlite3_db
mov	eax, DWORD PTR _pHighwater$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _pCurrent$[ebp]
mov	edx, DWORD PTR _nRet$3[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN32@sqlite3_db
mov	eax, DWORD PTR _pHighwater$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR tv334[ebp], ecx
mov	edx, DWORD PTR tv334[ebp]
cmp	DWORD PTR [edx+508], 0
jg	SHORT $LN36@sqlite3_db
jl	SHORT $LN38@sqlite3_db
mov	eax, DWORD PTR tv334[ebp]
cmp	DWORD PTR [eax+504], 0
ja	SHORT $LN36@sqlite3_db
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR tv340[ebp], ecx
mov	edx, DWORD PTR tv340[ebp]
cmp	DWORD PTR [edx+500], 0
jg	SHORT $LN36@sqlite3_db
jl	SHORT $LN39@sqlite3_db
mov	eax, DWORD PTR tv340[ebp]
cmp	DWORD PTR [eax+496], 0
ja	SHORT $LN36@sqlite3_db
mov	DWORD PTR tv210[ebp], 0
jmp	SHORT $LN37@sqlite3_db
mov	DWORD PTR tv210[ebp], 1
mov	ecx, DWORD PTR _pCurrent$[ebp]
mov	edx, DWORD PTR tv210[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN32@sqlite3_db
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN31@sqlite3_db
DD	$LN27@sqlite3_db
DD	$LN22@sqlite3_db
DD	$LN11@sqlite3_db
DD	$LN29@sqlite3_db
DD	$LN29@sqlite3_db
DD	$LN29@sqlite3_db
DD	$LN7@sqlite3_db
DD	$LN7@sqlite3_db
DD	$LN7@sqlite3_db
DD	$LN2@sqlite3_db
ENDP
_sqlite3_status PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _op$[ebp], 0
jl	SHORT $LN2@sqlite3_st
cmp	DWORD PTR _op$[ebp], 10			
jl	SHORT $LN3@sqlite3_st
push	14363					
call	_sqlite3MisuseError
add	esp, 4
jmp	SHORT $LN4@sqlite3_st
mov	eax, DWORD PTR _pCurrent$[ebp]
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _sqlite3Stat[ecx*4]
mov	DWORD PTR [eax], edx
mov	eax, DWORD PTR _pHighwater$[ebp]
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _sqlite3Stat[ecx*4+40]
mov	DWORD PTR [eax], edx
cmp	DWORD PTR _resetFlag$[ebp], 0
je	SHORT $LN1@sqlite3_st
mov	eax, DWORD PTR _op$[ebp]
mov	ecx, DWORD PTR _op$[ebp]
mov	edx, DWORD PTR _sqlite3Stat[ecx*4]
mov	DWORD PTR _sqlite3Stat[eax*4+40], edx
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_test_control PROC
push	ebp
mov	ebp, esp
sub	esp, 76					
mov	DWORD PTR _rc$[ebp], 0
lea	eax, DWORD PTR _op$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv65[ebp], ecx
mov	edx, DWORD PTR tv65[ebp]
sub	edx, 5
mov	DWORD PTR tv65[ebp], edx
cmp	DWORD PTR tv65[ebp], 17			
ja	$LN20@sqlite3_te
mov	eax, DWORD PTR tv65[ebp]
jmp	DWORD PTR $LN26@sqlite3_te[eax*4]
call	_sqlite3PrngSaveState
jmp	$LN20@sqlite3_te
call	_sqlite3PrngRestoreState
jmp	$LN20@sqlite3_te
push	0
push	0
call	_sqlite3_randomness
add	esp, 8
jmp	$LN20@sqlite3_te
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _sz$10[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _aProg$11[ebp], eax
mov	ecx, DWORD PTR _aProg$11[ebp]
push	ecx
mov	edx, DWORD PTR _sz$10[ebp]
push	edx
call	_sqlite3BitvecBuiltinTest
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN20@sqlite3_te
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+260, edx
push	0
call	_sqlite3FaultSim
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN20@sqlite3_te
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _xBenignBegin$8[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _xBenignEnd$9[ebp], edx
mov	eax, DWORD PTR _xBenignEnd$9[ebp]
push	eax
mov	ecx, DWORD PTR _xBenignBegin$8[ebp]
push	ecx
call	_sqlite3BenignMallocHooks
add	esp, 8
jmp	$LN20@sqlite3_te
mov	edx, DWORD PTR _sqlite3PendingByte
mov	DWORD PTR _rc$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _newVal$14[ebp], edx
cmp	DWORD PTR _newVal$14[ebp], 0
je	SHORT $LN12@sqlite3_te
mov	eax, DWORD PTR _newVal$14[ebp]
mov	DWORD PTR _sqlite3PendingByte, eax
jmp	$LN20@sqlite3_te
mov	DWORD PTR _x$7[ebp], 0
mov	ecx, DWORD PTR _x$7[ebp]
mov	DWORD PTR _rc$[ebp], ecx
jmp	$LN20@sqlite3_te
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	ecx, DWORD PTR [eax-4]
mov	DWORD PTR _x$6[ebp], ecx
mov	edx, DWORD PTR _x$6[ebp]
mov	DWORD PTR _rc$[ebp], edx
jmp	$LN20@sqlite3_te
mov	DWORD PTR _rc$[ebp], 123410		
jmp	$LN20@sqlite3_te
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _db$15[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _x$5[ebp], edx
mov	eax, DWORD PTR _db$15[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
push	0
mov	edx, DWORD PTR _x$5[ebp]
push	edx
push	0
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR _db$15[ebp]
mov	eax, DWORD PTR [edx+16]
mov	ecx, DWORD PTR [eax+ecx+4]
push	ecx
call	_sqlite3BtreeSetPageSize
add	esp, 16					
mov	edx, DWORD PTR _db$15[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
jmp	$LN20@sqlite3_te
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
mov	DWORD PTR _db$4[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-4]
and	eax, 65535				
mov	ecx, DWORD PTR _db$4[ebp]
mov	WORD PTR [ecx+60], ax
jmp	$LN20@sqlite3_te
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	ecx, DWORD PTR [eax-4]
mov	DWORD PTR _zWord$13[ebp], ecx
mov	edx, DWORD PTR _zWord$13[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$3[ebp], eax
mov	eax, DWORD PTR _n$3[ebp]
push	eax
mov	ecx, DWORD PTR _zWord$13[ebp]
push	ecx
call	_sqlite3KeywordCode
add	esp, 8
cmp	eax, 27					
je	SHORT $LN24@sqlite3_te
mov	DWORD PTR tv154[ebp], 124		
jmp	SHORT $LN25@sqlite3_te
mov	DWORD PTR tv154[ebp], 0
mov	edx, DWORD PTR tv154[ebp]
mov	DWORD PTR _rc$[ebp], edx
jmp	$LN20@sqlite3_te
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sz$12[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _ppNew$2[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _pFree$1[ebp], edx
cmp	DWORD PTR _sz$12[ebp], 0
je	SHORT $LN4@sqlite3_te
mov	eax, DWORD PTR _sz$12[ebp]
push	eax
call	_sqlite3ScratchMalloc
add	esp, 4
mov	ecx, DWORD PTR _ppNew$2[ebp]
mov	DWORD PTR [ecx], eax
mov	edx, DWORD PTR _pFree$1[ebp]
push	edx
call	_sqlite3ScratchFree
add	esp, 4
jmp	SHORT $LN20@sqlite3_te
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+264, edx
jmp	SHORT $LN20@sqlite3_te
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+24, edx
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
npad	2
DD	$LN19@sqlite3_te
DD	$LN18@sqlite3_te
DD	$LN17@sqlite3_te
DD	$LN16@sqlite3_te
DD	$LN15@sqlite3_te
DD	$LN14@sqlite3_te
DD	$LN13@sqlite3_te
DD	$LN11@sqlite3_te
DD	$LN10@sqlite3_te
DD	$LN8@sqlite3_te
DD	$LN7@sqlite3_te
DD	$LN6@sqlite3_te
DD	$LN5@sqlite3_te
DD	$LN3@sqlite3_te
DD	$LN20@sqlite3_te
DD	$LN2@sqlite3_te
DD	$LN20@sqlite3_te
DD	$LN9@sqlite3_te
ENDP
_sqlite3_file_control PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _zDbName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbNameToBtree
add	esp, 8
mov	DWORD PTR _pBtree$[ebp], eax
cmp	DWORD PTR _pBtree$[ebp], 0
je	SHORT $LN5@sqlite3_fi
mov	ecx, DWORD PTR _pBtree$[ebp]
push	ecx
call	_sqlite3BtreeEnter
add	esp, 4
mov	edx, DWORD PTR _pBtree$[ebp]
push	edx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$1[ebp], eax
mov	eax, DWORD PTR _pPager$1[ebp]
push	eax
call	_sqlite3PagerFile
add	esp, 4
mov	DWORD PTR _fd$2[ebp], eax
cmp	DWORD PTR _op$[ebp], 7
jne	SHORT $LN4@sqlite3_fi
mov	ecx, DWORD PTR _pArg$[ebp]
mov	edx, DWORD PTR _fd$2[ebp]
mov	DWORD PTR [ecx], edx
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN3@sqlite3_fi
mov	eax, DWORD PTR _fd$2[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN2@sqlite3_fi
mov	ecx, DWORD PTR _pArg$[ebp]
push	ecx
mov	edx, DWORD PTR _op$[ebp]
push	edx
mov	eax, DWORD PTR _fd$2[ebp]
push	eax
call	_sqlite3OsFileControl
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@sqlite3_fi
mov	DWORD PTR _rc$[ebp], 12			
mov	ecx, DWORD PTR _pBtree$[ebp]
push	ecx
call	_sqlite3BtreeLeave
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_db_mutex PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+12]
pop	ebp
ret	0
ENDP
_sqlite3_mutex_leave PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3_mu
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+92
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_mutex_try PROC
push	ebp
mov	ebp, esp
push	ecx
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3_mu
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+88
add	esp, 4
jmp	SHORT $LN2@sqlite3_mu
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_mutex_enter PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3_mu
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+84
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_mutex_free PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3_mu
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+80
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_mutex_alloc PROC
push	ebp
mov	ebp, esp
call	_sqlite3_initialize
test	eax, eax
je	SHORT $LN1@sqlite3_mu
xor	eax, eax
jmp	SHORT $LN2@sqlite3_mu
mov	eax, DWORD PTR _id$[ebp]
push	eax
call	DWORD PTR _sqlite3Config+76
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_vfs_unregister PROC
push	ebp
mov	ebp, esp
push	ecx
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$[ebp], eax
mov	eax, DWORD PTR _mutex$[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_vfsUnlink
add	esp, 4
mov	edx, DWORD PTR _mutex$[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_vfs_register PROC
push	ebp
mov	ebp, esp
sub	esp, 8
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3_vf
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN5@sqlite3_vf
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$[ebp], eax
mov	eax, DWORD PTR _mutex$[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_vfsUnlink
add	esp, 4
cmp	DWORD PTR _makeDflt$[ebp], 0
jne	SHORT $LN2@sqlite3_vf
cmp	DWORD PTR _vfsList, 0
jne	SHORT $LN3@sqlite3_vf
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR _vfsList
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	DWORD PTR _vfsList, ecx
jmp	SHORT $LN1@sqlite3_vf
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR _vfsList
mov	ecx, DWORD PTR [eax+12]
mov	DWORD PTR [edx+12], ecx
mov	edx, DWORD PTR _vfsList
mov	eax, DWORD PTR _pVfs$[ebp]
mov	DWORD PTR [edx+12], eax
mov	ecx, DWORD PTR _mutex$[ebp]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_vfs_find PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _pVfs$[ebp], 0
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@sqlite3_vf
xor	eax, eax
jmp	SHORT $LN7@sqlite3_vf
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$[ebp], eax
mov	eax, DWORD PTR _mutex$[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _vfsList
mov	DWORD PTR _pVfs$[ebp], ecx
jmp	SHORT $LN5@sqlite3_vf
mov	edx, DWORD PTR _pVfs$[ebp]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _pVfs$[ebp], eax
cmp	DWORD PTR _pVfs$[ebp], 0
je	SHORT $LN3@sqlite3_vf
cmp	DWORD PTR _zVfs$[ebp], 0
jne	SHORT $LN2@sqlite3_vf
jmp	SHORT $LN3@sqlite3_vf
mov	ecx, DWORD PTR _pVfs$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _zVfs$[ebp]
push	eax
call	_strcmp
add	esp, 8
test	eax, eax
jne	SHORT $LN1@sqlite3_vf
jmp	SHORT $LN3@sqlite3_vf
jmp	SHORT $LN4@sqlite3_vf
mov	ecx, DWORD PTR _mutex$[ebp]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pVfs$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_blob_write PROC
push	ebp
mov	ebp, esp
push	OFFSET _sqlite3BtreePutData
mov	eax, DWORD PTR _iOffset$[ebp]
push	eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _pBlob$[ebp]
push	eax
call	_blobReadWrite
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_blob_read PROC
push	ebp
mov	ebp, esp
push	OFFSET _sqlite3BtreeData
mov	eax, DWORD PTR _iOffset$[ebp]
push	eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _pBlob$[ebp]
push	eax
call	_blobReadWrite
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_blob_bytes PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pBlob$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3_bl
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+20], 0
je	SHORT $LN3@sqlite3_bl
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR tv68[ebp], eax
jmp	SHORT $LN4@sqlite3_bl
mov	DWORD PTR tv68[ebp], 0
mov	eax, DWORD PTR tv68[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_blob_close PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _pBlob$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN2@sqlite3_bl
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+20]
push	eax
call	_sqlite3_finalize
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN1@sqlite3_bl
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_blob_reopen PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	eax, DWORD PTR _pBlob$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN4@sqlite3_bl
push	74349					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN5@sqlite3_bl
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+24]
mov	DWORD PTR _db$[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+20], 0
jne	SHORT $LN3@sqlite3_bl
mov	DWORD PTR _rc$[ebp], 4
jmp	SHORT $LN2@sqlite3_bl
lea	eax, DWORD PTR _zErr$1[ebp]
push	eax
mov	ecx, DWORD PTR _iRow$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iRow$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_blobSeekToRow
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN2@sqlite3_bl
cmp	DWORD PTR _zErr$1[ebp], 0
je	SHORT $LN7@sqlite3_bl
mov	DWORD PTR tv79[ebp], OFFSET $SG101655
jmp	SHORT $LN8@sqlite3_bl
mov	DWORD PTR tv79[ebp], 0
mov	ecx, DWORD PTR _zErr$1[ebp]
push	ecx
mov	edx, DWORD PTR tv79[ebp]
push	edx
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 16					
mov	edx, DWORD PTR _zErr$1[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_blob_open PROC
push	ebp
mov	ebp, esp
sub	esp, 64					
mov	DWORD PTR _nAttempt$[ebp], 0
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _zErr$[ebp], 0
mov	DWORD PTR _pParse$[ebp], 0
mov	DWORD PTR _pBlob$[ebp], 0
cmp	DWORD PTR _flags$[ebp], 0
je	SHORT $LN42@sqlite3_bl
mov	DWORD PTR tv65[ebp], 1
jmp	SHORT $LN43@sqlite3_bl
mov	DWORD PTR tv65[ebp], 0
mov	eax, DWORD PTR tv65[ebp]
mov	DWORD PTR _flags$[ebp], eax
mov	ecx, DWORD PTR _ppBlob$[ebp]
mov	DWORD PTR [ecx], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
push	28					
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pBlob$[ebp], eax
cmp	DWORD PTR _pBlob$[ebp], 0
jne	SHORT $LN39@sqlite3_bl
jmp	$blob_open_out$46
push	536					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocRaw
add	esp, 8
mov	DWORD PTR _pParse$[ebp], eax
cmp	DWORD PTR _pParse$[ebp], 0
jne	SHORT $LN37@sqlite3_bl
jmp	$blob_open_out$46
push	536					
push	0
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx], edx
mov	eax, DWORD PTR _zErr$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	DWORD PTR _zErr$[ebp], 0
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	eax, DWORD PTR _zDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zTable$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3LocateTable
add	esp, 16					
mov	DWORD PTR _pTab$[ebp], eax
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN34@sqlite3_bl
mov	eax, DWORD PTR _pTab$[ebp]
movzx	ecx, BYTE PTR [eax+44]
and	ecx, 16					
je	SHORT $LN34@sqlite3_bl
mov	DWORD PTR _pTab$[ebp], 0
mov	edx, DWORD PTR _zTable$[ebp]
push	edx
push	OFFSET $SG101521
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
call	_sqlite3ErrorMsg
add	esp, 12					
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN33@sqlite3_bl
mov	ecx, DWORD PTR _pTab$[ebp]
movzx	edx, BYTE PTR [ecx+44]
and	edx, 32					
je	SHORT $LN33@sqlite3_bl
mov	DWORD PTR _pTab$[ebp], 0
mov	eax, DWORD PTR _zTable$[ebp]
push	eax
push	OFFSET $SG101523
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
cmp	DWORD PTR _pTab$[ebp], 0
je	SHORT $LN32@sqlite3_bl
mov	edx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [edx+12], 0
je	SHORT $LN32@sqlite3_bl
mov	DWORD PTR _pTab$[ebp], 0
mov	eax, DWORD PTR _zTable$[ebp]
push	eax
push	OFFSET $SG101525
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3ErrorMsg
add	esp, 12					
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN31@sqlite3_bl
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+4], 0
je	SHORT $LN30@sqlite3_bl
mov	eax, DWORD PTR _zErr$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _zErr$[ebp], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+4], 0
mov	DWORD PTR _rc$[ebp], 1
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3BtreeLeaveAll
add	esp, 4
jmp	$blob_open_out$46
mov	DWORD PTR _iCol$[ebp], 0
jmp	SHORT $LN29@sqlite3_bl
mov	eax, DWORD PTR _iCol$[ebp]
add	eax, 1
mov	DWORD PTR _iCol$[ebp], eax
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
cmp	DWORD PTR _iCol$[ebp], edx
jge	SHORT $LN27@sqlite3_bl
mov	eax, DWORD PTR _zColumn$[ebp]
push	eax
imul	ecx, DWORD PTR _iCol$[ebp], 24
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	ecx, DWORD PTR [eax+ecx]
push	ecx
call	_sqlite3_stricmp
add	esp, 8
test	eax, eax
jne	SHORT $LN26@sqlite3_bl
jmp	SHORT $LN27@sqlite3_bl
jmp	SHORT $LN28@sqlite3_bl
mov	edx, DWORD PTR _pTab$[ebp]
movsx	eax, WORD PTR [edx+38]
cmp	DWORD PTR _iCol$[ebp], eax
jne	SHORT $LN25@sqlite3_bl
mov	ecx, DWORD PTR _zErr$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _zColumn$[ebp]
push	eax
push	OFFSET $SG101533
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zErr$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3BtreeLeaveAll
add	esp, 4
jmp	$blob_open_out$46
cmp	DWORD PTR _flags$[ebp], 0
je	$LN24@sqlite3_bl
mov	DWORD PTR _zFault$2[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
and	ecx, 524288				
je	SHORT $LN23@sqlite3_bl
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+16]
mov	DWORD PTR _pFKey$6[ebp], eax
jmp	SHORT $LN22@sqlite3_bl
mov	ecx, DWORD PTR _pFKey$6[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pFKey$6[ebp], edx
cmp	DWORD PTR _pFKey$6[ebp], 0
je	SHORT $LN23@sqlite3_bl
mov	DWORD PTR _j$4[ebp], 0
jmp	SHORT $LN19@sqlite3_bl
mov	eax, DWORD PTR _j$4[ebp]
add	eax, 1
mov	DWORD PTR _j$4[ebp], eax
mov	ecx, DWORD PTR _pFKey$6[ebp]
mov	edx, DWORD PTR _j$4[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN17@sqlite3_bl
mov	eax, DWORD PTR _j$4[ebp]
mov	ecx, DWORD PTR _pFKey$6[ebp]
mov	edx, DWORD PTR [ecx+eax*8+36]
cmp	edx, DWORD PTR _iCol$[ebp]
jne	SHORT $LN16@sqlite3_bl
mov	DWORD PTR _zFault$2[ebp], OFFSET $SG101547
jmp	SHORT $LN18@sqlite3_bl
jmp	SHORT $LN21@sqlite3_bl
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	DWORD PTR _pIdx$5[ebp], ecx
jmp	SHORT $LN15@sqlite3_bl
mov	edx, DWORD PTR _pIdx$5[ebp]
mov	eax, DWORD PTR [edx+20]
mov	DWORD PTR _pIdx$5[ebp], eax
cmp	DWORD PTR _pIdx$5[ebp], 0
je	SHORT $LN13@sqlite3_bl
mov	DWORD PTR _j$3[ebp], 0
jmp	SHORT $LN12@sqlite3_bl
mov	ecx, DWORD PTR _j$3[ebp]
add	ecx, 1
mov	DWORD PTR _j$3[ebp], ecx
mov	edx, DWORD PTR _pIdx$5[ebp]
movzx	eax, WORD PTR [edx+50]
cmp	DWORD PTR _j$3[ebp], eax
jge	SHORT $LN10@sqlite3_bl
mov	ecx, DWORD PTR _pIdx$5[ebp]
mov	edx, DWORD PTR [ecx+4]
mov	eax, DWORD PTR _j$3[ebp]
movsx	ecx, WORD PTR [edx+eax*2]
cmp	ecx, DWORD PTR _iCol$[ebp]
jne	SHORT $LN9@sqlite3_bl
mov	DWORD PTR _zFault$2[ebp], OFFSET $SG101556
jmp	SHORT $LN11@sqlite3_bl
jmp	SHORT $LN14@sqlite3_bl
cmp	DWORD PTR _zFault$2[ebp], 0
je	SHORT $LN24@sqlite3_bl
mov	edx, DWORD PTR _zErr$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	ecx, DWORD PTR _zFault$2[ebp]
push	ecx
push	OFFSET $SG101558
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3MPrintf
add	esp, 12					
mov	DWORD PTR _zErr$[ebp], eax
mov	DWORD PTR _rc$[ebp], 1
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeLeaveAll
add	esp, 4
jmp	$blob_open_out$46
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3VdbeCreate
add	esp, 4
mov	edx, DWORD PTR _pBlob$[ebp]
mov	DWORD PTR [edx+20], eax
mov	eax, DWORD PTR _pBlob$[ebp]
cmp	DWORD PTR [eax+20], 0
je	$LN7@sqlite3_bl
mov	ecx, DWORD PTR _pBlob$[ebp]
mov	edx, DWORD PTR [ecx+20]
mov	DWORD PTR _v$7[ebp], edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3SchemaToIndex
add	esp, 8
mov	DWORD PTR _iDb$1[ebp], eax
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax+68]
mov	edx, DWORD PTR [ecx]
push	edx
mov	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _iDb$1[ebp]
push	ecx
push	4
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeAddOp4Int
add	esp, 24					
push	1
mov	eax, DWORD PTR _v$7[ebp]
push	eax
call	_sqlite3VdbeChangeP5
add	esp, 8
mov	ecx, DWORD PTR ?iLn@?1??sqlite3_blob_open@@9@9
push	ecx
push	OFFSET ?openBlob@?1??sqlite3_blob_open@@9@9
push	10					
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeAddOpList
add	esp, 16					
mov	eax, DWORD PTR _iDb$1[ebp]
push	eax
mov	ecx, DWORD PTR _v$7[ebp]
push	ecx
call	_sqlite3VdbeUsesBtree
add	esp, 8
mov	edx, DWORD PTR _iDb$1[ebp]
push	edx
push	1
mov	eax, DWORD PTR _v$7[ebp]
push	eax
call	_sqlite3VdbeChangeP1
add	esp, 12					
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [ecx+32]
push	edx
push	1
mov	eax, DWORD PTR _v$7[ebp]
push	eax
call	_sqlite3VdbeChangeP2
add	esp, 12					
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeChangeP3
add	esp, 12					
push	0
mov	eax, DWORD PTR _pTab$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
push	1
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	eax, 3
sub	eax, DWORD PTR _flags$[ebp]
push	eax
mov	ecx, DWORD PTR _v$7[ebp]
push	ecx
call	_sqlite3VdbeChangeToNoop
add	esp, 8
mov	edx, DWORD PTR _pTab$[ebp]
mov	eax, DWORD PTR [edx+32]
push	eax
mov	ecx, DWORD PTR _flags$[ebp]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeChangeP2
add	esp, 12					
mov	eax, DWORD PTR _iDb$1[ebp]
push	eax
mov	ecx, DWORD PTR _flags$[ebp]
add	ecx, 2
push	ecx
mov	edx, DWORD PTR _v$7[ebp]
push	edx
call	_sqlite3VdbeChangeP3
add	esp, 12					
push	-14					
mov	eax, DWORD PTR _pTab$[ebp]
movsx	ecx, WORD PTR [eax+38]
add	ecx, 1
push	ecx
mov	edx, DWORD PTR _flags$[ebp]
add	edx, 2
push	edx
mov	eax, DWORD PTR _v$7[ebp]
push	eax
call	_sqlite3VdbeChangeP4
add	esp, 16					
mov	ecx, DWORD PTR _pTab$[ebp]
movsx	edx, WORD PTR [ecx+38]
push	edx
push	6
mov	eax, DWORD PTR _v$7[ebp]
push	eax
call	_sqlite3VdbeChangeP2
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
jne	SHORT $LN7@sqlite3_bl
mov	eax, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [eax+440], 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+72], 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [edx+68], 1
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
mov	ecx, DWORD PTR _v$7[ebp]
push	ecx
call	_sqlite3VdbeMakeReady
add	esp, 8
mov	edx, DWORD PTR _pBlob$[ebp]
mov	eax, DWORD PTR _flags$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pBlob$[ebp]
mov	edx, DWORD PTR _iCol$[ebp]
mov	DWORD PTR [ecx+12], edx
mov	eax, DWORD PTR _pBlob$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN5@sqlite3_bl
jmp	SHORT $blob_open_out$46
mov	edx, DWORD PTR _iRow$[ebp+4]
push	edx
mov	eax, DWORD PTR _iRow$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _pBlob$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
call	_sqlite3_bind_int64
add	esp, 16					
lea	eax, DWORD PTR _zErr$[ebp]
push	eax
mov	ecx, DWORD PTR _iRow$[ebp+4]
push	ecx
mov	edx, DWORD PTR _iRow$[ebp]
push	edx
mov	eax, DWORD PTR _pBlob$[ebp]
push	eax
call	_blobSeekToRow
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _nAttempt$[ebp]
add	ecx, 1
mov	DWORD PTR _nAttempt$[ebp], ecx
cmp	DWORD PTR _nAttempt$[ebp], 50		
jge	SHORT $blob_open_out$46
cmp	DWORD PTR _rc$[ebp], 17			
je	$LN37@sqlite3_bl
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@sqlite3_bl
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN3@sqlite3_bl
mov	ecx, DWORD PTR _ppBlob$[ebp]
mov	edx, DWORD PTR _pBlob$[ebp]
mov	DWORD PTR [ecx], edx
jmp	SHORT $LN2@sqlite3_bl
cmp	DWORD PTR _pBlob$[ebp], 0
je	SHORT $LN1@sqlite3_bl
mov	eax, DWORD PTR _pBlob$[ebp]
cmp	DWORD PTR [eax+20], 0
je	SHORT $LN1@sqlite3_bl
mov	ecx, DWORD PTR _pBlob$[ebp]
mov	edx, DWORD PTR [ecx+20]
push	edx
call	_sqlite3VdbeFinalize
add	esp, 4
mov	eax, DWORD PTR _pBlob$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
cmp	DWORD PTR _zErr$[ebp], 0
je	SHORT $LN44@sqlite3_bl
mov	DWORD PTR tv315[ebp], OFFSET $SG101576
jmp	SHORT $LN45@sqlite3_bl
mov	DWORD PTR tv315[ebp], 0
mov	edx, DWORD PTR _zErr$[ebp]
push	edx
mov	eax, DWORD PTR tv315[ebp]
push	eax
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 16					
mov	eax, DWORD PTR _zErr$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ParserReset
add	esp, 4
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_overload_function PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _nName$[ebp], eax
mov	DWORD PTR _rc$[ebp], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
push	0
push	1
mov	eax, DWORD PTR _nArg$[ebp]
push	eax
mov	ecx, DWORD PTR _nName$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3FindFunction
add	esp, 24					
test	eax, eax
jne	SHORT $LN1@sqlite3_ov
push	0
push	0
push	0
push	OFFSET _sqlite3InvalidFunction
push	0
push	1
mov	ecx, DWORD PTR _nArg$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3CreateFunc
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_declare_vtab PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _zErr$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
cmp	DWORD PTR [edx+316], 0
je	SHORT $LN7@sqlite3_de
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+316]
mov	edx, DWORD PTR [ecx+4]
mov	DWORD PTR _pTab$[ebp], edx
cmp	DWORD PTR _pTab$[ebp], 0
jne	SHORT $LN8@sqlite3_de
push	0
push	21					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
push	109181					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN9@sqlite3_de
push	536					
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pParse$[ebp], eax
cmp	DWORD PTR _pParse$[ebp], 0
jne	SHORT $LN6@sqlite3_de
mov	DWORD PTR _rc$[ebp], 7
jmp	$LN5@sqlite3_de
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+451], 1
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx], eax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	DWORD PTR [ecx+424], 1
lea	edx, DWORD PTR _zErr$[ebp]
push	edx
mov	eax, DWORD PTR _zCreateTable$[ebp]
push	eax
mov	ecx, DWORD PTR _pParse$[ebp]
push	ecx
call	_sqlite3RunParser
add	esp, 12					
test	eax, eax
jne	$LN4@sqlite3_de
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+484], 0
je	$LN4@sqlite3_de
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
jne	$LN4@sqlite3_de
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
cmp	DWORD PTR [eax+12], 0
jne	SHORT $LN4@sqlite3_de
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+484]
movzx	eax, BYTE PTR [edx+44]
and	eax, 16					
jne	SHORT $LN4@sqlite3_de
mov	ecx, DWORD PTR _pTab$[ebp]
cmp	DWORD PTR [ecx+4], 0
jne	SHORT $LN3@sqlite3_de
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
mov	ecx, DWORD PTR _pTab$[ebp]
mov	edx, DWORD PTR [eax+4]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+484]
mov	edx, DWORD PTR _pTab$[ebp]
mov	ax, WORD PTR [ecx+38]
mov	WORD PTR [edx+38], ax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+484]
xor	eax, eax
mov	WORD PTR [edx+38], ax
mov	ecx, DWORD PTR _pParse$[ebp]
mov	edx, DWORD PTR [ecx+484]
mov	DWORD PTR [edx+4], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+316]
mov	DWORD PTR [ecx+4], 0
jmp	SHORT $LN2@sqlite3_de
cmp	DWORD PTR _zErr$[ebp], 0
je	SHORT $LN11@sqlite3_de
mov	DWORD PTR tv151[ebp], OFFSET $SG116496
jmp	SHORT $LN12@sqlite3_de
mov	DWORD PTR tv151[ebp], 0
mov	edx, DWORD PTR _zErr$[ebp]
push	edx
mov	eax, DWORD PTR tv151[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 16					
mov	edx, DWORD PTR _zErr$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3DbFree
add	esp, 8
mov	DWORD PTR _rc$[ebp], 1
mov	ecx, DWORD PTR _pParse$[ebp]
mov	BYTE PTR [ecx+451], 0
mov	edx, DWORD PTR _pParse$[ebp]
cmp	DWORD PTR [edx+8], 0
je	SHORT $LN1@sqlite3_de
mov	eax, DWORD PTR _pParse$[ebp]
mov	ecx, DWORD PTR [eax+8]
push	ecx
call	_sqlite3VdbeFinalize
add	esp, 4
mov	edx, DWORD PTR _pParse$[ebp]
mov	eax, DWORD PTR [edx+484]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DeleteTable
add	esp, 8
mov	edx, DWORD PTR _pParse$[ebp]
push	edx
call	_sqlite3ParserReset
add	esp, 4
mov	eax, DWORD PTR _pParse$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_create_module_v2 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xDestroy$[ebp]
push	eax
mov	ecx, DWORD PTR _pAux$[ebp]
push	ecx
mov	edx, DWORD PTR _pModule$[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_createModule
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_create_module PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _pAux$[ebp]
push	eax
mov	ecx, DWORD PTR _pModule$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_createModule
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_reset_auto_extension PROC
push	ebp
mov	ebp, esp
push	ecx
call	_sqlite3_initialize
test	eax, eax
jne	SHORT $LN2@sqlite3_re
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$1[ebp], eax
mov	eax, DWORD PTR _mutex$1[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _sqlite3Autoext+4
push	ecx
call	_sqlite3_free
add	esp, 4
mov	DWORD PTR _sqlite3Autoext+4, 0
mov	DWORD PTR _sqlite3Autoext, 0
mov	edx, DWORD PTR _mutex$1[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_cancel_auto_extension PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
push	esi
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$[ebp], eax
mov	DWORD PTR _n$[ebp], 0
mov	eax, DWORD PTR _mutex$[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _sqlite3Autoext
sub	ecx, 1
mov	DWORD PTR _i$[ebp], ecx
jmp	SHORT $LN4@sqlite3_ca
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
mov	DWORD PTR _i$[ebp], edx
cmp	DWORD PTR _i$[ebp], 0
jl	SHORT $LN2@sqlite3_ca
mov	eax, DWORD PTR _i$[ebp]
mov	ecx, DWORD PTR _sqlite3Autoext+4
mov	edx, DWORD PTR [ecx+eax*4]
cmp	edx, DWORD PTR _xInit$[ebp]
jne	SHORT $LN1@sqlite3_ca
mov	eax, DWORD PTR _sqlite3Autoext
sub	eax, 1
mov	DWORD PTR _sqlite3Autoext, eax
mov	ecx, DWORD PTR _i$[ebp]
mov	edx, DWORD PTR _sqlite3Autoext+4
mov	eax, DWORD PTR _sqlite3Autoext
mov	esi, DWORD PTR _sqlite3Autoext+4
mov	eax, DWORD PTR [esi+eax*4]
mov	DWORD PTR [edx+ecx*4], eax
mov	ecx, DWORD PTR _n$[ebp]
add	ecx, 1
mov	DWORD PTR _n$[ebp], ecx
jmp	SHORT $LN2@sqlite3_ca
jmp	SHORT $LN3@sqlite3_ca
mov	edx, DWORD PTR _mutex$[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _n$[ebp]
pop	esi
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_auto_extension PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
mov	DWORD PTR _rc$[ebp], 0
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN9@sqlite3_au
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN10@sqlite3_au
jmp	$LN10@sqlite3_au
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$2[ebp], eax
mov	eax, DWORD PTR _mutex$2[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN7@sqlite3_au
mov	ecx, DWORD PTR _i$4[ebp]
add	ecx, 1
mov	DWORD PTR _i$4[ebp], ecx
mov	edx, DWORD PTR _i$4[ebp]
cmp	edx, DWORD PTR _sqlite3Autoext
jge	SHORT $LN5@sqlite3_au
mov	eax, DWORD PTR _i$4[ebp]
mov	ecx, DWORD PTR _sqlite3Autoext+4
mov	edx, DWORD PTR [ecx+eax*4]
cmp	edx, DWORD PTR _xInit$[ebp]
jne	SHORT $LN4@sqlite3_au
jmp	SHORT $LN5@sqlite3_au
jmp	SHORT $LN6@sqlite3_au
mov	eax, DWORD PTR _i$4[ebp]
cmp	eax, DWORD PTR _sqlite3Autoext
jne	SHORT $LN3@sqlite3_au
mov	ecx, DWORD PTR _sqlite3Autoext
lea	edx, DWORD PTR [ecx*4+4]
mov	DWORD PTR _nByte$1[ebp], edx
mov	eax, DWORD PTR _nByte$1[ebp]
push	eax
mov	ecx, DWORD PTR _sqlite3Autoext+4
push	ecx
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _aNew$3[ebp], eax
cmp	DWORD PTR _aNew$3[ebp], 0
jne	SHORT $LN2@sqlite3_au
mov	DWORD PTR _rc$[ebp], 7
jmp	SHORT $LN3@sqlite3_au
mov	edx, DWORD PTR _aNew$3[ebp]
mov	DWORD PTR _sqlite3Autoext+4, edx
mov	eax, DWORD PTR _sqlite3Autoext
mov	ecx, DWORD PTR _sqlite3Autoext+4
mov	edx, DWORD PTR _xInit$[ebp]
mov	DWORD PTR [ecx+eax*4], edx
mov	eax, DWORD PTR _sqlite3Autoext
add	eax, 1
mov	DWORD PTR _sqlite3Autoext, eax
mov	ecx, DWORD PTR _mutex$2[ebp]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_enable_load_extension PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _onoff$[ebp], 0
je	SHORT $LN2@sqlite3_en
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
or	eax, 4194304				
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+24], eax
jmp	SHORT $LN1@sqlite3_en
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+24]
and	eax, -4194305				
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+24], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_load_extension PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _pzErrMsg$[ebp]
push	edx
mov	eax, DWORD PTR _zProc$[ebp]
push	eax
mov	ecx, DWORD PTR _zFile$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3LoadExtension
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_soft_heap_limit PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _n$[ebp], 0
jge	SHORT $LN1@sqlite3_so
mov	DWORD PTR _n$[ebp], 0
mov	eax, DWORD PTR _n$[ebp]
cdq
push	edx
push	eax
call	_sqlite3_soft_heap_limit64
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_soft_heap_limit64 PROC
push	ebp
mov	ebp, esp
sub	esp, 20					
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@sqlite3_so
or	eax, -1
or	edx, -1
jmp	$LN6@sqlite3_so
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _mem0+8
mov	DWORD PTR _priorLimit$[ebp], ecx
mov	edx, DWORD PTR _mem0+12
mov	DWORD PTR _priorLimit$[ebp+4], edx
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
cmp	DWORD PTR _n$[ebp+4], 0
jg	SHORT $LN4@sqlite3_so
jl	SHORT $LN8@sqlite3_so
cmp	DWORD PTR _n$[ebp], 0
jae	SHORT $LN4@sqlite3_so
mov	eax, DWORD PTR _priorLimit$[ebp]
mov	edx, DWORD PTR _priorLimit$[ebp+4]
jmp	SHORT $LN6@sqlite3_so
cmp	DWORD PTR _n$[ebp+4], 0
jl	SHORT $LN3@sqlite3_so
jg	SHORT $LN9@sqlite3_so
cmp	DWORD PTR _n$[ebp], 0
jbe	SHORT $LN3@sqlite3_so
mov	ecx, DWORD PTR _n$[ebp+4]
push	ecx
mov	edx, DWORD PTR _n$[ebp]
push	edx
push	0
push	OFFSET _softHeapLimitEnforcer
call	_sqlite3MemoryAlarm
add	esp, 16					
jmp	SHORT $LN2@sqlite3_so
push	0
push	0
push	0
push	0
call	_sqlite3MemoryAlarm
add	esp, 16					
call	_sqlite3_memory_used
sub	eax, DWORD PTR _n$[ebp]
sbb	edx, DWORD PTR _n$[ebp+4]
mov	DWORD PTR _excess$[ebp], eax
mov	DWORD PTR _excess$[ebp+4], edx
cmp	DWORD PTR _excess$[ebp+4], 0
jl	SHORT $LN1@sqlite3_so
jg	SHORT $LN10@sqlite3_so
cmp	DWORD PTR _excess$[ebp], 0
jbe	SHORT $LN1@sqlite3_so
mov	eax, DWORD PTR _excess$[ebp]
and	eax, 2147483647				
mov	ecx, DWORD PTR _excess$[ebp+4]
and	ecx, 0
push	eax
call	_sqlite3_release_memory
add	esp, 4
mov	eax, DWORD PTR _priorLimit$[ebp]
mov	edx, DWORD PTR _priorLimit$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_db_release_memory PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3BtreeEnterAll
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3_db
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$[ebp]
cmp	edx, DWORD PTR [ecx+20]
jge	SHORT $LN2@sqlite3_db
mov	eax, DWORD PTR _i$[ebp]
shl	eax, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	eax, DWORD PTR [edx+eax+4]
mov	DWORD PTR _pBt$2[ebp], eax
cmp	DWORD PTR _pBt$2[ebp], 0
je	SHORT $LN1@sqlite3_db
mov	ecx, DWORD PTR _pBt$2[ebp]
push	ecx
call	_sqlite3BtreePager
add	esp, 4
mov	DWORD PTR _pPager$1[ebp], eax
mov	edx, DWORD PTR _pPager$1[ebp]
push	edx
call	_sqlite3PagerShrink
add	esp, 4
jmp	SHORT $LN3@sqlite3_db
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3BtreeLeaveAll
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_release_memory PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_enable_shared_cache PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _enable$[ebp]
mov	DWORD PTR _sqlite3Config+220, eax
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_update_hook PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+196]
mov	DWORD PTR _pRet$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _xCallback$[ebp]
mov	DWORD PTR [ecx+200], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+196], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_rollback_hook PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+188]
mov	DWORD PTR _pRet$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _xCallback$[ebp]
mov	DWORD PTR [ecx+192], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+188], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pRet$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_commit_hook PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+180]
mov	DWORD PTR _pOld$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _xCallback$[ebp]
mov	DWORD PTR [ecx+184], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+180], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pOld$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_next_stmt PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _pStmt$[ebp], 0
jne	SHORT $LN2@sqlite3_ne
mov	edx, DWORD PTR _pDb$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR _pNext$[ebp], eax
jmp	SHORT $LN1@sqlite3_ne
mov	ecx, DWORD PTR _pStmt$[ebp]
mov	edx, DWORD PTR [ecx+52]
mov	DWORD PTR _pNext$[ebp], edx
mov	eax, DWORD PTR _pDb$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pNext$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_db_readonly PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zDbName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbNameToBtree
add	esp, 8
mov	DWORD PTR _pBt$[ebp], eax
cmp	DWORD PTR _pBt$[ebp], 0
je	SHORT $LN3@sqlite3_db
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_sqlite3BtreeIsReadonly
add	esp, 4
mov	DWORD PTR tv70[ebp], eax
jmp	SHORT $LN4@sqlite3_db
mov	DWORD PTR tv70[ebp], -1
mov	eax, DWORD PTR tv70[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_db_filename PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _zDbName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbNameToBtree
add	esp, 8
mov	DWORD PTR _pBt$[ebp], eax
cmp	DWORD PTR _pBt$[ebp], 0
je	SHORT $LN3@sqlite3_db
mov	edx, DWORD PTR _pBt$[ebp]
push	edx
call	_sqlite3BtreeGetFilename
add	esp, 4
mov	DWORD PTR tv70[ebp], eax
jmp	SHORT $LN4@sqlite3_db
mov	DWORD PTR tv70[ebp], 0
mov	eax, DWORD PTR tv70[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_db_handle PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pStmt$[ebp], 0
je	SHORT $LN3@sqlite3_db
mov	eax, DWORD PTR _pStmt$[ebp]
mov	ecx, DWORD PTR [eax]
mov	DWORD PTR tv66[ebp], ecx
jmp	SHORT $LN4@sqlite3_db
mov	DWORD PTR tv66[ebp], 0
mov	eax, DWORD PTR tv66[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_get_autocommit PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [eax+62]
pop	ebp
ret	0
ENDP
_sqlite3_sleep PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	0
call	_sqlite3_vfs_find
add	esp, 4
mov	DWORD PTR _pVfs$[ebp], eax
cmp	DWORD PTR _pVfs$[ebp], 0
jne	SHORT $LN1@sqlite3_sl
xor	eax, eax
jmp	SHORT $LN2@sqlite3_sl
imul	eax, DWORD PTR _ms$[ebp], 1000
push	eax
mov	ecx, DWORD PTR _pVfs$[ebp]
push	ecx
call	_sqlite3OsSleep
add	esp, 8
cdq
mov	ecx, 1000				
idiv	ecx
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_collation_needed16 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+212], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _xCollNeeded16$[ebp]
mov	DWORD PTR [eax+216], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _pCollNeededArg$[ebp]
mov	DWORD PTR [edx+220], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_collation_needed PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _xCollNeeded$[ebp]
mov	DWORD PTR [edx+212], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+216], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _pCollNeededArg$[ebp]
mov	DWORD PTR [edx+220], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_create_collation16 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
push	2
push	-1
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Utf16to8
add	esp, 16					
mov	DWORD PTR _zName8$[ebp], eax
cmp	DWORD PTR _zName8$[ebp], 0
je	SHORT $LN1@sqlite3_cr
push	0
mov	ecx, DWORD PTR _xCompare$[ebp]
push	ecx
mov	edx, DWORD PTR _pCtx$[ebp]
push	edx
movzx	eax, BYTE PTR _enc$[ebp]
push	eax
mov	ecx, DWORD PTR _zName8$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_createCollation
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _zName8$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_create_collation_v2 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _xDel$[ebp]
push	edx
mov	eax, DWORD PTR _xCompare$[ebp]
push	eax
mov	ecx, DWORD PTR _pCtx$[ebp]
push	ecx
movzx	edx, BYTE PTR _enc$[ebp]
push	edx
mov	eax, DWORD PTR _zName$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_createCollation
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_create_collation PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
push	0
mov	edx, DWORD PTR _xCompare$[ebp]
push	edx
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
movzx	ecx, BYTE PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _zName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_createCollation
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_result_zeroblob PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _pCtx$[ebp]
add	ecx, 8
push	ecx
call	_sqlite3VdbeMemSetZeroBlob
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_result_value PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pValue$[ebp]
push	eax
mov	ecx, DWORD PTR _pCtx$[ebp]
add	ecx, 8
push	ecx
call	_sqlite3VdbeMemCopy
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_result_text16be PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
push	3
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
call	_setResultStrOrError
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_text16le PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
push	2
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
call	_setResultStrOrError
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_text16 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
push	2
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
call	_setResultStrOrError
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_text PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
push	1
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
call	_setResultStrOrError
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_null PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCtx$[ebp]
add	eax, 8
push	eax
call	_sqlite3VdbeMemSetNull
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_result_int64 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iVal$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iVal$[ebp]
push	ecx
mov	edx, DWORD PTR _pCtx$[ebp]
add	edx, 8
push	edx
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3_result_int PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iVal$[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _pCtx$[ebp]
add	eax, 8
push	eax
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3_result_error_code PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCtx$[ebp]
mov	ecx, DWORD PTR _errCode$[ebp]
mov	DWORD PTR [eax+64], ecx
mov	edx, DWORD PTR _pCtx$[ebp]
mov	BYTE PTR [edx+69], 1
mov	eax, DWORD PTR _pCtx$[ebp]
movzx	ecx, WORD PTR [eax+36]
and	ecx, 1
je	SHORT $LN2@sqlite3_re
push	0
push	1
push	-1
mov	edx, DWORD PTR _errCode$[ebp]
push	edx
call	_sqlite3ErrStr
add	esp, 4
push	eax
mov	eax, DWORD PTR _pCtx$[ebp]
add	eax, 8
push	eax
call	_sqlite3VdbeMemSetStr
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_error_nomem PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCtx$[ebp]
add	eax, 8
push	eax
call	_sqlite3VdbeMemSetNull
add	esp, 4
mov	ecx, DWORD PTR _pCtx$[ebp]
mov	DWORD PTR [ecx+64], 7
mov	edx, DWORD PTR _pCtx$[ebp]
mov	BYTE PTR [edx+69], 1
mov	eax, DWORD PTR _pCtx$[ebp]
mov	ecx, DWORD PTR [eax+8]
mov	BYTE PTR [ecx+64], 1
pop	ebp
ret	0
ENDP
_sqlite3_result_error_toobig PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCtx$[ebp]
mov	DWORD PTR [eax+64], 18			
mov	ecx, DWORD PTR _pCtx$[ebp]
mov	BYTE PTR [ecx+69], 1
push	0
push	1
push	-1
push	OFFSET $SG99156
mov	edx, DWORD PTR _pCtx$[ebp]
add	edx, 8
push	edx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_error16 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCtx$[ebp]
mov	DWORD PTR [eax+64], 1
mov	ecx, DWORD PTR _pCtx$[ebp]
mov	BYTE PTR [ecx+69], 1
push	-1
push	2
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _pCtx$[ebp]
add	ecx, 8
push	ecx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_error PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pCtx$[ebp]
mov	DWORD PTR [eax+64], 1
mov	ecx, DWORD PTR _pCtx$[ebp]
mov	BYTE PTR [ecx+69], 1
push	-1
push	1
mov	edx, DWORD PTR _n$[ebp]
push	edx
mov	eax, DWORD PTR _z$[ebp]
push	eax
mov	ecx, DWORD PTR _pCtx$[ebp]
add	ecx, 8
push	ecx
call	_sqlite3VdbeMemSetStr
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_result_double PROC
push	ebp
mov	ebp, esp
sub	esp, 8
movsd	xmm0, QWORD PTR _rVal$[ebp]
movsd	QWORD PTR [esp], xmm0
mov	eax, DWORD PTR _pCtx$[ebp]
add	eax, 8
push	eax
call	_sqlite3VdbeMemSetDouble
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3_result_blob PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
push	0
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _z$[ebp]
push	edx
mov	eax, DWORD PTR _pCtx$[ebp]
push	eax
call	_setResultStrOrError
add	esp, 20					
pop	ebp
ret	0
ENDP
_sqlite3_set_auxdata PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pCtx$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	DWORD PTR _pVdbe$[ebp], ecx
cmp	DWORD PTR _iArg$[ebp], 0
jge	SHORT $LN11@sqlite3_se
jmp	$failed$14
mov	edx, DWORD PTR _pVdbe$[ebp]
mov	eax, DWORD PTR [edx+204]
mov	DWORD PTR _pAuxData$[ebp], eax
jmp	SHORT $LN10@sqlite3_se
mov	ecx, DWORD PTR _pAuxData$[ebp]
mov	edx, DWORD PTR [ecx+16]
mov	DWORD PTR _pAuxData$[ebp], edx
cmp	DWORD PTR _pAuxData$[ebp], 0
je	SHORT $LN8@sqlite3_se
mov	eax, DWORD PTR _pAuxData$[ebp]
mov	ecx, DWORD PTR _pCtx$[ebp]
mov	edx, DWORD PTR [eax]
cmp	edx, DWORD PTR [ecx+60]
jne	SHORT $LN7@sqlite3_se
mov	eax, DWORD PTR _pAuxData$[ebp]
mov	ecx, DWORD PTR [eax+4]
cmp	ecx, DWORD PTR _iArg$[ebp]
jne	SHORT $LN7@sqlite3_se
jmp	SHORT $LN8@sqlite3_se
jmp	SHORT $LN9@sqlite3_se
cmp	DWORD PTR _pAuxData$[ebp], 0
jne	SHORT $LN6@sqlite3_se
push	20					
mov	edx, DWORD PTR _pVdbe$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pAuxData$[ebp], eax
cmp	DWORD PTR _pAuxData$[ebp], 0
jne	SHORT $LN5@sqlite3_se
jmp	SHORT $failed$14
mov	ecx, DWORD PTR _pAuxData$[ebp]
mov	edx, DWORD PTR _pCtx$[ebp]
mov	eax, DWORD PTR [edx+60]
mov	DWORD PTR [ecx], eax
mov	ecx, DWORD PTR _pAuxData$[ebp]
mov	edx, DWORD PTR _iArg$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pAuxData$[ebp]
mov	ecx, DWORD PTR _pVdbe$[ebp]
mov	edx, DWORD PTR [ecx+204]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _pVdbe$[ebp]
mov	ecx, DWORD PTR _pAuxData$[ebp]
mov	DWORD PTR [eax+204], ecx
mov	edx, DWORD PTR _pCtx$[ebp]
movzx	eax, BYTE PTR [edx+69]
test	eax, eax
jne	SHORT $LN4@sqlite3_se
mov	ecx, DWORD PTR _pCtx$[ebp]
mov	DWORD PTR [ecx+64], 0
mov	edx, DWORD PTR _pCtx$[ebp]
mov	BYTE PTR [edx+69], 1
jmp	SHORT $LN3@sqlite3_se
mov	eax, DWORD PTR _pAuxData$[ebp]
cmp	DWORD PTR [eax+12], 0
je	SHORT $LN3@sqlite3_se
mov	ecx, DWORD PTR _pAuxData$[ebp]
mov	edx, DWORD PTR [ecx+8]
push	edx
mov	eax, DWORD PTR _pAuxData$[ebp]
mov	ecx, DWORD PTR [eax+12]
call	ecx
add	esp, 4
mov	edx, DWORD PTR _pAuxData$[ebp]
mov	eax, DWORD PTR _pAux$[ebp]
mov	DWORD PTR [edx+8], eax
mov	ecx, DWORD PTR _pAuxData$[ebp]
mov	edx, DWORD PTR _xDelete$[ebp]
mov	DWORD PTR [ecx+12], edx
jmp	SHORT $LN12@sqlite3_se
cmp	DWORD PTR _xDelete$[ebp], 0
je	SHORT $LN12@sqlite3_se
mov	eax, DWORD PTR _pAux$[ebp]
push	eax
call	DWORD PTR _xDelete$[ebp]
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_get_auxdata PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pCtx$[ebp]
mov	ecx, DWORD PTR [eax+56]
mov	edx, DWORD PTR [ecx+204]
mov	DWORD PTR _pAuxData$[ebp], edx
jmp	SHORT $LN4@sqlite3_ge
mov	eax, DWORD PTR _pAuxData$[ebp]
mov	ecx, DWORD PTR [eax+16]
mov	DWORD PTR _pAuxData$[ebp], ecx
cmp	DWORD PTR _pAuxData$[ebp], 0
je	SHORT $LN2@sqlite3_ge
mov	edx, DWORD PTR _pAuxData$[ebp]
mov	eax, DWORD PTR _pCtx$[ebp]
mov	ecx, DWORD PTR [edx]
cmp	ecx, DWORD PTR [eax+60]
jne	SHORT $LN1@sqlite3_ge
mov	edx, DWORD PTR _pAuxData$[ebp]
mov	eax, DWORD PTR [edx+4]
cmp	eax, DWORD PTR _iArg$[ebp]
jne	SHORT $LN1@sqlite3_ge
jmp	SHORT $LN2@sqlite3_ge
jmp	SHORT $LN3@sqlite3_ge
cmp	DWORD PTR _pAuxData$[ebp], 0
je	SHORT $LN7@sqlite3_ge
mov	ecx, DWORD PTR _pAuxData$[ebp]
mov	edx, DWORD PTR [ecx+8]
mov	DWORD PTR tv75[ebp], edx
jmp	SHORT $LN8@sqlite3_ge
mov	DWORD PTR tv75[ebp], 0
mov	eax, DWORD PTR tv75[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_context_db_handle PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [eax+8]
pop	ebp
ret	0
ENDP
_sqlite3_user_data PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	eax, DWORD PTR [ecx+4]
pop	ebp
ret	0
ENDP
_sqlite3_aggregate_context PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	DWORD PTR _pMem$[ebp], ecx
mov	edx, DWORD PTR _pMem$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 8192				
jne	SHORT $LN4@sqlite3_ag
cmp	DWORD PTR _nByte$[ebp], 0
jg	SHORT $LN3@sqlite3_ag
mov	ecx, DWORD PTR _pMem$[ebp]
push	ecx
call	_sqlite3VdbeMemReleaseExternal
add	esp, 4
mov	edx, 1
mov	eax, DWORD PTR _pMem$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pMem$[ebp]
mov	DWORD PTR [ecx+4], 0
jmp	SHORT $LN4@sqlite3_ag
push	0
mov	edx, DWORD PTR _nByte$[ebp]
push	edx
mov	eax, DWORD PTR _pMem$[ebp]
push	eax
call	_sqlite3VdbeMemGrow
add	esp, 12					
mov	ecx, 8192				
mov	edx, DWORD PTR _pMem$[ebp]
mov	WORD PTR [edx+28], cx
mov	eax, DWORD PTR _pMem$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR [eax+16], edx
mov	eax, DWORD PTR _pMem$[ebp]
cmp	DWORD PTR [eax+4], 0
je	SHORT $LN4@sqlite3_ag
mov	ecx, DWORD PTR _nByte$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [edx+4]
push	eax
call	_memset
add	esp, 12					
mov	ecx, DWORD PTR _pMem$[ebp]
mov	eax, DWORD PTR [ecx+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_value_numeric_type PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR _eType$[ebp], eax
cmp	DWORD PTR _eType$[ebp], 3
jne	SHORT $LN1@sqlite3_va
mov	ecx, DWORD PTR _pVal$[ebp]
mov	DWORD PTR _pMem$1[ebp], ecx
mov	edx, DWORD PTR _pMem$1[ebp]
push	edx
call	_applyNumericAffinity
add	esp, 4
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR _eType$[ebp], eax
mov	eax, DWORD PTR _eType$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_value_type PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pVal$[ebp]
movzx	ecx, WORD PTR [eax+28]
and	ecx, 31					
movzx	eax, BYTE PTR ?aType@?1??sqlite3_value_type@@9@9[ecx]
pop	ebp
ret	0
ENDP
_sqlite3_value_text16be PROC
push	ebp
mov	ebp, esp
push	3
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueText
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_value_text16le PROC
push	ebp
mov	ebp, esp
push	2
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueText
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_value_text16 PROC
push	ebp
mov	ebp, esp
push	2
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueText
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_value_text PROC
push	ebp
mov	ebp, esp
push	1
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueText
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_value_int64 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3VdbeIntValue
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_value_int PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3VdbeIntValue
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_value_double PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3VdbeRealValue
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_value_bytes16 PROC
push	ebp
mov	ebp, esp
push	2
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueBytes
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_value_bytes PROC
push	ebp
mov	ebp, esp
push	1
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueBytes
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_value_blob PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pVal$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, 18					
je	SHORT $LN2@sqlite3_va
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	_sqlite3VdbeMemExpandBlob
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, 16					
mov	eax, DWORD PTR _p$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [ecx+24], 0
je	SHORT $LN5@sqlite3_va
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+4]
mov	DWORD PTR tv77[ebp], eax
jmp	SHORT $LN6@sqlite3_va
mov	DWORD PTR tv77[ebp], 0
mov	eax, DWORD PTR tv77[ebp]
jmp	SHORT $LN3@sqlite3_va
jmp	SHORT $LN3@sqlite3_va
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_memory_alarm PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iThreshold$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iThreshold$[ebp]
push	ecx
mov	edx, DWORD PTR _pArg$[ebp]
push	edx
mov	eax, DWORD PTR _xCallback$[ebp]
push	eax
call	_sqlite3MemoryAlarm
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_thread_cleanup PROC
push	ebp
mov	ebp, esp
pop	ebp
ret	0
ENDP
_sqlite3_global_recover PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_transfer_bindings PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pFromStmt$[ebp]
mov	DWORD PTR _pFrom$[ebp], eax
mov	ecx, DWORD PTR _pToStmt$[ebp]
mov	DWORD PTR _pTo$[ebp], ecx
mov	edx, DWORD PTR _pFrom$[ebp]
movsx	eax, WORD PTR [edx+68]
mov	ecx, DWORD PTR _pTo$[ebp]
movsx	edx, WORD PTR [ecx+68]
cmp	eax, edx
je	SHORT $LN3@sqlite3_tr
mov	eax, 1
jmp	SHORT $LN4@sqlite3_tr
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 10					
and	ecx, 1
je	SHORT $LN2@sqlite3_tr
mov	edx, DWORD PTR _pTo$[ebp]
cmp	DWORD PTR [edx+188], 0
je	SHORT $LN2@sqlite3_tr
mov	eax, DWORD PTR _pTo$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 32					
mov	edx, DWORD PTR _pTo$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 10					
and	ecx, 1
je	SHORT $LN1@sqlite3_tr
mov	edx, DWORD PTR _pFrom$[ebp]
cmp	DWORD PTR [edx+188], 0
je	SHORT $LN1@sqlite3_tr
mov	eax, DWORD PTR _pFrom$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 32					
mov	edx, DWORD PTR _pFrom$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _pToStmt$[ebp]
push	eax
mov	ecx, DWORD PTR _pFromStmt$[ebp]
push	ecx
call	_sqlite3TransferBindings
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_expired PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3_ex
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 5
and	edx, 1
jne	SHORT $LN3@sqlite3_ex
mov	DWORD PTR tv69[ebp], 0
jmp	SHORT $LN4@sqlite3_ex
mov	DWORD PTR tv69[ebp], 1
mov	eax, DWORD PTR tv69[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_aggregate_count PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+48]
mov	eax, DWORD PTR [ecx+24]
pop	ebp
ret	0
ENDP
_sqlite3_create_function_v2 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	DWORD PTR _rc$[ebp], 1
mov	DWORD PTR _pArg$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _xDestroy$[ebp], 0
je	SHORT $LN3@sqlite3_cr
push	12					
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _pArg$[ebp], eax
cmp	DWORD PTR _pArg$[ebp], 0
jne	SHORT $LN2@sqlite3_cr
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _xDestroy$[ebp]
add	esp, 4
jmp	SHORT $out$6
mov	ecx, DWORD PTR _pArg$[ebp]
mov	edx, DWORD PTR _xDestroy$[ebp]
mov	DWORD PTR [ecx+4], edx
mov	eax, DWORD PTR _pArg$[ebp]
mov	ecx, DWORD PTR _p$[ebp]
mov	DWORD PTR [eax+8], ecx
mov	edx, DWORD PTR _pArg$[ebp]
push	edx
mov	eax, DWORD PTR _xFinal$[ebp]
push	eax
mov	ecx, DWORD PTR _xStep$[ebp]
push	ecx
mov	edx, DWORD PTR _xFunc$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _nArg$[ebp]
push	edx
mov	eax, DWORD PTR _zFunc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3CreateFunc
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _pArg$[ebp], 0
je	SHORT $out$6
mov	edx, DWORD PTR _pArg$[ebp]
cmp	DWORD PTR [edx], 0
jne	SHORT $out$6
mov	eax, DWORD PTR _p$[ebp]
push	eax
call	DWORD PTR _xDestroy$[ebp]
add	esp, 4
mov	ecx, DWORD PTR _pArg$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_create_function16 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
push	2
push	-1
mov	edx, DWORD PTR _zFunctionName$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Utf16to8
add	esp, 16					
mov	DWORD PTR _zFunc8$[ebp], eax
push	0
mov	ecx, DWORD PTR _xFinal$[ebp]
push	ecx
mov	edx, DWORD PTR _xStep$[ebp]
push	edx
mov	eax, DWORD PTR _xFunc$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
mov	edx, DWORD PTR _eTextRep$[ebp]
push	edx
mov	eax, DWORD PTR _nArg$[ebp]
push	eax
mov	ecx, DWORD PTR _zFunc8$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3CreateFunc
add	esp, 36					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _zFunc8$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _rc$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_create_function PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _xFinal$[ebp]
push	eax
mov	ecx, DWORD PTR _xStep$[ebp]
push	ecx
mov	edx, DWORD PTR _xFunc$[ebp]
push	edx
mov	eax, DWORD PTR _p$[ebp]
push	eax
mov	ecx, DWORD PTR _enc$[ebp]
push	ecx
mov	edx, DWORD PTR _nArg$[ebp]
push	edx
mov	eax, DWORD PTR _zFunc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_create_function_v2
add	esp, 36					
pop	ebp
ret	0
ENDP
_sqlite3_reset PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _pStmt$[ebp], 0
jne	SHORT $LN2@sqlite3_re
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN1@sqlite3_re
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _v$1[ebp], eax
mov	ecx, DWORD PTR _v$1[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _v$1[ebp]
push	ecx
call	_sqlite3VdbeReset
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	edx, DWORD PTR _v$1[ebp]
push	edx
call	_sqlite3VdbeRewind
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _v$1[ebp]
mov	edx, DWORD PTR [ecx]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _v$1[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_finalize PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _pStmt$[ebp], 0
jne	SHORT $LN3@sqlite3_fi
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN2@sqlite3_fi
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _v$2[ebp], eax
mov	ecx, DWORD PTR _v$2[ebp]
mov	edx, DWORD PTR [ecx]
mov	DWORD PTR _db$1[ebp], edx
mov	eax, DWORD PTR _v$2[ebp]
push	eax
call	_vdbeSafety
add	esp, 4
test	eax, eax
je	SHORT $LN1@sqlite3_fi
push	65817					
call	_sqlite3MisuseError
add	esp, 4
jmp	SHORT $LN4@sqlite3_fi
mov	ecx, DWORD PTR _db$1[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _v$2[ebp]
push	eax
call	_sqlite3VdbeFinalize
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$1[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$1[ebp]
push	eax
call	_sqlite3LeaveMutexAndCloseZombie
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_value PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
mov	DWORD PTR _pOut$[ebp], eax
mov	edx, DWORD PTR _pOut$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 2048				
je	SHORT $LN1@sqlite3_co
mov	ecx, DWORD PTR _pOut$[ebp]
movzx	edx, WORD PTR [ecx+28]
and	edx, -2049				
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pOut$[ebp]
movzx	edx, WORD PTR [ecx+28]
or	edx, 4096				
mov	eax, DWORD PTR _pOut$[ebp]
mov	WORD PTR [eax+28], dx
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _pOut$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_type PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR _iType$[ebp], eax
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _iType$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_text16 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_text16
add	esp, 4
mov	DWORD PTR _val$[ebp], eax
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _val$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_text PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _val$[ebp], eax
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _val$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_int64 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_int64
add	esp, 4
mov	DWORD PTR _val$[ebp], eax
mov	DWORD PTR _val$[ebp+4], edx
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _val$[ebp]
mov	edx, DWORD PTR _val$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_int PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_int
add	esp, 4
mov	DWORD PTR _val$[ebp], eax
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _val$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_double PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_double
add	esp, 4
fstp	QWORD PTR _val$[ebp]
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
fld	QWORD PTR _val$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_bytes16 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_bytes16
add	esp, 4
mov	DWORD PTR _val$[ebp], eax
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _val$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_bytes PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_bytes
add	esp, 4
mov	DWORD PTR _val$[ebp], eax
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _val$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_blob PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnMem
add	esp, 8
push	eax
call	_sqlite3_value_blob
add	esp, 4
mov	DWORD PTR _val$[ebp], eax
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_columnMallocFailure
add	esp, 4
mov	eax, DWORD PTR _val$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_data_count PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _pVm$[ebp], eax
cmp	DWORD PTR _pVm$[ebp], 0
je	SHORT $LN1@sqlite3_da
mov	ecx, DWORD PTR _pVm$[ebp]
cmp	DWORD PTR [ecx+20], 0
jne	SHORT $LN2@sqlite3_da
xor	eax, eax
jmp	SHORT $LN3@sqlite3_da
mov	edx, DWORD PTR _pVm$[ebp]
movzx	eax, WORD PTR [edx+84]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_step PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _rc2$[ebp], 0
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _v$[ebp], eax
mov	DWORD PTR _cnt$[ebp], 0
mov	ecx, DWORD PTR _v$[ebp]
push	ecx
call	_vdbeSafetyNotNull
add	esp, 4
test	eax, eax
je	SHORT $LN6@sqlite3_st
push	66253					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN7@sqlite3_st
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [edx]
mov	DWORD PTR _db$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [eax+88]
and	ecx, -2049				
mov	edx, DWORD PTR _v$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3Step
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 17			
jne	SHORT $LN4@sqlite3_st
mov	ecx, DWORD PTR _cnt$[ebp]
mov	DWORD PTR tv80[ebp], ecx
mov	edx, DWORD PTR _cnt$[ebp]
add	edx, 1
mov	DWORD PTR _cnt$[ebp], edx
cmp	DWORD PTR tv80[ebp], 50			
jge	SHORT $LN4@sqlite3_st
mov	eax, DWORD PTR _v$[ebp]
push	eax
call	_sqlite3Reprepare
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _rc$[ebp]
mov	DWORD PTR _rc2$[ebp], ecx
cmp	DWORD PTR _rc2$[ebp], 0
jne	SHORT $LN4@sqlite3_st
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_sqlite3_reset
add	esp, 4
mov	eax, DWORD PTR _v$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 2048				
mov	edx, DWORD PTR _v$[ebp]
mov	DWORD PTR [edx+88], ecx
jmp	SHORT $LN5@sqlite3_st
cmp	DWORD PTR _rc2$[ebp], 0
je	SHORT $LN3@sqlite3_st
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+224]
push	ecx
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _zErr$1[ebp], eax
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR [edx+44]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3DbFree
add	esp, 8
mov	edx, DWORD PTR _db$[ebp]
movzx	eax, BYTE PTR [edx+64]
test	eax, eax
jne	SHORT $LN2@sqlite3_st
mov	ecx, DWORD PTR _zErr$1[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbStrDup
add	esp, 8
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx+44], eax
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _rc2$[ebp]
mov	DWORD PTR [edx+80], eax
jmp	SHORT $LN3@sqlite3_st
mov	ecx, DWORD PTR _v$[ebp]
mov	DWORD PTR [ecx+44], 0
mov	DWORD PTR _rc$[ebp], 7
mov	edx, DWORD PTR _v$[ebp]
mov	eax, DWORD PTR _rc$[ebp]
mov	DWORD PTR [edx+80], eax
mov	ecx, DWORD PTR _rc$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_column_decltype16 PROC
push	ebp
mov	ebp, esp
push	1
push	OFFSET _sqlite3_value_text16
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnName
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_column_decltype PROC
push	ebp
mov	ebp, esp
push	1
push	OFFSET _sqlite3_value_text
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnName
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_column_name16 PROC
push	ebp
mov	ebp, esp
push	0
push	OFFSET _sqlite3_value_text16
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnName
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_column_name PROC
push	ebp
mov	ebp, esp
push	0
push	OFFSET _sqlite3_value_text
mov	eax, DWORD PTR _N$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_columnName
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_column_count PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _pVm$[ebp], eax
cmp	DWORD PTR _pVm$[ebp], 0
je	SHORT $LN3@sqlite3_co
mov	ecx, DWORD PTR _pVm$[ebp]
movzx	edx, WORD PTR [ecx+84]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN4@sqlite3_co
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_clear_bindings PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	DWORD PTR _rc$[ebp], 0
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _pStmt$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
mov	DWORD PTR _mutex$[ebp], eax
mov	ecx, DWORD PTR _mutex$[ebp]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3_cl
mov	edx, DWORD PTR _i$[ebp]
add	edx, 1
mov	DWORD PTR _i$[ebp], edx
mov	eax, DWORD PTR _p$[ebp]
movsx	ecx, WORD PTR [eax+68]
cmp	DWORD PTR _i$[ebp], ecx
jge	SHORT $LN2@sqlite3_cl
imul	edx, DWORD PTR _i$[ebp], 40
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+60]
push	edx
call	_sqlite3VdbeMemRelease
add	esp, 4
imul	ecx, DWORD PTR _i$[ebp], 40
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx+60]
mov	edx, 1
mov	WORD PTR [eax+ecx+28], dx
jmp	SHORT $LN3@sqlite3_cl
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 10					
and	ecx, 1
je	SHORT $LN1@sqlite3_cl
mov	edx, DWORD PTR _p$[ebp]
cmp	DWORD PTR [edx+188], 0
je	SHORT $LN1@sqlite3_cl
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+88]
or	ecx, 32					
mov	edx, DWORD PTR _p$[ebp]
mov	DWORD PTR [edx+88], ecx
mov	eax, DWORD PTR _mutex$[ebp]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_bind_parameter_index PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zName$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
push	eax
mov	ecx, DWORD PTR _zName$[ebp]
push	ecx
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_sqlite3VdbeParameterIndex
add	esp, 12					
pop	ebp
ret	0
ENDP
_sqlite3_bind_parameter_name PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN1@sqlite3_bi
cmp	DWORD PTR _i$[ebp], 1
jl	SHORT $LN1@sqlite3_bi
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+70]
cmp	DWORD PTR _i$[ebp], edx
jle	SHORT $LN2@sqlite3_bi
xor	eax, eax
jmp	SHORT $LN3@sqlite3_bi
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+64]
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR [ecx+edx*4-4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_bind_parameter_count PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3_bi
mov	ecx, DWORD PTR _p$[ebp]
movsx	edx, WORD PTR [ecx+68]
mov	DWORD PTR tv67[ebp], edx
jmp	SHORT $LN4@sqlite3_bi
mov	DWORD PTR tv67[ebp], 0
mov	eax, DWORD PTR tv67[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_bind_zeroblob PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_vdbeUnbind
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3_bi
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _i$[ebp]
sub	ecx, 1
imul	edx, ecx, 40
mov	eax, DWORD PTR _p$[ebp]
add	edx, DWORD PTR [eax+60]
push	edx
call	_sqlite3VdbeMemSetZeroBlob
add	esp, 8
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_bind_value PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pValue$[ebp]
push	eax
call	_sqlite3_value_type
add	esp, 4
mov	DWORD PTR tv66[ebp], eax
mov	ecx, DWORD PTR tv66[ebp]
sub	ecx, 1
mov	DWORD PTR tv66[ebp], ecx
cmp	DWORD PTR tv66[ebp], 3
ja	$LN1@sqlite3_bi
mov	edx, DWORD PTR tv66[ebp]
jmp	DWORD PTR $LN12@sqlite3_bi[edx*4]
mov	eax, DWORD PTR _pValue$[ebp]
mov	ecx, DWORD PTR [eax+20]
push	ecx
mov	edx, DWORD PTR [eax+16]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_sqlite3_bind_int64
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN8@sqlite3_bi
mov	edx, DWORD PTR _pValue$[ebp]
sub	esp, 8
movsd	xmm0, QWORD PTR [edx+8]
movsd	QWORD PTR [esp], xmm0
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_sqlite3_bind_double
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN8@sqlite3_bi
mov	edx, DWORD PTR _pValue$[ebp]
movzx	eax, WORD PTR [edx+28]
and	eax, 16384				
je	SHORT $LN4@sqlite3_bi
mov	ecx, DWORD PTR _pValue$[ebp]
mov	edx, DWORD PTR [ecx+16]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_sqlite3_bind_zeroblob
add	esp, 12					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN3@sqlite3_bi
push	-1
mov	edx, DWORD PTR _pValue$[ebp]
mov	eax, DWORD PTR [edx+24]
push	eax
mov	ecx, DWORD PTR _pValue$[ebp]
mov	edx, DWORD PTR [ecx+4]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_sqlite3_bind_blob
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN8@sqlite3_bi
mov	edx, DWORD PTR _pValue$[ebp]
movzx	eax, BYTE PTR [edx+30]
push	eax
push	-1
mov	ecx, DWORD PTR _pValue$[ebp]
mov	edx, DWORD PTR [ecx+24]
push	edx
mov	eax, DWORD PTR _pValue$[ebp]
mov	ecx, DWORD PTR [eax+4]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
push	edx
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_bindText
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN8@sqlite3_bi
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_sqlite3_bind_null
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
npad	1
DD	$LN7@sqlite3_bi
DD	$LN6@sqlite3_bi
DD	$LN2@sqlite3_bi
DD	$LN5@sqlite3_bi
ENDP
_sqlite3_bind_text16 PROC
push	ebp
mov	ebp, esp
push	2
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
mov	ecx, DWORD PTR _nData$[ebp]
push	ecx
mov	edx, DWORD PTR _zData$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_bindText
add	esp, 24					
pop	ebp
ret	0
ENDP
_sqlite3_bind_text PROC
push	ebp
mov	ebp, esp
push	1
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
mov	ecx, DWORD PTR _nData$[ebp]
push	ecx
mov	edx, DWORD PTR _zData$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_bindText
add	esp, 24					
pop	ebp
ret	0
ENDP
_sqlite3_bind_null PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_vdbeUnbind
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3_bi
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_bind_int64 PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_vdbeUnbind
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3_bi
mov	eax, DWORD PTR _iValue$[ebp+4]
push	eax
mov	ecx, DWORD PTR _iValue$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
sub	edx, 1
imul	eax, edx, 40
mov	ecx, DWORD PTR _p$[ebp]
add	eax, DWORD PTR [ecx+60]
push	eax
call	_sqlite3VdbeMemSetInt64
add	esp, 12					
mov	edx, DWORD PTR _p$[ebp]
mov	eax, DWORD PTR [edx]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_bind_int PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _iValue$[ebp]
cdq
push	edx
push	eax
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3_bind_int64
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_bind_double PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
mov	ecx, DWORD PTR _i$[ebp]
push	ecx
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	_vdbeUnbind
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN1@sqlite3_bi
sub	esp, 8
movsd	xmm0, QWORD PTR _rValue$[ebp]
movsd	QWORD PTR [esp], xmm0
mov	eax, DWORD PTR _i$[ebp]
sub	eax, 1
imul	ecx, eax, 40
mov	edx, DWORD PTR _p$[ebp]
add	ecx, DWORD PTR [edx+60]
push	ecx
call	_sqlite3VdbeMemSetDouble
add	esp, 12					
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_bind_blob PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _xDel$[ebp]
push	eax
mov	ecx, DWORD PTR _nData$[ebp]
push	ecx
mov	edx, DWORD PTR _zData$[ebp]
push	edx
mov	eax, DWORD PTR _i$[ebp]
push	eax
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_bindText
add	esp, 24					
pop	ebp
ret	0
ENDP
_sqlite3_stmt_busy PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _v$[ebp], eax
cmp	DWORD PTR _v$[ebp], 0
je	SHORT $LN3@sqlite3_st
mov	ecx, DWORD PTR _v$[ebp]
cmp	DWORD PTR [ecx+76], 0
jle	SHORT $LN3@sqlite3_st
mov	edx, DWORD PTR _v$[ebp]
cmp	DWORD PTR [edx+40], -1108210269		
jne	SHORT $LN3@sqlite3_st
mov	DWORD PTR tv69[ebp], 1
jmp	SHORT $LN4@sqlite3_st
mov	DWORD PTR tv69[ebp], 0
mov	eax, DWORD PTR tv69[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_stmt_readonly PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _pStmt$[ebp], 0
je	SHORT $LN3@sqlite3_st
mov	eax, DWORD PTR _pStmt$[ebp]
mov	ecx, DWORD PTR [eax+88]
shr	ecx, 8
and	ecx, 1
mov	DWORD PTR tv68[ebp], ecx
jmp	SHORT $LN4@sqlite3_st
mov	DWORD PTR tv68[ebp], 1
mov	eax, DWORD PTR tv68[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_sql PROC
push	ebp
mov	ebp, esp
sub	esp, 8
mov	eax, DWORD PTR _pStmt$[ebp]
mov	DWORD PTR _p$[ebp], eax
cmp	DWORD PTR _p$[ebp], 0
je	SHORT $LN3@sqlite3_sq
mov	ecx, DWORD PTR _p$[ebp]
mov	edx, DWORD PTR [ecx+88]
shr	edx, 10					
and	edx, 1
je	SHORT $LN3@sqlite3_sq
mov	eax, DWORD PTR _p$[ebp]
mov	ecx, DWORD PTR [eax+168]
mov	DWORD PTR tv70[ebp], ecx
jmp	SHORT $LN4@sqlite3_sq
mov	DWORD PTR tv70[ebp], 0
mov	eax, DWORD PTR tv70[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_prepare16_v2 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pzTail$[ebp]
push	eax
mov	ecx, DWORD PTR _ppStmt$[ebp]
push	ecx
push	1
mov	edx, DWORD PTR _nBytes$[ebp]
push	edx
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Prepare16
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_prepare16 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pzTail$[ebp]
push	eax
mov	ecx, DWORD PTR _ppStmt$[ebp]
push	ecx
push	0
mov	edx, DWORD PTR _nBytes$[ebp]
push	edx
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Prepare16
add	esp, 24					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_prepare_v2 PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pzTail$[ebp]
push	eax
mov	ecx, DWORD PTR _ppStmt$[ebp]
push	ecx
push	0
push	1
mov	edx, DWORD PTR _nBytes$[ebp]
push	edx
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3LockAndPrepare
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_prepare PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _pzTail$[ebp]
push	eax
mov	ecx, DWORD PTR _ppStmt$[ebp]
push	ecx
push	0
push	0
mov	edx, DWORD PTR _nBytes$[ebp]
push	edx
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3LockAndPrepare
add	esp, 28					
mov	DWORD PTR _rc$[ebp], eax
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_limit PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _limitId$[ebp], 0
jl	SHORT $LN3@sqlite3_li
cmp	DWORD PTR _limitId$[ebp], 11		
jl	SHORT $LN4@sqlite3_li
or	eax, -1
jmp	SHORT $LN5@sqlite3_li
mov	eax, DWORD PTR _limitId$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+eax*4+88]
mov	DWORD PTR _oldLimit$[ebp], edx
cmp	DWORD PTR _newLimit$[ebp], 0
jl	SHORT $LN2@sqlite3_li
mov	eax, DWORD PTR _limitId$[ebp]
mov	ecx, DWORD PTR _newLimit$[ebp]
cmp	ecx, DWORD PTR _aHardLimit[eax*4]
jle	SHORT $LN1@sqlite3_li
mov	edx, DWORD PTR _limitId$[ebp]
mov	eax, DWORD PTR _aHardLimit[edx*4]
mov	DWORD PTR _newLimit$[ebp], eax
mov	ecx, DWORD PTR _limitId$[ebp]
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _newLimit$[ebp]
mov	DWORD PTR [edx+ecx*4+88], eax
mov	eax, DWORD PTR _oldLimit$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_errstr PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _rc$[ebp]
push	eax
call	_sqlite3ErrStr
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_errmsg16 PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _db$[ebp], 0
jne	SHORT $LN5@sqlite3_er
mov	eax, OFFSET ?outOfMem@?1??sqlite3_errmsg16@@9@9
jmp	$LN6@sqlite3_er
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SafetyCheckSickOrOk
add	esp, 4
test	eax, eax
jne	SHORT $LN4@sqlite3_er
mov	eax, OFFSET ?misuse@?1??sqlite3_errmsg16@@9@9
jmp	$LN6@sqlite3_er
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN3@sqlite3_er
mov	DWORD PTR _z$[ebp], OFFSET ?outOfMem@?1??sqlite3_errmsg16@@9@9
jmp	SHORT $LN2@sqlite3_er
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+224]
push	eax
call	_sqlite3_value_text16
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN1@sqlite3_er
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
call	_sqlite3ErrStr
add	esp, 4
push	eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+52]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+224]
push	ecx
call	_sqlite3_value_text16
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
mov	edx, DWORD PTR _db$[ebp]
mov	BYTE PTR [edx+64], 0
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_errmsg PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _db$[ebp], 0
jne	SHORT $LN5@sqlite3_er
push	7
call	_sqlite3ErrStr
add	esp, 4
jmp	$LN6@sqlite3_er
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SafetyCheckSickOrOk
add	esp, 4
test	eax, eax
jne	SHORT $LN4@sqlite3_er
push	122944					
call	_sqlite3MisuseError
add	esp, 4
push	eax
call	_sqlite3ErrStr
add	esp, 4
jmp	SHORT $LN6@sqlite3_er
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
movzx	ecx, BYTE PTR [eax+64]
test	ecx, ecx
je	SHORT $LN3@sqlite3_er
push	7
call	_sqlite3ErrStr
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
jmp	SHORT $LN2@sqlite3_er
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+224]
push	eax
call	_sqlite3_value_text
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
jne	SHORT $LN2@sqlite3_er
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+52]
push	edx
call	_sqlite3ErrStr
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_extended_errcode PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN3@sqlite3_ex
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SafetyCheckSickOrOk
add	esp, 4
test	eax, eax
jne	SHORT $LN3@sqlite3_ex
push	123022					
call	_sqlite3MisuseError
add	esp, 4
jmp	SHORT $LN4@sqlite3_ex
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN1@sqlite3_ex
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN2@sqlite3_ex
mov	eax, 7
jmp	SHORT $LN4@sqlite3_ex
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+52]
pop	ebp
ret	0
ENDP
_sqlite3_errcode PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN3@sqlite3_er
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SafetyCheckSickOrOk
add	esp, 4
test	eax, eax
jne	SHORT $LN3@sqlite3_er
push	123013					
call	_sqlite3MisuseError
add	esp, 4
jmp	SHORT $LN4@sqlite3_er
cmp	DWORD PTR _db$[ebp], 0
je	SHORT $LN1@sqlite3_er
mov	ecx, DWORD PTR _db$[ebp]
movzx	edx, BYTE PTR [ecx+64]
test	edx, edx
je	SHORT $LN2@sqlite3_er
mov	eax, 7
jmp	SHORT $LN4@sqlite3_er
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+52]
and	eax, DWORD PTR [ecx+56]
pop	ebp
ret	0
ENDP
_sqlite3_uri_int64 PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _zParam$[ebp]
push	eax
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
call	_sqlite3_uri_parameter
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN1@sqlite3_ur
push	1
mov	edx, DWORD PTR _z$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
push	eax
lea	eax, DWORD PTR _v$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3Atoi64
add	esp, 16					
test	eax, eax
jne	SHORT $LN1@sqlite3_ur
mov	edx, DWORD PTR _v$[ebp]
mov	DWORD PTR _bDflt$[ebp], edx
mov	eax, DWORD PTR _v$[ebp+4]
mov	DWORD PTR _bDflt$[ebp+4], eax
mov	eax, DWORD PTR _bDflt$[ebp]
mov	edx, DWORD PTR _bDflt$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_uri_boolean PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _zParam$[ebp]
push	eax
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
call	_sqlite3_uri_parameter
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
cmp	DWORD PTR _bDflt$[ebp], 0
je	SHORT $LN3@sqlite3_ur
mov	DWORD PTR tv68[ebp], 1
jmp	SHORT $LN4@sqlite3_ur
mov	DWORD PTR tv68[ebp], 0
mov	edx, DWORD PTR tv68[ebp]
mov	DWORD PTR _bDflt$[ebp], edx
cmp	DWORD PTR _z$[ebp], 0
je	SHORT $LN5@sqlite3_ur
mov	eax, DWORD PTR _bDflt$[ebp]
push	eax
mov	ecx, DWORD PTR _z$[ebp]
push	ecx
call	_sqlite3GetBoolean
add	esp, 8
movzx	edx, al
mov	DWORD PTR tv74[ebp], edx
jmp	SHORT $LN6@sqlite3_ur
mov	eax, DWORD PTR _bDflt$[ebp]
mov	DWORD PTR tv74[ebp], eax
mov	eax, DWORD PTR tv74[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_uri_parameter PROC
push	ebp
mov	ebp, esp
push	ecx
cmp	DWORD PTR _zFilename$[ebp], 0
jne	SHORT $LN4@sqlite3_ur
xor	eax, eax
jmp	SHORT $LN5@sqlite3_ur
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _zFilename$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _zFilename$[ebp], edx
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zFilename$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
test	eax, eax
je	SHORT $LN2@sqlite3_ur
mov	ecx, DWORD PTR _zParam$[ebp]
push	ecx
mov	edx, DWORD PTR _zFilename$[ebp]
push	edx
call	_strcmp
add	esp, 8
mov	DWORD PTR _x$1[ebp], eax
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _zFilename$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _zFilename$[ebp], edx
cmp	DWORD PTR _x$1[ebp], 0
jne	SHORT $LN1@sqlite3_ur
mov	eax, DWORD PTR _zFilename$[ebp]
jmp	SHORT $LN5@sqlite3_ur
mov	eax, DWORD PTR _zFilename$[ebp]
push	eax
call	_sqlite3Strlen30
add	esp, 4
mov	ecx, DWORD PTR _zFilename$[ebp]
lea	edx, DWORD PTR [ecx+eax+1]
mov	DWORD PTR _zFilename$[ebp], edx
jmp	SHORT $LN3@sqlite3_ur
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_open_v2 PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _zVfs$[ebp]
push	eax
mov	ecx, DWORD PTR _flags$[ebp]
push	ecx
mov	edx, DWORD PTR _ppDb$[ebp]
push	edx
mov	eax, DWORD PTR _filename$[ebp]
push	eax
call	_openDatabase
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_open16 PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	eax, DWORD PTR _ppDb$[ebp]
mov	DWORD PTR [eax], 0
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN4@sqlite3_op
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN5@sqlite3_op
push	0
call	_sqlite3ValueNew
add	esp, 4
mov	DWORD PTR _pVal$[ebp], eax
push	0
push	2
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
push	-1
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3ValueSetStr
add	esp, 20					
push	1
mov	eax, DWORD PTR _pVal$[ebp]
push	eax
call	_sqlite3ValueText
add	esp, 8
mov	DWORD PTR _zFilename8$[ebp], eax
cmp	DWORD PTR _zFilename8$[ebp], 0
je	SHORT $LN3@sqlite3_op
push	0
push	6
mov	ecx, DWORD PTR _ppDb$[ebp]
push	ecx
mov	edx, DWORD PTR _zFilename8$[ebp]
push	edx
call	_openDatabase
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3_op
mov	eax, DWORD PTR _ppDb$[ebp]
mov	ecx, DWORD PTR [eax]
mov	edx, 16					
imul	eax, edx, 0
mov	ecx, DWORD PTR [ecx+16]
mov	edx, DWORD PTR [ecx+eax+12]
movzx	eax, WORD PTR [edx+78]
and	eax, 1
jne	SHORT $LN2@sqlite3_op
mov	ecx, DWORD PTR _ppDb$[ebp]
mov	edx, DWORD PTR [ecx]
mov	eax, 16					
imul	ecx, eax, 0
mov	edx, DWORD PTR [edx+16]
mov	eax, DWORD PTR [edx+ecx+12]
mov	BYTE PTR [eax+77], 2
jmp	SHORT $LN1@sqlite3_op
mov	DWORD PTR _rc$[ebp], 7
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3ValueFree
add	esp, 4
mov	edx, DWORD PTR _rc$[ebp]
push	edx
push	0
call	_sqlite3ApiExit
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_open PROC
push	ebp
mov	ebp, esp
push	0
push	6
mov	eax, DWORD PTR _ppDb$[ebp]
push	eax
mov	ecx, DWORD PTR _zFilename$[ebp]
push	ecx
call	_openDatabase
add	esp, 16					
pop	ebp
ret	0
ENDP
_sqlite3_progress_handler PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _nOps$[ebp], 0
jle	SHORT $LN2@sqlite3_pr
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _xProgress$[ebp]
mov	DWORD PTR [edx+284], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _nOps$[ebp]
mov	DWORD PTR [ecx+292], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+288], ecx
jmp	SHORT $LN1@sqlite3_pr
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+284], 0
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+292], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+288], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_profile PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+176]
mov	DWORD PTR _pOld$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _xProfile$[ebp]
mov	DWORD PTR [ecx+172], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+176], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pOld$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_trace PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+168]
mov	DWORD PTR _pOld$[ebp], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _xTrace$[ebp]
mov	DWORD PTR [ecx+164], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [eax+168], ecx
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pOld$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_set_authorizer PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _xAuth$[ebp]
mov	DWORD PTR [edx+276], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [ecx+280], edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExpirePreparedStatements
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_randomness PROC
push	ebp
mov	ebp, esp
sub	esp, 276				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
mov	eax, DWORD PTR _pBuf$[ebp]
mov	DWORD PTR _zBuf$[ebp], eax
push	5
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _mutex$[ebp], eax
mov	ecx, DWORD PTR _mutex$[ebp]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _N$[ebp], 0
jg	SHORT $LN11@sqlite3_ra
mov	BYTE PTR _sqlite3Prng, 0
mov	edx, DWORD PTR _mutex$[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
jmp	$LN12@sqlite3_ra
movzx	eax, BYTE PTR _sqlite3Prng
test	eax, eax
jne	$LN3@sqlite3_ra
mov	BYTE PTR _sqlite3Prng+2, 0
mov	BYTE PTR _sqlite3Prng+1, 0
lea	ecx, DWORD PTR _k$2[ebp]
push	ecx
push	256					
push	0
call	_sqlite3_vfs_find
add	esp, 4
push	eax
call	_sqlite3OsRandomness
add	esp, 12					
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN9@sqlite3_ra
mov	edx, DWORD PTR _i$1[ebp]
add	edx, 1
mov	DWORD PTR _i$1[ebp], edx
cmp	DWORD PTR _i$1[ebp], 256		
jge	SHORT $LN7@sqlite3_ra
mov	eax, DWORD PTR _i$1[ebp]
mov	cl, BYTE PTR _i$1[ebp]
mov	BYTE PTR _sqlite3Prng[eax+3], cl
jmp	SHORT $LN8@sqlite3_ra
mov	DWORD PTR _i$1[ebp], 0
jmp	SHORT $LN6@sqlite3_ra
mov	edx, DWORD PTR _i$1[ebp]
add	edx, 1
mov	DWORD PTR _i$1[ebp], edx
cmp	DWORD PTR _i$1[ebp], 256		
jge	SHORT $LN4@sqlite3_ra
mov	eax, DWORD PTR _i$1[ebp]
movzx	ecx, BYTE PTR _sqlite3Prng[eax+3]
mov	edx, DWORD PTR _i$1[ebp]
movsx	eax, BYTE PTR _k$2[ebp+edx]
add	ecx, eax
movzx	edx, BYTE PTR _sqlite3Prng+2
add	edx, ecx
mov	BYTE PTR _sqlite3Prng+2, dl
movzx	eax, BYTE PTR _sqlite3Prng+2
mov	cl, BYTE PTR _sqlite3Prng[eax+3]
mov	BYTE PTR _t$[ebp], cl
movzx	edx, BYTE PTR _sqlite3Prng+2
mov	eax, DWORD PTR _i$1[ebp]
mov	cl, BYTE PTR _sqlite3Prng[eax+3]
mov	BYTE PTR _sqlite3Prng[edx+3], cl
mov	edx, DWORD PTR _i$1[ebp]
mov	al, BYTE PTR _t$[ebp]
mov	BYTE PTR _sqlite3Prng[edx+3], al
jmp	$LN5@sqlite3_ra
mov	BYTE PTR _sqlite3Prng, 1
mov	cl, BYTE PTR _sqlite3Prng+1
add	cl, 1
mov	BYTE PTR _sqlite3Prng+1, cl
movzx	edx, BYTE PTR _sqlite3Prng+1
mov	al, BYTE PTR _sqlite3Prng[edx+3]
mov	BYTE PTR _t$[ebp], al
movzx	ecx, BYTE PTR _t$[ebp]
movzx	edx, BYTE PTR _sqlite3Prng+2
add	edx, ecx
mov	BYTE PTR _sqlite3Prng+2, dl
movzx	eax, BYTE PTR _sqlite3Prng+2
movzx	ecx, BYTE PTR _sqlite3Prng+1
mov	dl, BYTE PTR _sqlite3Prng[eax+3]
mov	BYTE PTR _sqlite3Prng[ecx+3], dl
movzx	eax, BYTE PTR _sqlite3Prng+2
mov	cl, BYTE PTR _t$[ebp]
mov	BYTE PTR _sqlite3Prng[eax+3], cl
movzx	edx, BYTE PTR _sqlite3Prng+1
movzx	eax, BYTE PTR _sqlite3Prng[edx+3]
movzx	ecx, BYTE PTR _t$[ebp]
add	ecx, eax
mov	BYTE PTR _t$[ebp], cl
movzx	edx, BYTE PTR _t$[ebp]
mov	eax, DWORD PTR _zBuf$[ebp]
mov	cl, BYTE PTR _sqlite3Prng[edx+3]
mov	BYTE PTR [eax], cl
mov	edx, DWORD PTR _zBuf$[ebp]
add	edx, 1
mov	DWORD PTR _zBuf$[ebp], edx
mov	eax, DWORD PTR _N$[ebp]
sub	eax, 1
mov	DWORD PTR _N$[ebp], eax
jne	$LN3@sqlite3_ra
mov	ecx, DWORD PTR _mutex$[ebp]
push	ecx
call	_sqlite3_mutex_leave
add	esp, 4
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_memory_highwater PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
mov	eax, DWORD PTR _resetFlag$[ebp]
push	eax
lea	ecx, DWORD PTR _mx$[ebp]
push	ecx
lea	edx, DWORD PTR _n$[ebp]
push	edx
push	0
call	_sqlite3_status
add	esp, 16					
mov	eax, DWORD PTR _mx$[ebp]
cdq
mov	DWORD PTR _res$[ebp], eax
mov	DWORD PTR _res$[ebp+4], edx
mov	eax, DWORD PTR _res$[ebp]
mov	edx, DWORD PTR _res$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_memory_used PROC
push	ebp
mov	ebp, esp
sub	esp, 16					
push	0
lea	eax, DWORD PTR _mx$[ebp]
push	eax
lea	ecx, DWORD PTR _n$[ebp]
push	ecx
push	0
call	_sqlite3_status
add	esp, 16					
mov	eax, DWORD PTR _n$[ebp]
cdq
mov	DWORD PTR _res$[ebp], eax
mov	DWORD PTR _res$[ebp+4], edx
mov	eax, DWORD PTR _res$[ebp]
mov	edx, DWORD PTR _res$[ebp+4]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_free PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _p$[ebp], 0
jne	SHORT $LN3@sqlite3_fr
jmp	SHORT $LN4@sqlite3_fr
cmp	DWORD PTR _sqlite3Config, 0
je	SHORT $LN2@sqlite3_fr
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	_sqlite3MallocSize
add	esp, 4
neg	eax
push	eax
push	0
call	_sqlite3StatusAdd
add	esp, 8
push	-1
push	9
call	_sqlite3StatusAdd
add	esp, 8
mov	edx, DWORD PTR _p$[ebp]
push	edx
call	DWORD PTR _sqlite3Config+40
add	esp, 4
mov	eax, DWORD PTR _mem0
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
jmp	SHORT $LN4@sqlite3_fr
mov	ecx, DWORD PTR _p$[ebp]
push	ecx
call	DWORD PTR _sqlite3Config+40
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_realloc PROC
push	ebp
mov	ebp, esp
call	_sqlite3_initialize
test	eax, eax
je	SHORT $LN1@sqlite3_re
xor	eax, eax
jmp	SHORT $LN2@sqlite3_re
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _pOld$[ebp]
push	ecx
call	_sqlite3Realloc
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_malloc PROC
push	ebp
mov	ebp, esp
call	_sqlite3_initialize
test	eax, eax
je	SHORT $LN1@sqlite3_ma
xor	eax, eax
jmp	SHORT $LN2@sqlite3_ma
mov	eax, DWORD PTR _n$[ebp]
push	eax
call	_sqlite3Malloc
add	esp, 4
pop	ebp
ret	0
ENDP
_sqlite3_vsnprintf PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
cmp	DWORD PTR _n$[ebp], 0
jg	SHORT $LN1@sqlite3_vs
mov	eax, DWORD PTR _zBuf$[ebp]
jmp	SHORT $LN2@sqlite3_vs
push	0
mov	eax, DWORD PTR _n$[ebp]
push	eax
mov	ecx, DWORD PTR _zBuf$[ebp]
push	ecx
lea	edx, DWORD PTR _acc$[ebp]
push	edx
call	_sqlite3StrAccumInit
add	esp, 16					
mov	BYTE PTR _acc$[ebp+24], 0
mov	eax, DWORD PTR _ap$[ebp]
push	eax
mov	ecx, DWORD PTR _zFormat$[ebp]
push	ecx
push	0
lea	edx, DWORD PTR _acc$[ebp]
push	edx
call	_sqlite3VXPrintf
add	esp, 16					
lea	eax, DWORD PTR _acc$[ebp]
push	eax
call	_sqlite3StrAccumFinish
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_snprintf PROC
push	ebp
mov	ebp, esp
sub	esp, 8
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
mov	eax, DWORD PTR _zBuf$[ebp]
push	eax
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
call	_sqlite3_vsnprintf
add	esp, 16					
mov	DWORD PTR _z$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_vmprintf PROC
push	ebp
mov	ebp, esp
sub	esp, 108				
mov	eax, DWORD PTR ___security_cookie
xor	eax, ebp
mov	DWORD PTR __$ArrayPad$[ebp], eax
call	_sqlite3_initialize
test	eax, eax
je	SHORT $LN1@sqlite3_vm
xor	eax, eax
jmp	SHORT $LN2@sqlite3_vm
push	1000000000				
push	70					
lea	eax, DWORD PTR _zBase$[ebp]
push	eax
lea	ecx, DWORD PTR _acc$[ebp]
push	ecx
call	_sqlite3StrAccumInit
add	esp, 16					
mov	BYTE PTR _acc$[ebp+24], 2
mov	edx, DWORD PTR _ap$[ebp]
push	edx
mov	eax, DWORD PTR _zFormat$[ebp]
push	eax
push	0
lea	ecx, DWORD PTR _acc$[ebp]
push	ecx
call	_sqlite3VXPrintf
add	esp, 16					
lea	edx, DWORD PTR _acc$[ebp]
push	edx
call	_sqlite3StrAccumFinish
add	esp, 4
mov	DWORD PTR _z$[ebp], eax
mov	eax, DWORD PTR _z$[ebp]
mov	ecx, DWORD PTR __$ArrayPad$[ebp]
xor	ecx, ebp
call	@__security_check_cookie@4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_mprintf PROC
push	ebp
mov	ebp, esp
sub	esp, 8
call	_sqlite3_initialize
test	eax, eax
je	SHORT $LN1@sqlite3_mp
xor	eax, eax
jmp	SHORT $LN2@sqlite3_mp
lea	eax, DWORD PTR _zFormat$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
push	ecx
mov	edx, DWORD PTR _zFormat$[ebp]
push	edx
call	_sqlite3_vmprintf
add	esp, 8
mov	DWORD PTR _z$[ebp], eax
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _z$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_free_table PROC
push	ebp
mov	ebp, esp
sub	esp, 8
cmp	DWORD PTR _azResult$[ebp], 0
je	SHORT $LN6@sqlite3_fr
mov	eax, DWORD PTR _azResult$[ebp]
sub	eax, 4
mov	DWORD PTR _azResult$[ebp], eax
mov	ecx, 4
imul	edx, ecx, 0
mov	eax, DWORD PTR _azResult$[ebp]
mov	ecx, DWORD PTR [eax+edx]
mov	DWORD PTR _n$1[ebp], ecx
mov	DWORD PTR _i$2[ebp], 1
jmp	SHORT $LN4@sqlite3_fr
mov	edx, DWORD PTR _i$2[ebp]
add	edx, 1
mov	DWORD PTR _i$2[ebp], edx
mov	eax, DWORD PTR _i$2[ebp]
cmp	eax, DWORD PTR _n$1[ebp]
jge	SHORT $LN2@sqlite3_fr
mov	ecx, DWORD PTR _i$2[ebp]
mov	edx, DWORD PTR _azResult$[ebp]
cmp	DWORD PTR [edx+ecx*4], 0
je	SHORT $LN1@sqlite3_fr
mov	eax, DWORD PTR _i$2[ebp]
mov	ecx, DWORD PTR _azResult$[ebp]
mov	edx, DWORD PTR [ecx+eax*4]
push	edx
call	_sqlite3_free
add	esp, 4
jmp	SHORT $LN3@sqlite3_fr
mov	eax, DWORD PTR _azResult$[ebp]
push	eax
call	_sqlite3_free
add	esp, 4
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_get_table PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	eax, DWORD PTR _pazResult$[ebp]
mov	DWORD PTR [eax], 0
cmp	DWORD PTR _pnColumn$[ebp], 0
je	SHORT $LN12@sqlite3_ge
mov	ecx, DWORD PTR _pnColumn$[ebp]
mov	DWORD PTR [ecx], 0
cmp	DWORD PTR _pnRow$[ebp], 0
je	SHORT $LN11@sqlite3_ge
mov	edx, DWORD PTR _pnRow$[ebp]
mov	DWORD PTR [edx], 0
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN10@sqlite3_ge
mov	eax, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [eax], 0
mov	DWORD PTR _res$[ebp+4], 0
mov	DWORD PTR _res$[ebp+12], 0
mov	DWORD PTR _res$[ebp+16], 0
mov	DWORD PTR _res$[ebp+20], 1
mov	DWORD PTR _res$[ebp+8], 20		
mov	DWORD PTR _res$[ebp+24], 0
mov	ecx, DWORD PTR _res$[ebp+8]
shl	ecx, 2
push	ecx
call	_sqlite3_malloc
add	esp, 4
mov	DWORD PTR _res$[ebp], eax
cmp	DWORD PTR _res$[ebp], 0
jne	SHORT $LN9@sqlite3_ge
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+52], 7
mov	eax, 7
jmp	$LN13@sqlite3_ge
mov	eax, 4
imul	ecx, eax, 0
mov	edx, DWORD PTR _res$[ebp]
mov	DWORD PTR [edx+ecx], 0
mov	eax, DWORD PTR _pzErrMsg$[ebp]
push	eax
lea	ecx, DWORD PTR _res$[ebp]
push	ecx
push	OFFSET _sqlite3_get_table_cb
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_exec
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
mov	ecx, DWORD PTR _res$[ebp+20]
mov	edx, 4
imul	eax, edx, 0
mov	edx, DWORD PTR _res$[ebp]
mov	DWORD PTR [edx+eax], ecx
mov	eax, DWORD PTR _rc$[ebp]
and	eax, 255				
cmp	eax, 4
jne	SHORT $LN8@sqlite3_ge
mov	ecx, 4
shl	ecx, 0
add	ecx, DWORD PTR _res$[ebp]
push	ecx
call	_sqlite3_free_table
add	esp, 4
cmp	DWORD PTR _res$[ebp+4], 0
je	SHORT $LN7@sqlite3_ge
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN6@sqlite3_ge
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	eax, DWORD PTR [edx]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _res$[ebp+4]
push	ecx
push	OFFSET $SG115194
call	_sqlite3_mprintf
add	esp, 8
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _res$[ebp+4]
push	eax
call	_sqlite3_free
add	esp, 4
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _res$[ebp+24]
mov	DWORD PTR [ecx+52], edx
mov	eax, DWORD PTR _res$[ebp+24]
jmp	$LN13@sqlite3_ge
mov	eax, DWORD PTR _res$[ebp+4]
push	eax
call	_sqlite3_free
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN5@sqlite3_ge
mov	ecx, 4
shl	ecx, 0
add	ecx, DWORD PTR _res$[ebp]
push	ecx
call	_sqlite3_free_table
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN13@sqlite3_ge
mov	edx, DWORD PTR _res$[ebp+8]
cmp	edx, DWORD PTR _res$[ebp+20]
jle	SHORT $LN4@sqlite3_ge
mov	eax, DWORD PTR _res$[ebp+20]
shl	eax, 2
push	eax
mov	ecx, DWORD PTR _res$[ebp]
push	ecx
call	_sqlite3_realloc
add	esp, 8
mov	DWORD PTR _azNew$1[ebp], eax
cmp	DWORD PTR _azNew$1[ebp], 0
jne	SHORT $LN3@sqlite3_ge
mov	edx, 4
shl	edx, 0
add	edx, DWORD PTR _res$[ebp]
push	edx
call	_sqlite3_free_table
add	esp, 4
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+52], 7
mov	eax, 7
jmp	SHORT $LN13@sqlite3_ge
mov	ecx, DWORD PTR _azNew$1[ebp]
mov	DWORD PTR _res$[ebp], ecx
mov	edx, 4
shl	edx, 0
add	edx, DWORD PTR _res$[ebp]
mov	eax, DWORD PTR _pazResult$[ebp]
mov	DWORD PTR [eax], edx
cmp	DWORD PTR _pnColumn$[ebp], 0
je	SHORT $LN2@sqlite3_ge
mov	ecx, DWORD PTR _pnColumn$[ebp]
mov	edx, DWORD PTR _res$[ebp+16]
mov	DWORD PTR [ecx], edx
cmp	DWORD PTR _pnRow$[ebp], 0
je	SHORT $LN1@sqlite3_ge
mov	eax, DWORD PTR _pnRow$[ebp]
mov	ecx, DWORD PTR _res$[ebp+12]
mov	DWORD PTR [eax], ecx
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_busy_timeout PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _ms$[ebp], 0
jle	SHORT $LN2@sqlite3_bu
mov	eax, DWORD PTR _db$[ebp]
push	eax
push	OFFSET _sqliteDefaultBusyCallback
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_busy_handler
add	esp, 12					
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _ms$[ebp]
mov	DWORD PTR [edx+484], eax
jmp	SHORT $LN1@sqlite3_bu
push	0
push	0
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3_busy_handler
add	esp, 12					
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_busy_handler PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _xBusy$[ebp]
mov	DWORD PTR [edx+436], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _pArg$[ebp]
mov	DWORD PTR [ecx+440], edx
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+444], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	DWORD PTR [ecx+484], 0
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [edx+12]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_complete16 PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
mov	DWORD PTR _rc$[ebp], 7
call	_sqlite3_initialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN3@sqlite3_co
mov	eax, DWORD PTR _rc$[ebp]
jmp	SHORT $LN4@sqlite3_co
push	0
call	_sqlite3ValueNew
add	esp, 4
mov	DWORD PTR _pVal$[ebp], eax
push	0
push	2
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3ValueSetStr
add	esp, 20					
push	1
mov	edx, DWORD PTR _pVal$[ebp]
push	edx
call	_sqlite3ValueText
add	esp, 8
mov	DWORD PTR _zSql8$[ebp], eax
cmp	DWORD PTR _zSql8$[ebp], 0
je	SHORT $LN2@sqlite3_co
mov	eax, DWORD PTR _zSql8$[ebp]
push	eax
call	_sqlite3_complete
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
jmp	SHORT $LN1@sqlite3_co
mov	DWORD PTR _rc$[ebp], 7
mov	ecx, DWORD PTR _pVal$[ebp]
push	ecx
call	_sqlite3ValueFree
add	esp, 4
mov	edx, DWORD PTR _rc$[ebp]
push	edx
push	0
call	_sqlite3ApiExit
add	esp, 8
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_complete PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
mov	BYTE PTR _state$[ebp], 0
mov	eax, DWORD PTR _zSql$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
je	$LN48@sqlite3_co
mov	edx, DWORD PTR _zSql$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR tv67[ebp], eax
mov	ecx, DWORD PTR tv67[ebp]
sub	ecx, 9
mov	DWORD PTR tv67[ebp], ecx
cmp	DWORD PTR tv67[ebp], 87			
ja	$LN24@sqlite3_co
mov	edx, DWORD PTR tv67[ebp]
movzx	eax, BYTE PTR $LN56@sqlite3_co[edx]
jmp	DWORD PTR $LN58@sqlite3_co[eax*4]
mov	BYTE PTR _token$[ebp], 0
jmp	$LN46@sqlite3_co
mov	BYTE PTR _token$[ebp], 1
jmp	$LN46@sqlite3_co
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _zSql$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 42					
je	SHORT $LN42@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
jmp	$LN46@sqlite3_co
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, 2
mov	DWORD PTR _zSql$[ebp], ecx
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zSql$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
test	edx, edx
je	SHORT $LN40@sqlite3_co
mov	eax, 1
imul	ecx, eax, 0
mov	edx, DWORD PTR _zSql$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 42					
jne	SHORT $LN39@sqlite3_co
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _zSql$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 47					
je	SHORT $LN40@sqlite3_co
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, 1
mov	DWORD PTR _zSql$[ebp], ecx
jmp	SHORT $LN41@sqlite3_co
mov	edx, 1
imul	eax, edx, 0
mov	ecx, DWORD PTR _zSql$[ebp]
movsx	edx, BYTE PTR [ecx+eax]
test	edx, edx
jne	SHORT $LN38@sqlite3_co
xor	eax, eax
jmp	$LN50@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
add	eax, 1
mov	DWORD PTR _zSql$[ebp], eax
mov	BYTE PTR _token$[ebp], 1
jmp	$LN46@sqlite3_co
mov	ecx, 1
shl	ecx, 0
mov	edx, DWORD PTR _zSql$[ebp]
movsx	eax, BYTE PTR [edx+ecx]
cmp	eax, 45					
je	SHORT $LN35@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
jmp	$LN46@sqlite3_co
mov	ecx, DWORD PTR _zSql$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN34@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 10					
je	SHORT $LN34@sqlite3_co
mov	edx, DWORD PTR _zSql$[ebp]
add	edx, 1
mov	DWORD PTR _zSql$[ebp], edx
jmp	SHORT $LN35@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN33@sqlite3_co
movzx	edx, BYTE PTR _state$[ebp]
cmp	edx, 1
jne	SHORT $LN52@sqlite3_co
mov	DWORD PTR tv136[ebp], 1
jmp	SHORT $LN53@sqlite3_co
mov	DWORD PTR tv136[ebp], 0
mov	eax, DWORD PTR tv136[ebp]
jmp	$LN50@sqlite3_co
mov	BYTE PTR _token$[ebp], 1
jmp	$LN46@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
add	eax, 1
mov	DWORD PTR _zSql$[ebp], eax
mov	ecx, DWORD PTR _zSql$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
je	SHORT $LN30@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
movsx	ecx, BYTE PTR [eax]
cmp	ecx, 93					
je	SHORT $LN30@sqlite3_co
mov	edx, DWORD PTR _zSql$[ebp]
add	edx, 1
mov	DWORD PTR _zSql$[ebp], edx
jmp	SHORT $LN31@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
movsx	ecx, BYTE PTR [eax]
test	ecx, ecx
jne	SHORT $LN29@sqlite3_co
xor	eax, eax
jmp	$LN50@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
jmp	$LN46@sqlite3_co
mov	edx, DWORD PTR _zSql$[ebp]
movsx	eax, BYTE PTR [edx]
mov	DWORD PTR _c$1[ebp], eax
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, 1
mov	DWORD PTR _zSql$[ebp], ecx
mov	edx, DWORD PTR _zSql$[ebp]
movsx	eax, BYTE PTR [edx]
test	eax, eax
je	SHORT $LN26@sqlite3_co
mov	ecx, DWORD PTR _zSql$[ebp]
movsx	edx, BYTE PTR [ecx]
cmp	edx, DWORD PTR _c$1[ebp]
je	SHORT $LN26@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
add	eax, 1
mov	DWORD PTR _zSql$[ebp], eax
jmp	SHORT $LN27@sqlite3_co
mov	ecx, DWORD PTR _zSql$[ebp]
movsx	edx, BYTE PTR [ecx]
test	edx, edx
jne	SHORT $LN25@sqlite3_co
xor	eax, eax
jmp	$LN50@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
jmp	$LN46@sqlite3_co
mov	eax, DWORD PTR _zSql$[ebp]
movzx	ecx, BYTE PTR [eax]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 70					
je	$LN23@sqlite3_co
mov	DWORD PTR _nId$2[ebp], 1
jmp	SHORT $LN22@sqlite3_co
mov	eax, DWORD PTR _nId$2[ebp]
add	eax, 1
mov	DWORD PTR _nId$2[ebp], eax
mov	ecx, DWORD PTR _zSql$[ebp]
add	ecx, DWORD PTR _nId$2[ebp]
movzx	edx, BYTE PTR [ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
and	eax, 70					
je	SHORT $LN20@sqlite3_co
jmp	SHORT $LN21@sqlite3_co
mov	ecx, DWORD PTR _zSql$[ebp]
movsx	edx, BYTE PTR [ecx]
mov	DWORD PTR tv170[ebp], edx
mov	eax, DWORD PTR tv170[ebp]
sub	eax, 67					
mov	DWORD PTR tv170[ebp], eax
cmp	DWORD PTR tv170[ebp], 49		
ja	$LN2@sqlite3_co
mov	ecx, DWORD PTR tv170[ebp]
movzx	edx, BYTE PTR $LN57@sqlite3_co[ecx]
jmp	DWORD PTR $LN59@sqlite3_co[edx*4]
cmp	DWORD PTR _nId$2[ebp], 6
jne	SHORT $LN16@sqlite3_co
push	6
push	OFFSET $SG120252
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN16@sqlite3_co
mov	BYTE PTR _token$[ebp], 4
jmp	SHORT $LN15@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
jmp	$LN18@sqlite3_co
cmp	DWORD PTR _nId$2[ebp], 7
jne	SHORT $LN13@sqlite3_co
push	7
push	OFFSET $SG120256
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN13@sqlite3_co
mov	BYTE PTR _token$[ebp], 6
jmp	SHORT $LN12@sqlite3_co
cmp	DWORD PTR _nId$2[ebp], 4
jne	SHORT $LN11@sqlite3_co
push	4
push	OFFSET $SG120259
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN11@sqlite3_co
mov	BYTE PTR _token$[ebp], 5
jmp	SHORT $LN12@sqlite3_co
cmp	DWORD PTR _nId$2[ebp], 9
jne	SHORT $LN9@sqlite3_co
push	9
push	OFFSET $SG120262
mov	eax, DWORD PTR _zSql$[ebp]
push	eax
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN9@sqlite3_co
mov	BYTE PTR _token$[ebp], 5
jmp	SHORT $LN12@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
jmp	SHORT $LN18@sqlite3_co
cmp	DWORD PTR _nId$2[ebp], 3
jne	SHORT $LN6@sqlite3_co
push	3
push	OFFSET $SG120266
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN6@sqlite3_co
mov	BYTE PTR _token$[ebp], 7
jmp	SHORT $LN5@sqlite3_co
cmp	DWORD PTR _nId$2[ebp], 7
jne	SHORT $LN4@sqlite3_co
push	7
push	OFFSET $SG120269
mov	edx, DWORD PTR _zSql$[ebp]
push	edx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN4@sqlite3_co
mov	BYTE PTR _token$[ebp], 3
jmp	SHORT $LN5@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
jmp	SHORT $LN18@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
mov	eax, DWORD PTR _nId$2[ebp]
mov	ecx, DWORD PTR _zSql$[ebp]
lea	edx, DWORD PTR [ecx+eax-1]
mov	DWORD PTR _zSql$[ebp], edx
jmp	SHORT $LN46@sqlite3_co
mov	BYTE PTR _token$[ebp], 2
movzx	eax, BYTE PTR _state$[ebp]
movzx	ecx, BYTE PTR _token$[ebp]
mov	dl, BYTE PTR ?trans@?1??sqlite3_complete@@9@9[ecx+eax*8]
mov	BYTE PTR _state$[ebp], dl
mov	eax, DWORD PTR _zSql$[ebp]
add	eax, 1
mov	DWORD PTR _zSql$[ebp], eax
jmp	$LN49@sqlite3_co
movzx	ecx, BYTE PTR _state$[ebp]
cmp	ecx, 1
jne	SHORT $LN54@sqlite3_co
mov	DWORD PTR tv222[ebp], 1
jmp	SHORT $LN55@sqlite3_co
mov	DWORD PTR tv222[ebp], 0
mov	eax, DWORD PTR tv222[ebp]
mov	esp, ebp
pop	ebp
ret	0
npad	3
DD	$LN44@sqlite3_co
DD	$LN28@sqlite3_co
DD	$LN37@sqlite3_co
DD	$LN43@sqlite3_co
DD	$LN45@sqlite3_co
DD	$LN32@sqlite3_co
DD	$LN24@sqlite3_co
DB	0
DB	0
DB	6
DB	0
DB	0
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	0
DB	6
DB	1
DB	6
DB	6
DB	6
DB	6
DB	1
DB	6
DB	6
DB	6
DB	6
DB	6
DB	2
DB	6
DB	3
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	4
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	6
DB	5
DB	6
DB	6
DB	6
DB	6
DB	1
DD	$LN17@sqlite3_co
DD	$LN7@sqlite3_co
DD	$LN14@sqlite3_co
DD	$LN2@sqlite3_co
DB	0
DB	3
DB	1
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	2
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	0
DB	3
DB	1
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	3
DB	2
ENDP
_sqlite3_interrupt PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+232], 1
pop	ebp
ret	0
ENDP
_sqlite3_total_changes PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+84]
pop	ebp
ret	0
ENDP
_sqlite3_changes PROC
push	ebp
mov	ebp, esp
mov	eax, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [eax+80]
pop	ebp
ret	0
ENDP
_sqlite3_last_insert_rowid PROC
push	ebp
mov	ebp, esp
mov	ecx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR [ecx+32]
mov	edx, DWORD PTR [ecx+36]
pop	ebp
ret	0
ENDP
_sqlite3_extended_result_codes PROC
push	ebp
mov	ebp, esp
push	ecx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+12]
push	ecx
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _onoff$[ebp], 0
je	SHORT $LN3@sqlite3_ex
mov	DWORD PTR tv68[ebp], -1
jmp	SHORT $LN4@sqlite3_ex
mov	DWORD PTR tv68[ebp], 255		
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR tv68[ebp]
mov	DWORD PTR [edx+56], eax
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_db_config PROC
push	ebp
mov	ebp, esp
sub	esp, 44					
lea	eax, DWORD PTR _op$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv65[ebp], ecx
cmp	DWORD PTR tv65[ebp], 1001		
je	SHORT $LN11@sqlite3_db
jmp	SHORT $LN10@sqlite3_db
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	ecx, DWORD PTR [eax-4]
mov	DWORD PTR _pBuf$2[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	ecx, DWORD PTR [eax-4]
mov	DWORD PTR _sz$3[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
add	edx, 4
mov	DWORD PTR _ap$[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
mov	ecx, DWORD PTR [eax-4]
mov	DWORD PTR _cnt$4[ebp], ecx
mov	edx, DWORD PTR _cnt$4[ebp]
push	edx
mov	eax, DWORD PTR _sz$3[ebp]
push	eax
mov	ecx, DWORD PTR _pBuf$2[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_setupLookaside
add	esp, 16					
mov	DWORD PTR _rc$[ebp], eax
jmp	$LN12@sqlite3_db
mov	DWORD PTR _rc$[ebp], 1
mov	DWORD PTR _i$7[ebp], 0
jmp	SHORT $LN9@sqlite3_db
mov	eax, DWORD PTR _i$7[ebp]
add	eax, 1
mov	DWORD PTR _i$7[ebp], eax
cmp	DWORD PTR _i$7[ebp], 2
jae	$LN12@sqlite3_db
mov	ecx, DWORD PTR _i$7[ebp]
mov	edx, DWORD PTR ?aFlagOp@?4??sqlite3_db_config@@9@9[ecx*8]
cmp	edx, DWORD PTR _op$[ebp]
jne	$LN6@sqlite3_db
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _onoff$6[ebp], edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _pRes$5[ebp], edx
mov	eax, DWORD PTR _db$[ebp]
mov	ecx, DWORD PTR [eax+24]
mov	DWORD PTR _oldFlags$1[ebp], ecx
cmp	DWORD PTR _onoff$6[ebp], 0
jle	SHORT $LN5@sqlite3_db
mov	edx, DWORD PTR _db$[ebp]
mov	eax, DWORD PTR _i$7[ebp]
mov	ecx, DWORD PTR [edx+24]
or	ecx, DWORD PTR ?aFlagOp@?4??sqlite3_db_config@@9@9[eax*8+4]
mov	edx, DWORD PTR _db$[ebp]
mov	DWORD PTR [edx+24], ecx
jmp	SHORT $LN4@sqlite3_db
cmp	DWORD PTR _onoff$6[ebp], 0
jne	SHORT $LN4@sqlite3_db
mov	eax, DWORD PTR _i$7[ebp]
mov	ecx, DWORD PTR ?aFlagOp@?4??sqlite3_db_config@@9@9[eax*8+4]
not	ecx
mov	edx, DWORD PTR _db$[ebp]
and	ecx, DWORD PTR [edx+24]
mov	eax, DWORD PTR _db$[ebp]
mov	DWORD PTR [eax+24], ecx
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _oldFlags$1[ebp]
cmp	edx, DWORD PTR [ecx+24]
je	SHORT $LN2@sqlite3_db
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3ExpirePreparedStatements
add	esp, 4
cmp	DWORD PTR _pRes$5[ebp], 0
je	SHORT $LN1@sqlite3_db
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR _i$7[ebp]
mov	eax, DWORD PTR [ecx+24]
and	eax, DWORD PTR ?aFlagOp@?4??sqlite3_db_config@@9@9[edx*8+4]
je	SHORT $LN16@sqlite3_db
mov	DWORD PTR tv145[ebp], 1
jmp	SHORT $LN17@sqlite3_db
mov	DWORD PTR tv145[ebp], 0
mov	ecx, DWORD PTR _pRes$5[ebp]
mov	edx, DWORD PTR tv145[ebp]
mov	DWORD PTR [ecx], edx
mov	DWORD PTR _rc$[ebp], 0
jmp	SHORT $LN12@sqlite3_db
jmp	$LN8@sqlite3_db
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_config PROC
push	ebp
mov	ebp, esp
sub	esp, 28					
push	esi
push	edi
mov	DWORD PTR _rc$[ebp], 0
cmp	DWORD PTR _sqlite3Config+224, 0
je	SHORT $LN29@sqlite3_co
push	121405					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN30@sqlite3_co
lea	eax, DWORD PTR _op$[ebp+4]
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _op$[ebp]
mov	DWORD PTR tv68[ebp], ecx
mov	edx, DWORD PTR tv68[ebp]
sub	edx, 1
mov	DWORD PTR tv68[ebp], edx
cmp	DWORD PTR tv68[ebp], 21			
ja	$LN1@sqlite3_co
mov	eax, DWORD PTR tv68[ebp]
jmp	DWORD PTR $LN36@sqlite3_co[eax*4]
mov	DWORD PTR _sqlite3Config+4, 0
mov	DWORD PTR _sqlite3Config+8, 0
jmp	$LN27@sqlite3_co
mov	DWORD PTR _sqlite3Config+4, 1
mov	DWORD PTR _sqlite3Config+8, 0
jmp	$LN27@sqlite3_co
mov	DWORD PTR _sqlite3Config+4, 1
mov	DWORD PTR _sqlite3Config+8, 1
jmp	$LN27@sqlite3_co
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 4
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	ecx, 9
mov	esi, DWORD PTR [edx-4]
mov	edi, OFFSET _sqlite3Config+68
rep movsd
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	edx, DWORD PTR _ap$[ebp]
mov	ecx, 9
mov	esi, OFFSET _sqlite3Config+68
mov	edi, DWORD PTR [edx-4]
rep movsd
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	edx, DWORD PTR _ap$[ebp]
mov	ecx, 8
mov	esi, DWORD PTR [edx-4]
mov	edi, OFFSET _sqlite3Config+36
rep movsd
jmp	$LN27@sqlite3_co
cmp	DWORD PTR _sqlite3Config+36, 0
jne	SHORT $LN19@sqlite3_co
call	_sqlite3MemSetDefault
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	edx, DWORD PTR _ap$[ebp]
mov	ecx, 8
mov	esi, OFFSET _sqlite3Config+36
mov	edi, DWORD PTR [edx-4]
rep movsd
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config, edx
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+192, edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+196, edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+200, edx
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+204, edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+208, edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+212, edx
jmp	$LN27@sqlite3_co
jmp	$LN27@sqlite3_co
mov	DWORD PTR _rc$[ebp], 1
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	edx, DWORD PTR _ap$[ebp]
mov	ecx, 13					
mov	esi, DWORD PTR [edx-4]
mov	edi, OFFSET _sqlite3Config+104
rep movsd
jmp	$LN27@sqlite3_co
cmp	DWORD PTR _sqlite3Config+112, 0
jne	SHORT $LN11@sqlite3_co
call	_sqlite3PCacheSetDefault
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	edx, DWORD PTR _ap$[ebp]
mov	ecx, 13					
mov	esi, OFFSET _sqlite3Config+104
mov	edi, DWORD PTR [edx-4]
rep movsd
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+28, edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+32, edx
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+252, edx
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+256, edx
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+12, edx
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 4
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-4]
mov	DWORD PTR _sqlite3Config+16, edx
jmp	$LN27@sqlite3_co
mov	eax, DWORD PTR _ap$[ebp]
add	eax, 8
mov	DWORD PTR _ap$[ebp], eax
mov	ecx, DWORD PTR _ap$[ebp]
mov	edx, DWORD PTR [ecx-8]
mov	DWORD PTR _szMmap$1[ebp], edx
mov	eax, DWORD PTR [ecx-4]
mov	DWORD PTR _szMmap$1[ebp+4], eax
mov	ecx, DWORD PTR _ap$[ebp]
add	ecx, 8
mov	DWORD PTR _ap$[ebp], ecx
mov	edx, DWORD PTR _ap$[ebp]
mov	eax, DWORD PTR [edx-8]
mov	DWORD PTR _mxMmap$2[ebp], eax
mov	ecx, DWORD PTR [edx-4]
mov	DWORD PTR _mxMmap$2[ebp+4], ecx
cmp	DWORD PTR _mxMmap$2[ebp+4], 0
jl	SHORT $LN4@sqlite3_co
jg	SHORT $LN32@sqlite3_co
cmp	DWORD PTR _mxMmap$2[ebp], 0
jb	SHORT $LN4@sqlite3_co
cmp	DWORD PTR _mxMmap$2[ebp+4], 0
jl	SHORT $LN5@sqlite3_co
jg	SHORT $LN4@sqlite3_co
cmp	DWORD PTR _mxMmap$2[ebp], 2147418112	
jbe	SHORT $LN5@sqlite3_co
mov	DWORD PTR _mxMmap$2[ebp], 2147418112	
mov	DWORD PTR _mxMmap$2[ebp+4], 0
mov	edx, DWORD PTR _mxMmap$2[ebp]
mov	DWORD PTR _sqlite3Config+184, edx
mov	eax, DWORD PTR _mxMmap$2[ebp+4]
mov	DWORD PTR _sqlite3Config+188, eax
cmp	DWORD PTR _szMmap$1[ebp+4], 0
jg	SHORT $LN3@sqlite3_co
jl	SHORT $LN34@sqlite3_co
cmp	DWORD PTR _szMmap$1[ebp], 0
jae	SHORT $LN3@sqlite3_co
xorpd	xmm0, xmm0
movlpd	QWORD PTR _szMmap$1[ebp], xmm0
mov	ecx, DWORD PTR _szMmap$1[ebp+4]
cmp	ecx, DWORD PTR _mxMmap$2[ebp+4]
jl	SHORT $LN2@sqlite3_co
jg	SHORT $LN35@sqlite3_co
mov	edx, DWORD PTR _szMmap$1[ebp]
cmp	edx, DWORD PTR _mxMmap$2[ebp]
jbe	SHORT $LN2@sqlite3_co
mov	eax, DWORD PTR _mxMmap$2[ebp]
mov	DWORD PTR _szMmap$1[ebp], eax
mov	ecx, DWORD PTR _mxMmap$2[ebp+4]
mov	DWORD PTR _szMmap$1[ebp+4], ecx
mov	edx, DWORD PTR _szMmap$1[ebp]
mov	DWORD PTR _sqlite3Config+176, edx
mov	eax, DWORD PTR _szMmap$1[ebp+4]
mov	DWORD PTR _sqlite3Config+180, eax
jmp	SHORT $LN27@sqlite3_co
mov	DWORD PTR _rc$[ebp], 1
mov	DWORD PTR _ap$[ebp], 0
mov	eax, DWORD PTR _rc$[ebp]
pop	edi
pop	esi
mov	esp, ebp
pop	ebp
ret	0
DD	$LN26@sqlite3_co
DD	$LN25@sqlite3_co
DD	$LN24@sqlite3_co
DD	$LN21@sqlite3_co
DD	$LN20@sqlite3_co
DD	$LN17@sqlite3_co
DD	$LN16@sqlite3_co
DD	$LN1@sqlite3_co
DD	$LN18@sqlite3_co
DD	$LN23@sqlite3_co
DD	$LN22@sqlite3_co
DD	$LN1@sqlite3_co
DD	$LN10@sqlite3_co
DD	$LN15@sqlite3_co
DD	$LN14@sqlite3_co
DD	$LN9@sqlite3_co
DD	$LN8@sqlite3_co
DD	$LN13@sqlite3_co
DD	$LN12@sqlite3_co
DD	$LN7@sqlite3_co
DD	$LN1@sqlite3_co
DD	$LN6@sqlite3_co
ENDP
_sqlite3_os_end PROC
push	ebp
mov	ebp, esp
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_os_init PROC
push	ebp
mov	ebp, esp
push	36					
push	0
push	OFFSET _winSysInfo
call	_memset
add	esp, 12					
push	OFFSET _winSysInfo
mov	eax, 12					
imul	ecx, eax, 28
mov	edx, DWORD PTR _aSyscall[ecx+4]
call	edx
push	1
push	OFFSET ?winVfs@?1??sqlite3_os_init@@9@9
call	_sqlite3_vfs_register
add	esp, 8
push	0
push	OFFSET ?winLongPathVfs@?1??sqlite3_os_init@@9@9
call	_sqlite3_vfs_register
add	esp, 8
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_shutdown PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _sqlite3Config+224, 0
je	SHORT $LN4@sqlite3_sh
call	_sqlite3_os_end
call	_sqlite3_reset_auto_extension
mov	DWORD PTR _sqlite3Config+224, 0
cmp	DWORD PTR _sqlite3Config+240, 0
je	SHORT $LN3@sqlite3_sh
call	_sqlite3PcacheShutdown
mov	DWORD PTR _sqlite3Config+240, 0
cmp	DWORD PTR _sqlite3Config+236, 0
je	SHORT $LN2@sqlite3_sh
call	_sqlite3MallocEnd
mov	DWORD PTR _sqlite3Config+236, 0
mov	DWORD PTR _sqlite3_data_directory, 0
mov	DWORD PTR _sqlite3_temp_directory, 0
cmp	DWORD PTR _sqlite3Config+232, 0
je	SHORT $LN1@sqlite3_sh
call	_sqlite3MutexEnd
mov	DWORD PTR _sqlite3Config+232, 0
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_initialize PROC
push	ebp
mov	ebp, esp
sub	esp, 12					
cmp	DWORD PTR _sqlite3Config+224, 0
je	SHORT $LN13@sqlite3_in
xor	eax, eax
jmp	$LN14@sqlite3_in
call	_sqlite3MutexInit
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN12@sqlite3_in
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN14@sqlite3_in
push	2
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _pMaster$[ebp], eax
mov	eax, DWORD PTR _pMaster$[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	DWORD PTR _sqlite3Config+232, 1
cmp	DWORD PTR _sqlite3Config+236, 0
jne	SHORT $LN11@sqlite3_in
call	_sqlite3MallocInit
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN10@sqlite3_in
mov	DWORD PTR _sqlite3Config+236, 1
cmp	DWORD PTR _sqlite3Config+248, 0
jne	SHORT $LN10@sqlite3_in
push	1
call	_sqlite3MutexAlloc
add	esp, 4
mov	DWORD PTR _sqlite3Config+248, eax
cmp	DWORD PTR _sqlite3Config+4, 0
je	SHORT $LN10@sqlite3_in
cmp	DWORD PTR _sqlite3Config+248, 0
jne	SHORT $LN10@sqlite3_in
mov	DWORD PTR _rc$[ebp], 7
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN7@sqlite3_in
mov	ecx, DWORD PTR _sqlite3Config+244
add	ecx, 1
mov	DWORD PTR _sqlite3Config+244, ecx
mov	edx, DWORD PTR _pMaster$[ebp]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN6@sqlite3_in
mov	eax, DWORD PTR _rc$[ebp]
jmp	$LN14@sqlite3_in
mov	eax, DWORD PTR _sqlite3Config+248
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
cmp	DWORD PTR _sqlite3Config+224, 0
jne	$LN5@sqlite3_in
cmp	DWORD PTR _sqlite3Config+228, 0
jne	$LN5@sqlite3_in
mov	DWORD PTR _pHash$1[ebp], OFFSET _sqlite3GlobalFunctions
mov	DWORD PTR _sqlite3Config+228, 1
push	92					
push	0
mov	ecx, DWORD PTR _pHash$1[ebp]
push	ecx
call	_memset
add	esp, 12					
call	_sqlite3RegisterGlobalFunctions
cmp	DWORD PTR _sqlite3Config+240, 0
jne	SHORT $LN4@sqlite3_in
call	_sqlite3PcacheInitialize
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN3@sqlite3_in
mov	DWORD PTR _sqlite3Config+240, 1
call	_sqlite3OsInit
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
jne	SHORT $LN2@sqlite3_in
mov	edx, DWORD PTR _sqlite3Config+212
push	edx
mov	eax, DWORD PTR _sqlite3Config+208
push	eax
mov	ecx, DWORD PTR _sqlite3Config+204
push	ecx
call	_sqlite3PCacheBufferSetup
add	esp, 12					
mov	DWORD PTR _sqlite3Config+224, 1
mov	DWORD PTR _sqlite3Config+228, 0
mov	edx, DWORD PTR _sqlite3Config+248
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _pMaster$[ebp]
push	eax
call	_sqlite3_mutex_enter
add	esp, 4
mov	ecx, DWORD PTR _sqlite3Config+244
sub	ecx, 1
mov	DWORD PTR _sqlite3Config+244, ecx
cmp	DWORD PTR _sqlite3Config+244, 0
jg	SHORT $LN1@sqlite3_in
mov	edx, DWORD PTR _sqlite3Config+248
push	edx
call	_sqlite3_mutex_free
add	esp, 4
mov	DWORD PTR _sqlite3Config+248, 0
mov	eax, DWORD PTR _pMaster$[ebp]
push	eax
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_exec PROC
push	ebp
mov	ebp, esp
sub	esp, 36					
mov	DWORD PTR _rc$[ebp], 0
mov	DWORD PTR _pStmt$[ebp], 0
mov	DWORD PTR _azCols$[ebp], 0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3SafetyCheckOk
add	esp, 4
test	eax, eax
jne	SHORT $LN30@sqlite3_ex
push	96044					
call	_sqlite3MisuseError
add	esp, 4
jmp	$LN31@sqlite3_ex
cmp	DWORD PTR _zSql$[ebp], 0
jne	SHORT $LN29@sqlite3_ex
mov	DWORD PTR _zSql$[ebp], OFFSET $SG110887
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_enter
add	esp, 4
push	0
push	0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Error
add	esp, 12					
cmp	DWORD PTR _rc$[ebp], 0
jne	$exec_out$35
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zSql$[ebp]
movsx	ecx, BYTE PTR [eax+edx]
test	ecx, ecx
je	$exec_out$35
mov	DWORD PTR _azVals$2[ebp], 0
mov	DWORD PTR _pStmt$[ebp], 0
lea	edx, DWORD PTR _zLeftover$[ebp]
push	edx
lea	eax, DWORD PTR _pStmt$[ebp]
push	eax
push	-1
mov	ecx, DWORD PTR _zSql$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_prepare_v2
add	esp, 20					
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	SHORT $LN26@sqlite3_ex
jmp	SHORT $LN28@sqlite3_ex
cmp	DWORD PTR _pStmt$[ebp], 0
jne	SHORT $LN25@sqlite3_ex
mov	eax, DWORD PTR _zLeftover$[ebp]
mov	DWORD PTR _zSql$[ebp], eax
jmp	SHORT $LN28@sqlite3_ex
mov	DWORD PTR _callbackIsInit$[ebp], 0
mov	ecx, DWORD PTR _pStmt$[ebp]
push	ecx
call	_sqlite3_column_count
add	esp, 4
mov	DWORD PTR _nCol$3[ebp], eax
mov	edx, 1
test	edx, edx
je	$LN23@sqlite3_ex
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3_step
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _xCallback$[ebp], 0
je	$LN22@sqlite3_ex
cmp	DWORD PTR _rc$[ebp], 100		
je	SHORT $LN21@sqlite3_ex
cmp	DWORD PTR _rc$[ebp], 101		
jne	$LN22@sqlite3_ex
cmp	DWORD PTR _callbackIsInit$[ebp], 0
jne	$LN22@sqlite3_ex
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+24]
and	edx, 256				
je	$LN22@sqlite3_ex
cmp	DWORD PTR _callbackIsInit$[ebp], 0
jne	SHORT $LN20@sqlite3_ex
mov	eax, DWORD PTR _nCol$3[ebp]
shl	eax, 1
lea	ecx, DWORD PTR [eax*4+1]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbMallocZero
add	esp, 8
mov	DWORD PTR _azCols$[ebp], eax
cmp	DWORD PTR _azCols$[ebp], 0
jne	SHORT $LN19@sqlite3_ex
jmp	$exec_out$35
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN18@sqlite3_ex
mov	eax, DWORD PTR _i$4[ebp]
add	eax, 1
mov	DWORD PTR _i$4[ebp], eax
mov	ecx, DWORD PTR _i$4[ebp]
cmp	ecx, DWORD PTR _nCol$3[ebp]
jge	SHORT $LN16@sqlite3_ex
mov	edx, DWORD PTR _i$4[ebp]
push	edx
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3_column_name
add	esp, 8
mov	ecx, DWORD PTR _i$4[ebp]
mov	edx, DWORD PTR _azCols$[ebp]
mov	DWORD PTR [edx+ecx*4], eax
jmp	SHORT $LN17@sqlite3_ex
mov	DWORD PTR _callbackIsInit$[ebp], 1
cmp	DWORD PTR _rc$[ebp], 100		
jne	SHORT $LN15@sqlite3_ex
mov	eax, DWORD PTR _nCol$3[ebp]
mov	ecx, DWORD PTR _azCols$[ebp]
lea	edx, DWORD PTR [ecx+eax*4]
mov	DWORD PTR _azVals$2[ebp], edx
mov	DWORD PTR _i$4[ebp], 0
jmp	SHORT $LN14@sqlite3_ex
mov	eax, DWORD PTR _i$4[ebp]
add	eax, 1
mov	DWORD PTR _i$4[ebp], eax
mov	ecx, DWORD PTR _i$4[ebp]
cmp	ecx, DWORD PTR _nCol$3[ebp]
jge	SHORT $LN15@sqlite3_ex
mov	edx, DWORD PTR _i$4[ebp]
push	edx
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3_column_text
add	esp, 8
mov	ecx, DWORD PTR _i$4[ebp]
mov	edx, DWORD PTR _azVals$2[ebp]
mov	DWORD PTR [edx+ecx*4], eax
mov	eax, DWORD PTR _i$4[ebp]
mov	ecx, DWORD PTR _azVals$2[ebp]
cmp	DWORD PTR [ecx+eax*4], 0
jne	SHORT $LN11@sqlite3_ex
mov	edx, DWORD PTR _i$4[ebp]
push	edx
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3_column_type
add	esp, 8
cmp	eax, 5
je	SHORT $LN11@sqlite3_ex
mov	ecx, DWORD PTR _db$[ebp]
mov	BYTE PTR [ecx+64], 1
jmp	$exec_out$35
jmp	SHORT $LN13@sqlite3_ex
mov	edx, DWORD PTR _azCols$[ebp]
push	edx
mov	eax, DWORD PTR _azVals$2[ebp]
push	eax
mov	ecx, DWORD PTR _nCol$3[ebp]
push	ecx
mov	edx, DWORD PTR _pArg$[ebp]
push	edx
call	DWORD PTR _xCallback$[ebp]
add	esp, 16					
test	eax, eax
je	SHORT $LN22@sqlite3_ex
mov	DWORD PTR _rc$[ebp], 4
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3VdbeFinalize
add	esp, 4
mov	DWORD PTR _pStmt$[ebp], 0
push	0
push	4
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3Error
add	esp, 12					
jmp	SHORT $exec_out$35
cmp	DWORD PTR _rc$[ebp], 100		
je	SHORT $LN9@sqlite3_ex
mov	edx, DWORD PTR _pStmt$[ebp]
push	edx
call	_sqlite3VdbeFinalize
add	esp, 4
mov	DWORD PTR _rc$[ebp], eax
mov	DWORD PTR _pStmt$[ebp], 0
mov	eax, DWORD PTR _zLeftover$[ebp]
mov	DWORD PTR _zSql$[ebp], eax
mov	ecx, 1
imul	edx, ecx, 0
mov	eax, DWORD PTR _zSql$[ebp]
movzx	ecx, BYTE PTR [eax+edx]
movzx	edx, BYTE PTR _sqlite3CtypeMap[ecx]
and	edx, 1
je	SHORT $LN7@sqlite3_ex
mov	eax, DWORD PTR _zSql$[ebp]
add	eax, 1
mov	DWORD PTR _zSql$[ebp], eax
jmp	SHORT $LN8@sqlite3_ex
jmp	SHORT $LN23@sqlite3_ex
jmp	$LN24@sqlite3_ex
mov	ecx, DWORD PTR _azCols$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	DWORD PTR _azCols$[ebp], 0
jmp	$LN28@sqlite3_ex
cmp	DWORD PTR _pStmt$[ebp], 0
je	SHORT $LN6@sqlite3_ex
mov	eax, DWORD PTR _pStmt$[ebp]
push	eax
call	_sqlite3VdbeFinalize
add	esp, 4
mov	ecx, DWORD PTR _azCols$[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3DbFree
add	esp, 8
mov	eax, DWORD PTR _rc$[ebp]
push	eax
mov	ecx, DWORD PTR _db$[ebp]
push	ecx
call	_sqlite3ApiExit
add	esp, 8
mov	DWORD PTR _rc$[ebp], eax
cmp	DWORD PTR _rc$[ebp], 0
je	$LN5@sqlite3_ex
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_errcode
add	esp, 4
cmp	DWORD PTR _rc$[ebp], eax
jne	SHORT $LN5@sqlite3_ex
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN5@sqlite3_ex
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3_errmsg
add	esp, 4
push	eax
call	_sqlite3Strlen30
add	esp, 4
add	eax, 1
mov	DWORD PTR _nErrMsg$1[ebp], eax
mov	ecx, DWORD PTR _nErrMsg$1[ebp]
push	ecx
call	_sqlite3Malloc
add	esp, 4
mov	edx, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [edx], eax
mov	eax, DWORD PTR _pzErrMsg$[ebp]
cmp	DWORD PTR [eax], 0
je	SHORT $LN4@sqlite3_ex
mov	ecx, DWORD PTR _nErrMsg$1[ebp]
push	ecx
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3_errmsg
add	esp, 4
push	eax
mov	eax, DWORD PTR _pzErrMsg$[ebp]
mov	ecx, DWORD PTR [eax]
push	ecx
call	_memcpy
add	esp, 12					
jmp	SHORT $LN3@sqlite3_ex
mov	DWORD PTR _rc$[ebp], 7
push	0
push	7
mov	edx, DWORD PTR _db$[ebp]
push	edx
call	_sqlite3Error
add	esp, 12					
jmp	SHORT $LN2@sqlite3_ex
cmp	DWORD PTR _pzErrMsg$[ebp], 0
je	SHORT $LN2@sqlite3_ex
mov	eax, DWORD PTR _pzErrMsg$[ebp]
mov	DWORD PTR [eax], 0
mov	ecx, DWORD PTR _db$[ebp]
mov	edx, DWORD PTR [ecx+12]
push	edx
call	_sqlite3_mutex_leave
add	esp, 4
mov	eax, DWORD PTR _rc$[ebp]
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_close_v2 PROC
push	ebp
mov	ebp, esp
push	1
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Close
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_close PROC
push	ebp
mov	ebp, esp
push	0
mov	eax, DWORD PTR _db$[ebp]
push	eax
call	_sqlite3Close
add	esp, 8
pop	ebp
ret	0
ENDP
_sqlite3_threadsafe PROC
push	ebp
mov	ebp, esp
mov	eax, 1
pop	ebp
ret	0
ENDP
_sqlite3_compileoption_get PROC
push	ebp
mov	ebp, esp
cmp	DWORD PTR _N$[ebp], 0
jl	SHORT $LN1@sqlite3_co
cmp	DWORD PTR _N$[ebp], 2
jge	SHORT $LN1@sqlite3_co
mov	eax, DWORD PTR _N$[ebp]
mov	eax, DWORD PTR _azCompileOpt[eax*4]
jmp	SHORT $LN2@sqlite3_co
xor	eax, eax
pop	ebp
ret	0
ENDP
_sqlite3_compileoption_used PROC
push	ebp
mov	ebp, esp
sub	esp, 8
push	7
push	OFFSET $SG10013
mov	eax, DWORD PTR _zOptName$[ebp]
push	eax
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN5@sqlite3_co
mov	ecx, DWORD PTR _zOptName$[ebp]
add	ecx, 7
mov	DWORD PTR _zOptName$[ebp], ecx
mov	edx, DWORD PTR _zOptName$[ebp]
push	edx
call	_sqlite3Strlen30
add	esp, 4
mov	DWORD PTR _n$[ebp], eax
mov	DWORD PTR _i$[ebp], 0
jmp	SHORT $LN4@sqlite3_co
mov	eax, DWORD PTR _i$[ebp]
add	eax, 1
mov	DWORD PTR _i$[ebp], eax
cmp	DWORD PTR _i$[ebp], 2
jge	SHORT $LN2@sqlite3_co
mov	ecx, DWORD PTR _n$[ebp]
push	ecx
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _azCompileOpt[edx*4]
push	eax
mov	ecx, DWORD PTR _zOptName$[ebp]
push	ecx
call	_sqlite3_strnicmp
add	esp, 12					
test	eax, eax
jne	SHORT $LN1@sqlite3_co
mov	edx, DWORD PTR _i$[ebp]
mov	eax, DWORD PTR _azCompileOpt[edx*4]
mov	ecx, DWORD PTR _n$[ebp]
movzx	edx, BYTE PTR [eax+ecx]
movzx	eax, BYTE PTR _sqlite3CtypeMap[edx]
test	eax, eax
jne	SHORT $LN1@sqlite3_co
mov	eax, 1
jmp	SHORT $LN6@sqlite3_co
jmp	SHORT $LN3@sqlite3_co
xor	eax, eax
mov	esp, ebp
pop	ebp
ret	0
ENDP
_sqlite3_libversion_number PROC
push	ebp
mov	ebp, esp
mov	eax, 3008005				
pop	ebp
ret	0
ENDP
_sqlite3_sourceid PROC
push	ebp
mov	ebp, esp
mov	eax, OFFSET $SG120287
pop	ebp
ret	0
ENDP
_sqlite3_libversion PROC
push	ebp
mov	ebp, esp
mov	eax, OFFSET _sqlite3_version
pop	ebp
ret	0
ENDP

.rdata:00000000 ;
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.rdata:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.rdata:00000000 ; |                      License info: 48-3677-7074-51                      |
.rdata:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ;
.rdata:00000000 ; Input MD5   : C585F1164DB41E100D9003D436220064
.rdata:00000000 ; Input CRC32 : 1BA35344
.rdata:00000000
.rdata:00000000 ; File Name   : C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\visual.net\Unicode Debug\nsUniversalDetector.obj
.rdata:00000000 ; Format      : COFF (X386MAGIC)
.rdata:00000000 ; includelib "LIBCMTD"
.rdata:00000000 ; includelib "OLDNAMES"
.rdata:00000000
.rdata:00000000                 .686p
.rdata:00000000                 .mmx
.rdata:00000000                 .model flat
.rdata:00000000
.rdata:00000000 ; ===========================================================================
.rdata:00000000
.rdata:00000000 ; Segment type: Pure data
.rdata:00000000 ; Segment permissions: Read
.rdata:00000000 _rdata          segment dword public 'DATA' use32
.rdata:00000000                 assume cs:_rdata
.rdata:00000000 $SG3639         db 'UTF-8',0            ; DATA XREF: nsUniversalDetector::HandleData(char const *,uint)+B6o
.rdata:00000006                 align 4
.rdata:00000008 $SG3642         db 'UTF-16',0           ; DATA XREF: nsUniversalDetector::HandleData(char const *,uint)+D6o
.rdata:0000000F                 align 10h
.rdata:00000010 $SG3645         db 'UTF-16',0           ; DATA XREF: nsUniversalDetector::HandleData(char const *,uint)+F6o
.rdata:00000017                 align 4
.rdata:00000017 _rdata          ends
.rdata:00000017
.text$mn:00000018 ; ===========================================================================
.text$mn:00000018
.text$mn:00000018 ; Segment type: Pure code
.text$mn:00000018 ; Segment permissions: Read/Execute
.text$mn:00000018 _text$mn        segment para public 'CODE' use32
.text$mn:00000018                 assume cs:_text$mn
.text$mn:00000018                 ;org 18h
.text$mn:00000018                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000018
.text$mn:00000018 ; =============== S U B R O U T I N E =======================================
.text$mn:00000018
.text$mn:00000018 ; Attributes: bp-based frame
.text$mn:00000018
.text$mn:00000018 ; _DWORD __thiscall nsUniversalDetector::nsUniversalDetector(nsUniversalDetector *this, unsigned int)
.text$mn:00000018                 public ??0nsUniversalDetector@@QAE@I@Z
.text$mn:00000018 ??0nsUniversalDetector@@QAE@I@Z proc near
.text$mn:00000018
.text$mn:00000018 var_8           = dword ptr -8
.text$mn:00000018 var_4           = dword ptr -4
.text$mn:00000018 arg_0           = dword ptr  8
.text$mn:00000018
.text$mn:00000018                 push    ebp
.text$mn:00000019                 mov     ebp, esp
.text$mn:0000001B                 sub     esp, 8
.text$mn:0000001E                 mov     [ebp+var_4], ecx
.text$mn:00000021                 mov     eax, [ebp+var_4]
.text$mn:00000024                 mov     dword ptr [eax], offset ??_7nsUniversalDetector@@6B@ ; const nsUniversalDetector::`vftable'
.text$mn:0000002A                 mov     ecx, [ebp+var_4]
.text$mn:0000002D                 mov     byte ptr [ecx+8], 0
.text$mn:00000031                 mov     edx, [ebp+var_4]
.text$mn:00000034                 mov     dword ptr [edx+14h], 0FFFFFFFFh
.text$mn:0000003B                 mov     eax, [ebp+var_4]
.text$mn:0000003E                 mov     byte ptr [eax+9], 0
.text$mn:00000042                 mov     ecx, [ebp+var_4]
.text$mn:00000045                 mov     dword ptr [ecx+28h], 0
.text$mn:0000004C                 mov     edx, [ebp+var_4]
.text$mn:0000004F                 mov     byte ptr [edx+0Ah], 1
.text$mn:00000053                 mov     eax, [ebp+var_4]
.text$mn:00000056                 mov     dword ptr [eax+10h], 0
.text$mn:0000005D                 mov     ecx, [ebp+var_4]
.text$mn:00000060                 mov     byte ptr [ecx+0Bh], 0
.text$mn:00000064                 mov     edx, [ebp+var_4]
.text$mn:00000067                 mov     dword ptr [edx+4], 0
.text$mn:0000006E                 mov     eax, [ebp+var_4]
.text$mn:00000071                 mov     byte ptr [eax+0Ch], 0
.text$mn:00000075                 mov     ecx, [ebp+var_4]
.text$mn:00000078                 mov     edx, [ebp+arg_0]
.text$mn:0000007B                 mov     [ecx+18h], edx
.text$mn:0000007E                 mov     [ebp+var_8], 0
.text$mn:00000085                 jmp     short loc_90
.text$mn:00000087 ; ---------------------------------------------------------------------------
.text$mn:00000087
.text$mn:00000087 loc_87:                                 ; CODE XREF: nsUniversalDetector::nsUniversalDetector(uint)+8Cj
.text$mn:00000087                 mov     eax, [ebp+var_8]
.text$mn:0000008A                 add     eax, 1
.text$mn:0000008D                 mov     [ebp+var_8], eax
.text$mn:00000090
.text$mn:00000090 loc_90:                                 ; CODE XREF: nsUniversalDetector::nsUniversalDetector(uint)+6Dj
.text$mn:00000090                 cmp     [ebp+var_8], 3
.text$mn:00000094                 jnb     short loc_A6
.text$mn:00000096                 mov     ecx, [ebp+var_8]
.text$mn:00000099                 mov     edx, [ebp+var_4]
.text$mn:0000009C                 mov     dword ptr [edx+ecx*4+1Ch], 0
.text$mn:000000A4                 jmp     short loc_87
.text$mn:000000A6 ; ---------------------------------------------------------------------------
.text$mn:000000A6
.text$mn:000000A6 loc_A6:                                 ; CODE XREF: nsUniversalDetector::nsUniversalDetector(uint)+7Cj
.text$mn:000000A6                 mov     eax, [ebp+var_4]
.text$mn:000000A9                 mov     esp, ebp
.text$mn:000000AB                 pop     ebp
.text$mn:000000AC                 retn    4
.text$mn:000000AC ??0nsUniversalDetector@@QAE@I@Z endp
.text$mn:000000AC
.text$mn:000000AC ; ---------------------------------------------------------------------------
.text$mn:000000AF                 db 9 dup(0CCh)
.text$mn:000000B8
.text$mn:000000B8 ; =============== S U B R O U T I N E =======================================
.text$mn:000000B8
.text$mn:000000B8 ; Attributes: bp-based frame
.text$mn:000000B8
.text$mn:000000B8 ; _DWORD __thiscall nsUniversalDetector::~nsUniversalDetector(nsUniversalDetector *__hidden this)
.text$mn:000000B8                 public ??1nsUniversalDetector@@UAE@XZ
.text$mn:000000B8 ??1nsUniversalDetector@@UAE@XZ proc near
.text$mn:000000B8                                         ; CODE XREF: nsUniversalDetector::`scalar deleting destructor'(uint)+Ap
.text$mn:000000B8
.text$mn:000000B8 var_20          = dword ptr -20h
.text$mn:000000B8 var_1C          = dword ptr -1Ch
.text$mn:000000B8 var_18          = dword ptr -18h
.text$mn:000000B8 var_14          = dword ptr -14h
.text$mn:000000B8 var_10          = dword ptr -10h
.text$mn:000000B8 var_C           = dword ptr -0Ch
.text$mn:000000B8 var_8           = dword ptr -8
.text$mn:000000B8 var_4           = dword ptr -4
.text$mn:000000B8
.text$mn:000000B8                 push    ebp
.text$mn:000000B9                 mov     ebp, esp
.text$mn:000000BB                 sub     esp, 20h
.text$mn:000000BE                 mov     [ebp+var_C], ecx
.text$mn:000000C1                 mov     eax, [ebp+var_C]
.text$mn:000000C4                 mov     dword ptr [eax], offset ??_7nsUniversalDetector@@6B@ ; const nsUniversalDetector::`vftable'
.text$mn:000000CA                 mov     [ebp+var_4], 0
.text$mn:000000D1                 jmp     short loc_DC
.text$mn:000000D3 ; ---------------------------------------------------------------------------
.text$mn:000000D3
.text$mn:000000D3 loc_D3:                                 ; CODE XREF: nsUniversalDetector::~nsUniversalDetector(void):loc_115j
.text$mn:000000D3                 mov     ecx, [ebp+var_4]
.text$mn:000000D6                 add     ecx, 1
.text$mn:000000D9                 mov     [ebp+var_4], ecx
.text$mn:000000DC
.text$mn:000000DC loc_DC:                                 ; CODE XREF: nsUniversalDetector::~nsUniversalDetector(void)+19j
.text$mn:000000DC                 cmp     [ebp+var_4], 3
.text$mn:000000E0                 jge     short loc_117
.text$mn:000000E2                 mov     edx, [ebp+var_4]
.text$mn:000000E5                 mov     eax, [ebp+var_C]
.text$mn:000000E8                 mov     ecx, [eax+edx*4+1Ch]
.text$mn:000000EC                 mov     [ebp+var_14], ecx
.text$mn:000000EF                 mov     edx, [ebp+var_14]
.text$mn:000000F2                 mov     [ebp+var_8], edx
.text$mn:000000F5                 cmp     [ebp+var_8], 0
.text$mn:000000F9                 jz      short loc_10E
.text$mn:000000FB                 push    1
.text$mn:000000FD                 mov     eax, [ebp+var_8]
.text$mn:00000100                 mov     edx, [eax]
.text$mn:00000102                 mov     ecx, [ebp+var_8]
.text$mn:00000105                 mov     eax, [edx]
.text$mn:00000107                 call    eax
.text$mn:00000109                 mov     [ebp+var_18], eax
.text$mn:0000010C                 jmp     short loc_115
.text$mn:0000010E ; ---------------------------------------------------------------------------
.text$mn:0000010E
.text$mn:0000010E loc_10E:                                ; CODE XREF: nsUniversalDetector::~nsUniversalDetector(void)+41j
.text$mn:0000010E                 mov     [ebp+var_18], 0
.text$mn:00000115
.text$mn:00000115 loc_115:                                ; CODE XREF: nsUniversalDetector::~nsUniversalDetector(void)+54j
.text$mn:00000115                 jmp     short loc_D3
.text$mn:00000117 ; ---------------------------------------------------------------------------
.text$mn:00000117
.text$mn:00000117 loc_117:                                ; CODE XREF: nsUniversalDetector::~nsUniversalDetector(void)+28j
.text$mn:00000117                 mov     ecx, [ebp+var_C]
.text$mn:0000011A                 mov     edx, [ecx+28h]
.text$mn:0000011D                 mov     [ebp+var_1C], edx
.text$mn:00000120                 mov     eax, [ebp+var_1C]
.text$mn:00000123                 mov     [ebp+var_10], eax
.text$mn:00000126                 cmp     [ebp+var_10], 0
.text$mn:0000012A                 jz      short loc_13F
.text$mn:0000012C                 push    1
.text$mn:0000012E                 mov     ecx, [ebp+var_10]
.text$mn:00000131                 mov     edx, [ecx]
.text$mn:00000133                 mov     ecx, [ebp+var_10]
.text$mn:00000136                 mov     eax, [edx]
.text$mn:00000138                 call    eax
.text$mn:0000013A                 mov     [ebp+var_20], eax
.text$mn:0000013D                 jmp     short loc_146
.text$mn:0000013F ; ---------------------------------------------------------------------------
.text$mn:0000013F
.text$mn:0000013F loc_13F:                                ; CODE XREF: nsUniversalDetector::~nsUniversalDetector(void)+72j
.text$mn:0000013F                 mov     [ebp+var_20], 0
.text$mn:00000146
.text$mn:00000146 loc_146:                                ; CODE XREF: nsUniversalDetector::~nsUniversalDetector(void)+85j
.text$mn:00000146                 mov     esp, ebp
.text$mn:00000148                 pop     ebp
.text$mn:00000149                 retn
.text$mn:00000149 ??1nsUniversalDetector@@UAE@XZ endp
.text$mn:00000149
.text$mn:00000149 ; ---------------------------------------------------------------------------
.text$mn:0000014A                 db 0Eh dup(0CCh)
.text$mn:00000158
.text$mn:00000158 ; =============== S U B R O U T I N E =======================================
.text$mn:00000158
.text$mn:00000158 ; Attributes: bp-based frame
.text$mn:00000158
.text$mn:00000158 ; public: virtual enum  nsresult __thiscall nsUniversalDetector::HandleData(char const *, unsigned int)
.text$mn:00000158                 public ?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
.text$mn:00000158 ?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z proc near
.text$mn:00000158                                         ; DATA XREF: .rdata:00000ABCo
.text$mn:00000158
.text$mn:00000158 var_5C          = dword ptr -5Ch
.text$mn:00000158 var_58          = dword ptr -58h
.text$mn:00000158 var_54          = dword ptr -54h
.text$mn:00000158 var_50          = dword ptr -50h
.text$mn:00000158 var_4C          = dword ptr -4Ch
.text$mn:00000158 var_48          = dword ptr -48h
.text$mn:00000158 var_44          = dword ptr -44h
.text$mn:00000158 var_40          = dword ptr -40h
.text$mn:00000158 var_3C          = dword ptr -3Ch
.text$mn:00000158 var_38          = dword ptr -38h
.text$mn:00000158 var_34          = dword ptr -34h
.text$mn:00000158 var_30          = dword ptr -30h
.text$mn:00000158 var_2C          = dword ptr -2Ch
.text$mn:00000158 var_28          = dword ptr -28h
.text$mn:00000158 var_24          = dword ptr -24h
.text$mn:00000158 var_20          = dword ptr -20h
.text$mn:00000158 var_1C          = dword ptr -1Ch
.text$mn:00000158 var_18          = byte ptr -18h
.text$mn:00000158 var_14          = dword ptr -14h
.text$mn:00000158 var_10          = dword ptr -10h
.text$mn:00000158 var_C           = dword ptr -0Ch
.text$mn:00000158 var_4           = dword ptr -4
.text$mn:00000158 arg_0           = dword ptr  8
.text$mn:00000158 arg_4           = dword ptr  0Ch
.text$mn:00000158
.text$mn:00000158                 push    ebp
.text$mn:00000159                 mov     ebp, esp
.text$mn:0000015B                 push    0FFFFFFFFh
.text$mn:0000015D                 push    offset __ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
.text$mn:00000162                 mov     eax, large fs:0
.text$mn:00000168                 push    eax
.text$mn:00000169                 sub     esp, 50h
.text$mn:0000016C                 mov     eax, dword ptr ds:___security_cookie
.text$mn:00000171                 xor     eax, ebp
.text$mn:00000173                 push    eax
.text$mn:00000174                 lea     eax, [ebp+var_C]
.text$mn:00000177                 mov     large fs:0, eax
.text$mn:0000017D                 mov     [ebp+var_10], ecx
.text$mn:00000180                 mov     eax, [ebp+var_10]
.text$mn:00000183                 movzx   ecx, byte ptr [eax+8]
.text$mn:00000187                 test    ecx, ecx
.text$mn:00000189                 jz      short loc_192
.text$mn:0000018B                 xor     eax, eax
.text$mn:0000018D                 jmp     loc_623
.text$mn:00000192 ; ---------------------------------------------------------------------------
.text$mn:00000192
.text$mn:00000192 loc_192:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+31j
.text$mn:00000192                 cmp     [ebp+arg_4], 0
.text$mn:00000196                 jbe     short loc_19F
.text$mn:00000198                 mov     edx, [ebp+var_10]
.text$mn:0000019B                 mov     byte ptr [edx+0Bh], 1
.text$mn:0000019F
.text$mn:0000019F loc_19F:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+3Ej
.text$mn:0000019F                 mov     eax, [ebp+var_10]
.text$mn:000001A2                 movzx   ecx, byte ptr [eax+0Ah]
.text$mn:000001A6                 test    ecx, ecx
.text$mn:000001A8                 jz      loc_26C
.text$mn:000001AE                 mov     edx, [ebp+var_10]
.text$mn:000001B1                 mov     byte ptr [edx+0Ah], 0
.text$mn:000001B5                 cmp     [ebp+arg_4], 2
.text$mn:000001B9                 jbe     loc_255
.text$mn:000001BF                 mov     eax, 1
.text$mn:000001C4                 imul    ecx, eax, 0
.text$mn:000001C7                 mov     edx, [ebp+arg_0]
.text$mn:000001CA                 mov     al, [edx+ecx]
.text$mn:000001CD                 mov     [ebp+var_18], al
.text$mn:000001D0                 cmp     [ebp+var_18], 0EFh ; 'n'
.text$mn:000001D4                 jz      short loc_1E4
.text$mn:000001D6                 cmp     [ebp+var_18], 0FEh ; '¦'
.text$mn:000001DA                 jz      short loc_217
.text$mn:000001DC                 cmp     [ebp+var_18], 0FFh
.text$mn:000001E0                 jz      short loc_237
.text$mn:000001E2                 jmp     short loc_255
.text$mn:000001E4 ; ---------------------------------------------------------------------------
.text$mn:000001E4
.text$mn:000001E4 loc_1E4:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+7Cj
.text$mn:000001E4                 mov     ecx, 1
.text$mn:000001E9                 shl     ecx, 0
.text$mn:000001EC                 mov     edx, [ebp+arg_0]
.text$mn:000001EF                 movsx   eax, byte ptr [edx+ecx]
.text$mn:000001F3                 cmp     eax, 0FFFFFFBBh
.text$mn:000001F6                 jnz     short loc_215
.text$mn:000001F8                 mov     ecx, 1
.text$mn:000001FD                 shl     ecx, 1
.text$mn:000001FF                 mov     edx, [ebp+arg_0]
.text$mn:00000202                 movsx   eax, byte ptr [edx+ecx]
.text$mn:00000206                 cmp     eax, 0FFFFFFBFh
.text$mn:00000209                 jnz     short loc_215
.text$mn:0000020B                 mov     ecx, [ebp+var_10]
.text$mn:0000020E                 mov     dword ptr [ecx+10h], offset $SG3639 ; "UTF-8"
.text$mn:00000215
.text$mn:00000215 loc_215:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+9Ej
.text$mn:00000215                                         ; nsUniversalDetector::HandleData(char const *,uint)+B1j
.text$mn:00000215                 jmp     short loc_255
.text$mn:00000217 ; ---------------------------------------------------------------------------
.text$mn:00000217
.text$mn:00000217 loc_217:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+82j
.text$mn:00000217                 mov     edx, 1
.text$mn:0000021C                 shl     edx, 0
.text$mn:0000021F                 mov     eax, [ebp+arg_0]
.text$mn:00000222                 movsx   ecx, byte ptr [eax+edx]
.text$mn:00000226                 cmp     ecx, 0FFFFFFFFh
.text$mn:00000229                 jnz     short loc_235
.text$mn:0000022B                 mov     edx, [ebp+var_10]
.text$mn:0000022E                 mov     dword ptr [edx+10h], offset $SG3642 ; "UTF-16"
.text$mn:00000235
.text$mn:00000235 loc_235:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+D1j
.text$mn:00000235                 jmp     short loc_255
.text$mn:00000237 ; ---------------------------------------------------------------------------
.text$mn:00000237
.text$mn:00000237 loc_237:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+88j
.text$mn:00000237                 mov     eax, 1
.text$mn:0000023C                 shl     eax, 0
.text$mn:0000023F                 mov     ecx, [ebp+arg_0]
.text$mn:00000242                 movsx   edx, byte ptr [ecx+eax]
.text$mn:00000246                 cmp     edx, 0FFFFFFFEh
.text$mn:00000249                 jnz     short loc_255
.text$mn:0000024B                 mov     eax, [ebp+var_10]
.text$mn:0000024E                 mov     dword ptr [eax+10h], offset $SG3645 ; "UTF-16"
.text$mn:00000255
.text$mn:00000255 loc_255:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+61j
.text$mn:00000255                                         ; nsUniversalDetector::HandleData(char const *,uint)+8Aj ...
.text$mn:00000255                 mov     ecx, [ebp+var_10]
.text$mn:00000258                 cmp     dword ptr [ecx+10h], 0
.text$mn:0000025C                 jz      short loc_26C
.text$mn:0000025E                 mov     edx, [ebp+var_10]
.text$mn:00000261                 mov     byte ptr [edx+8], 1
.text$mn:00000265                 xor     eax, eax
.text$mn:00000267                 jmp     loc_623
.text$mn:0000026C ; ---------------------------------------------------------------------------
.text$mn:0000026C
.text$mn:0000026C loc_26C:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+50j
.text$mn:0000026C                                         ; nsUniversalDetector::HandleData(char const *,uint)+104j
.text$mn:0000026C                 mov     [ebp+var_14], 0
.text$mn:00000273                 jmp     short loc_27E
.text$mn:00000275 ; ---------------------------------------------------------------------------
.text$mn:00000275
.text$mn:00000275 loc_275:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint):loc_4D2j
.text$mn:00000275                 mov     eax, [ebp+var_14]
.text$mn:00000278                 add     eax, 1
.text$mn:0000027B                 mov     [ebp+var_14], eax
.text$mn:0000027E
.text$mn:0000027E loc_27E:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+11Bj
.text$mn:0000027E                 mov     ecx, [ebp+var_14]
.text$mn:00000281                 cmp     ecx, [ebp+arg_4]
.text$mn:00000284                 jnb     loc_4D7
.text$mn:0000028A                 mov     edx, [ebp+arg_0]
.text$mn:0000028D                 add     edx, [ebp+var_14]
.text$mn:00000290                 movsx   eax, byte ptr [edx]
.text$mn:00000293                 and     eax, 0FFFFFF80h
.text$mn:00000296                 jz      loc_489
.text$mn:0000029C                 mov     ecx, [ebp+arg_0]
.text$mn:0000029F                 add     ecx, [ebp+var_14]
.text$mn:000002A2                 movsx   edx, byte ptr [ecx]
.text$mn:000002A5                 cmp     edx, 0FFFFFFA0h
.text$mn:000002A8                 jz      loc_489
.text$mn:000002AE                 mov     eax, [ebp+var_10]
.text$mn:000002B1                 cmp     dword ptr [eax+4], 2
.text$mn:000002B5                 jz      loc_487
.text$mn:000002BB                 mov     ecx, [ebp+var_10]
.text$mn:000002BE                 mov     dword ptr [ecx+4], 2
.text$mn:000002C5                 mov     edx, [ebp+var_10]
.text$mn:000002C8                 cmp     dword ptr [edx+28h], 0
.text$mn:000002CC                 jz      short loc_307
.text$mn:000002CE                 mov     eax, [ebp+var_10]
.text$mn:000002D1                 mov     ecx, [eax+28h]
.text$mn:000002D4                 mov     [ebp+var_48], ecx
.text$mn:000002D7                 mov     edx, [ebp+var_48]
.text$mn:000002DA                 mov     [ebp+var_1C], edx
.text$mn:000002DD                 cmp     [ebp+var_1C], 0
.text$mn:000002E1                 jz      short loc_2F6
.text$mn:000002E3                 push    1
.text$mn:000002E5                 mov     eax, [ebp+var_1C]
.text$mn:000002E8                 mov     edx, [eax]
.text$mn:000002EA                 mov     ecx, [ebp+var_1C]
.text$mn:000002ED                 mov     eax, [edx]
.text$mn:000002EF                 call    eax
.text$mn:000002F1                 mov     [ebp+var_4C], eax
.text$mn:000002F4                 jmp     short loc_2FD
.text$mn:000002F6 ; ---------------------------------------------------------------------------
.text$mn:000002F6
.text$mn:000002F6 loc_2F6:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+189j
.text$mn:000002F6                 mov     [ebp+var_4C], 0
.text$mn:000002FD
.text$mn:000002FD loc_2FD:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+19Cj
.text$mn:000002FD                 mov     ecx, [ebp+var_10]
.text$mn:00000300                 mov     dword ptr [ecx+28h], 0
.text$mn:00000307
.text$mn:00000307 loc_307:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+174j
.text$mn:00000307                 mov     edx, 4
.text$mn:0000030C                 imul    eax, edx, 0
.text$mn:0000030F                 mov     ecx, [ebp+var_10]
.text$mn:00000312                 cmp     dword ptr [ecx+eax+1Ch], 0
.text$mn:00000317                 jnz     short loc_389
.text$mn:00000319                 push    38h ; '8'       ; unsigned int
.text$mn:0000031B                 call    ??2@YAPAXI@Z    ; operator new(uint)
.text$mn:00000320                 add     esp, 4
.text$mn:00000323                 mov     [ebp+var_24], eax
.text$mn:00000326                 mov     [ebp+var_4], 0
.text$mn:0000032D                 cmp     [ebp+var_24], 0
.text$mn:00000331                 jz      short loc_347
.text$mn:00000333                 mov     edx, [ebp+var_10]
.text$mn:00000336                 mov     eax, [edx+18h]
.text$mn:00000339                 push    eax             ; unsigned int
.text$mn:0000033A                 mov     ecx, [ebp+var_24] ; this
.text$mn:0000033D                 call    ??0nsMBCSGroupProber@@QAE@I@Z ; nsMBCSGroupProber::nsMBCSGroupProber(uint)
.text$mn:00000342                 mov     [ebp+var_28], eax
.text$mn:00000345                 jmp     short loc_34E
.text$mn:00000347 ; ---------------------------------------------------------------------------
.text$mn:00000347
.text$mn:00000347 loc_347:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+1D9j
.text$mn:00000347                 mov     [ebp+var_28], 0
.text$mn:0000034E
.text$mn:0000034E loc_34E:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+1EDj
.text$mn:0000034E                 mov     ecx, [ebp+var_28]
.text$mn:00000351                 mov     [ebp+var_50], ecx
.text$mn:00000354                 mov     [ebp+var_4], 0FFFFFFFFh
.text$mn:0000035B                 mov     edx, 4
.text$mn:00000360                 imul    eax, edx, 0
.text$mn:00000363                 mov     ecx, [ebp+var_10]
.text$mn:00000366                 mov     edx, [ebp+var_50]
.text$mn:00000369                 mov     [ecx+eax+1Ch], edx
.text$mn:0000036D                 mov     eax, 4
.text$mn:00000372                 imul    ecx, eax, 0
.text$mn:00000375                 mov     edx, [ebp+var_10]
.text$mn:00000378                 cmp     dword ptr [edx+ecx+1Ch], 0
.text$mn:0000037D                 jnz     short loc_389
.text$mn:0000037F                 mov     eax, 1
.text$mn:00000384                 jmp     loc_623
.text$mn:00000389 ; ---------------------------------------------------------------------------
.text$mn:00000389
.text$mn:00000389 loc_389:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+1BFj
.text$mn:00000389                                         ; nsUniversalDetector::HandleData(char const *,uint)+225j
.text$mn:00000389                 mov     eax, 4
.text$mn:0000038E                 shl     eax, 0
.text$mn:00000391                 mov     ecx, [ebp+var_10]
.text$mn:00000394                 cmp     dword ptr [ecx+eax+1Ch], 0
.text$mn:00000399                 jnz     short loc_40F
.text$mn:0000039B                 mov     edx, [ebp+var_10]
.text$mn:0000039E                 mov     eax, [edx+18h]
.text$mn:000003A1                 and     eax, 10h
.text$mn:000003A4                 jz      short loc_40F
.text$mn:000003A6                 push    58h ; 'X'       ; unsigned int
.text$mn:000003A8                 call    ??2@YAPAXI@Z    ; operator new(uint)
.text$mn:000003AD                 add     esp, 4
.text$mn:000003B0                 mov     [ebp+var_2C], eax
.text$mn:000003B3                 mov     [ebp+var_4], 1
.text$mn:000003BA                 cmp     [ebp+var_2C], 0
.text$mn:000003BE                 jz      short loc_3CD
.text$mn:000003C0                 mov     ecx, [ebp+var_2C] ; this
.text$mn:000003C3                 call    ??0nsSBCSGroupProber@@QAE@XZ ; nsSBCSGroupProber::nsSBCSGroupProber(void)
.text$mn:000003C8                 mov     [ebp+var_30], eax
.text$mn:000003CB                 jmp     short loc_3D4
.text$mn:000003CD ; ---------------------------------------------------------------------------
.text$mn:000003CD
.text$mn:000003CD loc_3CD:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+266j
.text$mn:000003CD                 mov     [ebp+var_30], 0
.text$mn:000003D4
.text$mn:000003D4 loc_3D4:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+273j
.text$mn:000003D4                 mov     ecx, [ebp+var_30]
.text$mn:000003D7                 mov     [ebp+var_54], ecx
.text$mn:000003DA                 mov     [ebp+var_4], 0FFFFFFFFh
.text$mn:000003E1                 mov     edx, 4
.text$mn:000003E6                 shl     edx, 0
.text$mn:000003E9                 mov     eax, [ebp+var_10]
.text$mn:000003EC                 mov     ecx, [ebp+var_54]
.text$mn:000003EF                 mov     [eax+edx+1Ch], ecx
.text$mn:000003F3                 mov     edx, 4
.text$mn:000003F8                 shl     edx, 0
.text$mn:000003FB                 mov     eax, [ebp+var_10]
.text$mn:000003FE                 cmp     dword ptr [eax+edx+1Ch], 0
.text$mn:00000403                 jnz     short loc_40F
.text$mn:00000405                 mov     eax, 1
.text$mn:0000040A                 jmp     loc_623
.text$mn:0000040F ; ---------------------------------------------------------------------------
.text$mn:0000040F
.text$mn:0000040F loc_40F:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+241j
.text$mn:0000040F                                         ; nsUniversalDetector::HandleData(char const *,uint)+24Cj ...
.text$mn:0000040F                 mov     ecx, 4
.text$mn:00000414                 shl     ecx, 1
.text$mn:00000416                 mov     edx, [ebp+var_10]
.text$mn:00000419                 cmp     dword ptr [edx+ecx+1Ch], 0
.text$mn:0000041E                 jnz     short loc_487
.text$mn:00000420                 push    1Ch             ; unsigned int
.text$mn:00000422                 call    ??2@YAPAXI@Z    ; operator new(uint)
.text$mn:00000427                 add     esp, 4
.text$mn:0000042A                 mov     [ebp+var_34], eax
.text$mn:0000042D                 mov     [ebp+var_4], 2
.text$mn:00000434                 cmp     [ebp+var_34], 0
.text$mn:00000438                 jz      short loc_447
.text$mn:0000043A                 mov     ecx, [ebp+var_34]
.text$mn:0000043D                 call    ??0nsLatin1Prober@@QAE@XZ ; nsLatin1Prober::nsLatin1Prober(void)
.text$mn:00000442                 mov     [ebp+var_38], eax
.text$mn:00000445                 jmp     short loc_44E
.text$mn:00000447 ; ---------------------------------------------------------------------------
.text$mn:00000447
.text$mn:00000447 loc_447:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+2E0j
.text$mn:00000447                 mov     [ebp+var_38], 0
.text$mn:0000044E
.text$mn:0000044E loc_44E:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+2EDj
.text$mn:0000044E                 mov     eax, [ebp+var_38]
.text$mn:00000451                 mov     [ebp+var_58], eax
.text$mn:00000454                 mov     [ebp+var_4], 0FFFFFFFFh
.text$mn:0000045B                 mov     ecx, 4
.text$mn:00000460                 shl     ecx, 1
.text$mn:00000462                 mov     edx, [ebp+var_10]
.text$mn:00000465                 mov     eax, [ebp+var_58]
.text$mn:00000468                 mov     [edx+ecx+1Ch], eax
.text$mn:0000046C                 mov     ecx, 4
.text$mn:00000471                 shl     ecx, 1
.text$mn:00000473                 mov     edx, [ebp+var_10]
.text$mn:00000476                 cmp     dword ptr [edx+ecx+1Ch], 0
.text$mn:0000047B                 jnz     short loc_487
.text$mn:0000047D                 mov     eax, 1
.text$mn:00000482                 jmp     loc_623
.text$mn:00000487 ; ---------------------------------------------------------------------------
.text$mn:00000487
.text$mn:00000487 loc_487:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+15Dj
.text$mn:00000487                                         ; nsUniversalDetector::HandleData(char const *,uint)+2C6j ...
.text$mn:00000487                 jmp     short loc_4D2
.text$mn:00000489 ; ---------------------------------------------------------------------------
.text$mn:00000489
.text$mn:00000489 loc_489:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+13Ej
.text$mn:00000489                                         ; nsUniversalDetector::HandleData(char const *,uint)+150j
.text$mn:00000489                 mov     eax, [ebp+var_10]
.text$mn:0000048C                 cmp     dword ptr [eax+4], 0
.text$mn:00000490                 jnz     short loc_4C4
.text$mn:00000492                 mov     ecx, [ebp+arg_0]
.text$mn:00000495                 add     ecx, [ebp+var_14]
.text$mn:00000498                 movsx   edx, byte ptr [ecx]
.text$mn:0000049B                 cmp     edx, 1Bh
.text$mn:0000049E                 jz      short loc_4BA
.text$mn:000004A0                 mov     eax, [ebp+arg_0]
.text$mn:000004A3                 add     eax, [ebp+var_14]
.text$mn:000004A6                 movsx   ecx, byte ptr [eax]
.text$mn:000004A9                 cmp     ecx, 7Bh ; '{'
.text$mn:000004AC                 jnz     short loc_4C4
.text$mn:000004AE                 mov     edx, [ebp+var_10]
.text$mn:000004B1                 movsx   eax, byte ptr [edx+0Ch]
.text$mn:000004B5                 cmp     eax, 7Eh ; '~'
.text$mn:000004B8                 jnz     short loc_4C4
.text$mn:000004BA
.text$mn:000004BA loc_4BA:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+346j
.text$mn:000004BA                 mov     ecx, [ebp+var_10]
.text$mn:000004BD                 mov     dword ptr [ecx+4], 1
.text$mn:000004C4
.text$mn:000004C4 loc_4C4:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+338j
.text$mn:000004C4                                         ; nsUniversalDetector::HandleData(char const *,uint)+354j ...
.text$mn:000004C4                 mov     edx, [ebp+arg_0]
.text$mn:000004C7                 add     edx, [ebp+var_14]
.text$mn:000004CA                 mov     eax, [ebp+var_10]
.text$mn:000004CD                 mov     cl, [edx]
.text$mn:000004CF                 mov     [eax+0Ch], cl
.text$mn:000004D2
.text$mn:000004D2 loc_4D2:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint):loc_487j
.text$mn:000004D2                 jmp     loc_275
.text$mn:000004D7 ; ---------------------------------------------------------------------------
.text$mn:000004D7
.text$mn:000004D7 loc_4D7:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+12Cj
.text$mn:000004D7                 mov     edx, [ebp+var_10]
.text$mn:000004DA                 mov     eax, [edx+4]
.text$mn:000004DD                 mov     [ebp+var_3C], eax
.text$mn:000004E0                 cmp     [ebp+var_3C], 1
.text$mn:000004E4                 jz      short loc_4F5
.text$mn:000004E6                 cmp     [ebp+var_3C], 2
.text$mn:000004EA                 jz      loc_5A2
.text$mn:000004F0                 jmp     loc_621
.text$mn:000004F5 ; ---------------------------------------------------------------------------
.text$mn:000004F5
.text$mn:000004F5 loc_4F5:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+38Cj
.text$mn:000004F5                 mov     ecx, [ebp+var_10]
.text$mn:000004F8                 cmp     dword ptr [ecx+28h], 0
.text$mn:000004FC                 jnz     short loc_55C
.text$mn:000004FE                 push    20h ; ' '       ; unsigned int
.text$mn:00000500                 call    ??2@YAPAXI@Z    ; operator new(uint)
.text$mn:00000505                 add     esp, 4
.text$mn:00000508                 mov     [ebp+var_40], eax
.text$mn:0000050B                 mov     [ebp+var_4], 3
.text$mn:00000512                 cmp     [ebp+var_40], 0
.text$mn:00000516                 jz      short loc_52C
.text$mn:00000518                 mov     edx, [ebp+var_10]
.text$mn:0000051B                 mov     eax, [edx+18h]
.text$mn:0000051E                 push    eax             ; unsigned int
.text$mn:0000051F                 mov     ecx, [ebp+var_40] ; this
.text$mn:00000522                 call    ??0nsEscCharSetProber@@QAE@I@Z ; nsEscCharSetProber::nsEscCharSetProber(uint)
.text$mn:00000527                 mov     [ebp+var_44], eax
.text$mn:0000052A                 jmp     short loc_533
.text$mn:0000052C ; ---------------------------------------------------------------------------
.text$mn:0000052C
.text$mn:0000052C loc_52C:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+3BEj
.text$mn:0000052C                 mov     [ebp+var_44], 0
.text$mn:00000533
.text$mn:00000533 loc_533:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+3D2j
.text$mn:00000533                 mov     ecx, [ebp+var_44]
.text$mn:00000536                 mov     [ebp+var_5C], ecx
.text$mn:00000539                 mov     [ebp+var_4], 0FFFFFFFFh
.text$mn:00000540                 mov     edx, [ebp+var_10]
.text$mn:00000543                 mov     eax, [ebp+var_5C]
.text$mn:00000546                 mov     [edx+28h], eax
.text$mn:00000549                 mov     ecx, [ebp+var_10]
.text$mn:0000054C                 cmp     dword ptr [ecx+28h], 0
.text$mn:00000550                 jnz     short loc_55C
.text$mn:00000552                 mov     eax, 1
.text$mn:00000557                 jmp     loc_623
.text$mn:0000055C ; ---------------------------------------------------------------------------
.text$mn:0000055C
.text$mn:0000055C loc_55C:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+3A4j
.text$mn:0000055C                                         ; nsUniversalDetector::HandleData(char const *,uint)+3F8j
.text$mn:0000055C                 mov     edx, [ebp+arg_4]
.text$mn:0000055F                 push    edx
.text$mn:00000560                 mov     eax, [ebp+arg_0]
.text$mn:00000563                 push    eax
.text$mn:00000564                 mov     ecx, [ebp+var_10]
.text$mn:00000567                 mov     edx, [ecx+28h]
.text$mn:0000056A                 mov     eax, [ebp+var_10]
.text$mn:0000056D                 mov     edx, [edx]
.text$mn:0000056F                 mov     ecx, [eax+28h]
.text$mn:00000572                 mov     eax, [edx+8]
.text$mn:00000575                 call    eax
.text$mn:00000577                 mov     [ebp+var_20], eax
.text$mn:0000057A                 cmp     [ebp+var_20], 1
.text$mn:0000057E                 jnz     short loc_5A0
.text$mn:00000580                 mov     ecx, [ebp+var_10]
.text$mn:00000583                 mov     byte ptr [ecx+8], 1
.text$mn:00000587                 mov     edx, [ebp+var_10]
.text$mn:0000058A                 mov     eax, [edx+28h]
.text$mn:0000058D                 mov     ecx, [ebp+var_10]
.text$mn:00000590                 mov     edx, [eax]
.text$mn:00000592                 mov     ecx, [ecx+28h]
.text$mn:00000595                 mov     eax, [edx+4]
.text$mn:00000598                 call    eax
.text$mn:0000059A                 mov     ecx, [ebp+var_10]
.text$mn:0000059D                 mov     [ecx+10h], eax
.text$mn:000005A0
.text$mn:000005A0 loc_5A0:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+426j
.text$mn:000005A0                 jmp     short loc_621
.text$mn:000005A2 ; ---------------------------------------------------------------------------
.text$mn:000005A2
.text$mn:000005A2 loc_5A2:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+392j
.text$mn:000005A2                 mov     [ebp+var_14], 0
.text$mn:000005A9                 jmp     short loc_5B4
.text$mn:000005AB ; ---------------------------------------------------------------------------
.text$mn:000005AB
.text$mn:000005AB loc_5AB:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint):loc_61Fj
.text$mn:000005AB                 mov     edx, [ebp+var_14]
.text$mn:000005AE                 add     edx, 1
.text$mn:000005B1                 mov     [ebp+var_14], edx
.text$mn:000005B4
.text$mn:000005B4 loc_5B4:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+451j
.text$mn:000005B4                 cmp     [ebp+var_14], 3
.text$mn:000005B8                 jnb     short loc_621
.text$mn:000005BA                 mov     eax, [ebp+var_14]
.text$mn:000005BD                 mov     ecx, [ebp+var_10]
.text$mn:000005C0                 cmp     dword ptr [ecx+eax*4+1Ch], 0
.text$mn:000005C5                 jz      short loc_61F
.text$mn:000005C7                 mov     edx, [ebp+arg_4]
.text$mn:000005CA                 push    edx
.text$mn:000005CB                 mov     eax, [ebp+arg_0]
.text$mn:000005CE                 push    eax
.text$mn:000005CF                 mov     ecx, [ebp+var_14]
.text$mn:000005D2                 mov     edx, [ebp+var_10]
.text$mn:000005D5                 mov     eax, [edx+ecx*4+1Ch]
.text$mn:000005D9                 mov     ecx, [ebp+var_14]
.text$mn:000005DC                 mov     edx, [ebp+var_10]
.text$mn:000005DF                 mov     eax, [eax]
.text$mn:000005E1                 mov     ecx, [edx+ecx*4+1Ch]
.text$mn:000005E5                 mov     edx, [eax+8]
.text$mn:000005E8                 call    edx
.text$mn:000005EA                 mov     [ebp+var_20], eax
.text$mn:000005ED                 cmp     [ebp+var_20], 1
.text$mn:000005F1                 jnz     short loc_61F
.text$mn:000005F3                 mov     eax, [ebp+var_10]
.text$mn:000005F6                 mov     byte ptr [eax+8], 1
.text$mn:000005FA                 mov     ecx, [ebp+var_14]
.text$mn:000005FD                 mov     edx, [ebp+var_10]
.text$mn:00000600                 mov     eax, [edx+ecx*4+1Ch]
.text$mn:00000604                 mov     ecx, [ebp+var_14]
.text$mn:00000607                 mov     edx, [ebp+var_10]
.text$mn:0000060A                 mov     eax, [eax]
.text$mn:0000060C                 mov     ecx, [edx+ecx*4+1Ch]
.text$mn:00000610                 mov     edx, [eax+4]
.text$mn:00000613                 call    edx
.text$mn:00000615                 mov     ecx, [ebp+var_10]
.text$mn:00000618                 mov     [ecx+10h], eax
.text$mn:0000061B                 xor     eax, eax
.text$mn:0000061D                 jmp     short loc_623
.text$mn:0000061F ; ---------------------------------------------------------------------------
.text$mn:0000061F
.text$mn:0000061F loc_61F:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+46Dj
.text$mn:0000061F                                         ; nsUniversalDetector::HandleData(char const *,uint)+499j
.text$mn:0000061F                 jmp     short loc_5AB
.text$mn:00000621 ; ---------------------------------------------------------------------------
.text$mn:00000621
.text$mn:00000621 loc_621:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+398j
.text$mn:00000621                                         ; nsUniversalDetector::HandleData(char const *,uint):loc_5A0j ...
.text$mn:00000621                 xor     eax, eax
.text$mn:00000623
.text$mn:00000623 loc_623:                                ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+35j
.text$mn:00000623                                         ; nsUniversalDetector::HandleData(char const *,uint)+10Fj ...
.text$mn:00000623                 mov     ecx, [ebp+var_C]
.text$mn:00000626                 mov     large fs:0, ecx
.text$mn:0000062D                 pop     ecx
.text$mn:0000062E                 mov     esp, ebp
.text$mn:00000630                 pop     ebp
.text$mn:00000631                 retn    8
.text$mn:00000631 ?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z endp
.text$mn:00000631
.text$mn:00000631 ; ---------------------------------------------------------------------------
.text$mn:00000634                 align 8
.text$mn:00000638
.text$mn:00000638 ; =============== S U B R O U T I N E =======================================
.text$mn:00000638
.text$mn:00000638 ; Attributes: bp-based frame
.text$mn:00000638
.text$mn:00000638 ; void __thiscall nsUniversalDetector::DataEnd(nsUniversalDetector *__hidden this)
.text$mn:00000638                 public ?DataEnd@nsUniversalDetector@@UAEXXZ
.text$mn:00000638 ?DataEnd@nsUniversalDetector@@UAEXXZ proc near
.text$mn:00000638                                         ; DATA XREF: .rdata:00000AC0o
.text$mn:00000638
.text$mn:00000638 var_18          = dword ptr -18h
.text$mn:00000638 var_14          = dword ptr -14h
.text$mn:00000638 var_10          = dword ptr -10h
.text$mn:00000638 var_C           = dword ptr -0Ch
.text$mn:00000638 var_8           = dword ptr -8
.text$mn:00000638 var_4           = dword ptr -4
.text$mn:00000638
.text$mn:00000638                 push    ebp
.text$mn:00000639                 mov     ebp, esp
.text$mn:0000063B                 sub     esp, 18h
.text$mn:0000063E                 push    esi
.text$mn:0000063F                 mov     [ebp+var_4], ecx
.text$mn:00000642                 mov     eax, [ebp+var_4]
.text$mn:00000645                 movzx   ecx, byte ptr [eax+0Bh]
.text$mn:00000649                 test    ecx, ecx
.text$mn:0000064B                 jnz     short loc_652
.text$mn:0000064D                 jmp     loc_73A
.text$mn:00000652 ; ---------------------------------------------------------------------------
.text$mn:00000652
.text$mn:00000652 loc_652:                                ; CODE XREF: nsUniversalDetector::DataEnd(void)+13j
.text$mn:00000652                 mov     edx, [ebp+var_4]
.text$mn:00000655                 cmp     dword ptr [edx+10h], 0
.text$mn:00000659                 jz      short loc_67B
.text$mn:0000065B                 mov     eax, [ebp+var_4]
.text$mn:0000065E                 mov     byte ptr [eax+8], 1
.text$mn:00000662                 mov     ecx, [ebp+var_4]
.text$mn:00000665                 mov     edx, [ecx+10h]
.text$mn:00000668                 push    edx
.text$mn:00000669                 mov     eax, [ebp+var_4]
.text$mn:0000066C                 mov     edx, [eax]
.text$mn:0000066E                 mov     ecx, [ebp+var_4]
.text$mn:00000671                 mov     eax, [edx+0Ch]
.text$mn:00000674                 call    eax
.text$mn:00000676                 jmp     loc_73A
.text$mn:0000067B ; ---------------------------------------------------------------------------
.text$mn:0000067B
.text$mn:0000067B loc_67B:                                ; CODE XREF: nsUniversalDetector::DataEnd(void)+21j
.text$mn:0000067B                 mov     ecx, [ebp+var_4]
.text$mn:0000067E                 mov     edx, [ecx+4]
.text$mn:00000681                 mov     [ebp+var_18], edx
.text$mn:00000684                 cmp     [ebp+var_18], 2
.text$mn:00000688                 jz      short loc_68F
.text$mn:0000068A                 jmp     loc_73A
.text$mn:0000068F ; ---------------------------------------------------------------------------
.text$mn:0000068F
.text$mn:0000068F loc_68F:                                ; CODE XREF: nsUniversalDetector::DataEnd(void)+50j
.text$mn:0000068F                 movss   xmm0, ds:__real@00000000
.text$mn:00000697                 movss   [ebp+var_C], xmm0
.text$mn:0000069C                 mov     [ebp+var_10], 0
.text$mn:000006A3                 mov     [ebp+var_8], 0
.text$mn:000006AA                 jmp     short loc_6B5
.text$mn:000006AC ; ---------------------------------------------------------------------------
.text$mn:000006AC
.text$mn:000006AC loc_6AC:                                ; CODE XREF: nsUniversalDetector::DataEnd(void):loc_701j
.text$mn:000006AC                 mov     eax, [ebp+var_8]
.text$mn:000006AF                 add     eax, 1
.text$mn:000006B2                 mov     [ebp+var_8], eax
.text$mn:000006B5
.text$mn:000006B5 loc_6B5:                                ; CODE XREF: nsUniversalDetector::DataEnd(void)+72j
.text$mn:000006B5                 cmp     [ebp+var_8], 3
.text$mn:000006B9                 jge     short loc_703
.text$mn:000006BB                 mov     ecx, [ebp+var_8]
.text$mn:000006BE                 mov     edx, [ebp+var_4]
.text$mn:000006C1                 cmp     dword ptr [edx+ecx*4+1Ch], 0
.text$mn:000006C6                 jz      short loc_701
.text$mn:000006C8                 mov     eax, [ebp+var_8]
.text$mn:000006CB                 mov     ecx, [ebp+var_4]
.text$mn:000006CE                 mov     edx, [ecx+eax*4+1Ch]
.text$mn:000006D2                 mov     eax, [ebp+var_8]
.text$mn:000006D5                 mov     ecx, [ebp+var_4]
.text$mn:000006D8                 mov     edx, [edx]
.text$mn:000006DA                 mov     ecx, [ecx+eax*4+1Ch]
.text$mn:000006DE                 mov     eax, [edx+14h]
.text$mn:000006E1                 call    eax
.text$mn:000006E3                 fstp    [ebp+var_14]
.text$mn:000006E6                 movss   xmm0, [ebp+var_14]
.text$mn:000006EB                 comiss  xmm0, [ebp+var_C]
.text$mn:000006EF                 jbe     short loc_701
.text$mn:000006F1                 movss   xmm0, [ebp+var_14]
.text$mn:000006F6                 movss   [ebp+var_C], xmm0
.text$mn:000006FB                 mov     ecx, [ebp+var_8]
.text$mn:000006FE                 mov     [ebp+var_10], ecx
.text$mn:00000701
.text$mn:00000701 loc_701:                                ; CODE XREF: nsUniversalDetector::DataEnd(void)+8Ej
.text$mn:00000701                                         ; nsUniversalDetector::DataEnd(void)+B7j
.text$mn:00000701                 jmp     short loc_6AC
.text$mn:00000703 ; ---------------------------------------------------------------------------
.text$mn:00000703
.text$mn:00000703 loc_703:                                ; CODE XREF: nsUniversalDetector::DataEnd(void)+81j
.text$mn:00000703                 movss   xmm0, [ebp+var_C]
.text$mn:00000708                 comiss  xmm0, ds:__real@3f19999a
.text$mn:0000070F                 jbe     short loc_73A
.text$mn:00000711                 mov     edx, [ebp+var_10]
.text$mn:00000714                 mov     eax, [ebp+var_4]
.text$mn:00000717                 mov     ecx, [eax+edx*4+1Ch]
.text$mn:0000071B                 mov     edx, [ebp+var_10]
.text$mn:0000071E                 mov     eax, [ebp+var_4]
.text$mn:00000721                 mov     esi, [ecx]
.text$mn:00000723                 mov     ecx, [eax+edx*4+1Ch]
.text$mn:00000727                 mov     edx, [esi+4]
.text$mn:0000072A                 call    edx
.text$mn:0000072C                 push    eax
.text$mn:0000072D                 mov     eax, [ebp+var_4]
.text$mn:00000730                 mov     edx, [eax]
.text$mn:00000732                 mov     ecx, [ebp+var_4]
.text$mn:00000735                 mov     eax, [edx+0Ch]
.text$mn:00000738                 call    eax
.text$mn:0000073A
.text$mn:0000073A loc_73A:                                ; CODE XREF: nsUniversalDetector::DataEnd(void)+15j
.text$mn:0000073A                                         ; nsUniversalDetector::DataEnd(void)+3Ej ...
.text$mn:0000073A                 pop     esi
.text$mn:0000073B                 mov     esp, ebp
.text$mn:0000073D                 pop     ebp
.text$mn:0000073E                 retn
.text$mn:0000073E ?DataEnd@nsUniversalDetector@@UAEXXZ endp
.text$mn:0000073E
.text$mn:0000073E ; ---------------------------------------------------------------------------
.text$mn:0000073F                 db 9 dup(0CCh)
.text$mn:00000748
.text$mn:00000748 ; =============== S U B R O U T I N E =======================================
.text$mn:00000748
.text$mn:00000748 ; Attributes: bp-based frame
.text$mn:00000748
.text$mn:00000748 ; void __thiscall nsUniversalDetector::Reset(nsUniversalDetector *__hidden this)
.text$mn:00000748                 public ?Reset@nsUniversalDetector@@MAEXXZ
.text$mn:00000748 ?Reset@nsUniversalDetector@@MAEXXZ proc near ; DATA XREF: .rdata:00000AC8o
.text$mn:00000748
.text$mn:00000748 var_8           = dword ptr -8
.text$mn:00000748 var_4           = dword ptr -4
.text$mn:00000748
.text$mn:00000748                 push    ebp
.text$mn:00000749                 mov     ebp, esp
.text$mn:0000074B                 sub     esp, 8
.text$mn:0000074E                 mov     [ebp+var_4], ecx
.text$mn:00000751                 mov     eax, [ebp+var_4]
.text$mn:00000754                 mov     byte ptr [eax+8], 0
.text$mn:00000758                 mov     ecx, [ebp+var_4]
.text$mn:0000075B                 mov     dword ptr [ecx+14h], 0FFFFFFFFh
.text$mn:00000762                 mov     edx, [ebp+var_4]
.text$mn:00000765                 mov     byte ptr [edx+9], 0
.text$mn:00000769                 mov     eax, [ebp+var_4]
.text$mn:0000076C                 mov     byte ptr [eax+0Ah], 1
.text$mn:00000770                 mov     ecx, [ebp+var_4]
.text$mn:00000773                 mov     dword ptr [ecx+10h], 0
.text$mn:0000077A                 mov     edx, [ebp+var_4]
.text$mn:0000077D                 mov     byte ptr [edx+0Bh], 0
.text$mn:00000781                 mov     eax, [ebp+var_4]
.text$mn:00000784                 mov     dword ptr [eax+4], 0
.text$mn:0000078B                 mov     ecx, [ebp+var_4]
.text$mn:0000078E                 mov     byte ptr [ecx+0Ch], 0
.text$mn:00000792                 mov     edx, [ebp+var_4]
.text$mn:00000795                 cmp     dword ptr [edx+28h], 0
.text$mn:00000799                 jz      short loc_7AE
.text$mn:0000079B                 mov     eax, [ebp+var_4]
.text$mn:0000079E                 mov     ecx, [eax+28h]
.text$mn:000007A1                 mov     edx, [ebp+var_4]
.text$mn:000007A4                 mov     eax, [ecx]
.text$mn:000007A6                 mov     ecx, [edx+28h]
.text$mn:000007A9                 mov     edx, [eax+10h]
.text$mn:000007AC                 call    edx
.text$mn:000007AE
.text$mn:000007AE loc_7AE:                                ; CODE XREF: nsUniversalDetector::Reset(void)+51j
.text$mn:000007AE                 mov     [ebp+var_8], 0
.text$mn:000007B5                 jmp     short loc_7C0
.text$mn:000007B7 ; ---------------------------------------------------------------------------
.text$mn:000007B7
.text$mn:000007B7 loc_7B7:                                ; CODE XREF: nsUniversalDetector::Reset(void):loc_7EEj
.text$mn:000007B7                 mov     eax, [ebp+var_8]
.text$mn:000007BA                 add     eax, 1
.text$mn:000007BD                 mov     [ebp+var_8], eax
.text$mn:000007C0
.text$mn:000007C0 loc_7C0:                                ; CODE XREF: nsUniversalDetector::Reset(void)+6Dj
.text$mn:000007C0                 cmp     [ebp+var_8], 3
.text$mn:000007C4                 jnb     short loc_7F0
.text$mn:000007C6                 mov     ecx, [ebp+var_8]
.text$mn:000007C9                 mov     edx, [ebp+var_4]
.text$mn:000007CC                 cmp     dword ptr [edx+ecx*4+1Ch], 0
.text$mn:000007D1                 jz      short loc_7EE
.text$mn:000007D3                 mov     eax, [ebp+var_8]
.text$mn:000007D6                 mov     ecx, [ebp+var_4]
.text$mn:000007D9                 mov     edx, [ecx+eax*4+1Ch]
.text$mn:000007DD                 mov     eax, [ebp+var_8]
.text$mn:000007E0                 mov     ecx, [ebp+var_4]
.text$mn:000007E3                 mov     edx, [edx]
.text$mn:000007E5                 mov     ecx, [ecx+eax*4+1Ch]
.text$mn:000007E9                 mov     eax, [edx+10h]
.text$mn:000007EC                 call    eax
.text$mn:000007EE
.text$mn:000007EE loc_7EE:                                ; CODE XREF: nsUniversalDetector::Reset(void)+89j
.text$mn:000007EE                 jmp     short loc_7B7
.text$mn:000007F0 ; ---------------------------------------------------------------------------
.text$mn:000007F0
.text$mn:000007F0 loc_7F0:                                ; CODE XREF: nsUniversalDetector::Reset(void)+7Cj
.text$mn:000007F0                 mov     esp, ebp
.text$mn:000007F2                 pop     ebp
.text$mn:000007F3                 retn
.text$mn:000007F3 ?Reset@nsUniversalDetector@@MAEXXZ endp
.text$mn:000007F3
.text$mn:000007F3 _text$mn        ends
.text$mn:000007F3
.text$x:000007F4 ; ===========================================================================
.text$x:000007F4
.text$x:000007F4 ; Segment type: Pure code
.text$x:000007F4 ; Segment permissions: Read/Execute
.text$x:000007F4 _text$x         segment para public 'CODE' use32
.text$x:000007F4                 assume cs:_text$x
.text$x:000007F4                 ;org 7F4h
.text$x:000007F4                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$x:000007F4
.text$x:000007F4 ; =============== S U B R O U T I N E =======================================
.text$x:000007F4
.text$x:000007F4
.text$x:000007F4 __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$0 proc near
.text$x:000007F4                                         ; DATA XREF: .xdata$x:00000A1Co
.text$x:000007F4                 mov     eax, [ebp-24h]
.text$x:000007F7                 push    eax             ; void *
.text$x:000007F8                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$x:000007FD                 pop     ecx
.text$x:000007FE                 retn
.text$x:000007FE __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$0 endp
.text$x:000007FE
.text$x:000007FF
.text$x:000007FF ; =============== S U B R O U T I N E =======================================
.text$x:000007FF
.text$x:000007FF
.text$x:000007FF __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$1 proc near
.text$x:000007FF                                         ; DATA XREF: .xdata$x:00000A24o
.text$x:000007FF                 mov     eax, [ebp-2Ch]
.text$x:00000802                 push    eax             ; void *
.text$x:00000803                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$x:00000808                 pop     ecx
.text$x:00000809                 retn
.text$x:00000809 __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$1 endp
.text$x:00000809
.text$x:0000080A
.text$x:0000080A ; =============== S U B R O U T I N E =======================================
.text$x:0000080A
.text$x:0000080A
.text$x:0000080A __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$2 proc near
.text$x:0000080A                                         ; DATA XREF: .xdata$x:00000A2Co
.text$x:0000080A                 mov     eax, [ebp-34h]
.text$x:0000080D                 push    eax             ; void *
.text$x:0000080E                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$x:00000813                 pop     ecx
.text$x:00000814                 retn
.text$x:00000814 __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$2 endp
.text$x:00000814
.text$x:00000815
.text$x:00000815 ; =============== S U B R O U T I N E =======================================
.text$x:00000815
.text$x:00000815
.text$x:00000815 __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$3 proc near
.text$x:00000815                                         ; DATA XREF: .xdata$x:00000A34o
.text$x:00000815                 mov     eax, [ebp-40h]
.text$x:00000818                 push    eax             ; void *
.text$x:00000819                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$x:0000081E                 pop     ecx
.text$x:0000081F                 retn
.text$x:0000081F __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$3 endp
.text$x:0000081F
.text$x:00000820
.text$x:00000820 ; =============== S U B R O U T I N E =======================================
.text$x:00000820
.text$x:00000820
.text$x:00000820 __ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z proc near
.text$x:00000820                                         ; DATA XREF: nsUniversalDetector::HandleData(char const *,uint)+5o
.text$x:00000820
.text$x:00000820 arg_4           = dword ptr  8
.text$x:00000820
.text$x:00000820                 mov     edx, [esp+arg_4]
.text$x:00000824                 lea     eax, [edx+0Ch]
.text$x:00000827                 mov     ecx, [edx-54h]
.text$x:0000082A                 xor     ecx, eax
.text$x:0000082C                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00000831                 mov     eax, offset __ehfuncinfo$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
.text$x:00000836                 jmp     ___CxxFrameHandler3
.text$x:00000836 __ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z endp
.text$x:00000836
.text$x:00000836 ; ---------------------------------------------------------------------------
.text$x:0000083B                 align 4
.text$x:0000083B _text$x         ends
.text$x:0000083B
.text$mn:0000083C ; ===========================================================================
.text$mn:0000083C
.text$mn:0000083C ; Segment type: Pure code
.text$mn:0000083C ; Segment permissions: Read/Execute
.text$mn:0000083C _text$mn        segment para public 'CODE' use32
.text$mn:0000083C                 assume cs:_text$mn
.text$mn:0000083C                 ;org 83Ch
.text$mn:0000083C ; COMDAT (pick any)
.text$mn:0000083C                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:0000083C
.text$mn:0000083C ; =============== S U B R O U T I N E =======================================
.text$mn:0000083C
.text$mn:0000083C ; Attributes: bp-based frame
.text$mn:0000083C
.text$mn:0000083C ; _DWORD __thiscall nsCharSetProber::nsCharSetProber(nsCharSetProber *__hidden this)
.text$mn:0000083C                 public ??0nsCharSetProber@@QAE@XZ
.text$mn:0000083C ??0nsCharSetProber@@QAE@XZ proc near    ; CODE XREF: nsLatin1Prober::nsLatin1Prober(void)+29p
.text$mn:0000083C
.text$mn:0000083C var_4           = dword ptr -4
.text$mn:0000083C
.text$mn:0000083C                 push    ebp
.text$mn:0000083D                 mov     ebp, esp
.text$mn:0000083F                 push    ecx
.text$mn:00000840                 mov     [ebp+var_4], ecx
.text$mn:00000843                 mov     eax, [ebp+var_4]
.text$mn:00000846                 mov     dword ptr [eax], offset ??_7nsCharSetProber@@6B@ ; const nsCharSetProber::`vftable'
.text$mn:0000084C                 mov     eax, [ebp+var_4]
.text$mn:0000084F                 mov     esp, ebp
.text$mn:00000851                 pop     ebp
.text$mn:00000852                 retn
.text$mn:00000852 ??0nsCharSetProber@@QAE@XZ endp
.text$mn:00000852
.text$mn:00000852 ; ---------------------------------------------------------------------------
.text$mn:00000853                 align 4
.text$mn:00000853 _text$mn        ends
.text$mn:00000853
.text$mn:00000854 ; ===========================================================================
.text$mn:00000854
.text$mn:00000854 ; Segment type: Pure code
.text$mn:00000854 ; Segment permissions: Read/Execute
.text$mn:00000854 _text$mn        segment para public 'CODE' use32
.text$mn:00000854                 assume cs:_text$mn
.text$mn:00000854                 ;org 854h
.text$mn:00000854 ; COMDAT (pick any)
.text$mn:00000854                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000854
.text$mn:00000854 ; =============== S U B R O U T I N E =======================================
.text$mn:00000854
.text$mn:00000854 ; Attributes: bp-based frame
.text$mn:00000854
.text$mn:00000854 ; public: __thiscall nsLatin1Prober::nsLatin1Prober(void)
.text$mn:00000854                 public ??0nsLatin1Prober@@QAE@XZ
.text$mn:00000854 ??0nsLatin1Prober@@QAE@XZ proc near     ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+2E5p
.text$mn:00000854
.text$mn:00000854 var_10          = dword ptr -10h
.text$mn:00000854 var_C           = dword ptr -0Ch
.text$mn:00000854 var_4           = dword ptr -4
.text$mn:00000854
.text$mn:00000854                 push    ebp
.text$mn:00000855                 mov     ebp, esp
.text$mn:00000857                 push    0FFFFFFFFh
.text$mn:00000859                 push    offset __ehhandler$??0nsLatin1Prober@@QAE@XZ
.text$mn:0000085E                 mov     eax, large fs:0
.text$mn:00000864                 push    eax
.text$mn:00000865                 push    ecx
.text$mn:00000866                 mov     eax, dword ptr ds:___security_cookie
.text$mn:0000086B                 xor     eax, ebp
.text$mn:0000086D                 push    eax
.text$mn:0000086E                 lea     eax, [ebp+var_C]
.text$mn:00000871                 mov     large fs:0, eax
.text$mn:00000877                 mov     [ebp+var_10], ecx
.text$mn:0000087A                 mov     ecx, [ebp+var_10] ; this
.text$mn:0000087D                 call    ??0nsCharSetProber@@QAE@XZ ; nsCharSetProber::nsCharSetProber(void)
.text$mn:00000882                 mov     [ebp+var_4], 0
.text$mn:00000889                 mov     eax, [ebp+var_10]
.text$mn:0000088C                 mov     dword ptr [eax], offset ??_7nsLatin1Prober@@6B@ ; const nsLatin1Prober::`vftable'
.text$mn:00000892                 mov     ecx, [ebp+var_10] ; this
.text$mn:00000895                 call    ?Reset@nsLatin1Prober@@UAEXXZ ; nsLatin1Prober::Reset(void)
.text$mn:0000089A                 mov     [ebp+var_4], 0FFFFFFFFh
.text$mn:000008A1                 mov     eax, [ebp+var_10]
.text$mn:000008A4                 mov     ecx, [ebp+var_C]
.text$mn:000008A7                 mov     large fs:0, ecx
.text$mn:000008AE                 pop     ecx
.text$mn:000008AF                 mov     esp, ebp
.text$mn:000008B1                 pop     ebp
.text$mn:000008B2                 retn
.text$mn:000008B2 ??0nsLatin1Prober@@QAE@XZ endp
.text$mn:000008B2
.text$mn:000008B2 ; ---------------------------------------------------------------------------
.text$mn:000008B3                 align 4
.text$mn:000008B3 _text$mn        ends
.text$mn:000008B3
.text$x:000008B4 ; ===========================================================================
.text$x:000008B4
.text$x:000008B4 ; Segment type: Pure code
.text$x:000008B4 ; Segment permissions: Read/Execute
.text$x:000008B4 _text$x         segment para public 'CODE' use32
.text$x:000008B4                 assume cs:_text$x
.text$x:000008B4                 ;org 8B4h
.text$x:000008B4 ; COMDAT (pick associative to section at 854)
.text$x:000008B4                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$x:000008B4
.text$x:000008B4 ; =============== S U B R O U T I N E =======================================
.text$x:000008B4
.text$x:000008B4
.text$x:000008B4 __unwindfunclet$??0nsLatin1Prober@@QAE@XZ$0 proc near
.text$x:000008B4                                         ; DATA XREF: .xdata$x:00000A60o
.text$x:000008B4                 mov     ecx, [ebp-10h]  ; this
.text$x:000008B7                 jmp     ??1nsCharSetProber@@UAE@XZ ; nsCharSetProber::~nsCharSetProber(void)
.text$x:000008B7 __unwindfunclet$??0nsLatin1Prober@@QAE@XZ$0 endp
.text$x:000008B7
.text$x:000008BC
.text$x:000008BC ; =============== S U B R O U T I N E =======================================
.text$x:000008BC
.text$x:000008BC
.text$x:000008BC __ehhandler$??0nsLatin1Prober@@QAE@XZ proc near
.text$x:000008BC                                         ; DATA XREF: nsLatin1Prober::nsLatin1Prober(void)+5o
.text$x:000008BC
.text$x:000008BC arg_4           = dword ptr  8
.text$x:000008BC
.text$x:000008BC                 mov     edx, [esp+arg_4]
.text$x:000008C0                 lea     eax, [edx+0Ch]
.text$x:000008C3                 mov     ecx, [edx-8]
.text$x:000008C6                 xor     ecx, eax
.text$x:000008C8                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:000008CD                 mov     eax, offset __ehfuncinfo$??0nsLatin1Prober@@QAE@XZ
.text$x:000008D2                 jmp     ___CxxFrameHandler3
.text$x:000008D2 __ehhandler$??0nsLatin1Prober@@QAE@XZ endp
.text$x:000008D2
.text$x:000008D2 ; ---------------------------------------------------------------------------
.text$x:000008D7                 align 4
.text$x:000008D7 _text$x         ends
.text$x:000008D7
.text$mn:000008D8 ; ===========================================================================
.text$mn:000008D8
.text$mn:000008D8 ; Segment type: Pure code
.text$mn:000008D8 ; Segment permissions: Read/Execute
.text$mn:000008D8 _text$mn        segment para public 'CODE' use32
.text$mn:000008D8                 assume cs:_text$mn
.text$mn:000008D8                 ;org 8D8h
.text$mn:000008D8 ; COMDAT (pick any)
.text$mn:000008D8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:000008D8
.text$mn:000008D8 ; =============== S U B R O U T I N E =======================================
.text$mn:000008D8
.text$mn:000008D8 ; Attributes: bp-based frame
.text$mn:000008D8
.text$mn:000008D8 ; _DWORD __thiscall nsCharSetProber::~nsCharSetProber(nsCharSetProber *__hidden this)
.text$mn:000008D8                 public ??1nsCharSetProber@@UAE@XZ
.text$mn:000008D8 ??1nsCharSetProber@@UAE@XZ proc near    ; CODE XREF: __unwindfunclet$??0nsLatin1Prober@@QAE@XZ$0+3j
.text$mn:000008D8                                         ; nsLatin1Prober::~nsLatin1Prober(void)+40p ...
.text$mn:000008D8
.text$mn:000008D8 var_4           = dword ptr -4
.text$mn:000008D8
.text$mn:000008D8                 push    ebp
.text$mn:000008D9                 mov     ebp, esp
.text$mn:000008DB                 push    ecx
.text$mn:000008DC                 mov     [ebp+var_4], ecx
.text$mn:000008DF                 mov     eax, [ebp+var_4]
.text$mn:000008E2                 mov     dword ptr [eax], offset ??_7nsCharSetProber@@6B@ ; const nsCharSetProber::`vftable'
.text$mn:000008E8                 mov     esp, ebp
.text$mn:000008EA                 pop     ebp
.text$mn:000008EB                 retn
.text$mn:000008EB ??1nsCharSetProber@@UAE@XZ endp
.text$mn:000008EB
.text$mn:000008EB _text$mn        ends
.text$mn:000008EB
.text$mn:000008EC ; ===========================================================================
.text$mn:000008EC
.text$mn:000008EC ; Segment type: Pure code
.text$mn:000008EC ; Segment permissions: Read/Execute
.text$mn:000008EC _text$mn        segment para public 'CODE' use32
.text$mn:000008EC                 assume cs:_text$mn
.text$mn:000008EC                 ;org 8ECh
.text$mn:000008EC ; COMDAT (pick any)
.text$mn:000008EC                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:000008EC
.text$mn:000008EC ; =============== S U B R O U T I N E =======================================
.text$mn:000008EC
.text$mn:000008EC ; Attributes: bp-based frame
.text$mn:000008EC
.text$mn:000008EC ; _DWORD __thiscall nsLatin1Prober::~nsLatin1Prober(nsLatin1Prober *__hidden this)
.text$mn:000008EC                 public ??1nsLatin1Prober@@UAE@XZ
.text$mn:000008EC ??1nsLatin1Prober@@UAE@XZ proc near     ; CODE XREF: nsLatin1Prober::`scalar deleting destructor'(uint)+Ap
.text$mn:000008EC
.text$mn:000008EC var_10          = dword ptr -10h
.text$mn:000008EC var_C           = dword ptr -0Ch
.text$mn:000008EC var_4           = dword ptr -4
.text$mn:000008EC
.text$mn:000008EC                 push    ebp
.text$mn:000008ED                 mov     ebp, esp
.text$mn:000008EF                 push    0FFFFFFFFh
.text$mn:000008F1                 push    offset __ehhandler$??1nsLatin1Prober@@UAE@XZ
.text$mn:000008F6                 mov     eax, large fs:0
.text$mn:000008FC                 push    eax
.text$mn:000008FD                 push    ecx
.text$mn:000008FE                 mov     eax, dword ptr ds:___security_cookie
.text$mn:00000903                 xor     eax, ebp
.text$mn:00000905                 push    eax
.text$mn:00000906                 lea     eax, [ebp+var_C]
.text$mn:00000909                 mov     large fs:0, eax
.text$mn:0000090F                 mov     [ebp+var_10], ecx
.text$mn:00000912                 mov     eax, [ebp+var_10]
.text$mn:00000915                 mov     dword ptr [eax], offset ??_7nsLatin1Prober@@6B@ ; const nsLatin1Prober::`vftable'
.text$mn:0000091B                 mov     [ebp+var_4], 0
.text$mn:00000922                 mov     [ebp+var_4], 0FFFFFFFFh
.text$mn:00000929                 mov     ecx, [ebp+var_10] ; this
.text$mn:0000092C                 call    ??1nsCharSetProber@@UAE@XZ ; nsCharSetProber::~nsCharSetProber(void)
.text$mn:00000931                 mov     ecx, [ebp+var_C]
.text$mn:00000934                 mov     large fs:0, ecx
.text$mn:0000093B                 pop     ecx
.text$mn:0000093C                 mov     esp, ebp
.text$mn:0000093E                 pop     ebp
.text$mn:0000093F                 retn
.text$mn:0000093F ??1nsLatin1Prober@@UAE@XZ endp
.text$mn:0000093F
.text$mn:0000093F _text$mn        ends
.text$mn:0000093F
.text$x:00000940 ; ===========================================================================
.text$x:00000940
.text$x:00000940 ; Segment type: Pure code
.text$x:00000940 ; Segment permissions: Read/Execute
.text$x:00000940 _text$x         segment para public 'CODE' use32
.text$x:00000940                 assume cs:_text$x
.text$x:00000940                 ;org 940h
.text$x:00000940 ; COMDAT (pick associative to section at 8EC)
.text$x:00000940                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$x:00000940
.text$x:00000940 ; =============== S U B R O U T I N E =======================================
.text$x:00000940
.text$x:00000940
.text$x:00000940 __unwindfunclet$??1nsLatin1Prober@@UAE@XZ$0 proc near
.text$x:00000940                                         ; DATA XREF: .xdata$x:00000A8Co
.text$x:00000940                 mov     ecx, [ebp-10h]  ; this
.text$x:00000943                 jmp     ??1nsCharSetProber@@UAE@XZ ; nsCharSetProber::~nsCharSetProber(void)
.text$x:00000943 __unwindfunclet$??1nsLatin1Prober@@UAE@XZ$0 endp
.text$x:00000943
.text$x:00000948
.text$x:00000948 ; =============== S U B R O U T I N E =======================================
.text$x:00000948
.text$x:00000948
.text$x:00000948 __ehhandler$??1nsLatin1Prober@@UAE@XZ proc near
.text$x:00000948                                         ; DATA XREF: nsLatin1Prober::~nsLatin1Prober(void)+5o
.text$x:00000948
.text$x:00000948 arg_4           = dword ptr  8
.text$x:00000948
.text$x:00000948                 mov     edx, [esp+arg_4]
.text$x:0000094C                 lea     eax, [edx+0Ch]
.text$x:0000094F                 mov     ecx, [edx-8]
.text$x:00000952                 xor     ecx, eax
.text$x:00000954                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$x:00000959                 mov     eax, offset __ehfuncinfo$??1nsLatin1Prober@@UAE@XZ
.text$x:0000095E                 jmp     ___CxxFrameHandler3
.text$x:0000095E __ehhandler$??1nsLatin1Prober@@UAE@XZ endp
.text$x:0000095E
.text$x:0000095E ; ---------------------------------------------------------------------------
.text$x:00000963                 align 4
.text$x:00000963 _text$x         ends
.text$x:00000963
.text$mn:00000964 ; ===========================================================================
.text$mn:00000964
.text$mn:00000964 ; Segment type: Pure code
.text$mn:00000964 ; Segment permissions: Read/Execute
.text$mn:00000964 _text$mn        segment para public 'CODE' use32
.text$mn:00000964                 assume cs:_text$mn
.text$mn:00000964                 ;org 964h
.text$mn:00000964 ; COMDAT (pick any)
.text$mn:00000964                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000964
.text$mn:00000964 ; =============== S U B R O U T I N E =======================================
.text$mn:00000964
.text$mn:00000964 ; Attributes: bp-based frame
.text$mn:00000964
.text$mn:00000964 ; public: virtual void * __thiscall nsCharSetProber::`scalar deleting destructor'(unsigned int)
.text$mn:00000964                 public ??_GnsCharSetProber@@UAEPAXI@Z
.text$mn:00000964 ??_GnsCharSetProber@@UAEPAXI@Z proc near
.text$mn:00000964
.text$mn:00000964 var_4           = dword ptr -4
.text$mn:00000964 arg_0           = dword ptr  8
.text$mn:00000964
.text$mn:00000964                 push    ebp
.text$mn:00000965                 mov     ebp, esp
.text$mn:00000967                 push    ecx
.text$mn:00000968                 mov     [ebp+var_4], ecx
.text$mn:0000096B                 mov     ecx, [ebp+var_4] ; this
.text$mn:0000096E                 call    ??1nsCharSetProber@@UAE@XZ ; nsCharSetProber::~nsCharSetProber(void)
.text$mn:00000973                 mov     eax, [ebp+arg_0]
.text$mn:00000976                 and     eax, 1
.text$mn:00000979                 jz      short loc_987
.text$mn:0000097B                 mov     ecx, [ebp+var_4]
.text$mn:0000097E                 push    ecx             ; void *
.text$mn:0000097F                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$mn:00000984                 add     esp, 4
.text$mn:00000987
.text$mn:00000987 loc_987:                                ; CODE XREF: nsCharSetProber::`scalar deleting destructor'(uint)+15j
.text$mn:00000987                 mov     eax, [ebp+var_4]
.text$mn:0000098A                 mov     esp, ebp
.text$mn:0000098C                 pop     ebp
.text$mn:0000098D                 retn    4
.text$mn:0000098D ??_GnsCharSetProber@@UAEPAXI@Z endp
.text$mn:0000098D
.text$mn:0000098D _text$mn        ends
.text$mn:0000098D
.text$mn:00000990 ; ===========================================================================
.text$mn:00000990
.text$mn:00000990 ; Segment type: Pure code
.text$mn:00000990 ; Segment permissions: Read/Execute
.text$mn:00000990 _text$mn        segment para public 'CODE' use32
.text$mn:00000990                 assume cs:_text$mn
.text$mn:00000990                 ;org 990h
.text$mn:00000990 ; COMDAT (pick any)
.text$mn:00000990                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000990
.text$mn:00000990 ; =============== S U B R O U T I N E =======================================
.text$mn:00000990
.text$mn:00000990 ; Attributes: bp-based frame
.text$mn:00000990
.text$mn:00000990 ; public: virtual void * __thiscall nsLatin1Prober::`scalar deleting destructor'(unsigned int)
.text$mn:00000990                 public ??_GnsLatin1Prober@@UAEPAXI@Z
.text$mn:00000990 ??_GnsLatin1Prober@@UAEPAXI@Z proc near
.text$mn:00000990
.text$mn:00000990 var_4           = dword ptr -4
.text$mn:00000990 arg_0           = dword ptr  8
.text$mn:00000990
.text$mn:00000990                 push    ebp
.text$mn:00000991                 mov     ebp, esp
.text$mn:00000993                 push    ecx
.text$mn:00000994                 mov     [ebp+var_4], ecx
.text$mn:00000997                 mov     ecx, [ebp+var_4] ; this
.text$mn:0000099A                 call    ??1nsLatin1Prober@@UAE@XZ ; nsLatin1Prober::~nsLatin1Prober(void)
.text$mn:0000099F                 mov     eax, [ebp+arg_0]
.text$mn:000009A2                 and     eax, 1
.text$mn:000009A5                 jz      short loc_9B3
.text$mn:000009A7                 mov     ecx, [ebp+var_4]
.text$mn:000009AA                 push    ecx             ; void *
.text$mn:000009AB                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$mn:000009B0                 add     esp, 4
.text$mn:000009B3
.text$mn:000009B3 loc_9B3:                                ; CODE XREF: nsLatin1Prober::`scalar deleting destructor'(uint)+15j
.text$mn:000009B3                 mov     eax, [ebp+var_4]
.text$mn:000009B6                 mov     esp, ebp
.text$mn:000009B8                 pop     ebp
.text$mn:000009B9                 retn    4
.text$mn:000009B9 ??_GnsLatin1Prober@@UAEPAXI@Z endp
.text$mn:000009B9
.text$mn:000009B9 _text$mn        ends
.text$mn:000009B9
.text$mn:000009BC ; ===========================================================================
.text$mn:000009BC
.text$mn:000009BC ; Segment type: Pure code
.text$mn:000009BC ; Segment permissions: Read/Execute
.text$mn:000009BC _text$mn        segment para public 'CODE' use32
.text$mn:000009BC                 assume cs:_text$mn
.text$mn:000009BC                 ;org 9BCh
.text$mn:000009BC ; COMDAT (pick any)
.text$mn:000009BC                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:000009BC
.text$mn:000009BC ; =============== S U B R O U T I N E =======================================
.text$mn:000009BC
.text$mn:000009BC ; Attributes: bp-based frame
.text$mn:000009BC
.text$mn:000009BC ; public: virtual void * __thiscall nsUniversalDetector::`scalar deleting destructor'(unsigned int)
.text$mn:000009BC                 public ??_GnsUniversalDetector@@UAEPAXI@Z
.text$mn:000009BC ??_GnsUniversalDetector@@UAEPAXI@Z proc near
.text$mn:000009BC
.text$mn:000009BC var_4           = dword ptr -4
.text$mn:000009BC arg_0           = dword ptr  8
.text$mn:000009BC
.text$mn:000009BC                 push    ebp
.text$mn:000009BD                 mov     ebp, esp
.text$mn:000009BF                 push    ecx
.text$mn:000009C0                 mov     [ebp+var_4], ecx
.text$mn:000009C3                 mov     ecx, [ebp+var_4] ; this
.text$mn:000009C6                 call    ??1nsUniversalDetector@@UAE@XZ ; nsUniversalDetector::~nsUniversalDetector(void)
.text$mn:000009CB                 mov     eax, [ebp+arg_0]
.text$mn:000009CE                 and     eax, 1
.text$mn:000009D1                 jz      short loc_9DF
.text$mn:000009D3                 mov     ecx, [ebp+var_4]
.text$mn:000009D6                 push    ecx             ; void *
.text$mn:000009D7                 call    ??3@YAXPAX@Z    ; operator delete(void *)
.text$mn:000009DC                 add     esp, 4
.text$mn:000009DF
.text$mn:000009DF loc_9DF:                                ; CODE XREF: nsUniversalDetector::`scalar deleting destructor'(uint)+15j
.text$mn:000009DF                 mov     eax, [ebp+var_4]
.text$mn:000009E2                 mov     esp, ebp
.text$mn:000009E4                 pop     ebp
.text$mn:000009E5                 retn    4
.text$mn:000009E5 ??_GnsUniversalDetector@@UAEPAXI@Z endp
.text$mn:000009E5
.text$mn:000009E5 _text$mn        ends
.text$mn:000009E5
.text$mn:000009E8 ; ===========================================================================
.text$mn:000009E8
.text$mn:000009E8 ; Segment type: Pure code
.text$mn:000009E8 ; Segment permissions: Read/Execute
.text$mn:000009E8 _text$mn        segment para public 'CODE' use32
.text$mn:000009E8                 assume cs:_text$mn
.text$mn:000009E8                 ;org 9E8h
.text$mn:000009E8 ; COMDAT (pick any)
.text$mn:000009E8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:000009E8
.text$mn:000009E8 ; =============== S U B R O U T I N E =======================================
.text$mn:000009E8
.text$mn:000009E8 ; Attributes: bp-based frame
.text$mn:000009E8
.text$mn:000009E8 ; const char *__thiscall nsLatin1Prober::GetCharSetName(nsLatin1Prober *__hidden this)
.text$mn:000009E8                 public ?GetCharSetName@nsLatin1Prober@@UAEPBDXZ
.text$mn:000009E8 ?GetCharSetName@nsLatin1Prober@@UAEPBDXZ proc near
.text$mn:000009E8                                         ; DATA XREF: .rdata:00000AF4o
.text$mn:000009E8
.text$mn:000009E8 var_4           = dword ptr -4
.text$mn:000009E8
.text$mn:000009E8                 push    ebp
.text$mn:000009E9                 mov     ebp, esp
.text$mn:000009EB                 push    ecx
.text$mn:000009EC                 mov     [ebp+var_4], ecx
.text$mn:000009EF                 mov     eax, offset ??_C@_0N@BCBHFELI@windows?91252?$AA@ ; "windows-1252"
.text$mn:000009F4                 mov     esp, ebp
.text$mn:000009F6                 pop     ebp
.text$mn:000009F7                 retn
.text$mn:000009F7 ?GetCharSetName@nsLatin1Prober@@UAEPBDXZ endp
.text$mn:000009F7
.text$mn:000009F7 _text$mn        ends
.text$mn:000009F7
.text$mn:000009F8 ; ===========================================================================
.text$mn:000009F8
.text$mn:000009F8 ; Segment type: Pure code
.text$mn:000009F8 ; Segment permissions: Read/Execute
.text$mn:000009F8 _text$mn        segment para public 'CODE' use32
.text$mn:000009F8                 assume cs:_text$mn
.text$mn:000009F8                 ;org 9F8h
.text$mn:000009F8 ; COMDAT (pick any)
.text$mn:000009F8                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:000009F8
.text$mn:000009F8 ; =============== S U B R O U T I N E =======================================
.text$mn:000009F8
.text$mn:000009F8 ; Attributes: bp-based frame
.text$mn:000009F8
.text$mn:000009F8 ; public: virtual enum  nsProbingState __thiscall nsLatin1Prober::GetState(void)
.text$mn:000009F8                 public ?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ
.text$mn:000009F8 ?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ proc near
.text$mn:000009F8                                         ; DATA XREF: .rdata:00000AFCo
.text$mn:000009F8
.text$mn:000009F8 var_4           = dword ptr -4
.text$mn:000009F8
.text$mn:000009F8                 push    ebp
.text$mn:000009F9                 mov     ebp, esp
.text$mn:000009FB                 push    ecx
.text$mn:000009FC                 mov     [ebp+var_4], ecx
.text$mn:000009FF                 mov     eax, [ebp+var_4]
.text$mn:00000A02                 mov     eax, [eax+4]
.text$mn:00000A05                 mov     esp, ebp
.text$mn:00000A07                 pop     ebp
.text$mn:00000A08                 retn
.text$mn:00000A08 ?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ endp
.text$mn:00000A08
.text$mn:00000A08 ; ---------------------------------------------------------------------------
.text$mn:00000A09                 align 4
.text$mn:00000A09 _text$mn        ends
.text$mn:00000A09
.text$mn:00000A0C ; ===========================================================================
.text$mn:00000A0C
.text$mn:00000A0C ; Segment type: Pure code
.text$mn:00000A0C ; Segment permissions: Read/Execute
.text$mn:00000A0C _text$mn        segment para public 'CODE' use32
.text$mn:00000A0C                 assume cs:_text$mn
.text$mn:00000A0C                 ;org 0A0Ch
.text$mn:00000A0C ; COMDAT (pick any)
.text$mn:00000A0C                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000A0C
.text$mn:00000A0C ; =============== S U B R O U T I N E =======================================
.text$mn:00000A0C
.text$mn:00000A0C ; Attributes: bp-based frame
.text$mn:00000A0C
.text$mn:00000A0C ; void __thiscall nsLatin1Prober::SetOpion(nsLatin1Prober *__hidden this)
.text$mn:00000A0C                 public ?SetOpion@nsLatin1Prober@@UAEXXZ
.text$mn:00000A0C ?SetOpion@nsLatin1Prober@@UAEXXZ proc near ; DATA XREF: .rdata:00000B08o
.text$mn:00000A0C
.text$mn:00000A0C var_4           = dword ptr -4
.text$mn:00000A0C
.text$mn:00000A0C                 push    ebp
.text$mn:00000A0D                 mov     ebp, esp
.text$mn:00000A0F                 push    ecx
.text$mn:00000A10                 mov     [ebp+var_4], ecx
.text$mn:00000A13                 mov     esp, ebp
.text$mn:00000A15                 pop     ebp
.text$mn:00000A16                 retn
.text$mn:00000A16 ?SetOpion@nsLatin1Prober@@UAEXXZ endp
.text$mn:00000A16
.text$mn:00000A16 ; ---------------------------------------------------------------------------
.text$mn:00000A17                 align 4
.text$mn:00000A17 _text$mn        ends
.text$mn:00000A17
.xdata$x:00000A18 ; ===========================================================================
.xdata$x:00000A18
.xdata$x:00000A18 ; Segment type: Pure data
.xdata$x:00000A18 ; Segment permissions: Read
.xdata$x:00000A18 _xdata$x        segment dword public 'DATA' use32
.xdata$x:00000A18                 assume cs:_xdata$x
.xdata$x:00000A18                 ;org 0A18h
.xdata$x:00000A18 __unwindtable$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z db 0FFh
.xdata$x:00000A18                                         ; DATA XREF: .xdata$x:00000A40o
.xdata$x:00000A19                 db 0FFh
.xdata$x:00000A1A                 db 0FFh
.xdata$x:00000A1B                 db 0FFh
.xdata$x:00000A1C                 dd offset __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$0
.xdata$x:00000A20                 db 0FFh
.xdata$x:00000A21                 db 0FFh
.xdata$x:00000A22                 db 0FFh
.xdata$x:00000A23                 db 0FFh
.xdata$x:00000A24                 dd offset __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$1
.xdata$x:00000A28                 db 0FFh
.xdata$x:00000A29                 db 0FFh
.xdata$x:00000A2A                 db 0FFh
.xdata$x:00000A2B                 db 0FFh
.xdata$x:00000A2C                 dd offset __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$2
.xdata$x:00000A30                 db 0FFh
.xdata$x:00000A31                 db 0FFh
.xdata$x:00000A32                 db 0FFh
.xdata$x:00000A33                 db 0FFh
.xdata$x:00000A34                 dd offset __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$3
.xdata$x:00000A38 __ehfuncinfo$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z db  22h ; "
.xdata$x:00000A38                                         ; DATA XREF: __ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z+11o
.xdata$x:00000A39                 db    5
.xdata$x:00000A3A                 db  93h ; ô
.xdata$x:00000A3B                 db  19h
.xdata$x:00000A3C                 db    4
.xdata$x:00000A3D                 db    0
.xdata$x:00000A3E                 db    0
.xdata$x:00000A3F                 db    0
.xdata$x:00000A40                 dd offset __unwindtable$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
.xdata$x:00000A44                 db    0
.xdata$x:00000A45                 db    0
.xdata$x:00000A46                 db    0
.xdata$x:00000A47                 db    0
.xdata$x:00000A48                 db    0
.xdata$x:00000A49                 db    0
.xdata$x:00000A4A                 db    0
.xdata$x:00000A4B                 db    0
.xdata$x:00000A4C                 db    0
.xdata$x:00000A4D                 db    0
.xdata$x:00000A4E                 db    0
.xdata$x:00000A4F                 db    0
.xdata$x:00000A50                 db    0
.xdata$x:00000A51                 db    0
.xdata$x:00000A52                 db    0
.xdata$x:00000A53                 db    0
.xdata$x:00000A54                 db    0
.xdata$x:00000A55                 db    0
.xdata$x:00000A56                 db    0
.xdata$x:00000A57                 db    0
.xdata$x:00000A58                 db    0
.xdata$x:00000A59                 db    0
.xdata$x:00000A5A                 db    0
.xdata$x:00000A5B                 db    0
.xdata$x:00000A5B _xdata$x        ends
.xdata$x:00000A5B
.xdata$x:00000A5C ; ===========================================================================
.xdata$x:00000A5C
.xdata$x:00000A5C ; Segment type: Pure data
.xdata$x:00000A5C ; Segment permissions: Read
.xdata$x:00000A5C _xdata$x        segment dword public 'DATA' use32
.xdata$x:00000A5C                 assume cs:_xdata$x
.xdata$x:00000A5C                 ;org 0A5Ch
.xdata$x:00000A5C ; COMDAT (pick associative to section at 854)
.xdata$x:00000A5C __unwindtable$??0nsLatin1Prober@@QAE@XZ db 0FFh
.xdata$x:00000A5C                                         ; DATA XREF: .xdata$x:00000A6Co
.xdata$x:00000A5D                 db 0FFh
.xdata$x:00000A5E                 db 0FFh
.xdata$x:00000A5F                 db 0FFh
.xdata$x:00000A60                 dd offset __unwindfunclet$??0nsLatin1Prober@@QAE@XZ$0
.xdata$x:00000A64 __ehfuncinfo$??0nsLatin1Prober@@QAE@XZ db  22h ; "
.xdata$x:00000A64                                         ; DATA XREF: __ehhandler$??0nsLatin1Prober@@QAE@XZ+11o
.xdata$x:00000A65                 db    5
.xdata$x:00000A66                 db  93h ; ô
.xdata$x:00000A67                 db  19h
.xdata$x:00000A68                 db    1
.xdata$x:00000A69                 db    0
.xdata$x:00000A6A                 db    0
.xdata$x:00000A6B                 db    0
.xdata$x:00000A6C                 dd offset __unwindtable$??0nsLatin1Prober@@QAE@XZ
.xdata$x:00000A70                 db    0
.xdata$x:00000A71                 db    0
.xdata$x:00000A72                 db    0
.xdata$x:00000A73                 db    0
.xdata$x:00000A74                 db    0
.xdata$x:00000A75                 db    0
.xdata$x:00000A76                 db    0
.xdata$x:00000A77                 db    0
.xdata$x:00000A78                 db    0
.xdata$x:00000A79                 db    0
.xdata$x:00000A7A                 db    0
.xdata$x:00000A7B                 db    0
.xdata$x:00000A7C                 db    0
.xdata$x:00000A7D                 db    0
.xdata$x:00000A7E                 db    0
.xdata$x:00000A7F                 db    0
.xdata$x:00000A80                 db    0
.xdata$x:00000A81                 db    0
.xdata$x:00000A82                 db    0
.xdata$x:00000A83                 db    0
.xdata$x:00000A84                 db    0
.xdata$x:00000A85                 db    0
.xdata$x:00000A86                 db    0
.xdata$x:00000A87                 db    0
.xdata$x:00000A87 _xdata$x        ends
.xdata$x:00000A87
.xdata$x:00000A88 ; ===========================================================================
.xdata$x:00000A88
.xdata$x:00000A88 ; Segment type: Pure data
.xdata$x:00000A88 ; Segment permissions: Read
.xdata$x:00000A88 _xdata$x        segment dword public 'DATA' use32
.xdata$x:00000A88                 assume cs:_xdata$x
.xdata$x:00000A88                 ;org 0A88h
.xdata$x:00000A88 ; COMDAT (pick associative to section at 8EC)
.xdata$x:00000A88 __unwindtable$??1nsLatin1Prober@@UAE@XZ db 0FFh
.xdata$x:00000A88                                         ; DATA XREF: .xdata$x:00000A98o
.xdata$x:00000A89                 db 0FFh
.xdata$x:00000A8A                 db 0FFh
.xdata$x:00000A8B                 db 0FFh
.xdata$x:00000A8C                 dd offset __unwindfunclet$??1nsLatin1Prober@@UAE@XZ$0
.xdata$x:00000A90 __ehfuncinfo$??1nsLatin1Prober@@UAE@XZ db  22h ; "
.xdata$x:00000A90                                         ; DATA XREF: __ehhandler$??1nsLatin1Prober@@UAE@XZ+11o
.xdata$x:00000A91                 db    5
.xdata$x:00000A92                 db  93h ; ô
.xdata$x:00000A93                 db  19h
.xdata$x:00000A94                 db    1
.xdata$x:00000A95                 db    0
.xdata$x:00000A96                 db    0
.xdata$x:00000A97                 db    0
.xdata$x:00000A98                 dd offset __unwindtable$??1nsLatin1Prober@@UAE@XZ
.xdata$x:00000A9C                 db    0
.xdata$x:00000A9D                 db    0
.xdata$x:00000A9E                 db    0
.xdata$x:00000A9F                 db    0
.xdata$x:00000AA0                 db    0
.xdata$x:00000AA1                 db    0
.xdata$x:00000AA2                 db    0
.xdata$x:00000AA3                 db    0
.xdata$x:00000AA4                 db    0
.xdata$x:00000AA5                 db    0
.xdata$x:00000AA6                 db    0
.xdata$x:00000AA7                 db    0
.xdata$x:00000AA8                 db    0
.xdata$x:00000AA9                 db    0
.xdata$x:00000AAA                 db    0
.xdata$x:00000AAB                 db    0
.xdata$x:00000AAC                 db    0
.xdata$x:00000AAD                 db    0
.xdata$x:00000AAE                 db    0
.xdata$x:00000AAF                 db    0
.xdata$x:00000AB0                 db    0
.xdata$x:00000AB1                 db    0
.xdata$x:00000AB2                 db    0
.xdata$x:00000AB3                 db    0
.xdata$x:00000AB3 _xdata$x        ends
.xdata$x:00000AB3
.rdata:00000AB4 ; ===========================================================================
.rdata:00000AB4
.rdata:00000AB4 ; Segment type: Pure data
.rdata:00000AB4 ; Segment permissions: Read
.rdata:00000AB4 _rdata          segment dword public 'DATA' use32
.rdata:00000AB4                 assume cs:_rdata
.rdata:00000AB4                 ;org 0AB4h
.rdata:00000AB4 ; COMDAT (pick largest)
.rdata:00000AB4                 dd offset ??_R4nsUniversalDetector@@6B@ ; const nsUniversalDetector::`RTTI Complete Object Locator'
.rdata:00000AB8                 public ??_7nsUniversalDetector@@6B@
.rdata:00000AB8 ; const nsUniversalDetector::`vftable'
.rdata:00000AB8 ??_7nsUniversalDetector@@6B@ dd offset ??_EnsUniversalDetector@@UAEPAXI@Z
.rdata:00000AB8                                         ; DATA XREF: nsUniversalDetector::nsUniversalDetector(uint)+Co
.rdata:00000AB8                                         ; nsUniversalDetector::~nsUniversalDetector(void)+Co
.rdata:00000AB8                                         ; nsUniversalDetector::`vector deleting destructor'(uint)
.rdata:00000ABC                 dd offset ?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z ; nsUniversalDetector::HandleData(char const *,uint)
.rdata:00000AC0                 dd offset ?DataEnd@nsUniversalDetector@@UAEXXZ ; nsUniversalDetector::DataEnd(void)
.rdata:00000AC4                 dd offset __purecall
.rdata:00000AC8                 dd offset ?Reset@nsUniversalDetector@@MAEXXZ ; nsUniversalDetector::Reset(void)
.rdata:00000AC8 _rdata          ends
.rdata:00000AC8
.rdata:00000ACC ; ===========================================================================
.rdata:00000ACC
.rdata:00000ACC ; Segment type: Pure data
.rdata:00000ACC ; Segment permissions: Read
.rdata:00000ACC _rdata          segment dword public 'DATA' use32
.rdata:00000ACC                 assume cs:_rdata
.rdata:00000ACC                 ;org 0ACCh
.rdata:00000ACC ; COMDAT (pick largest)
.rdata:00000ACC                 dd offset ??_R4nsCharSetProber@@6B@ ; const nsCharSetProber::`RTTI Complete Object Locator'
.rdata:00000AD0                 public ??_7nsCharSetProber@@6B@
.rdata:00000AD0 ; const nsCharSetProber::`vftable'
.rdata:00000AD0 ??_7nsCharSetProber@@6B@ dd offset ??_EnsCharSetProber@@UAEPAXI@Z
.rdata:00000AD0                                         ; DATA XREF: nsCharSetProber::nsCharSetProber(void)+Ao
.rdata:00000AD0                                         ; nsCharSetProber::~nsCharSetProber(void)+Ao
.rdata:00000AD0                                         ; nsCharSetProber::`vector deleting destructor'(uint)
.rdata:00000AD4                 dd offset __purecall
.rdata:00000AD8                 dd offset __purecall
.rdata:00000ADC                 dd offset __purecall
.rdata:00000AE0                 dd offset __purecall
.rdata:00000AE4                 dd offset __purecall
.rdata:00000AE8                 dd offset __purecall
.rdata:00000AE8 _rdata          ends
.rdata:00000AE8
.rdata:00000AEC ; ===========================================================================
.rdata:00000AEC
.rdata:00000AEC ; Segment type: Pure data
.rdata:00000AEC ; Segment permissions: Read
.rdata:00000AEC _rdata          segment dword public 'DATA' use32
.rdata:00000AEC                 assume cs:_rdata
.rdata:00000AEC                 ;org 0AECh
.rdata:00000AEC ; COMDAT (pick largest)
.rdata:00000AEC                 dd offset ??_R4nsLatin1Prober@@6B@ ; const nsLatin1Prober::`RTTI Complete Object Locator'
.rdata:00000AF0                 public ??_7nsLatin1Prober@@6B@
.rdata:00000AF0 ; const nsLatin1Prober::`vftable'
.rdata:00000AF0 ??_7nsLatin1Prober@@6B@ dd offset ??_EnsLatin1Prober@@UAEPAXI@Z
.rdata:00000AF0                                         ; DATA XREF: nsLatin1Prober::nsLatin1Prober(void)+38o
.rdata:00000AF0                                         ; nsLatin1Prober::~nsLatin1Prober(void)+29o
.rdata:00000AF0                                         ; nsLatin1Prober::`vector deleting destructor'(uint)
.rdata:00000AF4                 dd offset ?GetCharSetName@nsLatin1Prober@@UAEPBDXZ ; nsLatin1Prober::GetCharSetName(void)
.rdata:00000AF8                 dd offset ?HandleData@nsLatin1Prober@@UAE?AW4nsProbingState@@PBDI@Z ; nsLatin1Prober::HandleData(char const *,uint)
.rdata:00000AFC                 dd offset ?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ ; nsLatin1Prober::GetState(void)
.rdata:00000B00                 dd offset ?Reset@nsLatin1Prober@@UAEXXZ ; nsLatin1Prober::Reset(void)
.rdata:00000B04                 dd offset ?GetConfidence@nsLatin1Prober@@UAEMXZ ; nsLatin1Prober::GetConfidence(void)
.rdata:00000B08                 dd offset ?SetOpion@nsLatin1Prober@@UAEXXZ ; nsLatin1Prober::SetOpion(void)
.rdata:00000B08 _rdata          ends
.rdata:00000B08
.rdata:00000B0C ; ===========================================================================
.rdata:00000B0C
.rdata:00000B0C ; Segment type: Pure data
.rdata:00000B0C ; Segment permissions: Read
.rdata:00000B0C _rdata          segment dword public 'DATA' use32
.rdata:00000B0C                 assume cs:_rdata
.rdata:00000B0C                 ;org 0B0Ch
.rdata:00000B0C ; COMDAT (pick any)
.rdata:00000B0C                 public ??_C@_0N@BCBHFELI@windows?91252?$AA@
.rdata:00000B0C ; `string'
.rdata:00000B0C ??_C@_0N@BCBHFELI@windows?91252?$AA@ db 'windows-1252',0
.rdata:00000B0C                                         ; DATA XREF: nsLatin1Prober::GetCharSetName(void)+7o
.rdata:00000B19                 align 4
.rdata:00000B19 _rdata          ends
.rdata:00000B19
.rdata$r:00000B1C ; ===========================================================================
.rdata$r:00000B1C
.rdata$r:00000B1C ; Segment type: Pure data
.rdata$r:00000B1C ; Segment permissions: Read
.rdata$r:00000B1C _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000B1C                 assume cs:_rdata$r
.rdata$r:00000B1C                 ;org 0B1Ch
.rdata$r:00000B1C ; COMDAT (pick any)
.rdata$r:00000B1C                 public ??_R4nsCharSetProber@@6B@
.rdata$r:00000B1C ; const nsCharSetProber::`RTTI Complete Object Locator'
.rdata$r:00000B1C ??_R4nsCharSetProber@@6B@ db    0       ; DATA XREF: .rdata:00000ACCo
.rdata$r:00000B1D                 db    0
.rdata$r:00000B1E                 db    0
.rdata$r:00000B1F                 db    0
.rdata$r:00000B20                 db    0
.rdata$r:00000B21                 db    0
.rdata$r:00000B22                 db    0
.rdata$r:00000B23                 db    0
.rdata$r:00000B24                 db    0
.rdata$r:00000B25                 db    0
.rdata$r:00000B26                 db    0
.rdata$r:00000B27                 db    0
.rdata$r:00000B28                 dd offset ??_R0?AVnsCharSetProber@@@8 ; nsCharSetProber `RTTI Type Descriptor'
.rdata$r:00000B2C                 dd offset ??_R3nsCharSetProber@@8 ; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000B2C _rdata$r        ends
.rdata$r:00000B2C
.data$r:00000B30 ; ===========================================================================
.data$r:00000B30
.data$r:00000B30 ; Segment type: Pure data
.data$r:00000B30 ; Segment permissions: Read/Write
.data$r:00000B30 _data$r         segment dword public 'DATA' use32
.data$r:00000B30                 assume cs:_data$r
.data$r:00000B30                 ;org 0B30h
.data$r:00000B30 ; COMDAT (pick any)
.data$r:00000B30                 public ??_R0?AVnsCharSetProber@@@8
.data$r:00000B30 ; class nsCharSetProber `RTTI Type Descriptor'
.data$r:00000B30 ??_R0?AVnsCharSetProber@@@8 dd offset ??_7type_info@@6B@
.data$r:00000B30                                         ; DATA XREF: .rdata$r:00000B28o
.data$r:00000B30                                         ; .rdata$r:nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'o
.data$r:00000B30                                         ; const type_info::`vftable'
.data$r:00000B34                 align 8
.data$r:00000B38 a_?avnscharsetp db '.?AVnsCharSetProber@@',0
.data$r:00000B4E                 align 10h
.data$r:00000B4E _data$r         ends
.data$r:00000B4E
.rdata$r:00000B50 ; ===========================================================================
.rdata$r:00000B50
.rdata$r:00000B50 ; Segment type: Pure data
.rdata$r:00000B50 ; Segment permissions: Read
.rdata$r:00000B50 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000B50                 assume cs:_rdata$r
.rdata$r:00000B50                 ;org 0B50h
.rdata$r:00000B50 ; COMDAT (pick any)
.rdata$r:00000B50                 public ??_R3nsCharSetProber@@8
.rdata$r:00000B50 ; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000B50 ??_R3nsCharSetProber@@8 db    0         ; DATA XREF: .rdata$r:00000B2Co
.rdata$r:00000B50                                         ; .rdata$r:00000B80o
.rdata$r:00000B51                 db    0
.rdata$r:00000B52                 db    0
.rdata$r:00000B53                 db    0
.rdata$r:00000B54                 db    0
.rdata$r:00000B55                 db    0
.rdata$r:00000B56                 db    0
.rdata$r:00000B57                 db    0
.rdata$r:00000B58                 db    1
.rdata$r:00000B59                 db    0
.rdata$r:00000B5A                 db    0
.rdata$r:00000B5B                 db    0
.rdata$r:00000B5C                 dd offset ??_R2nsCharSetProber@@8 ; nsCharSetProber::`RTTI Base Class Array'
.rdata$r:00000B5C _rdata$r        ends
.rdata$r:00000B5C
.rdata$r:00000B60 ; ===========================================================================
.rdata$r:00000B60
.rdata$r:00000B60 ; Segment type: Pure data
.rdata$r:00000B60 ; Segment permissions: Read
.rdata$r:00000B60 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000B60                 assume cs:_rdata$r
.rdata$r:00000B60                 ;org 0B60h
.rdata$r:00000B60 ; COMDAT (pick any)
.rdata$r:00000B60                 public ??_R2nsCharSetProber@@8
.rdata$r:00000B60 ; nsCharSetProber::`RTTI Base Class Array'
.rdata$r:00000B60 ??_R2nsCharSetProber@@8 dd offset ??_R1A@?0A@EA@nsCharSetProber@@8
.rdata$r:00000B60                                         ; DATA XREF: .rdata$r:00000B5Co
.rdata$r:00000B60                                         ; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
.rdata$r:00000B64                 db    0
.rdata$r:00000B65                 align 4
.rdata$r:00000B65 _rdata$r        ends
.rdata$r:00000B65
.rdata$r:00000B68 ; ===========================================================================
.rdata$r:00000B68
.rdata$r:00000B68 ; Segment type: Pure data
.rdata$r:00000B68 ; Segment permissions: Read
.rdata$r:00000B68 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000B68                 assume cs:_rdata$r
.rdata$r:00000B68                 ;org 0B68h
.rdata$r:00000B68 ; COMDAT (pick any)
.rdata$r:00000B68                 public ??_R1A@?0A@EA@nsCharSetProber@@8
.rdata$r:00000B68 ; nsCharSetProber::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
.rdata$r:00000B68 ??_R1A@?0A@EA@nsCharSetProber@@8 dd offset ??_R0?AVnsCharSetProber@@@8
.rdata$r:00000B68                                         ; DATA XREF: .rdata$r:nsCharSetProber::`RTTI Base Class Array'o
.rdata$r:00000B68                                         ; .rdata$r:00000C38o
.rdata$r:00000B68                                         ; nsCharSetProber `RTTI Type Descriptor'
.rdata$r:00000B6C                 db    0
.rdata$r:00000B6D                 db    0
.rdata$r:00000B6E                 db    0
.rdata$r:00000B6F                 db    0
.rdata$r:00000B70                 db    0
.rdata$r:00000B71                 db    0
.rdata$r:00000B72                 db    0
.rdata$r:00000B73                 db    0
.rdata$r:00000B74                 db 0FFh
.rdata$r:00000B75                 db 0FFh
.rdata$r:00000B76                 db 0FFh
.rdata$r:00000B77                 db 0FFh
.rdata$r:00000B78                 db    0
.rdata$r:00000B79                 db    0
.rdata$r:00000B7A                 db    0
.rdata$r:00000B7B                 db    0
.rdata$r:00000B7C                 db  40h ; @
.rdata$r:00000B7D                 db    0
.rdata$r:00000B7E                 db    0
.rdata$r:00000B7F                 db    0
.rdata$r:00000B80                 dd offset ??_R3nsCharSetProber@@8 ; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000B80 _rdata$r        ends
.rdata$r:00000B80
.rdata$r:00000B84 ; ===========================================================================
.rdata$r:00000B84
.rdata$r:00000B84 ; Segment type: Pure data
.rdata$r:00000B84 ; Segment permissions: Read
.rdata$r:00000B84 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000B84                 assume cs:_rdata$r
.rdata$r:00000B84                 ;org 0B84h
.rdata$r:00000B84 ; COMDAT (pick any)
.rdata$r:00000B84                 public ??_R4nsUniversalDetector@@6B@
.rdata$r:00000B84 ; const nsUniversalDetector::`RTTI Complete Object Locator'
.rdata$r:00000B84 ??_R4nsUniversalDetector@@6B@ db    0   ; DATA XREF: .rdata:00000AB4o
.rdata$r:00000B85                 db    0
.rdata$r:00000B86                 db    0
.rdata$r:00000B87                 db    0
.rdata$r:00000B88                 db    0
.rdata$r:00000B89                 db    0
.rdata$r:00000B8A                 db    0
.rdata$r:00000B8B                 db    0
.rdata$r:00000B8C                 db    0
.rdata$r:00000B8D                 db    0
.rdata$r:00000B8E                 db    0
.rdata$r:00000B8F                 db    0
.rdata$r:00000B90                 dd offset ??_R0?AVnsUniversalDetector@@@8 ; nsUniversalDetector `RTTI Type Descriptor'
.rdata$r:00000B94                 dd offset ??_R3nsUniversalDetector@@8 ; nsUniversalDetector::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000B94 _rdata$r        ends
.rdata$r:00000B94
.data$r:00000B98 ; ===========================================================================
.data$r:00000B98
.data$r:00000B98 ; Segment type: Pure data
.data$r:00000B98 ; Segment permissions: Read/Write
.data$r:00000B98 _data$r         segment dword public 'DATA' use32
.data$r:00000B98                 assume cs:_data$r
.data$r:00000B98                 ;org 0B98h
.data$r:00000B98 ; COMDAT (pick any)
.data$r:00000B98                 public ??_R0?AVnsUniversalDetector@@@8
.data$r:00000B98 ; class nsUniversalDetector `RTTI Type Descriptor'
.data$r:00000B98 ??_R0?AVnsUniversalDetector@@@8 dd offset ??_7type_info@@6B@
.data$r:00000B98                                         ; DATA XREF: .rdata$r:00000B90o
.data$r:00000B98                                         ; .rdata$r:nsUniversalDetector::`RTTI Base Class Descriptor at (0,-1,0,64)'o
.data$r:00000B98                                         ; const type_info::`vftable'
.data$r:00000B9C                 align 10h
.data$r:00000BA0 a_?avnsuniversa db '.?AVnsUniversalDetector@@',0
.data$r:00000BBA                 align 4
.data$r:00000BBA _data$r         ends
.data$r:00000BBA
.rdata$r:00000BBC ; ===========================================================================
.rdata$r:00000BBC
.rdata$r:00000BBC ; Segment type: Pure data
.rdata$r:00000BBC ; Segment permissions: Read
.rdata$r:00000BBC _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000BBC                 assume cs:_rdata$r
.rdata$r:00000BBC                 ;org 0BBCh
.rdata$r:00000BBC ; COMDAT (pick any)
.rdata$r:00000BBC                 public ??_R3nsUniversalDetector@@8
.rdata$r:00000BBC ; nsUniversalDetector::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000BBC ??_R3nsUniversalDetector@@8 db    0     ; DATA XREF: .rdata$r:00000B94o
.rdata$r:00000BBC                                         ; .rdata$r:00000BECo
.rdata$r:00000BBD                 db    0
.rdata$r:00000BBE                 db    0
.rdata$r:00000BBF                 db    0
.rdata$r:00000BC0                 db    0
.rdata$r:00000BC1                 db    0
.rdata$r:00000BC2                 db    0
.rdata$r:00000BC3                 db    0
.rdata$r:00000BC4                 db    1
.rdata$r:00000BC5                 db    0
.rdata$r:00000BC6                 db    0
.rdata$r:00000BC7                 db    0
.rdata$r:00000BC8                 dd offset ??_R2nsUniversalDetector@@8 ; nsUniversalDetector::`RTTI Base Class Array'
.rdata$r:00000BC8 _rdata$r        ends
.rdata$r:00000BC8
.rdata$r:00000BCC ; ===========================================================================
.rdata$r:00000BCC
.rdata$r:00000BCC ; Segment type: Pure data
.rdata$r:00000BCC ; Segment permissions: Read
.rdata$r:00000BCC _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000BCC                 assume cs:_rdata$r
.rdata$r:00000BCC                 ;org 0BCCh
.rdata$r:00000BCC ; COMDAT (pick any)
.rdata$r:00000BCC                 public ??_R2nsUniversalDetector@@8
.rdata$r:00000BCC ; nsUniversalDetector::`RTTI Base Class Array'
.rdata$r:00000BCC ??_R2nsUniversalDetector@@8 dd offset ??_R1A@?0A@EA@nsUniversalDetector@@8
.rdata$r:00000BCC                                         ; DATA XREF: .rdata$r:00000BC8o
.rdata$r:00000BCC                                         ; nsUniversalDetector::`RTTI Base Class Descriptor at (0,-1,0,64)'
.rdata$r:00000BD0                 db    0
.rdata$r:00000BD1                 align 4
.rdata$r:00000BD1 _rdata$r        ends
.rdata$r:00000BD1
.rdata$r:00000BD4 ; ===========================================================================
.rdata$r:00000BD4
.rdata$r:00000BD4 ; Segment type: Pure data
.rdata$r:00000BD4 ; Segment permissions: Read
.rdata$r:00000BD4 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000BD4                 assume cs:_rdata$r
.rdata$r:00000BD4                 ;org 0BD4h
.rdata$r:00000BD4 ; COMDAT (pick any)
.rdata$r:00000BD4                 public ??_R1A@?0A@EA@nsUniversalDetector@@8
.rdata$r:00000BD4 ; nsUniversalDetector::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
.rdata$r:00000BD4 ??_R1A@?0A@EA@nsUniversalDetector@@8 dd offset ??_R0?AVnsUniversalDetector@@@8
.rdata$r:00000BD4                                         ; DATA XREF: .rdata$r:nsUniversalDetector::`RTTI Base Class Array'o
.rdata$r:00000BD4                                         ; nsUniversalDetector `RTTI Type Descriptor'
.rdata$r:00000BD8                 align 10h
.rdata$r:00000BE0                 db 0FFh
.rdata$r:00000BE1                 db 0FFh
.rdata$r:00000BE2                 db 0FFh
.rdata$r:00000BE3                 db 0FFh
.rdata$r:00000BE4                 db    0
.rdata$r:00000BE5                 db    0
.rdata$r:00000BE6                 db    0
.rdata$r:00000BE7                 db    0
.rdata$r:00000BE8                 db  40h ; @
.rdata$r:00000BE9                 db    0
.rdata$r:00000BEA                 db    0
.rdata$r:00000BEB                 db    0
.rdata$r:00000BEC                 dd offset ??_R3nsUniversalDetector@@8 ; nsUniversalDetector::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000BEC _rdata$r        ends
.rdata$r:00000BEC
.rdata$r:00000BF0 ; ===========================================================================
.rdata$r:00000BF0
.rdata$r:00000BF0 ; Segment type: Pure data
.rdata$r:00000BF0 ; Segment permissions: Read
.rdata$r:00000BF0 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000BF0                 assume cs:_rdata$r
.rdata$r:00000BF0                 ;org 0BF0h
.rdata$r:00000BF0 ; COMDAT (pick any)
.rdata$r:00000BF0                 public ??_R4nsLatin1Prober@@6B@
.rdata$r:00000BF0 ; const nsLatin1Prober::`RTTI Complete Object Locator'
.rdata$r:00000BF0 ??_R4nsLatin1Prober@@6B@ db    0        ; DATA XREF: .rdata:00000AECo
.rdata$r:00000BF1                 db    0
.rdata$r:00000BF2                 db    0
.rdata$r:00000BF3                 db    0
.rdata$r:00000BF4                 db    0
.rdata$r:00000BF5                 db    0
.rdata$r:00000BF6                 db    0
.rdata$r:00000BF7                 db    0
.rdata$r:00000BF8                 db    0
.rdata$r:00000BF9                 db    0
.rdata$r:00000BFA                 db    0
.rdata$r:00000BFB                 db    0
.rdata$r:00000BFC                 dd offset ??_R0?AVnsLatin1Prober@@@8 ; nsLatin1Prober `RTTI Type Descriptor'
.rdata$r:00000C00                 dd offset ??_R3nsLatin1Prober@@8 ; nsLatin1Prober::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000C00 _rdata$r        ends
.rdata$r:00000C00
.data$r:00000C04 ; ===========================================================================
.data$r:00000C04
.data$r:00000C04 ; Segment type: Pure data
.data$r:00000C04 ; Segment permissions: Read/Write
.data$r:00000C04 _data$r         segment dword public 'DATA' use32
.data$r:00000C04                 assume cs:_data$r
.data$r:00000C04                 ;org 0C04h
.data$r:00000C04 ; COMDAT (pick any)
.data$r:00000C04                 public ??_R0?AVnsLatin1Prober@@@8
.data$r:00000C04 ; class nsLatin1Prober `RTTI Type Descriptor'
.data$r:00000C04 ??_R0?AVnsLatin1Prober@@@8 dd offset ??_7type_info@@6B@
.data$r:00000C04                                         ; DATA XREF: .rdata$r:00000BFCo
.data$r:00000C04                                         ; .rdata$r:nsLatin1Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'o
.data$r:00000C04                                         ; const type_info::`vftable'
.data$r:00000C08                 db    0
.data$r:00000C09                 db    0
.data$r:00000C0A                 db    0
.data$r:00000C0B                 db    0
.data$r:00000C0C                 db  2Eh ; .
.data$r:00000C0D                 db  3Fh ; ?
.data$r:00000C0E                 db  41h ; A
.data$r:00000C0F                 db  56h ; V
.data$r:00000C10                 db  6Eh ; n
.data$r:00000C11                 db  73h ; s
.data$r:00000C12                 db  4Ch ; L
.data$r:00000C13                 db  61h ; a
.data$r:00000C14                 db  74h ; t
.data$r:00000C15                 db  69h ; i
.data$r:00000C16                 db  6Eh ; n
.data$r:00000C17                 db  31h ; 1
.data$r:00000C18                 db  50h ; P
.data$r:00000C19                 db  72h ; r
.data$r:00000C1A                 db  6Fh ; o
.data$r:00000C1B                 db  62h ; b
.data$r:00000C1C                 db  65h ; e
.data$r:00000C1D                 db  72h ; r
.data$r:00000C1E                 db  40h ; @
.data$r:00000C1F                 db  40h ; @
.data$r:00000C20                 db    0
.data$r:00000C21                 align 4
.data$r:00000C21 _data$r         ends
.data$r:00000C21
.rdata$r:00000C24 ; ===========================================================================
.rdata$r:00000C24
.rdata$r:00000C24 ; Segment type: Pure data
.rdata$r:00000C24 ; Segment permissions: Read
.rdata$r:00000C24 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000C24                 assume cs:_rdata$r
.rdata$r:00000C24                 ;org 0C24h
.rdata$r:00000C24 ; COMDAT (pick any)
.rdata$r:00000C24                 public ??_R3nsLatin1Prober@@8
.rdata$r:00000C24 ; nsLatin1Prober::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000C24 ??_R3nsLatin1Prober@@8 db    0          ; DATA XREF: .rdata$r:00000C00o
.rdata$r:00000C24                                         ; .rdata$r:00000C58o
.rdata$r:00000C25                 db    0
.rdata$r:00000C26                 db    0
.rdata$r:00000C27                 db    0
.rdata$r:00000C28                 db    0
.rdata$r:00000C29                 db    0
.rdata$r:00000C2A                 db    0
.rdata$r:00000C2B                 db    0
.rdata$r:00000C2C                 db    2
.rdata$r:00000C2D                 db    0
.rdata$r:00000C2E                 db    0
.rdata$r:00000C2F                 db    0
.rdata$r:00000C30                 dd offset ??_R2nsLatin1Prober@@8 ; nsLatin1Prober::`RTTI Base Class Array'
.rdata$r:00000C30 _rdata$r        ends
.rdata$r:00000C30
.rdata$r:00000C34 ; ===========================================================================
.rdata$r:00000C34
.rdata$r:00000C34 ; Segment type: Pure data
.rdata$r:00000C34 ; Segment permissions: Read
.rdata$r:00000C34 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000C34                 assume cs:_rdata$r
.rdata$r:00000C34                 ;org 0C34h
.rdata$r:00000C34 ; COMDAT (pick any)
.rdata$r:00000C34                 public ??_R2nsLatin1Prober@@8
.rdata$r:00000C34 ; nsLatin1Prober::`RTTI Base Class Array'
.rdata$r:00000C34 ??_R2nsLatin1Prober@@8 dd offset ??_R1A@?0A@EA@nsLatin1Prober@@8
.rdata$r:00000C34                                         ; DATA XREF: .rdata$r:00000C30o
.rdata$r:00000C34                                         ; nsLatin1Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
.rdata$r:00000C38                 dd offset ??_R1A@?0A@EA@nsCharSetProber@@8 ; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
.rdata$r:00000C3C                 db    0
.rdata$r:00000C3D                 align 10h
.rdata$r:00000C3D _rdata$r        ends
.rdata$r:00000C3D
.rdata$r:00000C40 ; ===========================================================================
.rdata$r:00000C40
.rdata$r:00000C40 ; Segment type: Pure data
.rdata$r:00000C40 ; Segment permissions: Read
.rdata$r:00000C40 _rdata$r        segment dword public 'DATA' use32
.rdata$r:00000C40                 assume cs:_rdata$r
.rdata$r:00000C40                 ;org 0C40h
.rdata$r:00000C40 ; COMDAT (pick any)
.rdata$r:00000C40                 public ??_R1A@?0A@EA@nsLatin1Prober@@8
.rdata$r:00000C40 ; nsLatin1Prober::`RTTI Base Class Descriptor at (0, -1, 0, 64)'
.rdata$r:00000C40 ??_R1A@?0A@EA@nsLatin1Prober@@8 dd offset ??_R0?AVnsLatin1Prober@@@8
.rdata$r:00000C40                                         ; DATA XREF: .rdata$r:nsLatin1Prober::`RTTI Base Class Array'o
.rdata$r:00000C40                                         ; nsLatin1Prober `RTTI Type Descriptor'
.rdata$r:00000C44                 db    1
.rdata$r:00000C45                 db    0
.rdata$r:00000C46                 db    0
.rdata$r:00000C47                 db    0
.rdata$r:00000C48                 db    0
.rdata$r:00000C49                 db    0
.rdata$r:00000C4A                 db    0
.rdata$r:00000C4B                 db    0
.rdata$r:00000C4C                 db 0FFh
.rdata$r:00000C4D                 db 0FFh
.rdata$r:00000C4E                 db 0FFh
.rdata$r:00000C4F                 db 0FFh
.rdata$r:00000C50                 db    0
.rdata$r:00000C51                 db    0
.rdata$r:00000C52                 db    0
.rdata$r:00000C53                 db    0
.rdata$r:00000C54                 db  40h ; @
.rdata$r:00000C55                 db    0
.rdata$r:00000C56                 db    0
.rdata$r:00000C57                 db    0
.rdata$r:00000C58                 dd offset ??_R3nsLatin1Prober@@8 ; nsLatin1Prober::`RTTI Class Hierarchy Descriptor'
.rdata$r:00000C58 _rdata$r        ends
.rdata$r:00000C58
.rdata:00000C5C ; ===========================================================================
.rdata:00000C5C
.rdata:00000C5C ; Segment type: Pure data
.rdata:00000C5C ; Segment permissions: Read
.rdata:00000C5C _rdata          segment dword public 'DATA' use32
.rdata:00000C5C                 assume cs:_rdata
.rdata:00000C5C                 ;org 0C5Ch
.rdata:00000C5C ; COMDAT (pick any)
.rdata:00000C5C                 public __real@00000000
.rdata:00000C5C __real@00000000 dd 0                    ; DATA XREF: nsUniversalDetector::DataEnd(void):loc_68Fr
.rdata:00000C5C _rdata          ends
.rdata:00000C5C
.rdata:00000C60 ; ===========================================================================
.rdata:00000C60
.rdata:00000C60 ; Segment type: Pure data
.rdata:00000C60 ; Segment permissions: Read
.rdata:00000C60 _rdata          segment dword public 'DATA' use32
.rdata:00000C60                 assume cs:_rdata
.rdata:00000C60                 ;org 0C60h
.rdata:00000C60 ; COMDAT (pick any)
.rdata:00000C60                 public __real@3f19999a
.rdata:00000C60 __real@3f19999a dd 3F19999Ah            ; DATA XREF: nsUniversalDetector::DataEnd(void)+D0r
.rdata:00000C60 _rdata          ends
.rdata:00000C60
UNDEF:00000C70 ; ===========================================================================
UNDEF:00000C70
UNDEF:00000C70 ; Segment type: Externs
UNDEF:00000C70 ; UNDEF
UNDEF:00000C70                 extrn __purecall:near   ; DATA XREF: .rdata:00000AC4o
UNDEF:00000C70                                         ; .rdata:00000AD4o ...
UNDEF:00000C74 ; void *__cdecl operator new(unsigned int)
UNDEF:00000C74                 extrn ??2@YAPAXI@Z:near ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+1C3p
UNDEF:00000C74                                         ; nsUniversalDetector::HandleData(char const *,uint)+250p ...
UNDEF:00000C78 ; void __cdecl operator delete(void *)
UNDEF:00000C78                 extrn ??3@YAXPAX@Z:near ; CODE XREF: __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$0+4p
UNDEF:00000C78                                         ; __unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$1+4p ...
UNDEF:00000C7C ; public: virtual void * __thiscall nsUniversalDetector::`vector deleting destructor'(unsigned int)
UNDEF:00000C7C                 extrn ??_EnsUniversalDetector@@UAEPAXI@Z:near ; weak
UNDEF:00000C7C                                         ; DATA XREF: .rdata:const nsUniversalDetector::`vftable'o
UNDEF:00000C80 ; public: virtual void * __thiscall nsCharSetProber::`vector deleting destructor'(unsigned int)
UNDEF:00000C80                 extrn ??_EnsCharSetProber@@UAEPAXI@Z:near ; weak
UNDEF:00000C80                                         ; DATA XREF: .rdata:const nsCharSetProber::`vftable'o
UNDEF:00000C84 ; _DWORD __thiscall nsMBCSGroupProber::nsMBCSGroupProber(nsMBCSGroupProber *__hidden this, unsigned int)
UNDEF:00000C84                 extrn ??0nsMBCSGroupProber@@QAE@I@Z:near
UNDEF:00000C84                                         ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+1E5p
UNDEF:00000C88 ; _DWORD __thiscall nsSBCSGroupProber::nsSBCSGroupProber(nsSBCSGroupProber *__hidden this)
UNDEF:00000C88                 extrn ??0nsSBCSGroupProber@@QAE@XZ:near
UNDEF:00000C88                                         ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+26Bp
UNDEF:00000C8C ; _DWORD __thiscall nsEscCharSetProber::nsEscCharSetProber(nsEscCharSetProber *__hidden this, unsigned int)
UNDEF:00000C8C                 extrn ??0nsEscCharSetProber@@QAE@I@Z:near
UNDEF:00000C8C                                         ; CODE XREF: nsUniversalDetector::HandleData(char const *,uint)+3CAp
UNDEF:00000C90 ; public: virtual enum  nsProbingState __thiscall nsLatin1Prober::HandleData(char const *, unsigned int)
UNDEF:00000C90                 extrn ?HandleData@nsLatin1Prober@@UAE?AW4nsProbingState@@PBDI@Z:near
UNDEF:00000C90                                         ; DATA XREF: .rdata:00000AF8o
UNDEF:00000C94 ; void __thiscall nsLatin1Prober::Reset(nsLatin1Prober *__hidden this)
UNDEF:00000C94                 extrn ?Reset@nsLatin1Prober@@UAEXXZ:near
UNDEF:00000C94                                         ; CODE XREF: nsLatin1Prober::nsLatin1Prober(void)+41p
UNDEF:00000C94                                         ; DATA XREF: .rdata:00000B00o
UNDEF:00000C98 ; public: virtual float __thiscall nsLatin1Prober::GetConfidence(void)
UNDEF:00000C98                 extrn ?GetConfidence@nsLatin1Prober@@UAEMXZ:near
UNDEF:00000C98                                         ; DATA XREF: .rdata:00000B04o
UNDEF:00000C9C ; public: virtual void * __thiscall nsLatin1Prober::`vector deleting destructor'(unsigned int)
UNDEF:00000C9C                 extrn ??_EnsLatin1Prober@@UAEPAXI@Z:near ; weak
UNDEF:00000C9C                                         ; DATA XREF: .rdata:const nsLatin1Prober::`vftable'o
UNDEF:00000CA0 ; __fastcall __security_check_cookie(x)
UNDEF:00000CA0                 extrn @__security_check_cookie@4:near
UNDEF:00000CA0                                         ; CODE XREF: __ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z+Cp
UNDEF:00000CA0                                         ; __ehhandler$??0nsLatin1Prober@@QAE@XZ+Cp ...
UNDEF:00000CA4                 extrn ___CxxFrameHandler3:near
UNDEF:00000CA4                                         ; CODE XREF: __ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z+16j
UNDEF:00000CA4                                         ; __ehhandler$??0nsLatin1Prober@@QAE@XZ+16j ...
UNDEF:00000CA8 ; const type_info::`vftable'
UNDEF:00000CA8                 extrn ??_7type_info@@6B@:near
UNDEF:00000CA8                                         ; DATA XREF: .data$r:nsCharSetProber `RTTI Type Descriptor'o
UNDEF:00000CA8                                         ; .data$r:nsUniversalDetector `RTTI Type Descriptor'o ...
UNDEF:00000CAC                 extrn ___security_cookie:near
UNDEF:00000CAC                                         ; DATA XREF: nsUniversalDetector::HandleData(char const *,uint)+14r
UNDEF:00000CAC                                         ; nsLatin1Prober::nsLatin1Prober(void)+12r ...
UNDEF:00000CB0                 extrn __fltused:near
UNDEF:00000CB0
UNDEF:00000CB0
UNDEF:00000CB0                 end
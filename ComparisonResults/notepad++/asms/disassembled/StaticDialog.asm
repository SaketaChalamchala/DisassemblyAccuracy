.rdata:00000000 ;
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.rdata:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.rdata:00000000 ; |                      License info: 48-3677-7074-51                      |
.rdata:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ;
.rdata:00000000 ; Input MD5   : 2CB8A5917E0B24049E81F671C68B3015
.rdata:00000000 ; Input CRC32 : 30E42785
.rdata:00000000
.rdata:00000000 ; File Name   : C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\visual.net\Unicode Debug\StaticDialog.obj
.rdata:00000000 ; Format      : COFF (X386MAGIC)
.rdata:00000000 ; includelib "uuid.lib"
.rdata:00000000 ; includelib "LIBCMTD"
.rdata:00000000 ; includelib "OLDNAMES"
.rdata:00000000
.rdata:00000000                 .686p
.rdata:00000000                 .mmx
.rdata:00000000                 .model flat
.rdata:00000000
.rdata:00000000 ; ===========================================================================
.rdata:00000000
.rdata:00000000 ; Segment type: Pure data
.rdata:00000000 ; Segment permissions: Read
.rdata:00000000 _rdata          segment dword public 'DATA' use32
.rdata:00000000                 assume cs:_rdata
.rdata:00000000 ; char _SG65762[]
.rdata:00000000 $SG65762        db 'CreateDialogParam() return NULL.',0Dh,'GetLastError() == %u',0
.rdata:00000000                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+DFo
.rdata:00000000                                         ; StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+9o
.rdata:00000036                 align 4
.rdata:00000038 ; CHAR _SG65763[]
.rdata:00000038 $SG65763        db 'In StaticDialog::create()',0
.rdata:00000038                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+F5o
.rdata:00000052                 align 4
.rdata:00000052 _rdata          ends
.rdata:00000052
.text$mn:00000054 ; ===========================================================================
.text$mn:00000054
.text$mn:00000054 ; Segment type: Pure code
.text$mn:00000054 ; Segment permissions: Read/Execute
.text$mn:00000054 _text$mn        segment para public 'CODE' use32
.text$mn:00000054                 assume cs:_text$mn
.text$mn:00000054                 ;org 54h
.text$mn:00000054                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000054
.text$mn:00000054 ; =============== S U B R O U T I N E =======================================
.text$mn:00000054
.text$mn:00000054 ; Attributes: bp-based frame
.text$mn:00000054
.text$mn:00000054 ; void __thiscall StaticDialog::create(StaticDialog *this, __int16, bool, bool)
.text$mn:00000054                 public ?create@StaticDialog@@UAEXH_N0@Z
.text$mn:00000054 ?create@StaticDialog@@UAEXH_N0@Z proc near
.text$mn:00000054
.text$mn:00000054 hMem            = dword ptr -118h
.text$mn:00000054 var_114         = dword ptr -114h
.text$mn:00000054 lpTemplate      = dword ptr -110h
.text$mn:00000054 hWnd            = dword ptr -10Ch
.text$mn:00000054 dwInitParam     = dword ptr -108h
.text$mn:00000054 Dest            = byte ptr -104h
.text$mn:00000054 var_4           = dword ptr -4
.text$mn:00000054 arg_0           = word ptr  8
.text$mn:00000054 arg_4           = byte ptr  0Ch
.text$mn:00000054 arg_8           = byte ptr  10h
.text$mn:00000054
.text$mn:00000054                 push    ebp
.text$mn:00000055                 mov     ebp, esp
.text$mn:00000057                 sub     esp, 118h
.text$mn:0000005D                 mov     eax, dword ptr ds:___security_cookie
.text$mn:00000062                 xor     eax, ebp
.text$mn:00000064                 mov     [ebp+var_4], eax
.text$mn:00000067                 mov     [ebp+dwInitParam], ecx
.text$mn:0000006D                 movzx   eax, [ebp+arg_4]
.text$mn:00000071                 test    eax, eax
.text$mn:00000073                 jz      short loc_E0
.text$mn:00000075                 mov     [ebp+lpTemplate], 0
.text$mn:0000007F                 lea     ecx, [ebp+lpTemplate]
.text$mn:00000085                 push    ecx             ; struct DLGTEMPLATE **
.text$mn:00000086                 mov     edx, dword ptr [ebp+arg_0]
.text$mn:00000089                 push    edx             ; __int16
.text$mn:0000008A                 mov     ecx, [ebp+dwInitParam] ; this
.text$mn:00000090                 call    ?makeRTLResource@StaticDialog@@IAEPAXHPAPAUDLGTEMPLATE@@@Z ; StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)
.text$mn:00000095                 mov     [ebp+hMem], eax
.text$mn:0000009B                 mov     eax, [ebp+dwInitParam]
.text$mn:000000A1                 push    eax             ; dwInitParam
.text$mn:000000A2                 push    offset ?dlgProc@StaticDialog@@KGHPAUHWND__@@IIJ@Z ; lpDialogFunc
.text$mn:000000A7                 mov     ecx, [ebp+dwInitParam]
.text$mn:000000AD                 mov     edx, [ecx+8]
.text$mn:000000B0                 push    edx             ; hWndParent
.text$mn:000000B1                 mov     eax, [ebp+lpTemplate]
.text$mn:000000B7                 push    eax             ; lpTemplate
.text$mn:000000B8                 mov     ecx, [ebp+dwInitParam]
.text$mn:000000BE                 mov     edx, [ecx+4]
.text$mn:000000C1                 push    edx             ; hInstance
.text$mn:000000C2                 call    dword ptr ds:__imp__CreateDialogIndirectParamW@20 ; CreateDialogIndirectParamW(x,x,x,x,x)
.text$mn:000000C8                 mov     ecx, [ebp+dwInitParam]
.text$mn:000000CE                 mov     [ecx+0Ch], eax
.text$mn:000000D1                 mov     edx, [ebp+hMem]
.text$mn:000000D7                 push    edx             ; hMem
.text$mn:000000D8                 call    dword ptr ds:__imp__GlobalFree@4 ; GlobalFree(x)
.text$mn:000000DE                 jmp     short loc_114
.text$mn:000000E0 ; ---------------------------------------------------------------------------
.text$mn:000000E0
.text$mn:000000E0 loc_E0:                                 ; CODE XREF: StaticDialog::create(int,bool,bool)+1Fj
.text$mn:000000E0                 mov     eax, [ebp+dwInitParam]
.text$mn:000000E6                 push    eax             ; dwInitParam
.text$mn:000000E7                 push    offset ?dlgProc@StaticDialog@@KGHPAUHWND__@@IIJ@Z ; lpDialogFunc
.text$mn:000000EC                 mov     ecx, [ebp+dwInitParam]
.text$mn:000000F2                 mov     edx, [ecx+8]
.text$mn:000000F5                 push    edx             ; hWndParent
.text$mn:000000F6                 movzx   eax, [ebp+arg_0]
.text$mn:000000FA                 push    eax             ; lpTemplateName
.text$mn:000000FB                 mov     ecx, [ebp+dwInitParam]
.text$mn:00000101                 mov     edx, [ecx+4]
.text$mn:00000104                 push    edx             ; hInstance
.text$mn:00000105                 call    dword ptr ds:__imp__CreateDialogParamW@20 ; CreateDialogParamW(x,x,x,x,x)
.text$mn:0000010B                 mov     ecx, [ebp+dwInitParam]
.text$mn:00000111                 mov     [ecx+0Ch], eax
.text$mn:00000114
.text$mn:00000114 loc_114:                                ; CODE XREF: StaticDialog::create(int,bool,bool)+8Aj
.text$mn:00000114                 mov     edx, [ebp+dwInitParam]
.text$mn:0000011A                 cmp     dword ptr [edx+0Ch], 0
.text$mn:0000011E                 jnz     short loc_15F
.text$mn:00000120                 call    dword ptr ds:__imp__GetLastError@0 ; GetLastError()
.text$mn:00000126                 mov     [ebp+var_114], eax
.text$mn:0000012C                 mov     eax, [ebp+var_114]
.text$mn:00000132                 push    eax
.text$mn:00000133                 push    offset $SG65762 ; "CreateDialogParam() return NULL.\rGetLa"...
.text$mn:00000138                 lea     ecx, [ebp+Dest]
.text$mn:0000013E                 push    ecx             ; Dest
.text$mn:0000013F                 call    _sprintf
.text$mn:00000144                 add     esp, 0Ch
.text$mn:00000147                 push    0               ; uType
.text$mn:00000149                 push    offset $SG65763 ; "In StaticDialog::create()"
.text$mn:0000014E                 lea     edx, [ebp+Dest]
.text$mn:00000154                 push    edx             ; lpText
.text$mn:00000155                 push    0               ; hWnd
.text$mn:00000157                 call    dword ptr ds:__imp__MessageBoxA@16 ; MessageBoxA(x,x,x,x)
.text$mn:0000015D                 jmp     short loc_1AC
.text$mn:0000015F ; ---------------------------------------------------------------------------
.text$mn:0000015F
.text$mn:0000015F loc_15F:                                ; CODE XREF: StaticDialog::create(int,bool,bool)+CAj
.text$mn:0000015F                 movzx   eax, [ebp+arg_8]
.text$mn:00000163                 test    eax, eax
.text$mn:00000165                 jz      short loc_178
.text$mn:00000167                 mov     ecx, [ebp+dwInitParam]
.text$mn:0000016D                 mov     edx, [ecx+8]
.text$mn:00000170                 mov     [ebp+hWnd], edx
.text$mn:00000176                 jmp     short loc_18E
.text$mn:00000178 ; ---------------------------------------------------------------------------
.text$mn:00000178
.text$mn:00000178 loc_178:                                ; CODE XREF: StaticDialog::create(int,bool,bool)+111j
.text$mn:00000178                 mov     eax, [ebp+dwInitParam]
.text$mn:0000017E                 mov     ecx, [eax+8]
.text$mn:00000181                 push    ecx             ; hWnd
.text$mn:00000182                 call    dword ptr ds:__imp__GetParent@4 ; GetParent(x)
.text$mn:00000188                 mov     [ebp+hWnd], eax
.text$mn:0000018E
.text$mn:0000018E loc_18E:                                ; CODE XREF: StaticDialog::create(int,bool,bool)+122j
.text$mn:0000018E                 mov     edx, [ebp+dwInitParam]
.text$mn:00000194                 mov     eax, [edx+0Ch]
.text$mn:00000197                 push    eax             ; lParam
.text$mn:00000198                 push    0               ; wParam
.text$mn:0000019A                 push    7F4h            ; Msg
.text$mn:0000019F                 mov     ecx, [ebp+hWnd]
.text$mn:000001A5                 push    ecx             ; hWnd
.text$mn:000001A6                 call    dword ptr ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
.text$mn:000001AC
.text$mn:000001AC loc_1AC:                                ; CODE XREF: StaticDialog::create(int,bool,bool)+109j
.text$mn:000001AC                 mov     ecx, [ebp+var_4]
.text$mn:000001AF                 xor     ecx, ebp
.text$mn:000001B1                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$mn:000001B6                 mov     esp, ebp
.text$mn:000001B8                 pop     ebp
.text$mn:000001B9                 retn    0Ch
.text$mn:000001B9 ?create@StaticDialog@@UAEXH_N0@Z endp
.text$mn:000001B9
.text$mn:000001B9 ; ---------------------------------------------------------------------------
.text$mn:000001BC                 db 8 dup(0CCh)
.text$mn:000001C4
.text$mn:000001C4 ; =============== S U B R O U T I N E =======================================
.text$mn:000001C4
.text$mn:000001C4 ; Attributes: bp-based frame
.text$mn:000001C4
.text$mn:000001C4 ; void __thiscall StaticDialog::goToCenter(StaticDialog *__hidden this)
.text$mn:000001C4                 public ?goToCenter@StaticDialog@@QAEXXZ
.text$mn:000001C4 ?goToCenter@StaticDialog@@QAEXXZ proc near
.text$mn:000001C4
.text$mn:000001C4 Y               = dword ptr -28h
.text$mn:000001C4 X               = dword ptr -24h
.text$mn:000001C4 Point           = tagPOINT ptr -20h
.text$mn:000001C4 var_18          = dword ptr -18h
.text$mn:000001C4 Rect            = tagRECT ptr -14h
.text$mn:000001C4 var_4           = dword ptr -4
.text$mn:000001C4
.text$mn:000001C4                 push    ebp
.text$mn:000001C5                 mov     ebp, esp
.text$mn:000001C7                 sub     esp, 28h
.text$mn:000001CA                 mov     eax, dword ptr ds:___security_cookie
.text$mn:000001CF                 xor     eax, ebp
.text$mn:000001D1                 mov     [ebp+var_4], eax
.text$mn:000001D4                 mov     [ebp+var_18], ecx
.text$mn:000001D7                 lea     eax, [ebp+Rect]
.text$mn:000001DA                 push    eax             ; lpRect
.text$mn:000001DB                 mov     ecx, [ebp+var_18]
.text$mn:000001DE                 mov     edx, [ecx+8]
.text$mn:000001E1                 push    edx             ; hWnd
.text$mn:000001E2                 call    dword ptr ds:__imp__GetClientRect@8 ; GetClientRect(x,x)
.text$mn:000001E8                 mov     eax, [ebp+Rect.right]
.text$mn:000001EB                 sub     eax, [ebp+Rect.left]
.text$mn:000001EE                 cdq
.text$mn:000001EF                 sub     eax, edx
.text$mn:000001F1                 sar     eax, 1
.text$mn:000001F3                 add     eax, [ebp+Rect.left]
.text$mn:000001F6                 mov     [ebp+Point.x], eax
.text$mn:000001F9                 mov     eax, [ebp+Rect.bottom]
.text$mn:000001FC                 sub     eax, [ebp+Rect.top]
.text$mn:000001FF                 cdq
.text$mn:00000200                 sub     eax, edx
.text$mn:00000202                 sar     eax, 1
.text$mn:00000204                 add     eax, [ebp+Rect.top]
.text$mn:00000207                 mov     [ebp+Point.y], eax
.text$mn:0000020A                 lea     eax, [ebp+Point]
.text$mn:0000020D                 push    eax             ; lpPoint
.text$mn:0000020E                 mov     ecx, [ebp+var_18]
.text$mn:00000211                 mov     edx, [ecx+8]
.text$mn:00000214                 push    edx             ; hWnd
.text$mn:00000215                 call    dword ptr ds:__imp__ClientToScreen@8 ; ClientToScreen(x,x)
.text$mn:0000021B                 mov     eax, [ebp+var_18]
.text$mn:0000021E                 mov     ecx, [ebp+var_18]
.text$mn:00000221                 mov     eax, [eax+18h]
.text$mn:00000224                 sub     eax, [ecx+10h]
.text$mn:00000227                 cdq
.text$mn:00000228                 sub     eax, edx
.text$mn:0000022A                 sar     eax, 1
.text$mn:0000022C                 mov     edx, [ebp+Point.x]
.text$mn:0000022F                 sub     edx, eax
.text$mn:00000231                 mov     [ebp+X], edx
.text$mn:00000234                 mov     eax, [ebp+var_18]
.text$mn:00000237                 mov     ecx, [ebp+var_18]
.text$mn:0000023A                 mov     eax, [eax+1Ch]
.text$mn:0000023D                 sub     eax, [ecx+14h]
.text$mn:00000240                 cdq
.text$mn:00000241                 sub     eax, edx
.text$mn:00000243                 sar     eax, 1
.text$mn:00000245                 mov     edx, [ebp+Point.y]
.text$mn:00000248                 sub     edx, eax
.text$mn:0000024A                 mov     [ebp+Y], edx
.text$mn:0000024D                 push    40h ; '@'       ; uFlags
.text$mn:0000024F                 mov     eax, [ebp+var_18]
.text$mn:00000252                 mov     ecx, [ebp+var_18]
.text$mn:00000255                 mov     edx, [eax+1Ch]
.text$mn:00000258                 sub     edx, [ecx+14h]
.text$mn:0000025B                 push    edx             ; cy
.text$mn:0000025C                 mov     eax, [ebp+var_18]
.text$mn:0000025F                 mov     ecx, [ebp+var_18]
.text$mn:00000262                 mov     edx, [eax+18h]
.text$mn:00000265                 sub     edx, [ecx+10h]
.text$mn:00000268                 push    edx             ; cx
.text$mn:00000269                 mov     eax, [ebp+Y]
.text$mn:0000026C                 push    eax             ; Y
.text$mn:0000026D                 mov     ecx, [ebp+X]
.text$mn:00000270                 push    ecx             ; X
.text$mn:00000271                 push    0               ; hWndInsertAfter
.text$mn:00000273                 mov     edx, [ebp+var_18]
.text$mn:00000276                 mov     eax, [edx+0Ch]
.text$mn:00000279                 push    eax             ; hWnd
.text$mn:0000027A                 call    dword ptr ds:__imp__SetWindowPos@28 ; SetWindowPos(x,x,x,x,x,x,x)
.text$mn:00000280                 mov     ecx, [ebp+var_4]
.text$mn:00000283                 xor     ecx, ebp
.text$mn:00000285                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$mn:0000028A                 mov     esp, ebp
.text$mn:0000028C                 pop     ebp
.text$mn:0000028D                 retn
.text$mn:0000028D ?goToCenter@StaticDialog@@QAEXXZ endp
.text$mn:0000028D
.text$mn:0000028D ; ---------------------------------------------------------------------------
.text$mn:0000028E                 db 6 dup(0CCh)
.text$mn:00000294
.text$mn:00000294 ; =============== S U B R O U T I N E =======================================
.text$mn:00000294
.text$mn:00000294 ; Attributes: bp-based frame
.text$mn:00000294
.text$mn:00000294 ; void __thiscall StaticDialog::display(StaticDialog *this, bool)
.text$mn:00000294                 public ?display@StaticDialog@@UBEX_N@Z
.text$mn:00000294 ?display@StaticDialog@@UBEX_N@Z proc near
.text$mn:00000294
.text$mn:00000294 var_34          = dword ptr -34h
.text$mn:00000294 var_30          = dword ptr -30h
.text$mn:00000294 Y               = dword ptr -2Ch
.text$mn:00000294 X               = dword ptr -28h
.text$mn:00000294 pvParam         = dword ptr -24h
.text$mn:00000294 var_20          = dword ptr -20h
.text$mn:00000294 var_1C          = dword ptr -1Ch
.text$mn:00000294 var_18          = dword ptr -18h
.text$mn:00000294 Rect            = tagRECT ptr -14h
.text$mn:00000294 var_4           = dword ptr -4
.text$mn:00000294 arg_0           = byte ptr  8
.text$mn:00000294
.text$mn:00000294                 push    ebp
.text$mn:00000295                 mov     ebp, esp
.text$mn:00000297                 sub     esp, 34h
.text$mn:0000029A                 mov     eax, dword ptr ds:___security_cookie
.text$mn:0000029F                 xor     eax, ebp
.text$mn:000002A1                 mov     [ebp+var_4], eax
.text$mn:000002A4                 push    esi
.text$mn:000002A5                 mov     [ebp+var_34], ecx
.text$mn:000002A8                 movzx   eax, [ebp+arg_0]
.text$mn:000002AC                 test    eax, eax
.text$mn:000002AE                 jz      loc_3BD
.text$mn:000002B4                 mov     [ebp+pvParam], 0
.text$mn:000002BB                 xor     ecx, ecx
.text$mn:000002BD                 mov     [ebp+var_20], ecx
.text$mn:000002C0                 mov     [ebp+var_1C], ecx
.text$mn:000002C3                 mov     [ebp+var_18], ecx
.text$mn:000002C6                 mov     [ebp+Rect.left], 0
.text$mn:000002CD                 xor     edx, edx
.text$mn:000002CF                 mov     [ebp+Rect.top], edx
.text$mn:000002D2                 mov     [ebp+Rect.right], edx
.text$mn:000002D5                 mov     [ebp+Rect.bottom], edx
.text$mn:000002D8                 push    0               ; fWinIni
.text$mn:000002DA                 lea     eax, [ebp+pvParam]
.text$mn:000002DD                 push    eax             ; pvParam
.text$mn:000002DE                 push    0               ; uiParam
.text$mn:000002E0                 push    30h ; '0'       ; uiAction
.text$mn:000002E2                 call    dword ptr ds:__imp__SystemParametersInfoW@16 ; SystemParametersInfoW(x,x,x,x)
.text$mn:000002E8                 lea     ecx, [ebp+Rect]
.text$mn:000002EB                 push    ecx             ; lpRect
.text$mn:000002EC                 mov     edx, [ebp+var_34]
.text$mn:000002EF                 mov     eax, [edx+0Ch]
.text$mn:000002F2                 push    eax             ; hWnd
.text$mn:000002F3                 call    dword ptr ds:__imp__GetWindowRect@8 ; GetWindowRect(x,x)
.text$mn:000002F9                 mov     ecx, [ebp+Rect.left]
.text$mn:000002FC                 mov     [ebp+X], ecx
.text$mn:000002FF                 mov     edx, [ebp+Rect.top]
.text$mn:00000302                 mov     [ebp+Y], edx
.text$mn:00000305                 push    33h ; '3'       ; nIndex
.text$mn:00000307                 call    dword ptr ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
.text$mn:0000030D                 mov     [ebp+var_30], eax
.text$mn:00000310                 push    4Eh ; 'N'       ; nIndex
.text$mn:00000312                 call    dword ptr ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
.text$mn:00000318                 sub     eax, [ebp+var_30]
.text$mn:0000031B                 cmp     [ebp+X], eax
.text$mn:0000031E                 jle     short loc_32E
.text$mn:00000320                 mov     eax, [ebp+Rect.right]
.text$mn:00000323                 sub     eax, [ebp+var_1C]
.text$mn:00000326                 mov     ecx, [ebp+X]
.text$mn:00000329                 sub     ecx, eax
.text$mn:0000032B                 mov     [ebp+X], ecx
.text$mn:0000032E
.text$mn:0000032E loc_32E:                                ; CODE XREF: StaticDialog::display(bool)+8Aj
.text$mn:0000032E                 mov     esi, [ebp+Rect.right]
.text$mn:00000331                 sub     esi, [ebp+Rect.left]
.text$mn:00000334                 add     esi, [ebp+X]
.text$mn:00000337                 push    4Ch ; 'L'       ; nIndex
.text$mn:00000339                 call    dword ptr ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
.text$mn:0000033F                 add     eax, [ebp+var_30]
.text$mn:00000342                 cmp     esi, eax
.text$mn:00000344                 jge     short loc_34C
.text$mn:00000346                 mov     edx, [ebp+pvParam]
.text$mn:00000349                 mov     [ebp+X], edx
.text$mn:0000034C
.text$mn:0000034C loc_34C:                                ; CODE XREF: StaticDialog::display(bool)+B0j
.text$mn:0000034C                 push    4Fh ; 'O'       ; nIndex
.text$mn:0000034E                 call    dword ptr ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
.text$mn:00000354                 sub     eax, [ebp+var_30]
.text$mn:00000357                 cmp     [ebp+Y], eax
.text$mn:0000035A                 jle     short loc_36A
.text$mn:0000035C                 mov     eax, [ebp+Rect.bottom]
.text$mn:0000035F                 sub     eax, [ebp+var_18]
.text$mn:00000362                 mov     ecx, [ebp+Y]
.text$mn:00000365                 sub     ecx, eax
.text$mn:00000367                 mov     [ebp+Y], ecx
.text$mn:0000036A
.text$mn:0000036A loc_36A:                                ; CODE XREF: StaticDialog::display(bool)+C6j
.text$mn:0000036A                 mov     esi, [ebp+Rect.bottom]
.text$mn:0000036D                 sub     esi, [ebp+Rect.top]
.text$mn:00000370                 add     esi, [ebp+Y]
.text$mn:00000373                 push    4Dh ; 'M'       ; nIndex
.text$mn:00000375                 call    dword ptr ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
.text$mn:0000037B                 add     eax, [ebp+var_30]
.text$mn:0000037E                 cmp     esi, eax
.text$mn:00000380                 jge     short loc_388
.text$mn:00000382                 mov     edx, [ebp+var_20]
.text$mn:00000385                 mov     [ebp+Y], edx
.text$mn:00000388
.text$mn:00000388 loc_388:                                ; CODE XREF: StaticDialog::display(bool)+ECj
.text$mn:00000388                 mov     eax, [ebp+X]
.text$mn:0000038B                 cmp     eax, [ebp+Rect.left]
.text$mn:0000038E                 jnz     short loc_398
.text$mn:00000390                 mov     ecx, [ebp+Y]
.text$mn:00000393                 cmp     ecx, [ebp+Rect.top]
.text$mn:00000396                 jz      short loc_3BD
.text$mn:00000398
.text$mn:00000398 loc_398:                                ; CODE XREF: StaticDialog::display(bool)+FAj
.text$mn:00000398                 push    1               ; bRepaint
.text$mn:0000039A                 mov     edx, [ebp+Rect.bottom]
.text$mn:0000039D                 sub     edx, [ebp+Rect.top]
.text$mn:000003A0                 push    edx             ; nHeight
.text$mn:000003A1                 mov     eax, [ebp+Rect.right]
.text$mn:000003A4                 sub     eax, [ebp+Rect.left]
.text$mn:000003A7                 push    eax             ; nWidth
.text$mn:000003A8                 mov     ecx, [ebp+Y]
.text$mn:000003AB                 push    ecx             ; Y
.text$mn:000003AC                 mov     edx, [ebp+X]
.text$mn:000003AF                 push    edx             ; X
.text$mn:000003B0                 mov     eax, [ebp+var_34]
.text$mn:000003B3                 mov     ecx, [eax+0Ch]
.text$mn:000003B6                 push    ecx             ; hWnd
.text$mn:000003B7                 call    dword ptr ds:__imp__MoveWindow@24 ; MoveWindow(x,x,x,x,x,x)
.text$mn:000003BD
.text$mn:000003BD loc_3BD:                                ; CODE XREF: StaticDialog::display(bool)+1Aj
.text$mn:000003BD                                         ; StaticDialog::display(bool)+102j
.text$mn:000003BD                 movzx   edx, [ebp+arg_0]
.text$mn:000003C1                 push    edx             ; bool
.text$mn:000003C2                 mov     ecx, [ebp+var_34] ; this
.text$mn:000003C5                 call    ?display@Window@@UBEX_N@Z ; Window::display(bool)
.text$mn:000003CA                 pop     esi
.text$mn:000003CB                 mov     ecx, [ebp+var_4]
.text$mn:000003CE                 xor     ecx, ebp
.text$mn:000003D0                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$mn:000003D5                 mov     esp, ebp
.text$mn:000003D7                 pop     ebp
.text$mn:000003D8                 retn    4
.text$mn:000003D8 ?display@StaticDialog@@UBEX_N@Z endp
.text$mn:000003D8
.text$mn:000003D8 ; ---------------------------------------------------------------------------
.text$mn:000003DB                 db 9 dup(0CCh)
.text$mn:000003E4
.text$mn:000003E4 ; =============== S U B R O U T I N E =======================================
.text$mn:000003E4
.text$mn:000003E4 ; Attributes: bp-based frame
.text$mn:000003E4
.text$mn:000003E4 ; INT_PTR __stdcall StaticDialog::dlgProc(HWND, UINT, WPARAM, LPARAM)
.text$mn:000003E4                 public ?dlgProc@StaticDialog@@KGHPAUHWND__@@IIJ@Z
.text$mn:000003E4 ?dlgProc@StaticDialog@@KGHPAUHWND__@@IIJ@Z proc near
.text$mn:000003E4                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+4Eo
.text$mn:000003E4                                         ; StaticDialog::create(int,bool,bool)+93o
.text$mn:000003E4
.text$mn:000003E4 var_C           = dword ptr -0Ch
.text$mn:000003E4 var_8           = dword ptr -8
.text$mn:000003E4 var_4           = dword ptr -4
.text$mn:000003E4 hWnd            = dword ptr  8
.text$mn:000003E4 arg_4           = dword ptr  0Ch
.text$mn:000003E4 arg_8           = dword ptr  10h
.text$mn:000003E4 dwNewLong       = dword ptr  14h
.text$mn:000003E4
.text$mn:000003E4                 push    ebp
.text$mn:000003E5                 mov     ebp, esp
.text$mn:000003E7                 sub     esp, 0Ch
.text$mn:000003EA                 mov     eax, [ebp+arg_4]
.text$mn:000003ED                 mov     [ebp+var_C], eax
.text$mn:000003F0                 cmp     [ebp+var_C], 110h
.text$mn:000003F7                 jz      short loc_3FB
.text$mn:000003F9                 jmp     short loc_44C
.text$mn:000003FB ; ---------------------------------------------------------------------------
.text$mn:000003FB
.text$mn:000003FB loc_3FB:                                ; CODE XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+13j
.text$mn:000003FB                 mov     ecx, [ebp+dwNewLong]
.text$mn:000003FE                 mov     [ebp+var_4], ecx
.text$mn:00000401                 mov     edx, [ebp+var_4]
.text$mn:00000404                 mov     eax, [ebp+hWnd]
.text$mn:00000407                 mov     [edx+0Ch], eax
.text$mn:0000040A                 mov     ecx, [ebp+dwNewLong]
.text$mn:0000040D                 push    ecx             ; dwNewLong
.text$mn:0000040E                 push    0FFFFFFEBh      ; nIndex
.text$mn:00000410                 mov     edx, [ebp+hWnd]
.text$mn:00000413                 push    edx             ; hWnd
.text$mn:00000414                 call    dword ptr ds:__imp__SetWindowLongW@12 ; SetWindowLongW(x,x,x)
.text$mn:0000041A                 mov     eax, [ebp+var_4]
.text$mn:0000041D                 add     eax, 10h
.text$mn:00000420                 push    eax             ; lpRect
.text$mn:00000421                 mov     ecx, [ebp+hWnd]
.text$mn:00000424                 push    ecx             ; hWnd
.text$mn:00000425                 call    dword ptr ds:__imp__GetWindowRect@8 ; GetWindowRect(x,x)
.text$mn:0000042B                 mov     edx, [ebp+dwNewLong]
.text$mn:0000042E                 push    edx
.text$mn:0000042F                 mov     eax, [ebp+arg_8]
.text$mn:00000432                 push    eax
.text$mn:00000433                 mov     ecx, [ebp+arg_4]
.text$mn:00000436                 push    ecx
.text$mn:00000437                 mov     edx, [ebp+var_4]
.text$mn:0000043A                 mov     eax, [edx]
.text$mn:0000043C                 mov     ecx, [ebp+var_4]
.text$mn:0000043F                 push    ecx
.text$mn:00000440                 mov     edx, [eax+38h]
.text$mn:00000443                 call    edx
.text$mn:00000445                 mov     eax, 1
.text$mn:0000044A                 jmp     short loc_47F
.text$mn:0000044C ; ---------------------------------------------------------------------------
.text$mn:0000044C
.text$mn:0000044C loc_44C:                                ; CODE XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+15j
.text$mn:0000044C                 push    0FFFFFFEBh      ; nIndex
.text$mn:0000044E                 mov     eax, [ebp+hWnd]
.text$mn:00000451                 push    eax             ; hWnd
.text$mn:00000452                 call    dword ptr ds:__imp__GetWindowLongW@8 ; GetWindowLongW(x,x)
.text$mn:00000458                 mov     [ebp+var_8], eax
.text$mn:0000045B                 cmp     [ebp+var_8], 0
.text$mn:0000045F                 jnz     short loc_465
.text$mn:00000461                 xor     eax, eax
.text$mn:00000463                 jmp     short loc_47F
.text$mn:00000465 ; ---------------------------------------------------------------------------
.text$mn:00000465
.text$mn:00000465 loc_465:                                ; CODE XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+7Bj
.text$mn:00000465                 mov     ecx, [ebp+dwNewLong]
.text$mn:00000468                 push    ecx
.text$mn:00000469                 mov     edx, [ebp+arg_8]
.text$mn:0000046C                 push    edx
.text$mn:0000046D                 mov     eax, [ebp+arg_4]
.text$mn:00000470                 push    eax
.text$mn:00000471                 mov     ecx, [ebp+var_8]
.text$mn:00000474                 mov     edx, [ecx]
.text$mn:00000476                 mov     eax, [ebp+var_8]
.text$mn:00000479                 push    eax
.text$mn:0000047A                 mov     ecx, [edx+38h]
.text$mn:0000047D                 call    ecx
.text$mn:0000047F
.text$mn:0000047F loc_47F:                                ; CODE XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+66j
.text$mn:0000047F                                         ; StaticDialog::dlgProc(HWND__ *,uint,uint,long)+7Fj
.text$mn:0000047F                 mov     esp, ebp
.text$mn:00000481                 pop     ebp
.text$mn:00000482                 retn    10h
.text$mn:00000482 ?dlgProc@StaticDialog@@KGHPAUHWND__@@IIJ@Z endp
.text$mn:00000482
.text$mn:00000482 ; ---------------------------------------------------------------------------
.text$mn:00000485                 db 0Fh dup(0CCh)
.text$mn:00000494
.text$mn:00000494 ; =============== S U B R O U T I N E =======================================
.text$mn:00000494
.text$mn:00000494 ; Attributes: bp-based frame
.text$mn:00000494
.text$mn:00000494 ; protected: void __thiscall StaticDialog::alignWith(struct HWND__ *, struct HWND__ *, enum  PosAlign, struct tagPOINT &)
.text$mn:00000494                 public ?alignWith@StaticDialog@@IAEXPAUHWND__@@0W4PosAlign@@AAUtagPOINT@@@Z
.text$mn:00000494 ?alignWith@StaticDialog@@IAEXPAUHWND__@@0W4PosAlign@@AAUtagPOINT@@@Z proc near
.text$mn:00000494
.text$mn:00000494 var_2C          = dword ptr -2Ch
.text$mn:00000494 var_28          = dword ptr -28h
.text$mn:00000494 Rect            = tagRECT ptr -24h
.text$mn:00000494 var_14          = tagRECT ptr -14h
.text$mn:00000494 var_4           = dword ptr -4
.text$mn:00000494 hWnd            = dword ptr  8
.text$mn:00000494 arg_4           = dword ptr  0Ch
.text$mn:00000494 arg_8           = dword ptr  10h
.text$mn:00000494 lpPoint         = dword ptr  14h
.text$mn:00000494
.text$mn:00000494                 push    ebp
.text$mn:00000495                 mov     ebp, esp
.text$mn:00000497                 sub     esp, 2Ch
.text$mn:0000049A                 mov     eax, dword ptr ds:___security_cookie
.text$mn:0000049F                 xor     eax, ebp
.text$mn:000004A1                 mov     [ebp+var_4], eax
.text$mn:000004A4                 mov     [ebp+var_2C], ecx
.text$mn:000004A7                 lea     eax, [ebp+Rect]
.text$mn:000004AA                 push    eax             ; lpRect
.text$mn:000004AB                 mov     ecx, [ebp+hWnd]
.text$mn:000004AE                 push    ecx             ; hWnd
.text$mn:000004AF                 call    dword ptr ds:__imp__GetWindowRect@8 ; GetWindowRect(x,x)
.text$mn:000004B5                 mov     edx, [ebp+lpPoint]
.text$mn:000004B8                 mov     eax, [ebp+Rect.left]
.text$mn:000004BB                 mov     [edx], eax
.text$mn:000004BD                 mov     ecx, [ebp+lpPoint]
.text$mn:000004C0                 mov     edx, [ebp+Rect.top]
.text$mn:000004C3                 mov     [ecx+4], edx
.text$mn:000004C6                 mov     eax, [ebp+arg_8]
.text$mn:000004C9                 mov     [ebp+var_28], eax
.text$mn:000004CC                 cmp     [ebp+var_28], 0
.text$mn:000004D0                 jz      short loc_4E0
.text$mn:000004D2                 cmp     [ebp+var_28], 1
.text$mn:000004D6                 jz      short loc_502
.text$mn:000004D8                 cmp     [ebp+var_28], 2
.text$mn:000004DC                 jz      short loc_522
.text$mn:000004DE                 jmp     short loc_546
.text$mn:000004E0 ; ---------------------------------------------------------------------------
.text$mn:000004E0
.text$mn:000004E0 loc_4E0:                                ; CODE XREF: StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+3Cj
.text$mn:000004E0                 lea     ecx, [ebp+var_14]
.text$mn:000004E3                 push    ecx             ; lpRect
.text$mn:000004E4                 mov     edx, [ebp+arg_4]
.text$mn:000004E7                 push    edx             ; hWnd
.text$mn:000004E8                 call    dword ptr ds:__imp__GetWindowRect@8 ; GetWindowRect(x,x)
.text$mn:000004EE                 mov     eax, [ebp+var_14.right]
.text$mn:000004F1                 sub     eax, [ebp+var_14.left]
.text$mn:000004F4                 mov     ecx, [ebp+lpPoint]
.text$mn:000004F7                 mov     edx, [ecx]
.text$mn:000004F9                 sub     edx, eax
.text$mn:000004FB                 mov     eax, [ebp+lpPoint]
.text$mn:000004FE                 mov     [eax], edx
.text$mn:00000500                 jmp     short loc_566
.text$mn:00000502 ; ---------------------------------------------------------------------------
.text$mn:00000502
.text$mn:00000502 loc_502:                                ; CODE XREF: StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+42j
.text$mn:00000502                 lea     ecx, [ebp+var_14]
.text$mn:00000505                 push    ecx             ; lpRect
.text$mn:00000506                 mov     edx, [ebp+hWnd]
.text$mn:00000509                 push    edx             ; hWnd
.text$mn:0000050A                 call    dword ptr ds:__imp__GetWindowRect@8 ; GetWindowRect(x,x)
.text$mn:00000510                 mov     eax, [ebp+var_14.right]
.text$mn:00000513                 sub     eax, [ebp+var_14.left]
.text$mn:00000516                 mov     ecx, [ebp+lpPoint]
.text$mn:00000519                 add     eax, [ecx]
.text$mn:0000051B                 mov     edx, [ebp+lpPoint]
.text$mn:0000051E                 mov     [edx], eax
.text$mn:00000520                 jmp     short loc_566
.text$mn:00000522 ; ---------------------------------------------------------------------------
.text$mn:00000522
.text$mn:00000522 loc_522:                                ; CODE XREF: StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+48j
.text$mn:00000522                 lea     eax, [ebp+var_14]
.text$mn:00000525                 push    eax             ; lpRect
.text$mn:00000526                 mov     ecx, [ebp+arg_4]
.text$mn:00000529                 push    ecx             ; hWnd
.text$mn:0000052A                 call    dword ptr ds:__imp__GetWindowRect@8 ; GetWindowRect(x,x)
.text$mn:00000530                 mov     edx, [ebp+var_14.bottom]
.text$mn:00000533                 sub     edx, [ebp+var_14.top]
.text$mn:00000536                 mov     eax, [ebp+lpPoint]
.text$mn:00000539                 mov     ecx, [eax+4]
.text$mn:0000053C                 sub     ecx, edx
.text$mn:0000053E                 mov     edx, [ebp+lpPoint]
.text$mn:00000541                 mov     [edx+4], ecx
.text$mn:00000544                 jmp     short loc_566
.text$mn:00000546 ; ---------------------------------------------------------------------------
.text$mn:00000546
.text$mn:00000546 loc_546:                                ; CODE XREF: StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+4Aj
.text$mn:00000546                 lea     eax, [ebp+var_14]
.text$mn:00000549                 push    eax             ; lpRect
.text$mn:0000054A                 mov     ecx, [ebp+hWnd]
.text$mn:0000054D                 push    ecx             ; hWnd
.text$mn:0000054E                 call    dword ptr ds:__imp__GetWindowRect@8 ; GetWindowRect(x,x)
.text$mn:00000554                 mov     edx, [ebp+var_14.bottom]
.text$mn:00000557                 sub     edx, [ebp+var_14.top]
.text$mn:0000055A                 mov     eax, [ebp+lpPoint]
.text$mn:0000055D                 add     edx, [eax+4]
.text$mn:00000560                 mov     ecx, [ebp+lpPoint]
.text$mn:00000563                 mov     [ecx+4], edx
.text$mn:00000566
.text$mn:00000566 loc_566:                                ; CODE XREF: StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+6Cj
.text$mn:00000566                                         ; StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+8Cj ...
.text$mn:00000566                 mov     edx, [ebp+lpPoint]
.text$mn:00000569                 push    edx             ; lpPoint
.text$mn:0000056A                 mov     eax, [ebp+var_2C]
.text$mn:0000056D                 mov     ecx, [eax+0Ch]
.text$mn:00000570                 push    ecx             ; hWnd
.text$mn:00000571                 call    dword ptr ds:__imp__ScreenToClient@8 ; ScreenToClient(x,x)
.text$mn:00000577                 mov     ecx, [ebp+var_4]
.text$mn:0000057A                 xor     ecx, ebp
.text$mn:0000057C                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text$mn:00000581                 mov     esp, ebp
.text$mn:00000583                 pop     ebp
.text$mn:00000584                 retn    10h
.text$mn:00000584 ?alignWith@StaticDialog@@IAEXPAUHWND__@@0W4PosAlign@@AAUtagPOINT@@@Z endp
.text$mn:00000584
.text$mn:00000584 ; ---------------------------------------------------------------------------
.text$mn:00000587                 db 0Dh dup(0CCh)
.text$mn:00000594
.text$mn:00000594 ; =============== S U B R O U T I N E =======================================
.text$mn:00000594
.text$mn:00000594 ; Attributes: bp-based frame
.text$mn:00000594
.text$mn:00000594 ; void *__thiscall StaticDialog::makeRTLResource(StaticDialog *this, __int16, struct DLGTEMPLATE **)
.text$mn:00000594                 public ?makeRTLResource@StaticDialog@@IAEPAXHPAPAUDLGTEMPLATE@@@Z
.text$mn:00000594 ?makeRTLResource@StaticDialog@@IAEPAXHPAPAUDLGTEMPLATE@@@Z proc near
.text$mn:00000594                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+3Cp
.text$mn:00000594
.text$mn:00000594 hMem            = dword ptr -1Ch
.text$mn:00000594 Src             = dword ptr -18h
.text$mn:00000594 dwBytes         = dword ptr -14h
.text$mn:00000594 hResData        = dword ptr -10h
.text$mn:00000594 var_C           = dword ptr -0Ch
.text$mn:00000594 var_8           = dword ptr -8
.text$mn:00000594 hResInfo        = dword ptr -4
.text$mn:00000594 arg_0           = word ptr  8
.text$mn:00000594 arg_4           = dword ptr  0Ch
.text$mn:00000594
.text$mn:00000594                 push    ebp
.text$mn:00000595                 mov     ebp, esp
.text$mn:00000597                 sub     esp, 1Ch
.text$mn:0000059A                 mov     [ebp+var_8], ecx
.text$mn:0000059D                 push    (offset $SG65762+5) ; lpType
.text$mn:0000059F                 movzx   eax, [ebp+arg_0]
.text$mn:000005A3                 push    eax             ; lpName
.text$mn:000005A4                 mov     ecx, [ebp+var_8]
.text$mn:000005A7                 mov     edx, [ecx+4]
.text$mn:000005AA                 push    edx             ; hModule
.text$mn:000005AB                 call    dword ptr ds:__imp__FindResourceW@12 ; FindResourceW(x,x,x)
.text$mn:000005B1                 mov     [ebp+hResInfo], eax
.text$mn:000005B4                 cmp     [ebp+hResInfo], 0
.text$mn:000005B8                 jnz     short loc_5C1
.text$mn:000005BA                 xor     eax, eax
.text$mn:000005BC                 jmp     loc_686
.text$mn:000005C1 ; ---------------------------------------------------------------------------
.text$mn:000005C1
.text$mn:000005C1 loc_5C1:                                ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+24j
.text$mn:000005C1                 mov     eax, [ebp+hResInfo]
.text$mn:000005C4                 push    eax             ; hResInfo
.text$mn:000005C5                 mov     ecx, [ebp+var_8]
.text$mn:000005C8                 mov     edx, [ecx+4]
.text$mn:000005CB                 push    edx             ; hModule
.text$mn:000005CC                 call    dword ptr ds:__imp__LoadResource@8 ; LoadResource(x,x)
.text$mn:000005D2                 mov     [ebp+hResData], eax
.text$mn:000005D5                 cmp     [ebp+hResData], 0
.text$mn:000005D9                 jnz     short loc_5E2
.text$mn:000005DB                 xor     eax, eax
.text$mn:000005DD                 jmp     loc_686
.text$mn:000005E2 ; ---------------------------------------------------------------------------
.text$mn:000005E2
.text$mn:000005E2 loc_5E2:                                ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+45j
.text$mn:000005E2                 mov     eax, [ebp+hResData]
.text$mn:000005E5                 push    eax             ; hResData
.text$mn:000005E6                 call    dword ptr ds:__imp__LockResource@4 ; LockResource(x)
.text$mn:000005EC                 mov     [ebp+Src], eax
.text$mn:000005EF                 cmp     [ebp+Src], 0
.text$mn:000005F3                 jnz     short loc_5FC
.text$mn:000005F5                 xor     eax, eax
.text$mn:000005F7                 jmp     loc_686
.text$mn:000005FC ; ---------------------------------------------------------------------------
.text$mn:000005FC
.text$mn:000005FC loc_5FC:                                ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+5Fj
.text$mn:000005FC                 mov     ecx, [ebp+hResInfo]
.text$mn:000005FF                 push    ecx             ; hResInfo
.text$mn:00000600                 mov     edx, [ebp+var_8]
.text$mn:00000603                 mov     eax, [edx+4]
.text$mn:00000606                 push    eax             ; hModule
.text$mn:00000607                 call    dword ptr ds:__imp__SizeofResource@8 ; SizeofResource(x,x)
.text$mn:0000060D                 mov     [ebp+dwBytes], eax
.text$mn:00000610                 mov     ecx, [ebp+dwBytes]
.text$mn:00000613                 push    ecx             ; dwBytes
.text$mn:00000614                 push    40h ; '@'       ; uFlags
.text$mn:00000616                 call    dword ptr ds:__imp__GlobalAlloc@8 ; GlobalAlloc(x,x)
.text$mn:0000061C                 mov     [ebp+hMem], eax
.text$mn:0000061F                 mov     edx, [ebp+hMem]
.text$mn:00000622                 push    edx             ; hMem
.text$mn:00000623                 call    dword ptr ds:__imp__GlobalLock@4 ; GlobalLock(x)
.text$mn:00000629                 mov     ecx, [ebp+arg_4]
.text$mn:0000062C                 mov     [ecx], eax
.text$mn:0000062E                 mov     edx, [ebp+dwBytes]
.text$mn:00000631                 push    edx             ; Size
.text$mn:00000632                 mov     eax, [ebp+Src]
.text$mn:00000635                 push    eax             ; Src
.text$mn:00000636                 mov     ecx, [ebp+arg_4]
.text$mn:00000639                 mov     edx, [ecx]
.text$mn:0000063B                 push    edx             ; Dst
.text$mn:0000063C                 call    _memcpy
.text$mn:00000641                 add     esp, 0Ch
.text$mn:00000644                 mov     eax, [ebp+arg_4]
.text$mn:00000647                 mov     ecx, [eax]
.text$mn:00000649                 mov     [ebp+var_C], ecx
.text$mn:0000064C                 mov     edx, [ebp+var_C]
.text$mn:0000064F                 movzx   eax, word ptr [edx+2]
.text$mn:00000653                 cmp     eax, 0FFFFh
.text$mn:00000658                 jnz     short loc_66E
.text$mn:0000065A                 mov     ecx, [ebp+var_C]
.text$mn:0000065D                 mov     edx, [ecx+8]
.text$mn:00000660                 or      edx, 400000h
.text$mn:00000666                 mov     eax, [ebp+var_C]
.text$mn:00000669                 mov     [eax+8], edx
.text$mn:0000066C                 jmp     short loc_683
.text$mn:0000066E ; ---------------------------------------------------------------------------
.text$mn:0000066E
.text$mn:0000066E loc_66E:                                ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+C4j
.text$mn:0000066E                 mov     ecx, [ebp+arg_4]
.text$mn:00000671                 mov     edx, [ecx]
.text$mn:00000673                 mov     eax, [edx+4]
.text$mn:00000676                 or      eax, 400000h
.text$mn:0000067B                 mov     ecx, [ebp+arg_4]
.text$mn:0000067E                 mov     edx, [ecx]
.text$mn:00000680                 mov     [edx+4], eax
.text$mn:00000683
.text$mn:00000683 loc_683:                                ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+D8j
.text$mn:00000683                 mov     eax, [ebp+hMem]
.text$mn:00000686
.text$mn:00000686 loc_686:                                ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+28j
.text$mn:00000686                                         ; StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+49j ...
.text$mn:00000686                 mov     esp, ebp
.text$mn:00000688                 pop     ebp
.text$mn:00000689                 retn    8
.text$mn:00000689 ?makeRTLResource@StaticDialog@@IAEPAXHPAPAUDLGTEMPLATE@@@Z endp
.text$mn:00000689
.text$mn:00000689 _text$mn        ends
.text$mn:00000689
.text$mn:0000068C ; ===========================================================================
.text$mn:0000068C
.text$mn:0000068C ; Segment type: Pure code
.text$mn:0000068C ; Segment permissions: Read/Execute
.text$mn:0000068C _text$mn        segment para public 'CODE' use32
.text$mn:0000068C                 assume cs:_text$mn
.text$mn:0000068C                 ;org 68Ch
.text$mn:0000068C ; COMDAT (pick any)
.text$mn:0000068C                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:0000068C
.text$mn:0000068C ; =============== S U B R O U T I N E =======================================
.text$mn:0000068C
.text$mn:0000068C ; Attributes: bp-based frame
.text$mn:0000068C
.text$mn:0000068C ; void __thiscall Window::display(Window *this, bool)
.text$mn:0000068C                 public ?display@Window@@UBEX_N@Z
.text$mn:0000068C ?display@Window@@UBEX_N@Z proc near     ; CODE XREF: StaticDialog::display(bool)+131p
.text$mn:0000068C
.text$mn:0000068C var_8           = dword ptr -8
.text$mn:0000068C nCmdShow        = dword ptr -4
.text$mn:0000068C arg_0           = byte ptr  8
.text$mn:0000068C
.text$mn:0000068C                 push    ebp
.text$mn:0000068D                 mov     ebp, esp
.text$mn:0000068F                 sub     esp, 8
.text$mn:00000692                 mov     [ebp+var_8], ecx
.text$mn:00000695                 movzx   eax, [ebp+arg_0]
.text$mn:00000699                 test    eax, eax
.text$mn:0000069B                 jz      short loc_6A6
.text$mn:0000069D                 mov     [ebp+nCmdShow], 5
.text$mn:000006A4                 jmp     short loc_6AD
.text$mn:000006A6 ; ---------------------------------------------------------------------------
.text$mn:000006A6
.text$mn:000006A6 loc_6A6:                                ; CODE XREF: Window::display(bool)+Fj
.text$mn:000006A6                 mov     [ebp+nCmdShow], 0
.text$mn:000006AD
.text$mn:000006AD loc_6AD:                                ; CODE XREF: Window::display(bool)+18j
.text$mn:000006AD                 mov     ecx, [ebp+nCmdShow]
.text$mn:000006B0                 push    ecx             ; nCmdShow
.text$mn:000006B1                 mov     edx, [ebp+var_8]
.text$mn:000006B4                 mov     eax, [edx+0Ch]
.text$mn:000006B7                 push    eax             ; hWnd
.text$mn:000006B8                 call    dword ptr ds:__imp__ShowWindow@8 ; ShowWindow(x,x)
.text$mn:000006BE                 mov     esp, ebp
.text$mn:000006C0                 pop     ebp
.text$mn:000006C1                 retn    4
.text$mn:000006C1 ?display@Window@@UBEX_N@Z endp
.text$mn:000006C1
.text$mn:000006C1 _text$mn        ends
.text$mn:000006C1
UNDEF:000006D0 ; ===========================================================================
UNDEF:000006D0
UNDEF:000006D0 ; Segment type: Externs
UNDEF:000006D0 ; UNDEF
UNDEF:000006D0 ; int sprintf(char *Dest, const char *Format, ...)
UNDEF:000006D0                 extrn _sprintf:near     ; CODE XREF: StaticDialog::create(int,bool,bool)+EBp
UNDEF:000006D4 ; void *__cdecl memcpy(void *Dst, const void *Src, size_t Size)
UNDEF:000006D4                 extrn _memcpy:near      ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+A8p
UNDEF:000006D8 ; DWORD __stdcall GetLastError()
UNDEF:000006D8                 extrn __imp__GetLastError@0:near
UNDEF:000006D8                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+CCp
UNDEF:000006D8                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+CCr
UNDEF:000006DC ; HGLOBAL __stdcall LoadResource(HMODULE hModule, HRSRC hResInfo)
UNDEF:000006DC                 extrn __imp__LoadResource@8:near
UNDEF:000006DC                                         ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+38p
UNDEF:000006DC                                         ; DATA XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+38r
UNDEF:000006E0 ; LPVOID __stdcall LockResource(HGLOBAL hResData)
UNDEF:000006E0                 extrn __imp__LockResource@4:near
UNDEF:000006E0                                         ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+52p
UNDEF:000006E0                                         ; DATA XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+52r
UNDEF:000006E4 ; DWORD __stdcall SizeofResource(HMODULE hModule, HRSRC hResInfo)
UNDEF:000006E4                 extrn __imp__SizeofResource@8:near
UNDEF:000006E4                                         ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+73p
UNDEF:000006E4                                         ; DATA XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+73r
UNDEF:000006E8 ; HGLOBAL __stdcall GlobalAlloc(UINT uFlags, SIZE_T dwBytes)
UNDEF:000006E8                 extrn __imp__GlobalAlloc@8:near
UNDEF:000006E8                                         ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+82p
UNDEF:000006E8                                         ; DATA XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+82r
UNDEF:000006EC ; LPVOID __stdcall GlobalLock(HGLOBAL hMem)
UNDEF:000006EC                 extrn __imp__GlobalLock@4:near
UNDEF:000006EC                                         ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+8Fp
UNDEF:000006EC                                         ; DATA XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+8Fr
UNDEF:000006F0 ; HGLOBAL __stdcall GlobalFree(HGLOBAL hMem)
UNDEF:000006F0                 extrn __imp__GlobalFree@4:near
UNDEF:000006F0                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+84p
UNDEF:000006F0                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+84r
UNDEF:000006F4 ; HRSRC __stdcall FindResourceW(HMODULE hModule, LPCWSTR lpName, LPCWSTR lpType)
UNDEF:000006F4                 extrn __imp__FindResourceW@12:near
UNDEF:000006F4                                         ; CODE XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+17p
UNDEF:000006F4                                         ; DATA XREF: StaticDialog::makeRTLResource(int,DLGTEMPLATE * *)+17r
UNDEF:000006F8 ; LRESULT __stdcall SendMessageW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
UNDEF:000006F8                 extrn __imp__SendMessageW@16:near
UNDEF:000006F8                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+152p
UNDEF:000006F8                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+152r
UNDEF:000006FC ; BOOL __stdcall ShowWindow(HWND hWnd, int nCmdShow)
UNDEF:000006FC                 extrn __imp__ShowWindow@8:near
UNDEF:000006FC                                         ; CODE XREF: Window::display(bool)+2Cp
UNDEF:000006FC                                         ; DATA XREF: Window::display(bool)+2Cr
UNDEF:00000700 ; BOOL __stdcall MoveWindow(HWND hWnd, int X, int Y, int nWidth, int nHeight, BOOL bRepaint)
UNDEF:00000700                 extrn __imp__MoveWindow@24:near
UNDEF:00000700                                         ; CODE XREF: StaticDialog::display(bool)+123p
UNDEF:00000700                                         ; DATA XREF: StaticDialog::display(bool)+123r
UNDEF:00000704 ; BOOL __stdcall SetWindowPos(HWND hWnd, HWND hWndInsertAfter, int X, int Y, int cx, int cy, UINT uFlags)
UNDEF:00000704                 extrn __imp__SetWindowPos@28:near
UNDEF:00000704                                         ; CODE XREF: StaticDialog::goToCenter(void)+B6p
UNDEF:00000704                                         ; DATA XREF: StaticDialog::goToCenter(void)+B6r
UNDEF:00000708 ; HWND __stdcall CreateDialogParamW(HINSTANCE hInstance, LPCWSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)
UNDEF:00000708                 extrn __imp__CreateDialogParamW@20:near
UNDEF:00000708                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+B1p
UNDEF:00000708                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+B1r
UNDEF:0000070C ; HWND __stdcall CreateDialogIndirectParamW(HINSTANCE hInstance, LPCDLGTEMPLATEW lpTemplate, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)
UNDEF:0000070C                 extrn __imp__CreateDialogIndirectParamW@20:near
UNDEF:0000070C                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+6Ep
UNDEF:0000070C                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+6Er
UNDEF:00000710 ; int __stdcall GetSystemMetrics(int nIndex)
UNDEF:00000710                 extrn __imp__GetSystemMetrics@4:near
UNDEF:00000710                                         ; CODE XREF: StaticDialog::display(bool)+73p
UNDEF:00000710                                         ; StaticDialog::display(bool)+7Ep ...
UNDEF:00000714 ; BOOL __stdcall GetClientRect(HWND hWnd, LPRECT lpRect)
UNDEF:00000714                 extrn __imp__GetClientRect@8:near
UNDEF:00000714                                         ; CODE XREF: StaticDialog::goToCenter(void)+1Ep
UNDEF:00000714                                         ; DATA XREF: StaticDialog::goToCenter(void)+1Er
UNDEF:00000718 ; BOOL __stdcall GetWindowRect(HWND hWnd, LPRECT lpRect)
UNDEF:00000718                 extrn __imp__GetWindowRect@8:near
UNDEF:00000718                                         ; CODE XREF: StaticDialog::display(bool)+5Fp
UNDEF:00000718                                         ; StaticDialog::dlgProc(HWND__ *,uint,uint,long)+41p ...
UNDEF:0000071C ; int __stdcall MessageBoxA(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)
UNDEF:0000071C                 extrn __imp__MessageBoxA@16:near
UNDEF:0000071C                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+103p
UNDEF:0000071C                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+103r
UNDEF:00000720 ; BOOL __stdcall ClientToScreen(HWND hWnd, LPPOINT lpPoint)
UNDEF:00000720                 extrn __imp__ClientToScreen@8:near
UNDEF:00000720                                         ; CODE XREF: StaticDialog::goToCenter(void)+51p
UNDEF:00000720                                         ; DATA XREF: StaticDialog::goToCenter(void)+51r
UNDEF:00000724 ; BOOL __stdcall ScreenToClient(HWND hWnd, LPPOINT lpPoint)
UNDEF:00000724                 extrn __imp__ScreenToClient@8:near
UNDEF:00000724                                         ; CODE XREF: StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+DDp
UNDEF:00000724                                         ; DATA XREF: StaticDialog::alignWith(HWND__ *,HWND__ *,PosAlign,tagPOINT &)+DDr
UNDEF:00000728 ; LONG __stdcall GetWindowLongW(HWND hWnd, int nIndex)
UNDEF:00000728                 extrn __imp__GetWindowLongW@8:near
UNDEF:00000728                                         ; CODE XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+6Ep
UNDEF:00000728                                         ; DATA XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+6Er
UNDEF:0000072C ; LONG __stdcall SetWindowLongW(HWND hWnd, int nIndex, LONG dwNewLong)
UNDEF:0000072C                 extrn __imp__SetWindowLongW@12:near
UNDEF:0000072C                                         ; CODE XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+30p
UNDEF:0000072C                                         ; DATA XREF: StaticDialog::dlgProc(HWND__ *,uint,uint,long)+30r
UNDEF:00000730 ; HWND __stdcall GetParent(HWND hWnd)
UNDEF:00000730                 extrn __imp__GetParent@4:near
UNDEF:00000730                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+12Ep
UNDEF:00000730                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+12Er
UNDEF:00000734 ; BOOL __stdcall SystemParametersInfoW(UINT uiAction, UINT uiParam, PVOID pvParam, UINT fWinIni)
UNDEF:00000734                 extrn __imp__SystemParametersInfoW@16:near
UNDEF:00000734                                         ; CODE XREF: StaticDialog::display(bool)+4Ep
UNDEF:00000734                                         ; DATA XREF: StaticDialog::display(bool)+4Er
UNDEF:00000738 ; __fastcall __security_check_cookie(x)
UNDEF:00000738                 extrn @__security_check_cookie@4:near
UNDEF:00000738                                         ; CODE XREF: StaticDialog::create(int,bool,bool)+15Dp
UNDEF:00000738                                         ; StaticDialog::goToCenter(void)+C1p ...
UNDEF:0000073C                 extrn ___security_cookie:near
UNDEF:0000073C                                         ; DATA XREF: StaticDialog::create(int,bool,bool)+9r
UNDEF:0000073C                                         ; StaticDialog::goToCenter(void)+6r ...
UNDEF:0000073C
UNDEF:0000073C
UNDEF:0000073C                 end
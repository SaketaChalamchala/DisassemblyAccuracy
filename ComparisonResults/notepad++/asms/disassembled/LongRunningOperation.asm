.text$mn:00000000 ;
.text$mn:00000000 ; +-------------------------------------------------------------------------+
.text$mn:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text$mn:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text$mn:00000000 ; |                      License info: 48-3677-7074-51                      |
.text$mn:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text$mn:00000000 ; +-------------------------------------------------------------------------+
.text$mn:00000000 ;
.text$mn:00000000 ; Input MD5   : 0B0A4099D908CF430734D196F5E479EB
.text$mn:00000000 ; Input CRC32 : 6076D10D
.text$mn:00000000
.text$mn:00000000 ; File Name   : C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\visual.net\Unicode Debug\LongRunningOperation.obj
.text$mn:00000000 ; Format      : COFF (X386MAGIC)
.text$mn:00000000 ; includelib "uuid.lib"
.text$mn:00000000 ; must resolve: ?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A
.text$mn:00000000 ; includelib "LIBCMTD"
.text$mn:00000000 ; includelib "OLDNAMES"
.text$mn:00000000
.text$mn:00000000                 .686p
.text$mn:00000000                 .mmx
.text$mn:00000000                 .model flat
.text$mn:00000000
.text$mn:00000000 ; ===========================================================================
.text$mn:00000000
.text$mn:00000000 ; Segment type: Pure code
.text$mn:00000000 ; Segment permissions: Read/Execute
.text$mn:00000000 _text$mn        segment para public 'CODE' use32
.text$mn:00000000                 assume cs:_text$mn
.text$mn:00000000                 assume es:nothing, ss:nothing, ds:_CRT$XCU, fs:nothing, gs:nothing
.text$mn:00000000
.text$mn:00000000 ; =============== S U B R O U T I N E =======================================
.text$mn:00000000
.text$mn:00000000 ; Attributes: bp-based frame
.text$mn:00000000
.text$mn:00000000 ; _DWORD __thiscall LongRunningOperation::LongRunningOperation(LongRunningOperation *__hidden this)
.text$mn:00000000                 public ??0LongRunningOperation@@QAE@XZ
.text$mn:00000000 ??0LongRunningOperation@@QAE@XZ proc near
.text$mn:00000000
.text$mn:00000000 var_4           = dword ptr -4
.text$mn:00000000
.text$mn:00000000                 push    ebp
.text$mn:00000001                 mov     ebp, esp
.text$mn:00000003                 push    ecx
.text$mn:00000004                 mov     [ebp+var_4], ecx
.text$mn:00000007                 mov     ecx, offset ?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A ; this
.text$mn:0000000C                 call    ?lock@Mutex@Yuni@@QAEXXZ ; Yuni::Mutex::lock(void)
.text$mn:00000011                 mov     eax, [ebp+var_4]
.text$mn:00000014                 mov     esp, ebp
.text$mn:00000016                 pop     ebp
.text$mn:00000017                 retn
.text$mn:00000017 ??0LongRunningOperation@@QAE@XZ endp
.text$mn:00000017
.text$mn:00000017 ; ---------------------------------------------------------------------------
.text$mn:00000018                 align 10h
.text$mn:00000020
.text$mn:00000020 ; =============== S U B R O U T I N E =======================================
.text$mn:00000020
.text$mn:00000020 ; Attributes: bp-based frame
.text$mn:00000020
.text$mn:00000020 ; _DWORD __thiscall LongRunningOperation::~LongRunningOperation(LongRunningOperation *__hidden this)
.text$mn:00000020                 public ??1LongRunningOperation@@QAE@XZ
.text$mn:00000020 ??1LongRunningOperation@@QAE@XZ proc near
.text$mn:00000020
.text$mn:00000020 var_4           = dword ptr -4
.text$mn:00000020
.text$mn:00000020                 push    ebp
.text$mn:00000021                 mov     ebp, esp
.text$mn:00000023                 push    ecx
.text$mn:00000024                 mov     [ebp+var_4], ecx
.text$mn:00000027                 mov     ecx, offset ?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A ; this
.text$mn:0000002C                 call    ?unlock@Mutex@Yuni@@QAEXXZ ; Yuni::Mutex::unlock(void)
.text$mn:00000031                 mov     esp, ebp
.text$mn:00000033                 pop     ebp
.text$mn:00000034                 retn
.text$mn:00000034 ??1LongRunningOperation@@QAE@XZ endp
.text$mn:00000034
.text$mn:00000034 ; ---------------------------------------------------------------------------
.text$mn:00000035                 align 4
.text$mn:00000035 _text$mn        ends
.text$mn:00000035
.text$di:00000038 ; ===========================================================================
.text$di:00000038
.text$di:00000038 ; Segment type: Pure code
.text$di:00000038 ; Segment permissions: Read/Execute
.text$di:00000038 _text$di        segment para public 'CODE' use32
.text$di:00000038                 assume cs:_text$di
.text$di:00000038                 ;org 38h
.text$di:00000038 ; COMDAT (pick any)
.text$di:00000038                 assume es:nothing, ss:nothing, ds:_CRT$XCU, fs:nothing, gs:nothing
.text$di:00000038
.text$di:00000038 ; =============== S U B R O U T I N E =======================================
.text$di:00000038
.text$di:00000038 ; Attributes: bp-based frame
.text$di:00000038
.text$di:00000038 ; void __cdecl `dynamic initializer for 'public: static class Yuni::Mutex Yuni::Mutex::ClassLevelLockable<class LongRunningOperation>::mutex''(void)
.text$di:00000038 ??__E?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A@@YAXXZ proc near
.text$di:00000038                                         ; DATA XREF: .CRT$XCU:void (*Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex$initializer$)(void)o
.text$di:00000038                 push    ebp
.text$di:00000039                 mov     ebp, esp
.text$di:0000003B                 push    1               ; bool
.text$di:0000003D                 mov     ecx, offset ?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A ; this
.text$di:00000042                 call    ??0Mutex@Yuni@@QAE@_N@Z ; Yuni::Mutex::Mutex(bool)
.text$di:00000047                 push    offset ??__F?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A@@YAXXZ ; void (__cdecl *)()
.text$di:0000004C                 call    _atexit
.text$di:00000051                 add     esp, 4
.text$di:00000054                 pop     ebp
.text$di:00000055                 retn
.text$di:00000055 ??__E?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A@@YAXXZ endp
.text$di:00000055
.text$di:00000055 ; ---------------------------------------------------------------------------
.text$di:00000056                 align 4
.text$di:00000056 _text$di        ends
.text$di:00000056
.text$yd:00000058 ; ===========================================================================
.text$yd:00000058
.text$yd:00000058 ; Segment type: Pure code
.text$yd:00000058 ; Segment permissions: Read/Execute
.text$yd:00000058 _text$yd        segment para public 'CODE' use32
.text$yd:00000058                 assume cs:_text$yd
.text$yd:00000058                 ;org 58h
.text$yd:00000058 ; COMDAT (pick any)
.text$yd:00000058                 assume es:nothing, ss:nothing, ds:_CRT$XCU, fs:nothing, gs:nothing
.text$yd:00000058
.text$yd:00000058 ; =============== S U B R O U T I N E =======================================
.text$yd:00000058
.text$yd:00000058 ; Attributes: bp-based frame
.text$yd:00000058
.text$yd:00000058 ; void __cdecl `dynamic atexit destructor for 'public: static Yuni::Mutex Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex''()
.text$yd:00000058 ??__F?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A@@YAXXZ proc near
.text$yd:00000058                                         ; DATA XREF: `dynamic initializer for 'Yuni::Mutex Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex''(void)+Fo
.text$yd:00000058                 push    ebp
.text$yd:00000059                 mov     ebp, esp
.text$yd:0000005B                 mov     ecx, offset ?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A ; this
.text$yd:00000060                 call    ??1Mutex@Yuni@@QAE@XZ ; Yuni::Mutex::~Mutex(void)
.text$yd:00000065                 pop     ebp
.text$yd:00000066                 retn
.text$yd:00000066 ??__F?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A@@YAXXZ endp
.text$yd:00000066
.text$yd:00000066 ; ---------------------------------------------------------------------------
.text$yd:00000067                 align 4
.text$yd:00000067 _text$yd        ends
.text$yd:00000067
.text$mn:00000068 ; ===========================================================================
.text$mn:00000068
.text$mn:00000068 ; Segment type: Pure code
.text$mn:00000068 ; Segment permissions: Read/Execute
.text$mn:00000068 _text$mn        segment para public 'CODE' use32
.text$mn:00000068                 assume cs:_text$mn
.text$mn:00000068                 ;org 68h
.text$mn:00000068 ; COMDAT (pick any)
.text$mn:00000068                 assume es:nothing, ss:nothing, ds:_CRT$XCU, fs:nothing, gs:nothing
.text$mn:00000068
.text$mn:00000068 ; =============== S U B R O U T I N E =======================================
.text$mn:00000068
.text$mn:00000068 ; Attributes: bp-based frame
.text$mn:00000068
.text$mn:00000068 ; void __thiscall Yuni::Mutex::lock(Yuni::Mutex *__hidden this)
.text$mn:00000068                 public ?lock@Mutex@Yuni@@QAEXXZ
.text$mn:00000068 ?lock@Mutex@Yuni@@QAEXXZ proc near      ; CODE XREF: LongRunningOperation::LongRunningOperation(void)+Cp
.text$mn:00000068
.text$mn:00000068 lpCriticalSection= dword ptr -4
.text$mn:00000068
.text$mn:00000068                 push    ebp
.text$mn:00000069                 mov     ebp, esp
.text$mn:0000006B                 push    ecx
.text$mn:0000006C                 mov     [ebp+lpCriticalSection], ecx
.text$mn:0000006F                 mov     eax, [ebp+lpCriticalSection]
.text$mn:00000072                 push    eax             ; lpCriticalSection
.text$mn:00000073                 call    dword ptr ds:__imp__EnterCriticalSection@4 ; EnterCriticalSection(x)
.text$mn:00000079                 mov     esp, ebp
.text$mn:0000007B                 pop     ebp
.text$mn:0000007C                 retn
.text$mn:0000007C ?lock@Mutex@Yuni@@QAEXXZ endp
.text$mn:0000007C
.text$mn:0000007C ; ---------------------------------------------------------------------------
.text$mn:0000007D                 align 10h
.text$mn:0000007D _text$mn        ends
.text$mn:0000007D
.text$mn:00000080 ; ===========================================================================
.text$mn:00000080
.text$mn:00000080 ; Segment type: Pure code
.text$mn:00000080 ; Segment permissions: Read/Execute
.text$mn:00000080 _text$mn        segment para public 'CODE' use32
.text$mn:00000080                 assume cs:_text$mn
.text$mn:00000080                 ;org 80h
.text$mn:00000080 ; COMDAT (pick any)
.text$mn:00000080                 assume es:nothing, ss:nothing, ds:_CRT$XCU, fs:nothing, gs:nothing
.text$mn:00000080
.text$mn:00000080 ; =============== S U B R O U T I N E =======================================
.text$mn:00000080
.text$mn:00000080 ; Attributes: bp-based frame
.text$mn:00000080
.text$mn:00000080 ; void __thiscall Yuni::Mutex::unlock(Yuni::Mutex *__hidden this)
.text$mn:00000080                 public ?unlock@Mutex@Yuni@@QAEXXZ
.text$mn:00000080 ?unlock@Mutex@Yuni@@QAEXXZ proc near    ; CODE XREF: LongRunningOperation::~LongRunningOperation(void)+Cp
.text$mn:00000080
.text$mn:00000080 lpCriticalSection= dword ptr -4
.text$mn:00000080
.text$mn:00000080                 push    ebp
.text$mn:00000081                 mov     ebp, esp
.text$mn:00000083                 push    ecx
.text$mn:00000084                 mov     [ebp+lpCriticalSection], ecx
.text$mn:00000087                 mov     eax, [ebp+lpCriticalSection]
.text$mn:0000008A                 push    eax             ; lpCriticalSection
.text$mn:0000008B                 call    dword ptr ds:__imp__LeaveCriticalSection@4 ; LeaveCriticalSection(x)
.text$mn:00000091                 mov     esp, ebp
.text$mn:00000093                 pop     ebp
.text$mn:00000094                 retn
.text$mn:00000094 ?unlock@Mutex@Yuni@@QAEXXZ endp
.text$mn:00000094
.text$mn:00000094 ; ---------------------------------------------------------------------------
.text$mn:00000095                 align 4
.text$mn:00000095 _text$mn        ends
.text$mn:00000095
.bss:00000098 ; ===========================================================================
.bss:00000098
.bss:00000098 ; Segment type: Uninitialized
.bss:00000098 ; Segment permissions: Read/Write
.bss:00000098 _bss            segment dword public 'BSS' use32
.bss:00000098                 assume cs:_bss
.bss:00000098                 ;org 98h
.bss:00000098 ; COMDAT (pick any)
.bss:00000098                 assume es:nothing, ss:nothing, ds:_CRT$XCU, fs:nothing, gs:nothing
.bss:00000098                 public ?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A
.bss:00000098 ; Yuni::Mutex Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex
.bss:00000098 ?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A db    ? ;
.bss:00000098                                         ; DATA XREF: LongRunningOperation::LongRunningOperation(void)+7o
.bss:00000098                                         ; LongRunningOperation::~LongRunningOperation(void)+7o ...
.bss:00000099                 db    ? ;
.bss:0000009A                 db    ? ;
.bss:0000009B                 db    ? ;
.bss:0000009C                 db    ? ;
.bss:0000009D                 db    ? ;
.bss:0000009E                 db    ? ;
.bss:0000009F                 db    ? ;
.bss:000000A0                 db    ? ;
.bss:000000A1                 db    ? ;
.bss:000000A2                 db    ? ;
.bss:000000A3                 db    ? ;
.bss:000000A4                 db    ? ;
.bss:000000A5                 db    ? ;
.bss:000000A6                 db    ? ;
.bss:000000A7                 db    ? ;
.bss:000000A8                 db    ? ;
.bss:000000A9                 db    ? ;
.bss:000000AA                 db    ? ;
.bss:000000AB                 db    ? ;
.bss:000000AC                 db    ? ;
.bss:000000AD                 db    ? ;
.bss:000000AE                 db    ? ;
.bss:000000AF                 db    ? ;
.bss:000000AF _bss            ends
.bss:000000AF
.CRT$XCU:000000B0 ; ===========================================================================
.CRT$XCU:000000B0
.CRT$XCU:000000B0 ; Segment type: Pure data
.CRT$XCU:000000B0 ; Segment permissions: Read
.CRT$XCU:000000B0 _CRT$XCU        segment dword public 'DATA' use32
.CRT$XCU:000000B0                 assume cs:_CRT$XCU
.CRT$XCU:000000B0                 ;org 0B0h
.CRT$XCU:000000B0 ; COMDAT (pick associative to section at 98)
.CRT$XCU:000000B0 ; public: static void (__cdecl *Yuni::Mutex::ClassLevelLockable<class LongRunningOperation>::mutex$initializer$)(void)
.CRT$XCU:000000B0 ?mutex$initializer$@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2P6AXXZA dd offset ??__E?mutex@?$ClassLevelLockable@VLongRunningOperation@@@Mutex@Yuni@@2V23@A@@YAXXZ ; `dynamic initializer for 'Yuni::Mutex Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex''(void)
.CRT$XCU:000000B0 _CRT$XCU        ends
.CRT$XCU:000000B0
UNDEF:000000C0 ; ===========================================================================
UNDEF:000000C0
UNDEF:000000C0 ; Segment type: Externs
UNDEF:000000C0 ; UNDEF
UNDEF:000000C0 ; int __cdecl atexit(void (__cdecl *)())
UNDEF:000000C0                 extrn _atexit:near      ; CODE XREF: `dynamic initializer for 'Yuni::Mutex Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex''(void)+14p
UNDEF:000000C4 ; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
UNDEF:000000C4                 extrn __imp__EnterCriticalSection@4:near
UNDEF:000000C4                                         ; CODE XREF: Yuni::Mutex::lock(void)+Bp
UNDEF:000000C4                                         ; DATA XREF: Yuni::Mutex::lock(void)+Br
UNDEF:000000C8 ; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
UNDEF:000000C8                 extrn __imp__LeaveCriticalSection@4:near
UNDEF:000000C8                                         ; CODE XREF: Yuni::Mutex::unlock(void)+Bp
UNDEF:000000C8                                         ; DATA XREF: Yuni::Mutex::unlock(void)+Br
UNDEF:000000CC ; _DWORD __thiscall Yuni::Mutex::Mutex(Yuni::Mutex *__hidden this, bool)
UNDEF:000000CC                 extrn ??0Mutex@Yuni@@QAE@_N@Z:near
UNDEF:000000CC                                         ; CODE XREF: `dynamic initializer for 'Yuni::Mutex Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex''(void)+Ap
UNDEF:000000D0 ; _DWORD __thiscall Yuni::Mutex::~Mutex(Yuni::Mutex *__hidden this)
UNDEF:000000D0                 extrn ??1Mutex@Yuni@@QAE@XZ:near
UNDEF:000000D0                                         ; CODE XREF: `dynamic atexit destructor for 'Yuni::Mutex Yuni::Mutex::ClassLevelLockable<LongRunningOperation>::mutex''(void)+8p
UNDEF:000000D0
UNDEF:000000D0
UNDEF:000000D0                 end
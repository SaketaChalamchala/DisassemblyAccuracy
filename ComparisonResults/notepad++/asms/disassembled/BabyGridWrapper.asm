.bss:00000000 ;
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.bss:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.bss:00000000 ; |                      License info: 48-3677-7074-51                      |
.bss:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.bss:00000000 ; +-------------------------------------------------------------------------+
.bss:00000000 ;
.bss:00000000 ; Input MD5   : 4B64100189654E48EAB5B6FFF55A338C
.bss:00000000 ; Input CRC32 : D2BCA1D1
.bss:00000000
.bss:00000000 ; File Name   : C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\visual.net\Unicode Debug\BabyGridWrapper.obj
.bss:00000000 ; Format      : COFF (X386MAGIC)
.bss:00000000 ; includelib "uuid.lib"
.bss:00000000 ; includelib "LIBCMTD"
.bss:00000000 ; includelib "OLDNAMES"
.bss:00000000
.bss:00000000                 include uni.inc ; see unicode subdir of ida for info on unicode
.bss:00000000
.bss:00000000                 .686p
.bss:00000000                 .mmx
.bss:00000000                 .model flat
.bss:00000000
.bss:00000000 ; ===========================================================================
.bss:00000000
.bss:00000000 ; Segment type: Uninitialized
.bss:00000000 ; Segment permissions: Read/Write
.bss:00000000 _bss            segment byte public 'BSS' use32
.bss:00000000                 assume cs:_bss
.bss:00000000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00000000                 public ?_isRegistered@BabyGridWrapper@@0_NA
.bss:00000000 ; private: static bool BabyGridWrapper::_isRegistered
.bss:00000000 ?_isRegistered@BabyGridWrapper@@0_NA db ?
.bss:00000000                                         ; DATA XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+17r
.bss:00000001                 align 4
.bss:00000001 _bss            ends
.bss:00000001
.data:00000004 ; ===========================================================================
.data:00000004
.data:00000004 ; Segment type: Pure data
.data:00000004 ; Segment permissions: Read/Write
.data:00000004 _data           segment dword public 'DATA' use32
.data:00000004                 assume cs:_data
.data:00000004                 ;org 4
.data:00000004                 public ?babyGridClassName@@3PB_WB
.data:00000004 ; LPCWSTR babyGridClassName
.data:00000004 ?babyGridClassName@@3PB_WB dd offset $SG63702
.data:00000004                                         ; DATA XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+5Dr
.data:00000004 _data           ends                    ; "BABYGRID"
.data:00000004
.rdata:00000008 ; ===========================================================================
.rdata:00000008
.rdata:00000008 ; Segment type: Pure data
.rdata:00000008 ; Segment permissions: Read
.rdata:00000008 _rdata          segment dword public 'DATA' use32
.rdata:00000008                 assume cs:_rdata
.rdata:00000008                 ;org 8
.rdata:00000008 $SG63702:                               ; DATA XREF: .data:wchar_t const * const babyGridClassNameo
.rdata:00000008                 unicode 0, <BABYGRID>,0
.rdata:0000001A                 align 4
.rdata:0000001C ; const WCHAR _SG63714
.rdata:0000001C $SG63714        dw 0                    ; DATA XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+58o
.rdata:0000001E                 align 10h
.rdata:0000001E _rdata          ends
.rdata:0000001E
.text$mn:00000020 ; ===========================================================================
.text$mn:00000020
.text$mn:00000020 ; Segment type: Pure code
.text$mn:00000020 ; Segment permissions: Read/Execute
.text$mn:00000020 _text$mn        segment para public 'CODE' use32
.text$mn:00000020                 assume cs:_text$mn
.text$mn:00000020                 ;org 20h
.text$mn:00000020                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text$mn:00000020
.text$mn:00000020 ; =============== S U B R O U T I N E =======================================
.text$mn:00000020
.text$mn:00000020 ; Attributes: bp-based frame
.text$mn:00000020
.text$mn:00000020 ; void __thiscall BabyGridWrapper::init(BabyGridWrapper *this, HINSTANCE, HWND, int)
.text$mn:00000020                 public ?init@BabyGridWrapper@@UAEXPAUHINSTANCE__@@PAUHWND__@@H@Z
.text$mn:00000020 ?init@BabyGridWrapper@@UAEXPAUHINSTANCE__@@PAUHWND__@@H@Z proc near
.text$mn:00000020
.text$mn:00000020 var_4           = dword ptr -4
.text$mn:00000020 arg_0           = dword ptr  8
.text$mn:00000020 arg_4           = dword ptr  0Ch
.text$mn:00000020 hMenu           = dword ptr  10h
.text$mn:00000020
.text$mn:00000020                 push    ebp
.text$mn:00000021                 mov     ebp, esp
.text$mn:00000023                 push    ecx
.text$mn:00000024                 mov     [ebp+var_4], ecx
.text$mn:00000027                 mov     eax, [ebp+arg_4]
.text$mn:0000002A                 push    eax             ; HWND
.text$mn:0000002B                 mov     ecx, [ebp+arg_0]
.text$mn:0000002E                 push    ecx             ; HINSTANCE
.text$mn:0000002F                 mov     ecx, [ebp+var_4] ; this
.text$mn:00000032                 call    ?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z ; Window::init(HINSTANCE__ *,HWND__ *)
.text$mn:00000037                 movzx   edx, ds:?_isRegistered@BabyGridWrapper@@0_NA ; bool BabyGridWrapper::_isRegistered
.text$mn:0000003E                 test    edx, edx
.text$mn:00000040                 jnz     short loc_51
.text$mn:00000042                 mov     eax, [ebp+var_4]
.text$mn:00000045                 mov     ecx, [eax+4]
.text$mn:00000048                 push    ecx             ; HINSTANCE
.text$mn:00000049                 call    ?RegisterGridClass@@YAGPAUHINSTANCE__@@@Z ; RegisterGridClass(HINSTANCE__ *)
.text$mn:0000004E                 add     esp, 4
.text$mn:00000051
.text$mn:00000051 loc_51:                                 ; CODE XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+20j
.text$mn:00000051                 push    0               ; lpParam
.text$mn:00000053                 mov     edx, [ebp+var_4]
.text$mn:00000056                 mov     eax, [edx+4]
.text$mn:00000059                 push    eax             ; hInstance
.text$mn:0000005A                 mov     ecx, [ebp+hMenu]
.text$mn:0000005D                 push    ecx             ; hMenu
.text$mn:0000005E                 mov     edx, [ebp+var_4]
.text$mn:00000061                 mov     eax, [edx+8]
.text$mn:00000064                 push    eax             ; hWndParent
.text$mn:00000065                 push    0               ; nHeight
.text$mn:00000067                 push    80000000h       ; nWidth
.text$mn:0000006C                 push    0               ; Y
.text$mn:0000006E                 push    80000000h       ; X
.text$mn:00000073                 push    50000000h       ; dwStyle
.text$mn:00000078                 push    offset $SG63714 ; lpWindowName
.text$mn:0000007D                 mov     ecx, ?babyGridClassName@@3PB_WB ; wchar_t const * const babyGridClassName
.text$mn:00000083                 push    ecx             ; lpClassName
.text$mn:00000084                 push    200h            ; dwExStyle
.text$mn:00000089                 call    dword ptr ds:__imp__CreateWindowExW@48 ; CreateWindowExW(x,x,x,x,x,x,x,x,x,x,x,x)
.text$mn:0000008F                 mov     edx, [ebp+var_4]
.text$mn:00000092                 mov     [edx+0Ch], eax
.text$mn:00000095                 mov     esp, ebp
.text$mn:00000097                 pop     ebp
.text$mn:00000098                 retn    0Ch
.text$mn:00000098 ?init@BabyGridWrapper@@UAEXPAUHINSTANCE__@@PAUHWND__@@H@Z endp
.text$mn:00000098
.text$mn:00000098 ; ---------------------------------------------------------------------------
.text$mn:0000009B                 align 4
.text$mn:0000009B _text$mn        ends
.text$mn:0000009B
.text$mn:0000009C ; ===========================================================================
.text$mn:0000009C
.text$mn:0000009C ; Segment type: Pure code
.text$mn:0000009C ; Segment permissions: Read/Execute
.text$mn:0000009C _text$mn        segment para public 'CODE' use32
.text$mn:0000009C                 assume cs:_text$mn
.text$mn:0000009C                 ;org 9Ch
.text$mn:0000009C ; COMDAT (pick any)
.text$mn:0000009C                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text$mn:0000009C
.text$mn:0000009C ; =============== S U B R O U T I N E =======================================
.text$mn:0000009C
.text$mn:0000009C ; Attributes: bp-based frame
.text$mn:0000009C
.text$mn:0000009C ; void __thiscall Window::init(Window *this, HINSTANCE, HWND)
.text$mn:0000009C                 public ?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
.text$mn:0000009C ?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z proc near
.text$mn:0000009C                                         ; CODE XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+12p
.text$mn:0000009C
.text$mn:0000009C var_4           = dword ptr -4
.text$mn:0000009C arg_0           = dword ptr  8
.text$mn:0000009C arg_4           = dword ptr  0Ch
.text$mn:0000009C
.text$mn:0000009C                 push    ebp
.text$mn:0000009D                 mov     ebp, esp
.text$mn:0000009F                 push    ecx
.text$mn:000000A0                 mov     [ebp+var_4], ecx
.text$mn:000000A3                 mov     eax, [ebp+var_4]
.text$mn:000000A6                 mov     ecx, [ebp+arg_0]
.text$mn:000000A9                 mov     [eax+4], ecx
.text$mn:000000AC                 mov     edx, [ebp+var_4]
.text$mn:000000AF                 mov     eax, [ebp+arg_4]
.text$mn:000000B2                 mov     [edx+8], eax
.text$mn:000000B5                 mov     esp, ebp
.text$mn:000000B7                 pop     ebp
.text$mn:000000B8                 retn    8
.text$mn:000000B8 ?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z endp
.text$mn:000000B8
.text$mn:000000B8 _text$mn        ends
.text$mn:000000B8
UNDEF:000000C0 ; ===========================================================================
UNDEF:000000C0
UNDEF:000000C0 ; Segment type: Externs
UNDEF:000000C0 ; UNDEF
UNDEF:000000C0 ; HWND __stdcall CreateWindowExW(DWORD dwExStyle, LPCWSTR lpClassName, LPCWSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)
UNDEF:000000C0                 extrn __imp__CreateWindowExW@48:near
UNDEF:000000C0                                         ; CODE XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+69p
UNDEF:000000C0                                         ; DATA XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+69r
UNDEF:000000C4 ; unsigned __int16 __cdecl RegisterGridClass(HINSTANCE)
UNDEF:000000C4                 extrn ?RegisterGridClass@@YAGPAUHINSTANCE__@@@Z:near
UNDEF:000000C4                                         ; CODE XREF: BabyGridWrapper::init(HINSTANCE__ *,HWND__ *,int)+29p
UNDEF:000000C4
UNDEF:000000C4
UNDEF:000000C4                 end
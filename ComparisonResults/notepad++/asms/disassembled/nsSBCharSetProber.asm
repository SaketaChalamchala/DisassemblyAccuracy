.text$mn:00000000 ;
.text$mn:00000000 ; +-------------------------------------------------------------------------+
.text$mn:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.text$mn:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.text$mn:00000000 ; |                      License info: 48-3677-7074-51                      |
.text$mn:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.text$mn:00000000 ; +-------------------------------------------------------------------------+
.text$mn:00000000 ;
.text$mn:00000000 ; Input MD5   : 7FC16FEB5472A66B2DC487DF6A4AAF41
.text$mn:00000000 ; Input CRC32 : 10D84CC0
.text$mn:00000000
.text$mn:00000000 ; File Name   : C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\visual.net\Unicode Debug\nsSBCharSetProber.obj
.text$mn:00000000 ; Format      : COFF (X386MAGIC)
.text$mn:00000000 ; includelib "LIBCMTD"
.text$mn:00000000 ; includelib "OLDNAMES"
.text$mn:00000000
.text$mn:00000000                 .686p
.text$mn:00000000                 .mmx
.text$mn:00000000                 .model flat
.text$mn:00000000
.text$mn:00000000 ; ===========================================================================
.text$mn:00000000
.text$mn:00000000 ; Segment type: Pure code
.text$mn:00000000 ; Segment permissions: Read/Execute
.text$mn:00000000 _text$mn        segment para public 'CODE' use32
.text$mn:00000000                 assume cs:_text$mn
.text$mn:00000000                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000000
.text$mn:00000000 ; =============== S U B R O U T I N E =======================================
.text$mn:00000000
.text$mn:00000000 ; Attributes: bp-based frame
.text$mn:00000000
.text$mn:00000000 ; const char *__thiscall nsSingleByteCharSetProber::GetCharSetName(nsSingleByteCharSetProber *__hidden this)
.text$mn:00000000                 public ?GetCharSetName@nsSingleByteCharSetProber@@UAEPBDXZ
.text$mn:00000000 ?GetCharSetName@nsSingleByteCharSetProber@@UAEPBDXZ proc near
.text$mn:00000000
.text$mn:00000000 var_4           = dword ptr -4
.text$mn:00000000
.text$mn:00000000                 push    ebp
.text$mn:00000001                 mov     ebp, esp
.text$mn:00000003                 push    ecx
.text$mn:00000004                 mov     [ebp+var_4], ecx
.text$mn:00000007                 mov     eax, [ebp+var_4]
.text$mn:0000000A                 cmp     dword ptr [eax+2Ch], 0
.text$mn:0000000E                 jnz     short loc_1B
.text$mn:00000010                 mov     ecx, [ebp+var_4]
.text$mn:00000013                 mov     edx, [ecx+8]
.text$mn:00000016                 mov     eax, [edx+10h]
.text$mn:00000019                 jmp     short loc_2E
.text$mn:0000001B ; ---------------------------------------------------------------------------
.text$mn:0000001B
.text$mn:0000001B loc_1B:                                 ; CODE XREF: nsSingleByteCharSetProber::GetCharSetName(void)+Ej
.text$mn:0000001B                 mov     eax, [ebp+var_4]
.text$mn:0000001E                 mov     ecx, [eax+2Ch]
.text$mn:00000021                 mov     edx, [ebp+var_4]
.text$mn:00000024                 mov     eax, [ecx]
.text$mn:00000026                 mov     ecx, [edx+2Ch]
.text$mn:00000029                 mov     edx, [eax+4]
.text$mn:0000002C                 call    edx
.text$mn:0000002E
.text$mn:0000002E loc_2E:                                 ; CODE XREF: nsSingleByteCharSetProber::GetCharSetName(void)+19j
.text$mn:0000002E                 mov     esp, ebp
.text$mn:00000030                 pop     ebp
.text$mn:00000031                 retn
.text$mn:00000031 ?GetCharSetName@nsSingleByteCharSetProber@@UAEPBDXZ endp
.text$mn:00000031
.text$mn:00000031 ; ---------------------------------------------------------------------------
.text$mn:00000032                 align 10h
.text$mn:00000040
.text$mn:00000040 ; =============== S U B R O U T I N E =======================================
.text$mn:00000040
.text$mn:00000040 ; Attributes: bp-based frame
.text$mn:00000040
.text$mn:00000040 ; public: virtual enum  nsProbingState __thiscall nsSingleByteCharSetProber::HandleData(char const *, unsigned int)
.text$mn:00000040                 public ?HandleData@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z
.text$mn:00000040 ?HandleData@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z proc near
.text$mn:00000040
.text$mn:00000040 var_10          = dword ptr -10h
.text$mn:00000040 var_C           = dword ptr -0Ch
.text$mn:00000040 var_8           = dword ptr -8
.text$mn:00000040 var_1           = byte ptr -1
.text$mn:00000040 arg_0           = dword ptr  8
.text$mn:00000040 arg_4           = dword ptr  0Ch
.text$mn:00000040
.text$mn:00000040                 push    ebp
.text$mn:00000041                 mov     ebp, esp
.text$mn:00000043                 sub     esp, 10h
.text$mn:00000046                 push    esi
.text$mn:00000047                 mov     [ebp+var_8], ecx
.text$mn:0000004A                 mov     [ebp+var_C], 0
.text$mn:00000051                 jmp     short loc_5C
.text$mn:00000053 ; ---------------------------------------------------------------------------
.text$mn:00000053
.text$mn:00000053 loc_53:                                 ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+141j
.text$mn:00000053                 mov     eax, [ebp+var_C]
.text$mn:00000056                 add     eax, 1
.text$mn:00000059                 mov     [ebp+var_C], eax
.text$mn:0000005C
.text$mn:0000005C loc_5C:                                 ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+11j
.text$mn:0000005C                 mov     ecx, [ebp+var_C]
.text$mn:0000005F                 cmp     ecx, [ebp+arg_4]
.text$mn:00000062                 jnb     loc_186
.text$mn:00000068                 mov     edx, [ebp+var_8]
.text$mn:0000006B                 mov     eax, [edx+8]
.text$mn:0000006E                 mov     ecx, [ebp+arg_0]
.text$mn:00000071                 add     ecx, [ebp+var_C]
.text$mn:00000074                 movzx   edx, byte ptr [ecx]
.text$mn:00000077                 mov     eax, [eax]
.text$mn:00000079                 mov     cl, [eax+edx]
.text$mn:0000007C                 mov     [ebp+var_1], cl
.text$mn:0000007F                 movzx   edx, [ebp+var_1]
.text$mn:00000083                 cmp     edx, 0FAh ; 'Â·'
.text$mn:00000089                 jge     short loc_9A
.text$mn:0000008B                 mov     eax, [ebp+var_8]
.text$mn:0000008E                 mov     ecx, [eax+24h]
.text$mn:00000091                 add     ecx, 1
.text$mn:00000094                 mov     edx, [ebp+var_8]
.text$mn:00000097                 mov     [edx+24h], ecx
.text$mn:0000009A
.text$mn:0000009A loc_9A:                                 ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+49j
.text$mn:0000009A                 movzx   eax, [ebp+var_1]
.text$mn:0000009E                 cmp     eax, 40h ; '@'
.text$mn:000000A1                 jge     loc_178
.text$mn:000000A7                 mov     ecx, [ebp+var_8]
.text$mn:000000AA                 mov     edx, [ecx+28h]
.text$mn:000000AD                 add     edx, 1
.text$mn:000000B0                 mov     eax, [ebp+var_8]
.text$mn:000000B3                 mov     [eax+28h], edx
.text$mn:000000B6                 mov     ecx, [ebp+var_8]
.text$mn:000000B9                 movzx   edx, byte ptr [ecx+0Dh]
.text$mn:000000BD                 cmp     edx, 40h ; '@'
.text$mn:000000C0                 jge     loc_178
.text$mn:000000C6                 mov     eax, [ebp+var_8]
.text$mn:000000C9                 mov     ecx, [eax+10h]
.text$mn:000000CC                 add     ecx, 1
.text$mn:000000CF                 mov     edx, [ebp+var_8]
.text$mn:000000D2                 mov     [edx+10h], ecx
.text$mn:000000D5                 mov     eax, [ebp+var_8]
.text$mn:000000D8                 movzx   ecx, byte ptr [eax+0Ch]
.text$mn:000000DC                 test    ecx, ecx
.text$mn:000000DE                 jnz     short loc_12D
.text$mn:000000E0                 mov     edx, [ebp+var_8]
.text$mn:000000E3                 mov     eax, [edx+8]
.text$mn:000000E6                 mov     ecx, [ebp+var_8]
.text$mn:000000E9                 movzx   edx, byte ptr [ecx+0Dh]
.text$mn:000000ED                 shl     edx, 6
.text$mn:000000F0                 movzx   ecx, [ebp+var_1]
.text$mn:000000F4                 add     edx, ecx
.text$mn:000000F6                 mov     eax, [eax+4]
.text$mn:000000F9                 movzx   ecx, byte ptr [eax+edx]
.text$mn:000000FD                 mov     edx, [ebp+var_8]
.text$mn:00000100                 mov     eax, [edx+ecx*4+14h]
.text$mn:00000104                 add     eax, 1
.text$mn:00000107                 mov     ecx, [ebp+var_8]
.text$mn:0000010A                 mov     edx, [ecx+8]
.text$mn:0000010D                 movzx   ecx, [ebp+var_1]
.text$mn:00000111                 mov     esi, [ebp+var_8]
.text$mn:00000114                 movzx   esi, byte ptr [esi+0Dh]
.text$mn:00000118                 shl     esi, 6
.text$mn:0000011B                 add     esi, ecx
.text$mn:0000011D                 mov     edx, [edx+4]
.text$mn:00000120                 movzx   ecx, byte ptr [edx+esi]
.text$mn:00000124                 mov     edx, [ebp+var_8]
.text$mn:00000127                 mov     [edx+ecx*4+14h], eax
.text$mn:0000012B                 jmp     short loc_178
.text$mn:0000012D ; ---------------------------------------------------------------------------
.text$mn:0000012D
.text$mn:0000012D loc_12D:                                ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+9Ej
.text$mn:0000012D                 mov     eax, [ebp+var_8]
.text$mn:00000130                 mov     ecx, [eax+8]
.text$mn:00000133                 movzx   edx, [ebp+var_1]
.text$mn:00000137                 shl     edx, 6
.text$mn:0000013A                 mov     eax, [ebp+var_8]
.text$mn:0000013D                 movzx   eax, byte ptr [eax+0Dh]
.text$mn:00000141                 add     edx, eax
.text$mn:00000143                 mov     ecx, [ecx+4]
.text$mn:00000146                 movzx   edx, byte ptr [ecx+edx]
.text$mn:0000014A                 mov     eax, [ebp+var_8]
.text$mn:0000014D                 mov     ecx, [eax+edx*4+14h]
.text$mn:00000151                 add     ecx, 1
.text$mn:00000154                 mov     edx, [ebp+var_8]
.text$mn:00000157                 mov     eax, [edx+8]
.text$mn:0000015A                 mov     edx, [ebp+var_8]
.text$mn:0000015D                 movzx   edx, byte ptr [edx+0Dh]
.text$mn:00000161                 movzx   esi, [ebp+var_1]
.text$mn:00000165                 shl     esi, 6
.text$mn:00000168                 add     esi, edx
.text$mn:0000016A                 mov     eax, [eax+4]
.text$mn:0000016D                 movzx   edx, byte ptr [eax+esi]
.text$mn:00000171                 mov     eax, [ebp+var_8]
.text$mn:00000174                 mov     [eax+edx*4+14h], ecx
.text$mn:00000178
.text$mn:00000178 loc_178:                                ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+61j
.text$mn:00000178                                         ; nsSingleByteCharSetProber::HandleData(char const *,uint)+80j ...
.text$mn:00000178                 mov     ecx, [ebp+var_8]
.text$mn:0000017B                 mov     dl, [ebp+var_1]
.text$mn:0000017E                 mov     [ecx+0Dh], dl
.text$mn:00000181                 jmp     loc_53
.text$mn:00000186 ; ---------------------------------------------------------------------------
.text$mn:00000186
.text$mn:00000186 loc_186:                                ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+22j
.text$mn:00000186                 mov     eax, [ebp+var_8]
.text$mn:00000189                 cmp     dword ptr [eax+4], 0
.text$mn:0000018D                 jnz     short loc_1DD
.text$mn:0000018F                 mov     ecx, [ebp+var_8]
.text$mn:00000192                 cmp     dword ptr [ecx+10h], 400h
.text$mn:00000199                 jbe     short loc_1DD
.text$mn:0000019B                 mov     edx, [ebp+var_8]
.text$mn:0000019E                 mov     eax, [edx]
.text$mn:000001A0                 mov     ecx, [ebp+var_8]
.text$mn:000001A3                 mov     edx, [eax+14h]
.text$mn:000001A6                 call    edx
.text$mn:000001A8                 fstp    [ebp+var_10]
.text$mn:000001AB                 movss   xmm0, [ebp+var_10]
.text$mn:000001B0                 comiss  xmm0, ds:__real@3f733333
.text$mn:000001B7                 jbe     short loc_1C5
.text$mn:000001B9                 mov     eax, [ebp+var_8]
.text$mn:000001BC                 mov     dword ptr [eax+4], 1
.text$mn:000001C3                 jmp     short loc_1DD
.text$mn:000001C5 ; ---------------------------------------------------------------------------
.text$mn:000001C5
.text$mn:000001C5 loc_1C5:                                ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+177j
.text$mn:000001C5                 movss   xmm0, ds:__real@3d4ccccd
.text$mn:000001CD                 comiss  xmm0, [ebp+var_10]
.text$mn:000001D1                 jbe     short loc_1DD
.text$mn:000001D3                 mov     ecx, [ebp+var_8]
.text$mn:000001D6                 mov     dword ptr [ecx+4], 2
.text$mn:000001DD
.text$mn:000001DD loc_1DD:                                ; CODE XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+14Dj
.text$mn:000001DD                                         ; nsSingleByteCharSetProber::HandleData(char const *,uint)+159j ...
.text$mn:000001DD                 mov     edx, [ebp+var_8]
.text$mn:000001E0                 mov     eax, [edx+4]
.text$mn:000001E3                 pop     esi
.text$mn:000001E4                 mov     esp, ebp
.text$mn:000001E6                 pop     ebp
.text$mn:000001E7                 retn    8
.text$mn:000001E7 ?HandleData@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z endp
.text$mn:000001E7
.text$mn:000001E7 ; ---------------------------------------------------------------------------
.text$mn:000001EA                 align 10h
.text$mn:000001F0
.text$mn:000001F0 ; =============== S U B R O U T I N E =======================================
.text$mn:000001F0
.text$mn:000001F0 ; Attributes: bp-based frame
.text$mn:000001F0
.text$mn:000001F0 ; void __thiscall nsSingleByteCharSetProber::Reset(nsSingleByteCharSetProber *__hidden this)
.text$mn:000001F0                 public ?Reset@nsSingleByteCharSetProber@@UAEXXZ
.text$mn:000001F0 ?Reset@nsSingleByteCharSetProber@@UAEXXZ proc near
.text$mn:000001F0
.text$mn:000001F0 var_8           = dword ptr -8
.text$mn:000001F0 var_4           = dword ptr -4
.text$mn:000001F0
.text$mn:000001F0                 push    ebp
.text$mn:000001F1                 mov     ebp, esp
.text$mn:000001F3                 sub     esp, 8
.text$mn:000001F6                 mov     [ebp+var_4], ecx
.text$mn:000001F9                 mov     eax, [ebp+var_4]
.text$mn:000001FC                 mov     dword ptr [eax+4], 0
.text$mn:00000203                 mov     ecx, [ebp+var_4]
.text$mn:00000206                 mov     byte ptr [ecx+0Dh], 0FFh
.text$mn:0000020A                 mov     [ebp+var_8], 0
.text$mn:00000211                 jmp     short loc_21C
.text$mn:00000213 ; ---------------------------------------------------------------------------
.text$mn:00000213
.text$mn:00000213 loc_213:                                ; CODE XREF: nsSingleByteCharSetProber::Reset(void)+40j
.text$mn:00000213                 mov     edx, [ebp+var_8]
.text$mn:00000216                 add     edx, 1
.text$mn:00000219                 mov     [ebp+var_8], edx
.text$mn:0000021C
.text$mn:0000021C loc_21C:                                ; CODE XREF: nsSingleByteCharSetProber::Reset(void)+21j
.text$mn:0000021C                 cmp     [ebp+var_8], 4
.text$mn:00000220                 jnb     short loc_232
.text$mn:00000222                 mov     eax, [ebp+var_8]
.text$mn:00000225                 mov     ecx, [ebp+var_4]
.text$mn:00000228                 mov     dword ptr [ecx+eax*4+14h], 0
.text$mn:00000230                 jmp     short loc_213
.text$mn:00000232 ; ---------------------------------------------------------------------------
.text$mn:00000232
.text$mn:00000232 loc_232:                                ; CODE XREF: nsSingleByteCharSetProber::Reset(void)+30j
.text$mn:00000232                 mov     edx, [ebp+var_4]
.text$mn:00000235                 mov     dword ptr [edx+10h], 0
.text$mn:0000023C                 mov     eax, [ebp+var_4]
.text$mn:0000023F                 mov     dword ptr [eax+24h], 0
.text$mn:00000246                 mov     ecx, [ebp+var_4]
.text$mn:00000249                 mov     dword ptr [ecx+28h], 0
.text$mn:00000250                 mov     esp, ebp
.text$mn:00000252                 pop     ebp
.text$mn:00000253                 retn
.text$mn:00000253 ?Reset@nsSingleByteCharSetProber@@UAEXXZ endp
.text$mn:00000253
.text$mn:00000253 ; ---------------------------------------------------------------------------
.text$mn:00000254                 align 10h
.text$mn:00000260
.text$mn:00000260 ; =============== S U B R O U T I N E =======================================
.text$mn:00000260
.text$mn:00000260 ; Attributes: bp-based frame
.text$mn:00000260
.text$mn:00000260 ; float __thiscall nsSingleByteCharSetProber::GetConfidence(nsSingleByteCharSetProber *__hidden this)
.text$mn:00000260                 public ?GetConfidence@nsSingleByteCharSetProber@@UAEMXZ
.text$mn:00000260 ?GetConfidence@nsSingleByteCharSetProber@@UAEMXZ proc near
.text$mn:00000260
.text$mn:00000260 var_38          = qword ptr -38h
.text$mn:00000260 var_30          = qword ptr -30h
.text$mn:00000260 var_28          = qword ptr -28h
.text$mn:00000260 var_20          = qword ptr -20h
.text$mn:00000260 var_18          = dword ptr -18h
.text$mn:00000260 var_14          = dword ptr -14h
.text$mn:00000260 var_10          = dword ptr -10h
.text$mn:00000260 var_C           = dword ptr -0Ch
.text$mn:00000260 var_8           = dword ptr -8
.text$mn:00000260 var_4           = dword ptr -4
.text$mn:00000260
.text$mn:00000260                 push    ebp
.text$mn:00000261                 mov     ebp, esp
.text$mn:00000263                 sub     esp, 38h
.text$mn:00000266                 mov     [ebp+var_4], ecx
.text$mn:00000269                 mov     eax, [ebp+var_4]
.text$mn:0000026C                 cmp     dword ptr [eax+10h], 0
.text$mn:00000270                 jbe     loc_365
.text$mn:00000276                 mov     ecx, 4
.text$mn:0000027B                 imul    edx, ecx, 3
.text$mn:0000027E                 mov     eax, [ebp+var_4]
.text$mn:00000281                 mov     ecx, [eax+edx+14h]
.text$mn:00000285                 mov     [ebp+var_C], ecx
.text$mn:00000288                 cvtsi2sd xmm0, [ebp+var_C]
.text$mn:0000028D                 mov     edx, [ebp+var_C]
.text$mn:00000290                 shr     edx, 1Fh
.text$mn:00000293                 addsd   xmm0, ds:__xmm@41f00000000000000000000000000000[edx*8]
.text$mn:0000029C                 movsd   [ebp+var_20], xmm0
.text$mn:000002A1                 cvtsd2ss xmm0, [ebp+var_20]
.text$mn:000002A6                 mulss   xmm0, ds:__real@3f800000
.text$mn:000002AE                 mov     eax, [ebp+var_4]
.text$mn:000002B1                 mov     ecx, [eax+10h]
.text$mn:000002B4                 mov     [ebp+var_10], ecx
.text$mn:000002B7                 cvtsi2sd xmm1, [ebp+var_10]
.text$mn:000002BC                 mov     edx, [ebp+var_10]
.text$mn:000002BF                 shr     edx, 1Fh
.text$mn:000002C2                 addsd   xmm1, ds:__xmm@41f00000000000000000000000000000[edx*8]
.text$mn:000002CB                 movsd   [ebp+var_28], xmm1
.text$mn:000002D0                 cvtsd2ss xmm1, [ebp+var_28]
.text$mn:000002D5                 divss   xmm0, xmm1
.text$mn:000002D9                 mov     eax, [ebp+var_4]
.text$mn:000002DC                 mov     ecx, [eax+8]
.text$mn:000002DF                 divss   xmm0, dword ptr [ecx+8]
.text$mn:000002E4                 movss   [ebp+var_8], xmm0
.text$mn:000002E9                 mov     edx, [ebp+var_4]
.text$mn:000002EC                 mov     eax, [edx+28h]
.text$mn:000002EF                 mov     [ebp+var_14], eax
.text$mn:000002F2                 cvtsi2sd xmm0, [ebp+var_14]
.text$mn:000002F7                 mov     ecx, [ebp+var_14]
.text$mn:000002FA                 shr     ecx, 1Fh
.text$mn:000002FD                 addsd   xmm0, ds:__xmm@41f00000000000000000000000000000[ecx*8]
.text$mn:00000306                 movsd   [ebp+var_30], xmm0
.text$mn:0000030B                 cvtsd2ss xmm0, [ebp+var_30]
.text$mn:00000310                 mulss   xmm0, [ebp+var_8]
.text$mn:00000315                 mov     edx, [ebp+var_4]
.text$mn:00000318                 mov     eax, [edx+24h]
.text$mn:0000031B                 mov     [ebp+var_18], eax
.text$mn:0000031E                 cvtsi2sd xmm1, [ebp+var_18]
.text$mn:00000323                 mov     ecx, [ebp+var_18]
.text$mn:00000326                 shr     ecx, 1Fh
.text$mn:00000329                 addsd   xmm1, ds:__xmm@41f00000000000000000000000000000[ecx*8]
.text$mn:00000332                 movsd   [ebp+var_38], xmm1
.text$mn:00000337                 cvtsd2ss xmm1, [ebp+var_38]
.text$mn:0000033C                 divss   xmm0, xmm1
.text$mn:00000340                 movss   [ebp+var_8], xmm0
.text$mn:00000345                 movss   xmm0, [ebp+var_8]
.text$mn:0000034A                 comiss  xmm0, ds:__real@3f800000
.text$mn:00000351                 jb      short loc_360
.text$mn:00000353                 movss   xmm0, ds:__real@3f7d70a4
.text$mn:0000035B                 movss   [ebp+var_8], xmm0
.text$mn:00000360
.text$mn:00000360 loc_360:                                ; CODE XREF: nsSingleByteCharSetProber::GetConfidence(void)+F1j
.text$mn:00000360                 fld     [ebp+var_8]
.text$mn:00000363                 jmp     short loc_36B
.text$mn:00000365 ; ---------------------------------------------------------------------------
.text$mn:00000365
.text$mn:00000365 loc_365:                                ; CODE XREF: nsSingleByteCharSetProber::GetConfidence(void)+10j
.text$mn:00000365                 fld     __real@3c23d70a
.text$mn:0000036B
.text$mn:0000036B loc_36B:                                ; CODE XREF: nsSingleByteCharSetProber::GetConfidence(void)+103j
.text$mn:0000036B                 mov     esp, ebp
.text$mn:0000036D                 pop     ebp
.text$mn:0000036E                 retn
.text$mn:0000036E ?GetConfidence@nsSingleByteCharSetProber@@UAEMXZ endp
.text$mn:0000036E
.text$mn:0000036E ; ---------------------------------------------------------------------------
.text$mn:0000036F                 align 10h
.text$mn:0000036F _text$mn        ends
.text$mn:0000036F
.rdata:00000370 ; ===========================================================================
.rdata:00000370
.rdata:00000370 ; Segment type: Pure data
.rdata:00000370 ; Segment permissions: Read
.rdata:00000370 _rdata          segment dword public 'DATA' use32
.rdata:00000370                 assume cs:_rdata
.rdata:00000370                 ;org 370h
.rdata:00000370 ; COMDAT (pick any)
.rdata:00000370                 public __real@3c23d70a
.rdata:00000370 __real@3c23d70a dd 0.0099999998         ; DATA XREF: nsSingleByteCharSetProber::GetConfidence(void):loc_365r
.rdata:00000370 _rdata          ends
.rdata:00000370
.rdata:00000374 ; ===========================================================================
.rdata:00000374
.rdata:00000374 ; Segment type: Pure data
.rdata:00000374 ; Segment permissions: Read
.rdata:00000374 _rdata          segment dword public 'DATA' use32
.rdata:00000374                 assume cs:_rdata
.rdata:00000374                 ;org 374h
.rdata:00000374 ; COMDAT (pick any)
.rdata:00000374                 public __real@3d4ccccd
.rdata:00000374 __real@3d4ccccd dd 3D4CCCCDh            ; DATA XREF: nsSingleByteCharSetProber::HandleData(char const *,uint):loc_1C5r
.rdata:00000374 _rdata          ends
.rdata:00000374
.rdata:00000378 ; ===========================================================================
.rdata:00000378
.rdata:00000378 ; Segment type: Pure data
.rdata:00000378 ; Segment permissions: Read
.rdata:00000378 _rdata          segment dword public 'DATA' use32
.rdata:00000378                 assume cs:_rdata
.rdata:00000378                 ;org 378h
.rdata:00000378 ; COMDAT (pick any)
.rdata:00000378                 public __real@3f733333
.rdata:00000378 __real@3f733333 dd 3F733333h            ; DATA XREF: nsSingleByteCharSetProber::HandleData(char const *,uint)+170r
.rdata:00000378 _rdata          ends
.rdata:00000378
.rdata:0000037C ; ===========================================================================
.rdata:0000037C
.rdata:0000037C ; Segment type: Pure data
.rdata:0000037C ; Segment permissions: Read
.rdata:0000037C _rdata          segment dword public 'DATA' use32
.rdata:0000037C                 assume cs:_rdata
.rdata:0000037C                 ;org 37Ch
.rdata:0000037C ; COMDAT (pick any)
.rdata:0000037C                 public __real@3f7d70a4
.rdata:0000037C __real@3f7d70a4 dd 3F7D70A4h            ; DATA XREF: nsSingleByteCharSetProber::GetConfidence(void)+F3r
.rdata:0000037C _rdata          ends
.rdata:0000037C
.rdata:00000380 ; ===========================================================================
.rdata:00000380
.rdata:00000380 ; Segment type: Pure data
.rdata:00000380 ; Segment permissions: Read
.rdata:00000380 _rdata          segment dword public 'DATA' use32
.rdata:00000380                 assume cs:_rdata
.rdata:00000380                 ;org 380h
.rdata:00000380 ; COMDAT (pick any)
.rdata:00000380                 public __real@3f800000
.rdata:00000380 __real@3f800000 dd 3F800000h            ; DATA XREF: nsSingleByteCharSetProber::GetConfidence(void)+46r
.rdata:00000380                                         ; nsSingleByteCharSetProber::GetConfidence(void)+EAr
.rdata:00000380 _rdata          ends
.rdata:00000380
.rdata:00000384 ; ===========================================================================
.rdata:00000384
.rdata:00000384 ; Segment type: Pure data
.rdata:00000384 ; Segment permissions: Read
.rdata:00000384 _rdata          segment para public 'DATA' use32
.rdata:00000384                 assume cs:_rdata
.rdata:00000384                 ;org 384h
.rdata:00000384 ; COMDAT (pick any)
.rdata:00000384                 public __xmm@41f00000000000000000000000000000
.rdata:00000384 __xmm@41f00000000000000000000000000000 dq 0
.rdata:00000384                                         ; DATA XREF: nsSingleByteCharSetProber::GetConfidence(void)+33r
.rdata:00000384                                         ; nsSingleByteCharSetProber::GetConfidence(void)+62r ...
.rdata:0000038C                 db    0
.rdata:0000038D                 db    0
.rdata:0000038E                 db    0
.rdata:0000038F                 db    0
.rdata:00000390                 db    0
.rdata:00000391                 db    0
.rdata:00000392                 db 0F0h ; =
.rdata:00000393                 db  41h ; A
.rdata:00000393 _rdata          ends
.rdata:00000393
UNDEF:000003A0 ; ===========================================================================
UNDEF:000003A0
UNDEF:000003A0 ; Segment type: Externs
UNDEF:000003A0 ; UNDEF
UNDEF:000003A0                 extrn __fltused:near
UNDEF:000003A0
UNDEF:000003A0
UNDEF:000003A0                 end
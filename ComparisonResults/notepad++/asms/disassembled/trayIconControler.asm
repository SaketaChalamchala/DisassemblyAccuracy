.rdata:00000000 ;
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
.rdata:00000000 ; |           Copyright (c) 2015 Hex-Rays, <support@hex-rays.com>           |
.rdata:00000000 ; |                      License info: 48-3677-7074-51                      |
.rdata:00000000 ; |             Michalis Polychronakis, Stony Brook University              |
.rdata:00000000 ; +-------------------------------------------------------------------------+
.rdata:00000000 ;
.rdata:00000000 ; Input MD5   : 7DFB8280BC14A55B0AB02A6FE72C7B66
.rdata:00000000 ; Input CRC32 : C4159983
.rdata:00000000
.rdata:00000000 ; File Name   : C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\visual.net\Unicode Debug\trayIconControler.obj
.rdata:00000000 ; Format      : COFF (X386MAGIC)
.rdata:00000000 ; includelib "uuid.lib"
.rdata:00000000 ; includelib "LIBCMTD"
.rdata:00000000 ; includelib "OLDNAMES"
.rdata:00000000
.rdata:00000000                 include uni.inc ; see unicode subdir of ida for info on unicode
.rdata:00000000
.rdata:00000000                 .686p
.rdata:00000000                 .mmx
.rdata:00000000                 .model flat
.rdata:00000000
.rdata:00000000 ; ===========================================================================
.rdata:00000000
.rdata:00000000 ; Segment type: Pure data
.rdata:00000000 ; Segment permissions: Read
.rdata:00000000 _rdata          segment dword public 'DATA' use32
.rdata:00000000                 assume cs:_rdata
.rdata:00000000 ; const WCHAR _SG63539
.rdata:00000000 $SG63539:                               ; DATA XREF: trayIconControler::trayIconControler(HWND__ *,uint,uint,HICON__ *,wchar_t *)+4Fo
.rdata:00000000                 unicode 0, <TaskbarCreated>,0
.rdata:0000001E                 align 10h
.rdata:0000001E _rdata          ends
.rdata:0000001E
.text$mn:00000020 ; ===========================================================================
.text$mn:00000020
.text$mn:00000020 ; Segment type: Pure code
.text$mn:00000020 ; Segment permissions: Read/Execute
.text$mn:00000020 _text$mn        segment para public 'CODE' use32
.text$mn:00000020                 assume cs:_text$mn
.text$mn:00000020                 ;org 20h
.text$mn:00000020                 assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
.text$mn:00000020
.text$mn:00000020 ; =============== S U B R O U T I N E =======================================
.text$mn:00000020
.text$mn:00000020 ; Attributes: bp-based frame
.text$mn:00000020
.text$mn:00000020 ; _DWORD __thiscall trayIconControler::trayIconControler(trayIconControler *this, HWND, unsigned int, unsigned int, HICON, wchar_t *)
.text$mn:00000020                 public ??0trayIconControler@@QAE@PAUHWND__@@IIPAUHICON__@@PA_W@Z
.text$mn:00000020 ??0trayIconControler@@QAE@PAUHWND__@@IIPAUHICON__@@PA_W@Z proc near
.text$mn:00000020
.text$mn:00000020 var_4           = dword ptr -4
.text$mn:00000020 arg_0           = dword ptr  8
.text$mn:00000020 arg_4           = dword ptr  0Ch
.text$mn:00000020 arg_8           = dword ptr  10h
.text$mn:00000020 arg_C           = dword ptr  14h
.text$mn:00000020 lpString2       = dword ptr  18h
.text$mn:00000020
.text$mn:00000020                 push    ebp
.text$mn:00000021                 mov     ebp, esp
.text$mn:00000023                 push    ecx
.text$mn:00000024                 mov     [ebp+var_4], ecx
.text$mn:00000027                 mov     eax, [ebp+var_4]
.text$mn:0000002A                 mov     dword ptr [eax], 3B8h
.text$mn:00000030                 mov     ecx, [ebp+var_4]
.text$mn:00000033                 mov     edx, [ebp+arg_0]
.text$mn:00000036                 mov     [ecx+4], edx
.text$mn:00000039                 mov     eax, [ebp+var_4]
.text$mn:0000003C                 mov     ecx, [ebp+arg_4]
.text$mn:0000003F                 mov     [eax+8], ecx
.text$mn:00000042                 mov     edx, [ebp+var_4]
.text$mn:00000045                 mov     dword ptr [edx+0Ch], 7
.text$mn:0000004C                 mov     eax, [ebp+var_4]
.text$mn:0000004F                 mov     ecx, [ebp+arg_8]
.text$mn:00000052                 mov     [eax+10h], ecx
.text$mn:00000055                 mov     edx, [ebp+var_4]
.text$mn:00000058                 mov     eax, [ebp+arg_C]
.text$mn:0000005B                 mov     [edx+14h], eax
.text$mn:0000005E                 mov     ecx, [ebp+lpString2]
.text$mn:00000061                 push    ecx             ; lpString2
.text$mn:00000062                 mov     edx, [ebp+var_4]
.text$mn:00000065                 add     edx, 18h
.text$mn:00000068                 push    edx             ; lpString1
.text$mn:00000069                 call    dword ptr ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
.text$mn:0000006F                 push    offset $SG63539 ; "TaskbarCreated"
.text$mn:00000074                 call    dword ptr ds:__imp__RegisterWindowMessageW@4 ; RegisterWindowMessageW(x)
.text$mn:0000007A                 mov     eax, [ebp+var_4]
.text$mn:0000007D                 mov     byte ptr [eax+3B8h], 0
.text$mn:00000084                 mov     eax, [ebp+var_4]
.text$mn:00000087                 mov     esp, ebp
.text$mn:00000089                 pop     ebp
.text$mn:0000008A                 retn    14h
.text$mn:0000008A ??0trayIconControler@@QAE@PAUHWND__@@IIPAUHICON__@@PA_W@Z endp
.text$mn:0000008A
.text$mn:0000008A ; ---------------------------------------------------------------------------
.text$mn:0000008D                 align 10h
.text$mn:00000090
.text$mn:00000090 ; =============== S U B R O U T I N E =======================================
.text$mn:00000090
.text$mn:00000090 ; Attributes: bp-based frame
.text$mn:00000090
.text$mn:00000090 ; int __thiscall trayIconControler::doTrayIcon(trayIconControler *this, unsigned __int32)
.text$mn:00000090                 public ?doTrayIcon@trayIconControler@@QAEHK@Z
.text$mn:00000090 ?doTrayIcon@trayIconControler@@QAEHK@Z proc near
.text$mn:00000090
.text$mn:00000090 var_8           = dword ptr -8
.text$mn:00000090 lpData          = dword ptr -4
.text$mn:00000090 dwMessage       = dword ptr  8
.text$mn:00000090
.text$mn:00000090                 push    ebp
.text$mn:00000091                 mov     ebp, esp
.text$mn:00000093                 sub     esp, 8
.text$mn:00000096                 mov     [ebp+lpData], ecx
.text$mn:00000099                 cmp     [ebp+dwMessage], 0
.text$mn:0000009D                 jz      short loc_AC
.text$mn:0000009F                 cmp     [ebp+dwMessage], 2
.text$mn:000000A3                 jz      short loc_AC
.text$mn:000000A5                 mov     eax, 1
.text$mn:000000AA                 jmp     short loc_115
.text$mn:000000AC ; ---------------------------------------------------------------------------
.text$mn:000000AC
.text$mn:000000AC loc_AC:                                 ; CODE XREF: trayIconControler::doTrayIcon(ulong)+Dj
.text$mn:000000AC                                         ; trayIconControler::doTrayIcon(ulong)+13j
.text$mn:000000AC                 mov     eax, [ebp+lpData]
.text$mn:000000AF                 movzx   ecx, byte ptr [eax+3B8h]
.text$mn:000000B6                 test    ecx, ecx
.text$mn:000000B8                 jz      short loc_C0
.text$mn:000000BA                 cmp     [ebp+dwMessage], 0
.text$mn:000000BE                 jz      short loc_D4
.text$mn:000000C0
.text$mn:000000C0 loc_C0:                                 ; CODE XREF: trayIconControler::doTrayIcon(ulong)+28j
.text$mn:000000C0                 mov     edx, [ebp+lpData]
.text$mn:000000C3                 movzx   eax, byte ptr [edx+3B8h]
.text$mn:000000CA                 test    eax, eax
.text$mn:000000CC                 jnz     short loc_DB
.text$mn:000000CE                 cmp     [ebp+dwMessage], 2
.text$mn:000000D2                 jnz     short loc_DB
.text$mn:000000D4
.text$mn:000000D4 loc_D4:                                 ; CODE XREF: trayIconControler::doTrayIcon(ulong)+2Ej
.text$mn:000000D4                 mov     eax, 2
.text$mn:000000D9                 jmp     short loc_115
.text$mn:000000DB ; ---------------------------------------------------------------------------
.text$mn:000000DB
.text$mn:000000DB loc_DB:                                 ; CODE XREF: trayIconControler::doTrayIcon(ulong)+3Cj
.text$mn:000000DB                                         ; trayIconControler::doTrayIcon(ulong)+42j
.text$mn:000000DB                 mov     ecx, [ebp+lpData]
.text$mn:000000DE                 push    ecx             ; lpData
.text$mn:000000DF                 mov     edx, [ebp+dwMessage]
.text$mn:000000E2                 push    edx             ; dwMessage
.text$mn:000000E3                 call    dword ptr ds:__imp__Shell_NotifyIconW@8 ; Shell_NotifyIconW(x,x)
.text$mn:000000E9                 mov     eax, [ebp+lpData]
.text$mn:000000EC                 movzx   ecx, byte ptr [eax+3B8h]
.text$mn:000000F3                 test    ecx, ecx
.text$mn:000000F5                 jnz     short loc_100
.text$mn:000000F7                 mov     [ebp+var_8], 1
.text$mn:000000FE                 jmp     short loc_107
.text$mn:00000100 ; ---------------------------------------------------------------------------
.text$mn:00000100
.text$mn:00000100 loc_100:                                ; CODE XREF: trayIconControler::doTrayIcon(ulong)+65j
.text$mn:00000100                 mov     [ebp+var_8], 0
.text$mn:00000107
.text$mn:00000107 loc_107:                                ; CODE XREF: trayIconControler::doTrayIcon(ulong)+6Ej
.text$mn:00000107                 mov     edx, [ebp+lpData]
.text$mn:0000010A                 mov     al, byte ptr [ebp+var_8]
.text$mn:0000010D                 mov     [edx+3B8h], al
.text$mn:00000113                 xor     eax, eax
.text$mn:00000115
.text$mn:00000115 loc_115:                                ; CODE XREF: trayIconControler::doTrayIcon(ulong)+1Aj
.text$mn:00000115                                         ; trayIconControler::doTrayIcon(ulong)+49j
.text$mn:00000115                 mov     esp, ebp
.text$mn:00000117                 pop     ebp
.text$mn:00000118                 retn    4
.text$mn:00000118 ?doTrayIcon@trayIconControler@@QAEHK@Z endp
.text$mn:00000118
.text$mn:00000118 _text$mn        ends
.text$mn:00000118
UNDEF:00000120 ; ===========================================================================
UNDEF:00000120
UNDEF:00000120 ; Segment type: Externs
UNDEF:00000120 ; UNDEF
UNDEF:00000120 ; LPWSTR __stdcall lstrcpyW(LPWSTR lpString1, LPCWSTR lpString2)
UNDEF:00000120                 extrn __imp__lstrcpyW@8:near
UNDEF:00000120                                         ; CODE XREF: trayIconControler::trayIconControler(HWND__ *,uint,uint,HICON__ *,wchar_t *)+49p
UNDEF:00000120                                         ; DATA XREF: trayIconControler::trayIconControler(HWND__ *,uint,uint,HICON__ *,wchar_t *)+49r
UNDEF:00000124 ; UINT __stdcall RegisterWindowMessageW(LPCWSTR lpString)
UNDEF:00000124                 extrn __imp__RegisterWindowMessageW@4:near
UNDEF:00000124                                         ; CODE XREF: trayIconControler::trayIconControler(HWND__ *,uint,uint,HICON__ *,wchar_t *)+54p
UNDEF:00000124                                         ; DATA XREF: trayIconControler::trayIconControler(HWND__ *,uint,uint,HICON__ *,wchar_t *)+54r
UNDEF:00000128 ; BOOL __stdcall Shell_NotifyIconW(DWORD dwMessage, PNOTIFYICONDATAW lpData)
UNDEF:00000128                 extrn __imp__Shell_NotifyIconW@8:near
UNDEF:00000128                                         ; CODE XREF: trayIconControler::doTrayIcon(ulong)+53p
UNDEF:00000128                                         ; DATA XREF: trayIconControler::doTrayIcon(ulong)+53r
UNDEF:00000128
UNDEF:00000128
UNDEF:00000128                 end
; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\ScitillaComponent\FunctionCallTip.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG143412 DB	'12 12 56 1', 00H
	ORG $+1
$SG143413 DB	' ', 09H, 'c #FFFFFF', 00H
$SG143414 DB	'.', 09H, 'c #8AB2E9', 00H
$SG143415 DB	'+', 09H, 'c #CCDCF6', 00H
$SG143416 DB	'@', 09H, 'c #80ABEA', 00H
$SG143417 DB	'#', 09H, 'c #7DA9E8', 00H
$SG143418 DB	'$', 09H, 'c #C7DAF3', 00H
$SG143419 DB	'%', 09H, 'c #79A7E6', 00H
$SG143420 DB	'&', 09H, 'c #ADC8EF', 00H
$SG143421 DB	'*', 09H, 'c #87B0E8', 00H
$SG143422 DB	'=', 09H, 'c #BBD2F0', 00H
$SG143423 DB	'-', 09H, 'c #6EA0E2', 00H
$SG143424 DB	';', 09H, 'c #A8C7EE', 00H
$SG143425 DB	'>', 09H, 'c #A3C2ED', 00H
$SG143426 DB	',', 09H, 'c #75A4E3', 00H
$SG143427 DB	'''', 09H, 'c #A7C4EB', 00H
$SG143428 DB	')', 09H, 'c #6297E1', 00H
$SG143429 DB	'!', 09H, 'c #A1C1EC', 00H
$SG143430 DB	'~', 09H, 'c #92B7E8', 00H
$SG143431 DB	'{', 09H, 'c #99BBE9', 00H
$SG143432 DB	']', 09H, 'c #6197DD', 00H
$SG143433 DB	'^', 09H, 'c #96B9E6', 00H
$SG143434 DB	'/', 09H, 'c #538EDB', 00H
$SG143435 DB	'(', 09H, 'c #99BBEA', 00H
$SG143436 DB	'_', 09H, 'c #80AAE3', 00H
$SG143437 DB	':', 09H, 'c #81ABE3', 00H
$SG143438 DB	'<', 09H, 'c #8AB1E4', 00H
$SG143439 DB	'[', 09H, 'c #4B88D6', 00H
$SG143440 DB	'}', 09H, 'c #4882D1', 00H
$SG143441 DB	'|', 09H, 'c #4384D6', 00H
$SG143442 DB	'1', 09H, 'c #90B5E7', 00H
$SG143443 DB	'2', 09H, 'c #74A3E0', 00H
$SG143444 DB	'3', 09H, 'c #77A4E0', 00H
$SG143445 DB	'4', 09H, 'c #81ABE2', 00H
$SG143446 DB	'5', 09H, 'c #437FD3', 00H
$SG143447 DB	'6', 09H, 'c #7FA2DF', 00H
$SG143448 DB	'7', 09H, 'c #3577D2', 00H
$SG143449 DB	'8', 09H, 'c #87AFE4', 00H
$SG143450 DB	'9', 09H, 'c #72A1DF', 00H
$SG143451 DB	'0', 09H, 'c #7CA9E1', 00H
$SG143452 DB	'a', 09H, 'c #3F7AD0', 00H
$SG143453 DB	'b', 09H, 'c #85A4DE', 00H
$SG143454 DB	'c', 09H, 'c #FBFCFE', 00H
$SG143455 DB	'd', 09H, 'c #236ECD', 00H
$SG143456 DB	'e', 09H, 'c #7EA8E1', 00H
$SG143457 DB	'f', 09H, 'c #79A6E0', 00H
$SG143458 DB	'g', 09H, 'c #3D77D0', 00H
$SG143459 DB	'h', 09H, 'c #87A4DC', 00H
$SG143460 DB	'i', 09H, 'c #1A62C9', 00H
$SG143461 DB	'j', 09H, 'c #75A3DF', 00H
$SG143462 DB	'k', 09H, 'c #3C74CF', 00H
$SG143463 DB	'l', 09H, 'c #8DA6DE', 00H
$SG143464 DB	'm', 09H, 'c #1859C4', 00H
$SG143465 DB	'n', 09H, 'c #3B71CC', 00H
$SG143466 DB	'o', 09H, 'c #8EA5DD', 00H
$SG143467 DB	'p', 09H, 'c #164EC0', 00H
$SG143468 DB	'q', 09H, 'c #92A7DD', 00H
$SG143469 DB	'    .+      ', 00H
	ORG $+3
$SG143470 DB	'    @#$     ', 00H
	ORG $+3
$SG143471 DB	'    %&*=    ', 00H
	ORG $+3
$SG143472 DB	'    -;>,''   ', 00H
	ORG $+3
$SG143473 DB	'    )!~{]^  ', 00H
	ORG $+3
$SG143474 DB	'    /(_:<[} ', 00H
	ORG $+3
$SG143475 DB	'    |123456 ', 00H
	ORG $+3
$SG143476 DB	'    7890abc ', 00H
	ORG $+3
$SG143477 DB	'    defgh   ', 00H
	ORG $+3
$SG143478 DB	'    ijkl    ', 00H
	ORG $+3
$SG143479 DB	'    mno     ', 00H
	ORG $+3
$SG143480 DB	'    pq      ', 00H
	ORG $+3
$SG143482 DB	'12 12 54 1', 00H
	ORG $+1
$SG143483 DB	' ', 09H, 'c #FFFFFF', 00H
$SG143484 DB	'.', 09H, 'c #C4D7F3', 00H
$SG143485 DB	'+', 09H, 'c #72A1E3', 00H
$SG143486 DB	'@', 09H, 'c #C1D6F2', 00H
$SG143487 DB	'#', 09H, 'c #6397E1', 00H
$SG143488 DB	'$', 09H, 'c #5990DD', 00H
$SG143489 DB	'%', 09H, 'c #BBD2F0', 00H
$SG143490 DB	'&', 09H, 'c #7AA6E5', 00H
$SG143491 DB	'*', 09H, 'c #9ABDEA', 00H
$SG143492 DB	'=', 09H, 'c #4A87D9', 00H
$SG143493 DB	'-', 09H, 'c #B1CAEE', 00H
$SG143494 DB	';', 09H, 'c #75A4E3', 00H
$SG143495 DB	'>', 09H, 'c #99BBE9', 00H
$SG143496 DB	',', 09H, 'c #95B9E8', 00H
$SG143497 DB	'''', 09H, 'c #3A7CD4', 00H
$SG143498 DB	')', 09H, 'c #A9C6EC', 00H
$SG143499 DB	'!', 09H, 'c #71A0E0', 00H
$SG143500 DB	'~', 09H, 'c #86AFE5', 00H
$SG143501 DB	'{', 09H, 'c #8DB2E6', 00H
$SG143502 DB	']', 09H, 'c #2A72CF', 00H
$SG143503 DB	'^', 09H, 'c #73A0E0', 00H
$SG143504 DB	'/', 09H, 'c #6B9DE0', 00H
$SG143505 DB	'(', 09H, 'c #95B8E8', 00H
$SG143506 DB	'_', 09H, 'c #81ABE3', 00H
$SG143507 DB	':', 09H, 'c #72A1DF', 00H
$SG143508 DB	'<', 09H, 'c #83ADE3', 00H
$SG143509 DB	'[', 09H, 'c #1B65C9', 00H
$SG143510 DB	'}', 09H, 'c #5F95DC', 00H
$SG143511 DB	'|', 09H, 'c #8BB3E5', 00H
$SG143512 DB	'1', 09H, 'c #77A4E0', 00H
$SG143513 DB	'2', 09H, 'c #679ADC', 00H
$SG143514 DB	'3', 09H, 'c #7AA6E1', 00H
$SG143515 DB	'4', 09H, 'c #195CC6', 00H
$SG143516 DB	'5', 09H, 'c #FCFDFE', 00H
$SG143517 DB	'6', 09H, 'c #8DB2E4', 00H
$SG143518 DB	'7', 09H, 'c #4885D6', 00H
$SG143519 DB	'8', 09H, 'c #7CA9E1', 00H
$SG143520 DB	'9', 09H, 'c #6698DB', 00H
$SG143521 DB	'0', 09H, 'c #71A1DE', 00H
$SG143522 DB	'a', 09H, 'c #1752C0', 00H
$SG143523 DB	'b', 09H, 'c #88ABE0', 00H
$SG143524 DB	'c', 09H, 'c #3D77D0', 00H
$SG143525 DB	'd', 09H, 'c #6E9FDD', 00H
$SG143526 DB	'e', 09H, 'c #699BDC', 00H
$SG143527 DB	'f', 09H, 'c #1547BD', 00H
$SG143528 DB	'g', 09H, 'c #8DA6DE', 00H
$SG143529 DB	'h', 09H, 'c #376BC9', 00H
$SG143530 DB	'i', 09H, 'c #6295DA', 00H
$SG143531 DB	'j', 09H, 'c #1440B9', 00H
$SG143532 DB	'k', 09H, 'c #8DA0DB', 00H
$SG143533 DB	'l', 09H, 'c #315FC4', 00H
$SG143534 DB	'm', 09H, 'c #1339B7', 00H
$SG143535 DB	'n', 09H, 'c #909FDA', 00H
$SG143536 DB	'o', 09H, 'c #1233B4', 00H
$SG143537 DB	'         .+ ', 00H
	ORG $+3
$SG143538 DB	'        @#$ ', 00H
	ORG $+3
$SG143539 DB	'       %&*= L', 00H
	ORG $+2
$SG143540 DB	'      -;>,'' ', 00H
	ORG $+3
$SG143541 DB	'     )!>~{] ', 00H
	ORG $+3
$SG143542 DB	'    ^/(_:<[ ', 00H
	ORG $+3
$SG143543 DB	'    (}|1234 ', 00H
	ORG $+3
$SG143544 DB	'    567890a ', 00H
	ORG $+3
$SG143545 DB	'      bcdef ', 00H
	ORG $+3
$SG143546 DB	'       ghij ', 00H
	ORG $+3
$SG143547 DB	'        klm ', 00H
	ORG $+3
$SG143548 DB	'         no ', 00H
	ORG $+3
$SG143550 DB	'13 14 54 1', 00H
	ORG $+1
$SG152767 DB	00H, 00H
	ORG $+2
$SG143551 DB	' ', 09H, 'c None', 00H
	ORG $+3
$SG143552 DB	'.', 09H, 'c #545254', 00H
$SG143553 DB	'+', 09H, 'c #3C3E3C', 00H
$SG143554 DB	'@', 09H, 'c #646464', 00H
$SG143555 DB	'#', 09H, 'c #A4A4A4', 00H
$SG143556 DB	'$', 09H, 'c #B7B8B7', 00H
$SG143557 DB	'%', 09H, 'c #747284', 00H
$SG143558 DB	'&', 09H, 'c #B4B2C4', 00H
$SG143559 DB	'*', 09H, 'c #DCD7E4', 00H
$SG143560 DB	'=', 09H, 'c #1C1A1C', 00H
$SG143561 DB	'-', 09H, 'c #403E58', 00H
$SG143562 DB	';', 09H, 'c #5C5A8C', 00H
$SG143563 DB	'>', 09H, 'c #7C7EAC', 00H
$SG143564 DB	',', 09H, 'c #7C8EBC', 00H
$SG143565 DB	'''', 09H, 'c #242644', 00H
$SG143566 DB	')', 09H, 'c #282668', 00H
$SG143567 DB	'!', 09H, 'c #24367C', 00H
$SG143568 DB	'~', 09H, 'c #244A84', 00H
$SG143569 DB	'{', 09H, 'c #2C5098', 00H
$SG143570 DB	']', 09H, 'c #14162C', 00H
$SG143571 DB	'^', 09H, 'c #142E7C', 00H
$SG143572 DB	'/', 09H, 'c #143789', 00H
$SG143573 DB	'(', 09H, 'c #204990', 00H
$SG143574 DB	'_', 09H, 'c #174091', 00H
$SG143575 DB	':', 09H, 'c #0C0630', 00H
$SG143576 DB	'<', 09H, 'c #24327C', 00H
$SG143577 DB	'[', 09H, 'c #2450A0', 00H
$SG143578 DB	'}', 09H, 'c #345DB4', 00H
$SG143579 DB	'|', 09H, 'c #3C68B8', 00H
$SG143580 DB	'1', 09H, 'c #141244', 00H
$SG143581 DB	'2', 09H, 'c #24428C', 00H
$SG143582 DB	'3', 09H, 'c #3462B9', 00H
$SG143583 DB	'4', 09H, 'c #4470C4', 00H
$SG143584 DB	'5', 09H, 'c #4C7FD6', 00H
$SG143585 DB	'6', 09H, 'c #4472CC', 00H
$SG143586 DB	'7', 09H, 'c #24224C', 00H
$SG143587 DB	'8', 09H, 'c #5C8DEC', 00H
$SG143588 DB	'9', 09H, 'c #5C94F6', 00H
$SG143589 DB	'0', 09H, 'c #5482DF', 00H
$SG143590 DB	'a', 09H, 'c #619DF7', 00H
$SG143591 DB	'b', 09H, 'c #6CA6FC', 00H
$SG143592 DB	'c', 09H, 'c #64A2FC', 00H
$SG143593 DB	'd', 09H, 'c #1C2E5C', 00H
$SG143594 DB	'e', 09H, 'c #6CA2FC', 00H
$SG143595 DB	'f', 09H, 'c #74B2FC', 00H
$SG143596 DB	'g', 09H, 'c #7CB8FC', 00H
$SG143597 DB	'h', 09H, 'c #1C3264', 00H
$SG143598 DB	'i', 09H, 'c #346AD4', 00H
$SG143599 DB	'j', 09H, 'c #7CBEFC', 00H
$SG143600 DB	'k', 09H, 'c #3C72DC', 00H
$SG143601 DB	'l', 09H, 'c #243250', 00H
$SG143602 DB	'm', 09H, 'c #346AB4', 00H
$SG143603 DB	'n', 09H, 'c #3C82DC', 00H
$SG143604 DB	'o', 09H, 'c #6C6A6C', 00H
$SG143605 DB	'     .+.     ', 00H
	ORG $+2
$SG143606 DB	'   @##$##@   ', 00H
	ORG $+2
$SG143607 DB	'  @%&***&%@  ', 00H
	ORG $+2
$SG143608 DB	' =-;>,,,>;-= ', 00H
	ORG $+2
$SG143609 DB	' '')!~{{{~!)'' ', 00H
	ORG $+2
$SG143610 DB	'])^/({{{(_^)]', 00H
	ORG $+2
$SG143611 DB	':<_[}|||}[_<:', 00H
	ORG $+2
$SG143612 DB	'12[3455563[21', 00H
	ORG $+2
$SG143613 DB	'7_365899063_7', 00H
	ORG $+2
$SG143614 DB	' /|09abc904/ ', 00H
	ORG $+2
$SG143615 DB	' d}8efgfb83d ', 00H
	ORG $+2
$SG143616 DB	'  hiafjgakh  ', 00H
	ORG $+2
$SG143617 DB	'   l~mnm~l   ', 00H
	ORG $+2
$SG143618 DB	'     o@o     ', 00H
	ORG $+2
$SG154327 DB	'K', 00H, 'e', 00H, 'y', 00H, 'W', 00H, 'o', 00H, 'r', 00H
	DB	'd', 00H, 00H, 00H
$SG154329 DB	'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG154336 DB	'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG154339 DB	'y', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG154344 DB	'O', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'l', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG154349 DB	'O', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'l', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG154351 DB	'r', 00H, 'e', 00H, 't', 00H, 'V', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG154354 DB	'd', 00H, 'e', 00H, 's', 00H, 'c', 00H, 'r', 00H, 00H, 00H
$SG154358 DB	00H, 00H
	ORG $+2
$SG154359 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 00H, 00H
$SG154363 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 00H, 00H
$SG154365 DB	'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG154403 DB	01H, 00H, '%', 00H, 'u', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, '%', 00H, 'u', 00H, 02H, 00H, 00H, 00H
	ORG $+2
$SG154404 DB	' ', 00H, 00H, 00H
$SG154405 DB	' ', 00H, '(', 00H, 00H, 00H
	ORG $+2
$SG154414 DB	',', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG154415 DB	')', 00H, 00H, 00H
$SG154417 DB	0aH, 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
_acTop_xpm DD	FLAT:$SG143412
	DD	FLAT:$SG143413
	DD	FLAT:$SG143414
	DD	FLAT:$SG143415
	DD	FLAT:$SG143416
	DD	FLAT:$SG143417
	DD	FLAT:$SG143418
	DD	FLAT:$SG143419
	DD	FLAT:$SG143420
	DD	FLAT:$SG143421
	DD	FLAT:$SG143422
	DD	FLAT:$SG143423
	DD	FLAT:$SG143424
	DD	FLAT:$SG143425
	DD	FLAT:$SG143426
	DD	FLAT:$SG143427
	DD	FLAT:$SG143428
	DD	FLAT:$SG143429
	DD	FLAT:$SG143430
	DD	FLAT:$SG143431
	DD	FLAT:$SG143432
	DD	FLAT:$SG143433
	DD	FLAT:$SG143434
	DD	FLAT:$SG143435
	DD	FLAT:$SG143436
	DD	FLAT:$SG143437
	DD	FLAT:$SG143438
	DD	FLAT:$SG143439
	DD	FLAT:$SG143440
	DD	FLAT:$SG143441
	DD	FLAT:$SG143442
	DD	FLAT:$SG143443
	DD	FLAT:$SG143444
	DD	FLAT:$SG143445
	DD	FLAT:$SG143446
	DD	FLAT:$SG143447
	DD	FLAT:$SG143448
	DD	FLAT:$SG143449
	DD	FLAT:$SG143450
	DD	FLAT:$SG143451
	DD	FLAT:$SG143452
	DD	FLAT:$SG143453
	DD	FLAT:$SG143454
	DD	FLAT:$SG143455
	DD	FLAT:$SG143456
	DD	FLAT:$SG143457
	DD	FLAT:$SG143458
	DD	FLAT:$SG143459
	DD	FLAT:$SG143460
	DD	FLAT:$SG143461
	DD	FLAT:$SG143462
	DD	FLAT:$SG143463
	DD	FLAT:$SG143464
	DD	FLAT:$SG143465
	DD	FLAT:$SG143466
	DD	FLAT:$SG143467
	DD	FLAT:$SG143468
	DD	FLAT:$SG143469
	DD	FLAT:$SG143470
	DD	FLAT:$SG143471
	DD	FLAT:$SG143472
	DD	FLAT:$SG143473
	DD	FLAT:$SG143474
	DD	FLAT:$SG143475
	DD	FLAT:$SG143476
	DD	FLAT:$SG143477
	DD	FLAT:$SG143478
	DD	FLAT:$SG143479
	DD	FLAT:$SG143480
	ORG $+4
_acBottom_xpm DD FLAT:$SG143482
	DD	FLAT:$SG143483
	DD	FLAT:$SG143484
	DD	FLAT:$SG143485
	DD	FLAT:$SG143486
	DD	FLAT:$SG143487
	DD	FLAT:$SG143488
	DD	FLAT:$SG143489
	DD	FLAT:$SG143490
	DD	FLAT:$SG143491
	DD	FLAT:$SG143492
	DD	FLAT:$SG143493
	DD	FLAT:$SG143494
	DD	FLAT:$SG143495
	DD	FLAT:$SG143496
	DD	FLAT:$SG143497
	DD	FLAT:$SG143498
	DD	FLAT:$SG143499
	DD	FLAT:$SG143500
	DD	FLAT:$SG143501
	DD	FLAT:$SG143502
	DD	FLAT:$SG143503
	DD	FLAT:$SG143504
	DD	FLAT:$SG143505
	DD	FLAT:$SG143506
	DD	FLAT:$SG143507
	DD	FLAT:$SG143508
	DD	FLAT:$SG143509
	DD	FLAT:$SG143510
	DD	FLAT:$SG143511
	DD	FLAT:$SG143512
	DD	FLAT:$SG143513
	DD	FLAT:$SG143514
	DD	FLAT:$SG143515
	DD	FLAT:$SG143516
	DD	FLAT:$SG143517
	DD	FLAT:$SG143518
	DD	FLAT:$SG143519
	DD	FLAT:$SG143520
	DD	FLAT:$SG143521
	DD	FLAT:$SG143522
	DD	FLAT:$SG143523
	DD	FLAT:$SG143524
	DD	FLAT:$SG143525
	DD	FLAT:$SG143526
	DD	FLAT:$SG143527
	DD	FLAT:$SG143528
	DD	FLAT:$SG143529
	DD	FLAT:$SG143530
	DD	FLAT:$SG143531
	DD	FLAT:$SG143532
	DD	FLAT:$SG143533
	DD	FLAT:$SG143534
	DD	FLAT:$SG143535
	DD	FLAT:$SG143536
	DD	FLAT:$SG143537
	DD	FLAT:$SG143538
	DD	FLAT:$SG143539
	DD	FLAT:$SG143540
	DD	FLAT:$SG143541
	DD	FLAT:$SG143542
	DD	FLAT:$SG143543
	DD	FLAT:$SG143544
	DD	FLAT:$SG143545
	DD	FLAT:$SG143546
	DD	FLAT:$SG143547
	DD	FLAT:$SG143548
	ORG $+4
_bookmark_xpm DD FLAT:$SG143550
	DD	FLAT:$SG143551
	DD	FLAT:$SG143552
	DD	FLAT:$SG143553
	DD	FLAT:$SG143554
	DD	FLAT:$SG143555
	DD	FLAT:$SG143556
	DD	FLAT:$SG143557
	DD	FLAT:$SG143558
	DD	FLAT:$SG143559
	DD	FLAT:$SG143560
	DD	FLAT:$SG143561
	DD	FLAT:$SG143562
	DD	FLAT:$SG143563
	DD	FLAT:$SG143564
	DD	FLAT:$SG143565
	DD	FLAT:$SG143566
	DD	FLAT:$SG143567
	DD	FLAT:$SG143568
	DD	FLAT:$SG143569
	DD	FLAT:$SG143570
	DD	FLAT:$SG143571
	DD	FLAT:$SG143572
	DD	FLAT:$SG143573
	DD	FLAT:$SG143574
	DD	FLAT:$SG143575
	DD	FLAT:$SG143576
	DD	FLAT:$SG143577
	DD	FLAT:$SG143578
	DD	FLAT:$SG143579
	DD	FLAT:$SG143580
	DD	FLAT:$SG143581
	DD	FLAT:$SG143582
	DD	FLAT:$SG143583
	DD	FLAT:$SG143584
	DD	FLAT:$SG143585
	DD	FLAT:$SG143586
	DD	FLAT:$SG143587
	DD	FLAT:$SG143588
	DD	FLAT:$SG143589
	DD	FLAT:$SG143590
	DD	FLAT:$SG143591
	DD	FLAT:$SG143592
	DD	FLAT:$SG143593
	DD	FLAT:$SG143594
	DD	FLAT:$SG143595
	DD	FLAT:$SG143596
	DD	FLAT:$SG143597
	DD	FLAT:$SG143598
	DD	FLAT:$SG143599
	DD	FLAT:$SG143600
	DD	FLAT:$SG143601
	DD	FLAT:$SG143602
	DD	FLAT:$SG143603
	DD	FLAT:$SG143604
	DD	FLAT:$SG143605
	DD	FLAT:$SG143606
	DD	FLAT:$SG143607
	DD	FLAT:$SG143608
	DD	FLAT:$SG143609
	DD	FLAT:$SG143610
	DD	FLAT:$SG143611
	DD	FLAT:$SG143612
	DD	FLAT:$SG143613
	DD	FLAT:$SG143614
	DD	FLAT:$SG143615
	DD	FLAT:$SG143616
	DD	FLAT:$SG143617
	DD	FLAT:$SG143618
_DATA	ENDS
PUBLIC	_hypot
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z	; std::_Container_base12::_Swap_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	?execute@ScintillaEditView@@QBEJIIJ@Z		; ScintillaEditView::execute
PUBLIC	?setLanguageXML@FunctionCallTip@@QAEXPAVTiXmlElement@@@Z ; FunctionCallTip::setLanguageXML
PUBLIC	?updateCalltip@FunctionCallTip@@QAE_NH_N@Z	; FunctionCallTip::updateCalltip
PUBLIC	?showNextOverload@FunctionCallTip@@QAEXXZ	; FunctionCallTip::showNextOverload
PUBLIC	?showPrevOverload@FunctionCallTip@@QAEXXZ	; FunctionCallTip::showPrevOverload
PUBLIC	?isVisible@FunctionCallTip@@QAE_NXZ		; FunctionCallTip::isVisible
PUBLIC	?close@FunctionCallTip@@QAEXXZ			; FunctionCallTip::close
PUBLIC	?select_on_container_copy_construction@?$allocator@PB_W@std@@QBE?AV12@XZ ; std::allocator<wchar_t const *>::select_on_container_copy_construction
PUBLIC	??0?$allocator@PB_W@std@@QAE@XZ			; std::allocator<wchar_t const *>::allocator<wchar_t const *>
PUBLIC	??0?$allocator@PB_W@std@@QAE@ABV01@@Z		; std::allocator<wchar_t const *>::allocator<wchar_t const *>
PUBLIC	?deallocate@?$allocator@PB_W@std@@QAEXPAPB_WI@Z	; std::allocator<wchar_t const *>::deallocate
PUBLIC	?allocate@?$allocator@PB_W@std@@QAEPAPB_WI@Z	; std::allocator<wchar_t const *>::allocate
PUBLIC	?construct@?$allocator@PB_W@std@@QAEXPAPB_WABQB_W@Z ; std::allocator<wchar_t const *>::construct
PUBLIC	?max_size@?$allocator@PB_W@std@@QBEIXZ		; std::allocator<wchar_t const *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAIABV?$allocator@PB_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SA?AV?$allocator@PB_W@2@ABV32@@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEPAPB_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<wchar_t const *> >::_Vector_val<std::_Simple_types<wchar_t const *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<wchar_t const *> >::~_Vector_val<std::_Simple_types<wchar_t const *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
PUBLIC	??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
PUBLIC	??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
PUBLIC	??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
PUBLIC	?_Assign_rv@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Assign_rv
PUBLIC	??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::~vector<wchar_t const *,std::allocator<wchar_t const *> >
PUBLIC	?capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Unused_capacity
PUBLIC	?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::begin
PUBLIC	?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::end
PUBLIC	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
PUBLIC	?max_size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::max_size
PUBLIC	?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at
PUBLIC	?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::push_back
PUBLIC	?clear@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::clear
PUBLIC	?_Buy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAE_NI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Buy
PUBLIC	?_Destroy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXPAPB_W0@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEII@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBE_NPBQB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xlen
PUBLIC	?_Xran@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xran
PUBLIC	?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Orphan_range
PUBLIC	??_G?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEPAXI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::`scalar deleting destructor'
PUBLIC	??0?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	?deallocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::deallocate
PUBLIC	?allocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocate
PUBLIC	?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct
PUBLIC	?max_size@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBEIXZ ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
PUBLIC	?capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Unused_capacity
PUBLIC	?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
PUBLIC	?max_size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
PUBLIC	?at@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEAAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::at
PUBLIC	?push_back@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXABV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::push_back
PUBLIC	?clear@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::clear
PUBLIC	?_Destroy@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Grow_to
PUBLIC	?_Inside@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBE_NPBV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Inside
PUBLIC	?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reallocate
PUBLIC	?_Reserve@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reserve
PUBLIC	?_Xlen@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xlen
PUBLIC	?_Xran@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xran
PUBLIC	?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Orphan_range
PUBLIC	?getCursorFunction@FunctionCallTip@@AAE_NXZ	; FunctionCallTip::getCursorFunction
PUBLIC	?loadFunction@FunctionCallTip@@AAE_NXZ		; FunctionCallTip::loadFunction
PUBLIC	?showCalltip@FunctionCallTip@@AAEXXZ		; FunctionCallTip::showCalltip
PUBLIC	?reset@FunctionCallTip@@AAEXXZ			; FunctionCallTip::reset
PUBLIC	?cleanup@FunctionCallTip@@AAEXXZ		; FunctionCallTip::cleanup
PUBLIC	?isBasicWordChar@FunctionCallTip@@ABE_N_W@Z	; FunctionCallTip::isBasicWordChar
PUBLIC	?isAdditionalWordChar@FunctionCallTip@@ABE_N_W@Z ; FunctionCallTip::isAdditionalWordChar
PUBLIC	??0Token@@QAE@PA_WH_N@Z				; Token::Token
PUBLIC	??0FunctionValues@@QAE@XZ			; FunctionValues::FunctionValues
PUBLIC	?lower@@YA_N_W@Z				; lower
PUBLIC	?match@@YA_N_W0@Z				; match
PUBLIC	?testNameNoCase@@YAHPB_W0H@Z			; testNameNoCase
PUBLIC	??0?$allocator@UToken@@@std@@QAE@XZ		; std::allocator<Token>::allocator<Token>
PUBLIC	?deallocate@?$allocator@UToken@@@std@@QAEXPAUToken@@I@Z ; std::allocator<Token>::deallocate
PUBLIC	?allocate@?$allocator@UToken@@@std@@QAEPAUToken@@I@Z ; std::allocator<Token>::allocate
PUBLIC	?max_size@?$allocator@UToken@@@std@@QBEIXZ	; std::allocator<Token>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAIABV?$allocator@UToken@@@2@@Z ; std::allocator_traits<std::allocator<Token> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Token> >::_Wrap_alloc<std::allocator<Token> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEPAUToken@@I@Z ; std::_Wrap_alloc<std::allocator<Token> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@I@Z ; std::_Wrap_alloc<std::allocator<Token> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<Token> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Token> >::_Vector_val<std::_Simple_types<Token> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Token> >::~_Vector_val<std::_Simple_types<Token> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::~_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
PUBLIC	??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ ; std::vector<Token,std::allocator<Token> >::vector<Token,std::allocator<Token> >
PUBLIC	?push_back@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEX$$QAUToken@@@Z ; std::vector<Token,std::allocator<Token> >::push_back
PUBLIC	??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ ; std::vector<Token,std::allocator<Token> >::~vector<Token,std::allocator<Token> >
PUBLIC	?capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::_Unused_capacity
PUBLIC	?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::size
PUBLIC	?max_size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::max_size
PUBLIC	?at@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEAAUToken@@I@Z ; std::vector<Token,std::allocator<Token> >::at
PUBLIC	?_Destroy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXPAUToken@@0@Z ; std::vector<Token,std::allocator<Token> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEII@Z ; std::vector<Token,std::allocator<Token> >::_Grow_to
PUBLIC	?_Inside@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBE_NPBUToken@@@Z ; std::vector<Token,std::allocator<Token> >::_Inside
PUBLIC	?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z ; std::vector<Token,std::allocator<Token> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z ; std::vector<Token,std::allocator<Token> >::_Reserve
PUBLIC	?_Tidy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXXZ ; std::vector<Token,std::allocator<Token> >::_Tidy
PUBLIC	?_Xlen@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ ; std::vector<Token,std::allocator<Token> >::_Xlen
PUBLIC	?_Xran@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ ; std::vector<Token,std::allocator<Token> >::_Xran
PUBLIC	?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z ; std::vector<Token,std::allocator<Token> >::_Orphan_range
PUBLIC	??0?$allocator@UFunctionValues@@@std@@QAE@XZ	; std::allocator<FunctionValues>::allocator<FunctionValues>
PUBLIC	?deallocate@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@I@Z ; std::allocator<FunctionValues>::deallocate
PUBLIC	?allocate@?$allocator@UFunctionValues@@@std@@QAEPAUFunctionValues@@I@Z ; std::allocator<FunctionValues>::allocate
PUBLIC	?construct@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@ABU3@@Z ; std::allocator<FunctionValues>::construct
PUBLIC	?max_size@?$allocator@UFunctionValues@@@std@@QBEIXZ ; std::allocator<FunctionValues>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAIABV?$allocator@UFunctionValues@@@2@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<FunctionValues> >::_Wrap_alloc<std::allocator<FunctionValues> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEPAUFunctionValues@@I@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@I@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<FunctionValues> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<FunctionValues> >::_Vector_val<std::_Simple_types<FunctionValues> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<FunctionValues> >::~_Vector_val<std::_Simple_types<FunctionValues> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::~_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
PUBLIC	??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::vector<FunctionValues,std::allocator<FunctionValues> >
PUBLIC	??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::~vector<FunctionValues,std::allocator<FunctionValues> >
PUBLIC	?capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Unused_capacity
PUBLIC	?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::end
PUBLIC	?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size
PUBLIC	?max_size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::max_size
PUBLIC	?empty@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBE_NXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::empty
PUBLIC	?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::back
PUBLIC	?push_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXABUFunctionValues@@@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::push_back
PUBLIC	?pop_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::pop_back
PUBLIC	?clear@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::clear
PUBLIC	?_Destroy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEII@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Grow_to
PUBLIC	?_Inside@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBE_NPBUFunctionValues@@@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Inside
PUBLIC	?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reserve
PUBLIC	?_Tidy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Tidy
PUBLIC	?_Xlen@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Orphan_range
PUBLIC	??$addressof@QB_W@std@@YAPBQB_WABQB_W@Z		; std::addressof<wchar_t const * const>
PUBLIC	??$construct@PB_WAAPB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WAAPB_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>
PUBLIC	??$construct@PB_WABQB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WABQB_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>
PUBLIC	??$addressof@$$CBV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPBV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ; std::addressof<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const >
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
PUBLIC	??$addressof@UToken@@@std@@YAPAUToken@@AAU1@@Z	; std::addressof<Token>
PUBLIC	??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z	; std::forward<Token>
PUBLIC	??$construct@UToken@@U1@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Token> >::construct<Token,Token>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEABUFunctionValues@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEAAUFunctionValues@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-=
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
PUBLIC	??$addressof@$$CBUFunctionValues@@@std@@YAPBUFunctionValues@@ABU1@@Z ; std::addressof<FunctionValues const >
PUBLIC	??$construct@UFunctionValues@@AAU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>
PUBLIC	??$construct@UFunctionValues@@ABU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>
PUBLIC	??$destroy@UFunctionValues@@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::destroy<FunctionValues>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$addressof@_W@std@@YAPA_WAA_W@Z		; std::addressof<wchar_t>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QBEPBQB_WXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Unchecked
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Umove@PAPB_W@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WPAPB_W00@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Umove<wchar_t const * *>
PUBLIC	??$_Umove@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@PAV21@00@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Umove<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >
PUBLIC	??$_Umove@PAUToken@@@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEPAUToken@@PAU2@00@Z ; std::vector<Token,std::allocator<Token> >::_Umove<Token *>
PUBLIC	??$_Umove@PAUFunctionValues@@@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEPAUFunctionValues@@PAU2@00@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Umove<FunctionValues *>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@PB_W@std@@YAPAPB_WIPAPB_W@Z	; std::_Allocate<wchar_t const *>
PUBLIC	??$_Allocate@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@IPAV10@@Z ; std::_Allocate<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$_Allocate@UToken@@@std@@YAPAUToken@@IPAU1@@Z	; std::_Allocate<Token>
PUBLIC	??$_Allocate@UFunctionValues@@@std@@YAPAUFunctionValues@@IPAU1@@Z ; std::_Allocate<FunctionValues>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPB_W@std@@YAAAPB_WAAPB_W@Z		; std::forward<wchar_t const * &>
PUBLIC	??$construct@PB_WAAPB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WAAPB_W@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>
PUBLIC	??$forward@ABQB_W@std@@YAABQB_WABQB_W@Z		; std::forward<wchar_t const * const &>
PUBLIC	??$construct@PB_WABQB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WABQB_W@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>
PUBLIC	??$forward@AAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAAAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
PUBLIC	??$forward@ABV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAABV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
PUBLIC	??$construct@UToken@@U1@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@$$QAU3@@Z ; std::allocator_traits<std::allocator<Token> >::construct<Token,Token>
PUBLIC	??$forward@AAUFunctionValues@@@std@@YAAAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues &>
PUBLIC	??$construct@UFunctionValues@@AAU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@AAU3@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>
PUBLIC	??$forward@ABUFunctionValues@@@std@@YAABUFunctionValues@@ABU1@@Z ; std::forward<FunctionValues const &>
PUBLIC	??$construct@UFunctionValues@@ABU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@ABU3@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>
PUBLIC	??$destroy@UFunctionValues@@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::destroy<FunctionValues>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQB_WPAPB_W@Z ; std::_Ptr_cat<wchar_t const *,wchar_t const *>
PUBLIC	??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPB_W0@Z ; std::_Ptr_cat<wchar_t const *,wchar_t const *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >
PUBLIC	??$_Ptr_cat@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0@Z ; std::_Ptr_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
PUBLIC	??$_Ptr_cat@UFunctionValues@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUFunctionValues@@0@Z ; std::_Ptr_cat<FunctionValues,FunctionValues>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Uninitialized_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninitialized_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
PUBLIC	??$_Uninitialized_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
PUBLIC	??$_Ptr_cat@UToken@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUToken@@0@Z ; std::_Ptr_cat<Token,Token>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >
PUBLIC	??$_Uninitialized_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ; std::_Uninitialized_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >
PUBLIC	??$_Uninitialized_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ; std::_Uninitialized_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >
PUBLIC	??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z ; std::allocator<wchar_t const *>::construct<wchar_t const *,wchar_t const * &>
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
PUBLIC	??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z ; std::allocator<Token>::construct<Token,Token>
PUBLIC	??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues &>
PUBLIC	??$destroy@UFunctionValues@@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@@Z ; std::allocator<FunctionValues>::destroy<FunctionValues>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z	; std::_Unchecked<wchar_t const * *>
PUBLIC	??$_Uninit_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninit_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
PUBLIC	??$_Rechecked@PAPB_WPAPB_W@std@@YAAAPAPB_WAAPAPB_WPAPB_W@Z ; std::_Rechecked<wchar_t const * *,wchar_t const * *>
PUBLIC	??$_Unchecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ; std::_Unchecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
PUBLIC	??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
PUBLIC	??$_Rechecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@@std@@YAAAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
PUBLIC	??$destroy@UToken@@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@@Z ; std::_Wrap_alloc<std::allocator<Token> >::destroy<Token>
PUBLIC	??$_Unchecked@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ; std::_Unchecked<Token *>
PUBLIC	??$_Uninit_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ; std::_Uninit_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >
PUBLIC	??$_Rechecked@PAUToken@@PAU1@@std@@YAAAPAUToken@@AAPAU1@PAU1@@Z ; std::_Rechecked<Token *,Token *>
PUBLIC	??$_Unchecked@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ; std::_Unchecked<FunctionValues *>
PUBLIC	??$_Uninit_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >
PUBLIC	??$_Rechecked@PAUFunctionValues@@PAU1@@std@@YAAAPAUFunctionValues@@AAPAU1@PAU1@@Z ; std::_Rechecked<FunctionValues *,FunctionValues *>
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > > >
PUBLIC	??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$_Val_type@PAPB_W@std@@YAPAPB_WPAPB_W@Z	; std::_Val_type<wchar_t const * *>
PUBLIC	??$_Uninit_move@PB_WPB_WPB_W@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<wchar_t const *,wchar_t const *,wchar_t const *>
PUBLIC	??$_Val_type@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ; std::_Val_type<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
PUBLIC	??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$destroy@UToken@@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@@Z ; std::allocator_traits<std::allocator<Token> >::destroy<Token>
PUBLIC	??$_Val_type@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ; std::_Val_type<Token *>
PUBLIC	??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Token *,Token *,std::allocator<Token>,Token>
PUBLIC	??$_Val_type@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ; std::_Val_type<FunctionValues *>
PUBLIC	??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::allocator<FunctionValues>,FunctionValues>
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
PUBLIC	??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$_Debug_range@PAPB_W@std@@YAXPAPB_W0PB_WI@Z	; std::_Debug_range<wchar_t const * *>
PUBLIC	??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z	; std::_Debug_pointer<wchar_t const *>
PUBLIC	??$_Debug_pointer@PB_W@std@@YAXPBQB_WPB_WI@Z	; std::_Debug_pointer<wchar_t const *>
PUBLIC	??$_Debug_range@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WI@Z ; std::_Debug_range<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
PUBLIC	??$_Debug_pointer@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$destroy@UToken@@@?$allocator@UToken@@@std@@QAEXPAUToken@@@Z ; std::allocator<Token>::destroy<Token>
PUBLIC	??$_Debug_range@PAUToken@@@std@@YAXPAUToken@@0PB_WI@Z ; std::_Debug_range<Token *>
PUBLIC	??$_Debug_pointer@UToken@@@std@@YAXPAUToken@@PB_WI@Z ; std::_Debug_pointer<Token>
PUBLIC	??$_Debug_range@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WI@Z ; std::_Debug_range<FunctionValues *>
PUBLIC	??$_Debug_pointer@UFunctionValues@@@std@@YAXPAUFunctionValues@@PB_WI@Z ; std::_Debug_pointer<FunctionValues>
PUBLIC	??$construct@UFunctionValues@@U1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
PUBLIC	??$_Uninit_copy@PBQB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninit_copy<wchar_t const * const *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
PUBLIC	??$_Iter_cat@PAPB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQAPB_W@Z ; std::_Iter_cat<wchar_t const * *>
PUBLIC	??$_Debug_range2@PAPB_W@std@@YAXPAPB_W0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<wchar_t const * *>
PUBLIC	??$_Iter_cat@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$vector@PB_WV?$allocator@PB_W@std@@@0@@Z ; std::_Iter_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
PUBLIC	??$_Debug_range2@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
PUBLIC	??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$_Iter_cat@PAUToken@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUToken@@@Z ; std::_Iter_cat<Token *>
PUBLIC	??$_Debug_range2@PAUToken@@@std@@YAXPAUToken@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Token *>
PUBLIC	??$_Iter_cat@PAUFunctionValues@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFunctionValues@@@Z ; std::_Iter_cat<FunctionValues *>
PUBLIC	??$_Debug_range2@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<FunctionValues *>
PUBLIC	??$forward@UFunctionValues@@@std@@YA$$QAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues>
PUBLIC	??$construct@UFunctionValues@@U1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@$$QAU3@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>
PUBLIC	??$_Uninit_copy@QB_WPB_W@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<wchar_t const * const,wchar_t const *>
PUBLIC	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
PUBLIC	??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues>
PUBLIC	??$_Debug_range@PBQB_W@std@@YAXPBQB_W0PB_WI@Z	; std::_Debug_range<wchar_t const * const *>
PUBLIC	??$_Iter_cat@PBQB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQBQB_W@Z ; std::_Iter_cat<wchar_t const * const *>
PUBLIC	??$_Debug_range2@PBQB_W@std@@YAXPBQB_W0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<wchar_t const * const *>
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@JIKEAPDO@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAp?$AAo?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1OI@FONGOOEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1OK@BKLKOIHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_wcsncmp:PROC
EXTRN	__imp__lstrcmpW@8:PROC
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	__imp__lstrcatW@8:PROC
EXTRN	__imp__lstrlenW@4:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	__hypot:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__CrtDbgReportW:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?NextSiblingElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z:PROC ; TiXmlNode::NextSiblingElement
EXTRN	?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z:PROC ; TiXmlNode::FirstChildElement
EXTRN	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z:PROC	; TiXmlElement::Attribute
EXTRN	?showCallTip@ScintillaEditView@@QAEXHPB_W@Z:PROC ; ScintillaEditView::showCallTip
EXTRN	?getLine@ScintillaEditView@@QAEXHPA_WH@Z:PROC	; ScintillaEditView::getLine
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
_ignore	DB	01H DUP (?)
__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@BKLKOIHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OK@BKLKOIHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'F', 00H
	DB	'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, 's', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@FONGOOEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OI@FONGOOEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'F', 00H
	DB	'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, 's', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@JIKEAPDO@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAp?$AAo?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@JIKEAPDO@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAp?$AAo?$AAp?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'p', 00H, 'o', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z$0
__ehfuncinfo$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$3
__ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$3
__ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z$0
__ehfuncinfo$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z$0
__ehfuncinfo$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z$0
__ehfuncinfo$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ$1
__ehfuncinfo$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?loadFunction@FunctionCallTip@@AAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?loadFunction@FunctionCallTip@@AAE_NXZ$0
__unwindtable$?getCursorFunction@FunctionCallTip@@AAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getCursorFunction@FunctionCallTip@@AAE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getCursorFunction@FunctionCallTip@@AAE_NXZ$1
__ehfuncinfo$?loadFunction@FunctionCallTip@@AAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?loadFunction@FunctionCallTip@@AAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?getCursorFunction@FunctionCallTip@@AAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getCursorFunction@FunctionCallTip@@AAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$4
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_System_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_System_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_System_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_System_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_System_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_System_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iostream_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iostream_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Iostream_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Iostream_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Generic_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Generic_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Generic_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Generic_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z$0
__ehfuncinfo$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PBQB_W@std@@YAXPBQB_W0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PBQB_W@std@@YAXPBQB_W0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<wchar_t const * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PB_W@std@@YAXPBQB_WPB_WI@Z ; std::_Debug_pointer<wchar_t const *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PB_W@std@@YAXPBQB_WPB_WI@Z ; std::_Debug_pointer<wchar_t const *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PBQB_W@std@@YAXPBQB_W0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<wchar_t const * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PBQB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQBQB_W@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PBQB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQBQB_W@Z PROC ; std::_Iter_cat<wchar_t const * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PBQB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQBQB_W@Z ENDP ; std::_Iter_cat<wchar_t const * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PBQB_W@std@@YAXPBQB_W0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PBQB_W@std@@YAXPBQB_W0PB_WI@Z PROC	; std::_Debug_range<wchar_t const * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PBQB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQBQB_W@Z ; std::_Iter_cat<wchar_t const * const *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PBQB_W@std@@YAXPBQB_W0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<wchar_t const * const *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PBQB_W@std@@YAXPBQB_W0PB_WI@Z ENDP	; std::_Debug_range<wchar_t const * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z PROC ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UFunctionValues@@@std@@YA$$QAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z ENDP ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues>
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@QB_WPB_W@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@QB_WPB_W@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<wchar_t const * const,wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 401
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 402
	push	402					; 00000192H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PBQB_W@std@@YAXPBQB_W0PB_WI@Z ; std::_Debug_range<wchar_t const * const *>
	add	esp, 16					; 00000010H
; Line 403
	push	403					; 00000193H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z ; std::_Debug_pointer<wchar_t const *>
	add	esp, 12					; 0000000cH
; Line 404
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 406
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 407
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@QB_WPB_W@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<wchar_t const * const,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@U1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UFunctionValues@@U1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UFunctionValues@@@std@@YA$$QAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UFunctionValues@@U1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues>
; Line 724
	pop	ebp
	ret	0
??$construct@UFunctionValues@@U1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@UFunctionValues@@@std@@YA$$QAUFunctionValues@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UFunctionValues@@@std@@YA$$QAUFunctionValues@@AAU1@@Z PROC ; std::forward<FunctionValues>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@UFunctionValues@@@std@@YA$$QAUFunctionValues@@AAU1@@Z ENDP ; std::forward<FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<FunctionValues *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UFunctionValues@@@std@@YAXPAUFunctionValues@@PB_WI@Z ; std::_Debug_pointer<FunctionValues>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UFunctionValues@@@std@@YAXPAUFunctionValues@@PB_WI@Z ; std::_Debug_pointer<FunctionValues>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<FunctionValues *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAUFunctionValues@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFunctionValues@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUFunctionValues@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFunctionValues@@@Z PROC ; std::_Iter_cat<FunctionValues *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAUFunctionValues@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFunctionValues@@@Z ENDP ; std::_Iter_cat<FunctionValues *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAUToken@@@std@@YAXPAUToken@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUToken@@@std@@YAXPAUToken@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<Token *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UToken@@@std@@YAXPAUToken@@PB_WI@Z ; std::_Debug_pointer<Token>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UToken@@@std@@YAXPAUToken@@PB_WI@Z ; std::_Debug_pointer<Token>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAUToken@@@std@@YAXPAUToken@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<Token *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAUToken@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUToken@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUToken@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUToken@@@Z PROC ; std::_Iter_cat<Token *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAUToken@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUToken@@@Z ENDP ; std::_Iter_cat<Token *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
; Line 724
	pop	ebp
	ret	0
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$vector@PB_WV?$allocator@PB_W@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$vector@PB_WV?$allocator@PB_W@std@@@0@@Z PROC ; std::_Iter_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$vector@PB_WV?$allocator@PB_W@std@@@0@@Z ENDP ; std::_Iter_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAPB_W@std@@YAXPAPB_W0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPB_W@std@@YAXPAPB_W0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<wchar_t const * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z ; std::_Debug_pointer<wchar_t const *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z ; std::_Debug_pointer<wchar_t const *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAPB_W@std@@YAXPAPB_W0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<wchar_t const * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAPB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQAPB_W@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQAPB_W@Z PROC ; std::_Iter_cat<wchar_t const * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAPB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQAPB_W@Z ENDP ; std::_Iter_cat<wchar_t const * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@PBQB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PBQB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z PROC ; std::_Uninit_copy<wchar_t const * const *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 414
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 416
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQB_WPAPB_W@Z ; std::_Ptr_cat<wchar_t const *,wchar_t const *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@QB_WPB_W@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<wchar_t const * const,wchar_t const *>
	add	esp, 20					; 00000014H
; Line 417
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PBQB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ENDP ; std::_Uninit_copy<wchar_t const * const *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 264
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 265
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QBEPBQB_WXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Unchecked
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 266
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Iter$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@U1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UFunctionValues@@U1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UFunctionValues@@@std@@YA$$QAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UFunctionValues@@U1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@$$QAU3@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UFunctionValues@@U1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@UFunctionValues@@@std@@YAXPAUFunctionValues@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UFunctionValues@@@std@@YAXPAUFunctionValues@@PB_WI@Z PROC ; std::_Debug_pointer<FunctionValues>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@UFunctionValues@@@std@@YAXPAUFunctionValues@@PB_WI@Z ENDP ; std::_Debug_pointer<FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WI@Z PROC ; std::_Debug_range<FunctionValues *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAUFunctionValues@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFunctionValues@@@Z ; std::_Iter_cat<FunctionValues *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<FunctionValues *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WI@Z ENDP ; std::_Debug_range<FunctionValues *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@UToken@@@std@@YAXPAUToken@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UToken@@@std@@YAXPAUToken@@PB_WI@Z PROC ; std::_Debug_pointer<Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@UToken@@@std@@YAXPAUToken@@PB_WI@Z ENDP ; std::_Debug_pointer<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAUToken@@@std@@YAXPAUToken@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUToken@@@std@@YAXPAUToken@@0PB_WI@Z PROC ; std::_Debug_range<Token *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAUToken@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUToken@@@Z ; std::_Iter_cat<Token *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAUToken@@@std@@YAXPAUToken@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Token *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAUToken@@@std@@YAXPAUToken@@0PB_WI@Z ENDP ; std::_Debug_range<Token *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UToken@@@?$allocator@UToken@@@std@@QAEXPAUToken@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UToken@@@?$allocator@UToken@@@std@@QAEXPAUToken@@@Z PROC ; std::allocator<Token>::destroy<Token>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UToken@@@?$allocator@UToken@@@std@@QAEXPAUToken@@@Z ENDP ; std::allocator<Token>::destroy<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$vector@PB_WV?$allocator@PB_W@std@@@0@@Z ; std::_Iter_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PB_W@std@@YAXPBQB_WPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PB_W@std@@YAXPBQB_WPB_WI@Z PROC	; std::_Debug_pointer<wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@PB_W@std@@YAXPBQB_WPB_WI@Z ENDP	; std::_Debug_pointer<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z PROC	; std::_Debug_pointer<wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z ENDP	; std::_Debug_pointer<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAPB_W@std@@YAXPAPB_W0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPB_W@std@@YAXPAPB_W0PB_WI@Z PROC	; std::_Debug_range<wchar_t const * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAPB_W@std@@YA?AUrandom_access_iterator_tag@0@ABQAPB_W@Z ; std::_Iter_cat<wchar_t const * *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAPB_W@std@@YAXPAPB_W0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<wchar_t const * *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAPB_W@std@@YAXPAPB_W0PB_WI@Z ENDP	; std::_Debug_range<wchar_t const * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEPAXI@Z
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
_TEXT	SEGMENT
tv147 = -52						; size = 4
$T2 = -48						; size = 4
tv143 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv67 = -32						; size = 4
tv148 = -28						; size = 4
tv153 = -24						; size = 4
tv144 = -20						; size = 4
tv151 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Dest$ = 32						; size = 4
__Al$ = 36						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 427
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z ; std::_Unchecked<wchar_t const * *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv151[ebp], eax
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], eax
	mov	ecx, DWORD PTR tv144[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv153[ebp], eax
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR tv147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@YAPBQB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	push	ecx
	call	??$_Uninit_copy@PBQB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPBQB_W0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninit_copy<wchar_t const * const *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR tv67[ebp]
	push	edx
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Rechecked@PAPB_WPAPB_W@std@@YAAAPAPB_WAAPAPB_WPAPB_W@Z ; std::_Rechecked<wchar_t const * *,wchar_t const * *>
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 428
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::allocator<FunctionValues>,FunctionValues>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUFunctionValues@@@std@@YAXPAUFunctionValues@@0PB_WI@Z ; std::_Debug_range<FunctionValues *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UFunctionValues@@@std@@YAXPAUFunctionValues@@PB_WI@Z ; std::_Debug_pointer<FunctionValues>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UFunctionValues@@U1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UFunctionValues@@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::destroy<FunctionValues>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::allocator<FunctionValues>,FunctionValues>
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z PROC ; std::_Val_type<FunctionValues *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ENDP ; std::_Val_type<FunctionValues *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Token *,Token *,std::allocator<Token>,Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUToken@@@std@@YAXPAUToken@@0PB_WI@Z ; std::_Debug_range<Token *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UToken@@@std@@YAXPAUToken@@PB_WI@Z ; std::_Debug_pointer<Token>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UToken@@U1@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Token> >::construct<Token,Token>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UToken@@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@@Z ; std::_Wrap_alloc<std::allocator<Token> >::destroy<Token>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Token *,Token *,std::allocator<Token>,Token>
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAUToken@@@std@@YAPAUToken@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUToken@@@std@@YAPAUToken@@PAU1@@Z PROC	; std::_Val_type<Token *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ENDP	; std::_Val_type<Token *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UToken@@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UToken@@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@@Z PROC ; std::allocator_traits<std::allocator<Token> >::destroy<Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UToken@@@?$allocator@UToken@@@std@@QAEXPAUToken@@@Z ; std::allocator<Token>::destroy<Token>
; Line 731
	pop	ebp
	ret	0
??$destroy@UToken@@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@@Z ENDP ; std::allocator_traits<std::allocator<Token> >::destroy<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0PB_WI@Z ; std::_Debug_range<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z PROC ; std::_Val_type<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ENDP ; std::_Val_type<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PB_WPB_WPB_W@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PB_WPB_WPB_W@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<wchar_t const *,wchar_t const *,wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 470
	push	470					; 000001d6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAPB_W@std@@YAXPAPB_W0PB_WI@Z ; std::_Debug_range<wchar_t const * *>
	add	esp, 16					; 00000010H
; Line 471
	push	471					; 000001d7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PB_W@std@@YAXPAPB_WPB_WI@Z ; std::_Debug_pointer<wchar_t const *>
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 474
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 475
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PB_WPB_WPB_W@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<wchar_t const *,wchar_t const *,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAPB_W@std@@YAPAPB_WPAPB_W@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPB_W@std@@YAPAPB_WPAPB_W@Z PROC		; std::_Val_type<wchar_t const * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAPB_W@std@@YAPAPB_WPAPB_W@Z ENDP		; std::_Val_type<wchar_t const * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
; Line 731
	pop	ebp
	ret	0
??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z
_TEXT	SEGMENT
tv142 = -52						; size = 4
$T2 = -48						; size = 4
tv139 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv71 = -32						; size = 4
tv146 = -28						; size = 4
tv145 = -24						; size = 4
_this$ = -20						; size = 4
__Alval$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Ptr$ = 32						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1636
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1638
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
; Line 1640
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv139[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv146[ebp], eax
	mov	eax, DWORD PTR tv146[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@PAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@@std@@YAPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@0@0PAPB_WAAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 1641
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAUFunctionValues@@PAU1@@std@@YAAAPAUFunctionValues@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUFunctionValues@@PAU1@@std@@YAAAPAUFunctionValues@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<FunctionValues *,FunctionValues *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAUFunctionValues@@PAU1@@std@@YAAAPAUFunctionValues@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<FunctionValues *,FunctionValues *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z PROC ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UFunctionValues@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUFunctionValues@@0@Z ; std::_Ptr_cat<FunctionValues,FunctionValues>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ; std::_Val_type<FunctionValues *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUFunctionValues@@PAU1@V?$allocator@UFunctionValues@@@std@@U1@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::allocator<FunctionValues>,FunctionValues>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ENDP ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z PROC ; std::_Unchecked<FunctionValues *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ENDP ; std::_Unchecked<FunctionValues *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAUToken@@PAU1@@std@@YAAAPAUToken@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUToken@@PAU1@@std@@YAAAPAUToken@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<Token *,Token *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAUToken@@PAU1@@std@@YAAAPAUToken@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<Token *,Token *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z PROC ; std::_Uninit_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UToken@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUToken@@0@Z ; std::_Ptr_cat<Token,Token>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ; std::_Val_type<Token *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUToken@@PAU1@V?$allocator@UToken@@@std@@U1@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Token *,Token *,std::allocator<Token>,Token>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ENDP ; std::_Uninit_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAUToken@@@std@@YAPAUToken@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUToken@@@std@@YAPAUToken@@PAU1@@Z PROC	; std::_Unchecked<Token *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ENDP	; std::_Unchecked<Token *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UToken@@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UToken@@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@@Z PROC ; std::_Wrap_alloc<std::allocator<Token> >::destroy<Token>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UToken@@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@@Z ; std::allocator_traits<std::allocator<Token> >::destroy<Token>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UToken@@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@@Z ENDP ; std::_Wrap_alloc<std::allocator<Token> >::destroy<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@@std@@YAAAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@@std@@YAAAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@@std@@YAAAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0@Z ; std::_Ptr_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ; std::_Val_type<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@V12@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z PROC ; std::_Unchecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ENDP ; std::_Unchecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAPB_WPAPB_W@std@@YAAAPAPB_WAAPAPB_WPAPB_W@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPB_WPAPB_W@std@@YAAAPAPB_WAAPAPB_WPAPB_W@Z PROC ; std::_Rechecked<wchar_t const * *,wchar_t const * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAPB_WPAPB_W@std@@YAAAPAPB_WAAPAPB_WPAPB_W@Z ENDP ; std::_Rechecked<wchar_t const * *,wchar_t const * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z PROC ; std::_Uninit_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPB_W0@Z ; std::_Ptr_cat<wchar_t const *,wchar_t const *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPB_W@std@@YAPAPB_WPAPB_W@Z ; std::_Val_type<wchar_t const * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PB_WPB_WPB_W@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<wchar_t const *,wchar_t const *,wchar_t const *>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ENDP ; std::_Uninit_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z PROC		; std::_Unchecked<wchar_t const * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z ENDP		; std::_Unchecked<wchar_t const * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UFunctionValues@@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UFunctionValues@@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@@Z PROC ; std::allocator<FunctionValues>::destroy<FunctionValues>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UFunctionValues@@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@@Z ENDP ; std::allocator<FunctionValues>::destroy<FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z PROC ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAUFunctionValues@@@std@@YAAAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z ENDP ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues &>
; Function compile flags: /Odtp
;	COMDAT ??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z PROC ; std::allocator<Token>::construct<Token,Token>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z ; std::forward<Token>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z ENDP ; std::allocator<Token>::construct<Token,Token>
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAAAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
; Function compile flags: /Odtp
;	COMDAT ??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z PROC ; std::allocator<wchar_t const *>::construct<wchar_t const *,wchar_t const * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPB_W@std@@YAAAPB_WAAPB_W@Z	; std::forward<wchar_t const * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z ENDP ; std::allocator<wchar_t const *>::construct<wchar_t const *,wchar_t const * &>
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z PROC ; std::_Uninitialized_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ; std::_Unchecked<FunctionValues *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ; std::_Unchecked<FunctionValues *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUFunctionValues@@@std@@YAPAUFunctionValues@@PAU1@@Z ; std::_Unchecked<FunctionValues *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ; std::_Uninit_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUFunctionValues@@PAU1@@std@@YAAAPAUFunctionValues@@AAPAU1@PAU1@@Z ; std::_Rechecked<FunctionValues *,FunctionValues *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z PROC ; std::_Uninitialized_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ; std::_Unchecked<Token *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ; std::_Unchecked<Token *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUToken@@@std@@YAPAUToken@@PAU1@@Z ; std::_Unchecked<Token *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ; std::_Uninit_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUToken@@PAU1@@std@@YAAAPAUToken@@AAPAU1@PAU1@@Z ; std::_Rechecked<Token *,Token *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UToken@@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@@Z ; std::_Wrap_alloc<std::allocator<Token> >::destroy<Token>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@UToken@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUToken@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UToken@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUToken@@0@Z PROC ; std::_Ptr_cat<Token,Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@UToken@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUToken@@0@Z ENDP ; std::_Ptr_cat<Token,Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ; std::_Unchecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ; std::_Unchecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@@Z ; std::_Unchecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@@std@@YAAAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z PROC ; std::_Uninitialized_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z ; std::_Unchecked<wchar_t const * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z ; std::_Unchecked<wchar_t const * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPB_W@std@@YAPAPB_WPAPB_W@Z ; std::_Unchecked<wchar_t const * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninit_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPB_WPAPB_W@std@@YAAAPAPB_WAAPAPB_WPAPB_W@Z ; std::_Rechecked<wchar_t const * *,wchar_t const * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ENDP ; std::_Uninitialized_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UFunctionValues@@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::destroy<FunctionValues>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@UFunctionValues@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUFunctionValues@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UFunctionValues@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUFunctionValues@@0@Z PROC ; std::_Ptr_cat<FunctionValues,FunctionValues>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@UFunctionValues@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUFunctionValues@@0@Z ENDP ; std::_Ptr_cat<FunctionValues,FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::destroy<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0@Z PROC ; std::_Ptr_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPB_W0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPB_W0@Z PROC ; std::_Ptr_cat<wchar_t const *,wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPB_W0@Z ENDP ; std::_Ptr_cat<wchar_t const *,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQB_WPAPB_W@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQB_WPAPB_W@Z PROC ; std::_Ptr_cat<wchar_t const *,wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 453
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 455
	mov	al, BYTE PTR __Cat$[ebp]
; Line 456
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQB_WPAPB_W@Z ENDP ; std::_Ptr_cat<wchar_t const *,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UFunctionValues@@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UFunctionValues@@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@@Z PROC ; std::allocator_traits<std::allocator<FunctionValues> >::destroy<FunctionValues>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UFunctionValues@@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@@Z ; std::allocator<FunctionValues>::destroy<FunctionValues>
; Line 731
	pop	ebp
	ret	0
??$destroy@UFunctionValues@@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@@Z ENDP ; std::allocator_traits<std::allocator<FunctionValues> >::destroy<FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@ABU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@ABU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UFunctionValues@@ABU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@ABU3@@Z PROC ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUFunctionValues@@@std@@YAABUFunctionValues@@ABU1@@Z ; std::forward<FunctionValues const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@ABU3@@Z ; std::allocator<FunctionValues>::construct
; Line 724
	pop	ebp
	ret	0
??$construct@UFunctionValues@@ABU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@ABU3@@Z ENDP ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABUFunctionValues@@@std@@YAABUFunctionValues@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUFunctionValues@@@std@@YAABUFunctionValues@@ABU1@@Z PROC ; std::forward<FunctionValues const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABUFunctionValues@@@std@@YAABUFunctionValues@@ABU1@@Z ENDP ; std::forward<FunctionValues const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@AAU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@AAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UFunctionValues@@AAU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@AAU3@@Z PROC ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUFunctionValues@@@std@@YAAAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UFunctionValues@@AAU1@@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@AAU2@@Z ; std::allocator<FunctionValues>::construct<FunctionValues,FunctionValues &>
; Line 724
	pop	ebp
	ret	0
??$construct@UFunctionValues@@AAU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@AAU3@@Z ENDP ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAUFunctionValues@@@std@@YAAAUFunctionValues@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUFunctionValues@@@std@@YAAAUFunctionValues@@AAU1@@Z PROC ; std::forward<FunctionValues &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAUFunctionValues@@@std@@YAAAUFunctionValues@@AAU1@@Z ENDP ; std::forward<FunctionValues &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UToken@@U1@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UToken@@U1@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<Token> >::construct<Token,Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z ; std::forward<Token>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UToken@@U1@@?$allocator@UToken@@@std@@QAEXPAUToken@@$$QAU2@@Z ; std::allocator<Token>::construct<Token,Token>
; Line 724
	pop	ebp
	ret	0
??$construct@UToken@@U1@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<Token> >::construct<Token,Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAABV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct
; Line 724
	pop	ebp
	ret	0
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAABV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAABV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z PROC ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAABV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ENDP ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV31@@Z PROC ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAAAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
; Line 724
	pop	ebp
	ret	0
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAAAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAAAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAAAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PB_WABQB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WABQB_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PB_WABQB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WABQB_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQB_W@std@@YAABQB_WABQB_W@Z	; std::forward<wchar_t const * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@PB_W@std@@QAEXPAPB_WABQB_W@Z ; std::allocator<wchar_t const *>::construct
; Line 724
	pop	ebp
	ret	0
??$construct@PB_WABQB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WABQB_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABQB_W@std@@YAABQB_WABQB_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQB_W@std@@YAABQB_WABQB_W@Z PROC		; std::forward<wchar_t const * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABQB_W@std@@YAABQB_WABQB_W@Z ENDP		; std::forward<wchar_t const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PB_WAAPB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WAAPB_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PB_WAAPB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WAAPB_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPB_W@std@@YAAAPB_WAAPB_W@Z	; std::forward<wchar_t const * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PB_WAAPB_W@?$allocator@PB_W@std@@QAEXPAPB_WAAPB_W@Z ; std::allocator<wchar_t const *>::construct<wchar_t const *,wchar_t const * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PB_WAAPB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WAAPB_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPB_W@std@@YAAAPB_WAAPB_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPB_W@std@@YAAAPB_WAAPB_W@Z PROC		; std::forward<wchar_t const * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPB_W@std@@YAAAPB_WAAPB_W@Z ENDP		; std::forward<wchar_t const * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@UFunctionValues@@@std@@YAPAUFunctionValues@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UFunctionValues@@@std@@YAPAUFunctionValues@@IPAU1@@Z PROC ; std::_Allocate<FunctionValues>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UFunctionValues@@@std@@YAPAUFunctionValues@@IPAU1@@Z ENDP ; std::_Allocate<FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@UToken@@@std@@YAPAUToken@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UToken@@@std@@YAPAUToken@@IPAU1@@Z PROC	; std::_Allocate<Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UToken@@@std@@YAPAUToken@@IPAU1@@Z ENDP	; std::_Allocate<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@IPAV10@@Z PROC ; std::_Allocate<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@IPAV10@@Z ENDP ; std::_Allocate<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@PB_W@std@@YAPAPB_WIPAPB_W@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PB_W@std@@YAPAPB_WIPAPB_W@Z PROC		; std::_Allocate<wchar_t const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PB_W@std@@YAPAPB_WIPAPB_W@Z ENDP		; std::_Allocate<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAUFunctionValues@@@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEPAUFunctionValues@@PAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUFunctionValues@@@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEPAUFunctionValues@@PAU2@00@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Umove<FunctionValues *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUFunctionValues@@PAU1@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAPAUFunctionValues@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ; std::_Uninitialized_move<FunctionValues *,FunctionValues *,std::_Wrap_alloc<std::allocator<FunctionValues> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUFunctionValues@@@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEPAUFunctionValues@@PAU2@00@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Umove<FunctionValues *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAUToken@@@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEPAUToken@@PAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUToken@@@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEPAUToken@@PAU2@00@Z PROC ; std::vector<Token,std::allocator<Token> >::_Umove<Token *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUToken@@PAU1@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAPAUToken@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ; std::_Uninitialized_move<Token *,Token *,std::_Wrap_alloc<std::allocator<Token> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUToken@@@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEPAUToken@@PAU2@00@Z ENDP ; std::vector<Token,std::allocator<Token> >::_Umove<Token *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UToken@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUToken@@0@Z ; std::_Ptr_cat<Token,Token>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@PAV21@00@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Umove<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::vector<wchar_t const *,std::allocator<wchar_t const *> > *,std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@PAV21@00@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Umove<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAPB_W@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WPAPB_W00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPB_W@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WPAPB_W00@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Umove<wchar_t const * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAPB_WPAPB_WU?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAPAPB_WPAPB_W00AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Uninitialized_move<wchar_t const * *,wchar_t const * *,std::_Wrap_alloc<std::allocator<wchar_t const *> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPB_W@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WPAPB_W00@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Umove<wchar_t const * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UFunctionValues@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUFunctionValues@@0@Z ; std::_Ptr_cat<FunctionValues,FunctionValues>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0@Z ; std::_Ptr_cat<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QBEPBQB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QBEPBQB_WXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Unchecked, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 60
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QBEPBQB_WXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PB_WHPBQB_WABQB_WU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t const *,int,wchar_t const * const *,wchar_t const * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PB_WPB_W@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPB_W0@Z ; std::_Ptr_cat<wchar_t const *,wchar_t const *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@_W@std@@YAPA_WAA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@_W@std@@YAPA_WAA_W@Z PROC			; std::addressof<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@_W@std@@YAPA_WAA_W@Z ENDP			; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UFunctionValues@@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UFunctionValues@@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@@Z PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::destroy<FunctionValues>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UFunctionValues@@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::destroy<FunctionValues>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UFunctionValues@@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@@Z ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::destroy<FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@ABU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@ABU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UFunctionValues@@ABU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@ABU2@@Z PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUFunctionValues@@@std@@YAABUFunctionValues@@ABU1@@Z ; std::forward<FunctionValues const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UFunctionValues@@ABU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@ABU3@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UFunctionValues@@ABU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@ABU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UFunctionValues@@AAU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UFunctionValues@@AAU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@AAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUFunctionValues@@@std@@YAAAUFunctionValues@@AAU1@@Z ; std::forward<FunctionValues &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UFunctionValues@@AAU1@@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAXAAV?$allocator@UFunctionValues@@@1@PAUFunctionValues@@AAU3@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UFunctionValues@@AAU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@AAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@$$CBUFunctionValues@@@std@@YAPBUFunctionValues@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUFunctionValues@@@std@@YAPBUFunctionValues@@ABU1@@Z PROC ; std::addressof<FunctionValues const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@$$CBUFunctionValues@@@std@@YAPBUFunctionValues@@ABU1@@Z ENDP ; std::addressof<FunctionValues const >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -32						; size = 12
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 376
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 378
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@operator
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
$LN5@operator:
	ret	0
__ehhandler$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-
; Function compile flags: /Odtp
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 371
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	mov	eax, DWORD PTR __Off$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=
; Line 373
	mov	esp, ebp
	pop	ebp
	ret	4
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
; Line 362
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEAAUFunctionValues@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEAAUFunctionValues@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEABUFunctionValues@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*
; Line 325
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEAAUFunctionValues@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 307
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	esi, DWORD PTR __Off$[ebp]
	shl	esi, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	esi, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR __Off$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax+8], ecx
	jae	SHORT $LN2@operator
$LN1@operator:
; Line 159
	push	159					; 0000009fH
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 160
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1OK@BKLKOIHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 170
	mov	eax, DWORD PTR __Off$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
; Line 172
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEABUFunctionValues@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEABUFunctionValues@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1OI@FONGOOEE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEABUFunctionValues@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UFunctionValues@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,FunctionValues,int,FunctionValues const *,FunctionValues const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??$construct@UToken@@U1@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UToken@@U1@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<Token> >::construct<Token,Token>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z ; std::forward<Token>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UToken@@U1@@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAXAAV?$allocator@UToken@@@1@PAUToken@@$$QAU3@@Z ; std::allocator_traits<std::allocator<Token> >::construct<Token,Token>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UToken@@U1@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Token> >::construct<Token,Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z PROC	; std::forward<Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z ENDP	; std::forward<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@UToken@@@std@@YAPAUToken@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@UToken@@@std@@YAPAUToken@@AAU1@@Z PROC	; std::addressof<Token>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@UToken@@@std@@YAPAUToken@@AAU1@@Z ENDP	; std::addressof<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAABV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAAAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@1@PAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV31@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@$$CBV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPBV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPBV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z PROC ; std::addressof<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@$$CBV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPBV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ENDP ; std::addressof<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PB_WABQB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WABQB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PB_WABQB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WABQB_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQB_W@std@@YAABQB_WABQB_W@Z	; std::forward<wchar_t const * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PB_WABQB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WABQB_W@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PB_WABQB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WABQB_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PB_WAAPB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WAAPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PB_WAAPB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WAAPB_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPB_W@std@@YAAAPB_WAAPB_W@Z	; std::forward<wchar_t const * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PB_WAAPB_W@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAXAAV?$allocator@PB_W@1@PAPB_WAAPB_W@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PB_WAAPB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WAAPB_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@QB_W@std@@YAPBQB_WABQB_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QB_W@std@@YAPBQB_WABQB_W@Z PROC		; std::addressof<wchar_t const * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@QB_W@std@@YAPBQB_WABQB_W@Z ENDP		; std::addressof<wchar_t const * const>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@I@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEII@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEPAUFunctionValues@@I@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUFunctionValues@@@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEPAUFunctionValues@@PAU2@00@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Umove<FunctionValues *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@I@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@I@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1607
	mov	edx, DWORD PTR __Size$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBE_NPBUFunctionValues@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBE_NPBUFunctionValues@@@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBE_NPBUFunctionValues@@@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEII@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEII@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXPAUFunctionValues@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXPAUFunctionValues@@0@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@@std@@YAXPAUFunctionValues@@0AAU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<FunctionValues> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXPAUFunctionValues@@0@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Destroy
; Line 1510
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 1511
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?pop_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?pop_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::pop_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1267
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1268
	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBE_NXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@pop_back
; Line 1269
	push	1269					; 000004f5H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DA@JIKEAPDO@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAp?$AAo?$AAp?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1270
	jmp	SHORT $LN3@pop_back
$LN2@pop_back:
; Line 1272
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Orphan_range
; Line 1273
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	??$destroy@UFunctionValues@@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::destroy<FunctionValues>
; Line 1274
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@pop_back:
; Line 1276
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXABUFunctionValues@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXABUFunctionValues@@@Z PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUFunctionValues@@@std@@YAPBUFunctionValues@@ABU1@@Z ; std::addressof<FunctionValues const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBE_NPBUFunctionValues@@@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUFunctionValues@@@std@@YAPBUFunctionValues@@ABU1@@Z ; std::addressof<FunctionValues const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 4
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Orphan_range
; Line 1251
	mov	eax, DWORD PTR __Idx$1[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	??$construct@UFunctionValues@@AAU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues &>
; Line 1252
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXI@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IBEXPAUFunctionValues@@0@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Orphan_range
; Line 1260
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	??$construct@UFunctionValues@@ABU1@@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<FunctionValues> >::construct<FunctionValues,FunctionValues const &>
; Line 1261
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXABUFunctionValues@@@Z ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ
_TEXT	SEGMENT
$T2 = -60						; size = 12
$T3 = -48						; size = 12
$T4 = -36						; size = 4
tv80 = -32						; size = 4
tv82 = -28						; size = 4
tv78 = -24						; size = 4
tv81 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1233
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1234
	push	1
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::end
	mov	DWORD PTR tv81[ebp], eax
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv78[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv78[ebp]
	call	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator-
	mov	DWORD PTR tv82[ebp], eax
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv80[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv80[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QBEAAUFunctionValues@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::operator*
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 1235
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::back
; Function compile flags: /Odtp
;	COMDAT ?empty@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBE_NXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv75[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv75[ebp]
; Line 1159
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBE_NXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<FunctionValues> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 4
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1034
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1035
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@PAUFunctionValues@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FunctionValues> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1036
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@@2@XZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::end
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 4
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 4
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::~vector<FunctionValues,std::allocator<FunctionValues> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@IAEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::~_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::~_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
__ehhandler$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::~vector<FunctionValues,std::allocator<FunctionValues> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ PROC ; std::vector<FunctionValues,std::allocator<FunctionValues> >::vector<FunctionValues,std::allocator<FunctionValues> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@UFunctionValues@@@std@@QAE@XZ ; std::allocator<FunctionValues>::allocator<FunctionValues>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 681
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::~_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
__ehhandler$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ENDP ; std::vector<FunctionValues,std::allocator<FunctionValues> >::vector<FunctionValues,std::allocator<FunctionValues> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<FunctionValues> >::_Wrap_alloc<std::allocator<FunctionValues> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::~_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::~_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<FunctionValues> >::_Vector_val<std::_Simple_types<FunctionValues> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@@std@@QAE@ABV?$allocator@UFunctionValues@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >::_Vector_alloc<0,std::_Vec_base_types<FunctionValues,std::allocator<FunctionValues> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<FunctionValues> >::~_Vector_val<std::_Simple_types<FunctionValues> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<FunctionValues> >::~_Vector_val<std::_Simple_types<FunctionValues> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<FunctionValues> >::_Vector_val<std::_Simple_types<FunctionValues> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@UFunctionValues@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<FunctionValues> >::_Vector_val<std::_Simple_types<FunctionValues> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAIABV?$allocator@UFunctionValues@@@2@@Z ; std::allocator_traits<std::allocator<FunctionValues> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@I@Z PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@I@Z ; std::allocator<FunctionValues>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEXPAUFunctionValues@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEPAUFunctionValues@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEPAUFunctionValues@@I@Z PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@UFunctionValues@@@std@@QAEPAUFunctionValues@@I@Z ; std::allocator<FunctionValues>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAEPAUFunctionValues@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<FunctionValues> >::_Wrap_alloc<std::allocator<FunctionValues> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UFunctionValues@@@std@@QAE@XZ ; std::allocator<FunctionValues>::allocator<FunctionValues>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<FunctionValues> >::_Wrap_alloc<std::allocator<FunctionValues> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAIABV?$allocator@UFunctionValues@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAIABV?$allocator@UFunctionValues@@@2@@Z PROC ; std::allocator_traits<std::allocator<FunctionValues> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@UFunctionValues@@@std@@QBEIXZ ; std::allocator<FunctionValues>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@UFunctionValues@@@std@@@std@@SAIABV?$allocator@UFunctionValues@@@2@@Z ENDP ; std::allocator_traits<std::allocator<FunctionValues> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@UFunctionValues@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UFunctionValues@@@std@@QBEIXZ PROC ; std::allocator<FunctionValues>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 268435455				; 0fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UFunctionValues@@@std@@QBEIXZ ENDP ; std::allocator<FunctionValues>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@ABU3@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv69 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@ABU3@@Z PROC ; std::allocator<FunctionValues>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@ABU3@@Z ENDP ; std::allocator<FunctionValues>::construct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@UFunctionValues@@@std@@QAEPAUFunctionValues@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UFunctionValues@@@std@@QAEPAUFunctionValues@@I@Z PROC ; std::allocator<FunctionValues>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@UFunctionValues@@@std@@YAPAUFunctionValues@@IPAU1@@Z ; std::_Allocate<FunctionValues>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UFunctionValues@@@std@@QAEPAUFunctionValues@@I@Z ENDP ; std::allocator<FunctionValues>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@I@Z PROC ; std::allocator<FunctionValues>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UFunctionValues@@@std@@QAEXPAUFunctionValues@@I@Z ENDP ; std::allocator<FunctionValues>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UFunctionValues@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UFunctionValues@@@std@@QAE@XZ PROC	; std::allocator<FunctionValues>::allocator<FunctionValues>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UFunctionValues@@@std@@QAE@XZ ENDP	; std::allocator<FunctionValues>::allocator<FunctionValues>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z PROC ; std::vector<Token,std::allocator<Token> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z ENDP ; std::vector<Token,std::allocator<Token> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ PROC ; std::vector<Token,std::allocator<Token> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 1760
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ ENDP ; std::vector<Token,std::allocator<Token> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ PROC ; std::vector<Token,std::allocator<Token> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ ENDP ; std::vector<Token,std::allocator<Token> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXXZ PROC ; std::vector<Token,std::allocator<Token> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXPAUToken@@0@Z ; std::vector<Token,std::allocator<Token> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@I@Z ; std::_Wrap_alloc<std::allocator<Token> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXXZ ENDP ; std::vector<Token,std::allocator<Token> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z PROC ; std::vector<Token,std::allocator<Token> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ ; std::vector<Token,std::allocator<Token> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEII@Z ; std::vector<Token,std::allocator<Token> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z ; std::vector<Token,std::allocator<Token> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Token,std::allocator<Token> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z PROC ; std::vector<Token,std::allocator<Token> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEPAUToken@@I@Z ; std::_Wrap_alloc<std::allocator<Token> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUToken@@@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEPAUToken@@PAU2@00@Z ; std::vector<Token,std::allocator<Token> >::_Umove<Token *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@I@Z ; std::_Wrap_alloc<std::allocator<Token> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXPAUToken@@0@Z ; std::vector<Token,std::allocator<Token> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@I@Z ; std::_Wrap_alloc<std::allocator<Token> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	imul	edx, DWORD PTR __Count$[ebp], 12
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	imul	ecx, DWORD PTR __Size$[ebp], 12
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1608
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Token,std::allocator<Token> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBE_NPBUToken@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBE_NPBUToken@@@Z PROC ; std::vector<Token,std::allocator<Token> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBE_NPBUToken@@@Z ENDP ; std::vector<Token,std::allocator<Token> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEII@Z PROC ; std::vector<Token,std::allocator<Token> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEII@Z ENDP ; std::vector<Token,std::allocator<Token> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXPAUToken@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXPAUToken@@0@Z PROC ; std::vector<Token,std::allocator<Token> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@@std@@YAXPAUToken@@0AAU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Token> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXPAUToken@@0@Z ENDP ; std::vector<Token,std::allocator<Token> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?at@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEAAUToken@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEAAUToken@@I@Z PROC ; std::vector<Token,std::allocator<Token> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1175
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at
; Line 1176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXXZ ; std::vector<Token,std::allocator<Token> >::_Xran
$LN1@at:
; Line 1177
	imul	eax, DWORD PTR __Pos$[ebp], 12
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
$LN3@at:
; Line 1178
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEAAUToken@@I@Z ENDP ; std::vector<Token,std::allocator<Token> >::at
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ PROC ; std::vector<Token,std::allocator<Token> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<Token> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ENDP ; std::vector<Token,std::allocator<Token> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ PROC ; std::vector<Token,std::allocator<Token> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ENDP ; std::vector<Token,std::allocator<Token> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ PROC ; std::vector<Token,std::allocator<Token> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ENDP ; std::vector<Token,std::allocator<Token> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ PROC ; std::vector<Token,std::allocator<Token> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ENDP ; std::vector<Token,std::allocator<Token> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ PROC ; std::vector<Token,std::allocator<Token> >::~vector<Token,std::allocator<Token> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXXZ ; std::vector<Token,std::allocator<Token> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::~_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::~_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
__ehhandler$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ ENDP ; std::vector<Token,std::allocator<Token> >::~vector<Token,std::allocator<Token> >
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEX$$QAUToken@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEX$$QAUToken@@@Z PROC ; std::vector<Token,std::allocator<Token> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 866
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@UToken@@@std@@YAPAUToken@@AAU1@@Z ; std::addressof<Token>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBE_NPBUToken@@@Z ; std::vector<Token,std::allocator<Token> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 868
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@UToken@@@std@@YAPAUToken@@AAU1@@Z ; std::addressof<Token>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 12					; 0000000cH
	idiv	ecx
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 869
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 870
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z ; std::vector<Token,std::allocator<Token> >::_Reserve
$LN3@push_back:
; Line 871
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z ; std::vector<Token,std::allocator<Token> >::_Orphan_range
; Line 873
	imul	eax, DWORD PTR __Idx$1[ebp], 12
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	call	??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z ; std::forward<Token>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
	mov	ecx, eax
	call	??$construct@UToken@@U1@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Token> >::construct<Token,Token>
; Line 874
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 876
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 878
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 879
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IAEXI@Z ; std::vector<Token,std::allocator<Token> >::_Reserve
$LN1@push_back:
; Line 880
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@IBEXPAUToken@@0@Z ; std::vector<Token,std::allocator<Token> >::_Orphan_range
; Line 882
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@UToken@@@std@@YA$$QAUToken@@AAU1@@Z ; std::forward<Token>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
	mov	ecx, eax
	call	??$construct@UToken@@U1@@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Token> >::construct<Token,Token>
; Line 883
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEX$$QAUToken@@@Z ENDP ; std::vector<Token,std::allocator<Token> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ PROC ; std::vector<Token,std::allocator<Token> >::vector<Token,std::allocator<Token> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@UToken@@@std@@QAE@XZ	; std::allocator<Token>::allocator<Token>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 681
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::~_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
__ehhandler$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ ENDP ; std::vector<Token,std::allocator<Token> >::vector<Token,std::allocator<Token> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Token> >::_Wrap_alloc<std::allocator<Token> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UToken@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::~_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::~_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Token> >::_Vector_val<std::_Simple_types<Token> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UToken@@V?$allocator@UToken@@@std@@@std@@@std@@QAE@ABV?$allocator@UToken@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >::_Vector_alloc<0,std::_Vec_base_types<Token,std::allocator<Token> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Token> >::~_Vector_val<std::_Simple_types<Token> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Token> >::~_Vector_val<std::_Simple_types<Token> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Token> >::_Vector_val<std::_Simple_types<Token> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@UToken@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Token> >::_Vector_val<std::_Simple_types<Token> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<Token> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAIABV?$allocator@UToken@@@2@@Z ; std::allocator_traits<std::allocator<Token> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<Token> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Token> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UToken@@@std@@QAEXPAUToken@@I@Z ; std::allocator<Token>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEXPAUToken@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Token> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEPAUToken@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEPAUToken@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Token> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@UToken@@@std@@QAEPAUToken@@I@Z ; std::allocator<Token>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAEPAUToken@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Token> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<Token> >::_Wrap_alloc<std::allocator<Token> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UToken@@@std@@QAE@XZ	; std::allocator<Token>::allocator<Token>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UToken@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<Token> >::_Wrap_alloc<std::allocator<Token> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAIABV?$allocator@UToken@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAIABV?$allocator@UToken@@@2@@Z PROC ; std::allocator_traits<std::allocator<Token> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@UToken@@@std@@QBEIXZ ; std::allocator<Token>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@UToken@@@std@@@std@@SAIABV?$allocator@UToken@@@2@@Z ENDP ; std::allocator_traits<std::allocator<Token> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@UToken@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UToken@@@std@@QBEIXZ PROC		; std::allocator<Token>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 357913941				; 15555555H
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UToken@@@std@@QBEIXZ ENDP		; std::allocator<Token>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@UToken@@@std@@QAEPAUToken@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UToken@@@std@@QAEPAUToken@@I@Z PROC ; std::allocator<Token>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@UToken@@@std@@YAPAUToken@@IPAU1@@Z ; std::_Allocate<Token>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UToken@@@std@@QAEPAUToken@@I@Z ENDP ; std::allocator<Token>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@UToken@@@std@@QAEXPAUToken@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UToken@@@std@@QAEXPAUToken@@I@Z PROC ; std::allocator<Token>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UToken@@@std@@QAEXPAUToken@@I@Z ENDP ; std::allocator<Token>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UToken@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UToken@@@std@@QAE@XZ PROC		; std::allocator<Token>::allocator<Token>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UToken@@@std@@QAE@XZ ENDP		; std::allocator<Token>::allocator<Token>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_subs2$ = -20						; size = 4
_subs1$ = -16						; size = 4
tv93 = -12						; size = 4
tv86 = -8						; size = 4
_i$ = -4						; size = 4
_name1$ = 8						; size = 4
_name2$ = 12						; size = 4
_len$ = 16						; size = 4
?testNameNoCase@@YAHPB_W0H@Z PROC			; testNameNoCase
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 63
	cmp	DWORD PTR _len$[ebp], -1
	jne	SHORT $LN5@testNameNo
; Line 64
	mov	DWORD PTR _len$[ebp], 1024		; 00000400H
$LN5@testNameNo:
; Line 66
	mov	DWORD PTR _i$[ebp], 0
$LN4@testNameNo:
; Line 67
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _name2$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _name1$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	push	edx
	call	?match@@YA_N_W0@Z			; match
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@testNameNo
; Line 68
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _name1$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	je	SHORT $LN1@testNameNo
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jne	SHORT $LN2@testNameNo
$LN1@testNameNo:
; Line 69
	xor	eax, eax
	jmp	$LN6@testNameNo
$LN2@testNameNo:
; Line 71
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 72
	jmp	SHORT $LN4@testNameNo
$LN3@testNameNo:
; Line 74
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _name1$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	push	edx
	call	?lower@@YA_N_W@Z			; lower
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@testNameNo
	mov	DWORD PTR tv86[ebp], 32			; 00000020H
	jmp	SHORT $LN9@testNameNo
$LN8@testNameNo:
	mov	DWORD PTR tv86[ebp], 0
$LN9@testNameNo:
	mov	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR _subs1$[ebp], ecx
; Line 75
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _name2$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	push	ecx
	call	?lower@@YA_N_W@Z			; lower
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@testNameNo
	mov	DWORD PTR tv93[ebp], 32			; 00000020H
	jmp	SHORT $LN11@testNameNo
$LN10@testNameNo:
	mov	DWORD PTR tv93[ebp], 0
$LN11@testNameNo:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR _subs2$[ebp], eax
; Line 77
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _name1$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	sub	eax, DWORD PTR _subs1$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _name2$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2]
	sub	ecx, DWORD PTR _subs2$[ebp]
	sub	eax, ecx
$LN6@testNameNo:
; Line 78
	mov	esp, ebp
	pop	ebp
	ret	0
?testNameNoCase@@YAHPB_W0H@Z ENDP			; testNameNoCase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?match@@YA_N_W0@Z
_TEXT	SEGMENT
tv85 = -8						; size = 4
tv75 = -4						; size = 4
_c1$ = 8						; size = 2
_c2$ = 12						; size = 2
?match@@YA_N_W0@Z PROC					; match, COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 52
	movzx	eax, WORD PTR _c1$[ebp]
	movzx	ecx, WORD PTR _c2$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN3@match
	mov	al, 1
	jmp	SHORT $LN4@match
$LN3@match:
; Line 53
	movzx	edx, WORD PTR _c1$[ebp]
	push	edx
	call	?lower@@YA_N_W@Z			; lower
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@match
; Line 54
	movzx	ecx, WORD PTR _c1$[ebp]
	sub	ecx, 32					; 00000020H
	movzx	edx, WORD PTR _c2$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN6@match
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN7@match
$LN6@match:
	mov	DWORD PTR tv75[ebp], 0
$LN7@match:
	mov	al, BYTE PTR tv75[ebp]
	jmp	SHORT $LN4@match
$LN2@match:
; Line 55
	movzx	eax, WORD PTR _c2$[ebp]
	push	eax
	call	?lower@@YA_N_W@Z			; lower
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@match
; Line 56
	movzx	edx, WORD PTR _c2$[ebp]
	sub	edx, 32					; 00000020H
	movzx	eax, WORD PTR _c1$[ebp]
	cmp	edx, eax
	jne	SHORT $LN8@match
	mov	DWORD PTR tv85[ebp], 1
	jmp	SHORT $LN9@match
$LN8@match:
	mov	DWORD PTR tv85[ebp], 0
$LN9@match:
	mov	al, BYTE PTR tv85[ebp]
	jmp	SHORT $LN4@match
$LN1@match:
; Line 57
	xor	al, al
$LN4@match:
; Line 58
	mov	esp, ebp
	pop	ebp
	ret	0
?match@@YA_N_W0@Z ENDP					; match
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?lower@@YA_N_W@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_c$ = 8							; size = 2
?lower@@YA_N_W@Z PROC					; lower, COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 48
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN3@lower
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 122				; 0000007aH
	jg	SHORT $LN3@lower
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@lower
$LN3@lower:
	mov	DWORD PTR tv68[ebp], 0
$LN4@lower:
	mov	al, BYTE PTR tv68[ebp]
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?lower@@YA_N_W@Z ENDP					; lower
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0FunctionValues@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0FunctionValues@@QAE@XZ PROC				; FunctionValues::FunctionValues, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0FunctionValues@@QAE@XZ ENDP				; FunctionValues::FunctionValues
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Token@@QAE@PA_WH_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_tok$ = 8						; size = 4
_len$ = 12						; size = 4
_isID$ = 16						; size = 1
??0Token@@QAE@PA_WH_N@Z PROC				; Token::Token, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tok$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _isID$[ebp]
	mov	BYTE PTR [ecx+8], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Token@@QAE@PA_WH_N@Z ENDP				; Token::Token
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isAdditionalWordChar@FunctionCallTip@@ABE_N_W@Z
_TEXT	SEGMENT
_addChars$ = -16					; size = 4
_len$ = -12						; size = 4
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
_ch$ = 8						; size = 2
?isAdditionalWordChar@FunctionCallTip@@ABE_N_W@Z PROC	; FunctionCallTip::isAdditionalWordChar, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.h
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	mov	DWORD PTR _addChars$[ebp], eax
; Line 89
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
	mov	DWORD PTR _len$[ebp], eax
; Line 90
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@isAddition
$LN3@isAddition:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@isAddition:
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jae	SHORT $LN2@isAddition
; Line 91
	movzx	edx, WORD PTR _ch$[ebp]
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _addChars$[ebp]
	movzx	eax, WORD PTR [ecx+eax*2]
	cmp	edx, eax
	jne	SHORT $LN1@isAddition
; Line 92
	mov	al, 1
	jmp	SHORT $LN5@isAddition
$LN1@isAddition:
; Line 93
	jmp	SHORT $LN3@isAddition
$LN2@isAddition:
	xor	al, al
$LN5@isAddition:
; Line 94
	mov	esp, ebp
	pop	ebp
	ret	4
?isAdditionalWordChar@FunctionCallTip@@ABE_N_W@Z ENDP	; FunctionCallTip::isAdditionalWordChar
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isBasicWordChar@FunctionCallTip@@ABE_N_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv78 = -4						; size = 4
_ch$ = 8						; size = 2
?isBasicWordChar@FunctionCallTip@@ABE_N_W@Z PROC	; FunctionCallTip::isBasicWordChar, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.h
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN3@isBasicWor
	movzx	ecx, WORD PTR _ch$[ebp]
	cmp	ecx, 90					; 0000005aH
	jle	SHORT $LN5@isBasicWor
$LN3@isBasicWor:
	movzx	edx, WORD PTR _ch$[ebp]
	cmp	edx, 97					; 00000061H
	jl	SHORT $LN4@isBasicWor
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN5@isBasicWor
$LN4@isBasicWor:
	movzx	ecx, WORD PTR _ch$[ebp]
	cmp	ecx, 48					; 00000030H
	jl	SHORT $LN6@isBasicWor
	movzx	edx, WORD PTR _ch$[ebp]
	cmp	edx, 57					; 00000039H
	jle	SHORT $LN5@isBasicWor
$LN6@isBasicWor:
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 95					; 0000005fH
	je	SHORT $LN5@isBasicWor
	mov	DWORD PTR tv78[ebp], 0
	jmp	SHORT $LN7@isBasicWor
$LN5@isBasicWor:
	mov	DWORD PTR tv78[ebp], 1
$LN7@isBasicWor:
	mov	al, BYTE PTR tv78[ebp]
; Line 86
	mov	esp, ebp
	pop	ebp
	ret	4
?isBasicWordChar@FunctionCallTip@@ABE_N_W@Z ENDP	; FunctionCallTip::isBasicWordChar
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?cleanup@FunctionCallTip@@AAEXXZ PROC			; FunctionCallTip::cleanup
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 451
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@FunctionCallTip@@AAEXXZ		; FunctionCallTip::reset
; Line 452
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN1@cleanup
; Line 453
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@cleanup:
; Line 454
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 455
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 456
	mov	esp, ebp
	pop	ebp
	ret	0
?cleanup@FunctionCallTip@@AAEXXZ ENDP			; FunctionCallTip::cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?reset@FunctionCallTip@@AAEXXZ PROC			; FunctionCallTip::reset
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 439
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 441
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
; Line 443
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 444
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?clear@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::clear
; Line 445
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 446
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?clear@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::clear
; Line 447
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?clear@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::clear
; Line 448
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@FunctionCallTip@@AAEXXZ ENDP			; FunctionCallTip::reset
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_maxLen$ = -4164					; size = 4
_osize$1 = -4160					; size = 4
$T2 = -4156						; size = 4
_curRetValText$ = -4152					; size = 4
_curDescriptionText$ = -4148				; size = 4
_nrParams$ = -4144					; size = 4
_highlightend$ = -4140					; size = 4
_psize$ = -4136						; size = 4
_i$3 = -4132						; size = 4
_highlightstart$ = -4128				; size = 4
_params$ = -4124					; size = 4
_i$4 = -4120						; size = 4
_i$5 = -4116						; size = 4
_bytesNeeded$ = -4112					; size = 4
_hasDescr$ = -4105					; size = 1
_this$ = -4104						; size = 4
_textBuffer$ = -4100					; size = 4096
__$ArrayPad$ = -4					; size = 4
?showCalltip@FunctionCallTip@@AAEXXZ PROC		; FunctionCallTip::showCalltip
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 352
	push	ebp
	mov	ebp, esp
	mov	eax, 4164				; 00001044H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	jne	SHORT $LN23@showCallti
; Line 356
	jmp	$LN25@showCallti
$LN23@showCallti:
; Line 360
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?at@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEAAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::at
	mov	DWORD PTR _params$[ebp], eax
; Line 361
	mov	ecx, DWORD PTR _params$[ebp]
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	add	eax, 1
	mov	DWORD PTR _psize$[ebp], eax
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	cmp	ecx, DWORD PTR _psize$[ebp]
	jb	$LN22@showCallti
; Line 363
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
	mov	DWORD PTR _osize$1[ebp], eax
; Line 364
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN21@showCallti
$LN20@showCallti:
	mov	edx, DWORD PTR _i$4[ebp]
	add	edx, 1
	mov	DWORD PTR _i$4[ebp], edx
$LN21@showCallti:
	mov	eax, DWORD PTR _i$4[ebp]
	cmp	eax, DWORD PTR _osize$1[ebp]
	jae	SHORT $LN22@showCallti
; Line 365
	mov	ecx, DWORD PTR _i$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?at@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEAAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::at
	mov	ecx, eax
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	add	eax, 1
	mov	DWORD PTR _psize$[ebp], eax
; Line 366
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	cmp	eax, DWORD PTR _psize$[ebp]
	jae	SHORT $LN18@showCallti
; Line 367
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$4[ebp]
	mov	DWORD PTR [ecx+76], edx
; Line 368
	jmp	SHORT $LN22@showCallti
$LN18@showCallti:
; Line 370
	jmp	SHORT $LN20@showCallti
$LN22@showCallti:
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _curRetValText$[ebp], edx
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _curDescriptionText$[ebp], edx
; Line 374
	mov	BYTE PTR _hasDescr$[ebp], 1
; Line 375
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _curDescriptionText$[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	test	eax, eax
	jne	SHORT $LN17@showCallti
; Line 376
	mov	BYTE PTR _hasDescr$[ebp], 0
$LN17@showCallti:
; Line 378
	mov	ecx, DWORD PTR _curRetValText$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	mov	esi, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	lea	ecx, DWORD PTR [esi+eax+5]
	mov	DWORD PTR _bytesNeeded$[ebp], ecx
; Line 379
	movzx	edx, BYTE PTR _hasDescr$[ebp]
	test	edx, edx
	je	SHORT $LN16@showCallti
; Line 380
	mov	eax, DWORD PTR _curDescriptionText$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	add	eax, DWORD PTR _bytesNeeded$[ebp]
	mov	DWORD PTR _bytesNeeded$[ebp], eax
$LN16@showCallti:
; Line 382
	mov	ecx, DWORD PTR _params$[ebp]
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	mov	DWORD PTR _nrParams$[ebp], eax
; Line 383
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN15@showCallti
$LN14@showCallti:
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
$LN15@showCallti:
	mov	edx, DWORD PTR _i$3[ebp]
	cmp	edx, DWORD PTR _nrParams$[ebp]
	jae	SHORT $LN13@showCallti
; Line 384
	mov	eax, DWORD PTR _i$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _params$[ebp]
	call	?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	mov	edx, DWORD PTR _bytesNeeded$[ebp]
	lea	eax, DWORD PTR [edx+eax+2]
	mov	DWORD PTR _bytesNeeded$[ebp], eax
; Line 385
	jmp	SHORT $LN14@showCallti
$LN13@showCallti:
; Line 387
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+72], 1
	jle	SHORT $LN12@showCallti
; Line 388
	mov	edx, DWORD PTR _bytesNeeded$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _bytesNeeded$[ebp], edx
$LN12@showCallti:
; Line 391
	mov	DWORD PTR _maxLen$[ebp], 2048		; 00000800H
; Line 392
	cmp	DWORD PTR _bytesNeeded$[ebp], 2048	; 00000800H
	jl	SHORT $LN11@showCallti
; Line 393
	jmp	$LN25@showCallti
$LN11@showCallti:
; Line 396
	mov	eax, 2
	imul	ecx, eax, 0
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 4096		; 00001000H
	jae	SHORT $LN26@showCallti
	jmp	SHORT $LN27@showCallti
$LN26@showCallti:
	call	___report_rangecheckfailure
$LN27@showCallti:
	xor	edx, edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	WORD PTR _textBuffer$[ebp+eax], dx
; Line 398
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+72], 1
	jle	SHORT $LN10@showCallti
; Line 399
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	add	edx, 1
	push	edx
	push	OFFSET $SG154403
	lea	eax, DWORD PTR _textBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
$LN10@showCallti:
; Line 402
	mov	ecx, DWORD PTR _curRetValText$[ebp]
	push	ecx
	lea	edx, DWORD PTR _textBuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
; Line 403
	push	OFFSET $SG154404
	lea	eax, DWORD PTR _textBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	lea	eax, DWORD PTR _textBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
; Line 405
	push	OFFSET $SG154405
	lea	ecx, DWORD PTR _textBuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcatW@8
; Line 407
	mov	DWORD PTR _highlightstart$[ebp], 0
; Line 408
	mov	DWORD PTR _highlightend$[ebp], 0
; Line 409
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN9@showCallti
$LN8@showCallti:
	mov	edx, DWORD PTR _i$5[ebp]
	add	edx, 1
	mov	DWORD PTR _i$5[ebp], edx
$LN9@showCallti:
	mov	eax, DWORD PTR _i$5[ebp]
	cmp	eax, DWORD PTR _nrParams$[ebp]
	jae	$LN7@showCallti
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$5[ebp]
	cmp	edx, DWORD PTR [ecx+80]
	jne	SHORT $LN6@showCallti
; Line 413
	lea	eax, DWORD PTR _textBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	mov	DWORD PTR _highlightstart$[ebp], eax
; Line 414
	mov	ecx, DWORD PTR _i$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _params$[ebp]
	call	?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	add	eax, DWORD PTR _highlightstart$[ebp]
	mov	DWORD PTR _highlightend$[ebp], eax
$LN6@showCallti:
; Line 416
	mov	eax, DWORD PTR _i$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _params$[ebp]
	call	?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _textBuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
; Line 417
	mov	eax, DWORD PTR _nrParams$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$5[ebp], eax
	jae	SHORT $LN5@showCallti
; Line 418
	push	OFFSET $SG154414
	lea	ecx, DWORD PTR _textBuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcatW@8
$LN5@showCallti:
; Line 419
	jmp	$LN8@showCallti
$LN7@showCallti:
; Line 421
	push	OFFSET $SG154415
	lea	edx, DWORD PTR _textBuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
; Line 422
	movzx	eax, BYTE PTR _hasDescr$[ebp]
	test	eax, eax
	je	SHORT $LN4@showCallti
; Line 423
	push	OFFSET $SG154417
	lea	ecx, DWORD PTR _textBuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcatW@8
; Line 424
	mov	edx, DWORD PTR _curDescriptionText$[ebp]
	push	edx
	lea	eax, DWORD PTR _textBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
$LN4@showCallti:
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isVisible@FunctionCallTip@@QAE_NXZ	; FunctionCallTip::isVisible
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@showCallti
; Line 428
	push	0
	push	0
	push	2201					; 00000899H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
; Line 429
	jmp	SHORT $LN2@showCallti
$LN3@showCallti:
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
$LN2@showCallti:
; Line 431
	lea	eax, DWORD PTR _textBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?showCallTip@ScintillaEditView@@QAEXHPB_W@Z ; ScintillaEditView::showCallTip
; Line 433
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+121], 1
; Line 434
	mov	edx, DWORD PTR _highlightstart$[ebp]
	cmp	edx, DWORD PTR _highlightend$[ebp]
	je	SHORT $LN25@showCallti
; Line 435
	mov	eax, DWORD PTR _highlightend$[ebp]
	push	eax
	mov	ecx, DWORD PTR _highlightstart$[ebp]
	push	ecx
	push	2204					; 0000089cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
$LN25@showCallti:
; Line 437
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?showCalltip@FunctionCallTip@@AAEXXZ ENDP		; FunctionCallTip::showCalltip
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_paramVec$ = -76					; size = 16
$T2 = -60						; size = 4
_param$3 = -56						; size = 4
_description$4 = -52					; size = 4
_retVal$5 = -48						; size = 4
_val$6 = -44						; size = 4
_compVal$7 = -40					; size = 4
_name$8 = -36						; size = 4
_paramNode$ = -32					; size = 4
_overloadNode$ = -28					; size = 4
_funcNode$ = -24					; size = 4
_this$ = -20						; size = 4
$T9 = -14						; size = 1
$T10 = -13						; size = 1
__$EHRec$ = -12						; size = 12
?loadFunction@FunctionCallTip@@AAE_NXZ PROC		; FunctionCallTip::loadFunction
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 272
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?loadFunction@FunctionCallTip@@AAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 273
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@FunctionCallTip@@AAEXXZ		; FunctionCallTip::reset
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _funcNode$[ebp], edx
; Line 279
	jmp	SHORT $LN22@loadFuncti
$LN21@loadFuncti:
	push	OFFSET $SG154327
	mov	ecx, DWORD PTR _funcNode$[ebp]
	call	?NextSiblingElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z ; TiXmlNode::NextSiblingElement
	mov	DWORD PTR _funcNode$[ebp], eax
$LN22@loadFuncti:
	cmp	DWORD PTR _funcNode$[ebp], 0
	je	$LN20@loadFuncti
; Line 281
	mov	DWORD PTR _name$8[ebp], 0
; Line 282
	push	OFFSET $SG154329
	mov	ecx, DWORD PTR _funcNode$[ebp]
	call	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z	; TiXmlElement::Attribute
	mov	DWORD PTR _name$8[ebp], eax
; Line 283
	cmp	DWORD PTR _name$8[ebp], 0
	jne	SHORT $LN19@loadFuncti
; Line 284
	jmp	SHORT $LN21@loadFuncti
$LN19@loadFuncti:
; Line 285
	mov	DWORD PTR _compVal$7[ebp], 0
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+120]
	test	ecx, ecx
	je	SHORT $LN18@loadFuncti
; Line 287
	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _name$8[ebp]
	push	ecx
	call	?testNameNoCase@@YAHPB_W0H@Z		; testNameNoCase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _compVal$7[ebp], eax
; Line 288
	jmp	SHORT $LN17@loadFuncti
$LN18@loadFuncti:
; Line 289
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _name$8[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcmpW@8
	mov	DWORD PTR _compVal$7[ebp], eax
$LN17@loadFuncti:
; Line 290
	cmp	DWORD PTR _compVal$7[ebp], 0
	jne	SHORT $LN16@loadFuncti
; Line 292
	push	OFFSET $SG154336
	mov	ecx, DWORD PTR _funcNode$[ebp]
	call	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z	; TiXmlElement::Attribute
	mov	DWORD PTR _val$6[ebp], eax
; Line 293
	cmp	DWORD PTR _val$6[ebp], 0
	je	SHORT $LN16@loadFuncti
; Line 295
	push	OFFSET $SG154339
	mov	edx, DWORD PTR _val$6[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcmpW@8
	test	eax, eax
	jne	SHORT $LN14@loadFuncti
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _funcNode$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 299
	jmp	SHORT $LN20@loadFuncti
; Line 301
	jmp	SHORT $LN16@loadFuncti
$LN14@loadFuncti:
; Line 304
	xor	al, al
	jmp	$LN23@loadFuncti
$LN16@loadFuncti:
; Line 308
	jmp	$LN21@loadFuncti
$LN20@loadFuncti:
; Line 311
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 0
	jne	SHORT $LN12@loadFuncti
; Line 312
	xor	al, al
	jmp	$LN23@loadFuncti
$LN12@loadFuncti:
; Line 314
	lea	ecx, DWORD PTR _paramVec$[ebp]
	call	??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 316
	push	OFFSET $SG154344
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _overloadNode$[ebp], eax
; Line 317
	mov	DWORD PTR _paramNode$[ebp], 0
; Line 318
	jmp	SHORT $LN11@loadFuncti
$LN10@loadFuncti:
	push	OFFSET $SG154349
	mov	ecx, DWORD PTR _overloadNode$[ebp]
	call	?NextSiblingElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z ; TiXmlNode::NextSiblingElement
	mov	DWORD PTR _overloadNode$[ebp], eax
$LN11@loadFuncti:
	cmp	DWORD PTR _overloadNode$[ebp], 0
	je	$LN9@loadFuncti
; Line 319
	push	OFFSET $SG154351
	mov	ecx, DWORD PTR _overloadNode$[ebp]
	call	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z	; TiXmlElement::Attribute
	mov	DWORD PTR _retVal$5[ebp], eax
; Line 320
	cmp	DWORD PTR _retVal$5[ebp], 0
	jne	SHORT $LN8@loadFuncti
; Line 321
	jmp	SHORT $LN10@loadFuncti
$LN8@loadFuncti:
; Line 322
	lea	ecx, DWORD PTR _retVal$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::push_back
; Line 324
	push	OFFSET $SG154354
	mov	ecx, DWORD PTR _overloadNode$[ebp]
	call	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z	; TiXmlElement::Attribute
	mov	DWORD PTR _description$4[ebp], eax
; Line 325
	cmp	DWORD PTR _description$4[ebp], 0
	je	SHORT $LN7@loadFuncti
; Line 326
	lea	edx, DWORD PTR _description$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::push_back
; Line 327
	jmp	SHORT $LN6@loadFuncti
$LN7@loadFuncti:
; Line 328
	mov	DWORD PTR $T2[ebp], OFFSET $SG154358
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::push_back
$LN6@loadFuncti:
; Line 330
	push	OFFSET $SG154359
	mov	ecx, DWORD PTR _overloadNode$[ebp]
	call	?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _paramNode$[ebp], eax
; Line 331
	jmp	SHORT $LN5@loadFuncti
$LN4@loadFuncti:
	push	OFFSET $SG154363
	mov	ecx, DWORD PTR _paramNode$[ebp]
	call	?NextSiblingElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z ; TiXmlNode::NextSiblingElement
	mov	DWORD PTR _paramNode$[ebp], eax
$LN5@loadFuncti:
	cmp	DWORD PTR _paramNode$[ebp], 0
	je	SHORT $LN3@loadFuncti
; Line 332
	push	OFFSET $SG154365
	mov	ecx, DWORD PTR _paramNode$[ebp]
	call	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z	; TiXmlElement::Attribute
	mov	DWORD PTR _param$3[ebp], eax
; Line 333
	cmp	DWORD PTR _param$3[ebp], 0
	jne	SHORT $LN2@loadFuncti
; Line 334
	jmp	SHORT $LN4@loadFuncti
$LN2@loadFuncti:
; Line 335
	lea	ecx, DWORD PTR _param$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR _paramVec$[ebp]
	call	?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::push_back
; Line 336
	jmp	SHORT $LN4@loadFuncti
$LN3@loadFuncti:
; Line 337
	lea	edx, DWORD PTR _paramVec$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?push_back@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXABV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::push_back
; Line 338
	lea	ecx, DWORD PTR _paramVec$[ebp]
	call	?clear@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::clear
; Line 340
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], ecx
; Line 341
	jmp	$LN10@loadFuncti
$LN9@loadFuncti:
; Line 343
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], eax
; Line 345
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+72], 0
	jne	SHORT $LN1@loadFuncti
; Line 346
	mov	BYTE PTR $T10[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _paramVec$[ebp]
	call	??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::~vector<wchar_t const *,std::allocator<wchar_t const *> >
	mov	al, BYTE PTR $T10[ebp]
	jmp	SHORT $LN23@loadFuncti
$LN1@loadFuncti:
; Line 348
	mov	BYTE PTR $T9[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _paramVec$[ebp]
	call	??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::~vector<wchar_t const *,std::allocator<wchar_t const *> >
	mov	al, BYTE PTR $T9[ebp]
$LN23@loadFuncti:
; Line 349
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?loadFunction@FunctionCallTip@@AAE_NXZ$0:
	lea	ecx, DWORD PTR _paramVec$[ebp]
	jmp	??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::~vector<wchar_t const *,std::allocator<wchar_t const *> >
__ehhandler$?loadFunction@FunctionCallTip@@AAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?loadFunction@FunctionCallTip@@AAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?loadFunction@FunctionCallTip@@AAE_NXZ ENDP		; FunctionCallTip::loadFunction
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -744						; size = 16
$T3 = -728						; size = 16
$T4 = -712						; size = 12
$T5 = -700						; size = 12
_maxLen$ = -688						; size = 4
_newValue$ = -684					; size = 16
_tokenVector$ = -668					; size = 16
_endpos$ = -652						; size = 4
_begin$6 = -648						; size = 4
$T7 = -644						; size = 4
_vsize$ = -640						; size = 4
$T8 = -636						; size = 4
_valueVec$ = -632					; size = 16
_startpos$ = -616					; size = 4
_len$ = -612						; size = 4
tv324 = -608						; size = 4
_funcToken$9 = -604					; size = 12
tv335 = -592						; size = 4
_offset$ = -588						; size = 4
_line$ = -584						; size = 4
_curToken$10 = -580					; size = 4
_scopeLevel$ = -576					; size = 4
_tokenLen$ = -572					; size = 4
$T11 = -565						; size = 1
_i$12 = -564						; size = 4
_curValue$ = -560					; size = 16
_i$13 = -544						; size = 4
_res$ = -538						; size = 1
_same$14 = -537						; size = 1
_ch$ = -536						; size = 2
_this$ = -532						; size = 4
_lineData$ = -528					; size = 512
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?getCursorFunction@FunctionCallTip@@AAE_NXZ PROC	; FunctionCallTip::getCursorFunction
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 134
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getCursorFunction@FunctionCallTip@@AAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 732				; 000002dcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	2166					; 00000876H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
	mov	DWORD PTR _line$[ebp], eax
; Line 136
	push	0
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	push	2167					; 00000877H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
	mov	DWORD PTR _startpos$[ebp], eax
; Line 137
	push	0
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	push	2136					; 00000858H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
	mov	DWORD PTR _endpos$[ebp], eax
; Line 138
	mov	ecx, DWORD PTR _endpos$[ebp]
	sub	ecx, DWORD PTR _startpos$[ebp]
	add	ecx, 3
	mov	DWORD PTR _len$[ebp], ecx
; Line 139
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR _startpos$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 140
	mov	DWORD PTR _maxLen$[ebp], 256		; 00000100H
; Line 142
	cmp	DWORD PTR _offset$[ebp], 2
	jl	SHORT $LN40@getCursorF
	cmp	DWORD PTR _len$[ebp], 256		; 00000100H
	jl	SHORT $LN41@getCursorF
$LN40@getCursorF:
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@FunctionCallTip@@AAEXXZ		; FunctionCallTip::reset
; Line 145
	xor	al, al
	jmp	$LN42@getCursorF
$LN41@getCursorF:
; Line 148
	mov	cx, WORD PTR $SG152767
	mov	WORD PTR _lineData$[ebp], cx
	push	510					; 000001feH
	push	0
	lea	edx, DWORD PTR _lineData$[ebp+2]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 150
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lineData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getLine@ScintillaEditView@@QAEXHPA_WH@Z ; ScintillaEditView::getLine
; Line 155
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	call	??0?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ ; std::vector<Token,std::allocator<Token> >::vector<Token,std::allocator<Token> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 156
	mov	DWORD PTR _tokenLen$[ebp], 0
; Line 158
	mov	DWORD PTR _i$13[ebp], 0
	jmp	SHORT $LN39@getCursorF
$LN38@getCursorF:
	mov	ecx, DWORD PTR _i$13[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$13[ebp], ecx
$LN39@getCursorF:
	mov	edx, DWORD PTR _i$13[ebp]
	cmp	edx, DWORD PTR _offset$[ebp]
	jge	$LN37@getCursorF
; Line 161
	mov	eax, DWORD PTR _i$13[ebp]
	mov	cx, WORD PTR _lineData$[ebp+eax*2]
	mov	WORD PTR _ch$[ebp], cx
; Line 162
	movzx	edx, WORD PTR _ch$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBasicWordChar@FunctionCallTip@@ABE_N_W@Z ; FunctionCallTip::isBasicWordChar
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN35@getCursorF
	movzx	ecx, WORD PTR _ch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isAdditionalWordChar@FunctionCallTip@@ABE_N_W@Z ; FunctionCallTip::isAdditionalWordChar
	movzx	edx, al
	test	edx, edx
	je	$LN36@getCursorF
$LN35@getCursorF:
; Line 164
	mov	DWORD PTR _tokenLen$[ebp], 0
; Line 165
	mov	eax, DWORD PTR _i$13[ebp]
	lea	ecx, DWORD PTR _lineData$[ebp+eax*2]
	mov	DWORD PTR _begin$6[ebp], ecx
$LN34@getCursorF:
; Line 166
	movzx	edx, WORD PTR _ch$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isBasicWordChar@FunctionCallTip@@ABE_N_W@Z ; FunctionCallTip::isBasicWordChar
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN32@getCursorF
	movzx	ecx, WORD PTR _ch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isAdditionalWordChar@FunctionCallTip@@ABE_N_W@Z ; FunctionCallTip::isAdditionalWordChar
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN33@getCursorF
$LN32@getCursorF:
	mov	eax, DWORD PTR _i$13[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jge	SHORT $LN33@getCursorF
; Line 167
	mov	ecx, DWORD PTR _tokenLen$[ebp]
	add	ecx, 1
	mov	DWORD PTR _tokenLen$[ebp], ecx
; Line 168
	mov	edx, DWORD PTR _i$13[ebp]
	add	edx, 1
	mov	DWORD PTR _i$13[ebp], edx
; Line 169
	mov	eax, DWORD PTR _i$13[ebp]
	mov	cx, WORD PTR _lineData$[ebp+eax*2]
	mov	WORD PTR _ch$[ebp], cx
; Line 170
	jmp	SHORT $LN34@getCursorF
$LN33@getCursorF:
; Line 171
	push	1
	mov	edx, DWORD PTR _tokenLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _begin$6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0Token@@QAE@PA_WH_N@Z			; Token::Token
	push	eax
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	call	?push_back@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEX$$QAUToken@@@Z ; std::vector<Token,std::allocator<Token> >::push_back
; Line 172
	mov	ecx, DWORD PTR _i$13[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$13[ebp], ecx
; Line 174
	jmp	SHORT $LN31@getCursorF
$LN36@getCursorF:
; Line 176
	movzx	edx, WORD PTR _ch$[ebp]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN29@getCursorF
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 9
	je	SHORT $LN29@getCursorF
	movzx	ecx, WORD PTR _ch$[ebp]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN29@getCursorF
	movzx	edx, WORD PTR _ch$[ebp]
	cmp	edx, 13					; 0000000dH
	jne	SHORT $LN30@getCursorF
$LN29@getCursorF:
; Line 180
	jmp	SHORT $LN31@getCursorF
$LN30@getCursorF:
; Line 182
	mov	DWORD PTR _tokenLen$[ebp], 1
; Line 183
	push	0
	mov	eax, DWORD PTR _tokenLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$13[ebp]
	lea	edx, DWORD PTR _lineData$[ebp+ecx*2]
	push	edx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0Token@@QAE@PA_WH_N@Z			; Token::Token
	push	eax
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	call	?push_back@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEX$$QAUToken@@@Z ; std::vector<Token,std::allocator<Token> >::push_back
$LN31@getCursorF:
; Line 186
	jmp	$LN38@getCursorF
$LN37@getCursorF:
; Line 188
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	call	?size@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QBEIXZ ; std::vector<Token,std::allocator<Token> >::size
	mov	DWORD PTR _vsize$[ebp], eax
; Line 191
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	??0?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::vector<FunctionValues,std::allocator<FunctionValues> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 193
	lea	ecx, DWORD PTR _curValue$[ebp]
	call	??0FunctionValues@@QAE@XZ		; FunctionValues::FunctionValues
	lea	ecx, DWORD PTR _newValue$[ebp]
	call	??0FunctionValues@@QAE@XZ		; FunctionValues::FunctionValues
; Line 194
	mov	DWORD PTR _scopeLevel$[ebp], 0
; Line 195
	mov	DWORD PTR _i$12[ebp], 0
	jmp	SHORT $LN27@getCursorF
$LN26@getCursorF:
	mov	eax, DWORD PTR _i$12[ebp]
	add	eax, 1
	mov	DWORD PTR _i$12[ebp], eax
$LN27@getCursorF:
	mov	ecx, DWORD PTR _i$12[ebp]
	cmp	ecx, DWORD PTR _vsize$[ebp]
	jae	$LN25@getCursorF
; Line 197
	mov	edx, DWORD PTR _i$12[ebp]
	push	edx
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	call	?at@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEAAUToken@@I@Z ; std::vector<Token,std::allocator<Token> >::at
	mov	DWORD PTR _curToken$10[ebp], eax
; Line 198
	mov	eax, DWORD PTR _curToken$10[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN24@getCursorF
; Line 199
	mov	edx, DWORD PTR _i$12[ebp]
	mov	DWORD PTR _curValue$[ebp], edx
; Line 200
	jmp	$LN23@getCursorF
$LN24@getCursorF:
; Line 201
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _curToken$10[ebp]
	mov	eax, DWORD PTR [edx]
	movzx	ecx, WORD PTR [eax+ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+84]
	cmp	ecx, eax
	jne	$LN22@getCursorF
; Line 203
	mov	ecx, DWORD PTR _scopeLevel$[ebp]
	add	ecx, 1
	mov	DWORD PTR _scopeLevel$[ebp], ecx
; Line 204
	mov	edx, DWORD PTR _curValue$[ebp]
	mov	DWORD PTR _newValue$[ebp], edx
	mov	eax, DWORD PTR _curValue$[ebp+4]
	mov	DWORD PTR _newValue$[ebp+4], eax
	mov	ecx, DWORD PTR _curValue$[ebp+8]
	mov	DWORD PTR _newValue$[ebp+8], ecx
	mov	edx, DWORD PTR _curValue$[ebp+12]
	mov	DWORD PTR _newValue$[ebp+12], edx
; Line 205
	lea	eax, DWORD PTR _newValue$[ebp]
	push	eax
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?push_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXABUFunctionValues@@@Z ; std::vector<FunctionValues,std::allocator<FunctionValues> >::push_back
; Line 207
	mov	ecx, DWORD PTR _scopeLevel$[ebp]
	mov	DWORD PTR _curValue$[ebp+12], ecx
; Line 208
	cmp	DWORD PTR _i$12[ebp], 0
	jbe	SHORT $LN21@getCursorF
	mov	edx, DWORD PTR _i$12[ebp]
	sub	edx, 1
	cmp	DWORD PTR _curValue$[ebp], edx
	jne	SHORT $LN21@getCursorF
; Line 209
	mov	eax, DWORD PTR _curValue$[ebp]
	mov	DWORD PTR _curValue$[ebp+4], eax
; Line 210
	mov	DWORD PTR _curValue$[ebp+8], 0
; Line 211
	jmp	SHORT $LN20@getCursorF
$LN21@getCursorF:
; Line 212
	mov	DWORD PTR _curValue$[ebp+4], -1
$LN20@getCursorF:
; Line 213
	jmp	$LN23@getCursorF
$LN22@getCursorF:
; Line 214
	mov	ecx, 2
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _curToken$10[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx+edx]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+88]
	cmp	edx, ecx
	jne	SHORT $LN18@getCursorF
	cmp	DWORD PTR _curValue$[ebp+4], -1
	jle	SHORT $LN18@getCursorF
; Line 215
	mov	edx, DWORD PTR _curValue$[ebp+8]
	add	edx, 1
	mov	DWORD PTR _curValue$[ebp+8], edx
	jmp	$LN23@getCursorF
$LN18@getCursorF:
; Line 216
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _curToken$10[ebp]
	mov	eax, DWORD PTR [edx]
	movzx	ecx, WORD PTR [eax+ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+86]
	cmp	ecx, eax
	jne	$LN16@getCursorF
; Line 217
	cmp	DWORD PTR _scopeLevel$[ebp], 0
	je	SHORT $LN15@getCursorF
; Line 218
	mov	ecx, DWORD PTR _scopeLevel$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _scopeLevel$[ebp], ecx
$LN15@getCursorF:
; Line 219
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size
	test	eax, eax
	jbe	SHORT $LN14@getCursorF
; Line 220
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::back
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _curValue$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _curValue$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _curValue$[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _curValue$[ebp+12], eax
; Line 221
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?pop_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::pop_back
; Line 222
	jmp	SHORT $LN13@getCursorF
$LN14@getCursorF:
; Line 224
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0FunctionValues@@QAE@XZ		; FunctionValues::FunctionValues
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _curValue$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _curValue$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _curValue$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _curValue$[ebp+12], edx
$LN13@getCursorF:
; Line 225
	jmp	SHORT $LN23@getCursorF
$LN16@getCursorF:
; Line 226
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _curToken$10[ebp]
	mov	eax, DWORD PTR [edx]
	movzx	ecx, WORD PTR [eax+ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+90]
	cmp	ecx, eax
	jne	SHORT $LN23@getCursorF
; Line 228
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?clear@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::clear
; Line 229
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0FunctionValues@@QAE@XZ		; FunctionValues::FunctionValues
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _curValue$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _curValue$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _curValue$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _curValue$[ebp+12], edx
$LN23@getCursorF:
; Line 232
	jmp	$LN26@getCursorF
$LN25@getCursorF:
; Line 234
	mov	BYTE PTR _res$[ebp], 0
; Line 236
	cmp	DWORD PTR _curValue$[ebp+4], -1
	jne	SHORT $LN10@getCursorF
$LN9@getCursorF:
; Line 237
	cmp	DWORD PTR _curValue$[ebp+4], -1
	jne	SHORT $LN10@getCursorF
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?size@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QBEIXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::size
	test	eax, eax
	jbe	SHORT $LN10@getCursorF
; Line 238
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEAAUFunctionValues@@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::back
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _curValue$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _curValue$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _curValue$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _curValue$[ebp+12], edx
; Line 239
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	?pop_back@?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAEXXZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::pop_back
; Line 240
	jmp	SHORT $LN9@getCursorF
$LN10@getCursorF:
; Line 242
	cmp	DWORD PTR _curValue$[ebp+4], -1
	jle	$LN7@getCursorF
; Line 243
	mov	eax, DWORD PTR _curValue$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	call	?at@?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAEAAUToken@@I@Z ; std::vector<Token,std::allocator<Token> >::at
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _funcToken$9[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _funcToken$9[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _funcToken$9[ebp+8], eax
; Line 244
	xor	ecx, ecx
	mov	edx, DWORD PTR _funcToken$9[ebp+4]
	mov	eax, DWORD PTR _funcToken$9[ebp]
	mov	WORD PTR [eax+edx*2], cx
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _curValue$[ebp+8]
	mov	DWORD PTR [ecx+80], edx
; Line 247
	mov	BYTE PTR _same$14[ebp], 0
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	$LN6@getCursorF
; Line 249
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+120]
	test	edx, edx
	je	SHORT $LN5@getCursorF
; Line 250
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	push	eax
	mov	edx, DWORD PTR _funcToken$9[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?testNameNoCase@@YAHPB_W0H@Z		; testNameNoCase
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN44@getCursorF
	mov	DWORD PTR tv324[ebp], 1
	jmp	SHORT $LN45@getCursorF
$LN44@getCursorF:
	mov	DWORD PTR tv324[ebp], 0
$LN45@getCursorF:
	mov	dl, BYTE PTR tv324[ebp]
	mov	BYTE PTR _same$14[ebp], dl
; Line 251
	jmp	SHORT $LN6@getCursorF
$LN5@getCursorF:
; Line 252
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	push	eax
	mov	edx, DWORD PTR _funcToken$9[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_wcsncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN46@getCursorF
	mov	DWORD PTR tv335[ebp], 1
	jmp	SHORT $LN47@getCursorF
$LN46@getCursorF:
	mov	DWORD PTR tv335[ebp], 0
$LN47@getCursorF:
	mov	dl, BYTE PTR tv335[ebp]
	mov	BYTE PTR _same$14[ebp], dl
$LN6@getCursorF:
; Line 254
	movzx	eax, BYTE PTR _same$14[ebp]
	test	eax, eax
	jne	$LN3@getCursorF
; Line 255
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN2@getCursorF
; Line 256
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR $T7[ebp], eax
	mov	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@getCursorF:
; Line 258
	mov	eax, DWORD PTR _funcToken$9[ebp+4]
	add	eax, 1
	xor	ecx, ecx
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T8[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 259
	mov	edx, DWORD PTR _funcToken$9[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 260
	mov	ecx, DWORD PTR _this$[ebp]
	call	?loadFunction@FunctionCallTip@@AAE_NXZ	; FunctionCallTip::loadFunction
	mov	BYTE PTR _res$[ebp], al
; Line 261
	jmp	SHORT $LN7@getCursorF
$LN3@getCursorF:
; Line 262
	mov	BYTE PTR _res$[ebp], 1
$LN7@getCursorF:
; Line 265
	mov	dl, BYTE PTR _res$[ebp]
	mov	BYTE PTR $T11[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _valueVec$[ebp]
	call	??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::~vector<FunctionValues,std::allocator<FunctionValues> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	call	??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ ; std::vector<Token,std::allocator<Token> >::~vector<Token,std::allocator<Token> >
	mov	al, BYTE PTR $T11[ebp]
$LN42@getCursorF:
; Line 266
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?getCursorFunction@FunctionCallTip@@AAE_NXZ$0:
	lea	ecx, DWORD PTR _tokenVector$[ebp]
	jmp	??1?$vector@UToken@@V?$allocator@UToken@@@std@@@std@@QAE@XZ ; std::vector<Token,std::allocator<Token> >::~vector<Token,std::allocator<Token> >
__unwindfunclet$?getCursorFunction@FunctionCallTip@@AAE_NXZ$1:
	lea	ecx, DWORD PTR _valueVec$[ebp]
	jmp	??1?$vector@UFunctionValues@@V?$allocator@UFunctionValues@@@std@@@std@@QAE@XZ ; std::vector<FunctionValues,std::allocator<FunctionValues> >::~vector<FunctionValues,std::allocator<FunctionValues> >
__ehhandler$?getCursorFunction@FunctionCallTip@@AAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-736]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getCursorFunction@FunctionCallTip@@AAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getCursorFunction@FunctionCallTip@@AAE_NXZ ENDP	; FunctionCallTip::getCursorFunction
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 1760
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@PAV21@00@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Umove<std::vector<wchar_t const *,std::allocator<wchar_t const *> > *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1607
	mov	edx, DWORD PTR __Size$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBE_NPBV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBE_NPBV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBE_NPBV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Destroy
; Line 1510
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 1511
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXABV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXABV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPBV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ; std::addressof<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBE_NPBV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBV?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPBV?$vector@PB_WV?$allocator@PB_W@std@@@0@ABV10@@Z ; std::addressof<std::vector<wchar_t const *,std::allocator<wchar_t const *> > const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 4
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Orphan_range
; Line 1251
	mov	eax, DWORD PTR __Idx$1[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@AAV21@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > &>
; Line 1252
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Reserve
$LN1@push_back:
; Line 1258
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@0@Z ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Orphan_range
; Line 1260
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
	mov	ecx, eax
	call	??$construct@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::construct<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::vector<wchar_t const *,std::allocator<wchar_t const *> > const &>
; Line 1261
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEXABV?$vector@PB_WV?$allocator@PB_W@std@@@2@@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?at@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEAAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEAAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1175
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at
; Line 1176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Xran
$LN1@at:
; Line 1177
	mov	eax, DWORD PTR __Pos$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
$LN3@at:
; Line 1178
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QAEAAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::at
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 4
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 4
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 4
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::vector<wchar_t const *,std::allocator<wchar_t const *> >,std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::_Wrap_alloc<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBEIXZ ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 268435455				; 0fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 594
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@ABV32@@Z ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::construct
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YAPAV?$vector@PB_WV?$allocator@PB_W@std@@@0@IPAV10@@Z ; std::_Allocate<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXPAV?$vector@PB_WV?$allocator@PB_W@std@@@2@I@Z ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >::allocator<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEPAXI@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::~vector<wchar_t const *,std::allocator<wchar_t const *> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEPAXI@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 1760
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXPAPB_W0@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEII@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEPAPB_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPB_W@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WPAPB_W00@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Umove<wchar_t const * *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXPAPB_W0@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBE_NPBQB_W@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBE_NPBQB_W@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBE_NPBQB_W@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEII@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEII@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXPAPB_W0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXPAPB_W0@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@@std@@YAXPAPB_W0AAU?$_Wrap_alloc@V?$allocator@PB_W@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<wchar_t const *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXPAPB_W0@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAE_NI@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Buy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1546
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1548
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 1549
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 1551
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1552
	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1553
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1554
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xlen
; Line 1555
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1557
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEPAPB_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1558
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 1559
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN3@Buy:
; Line 1561
	mov	al, 1
$LN6@Buy:
; Line 1562
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAE_NI@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXPAPB_W0@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Destroy
; Line 1510
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 1511
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QB_W@std@@YAPBQB_WABQB_W@Z	; std::addressof<wchar_t const * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBE_NPBQB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@QB_W@std@@YAPBQB_WABQB_W@Z	; std::addressof<wchar_t const * const>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Orphan_range
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PB_WAAPB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WAAPB_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * &>
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXPAPB_W0@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Orphan_range
; Line 1260
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PB_WABQB_W@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WABQB_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::construct<wchar_t const *,wchar_t const * const &>
; Line 1261
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEXABQB_W@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1175
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at
; Line 1176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IBEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Xran
$LN1@at:
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
$LN3@at:
; Line 1178
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEAAPB_WI@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::at
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1030
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@PAPB_WPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::begin
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::~vector<wchar_t const *,std::allocator<wchar_t const *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
__ehhandler$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::~vector<wchar_t const *,std::allocator<wchar_t const *> >
; Function compile flags: /Odtp
;	COMDAT ?_Assign_rv@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 837
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 838
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_all
; Line 839
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 840
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
; Line 841
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
; Line 843
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 844
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 845
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 846
	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_rv@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -14						; size = 1
$T3 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 812
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 813
	xor	ecx, ecx
	mov	BYTE PTR $T3[ebp], cl
	movzx	edx, BYTE PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$vector@PB_WV?$allocator@PB_W@std@@@std@@@std@@YA$$QAV?$vector@PB_WV?$allocator@PB_W@std@@@0@AAV10@@Z ; std::forward<std::vector<wchar_t const *,std::allocator<wchar_t const *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Assign_rv
; Line 814
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
__ehhandler$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv178 = -52						; size = 4
$T2 = -48						; size = 4
tv175 = -44						; size = 4
$T3 = -40						; size = 4
tv135 = -36						; size = 4
tv180 = -32						; size = 4
tv69 = -28						; size = 4
_this$ = -24						; size = 4
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 721
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 722
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBEIXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAE_NI@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	$LN3@vector
; Line 723
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 725
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@PB_WV?$allocator@PB_W@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@2@XZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::begin
	mov	DWORD PTR tv180[ebp], eax
	mov	edx, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEPAPB_WV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@1@0PAPB_W@Z ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<wchar_t const *> > > >
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN5@vector
__catch$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$0:
; Line 727
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PB_WV?$allocator@PB_W@std@@@std@@IAEXXZ ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::_Tidy
; Line 728
	push	0
	push	0
	call	__CxxThrowException@8
; Line 729
	mov	eax, $LN11@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN3@vector
$LN11@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector:
; Line 730
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$3:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z$4:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ PROC ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@PB_W@std@@QAE@XZ		; std::allocator<wchar_t const *>::allocator<wchar_t const *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 681
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
__ehhandler$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PB_WV?$allocator@PB_W@std@@@std@@QAE@XZ ENDP ; std::vector<wchar_t const *,std::allocator<wchar_t const *> >::vector<wchar_t const *,std::allocator<wchar_t const *> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PB_W@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::~_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<wchar_t const *> >::_Vector_val<std::_Simple_types<wchar_t const *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PB_WV?$allocator@PB_W@std@@@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >::_Vector_alloc<0,std::_Vec_base_types<wchar_t const *,std::allocator<wchar_t const *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<wchar_t const *> >::~_Vector_val<std::_Simple_types<wchar_t const *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<wchar_t const *> >::~_Vector_val<std::_Simple_types<wchar_t const *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<wchar_t const *> >::_Vector_val<std::_Simple_types<wchar_t const *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@PB_W@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<wchar_t const *> >::_Vector_val<std::_Simple_types<wchar_t const *> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAIABV?$allocator@PB_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PB_W@std@@QAEXPAPB_WI@Z ; std::allocator<wchar_t const *>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEXPAPB_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEPAPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEPAPB_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PB_W@std@@QAEPAPB_WI@Z ; std::allocator<wchar_t const *>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAEPAPB_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PB_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t const *>::allocator<wchar_t const *>
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PB_W@std@@QAE@XZ		; std::allocator<wchar_t const *>::allocator<wchar_t const *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SA?AV?$allocator@PB_W@2@ABV32@@Z ; std::allocator_traits<std::allocator<wchar_t const *> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QAE@ABV?$allocator@PB_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::_Wrap_alloc<std::allocator<wchar_t const *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 780
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PB_W@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t const *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SA?AV?$allocator@PB_W@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SA?AV?$allocator@PB_W@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<wchar_t const *> >::select_on_container_copy_construction, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 740
	push	ebp
	mov	ebp, esp
; Line 741
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?select_on_container_copy_construction@?$allocator@PB_W@std@@QBE?AV12@XZ ; std::allocator<wchar_t const *>::select_on_container_copy_construction
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 742
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SA?AV?$allocator@PB_W@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t const *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAIABV?$allocator@PB_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAIABV?$allocator@PB_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t const *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PB_W@std@@QBEIXZ	; std::allocator<wchar_t const *>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PB_W@std@@@std@@SAIABV?$allocator@PB_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t const *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@PB_W@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PB_W@std@@QBEIXZ PROC		; std::allocator<wchar_t const *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PB_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t const *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PB_W@std@@QAEXPAPB_WABQB_W@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv68 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PB_W@std@@QAEXPAPB_WABQB_W@Z PROC ; std::allocator<wchar_t const *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PB_W@std@@QAEXPAPB_WABQB_W@Z ENDP ; std::allocator<wchar_t const *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PB_W@std@@QAEPAPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PB_W@std@@QAEPAPB_WI@Z PROC	; std::allocator<wchar_t const *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PB_W@std@@YAPAPB_WIPAPB_W@Z ; std::_Allocate<wchar_t const *>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PB_W@std@@QAEPAPB_WI@Z ENDP	; std::allocator<wchar_t const *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PB_W@std@@QAEXPAPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PB_W@std@@QAEXPAPB_WI@Z PROC	; std::allocator<wchar_t const *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PB_W@std@@QAEXPAPB_WI@Z ENDP	; std::allocator<wchar_t const *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PB_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PB_W@std@@QAE@ABV01@@Z PROC		; std::allocator<wchar_t const *>::allocator<wchar_t const *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 556
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PB_W@std@@QAE@ABV01@@Z ENDP		; std::allocator<wchar_t const *>::allocator<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PB_W@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PB_W@std@@QAE@XZ PROC			; std::allocator<wchar_t const *>::allocator<wchar_t const *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PB_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t const *>::allocator<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator@PB_W@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@PB_W@std@@QBE?AV12@XZ PROC ; std::allocator<wchar_t const *>::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@PB_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t const *>::allocator<wchar_t const *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 534
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$allocator@PB_W@std@@QBE?AV12@XZ ENDP ; std::allocator<wchar_t const *>::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?close@FunctionCallTip@@QAEXXZ PROC			; FunctionCallTip::close
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isVisible@FunctionCallTip@@QAE_NXZ	; FunctionCallTip::isVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@close
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+121]
	test	edx, edx
	jne	SHORT $LN2@close
$LN1@close:
; Line 126
	jmp	SHORT $LN3@close
$LN2@close:
; Line 128
	push	0
	push	0
	push	2201					; 00000899H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
; Line 129
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+121], 0
; Line 130
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], 0
$LN3@close:
; Line 131
	mov	esp, ebp
	pop	ebp
	ret	0
?close@FunctionCallTip@@QAEXXZ ENDP			; FunctionCallTip::close
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isVisible@FunctionCallTip@@QAE_NXZ
_TEXT	SEGMENT
tv74 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?isVisible@FunctionCallTip@@QAE_NXZ PROC		; FunctionCallTip::isVisible, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.h
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@isVisible
	push	0
	push	0
	push	2202					; 0000089aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
	cmp	eax, 1
	jne	SHORT $LN3@isVisible
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@isVisible
$LN3@isVisible:
	mov	DWORD PTR tv72[ebp], 0
$LN4@isVisible:
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN6@isVisible
$LN5@isVisible:
	mov	DWORD PTR tv74[ebp], 0
$LN6@isVisible:
	mov	al, BYTE PTR tv74[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?isVisible@FunctionCallTip@@QAE_NXZ ENDP		; FunctionCallTip::isVisible
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?showPrevOverload@FunctionCallTip@@QAEXXZ PROC		; FunctionCallTip::showPrevOverload
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isVisible@FunctionCallTip@@QAE_NXZ	; FunctionCallTip::isVisible
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@showPrevOv
; Line 118
	jmp	SHORT $LN2@showPrevOv
$LN1@showPrevOv:
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+76], 0
	jle	SHORT $LN4@showPrevOv
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	sub	eax, 1
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@showPrevOv
$LN4@showPrevOv:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	sub	edx, 1
	mov	DWORD PTR tv75[ebp], edx
$LN5@showPrevOv:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?showCalltip@FunctionCallTip@@AAEXXZ	; FunctionCallTip::showCalltip
$LN2@showPrevOv:
; Line 121
	mov	esp, ebp
	pop	ebp
	ret	0
?showPrevOverload@FunctionCallTip@@QAEXXZ ENDP		; FunctionCallTip::showPrevOverload
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?showNextOverload@FunctionCallTip@@QAEXXZ PROC		; FunctionCallTip::showNextOverload
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isVisible@FunctionCallTip@@QAE_NXZ	; FunctionCallTip::isVisible
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@showNextOv
; Line 111
	jmp	SHORT $LN2@showNextOv
$LN1@showNextOv:
; Line 112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+76]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cdq
	idiv	DWORD PTR [ecx+72]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], edx
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	call	?showCalltip@FunctionCallTip@@AAEXXZ	; FunctionCallTip::showCalltip
$LN2@showNextOv:
; Line 114
	mov	esp, ebp
	pop	ebp
	ret	0
?showNextOverload@FunctionCallTip@@QAEXXZ ENDP		; FunctionCallTip::showNextOverload
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ch$ = 8						; size = 4
_needShown$ = 12					; size = 1
?updateCalltip@FunctionCallTip@@QAE_NH_N@Z PROC		; FunctionCallTip::updateCalltip
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	movzx	eax, BYTE PTR _needShown$[ebp]
	test	eax, eax
	jne	SHORT $LN2@updateCall
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+84]
	cmp	DWORD PTR _ch$[ebp], edx
	je	SHORT $LN2@updateCall
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isVisible@FunctionCallTip@@QAE_NXZ	; FunctionCallTip::isVisible
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@updateCall
; Line 96
	xor	al, al
	jmp	SHORT $LN3@updateCall
$LN2@updateCall:
; Line 98
	push	0
	push	0
	push	2008					; 000007d8H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?execute@ScintillaEditView@@QBEJIIJ@Z	; ScintillaEditView::execute
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 101
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCursorFunction@FunctionCallTip@@AAE_NXZ ; FunctionCallTip::getCursorFunction
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@updateCall
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FunctionCallTip@@QAEXXZ		; FunctionCallTip::close
; Line 103
	xor	al, al
	jmp	SHORT $LN3@updateCall
$LN1@updateCall:
; Line 105
	mov	ecx, DWORD PTR _this$[ebp]
	call	?showCalltip@FunctionCallTip@@AAEXXZ	; FunctionCallTip::showCalltip
; Line 106
	mov	al, 1
$LN3@updateCall:
; Line 107
	mov	esp, ebp
	pop	ebp
	ret	8
?updateCalltip@FunctionCallTip@@QAE_NH_N@Z ENDP		; FunctionCallTip::updateCalltip
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_pXmlKeyword$ = 8					; size = 4
?setLanguageXML@FunctionCallTip@@QAEXPAVTiXmlElement@@@Z PROC ; FunctionCallTip::setLanguageXML
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\functioncalltip.cpp
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isVisible@FunctionCallTip@@QAE_NXZ	; FunctionCallTip::isVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@setLanguag
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FunctionCallTip@@QAEXXZ		; FunctionCallTip::close
$LN2@setLanguag:
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pXmlKeyword$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@FunctionCallTip@@AAEXXZ		; FunctionCallTip::reset
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN1@setLanguag
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@setLanguag:
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 92
	mov	esp, ebp
	pop	ebp
	ret	4
?setLanguageXML@FunctionCallTip@@QAEXPAVTiXmlElement@@@Z ENDP ; FunctionCallTip::setLanguageXML
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?execute@ScintillaEditView@@QBEJIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Msg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?execute@ScintillaEditView@@QBEJIIJ@Z PROC		; ScintillaEditView::execute, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\scitillacomponent\scintillaeditview.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Msg$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 16					; 00000010H
; Line 242
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?execute@ScintillaEditView@@QBEJIIJ@Z ENDP		; ScintillaEditView::execute
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1748
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1749
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1750
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1739
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
; Line 1740
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_System_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_System_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 608
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_System_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_System_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_System_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Iostream_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??1_Generic_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 564
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Generic_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??0_Generic_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2296
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2291
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	edx, DWORD PTR __Oldlen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 2232
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnext$1 = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 189
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]
; Line 184
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -28						; size = 4
__Lock$3 = -24						; size = 4
__Parent_proxy$4 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$4[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$4[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:
; Line 174
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$3[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:
; Line 127
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator
; Line 128
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 129
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 132
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
; Line 137
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 120
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
__Temp$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z PROC	; std::_Container_base12::_Swap_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 229
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 231
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx
; Line 235
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 236
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [edx], eax
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@Swap_all
; Line 239
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@Swap_all:
; Line 240
	mov	edx, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@Swap_all
; Line 241
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN1@Swap_all:
; Line 242
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ENDP	; std::_Container_base12::_Swap_all
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all
; Line 218
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$3[ebp], edx
; Line 221
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all
; Line 222
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:
; Line 223
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0
; Line 224
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv68[ebp]
; Line 101
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
; Line 557
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	__hypot
	add	esp, 16					; 00000010H
; Line 558
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\uchardet\nsSBCSGroupProber.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??1nsCharSetProber@@UAE@XZ			; nsCharSetProber::~nsCharSetProber
PUBLIC	??0nsCharSetProber@@QAE@XZ			; nsCharSetProber::nsCharSetProber
PUBLIC	??_GnsCharSetProber@@UAEPAXI@Z			; nsCharSetProber::`scalar deleting destructor'
PUBLIC	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
PUBLIC	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
PUBLIC	?GetState@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@XZ ; nsSingleByteCharSetProber::GetState
PUBLIC	?SetOpion@nsSingleByteCharSetProber@@UAEXXZ	; nsSingleByteCharSetProber::SetOpion
PUBLIC	??1nsSingleByteCharSetProber@@UAE@XZ		; nsSingleByteCharSetProber::~nsSingleByteCharSetProber
PUBLIC	??_GnsSingleByteCharSetProber@@UAEPAXI@Z	; nsSingleByteCharSetProber::`scalar deleting destructor'
PUBLIC	??0nsSBCSGroupProber@@QAE@XZ			; nsSBCSGroupProber::nsSBCSGroupProber
PUBLIC	??1nsSBCSGroupProber@@UAE@XZ			; nsSBCSGroupProber::~nsSBCSGroupProber
PUBLIC	?HandleData@nsSBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z ; nsSBCSGroupProber::HandleData
PUBLIC	?GetCharSetName@nsSBCSGroupProber@@UAEPBDXZ	; nsSBCSGroupProber::GetCharSetName
PUBLIC	?GetState@nsSBCSGroupProber@@UAE?AW4nsProbingState@@XZ ; nsSBCSGroupProber::GetState
PUBLIC	?Reset@nsSBCSGroupProber@@UAEXXZ		; nsSBCSGroupProber::Reset
PUBLIC	?GetConfidence@nsSBCSGroupProber@@UAEMXZ	; nsSBCSGroupProber::GetConfidence
PUBLIC	?SetOpion@nsSBCSGroupProber@@UAEXXZ		; nsSBCSGroupProber::SetOpion
PUBLIC	??_GnsSBCSGroupProber@@UAEPAXI@Z		; nsSBCSGroupProber::`scalar deleting destructor'
PUBLIC	??0nsHebrewProber@@QAE@XZ			; nsHebrewProber::nsHebrewProber
PUBLIC	??1nsHebrewProber@@UAE@XZ			; nsHebrewProber::~nsHebrewProber
PUBLIC	?GetConfidence@nsHebrewProber@@UAEMXZ		; nsHebrewProber::GetConfidence
PUBLIC	?SetOpion@nsHebrewProber@@UAEXXZ		; nsHebrewProber::SetOpion
PUBLIC	?SetModelProbers@nsHebrewProber@@QAEXPAVnsCharSetProber@@0@Z ; nsHebrewProber::SetModelProbers
PUBLIC	??_GnsHebrewProber@@UAEPAXI@Z			; nsHebrewProber::`scalar deleting destructor'
PUBLIC	??_7nsCharSetProber@@6B@			; nsCharSetProber::`vftable'
PUBLIC	??_7nsSingleByteCharSetProber@@6B@		; nsSingleByteCharSetProber::`vftable'
PUBLIC	??_7nsSBCSGroupProber@@6B@			; nsSBCSGroupProber::`vftable'
PUBLIC	??_7nsHebrewProber@@6B@				; nsHebrewProber::`vftable'
PUBLIC	??_R4nsCharSetProber@@6B@			; nsCharSetProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsCharSetProber@@@8			; nsCharSetProber `RTTI Type Descriptor'
PUBLIC	??_R3nsCharSetProber@@8				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsCharSetProber@@8				; nsCharSetProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsCharSetProber@@8		; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsSingleByteCharSetProber@@6B@		; nsSingleByteCharSetProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsSingleByteCharSetProber@@@8		; nsSingleByteCharSetProber `RTTI Type Descriptor'
PUBLIC	??_R3nsSingleByteCharSetProber@@8		; nsSingleByteCharSetProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsSingleByteCharSetProber@@8		; nsSingleByteCharSetProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsSingleByteCharSetProber@@8	; nsSingleByteCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsSBCSGroupProber@@6B@			; nsSBCSGroupProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsSBCSGroupProber@@@8			; nsSBCSGroupProber `RTTI Type Descriptor'
PUBLIC	??_R3nsSBCSGroupProber@@8			; nsSBCSGroupProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsSBCSGroupProber@@8			; nsSBCSGroupProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsSBCSGroupProber@@8		; nsSBCSGroupProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsHebrewProber@@6B@			; nsHebrewProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsHebrewProber@@@8			; nsHebrewProber `RTTI Type Descriptor'
PUBLIC	??_R3nsHebrewProber@@8				; nsHebrewProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsHebrewProber@@8				; nsHebrewProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsHebrewProber@@8			; nsHebrewProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3f7d70a4
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_free:PROC
EXTRN	?FilterWithoutEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z:PROC ; nsCharSetProber::FilterWithoutEnglishLetters
EXTRN	??_EnsCharSetProber@@UAEPAXI@Z:PROC		; nsCharSetProber::`vector deleting destructor'
EXTRN	?GetCharSetName@nsSingleByteCharSetProber@@UAEPBDXZ:PROC ; nsSingleByteCharSetProber::GetCharSetName
EXTRN	?HandleData@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsSingleByteCharSetProber::HandleData
EXTRN	?Reset@nsSingleByteCharSetProber@@UAEXXZ:PROC	; nsSingleByteCharSetProber::Reset
EXTRN	?GetConfidence@nsSingleByteCharSetProber@@UAEMXZ:PROC ; nsSingleByteCharSetProber::GetConfidence
EXTRN	??_EnsSingleByteCharSetProber@@UAEPAXI@Z:PROC	; nsSingleByteCharSetProber::`vector deleting destructor'
EXTRN	??_EnsSBCSGroupProber@@UAEPAXI@Z:PROC		; nsSBCSGroupProber::`vector deleting destructor'
EXTRN	?HandleData@nsHebrewProber@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsHebrewProber::HandleData
EXTRN	?GetCharSetName@nsHebrewProber@@UAEPBDXZ:PROC	; nsHebrewProber::GetCharSetName
EXTRN	?Reset@nsHebrewProber@@UAEXXZ:PROC		; nsHebrewProber::Reset
EXTRN	?GetState@nsHebrewProber@@UAE?AW4nsProbingState@@XZ:PROC ; nsHebrewProber::GetState
EXTRN	??_EnsHebrewProber@@UAEPAXI@Z:PROC		; nsHebrewProber::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?Koi8rModel@@3USequenceModel@@B:BYTE		; Koi8rModel
EXTRN	?Win1251Model@@3USequenceModel@@B:BYTE		; Win1251Model
EXTRN	?Latin5Model@@3USequenceModel@@B:BYTE		; Latin5Model
EXTRN	?MacCyrillicModel@@3USequenceModel@@B:BYTE	; MacCyrillicModel
EXTRN	?Ibm866Model@@3USequenceModel@@B:BYTE		; Ibm866Model
EXTRN	?Ibm855Model@@3USequenceModel@@B:BYTE		; Ibm855Model
EXTRN	?Latin7Model@@3USequenceModel@@B:BYTE		; Latin7Model
EXTRN	?Win1253Model@@3USequenceModel@@B:BYTE		; Win1253Model
EXTRN	?Latin5BulgarianModel@@3USequenceModel@@B:BYTE	; Latin5BulgarianModel
EXTRN	?Win1251BulgarianModel@@3USequenceModel@@B:BYTE	; Win1251BulgarianModel
EXTRN	?Win1255Model@@3USequenceModel@@B:BYTE		; Win1255Model
EXTRN	?TIS620ThaiModel@@3USequenceModel@@B:BYTE	; TIS620ThaiModel
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@nsHebrewProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsHebrewProber@@8 DD FLAT:??_R0?AVnsHebrewProber@@@8 ; nsHebrewProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsHebrewProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsHebrewProber@@8
rdata$r	SEGMENT
??_R2nsHebrewProber@@8 DD FLAT:??_R1A@?0A@EA@nsHebrewProber@@8 ; nsHebrewProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsHebrewProber@@8
rdata$r	SEGMENT
??_R3nsHebrewProber@@8 DD 00H				; nsHebrewProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsHebrewProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsHebrewProber@@@8
data$r	SEGMENT
??_R0?AVnsHebrewProber@@@8 DD FLAT:??_7type_info@@6B@	; nsHebrewProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsHebrewProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsHebrewProber@@6B@
rdata$r	SEGMENT
??_R4nsHebrewProber@@6B@ DD 00H				; nsHebrewProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsHebrewProber@@@8
	DD	FLAT:??_R3nsHebrewProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsSBCSGroupProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsSBCSGroupProber@@8 DD FLAT:??_R0?AVnsSBCSGroupProber@@@8 ; nsSBCSGroupProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsSBCSGroupProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsSBCSGroupProber@@8
rdata$r	SEGMENT
??_R2nsSBCSGroupProber@@8 DD FLAT:??_R1A@?0A@EA@nsSBCSGroupProber@@8 ; nsSBCSGroupProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsSBCSGroupProber@@8
rdata$r	SEGMENT
??_R3nsSBCSGroupProber@@8 DD 00H			; nsSBCSGroupProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsSBCSGroupProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsSBCSGroupProber@@@8
data$r	SEGMENT
??_R0?AVnsSBCSGroupProber@@@8 DD FLAT:??_7type_info@@6B@ ; nsSBCSGroupProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsSBCSGroupProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsSBCSGroupProber@@6B@
rdata$r	SEGMENT
??_R4nsSBCSGroupProber@@6B@ DD 00H			; nsSBCSGroupProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsSBCSGroupProber@@@8
	DD	FLAT:??_R3nsSBCSGroupProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsSingleByteCharSetProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsSingleByteCharSetProber@@8 DD FLAT:??_R0?AVnsSingleByteCharSetProber@@@8 ; nsSingleByteCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsSingleByteCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsSingleByteCharSetProber@@8
rdata$r	SEGMENT
??_R2nsSingleByteCharSetProber@@8 DD FLAT:??_R1A@?0A@EA@nsSingleByteCharSetProber@@8 ; nsSingleByteCharSetProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsSingleByteCharSetProber@@8
rdata$r	SEGMENT
??_R3nsSingleByteCharSetProber@@8 DD 00H		; nsSingleByteCharSetProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsSingleByteCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsSingleByteCharSetProber@@@8
data$r	SEGMENT
??_R0?AVnsSingleByteCharSetProber@@@8 DD FLAT:??_7type_info@@6B@ ; nsSingleByteCharSetProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsSingleByteCharSetProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsSingleByteCharSetProber@@6B@
rdata$r	SEGMENT
??_R4nsSingleByteCharSetProber@@6B@ DD 00H		; nsSingleByteCharSetProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsSingleByteCharSetProber@@@8
	DD	FLAT:??_R3nsSingleByteCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsCharSetProber@@8 DD FLAT:??_R0?AVnsCharSetProber@@@8 ; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsCharSetProber@@8
rdata$r	SEGMENT
??_R2nsCharSetProber@@8 DD FLAT:??_R1A@?0A@EA@nsCharSetProber@@8 ; nsCharSetProber::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3nsCharSetProber@@8
rdata$r	SEGMENT
??_R3nsCharSetProber@@8 DD 00H				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsCharSetProber@@@8
data$r	SEGMENT
??_R0?AVnsCharSetProber@@@8 DD FLAT:??_7type_info@@6B@	; nsCharSetProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsCharSetProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsCharSetProber@@6B@
rdata$r	SEGMENT
??_R4nsCharSetProber@@6B@ DD 00H			; nsCharSetProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsCharSetProber@@@8
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_7nsHebrewProber@@6B@
CONST	SEGMENT
??_7nsHebrewProber@@6B@ DD FLAT:??_R4nsHebrewProber@@6B@ ; nsHebrewProber::`vftable'
	DD	FLAT:??_EnsHebrewProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsHebrewProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsHebrewProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsHebrewProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsHebrewProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsHebrewProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsHebrewProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7nsSBCSGroupProber@@6B@
CONST	SEGMENT
??_7nsSBCSGroupProber@@6B@ DD FLAT:??_R4nsSBCSGroupProber@@6B@ ; nsSBCSGroupProber::`vftable'
	DD	FLAT:??_EnsSBCSGroupProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsSBCSGroupProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsSBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsSBCSGroupProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsSBCSGroupProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsSBCSGroupProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsSBCSGroupProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7nsSingleByteCharSetProber@@6B@
CONST	SEGMENT
??_7nsSingleByteCharSetProber@@6B@ DD FLAT:??_R4nsSingleByteCharSetProber@@6B@ ; nsSingleByteCharSetProber::`vftable'
	DD	FLAT:??_EnsSingleByteCharSetProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsSingleByteCharSetProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsSingleByteCharSetProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsSingleByteCharSetProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsSingleByteCharSetProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7nsCharSetProber@@6B@
CONST	SEGMENT
??_7nsCharSetProber@@6B@ DD FLAT:??_R4nsCharSetProber@@6B@ ; nsCharSetProber::`vftable'
	DD	FLAT:??_EnsCharSetProber@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsHebrewProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsHebrewProber@@UAE@XZ$0
__ehfuncinfo$??1nsHebrewProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsHebrewProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsHebrewProber@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsHebrewProber@@QAE@XZ$0
__ehfuncinfo$??0nsHebrewProber@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0nsHebrewProber@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??1nsSBCSGroupProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsSBCSGroupProber@@UAE@XZ$0
__ehfuncinfo$??1nsSBCSGroupProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsSBCSGroupProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??0nsSBCSGroupProber@@QAE@XZ DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$??0nsSBCSGroupProber@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??0nsSBCSGroupProber@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$5
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$6
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$7
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$8
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$9
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$10
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$11
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$12
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$13
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$14
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsSingleByteCharSetProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsSingleByteCharSetProber@@UAE@XZ$0
__ehfuncinfo$??1nsSingleByteCharSetProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsSingleByteCharSetProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z$0
__ehfuncinfo$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z$0
__ehfuncinfo$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GnsHebrewProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsHebrewProber@@UAEPAXI@Z PROC			; nsHebrewProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsHebrewProber@@UAE@XZ		; nsHebrewProber::~nsHebrewProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsHebrewProber@@UAEPAXI@Z ENDP			; nsHebrewProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetModelProbers@nsHebrewProber@@QAEXPAVnsCharSetProber@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_logicalPrb$ = 8					; size = 4
_visualPrb$ = 12					; size = 4
?SetModelProbers@nsHebrewProber@@QAEXPAVnsCharSetProber@@0@Z PROC ; nsHebrewProber::SetModelProbers, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.h
; Line 61
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _logicalPrb$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _visualPrb$[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetModelProbers@nsHebrewProber@@QAEXPAVnsCharSetProber@@0@Z ENDP ; nsHebrewProber::SetModelProbers
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsHebrewProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsHebrewProber@@UAEXXZ PROC			; nsHebrewProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.h
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsHebrewProber@@UAEXXZ ENDP			; nsHebrewProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetConfidence@nsHebrewProber@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetConfidence@nsHebrewProber@@UAEMXZ PROC		; nsHebrewProber::GetConfidence, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetConfidence@nsHebrewProber@@UAEMXZ ENDP		; nsHebrewProber::GetConfidence
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsHebrewProber@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsHebrewProber@@UAE@XZ PROC				; nsHebrewProber::~nsHebrewProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.h
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsHebrewProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsHebrewProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsHebrewProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsHebrewProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsHebrewProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsHebrewProber@@UAE@XZ ENDP				; nsHebrewProber::~nsHebrewProber
; Function compile flags: /Odtp
;	COMDAT ??0nsHebrewProber@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0nsHebrewProber@@QAE@XZ PROC				; nsHebrewProber::nsHebrewProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsHebrewProber@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsHebrewProber@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsHebrewProber@@UAEXXZ		; nsHebrewProber::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsHebrewProber@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??0nsHebrewProber@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsHebrewProber@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsHebrewProber@@QAE@XZ ENDP				; nsHebrewProber::nsHebrewProber
; Function compile flags: /Odtp
;	COMDAT ??_GnsSBCSGroupProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsSBCSGroupProber@@UAEPAXI@Z PROC			; nsSBCSGroupProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsSBCSGroupProber@@UAE@XZ		; nsSBCSGroupProber::~nsSBCSGroupProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsSBCSGroupProber@@UAEPAXI@Z ENDP			; nsSBCSGroupProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsSBCSGroupProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsSBCSGroupProber@@UAEXXZ PROC		; nsSBCSGroupProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsSBCSGroupProber@@UAEXXZ ENDP		; nsSBCSGroupProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cf$ = -20						; size = 4
tv65 = -16						; size = 4
_bestConf$ = -12					; size = 4
_this$ = -8						; size = 4
_i$ = -4						; size = 4
?GetConfidence@nsSBCSGroupProber@@UAEMXZ PROC		; nsSBCSGroupProber::GetConfidence
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.cpp
; Line 180
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _bestConf$[ebp], xmm0
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 1
	je	SHORT $LN8@GetConfide
	cmp	DWORD PTR tv65[ebp], 2
	je	SHORT $LN7@GetConfide
	jmp	SHORT $LN6@GetConfide
$LN8@GetConfide:
; Line 187
	fld	DWORD PTR __real@3f7d70a4
	jmp	SHORT $LN11@GetConfide
$LN7@GetConfide:
; Line 189
	fld	DWORD PTR __real@3c23d70a
	jmp	SHORT $LN11@GetConfide
$LN6@GetConfide:
; Line 191
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@GetConfide
$LN4@GetConfide:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN5@GetConfide:
	cmp	DWORD PTR _i$[ebp], 14			; 0000000eH
	jae	SHORT $LN3@GetConfide
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	test	ecx, ecx
	jne	SHORT $LN2@GetConfide
; Line 194
	jmp	SHORT $LN4@GetConfide
$LN2@GetConfide:
; Line 195
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	edx, DWORD PTR [esi+20]
	call	edx
	fstp	DWORD PTR _cf$[ebp]
; Line 196
	movss	xmm0, DWORD PTR _cf$[ebp]
	comiss	xmm0, DWORD PTR _bestConf$[ebp]
	jbe	SHORT $LN1@GetConfide
; Line 198
	movss	xmm0, DWORD PTR _cf$[ebp]
	movss	DWORD PTR _bestConf$[ebp], xmm0
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+80], ecx
$LN1@GetConfide:
; Line 201
	jmp	SHORT $LN4@GetConfide
$LN3@GetConfide:
; Line 203
	fld	DWORD PTR _bestConf$[ebp]
$LN11@GetConfide:
; Line 204
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetConfidence@nsSBCSGroupProber@@UAEMXZ ENDP		; nsSBCSGroupProber::GetConfidence
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?Reset@nsSBCSGroupProber@@UAEXXZ PROC			; nsSBCSGroupProber::Reset
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.cpp
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 115
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN5@Reset
$LN4@Reset:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN5@Reset:
	cmp	DWORD PTR _i$1[ebp], 14			; 0000000eH
	jae	SHORT $LN3@Reset
; Line 117
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4+8], 0
	je	SHORT $LN2@Reset
; Line 119
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4+8]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$1[ebp]
	mov	BYTE PTR [eax+64], 1
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], edx
; Line 123
	jmp	SHORT $LN1@Reset
$LN2@Reset:
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$1[ebp]
	mov	BYTE PTR [ecx+64], 0
$LN1@Reset:
; Line 125
	jmp	SHORT $LN4@Reset
$LN3@Reset:
; Line 126
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], -1
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 128
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@nsSBCSGroupProber@@UAEXXZ ENDP			; nsSBCSGroupProber::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsSBCSGroupProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsSBCSGroupProber@@UAE?AW4nsProbingState@@XZ PROC ; nsSBCSGroupProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.h
; Line 52
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsSBCSGroupProber@@UAE?AW4nsProbingState@@XZ ENDP ; nsSBCSGroupProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsSBCSGroupProber@@UAEPBDXZ PROC	; nsSBCSGroupProber::GetCharSetName
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.cpp
; Line 99
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], -1
	jne	SHORT $LN1@GetCharSet
; Line 103
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	fstp	ST(0)
; Line 105
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+80], -1
	jne	SHORT $LN1@GetCharSet
; Line 107
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 0
$LN1@GetCharSet:
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+edx*4+8]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 110
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsSBCSGroupProber@@UAEPBDXZ ENDP	; nsSBCSGroupProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_st$ = -20						; size = 4
_newLen1$ = -16						; size = 4
_newBuf1$ = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
?HandleData@nsSBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z PROC ; nsSBCSGroupProber::HandleData
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.cpp
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	DWORD PTR _newBuf1$[ebp], 0
; Line 136
	mov	DWORD PTR _newLen1$[ebp], 0
; Line 144
	lea	eax, DWORD PTR _newLen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newBuf1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _aBuf$[ebp]
	push	eax
	call	?FilterWithoutEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z ; nsCharSetProber::FilterWithoutEnglishLetters
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN13@HandleData
; Line 145
	jmp	$done$16
	jmp	$done$16
$LN13@HandleData:
; Line 147
	cmp	DWORD PTR _newLen1$[ebp], 0
	jne	SHORT $LN11@HandleData
; Line 148
	jmp	$done$16
	jmp	$done$16
$LN11@HandleData:
; Line 150
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@HandleData
$LN8@HandleData:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@HandleData:
	cmp	DWORD PTR _i$[ebp], 14			; 0000000eH
	jae	$done$16
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	test	ecx, ecx
	jne	SHORT $LN6@HandleData
; Line 153
	jmp	SHORT $LN8@HandleData
$LN6@HandleData:
; Line 154
	mov	edx, DWORD PTR _newLen1$[ebp]
	push	edx
	mov	eax, DWORD PTR _newBuf1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4+8]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	DWORD PTR _st$[ebp], eax
; Line 155
	cmp	DWORD PTR _st$[ebp], 1
	jne	SHORT $LN5@HandleData
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 158
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 1
; Line 159
	jmp	SHORT $done$16
	jmp	SHORT $LN4@HandleData
$LN5@HandleData:
; Line 161
	cmp	DWORD PTR _st$[ebp], 2
	jne	SHORT $LN4@HandleData
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax+64], 0
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], edx
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+84], 0
	ja	SHORT $LN4@HandleData
; Line 167
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 2
; Line 168
	jmp	SHORT $done$16
$LN4@HandleData:
; Line 171
	jmp	$LN8@HandleData
$done$16:
; Line 174
	cmp	DWORD PTR _newBuf1$[ebp], 0
	je	SHORT $LN1@HandleData
	mov	eax, DWORD PTR _newBuf1$[ebp]
	push	eax
	call	_free
	add	esp, 4
$LN1@HandleData:
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
; Line 177
	mov	esp, ebp
	pop	ebp
	ret	8
?HandleData@nsSBCSGroupProber@@UAE?AW4nsProbingState@@PBDI@Z ENDP ; nsSBCSGroupProber::HandleData
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv85 = -32						; size = 4
$T2 = -28						; size = 4
_this$ = -24						; size = 4
$T3 = -20						; size = 4
_i$4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsSBCSGroupProber@@UAE@XZ PROC			; nsSBCSGroupProber::~nsSBCSGroupProber
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.cpp
; Line 90
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsSBCSGroupProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsSBCSGroupProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 91
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN3@nsSBCSGrou
$LN2@nsSBCSGrou:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN3@nsSBCSGrou:
	cmp	DWORD PTR _i$4[ebp], 14			; 0000000eH
	jae	SHORT $LN4@nsSBCSGrou
; Line 93
	mov	edx, DWORD PTR _i$4[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], edx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@nsSBCSGrou
	push	1
	mov	eax, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@nsSBCSGrou
$LN6@nsSBCSGrou:
	mov	DWORD PTR tv85[ebp], 0
$LN7@nsSBCSGrou:
; Line 94
	jmp	SHORT $LN2@nsSBCSGrou
$LN4@nsSBCSGrou:
; Line 95
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1nsSBCSGroupProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsSBCSGroupProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsSBCSGroupProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsSBCSGroupProber@@UAE@XZ ENDP			; nsSBCSGroupProber::~nsSBCSGroupProber
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv365 = -204						; size = 4
$T2 = -200						; size = 4
$T3 = -196						; size = 4
$T4 = -192						; size = 4
$T5 = -188						; size = 4
$T6 = -184						; size = 4
$T7 = -180						; size = 4
$T8 = -176						; size = 4
$T9 = -172						; size = 4
$T10 = -168						; size = 4
$T11 = -164						; size = 4
$T12 = -160						; size = 4
$T13 = -156						; size = 4
$T14 = -152						; size = 4
$T15 = -148						; size = 4
$T16 = -144						; size = 4
$T17 = -140						; size = 4
$T18 = -136						; size = 4
$T19 = -132						; size = 4
$T20 = -128						; size = 4
$T21 = -124						; size = 4
$T22 = -120						; size = 4
$T23 = -116						; size = 4
$T24 = -112						; size = 4
$T25 = -108						; size = 4
tv246 = -104						; size = 4
$T26 = -100						; size = 4
tv231 = -96						; size = 4
tv276 = -92						; size = 4
tv216 = -88						; size = 4
$T27 = -84						; size = 4
tv201 = -80						; size = 4
tv332 = -76						; size = 4
tv186 = -72						; size = 4
$T28 = -68						; size = 4
tv171 = -64						; size = 4
tv311 = -60						; size = 4
tv156 = -56						; size = 4
$T29 = -52						; size = 4
tv141 = -48						; size = 4
tv284 = -44						; size = 4
tv94 = -40						; size = 4
$T30 = -36						; size = 4
tv261 = -32						; size = 4
$T31 = -28						; size = 4
_hebprober$ = -24					; size = 4
_i$32 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0nsSBCSGroupProber@@QAE@XZ PROC			; nsSBCSGroupProber::nsSBCSGroupProber
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcsgroupprober.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsSBCSGroupProber@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsSBCSGroupProber@@6B@
; Line 49
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T24[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T24[ebp], 0
	je	SHORT $LN8@nsSBCSGrou
	push	OFFSET ?Win1251Model@@3USequenceModel@@B ; Win1251Model
	mov	ecx, DWORD PTR $T24[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN9@nsSBCSGrou
$LN8@nsSBCSGrou:
	mov	DWORD PTR tv94[ebp], 0
$LN9@nsSBCSGrou:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T16[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T16[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 50
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T26[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T26[ebp], 0
	je	SHORT $LN10@nsSBCSGrou
	push	OFFSET ?Koi8rModel@@3USequenceModel@@B	; Koi8rModel
	mov	ecx, DWORD PTR $T26[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN11@nsSBCSGrou
$LN10@nsSBCSGrou:
	mov	DWORD PTR tv141[ebp], 0
$LN11@nsSBCSGrou:
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR $T14[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T14[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 51
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T25[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T25[ebp], 0
	je	SHORT $LN12@nsSBCSGrou
	push	OFFSET ?Latin5Model@@3USequenceModel@@B	; Latin5Model
	mov	ecx, DWORD PTR $T25[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN13@nsSBCSGrou
$LN12@nsSBCSGrou:
	mov	DWORD PTR tv156[ebp], 0
$LN13@nsSBCSGrou:
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [eax+edx+8], ecx
; Line 52
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T23[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T23[ebp], 0
	je	SHORT $LN14@nsSBCSGrou
	push	OFFSET ?MacCyrillicModel@@3USequenceModel@@B ; MacCyrillicModel
	mov	ecx, DWORD PTR $T23[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv171[ebp], eax
	jmp	SHORT $LN15@nsSBCSGrou
$LN14@nsSBCSGrou:
	mov	DWORD PTR tv171[ebp], 0
$LN15@nsSBCSGrou:
	mov	edx, DWORD PTR tv171[ebp]
	mov	DWORD PTR $T12[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T12[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 53
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T21[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN16@nsSBCSGrou
	push	OFFSET ?Ibm866Model@@3USequenceModel@@B	; Ibm866Model
	mov	ecx, DWORD PTR $T21[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN17@nsSBCSGrou
$LN16@nsSBCSGrou:
	mov	DWORD PTR tv186[ebp], 0
$LN17@nsSBCSGrou:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR [eax+edx+8], ecx
; Line 54
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN18@nsSBCSGrou
	push	OFFSET ?Ibm855Model@@3USequenceModel@@B	; Ibm855Model
	mov	ecx, DWORD PTR $T19[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv201[ebp], eax
	jmp	SHORT $LN19@nsSBCSGrou
$LN18@nsSBCSGrou:
	mov	DWORD PTR tv201[ebp], 0
$LN19@nsSBCSGrou:
	mov	edx, DWORD PTR tv201[ebp]
	mov	DWORD PTR $T10[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 55
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T17[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN20@nsSBCSGrou
	push	OFFSET ?Latin7Model@@3USequenceModel@@B	; Latin7Model
	mov	ecx, DWORD PTR $T17[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv216[ebp], eax
	jmp	SHORT $LN21@nsSBCSGrou
$LN20@nsSBCSGrou:
	mov	DWORD PTR tv216[ebp], 0
$LN21@nsSBCSGrou:
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	imul	eax, edx, 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 56
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T20[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN22@nsSBCSGrou
	push	OFFSET ?Win1253Model@@3USequenceModel@@B ; Win1253Model
	mov	ecx, DWORD PTR $T20[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv231[ebp], eax
	jmp	SHORT $LN23@nsSBCSGrou
$LN22@nsSBCSGrou:
	mov	DWORD PTR tv231[ebp], 0
$LN23@nsSBCSGrou:
	mov	eax, DWORD PTR tv231[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T8[ebp]
	mov	DWORD PTR [eax+edx+8], ecx
; Line 57
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T22[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T22[ebp], 0
	je	SHORT $LN24@nsSBCSGrou
	push	OFFSET ?Latin5BulgarianModel@@3USequenceModel@@B ; Latin5BulgarianModel
	mov	ecx, DWORD PTR $T22[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv246[ebp], eax
	jmp	SHORT $LN25@nsSBCSGrou
$LN24@nsSBCSGrou:
	mov	DWORD PTR tv246[ebp], 0
$LN25@nsSBCSGrou:
	mov	edx, DWORD PTR tv246[ebp]
	mov	DWORD PTR $T15[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T15[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 58
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T18[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T18[ebp], 0
	je	SHORT $LN26@nsSBCSGrou
	push	OFFSET ?Win1251BulgarianModel@@3USequenceModel@@B ; Win1251BulgarianModel
	mov	ecx, DWORD PTR $T18[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv261[ebp], eax
	jmp	SHORT $LN27@nsSBCSGrou
$LN26@nsSBCSGrou:
	mov	DWORD PTR tv261[ebp], 0
$LN27@nsSBCSGrou:
	mov	eax, DWORD PTR tv261[ebp]
	mov	DWORD PTR $T13[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, 4
	imul	edx, ecx, 9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T13[ebp]
	mov	DWORD PTR [eax+edx+8], ecx
; Line 59
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T27[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T27[ebp], 0
	je	SHORT $LN28@nsSBCSGrou
	push	OFFSET ?TIS620ThaiModel@@3USequenceModel@@B ; TIS620ThaiModel
	mov	ecx, DWORD PTR $T27[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv276[ebp], eax
	jmp	SHORT $LN29@nsSBCSGrou
$LN28@nsSBCSGrou:
	mov	DWORD PTR tv276[ebp], 0
$LN29@nsSBCSGrou:
	mov	edx, DWORD PTR tv276[ebp]
	mov	DWORD PTR $T11[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 10
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 61
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T30[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T30[ebp], 0
	je	SHORT $LN30@nsSBCSGrou
	mov	ecx, DWORD PTR $T30[ebp]
	call	??0nsHebrewProber@@QAE@XZ		; nsHebrewProber::nsHebrewProber
	mov	DWORD PTR tv284[ebp], eax
	jmp	SHORT $LN31@nsSBCSGrou
$LN30@nsSBCSGrou:
	mov	DWORD PTR tv284[ebp], 0
$LN31@nsSBCSGrou:
	mov	ecx, DWORD PTR tv284[ebp]
	mov	DWORD PTR $T9[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _hebprober$[ebp], edx
; Line 64
	mov	eax, 4
	imul	ecx, eax, 11
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _hebprober$[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 65
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T29[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	cmp	DWORD PTR $T29[ebp], 0
	je	SHORT $LN32@nsSBCSGrou
	mov	ecx, DWORD PTR _hebprober$[ebp]
	push	ecx
	push	0
	push	OFFSET ?Win1255Model@@3USequenceModel@@B ; Win1255Model
	mov	ecx, DWORD PTR $T29[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv311[ebp], eax
	jmp	SHORT $LN33@nsSBCSGrou
$LN32@nsSBCSGrou:
	mov	DWORD PTR tv311[ebp], 0
$LN33@nsSBCSGrou:
	mov	edx, DWORD PTR tv311[ebp]
	mov	DWORD PTR $T7[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 12
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 66
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T28[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	cmp	DWORD PTR $T28[ebp], 0
	je	SHORT $LN34@nsSBCSGrou
	mov	ecx, DWORD PTR _hebprober$[ebp]
	push	ecx
	push	1
	push	OFFSET ?Win1255Model@@3USequenceModel@@B ; Win1255Model
	mov	ecx, DWORD PTR $T28[ebp]
	call	??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
	mov	DWORD PTR tv332[ebp], eax
	jmp	SHORT $LN35@nsSBCSGrou
$LN34@nsSBCSGrou:
	mov	DWORD PTR tv332[ebp], 0
$LN35@nsSBCSGrou:
	mov	edx, DWORD PTR tv332[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 13
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR [edx+ecx+8], eax
; Line 68
	mov	ecx, 4
	imul	edx, ecx, 11
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+8], 0
	je	SHORT $LN5@nsSBCSGrou
	mov	ecx, 4
	imul	edx, ecx, 12
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+8], 0
	je	SHORT $LN5@nsSBCSGrou
	mov	ecx, 4
	imul	edx, ecx, 13
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+8], 0
	je	SHORT $LN5@nsSBCSGrou
; Line 70
	mov	ecx, 4
	imul	edx, ecx, 13
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+8]
	push	ecx
	mov	edx, 4
	imul	eax, edx, 12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	push	edx
	mov	ecx, DWORD PTR _hebprober$[ebp]
	call	?SetModelProbers@nsHebrewProber@@QAEXPAVnsCharSetProber@@0@Z ; nsHebrewProber::SetModelProbers
; Line 72
	jmp	SHORT $LN4@nsSBCSGrou
$LN5@nsSBCSGrou:
; Line 74
	mov	DWORD PTR _i$32[ebp], 11		; 0000000bH
	jmp	SHORT $LN3@nsSBCSGrou
$LN2@nsSBCSGrou:
	mov	eax, DWORD PTR _i$32[ebp]
	add	eax, 1
	mov	DWORD PTR _i$32[ebp], eax
$LN3@nsSBCSGrou:
	cmp	DWORD PTR _i$32[ebp], 13		; 0000000dH
	ja	SHORT $LN4@nsSBCSGrou
; Line 76
	mov	ecx, DWORD PTR _i$32[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+8]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T31[ebp], ecx
	cmp	DWORD PTR $T31[ebp], 0
	je	SHORT $LN36@nsSBCSGrou
	push	1
	mov	edx, DWORD PTR $T31[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T31[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv365[ebp], eax
	jmp	SHORT $LN37@nsSBCSGrou
$LN36@nsSBCSGrou:
	mov	DWORD PTR tv365[ebp], 0
$LN37@nsSBCSGrou:
; Line 77
	mov	eax, DWORD PTR _i$32[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+8], 0
; Line 78
	jmp	SHORT $LN2@nsSBCSGrou
$LN4@nsSBCSGrou:
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsSBCSGroupProber@@UAEXXZ	; nsSBCSGroupProber::Reset
; Line 87
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$1:
	mov	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$2:
	mov	eax, DWORD PTR $T26[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$3:
	mov	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$4:
	mov	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$5:
	mov	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$6:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$7:
	mov	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$8:
	mov	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$9:
	mov	eax, DWORD PTR $T22[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$10:
	mov	eax, DWORD PTR $T18[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$11:
	mov	eax, DWORD PTR $T27[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$12:
	mov	eax, DWORD PTR $T30[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$13:
	mov	eax, DWORD PTR $T29[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsSBCSGroupProber@@QAE@XZ$14:
	mov	eax, DWORD PTR $T28[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsSBCSGroupProber@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-196]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsSBCSGroupProber@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsSBCSGroupProber@@QAE@XZ ENDP			; nsSBCSGroupProber::nsSBCSGroupProber
; Function compile flags: /Odtp
;	COMDAT ??_GnsSingleByteCharSetProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsSingleByteCharSetProber@@UAEPAXI@Z PROC		; nsSingleByteCharSetProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsSingleByteCharSetProber@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsSingleByteCharSetProber@@UAEPAXI@Z ENDP		; nsSingleByteCharSetProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsSingleByteCharSetProber@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsSingleByteCharSetProber@@UAE@XZ PROC		; nsSingleByteCharSetProber::~nsSingleByteCharSetProber, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsSingleByteCharSetProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsSingleByteCharSetProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsSingleByteCharSetProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsSingleByteCharSetProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsSingleByteCharSetProber@@UAE@XZ ENDP		; nsSingleByteCharSetProber::~nsSingleByteCharSetProber
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsSingleByteCharSetProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsSingleByteCharSetProber@@UAEXXZ PROC	; nsSingleByteCharSetProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcharsetprober.h
; Line 78
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsSingleByteCharSetProber@@UAEXXZ ENDP	; nsSingleByteCharSetProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@XZ PROC ; nsSingleByteCharSetProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcharsetprober.h
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsSingleByteCharSetProber@@UAE?AW4nsProbingState@@XZ ENDP ; nsSingleByteCharSetProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_model$ = 8						; size = 4
_reversed$ = 12						; size = 1
_nameProber$ = 16					; size = 4
??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z PROC ; nsSingleByteCharSetProber::nsSingleByteCharSetProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcharsetprober.h
; Line 70
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsSingleByteCharSetProber@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _model$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _reversed$[ebp]
	mov	BYTE PTR [eax+12], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nameProber$[ebp]
	mov	DWORD PTR [edx+44], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsSingleByteCharSetProber@@UAEXXZ ; nsSingleByteCharSetProber::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@_NPAVnsCharSetProber@@@Z ENDP ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
; Function compile flags: /Odtp
;	COMDAT ??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_model$ = 8						; size = 4
??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z PROC ; nsSingleByteCharSetProber::nsSingleByteCharSetProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nssbcharsetprober.h
; Line 68
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsSingleByteCharSetProber@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _model$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsSingleByteCharSetProber@@UAEXXZ ; nsSingleByteCharSetProber::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsSingleByteCharSetProber@@QAE@PBUSequenceModel@@@Z ENDP ; nsSingleByteCharSetProber::nsSingleByteCharSetProber
; Function compile flags: /Odtp
;	COMDAT ??_GnsCharSetProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsCharSetProber@@UAEPAXI@Z PROC			; nsCharSetProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsCharSetProber@@UAEPAXI@Z ENDP			; nsCharSetProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0nsCharSetProber@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0nsCharSetProber@@QAE@XZ PROC				; nsCharSetProber::nsCharSetProber, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0nsCharSetProber@@QAE@XZ ENDP				; nsCharSetProber::nsCharSetProber
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsCharSetProber@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1nsCharSetProber@@UAE@XZ PROC				; nsCharSetProber::~nsCharSetProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscharsetprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1nsCharSetProber@@UAE@XZ ENDP				; nsCharSetProber::~nsCharSetProber
_TEXT	ENDS
END

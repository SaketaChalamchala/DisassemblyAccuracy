; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\UniConversion.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?UTF8Length@@YAIPB_WI@Z				; UTF8Length
PUBLIC	?UTF8FromUCS2@@YAXPB_WIPADI@Z			; UTF8FromUCS2
PUBLIC	?UCS2Length@@YAIPBDI@Z				; UCS2Length
PUBLIC	?UCS2FromUTF8@@YAIPBDIPA_WI@Z			; UCS2FromUTF8
PUBLIC	?ascii_to_utf8@@YAIPBDIPAD@Z			; ascii_to_utf8
PUBLIC	?utf8_to_ascii@@YAHPBDIPAD@Z			; utf8_to_ascii
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_nbByte$ = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_lenUCS2$ = -8						; size = 4
_pszUCS2$ = -4						; size = 4
_pszUTF8$ = 8						; size = 4
_lenUTF8$ = 12						; size = 4
_pszASCII$ = 16						; size = 4
?utf8_to_ascii@@YAHPBDIPAD@Z PROC			; utf8_to_ascii
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uniconversion.cpp
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 112
	cmp	DWORD PTR _lenUTF8$[ebp], 0
	je	SHORT $LN2@utf8_to_as
	cmp	DWORD PTR _pszUTF8$[ebp], 0
	jne	SHORT $LN3@utf8_to_as
$LN2@utf8_to_as:
; Line 114
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _pszASCII$[ebp]
	mov	BYTE PTR [edx+ecx], 0
; Line 115
	xor	eax, eax
	jmp	$LN4@utf8_to_as
$LN3@utf8_to_as:
; Line 121
	mov	eax, DWORD PTR _lenUTF8$[ebp]
	add	eax, 1
	xor	ecx, ecx
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pszUCS2$[ebp], eax
; Line 122
	cmp	DWORD PTR _pszUCS2$[ebp], 0
	jne	SHORT $LN1@utf8_to_as
; Line 124
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _pszASCII$[ebp]
	mov	BYTE PTR [eax+edx], 0
; Line 125
	xor	eax, eax
	jmp	SHORT $LN4@utf8_to_as
$LN1@utf8_to_as:
; Line 128
	mov	ecx, DWORD PTR _lenUTF8$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszUCS2$[ebp]
	push	edx
	mov	eax, DWORD PTR _lenUTF8$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszUTF8$[ebp]
	push	ecx
	call	?UCS2FromUTF8@@YAIPBDIPA_WI@Z		; UCS2FromUTF8
	add	esp, 16					; 00000010H
	mov	DWORD PTR _lenUCS2$[ebp], eax
; Line 129
	xor	edx, edx
	mov	eax, DWORD PTR _lenUCS2$[ebp]
	mov	ecx, DWORD PTR _pszUCS2$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 131
	push	0
	push	0
	mov	edx, DWORD PTR _lenUCS2$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pszASCII$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lenUCS2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszUCS2$[ebp]
	push	edx
	push	0
	push	0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	mov	DWORD PTR _nbByte$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _pszUCS2$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 133
	mov	eax, DWORD PTR _nbByte$[ebp]
$LN4@utf8_to_as:
; Line 134
	mov	esp, ebp
	pop	ebp
	ret	0
?utf8_to_ascii@@YAHPBDIPAD@Z ENDP			; utf8_to_ascii
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_lenUTF8$ = -12						; size = 4
_lenUCS2$ = -8						; size = 4
_pszUCS2$ = -4						; size = 4
_pszASCII$ = 8						; size = 4
_lenASCII$ = 12						; size = 4
_pszUTF8$ = 16						; size = 4
?ascii_to_utf8@@YAIPBDIPAD@Z PROC			; ascii_to_utf8
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uniconversion.cpp
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 84
	cmp	DWORD PTR _lenASCII$[ebp], 0
	je	SHORT $LN2@ascii_to_u
	cmp	DWORD PTR _pszASCII$[ebp], 0
	jne	SHORT $LN3@ascii_to_u
$LN2@ascii_to_u:
; Line 86
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _pszUTF8$[ebp]
	mov	BYTE PTR [edx+ecx], 0
; Line 87
	xor	eax, eax
	jmp	$LN4@ascii_to_u
$LN3@ascii_to_u:
; Line 92
	imul	eax, DWORD PTR _lenASCII$[ebp], 3
	add	eax, 1
	xor	ecx, ecx
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pszUCS2$[ebp], eax
; Line 93
	cmp	DWORD PTR _pszUCS2$[ebp], 0
	jne	SHORT $LN1@ascii_to_u
; Line 95
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _pszUTF8$[ebp]
	mov	BYTE PTR [eax+edx], 0
; Line 96
	xor	eax, eax
	jmp	SHORT $LN4@ascii_to_u
$LN1@ascii_to_u:
; Line 99
	mov	ecx, DWORD PTR _lenASCII$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pszUCS2$[ebp]
	push	edx
	mov	eax, DWORD PTR _lenASCII$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszASCII$[ebp]
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	mov	DWORD PTR _lenUCS2$[ebp], eax
; Line 100
	mov	edx, DWORD PTR _lenUCS2$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszUCS2$[ebp]
	push	eax
	call	?UTF8Length@@YAIPB_WI@Z			; UTF8Length
	add	esp, 8
	mov	DWORD PTR _lenUTF8$[ebp], eax
; Line 102
	mov	ecx, DWORD PTR _lenUTF8$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszUTF8$[ebp]
	push	edx
	mov	eax, DWORD PTR _lenUCS2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszUCS2$[ebp]
	push	ecx
	call	?UTF8FromUCS2@@YAXPB_WIPADI@Z		; UTF8FromUCS2
	add	esp, 16					; 00000010H
; Line 103
	mov	edx, DWORD PTR _pszUCS2$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 104
	mov	eax, DWORD PTR _lenUTF8$[ebp]
$LN4@ascii_to_u:
; Line 105
	mov	esp, ebp
	pop	ebp
	ret	0
?ascii_to_utf8@@YAIPBDIPAD@Z ENDP			; ascii_to_utf8
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_us$ = -16						; size = 4
_ui$ = -12						; size = 4
_i$ = -8						; size = 4
_ch$1 = -1						; size = 1
_s$ = 8							; size = 4
_len$ = 12						; size = 4
_tbuf$ = 16						; size = 4
_tlen$ = 20						; size = 4
?UCS2FromUTF8@@YAIPBDIPA_WI@Z PROC			; UCS2FromUTF8
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uniconversion.cpp
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 55
	mov	DWORD PTR _ui$[ebp], 0
; Line 56
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _us$[ebp], eax
; Line 57
	mov	DWORD PTR _i$[ebp], 0
$LN6@UCS2FromUT:
; Line 58
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jae	$LN5@UCS2FromUT
	mov	edx, DWORD PTR _ui$[ebp]
	cmp	edx, DWORD PTR _tlen$[ebp]
	jae	$LN5@UCS2FromUT
; Line 59
	mov	eax, DWORD PTR _us$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$1[ebp], cl
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 60
	movzx	eax, BYTE PTR _ch$1[ebp]
	cmp	eax, 128				; 00000080H
	jge	SHORT $LN4@UCS2FromUT
; Line 61
	movzx	cx, BYTE PTR _ch$1[ebp]
	mov	edx, DWORD PTR _ui$[ebp]
	mov	eax, DWORD PTR _tbuf$[ebp]
	mov	WORD PTR [eax+edx*2], cx
	jmp	$LN3@UCS2FromUT
$LN4@UCS2FromUT:
; Line 62
	movzx	ecx, BYTE PTR _ch$1[ebp]
	cmp	ecx, 224				; 000000e0H
	jge	SHORT $LN2@UCS2FromUT
; Line 63
	movzx	edx, BYTE PTR _ch$1[ebp]
	and	edx, 31					; 0000001fH
	shl	edx, 6
	mov	eax, DWORD PTR _ui$[ebp]
	mov	ecx, DWORD PTR _tbuf$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 64
	mov	edx, DWORD PTR _us$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _ch$1[ebp], al
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 65
	mov	edx, DWORD PTR _ui$[ebp]
	mov	eax, DWORD PTR _tbuf$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	movzx	edx, BYTE PTR _ch$1[ebp]
	and	edx, 127				; 0000007fH
	add	ecx, edx
	mov	eax, DWORD PTR _ui$[ebp]
	mov	edx, DWORD PTR _tbuf$[ebp]
	mov	WORD PTR [edx+eax*2], cx
; Line 66
	jmp	SHORT $LN3@UCS2FromUT
$LN2@UCS2FromUT:
; Line 67
	movzx	eax, BYTE PTR _ch$1[ebp]
	and	eax, 15					; 0000000fH
	shl	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _ui$[ebp]
	mov	edx, DWORD PTR _tbuf$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
; Line 68
	mov	eax, DWORD PTR _us$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$1[ebp], cl
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 69
	mov	eax, DWORD PTR _ui$[ebp]
	mov	ecx, DWORD PTR _tbuf$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	movzx	eax, BYTE PTR _ch$1[ebp]
	and	eax, 127				; 0000007fH
	shl	eax, 6
	add	edx, eax
	mov	ecx, DWORD PTR _ui$[ebp]
	mov	eax, DWORD PTR _tbuf$[ebp]
	mov	WORD PTR [eax+ecx*2], dx
; Line 70
	mov	ecx, DWORD PTR _us$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _ch$1[ebp], dl
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 71
	mov	ecx, DWORD PTR _ui$[ebp]
	mov	edx, DWORD PTR _tbuf$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	movzx	ecx, BYTE PTR _ch$1[ebp]
	and	ecx, 127				; 0000007fH
	add	eax, ecx
	mov	edx, DWORD PTR _ui$[ebp]
	mov	ecx, DWORD PTR _tbuf$[ebp]
	mov	WORD PTR [ecx+edx*2], ax
$LN3@UCS2FromUT:
; Line 73
	mov	edx, DWORD PTR _ui$[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$[ebp], edx
; Line 74
	jmp	$LN6@UCS2FromUT
$LN5@UCS2FromUT:
; Line 75
	mov	eax, DWORD PTR _ui$[ebp]
; Line 76
	mov	esp, ebp
	pop	ebp
	ret	0
?UCS2FromUTF8@@YAIPBDIPA_WI@Z ENDP			; UCS2FromUTF8
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ulen$ = -12						; size = 4
_i$1 = -8						; size = 4
_ch$2 = -1						; size = 1
_s$ = 8							; size = 4
_len$ = 12						; size = 4
?UCS2Length@@YAIPBDI@Z PROC				; UCS2Length
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uniconversion.cpp
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 44
	mov	DWORD PTR _ulen$[ebp], 0
; Line 45
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN5@UCS2Length
$LN4@UCS2Length:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN5@UCS2Length:
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jae	SHORT $LN3@UCS2Length
; Line 46
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _i$1[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _ch$2[ebp], al
; Line 47
	movzx	ecx, BYTE PTR _ch$2[ebp]
	cmp	ecx, 128				; 00000080H
	jl	SHORT $LN1@UCS2Length
	movzx	edx, BYTE PTR _ch$2[ebp]
	cmp	edx, 192				; 000000c0H
	jle	SHORT $LN2@UCS2Length
$LN1@UCS2Length:
; Line 48
	mov	eax, DWORD PTR _ulen$[ebp]
	add	eax, 1
	mov	DWORD PTR _ulen$[ebp], eax
$LN2@UCS2Length:
; Line 49
	jmp	SHORT $LN4@UCS2Length
$LN3@UCS2Length:
; Line 50
	mov	eax, DWORD PTR _ulen$[ebp]
; Line 51
	mov	esp, ebp
	pop	ebp
	ret	0
?UCS2Length@@YAIPBDI@Z ENDP				; UCS2Length
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_uch$2 = -8						; size = 4
_k$ = -4						; size = 4
_uptr$ = 8						; size = 4
_tlen$ = 12						; size = 4
_putf$ = 16						; size = 4
_len$ = 20						; size = 4
?UTF8FromUCS2@@YAXPB_WIPADI@Z PROC			; UTF8FromUCS2
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uniconversion.cpp
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 26
	mov	DWORD PTR _k$[ebp], 0
; Line 27
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN7@UTF8FromUC
$LN6@UTF8FromUC:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN7@UTF8FromUC:
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR _tlen$[ebp]
	jae	$LN5@UTF8FromUC
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _uptr$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	test	ecx, ecx
	je	$LN5@UTF8FromUC
; Line 28
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _uptr$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _uch$2[ebp], ecx
; Line 29
	cmp	DWORD PTR _uch$2[ebp], 128		; 00000080H
	jae	SHORT $LN4@UTF8FromUC
; Line 30
	mov	edx, DWORD PTR _putf$[ebp]
	add	edx, DWORD PTR _k$[ebp]
	mov	al, BYTE PTR _uch$2[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
	jmp	$LN3@UTF8FromUC
$LN4@UTF8FromUC:
; Line 31
	cmp	DWORD PTR _uch$2[ebp], 2048		; 00000800H
	jae	SHORT $LN2@UTF8FromUC
; Line 32
	mov	edx, DWORD PTR _uch$2[ebp]
	shr	edx, 6
	or	edx, 192				; 000000c0H
	mov	eax, DWORD PTR _putf$[ebp]
	add	eax, DWORD PTR _k$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 33
	mov	edx, DWORD PTR _uch$2[ebp]
	and	edx, 63					; 0000003fH
	or	edx, 128				; 00000080H
	mov	eax, DWORD PTR _putf$[ebp]
	add	eax, DWORD PTR _k$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 34
	jmp	SHORT $LN3@UTF8FromUC
$LN2@UTF8FromUC:
; Line 35
	mov	edx, DWORD PTR _uch$2[ebp]
	shr	edx, 12					; 0000000cH
	or	edx, 224				; 000000e0H
	mov	eax, DWORD PTR _putf$[ebp]
	add	eax, DWORD PTR _k$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 36
	mov	edx, DWORD PTR _uch$2[ebp]
	shr	edx, 6
	and	edx, 63					; 0000003fH
	or	edx, 128				; 00000080H
	mov	eax, DWORD PTR _putf$[ebp]
	add	eax, DWORD PTR _k$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
; Line 37
	mov	edx, DWORD PTR _uch$2[ebp]
	and	edx, 63					; 0000003fH
	or	edx, 128				; 00000080H
	mov	eax, DWORD PTR _putf$[ebp]
	add	eax, DWORD PTR _k$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _k$[ebp]
	add	ecx, 1
	mov	DWORD PTR _k$[ebp], ecx
$LN3@UTF8FromUC:
; Line 39
	jmp	$LN6@UTF8FromUC
$LN5@UTF8FromUC:
; Line 40
	mov	edx, DWORD PTR _putf$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [edx], 0
; Line 41
	mov	esp, ebp
	pop	ebp
	ret	0
?UTF8FromUCS2@@YAXPB_WIPADI@Z ENDP			; UTF8FromUCS2
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_uch$1 = -12						; size = 4
_i$2 = -8						; size = 4
_len$ = -4						; size = 4
_uptr$ = 8						; size = 4
_tlen$ = 12						; size = 4
?UTF8Length@@YAIPB_WI@Z PROC				; UTF8Length
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uniconversion.cpp
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 12
	mov	DWORD PTR _len$[ebp], 0
; Line 13
	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN7@UTF8Length
$LN6@UTF8Length:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN7@UTF8Length:
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR _tlen$[ebp]
	jae	SHORT $LN5@UTF8Length
	mov	edx, DWORD PTR _i$2[ebp]
	mov	eax, DWORD PTR _uptr$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	test	ecx, ecx
	je	SHORT $LN5@UTF8Length
; Line 14
	mov	edx, DWORD PTR _i$2[ebp]
	mov	eax, DWORD PTR _uptr$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _uch$1[ebp], ecx
; Line 15
	cmp	DWORD PTR _uch$1[ebp], 128		; 00000080H
	jae	SHORT $LN4@UTF8Length
; Line 16
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, 1
	mov	DWORD PTR _len$[ebp], edx
	jmp	SHORT $LN3@UTF8Length
$LN4@UTF8Length:
; Line 17
	cmp	DWORD PTR _uch$1[ebp], 2048		; 00000800H
	jae	SHORT $LN2@UTF8Length
; Line 18
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 2
	mov	DWORD PTR _len$[ebp], eax
; Line 19
	jmp	SHORT $LN3@UTF8Length
$LN2@UTF8Length:
; Line 20
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 3
	mov	DWORD PTR _len$[ebp], ecx
$LN3@UTF8Length:
; Line 21
	jmp	SHORT $LN6@UTF8Length
$LN5@UTF8Length:
; Line 22
	mov	eax, DWORD PTR _len$[ebp]
; Line 23
	mov	esp, ebp
	pop	ebp
	ret	0
?UTF8Length@@YAIPB_WI@Z ENDP				; UTF8Length
_TEXT	ENDS
END

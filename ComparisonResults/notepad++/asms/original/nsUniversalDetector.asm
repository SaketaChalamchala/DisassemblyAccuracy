; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\uchardet\nsUniversalDetector.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG3639	DB	'UTF-8', 00H
	ORG $+2
$SG3642	DB	'UTF-16', 00H
	ORG $+1
$SG3645	DB	'UTF-16', 00H
CONST	ENDS
PUBLIC	??0nsUniversalDetector@@QAE@I@Z			; nsUniversalDetector::nsUniversalDetector
PUBLIC	??1nsUniversalDetector@@UAE@XZ			; nsUniversalDetector::~nsUniversalDetector
PUBLIC	?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z ; nsUniversalDetector::HandleData
PUBLIC	?DataEnd@nsUniversalDetector@@UAEXXZ		; nsUniversalDetector::DataEnd
PUBLIC	?Reset@nsUniversalDetector@@MAEXXZ		; nsUniversalDetector::Reset
PUBLIC	??_GnsUniversalDetector@@UAEPAXI@Z		; nsUniversalDetector::`scalar deleting destructor'
PUBLIC	??1nsCharSetProber@@UAE@XZ			; nsCharSetProber::~nsCharSetProber
PUBLIC	??0nsCharSetProber@@QAE@XZ			; nsCharSetProber::nsCharSetProber
PUBLIC	??_GnsCharSetProber@@UAEPAXI@Z			; nsCharSetProber::`scalar deleting destructor'
PUBLIC	??0nsLatin1Prober@@QAE@XZ			; nsLatin1Prober::nsLatin1Prober
PUBLIC	??1nsLatin1Prober@@UAE@XZ			; nsLatin1Prober::~nsLatin1Prober
PUBLIC	?GetCharSetName@nsLatin1Prober@@UAEPBDXZ	; nsLatin1Prober::GetCharSetName
PUBLIC	?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ ; nsLatin1Prober::GetState
PUBLIC	?SetOpion@nsLatin1Prober@@UAEXXZ		; nsLatin1Prober::SetOpion
PUBLIC	??_GnsLatin1Prober@@UAEPAXI@Z			; nsLatin1Prober::`scalar deleting destructor'
PUBLIC	??_7nsUniversalDetector@@6B@			; nsUniversalDetector::`vftable'
PUBLIC	??_7nsCharSetProber@@6B@			; nsCharSetProber::`vftable'
PUBLIC	??_7nsLatin1Prober@@6B@				; nsLatin1Prober::`vftable'
PUBLIC	??_C@_0N@BCBHFELI@windows?91252?$AA@		; `string'
PUBLIC	??_R4nsCharSetProber@@6B@			; nsCharSetProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsCharSetProber@@@8			; nsCharSetProber `RTTI Type Descriptor'
PUBLIC	??_R3nsCharSetProber@@8				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsCharSetProber@@8				; nsCharSetProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsCharSetProber@@8		; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsUniversalDetector@@6B@			; nsUniversalDetector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsUniversalDetector@@@8			; nsUniversalDetector `RTTI Type Descriptor'
PUBLIC	??_R3nsUniversalDetector@@8			; nsUniversalDetector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsUniversalDetector@@8			; nsUniversalDetector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsUniversalDetector@@8		; nsUniversalDetector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsLatin1Prober@@6B@			; nsLatin1Prober::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsLatin1Prober@@@8			; nsLatin1Prober `RTTI Type Descriptor'
PUBLIC	??_R3nsLatin1Prober@@8				; nsLatin1Prober::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsLatin1Prober@@8				; nsLatin1Prober::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsLatin1Prober@@8			; nsLatin1Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f19999a
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??_EnsUniversalDetector@@UAEPAXI@Z:PROC		; nsUniversalDetector::`vector deleting destructor'
EXTRN	??_EnsCharSetProber@@UAEPAXI@Z:PROC		; nsCharSetProber::`vector deleting destructor'
EXTRN	??0nsMBCSGroupProber@@QAE@I@Z:PROC		; nsMBCSGroupProber::nsMBCSGroupProber
EXTRN	??0nsSBCSGroupProber@@QAE@XZ:PROC		; nsSBCSGroupProber::nsSBCSGroupProber
EXTRN	??0nsEscCharSetProber@@QAE@I@Z:PROC		; nsEscCharSetProber::nsEscCharSetProber
EXTRN	?HandleData@nsLatin1Prober@@UAE?AW4nsProbingState@@PBDI@Z:PROC ; nsLatin1Prober::HandleData
EXTRN	?Reset@nsLatin1Prober@@UAEXXZ:PROC		; nsLatin1Prober::Reset
EXTRN	?GetConfidence@nsLatin1Prober@@UAEMXZ:PROC	; nsLatin1Prober::GetConfidence
EXTRN	??_EnsLatin1Prober@@UAEPAXI@Z:PROC		; nsLatin1Prober::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@nsLatin1Prober@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsLatin1Prober@@8 DD FLAT:??_R0?AVnsLatin1Prober@@@8 ; nsLatin1Prober::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsLatin1Prober@@8
rdata$r	ENDS
;	COMDAT ??_R2nsLatin1Prober@@8
rdata$r	SEGMENT
??_R2nsLatin1Prober@@8 DD FLAT:??_R1A@?0A@EA@nsLatin1Prober@@8 ; nsLatin1Prober::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsLatin1Prober@@8
rdata$r	SEGMENT
??_R3nsLatin1Prober@@8 DD 00H				; nsLatin1Prober::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsLatin1Prober@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsLatin1Prober@@@8
data$r	SEGMENT
??_R0?AVnsLatin1Prober@@@8 DD FLAT:??_7type_info@@6B@	; nsLatin1Prober `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsLatin1Prober@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsLatin1Prober@@6B@
rdata$r	SEGMENT
??_R4nsLatin1Prober@@6B@ DD 00H				; nsLatin1Prober::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsLatin1Prober@@@8
	DD	FLAT:??_R3nsLatin1Prober@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsUniversalDetector@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsUniversalDetector@@8 DD FLAT:??_R0?AVnsUniversalDetector@@@8 ; nsUniversalDetector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsUniversalDetector@@8
rdata$r	ENDS
;	COMDAT ??_R2nsUniversalDetector@@8
rdata$r	SEGMENT
??_R2nsUniversalDetector@@8 DD FLAT:??_R1A@?0A@EA@nsUniversalDetector@@8 ; nsUniversalDetector::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3nsUniversalDetector@@8
rdata$r	SEGMENT
??_R3nsUniversalDetector@@8 DD 00H			; nsUniversalDetector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2nsUniversalDetector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsUniversalDetector@@@8
data$r	SEGMENT
??_R0?AVnsUniversalDetector@@@8 DD FLAT:??_7type_info@@6B@ ; nsUniversalDetector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsUniversalDetector@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsUniversalDetector@@6B@
rdata$r	SEGMENT
??_R4nsUniversalDetector@@6B@ DD 00H			; nsUniversalDetector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsUniversalDetector@@@8
	DD	FLAT:??_R3nsUniversalDetector@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsCharSetProber@@8 DD FLAT:??_R0?AVnsCharSetProber@@@8 ; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsCharSetProber@@8
rdata$r	SEGMENT
??_R2nsCharSetProber@@8 DD FLAT:??_R1A@?0A@EA@nsCharSetProber@@8 ; nsCharSetProber::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3nsCharSetProber@@8
rdata$r	SEGMENT
??_R3nsCharSetProber@@8 DD 00H				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsCharSetProber@@@8
data$r	SEGMENT
??_R0?AVnsCharSetProber@@@8 DD FLAT:??_7type_info@@6B@	; nsCharSetProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsCharSetProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsCharSetProber@@6B@
rdata$r	SEGMENT
??_R4nsCharSetProber@@6B@ DD 00H			; nsCharSetProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsCharSetProber@@@8
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@BCBHFELI@windows?91252?$AA@
CONST	SEGMENT
??_C@_0N@BCBHFELI@windows?91252?$AA@ DB 'windows-1252', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7nsLatin1Prober@@6B@
CONST	SEGMENT
??_7nsLatin1Prober@@6B@ DD FLAT:??_R4nsLatin1Prober@@6B@ ; nsLatin1Prober::`vftable'
	DD	FLAT:??_EnsLatin1Prober@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsLatin1Prober@@UAEPBDXZ
	DD	FLAT:?HandleData@nsLatin1Prober@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsLatin1Prober@@UAEXXZ
	DD	FLAT:?GetConfidence@nsLatin1Prober@@UAEMXZ
	DD	FLAT:?SetOpion@nsLatin1Prober@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7nsCharSetProber@@6B@
CONST	SEGMENT
??_7nsCharSetProber@@6B@ DD FLAT:??_R4nsCharSetProber@@6B@ ; nsCharSetProber::`vftable'
	DD	FLAT:??_EnsCharSetProber@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7nsUniversalDetector@@6B@
CONST	SEGMENT
??_7nsUniversalDetector@@6B@ DD FLAT:??_R4nsUniversalDetector@@6B@ ; nsUniversalDetector::`vftable'
	DD	FLAT:??_EnsUniversalDetector@@UAEPAXI@Z
	DD	FLAT:?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
	DD	FLAT:?DataEnd@nsUniversalDetector@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:?Reset@nsUniversalDetector@@MAEXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1nsLatin1Prober@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsLatin1Prober@@UAE@XZ$0
__ehfuncinfo$??1nsLatin1Prober@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsLatin1Prober@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0nsLatin1Prober@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsLatin1Prober@@QAE@XZ$0
__ehfuncinfo$??0nsLatin1Prober@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0nsLatin1Prober@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$3
__ehfuncinfo$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GnsLatin1Prober@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsLatin1Prober@@UAEPAXI@Z PROC			; nsLatin1Prober::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsLatin1Prober@@UAE@XZ		; nsLatin1Prober::~nsLatin1Prober
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsLatin1Prober@@UAEPAXI@Z ENDP			; nsLatin1Prober::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsLatin1Prober@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsLatin1Prober@@UAEXXZ PROC			; nsLatin1Prober::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsLatin1Prober@@UAEXXZ ENDP			; nsLatin1Prober::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ PROC ; nsLatin1Prober::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.h
; Line 52
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsLatin1Prober@@UAE?AW4nsProbingState@@XZ ENDP ; nsLatin1Prober::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsLatin1Prober@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsLatin1Prober@@UAEPBDXZ PROC		; nsLatin1Prober::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_0N@BCBHFELI@windows?91252?$AA@
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsLatin1Prober@@UAEPBDXZ ENDP		; nsLatin1Prober::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsLatin1Prober@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsLatin1Prober@@UAE@XZ PROC				; nsLatin1Prober::~nsLatin1Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsLatin1Prober@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsLatin1Prober@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1nsLatin1Prober@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsLatin1Prober@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsLatin1Prober@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsLatin1Prober@@UAE@XZ ENDP				; nsLatin1Prober::~nsLatin1Prober
; Function compile flags: /Odtp
;	COMDAT ??0nsLatin1Prober@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0nsLatin1Prober@@QAE@XZ PROC				; nsLatin1Prober::nsLatin1Prober, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsLatin1Prober@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsLatin1Prober@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@nsLatin1Prober@@UAEXXZ		; nsLatin1Prober::Reset
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0nsLatin1Prober@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??0nsLatin1Prober@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsLatin1Prober@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsLatin1Prober@@QAE@XZ ENDP				; nsLatin1Prober::nsLatin1Prober
; Function compile flags: /Odtp
;	COMDAT ??_GnsCharSetProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsCharSetProber@@UAEPAXI@Z PROC			; nsCharSetProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsCharSetProber@@UAEPAXI@Z ENDP			; nsCharSetProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0nsCharSetProber@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0nsCharSetProber@@QAE@XZ PROC				; nsCharSetProber::nsCharSetProber, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0nsCharSetProber@@QAE@XZ ENDP				; nsCharSetProber::nsCharSetProber
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsCharSetProber@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1nsCharSetProber@@UAE@XZ PROC				; nsCharSetProber::~nsCharSetProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscharsetprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1nsCharSetProber@@UAE@XZ ENDP				; nsCharSetProber::~nsCharSetProber
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GnsUniversalDetector@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsUniversalDetector@@UAEPAXI@Z PROC			; nsUniversalDetector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsUniversalDetector@@UAE@XZ		; nsUniversalDetector::~nsUniversalDetector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsUniversalDetector@@UAEPAXI@Z ENDP			; nsUniversalDetector::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?Reset@nsUniversalDetector@@MAEXXZ PROC			; nsUniversalDetector::Reset
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsuniversaldetector.cpp
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 79
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], -1
; Line 80
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+9], 0
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+10], 1
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 84
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+11], 0
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+12], 0
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	SHORT $LN5@Reset
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN5@Reset:
; Line 92
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Reset
$LN3@Reset:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Reset:
	cmp	DWORD PTR _i$[ebp], 3
	jae	SHORT $LN6@Reset
; Line 93
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+28], 0
	je	SHORT $LN1@Reset
; Line 94
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+28]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4+28]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN1@Reset:
; Line 95
	jmp	SHORT $LN3@Reset
$LN6@Reset:
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@nsUniversalDetector@@MAEXXZ ENDP			; nsUniversalDetector::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv76 = -24						; size = 4
_proberConfidence$1 = -20				; size = 4
_maxProber$2 = -16					; size = 4
_maxProberConfidence$3 = -12				; size = 4
_i$4 = -8						; size = 4
_this$ = -4						; size = 4
?DataEnd@nsUniversalDetector@@UAEXXZ PROC		; nsUniversalDetector::DataEnd
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsuniversaldetector.cpp
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 235
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+11]
	test	ecx, ecx
	jne	SHORT $LN13@DataEnd
; Line 239
	jmp	$LN14@DataEnd
$LN13@DataEnd:
; Line 242
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN12@DataEnd
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
; Line 246
	jmp	$LN14@DataEnd
$LN12@DataEnd:
; Line 249
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv76[ebp], edx
	cmp	DWORD PTR tv76[ebp], 2
	je	SHORT $LN9@DataEnd
	jmp	$LN1@DataEnd
$LN9@DataEnd:
; Line 254
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _maxProberConfidence$3[ebp], xmm0
; Line 255
	mov	DWORD PTR _maxProber$2[ebp], 0
; Line 257
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN8@DataEnd
$LN7@DataEnd:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN8@DataEnd:
	cmp	DWORD PTR _i$4[ebp], 3
	jge	SHORT $LN6@DataEnd
; Line 259
	mov	ecx, DWORD PTR _i$4[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+28], 0
	je	SHORT $LN4@DataEnd
; Line 261
	mov	eax, DWORD PTR _i$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+28]
	mov	eax, DWORD PTR _i$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4+28]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	fstp	DWORD PTR _proberConfidence$1[ebp]
; Line 262
	movss	xmm0, DWORD PTR _proberConfidence$1[ebp]
	comiss	xmm0, DWORD PTR _maxProberConfidence$3[ebp]
	jbe	SHORT $LN4@DataEnd
; Line 264
	movss	xmm0, DWORD PTR _proberConfidence$1[ebp]
	movss	DWORD PTR _maxProberConfidence$3[ebp], xmm0
; Line 265
	mov	ecx, DWORD PTR _i$4[ebp]
	mov	DWORD PTR _maxProber$2[ebp], ecx
$LN4@DataEnd:
; Line 268
	jmp	SHORT $LN7@DataEnd
$LN6@DataEnd:
; Line 270
	movss	xmm0, DWORD PTR _maxProberConfidence$3[ebp]
	comiss	xmm0, DWORD PTR __real@3f19999a
	jbe	SHORT $LN3@DataEnd
; Line 271
	mov	edx, DWORD PTR _maxProber$2[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+28]
	mov	edx, DWORD PTR _maxProber$2[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax+edx*4+28]
	mov	edx, DWORD PTR [esi+4]
	call	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN3@DataEnd:
$LN1@DataEnd:
$LN14@DataEnd:
; Line 280
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?DataEnd@nsUniversalDetector@@UAEXXZ ENDP		; nsUniversalDetector::DataEnd
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -92						; size = 4
$T3 = -88						; size = 4
$T4 = -84						; size = 4
$T5 = -80						; size = 4
tv160 = -76						; size = 4
$T6 = -72						; size = 4
tv267 = -68						; size = 4
$T7 = -64						; size = 4
tv251 = -60						; size = 4
tv228 = -56						; size = 4
$T8 = -52						; size = 4
tv206 = -48						; size = 4
$T9 = -44						; size = 4
tv181 = -40						; size = 4
$T10 = -36						; size = 4
_st$ = -32						; size = 4
$T11 = -28						; size = 4
tv77 = -24						; size = 4
_i$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z PROC ; nsUniversalDetector::HandleData
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsuniversaldetector.cpp
; Line 102
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN41@HandleData
; Line 104
	xor	eax, eax
	jmp	$LN42@HandleData
$LN41@HandleData:
; Line 106
	cmp	DWORD PTR _aLen$[ebp], 0
	jbe	SHORT $LN40@HandleData
; Line 107
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+11], 1
$LN40@HandleData:
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	$LN39@HandleData
; Line 112
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+10], 0
; Line 113
	cmp	DWORD PTR _aLen$[ebp], 2
	jbe	$LN38@HandleData
; Line 114
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _aBuf$[ebp]
	mov	al, BYTE PTR [edx+ecx]
	mov	BYTE PTR tv77[ebp], al
	cmp	BYTE PTR tv77[ebp], -17			; ffffffefH
	je	SHORT $LN35@HandleData
	cmp	BYTE PTR tv77[ebp], -2			; fffffffeH
	je	SHORT $LN33@HandleData
	cmp	BYTE PTR tv77[ebp], -1
	je	SHORT $LN31@HandleData
	jmp	SHORT $LN38@HandleData
$LN35@HandleData:
; Line 117
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _aBuf$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, -69				; ffffffbbH
	jne	SHORT $LN34@HandleData
	mov	ecx, 1
	shl	ecx, 1
	mov	edx, DWORD PTR _aBuf$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, -65				; ffffffbfH
	jne	SHORT $LN34@HandleData
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET $SG3639
$LN34@HandleData:
; Line 120
	jmp	SHORT $LN38@HandleData
$LN33@HandleData:
; Line 122
	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _aBuf$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, -1
	jne	SHORT $LN32@HandleData
; Line 124
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], OFFSET $SG3642
$LN32@HandleData:
; Line 125
	jmp	SHORT $LN38@HandleData
$LN31@HandleData:
; Line 127
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _aBuf$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, -2					; fffffffeH
	jne	SHORT $LN38@HandleData
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], OFFSET $SG3645
$LN38@HandleData:
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN39@HandleData
; Line 135
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+8], 1
; Line 136
	xor	eax, eax
	jmp	$LN42@HandleData
$LN39@HandleData:
; Line 141
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN28@HandleData
$LN27@HandleData:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN28@HandleData:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _aLen$[ebp]
	jae	$LN26@HandleData
; Line 144
	mov	edx, DWORD PTR _aBuf$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [edx]
	and	eax, -128				; ffffff80H
	je	$LN25@HandleData
	mov	ecx, DWORD PTR _aBuf$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, -96				; ffffffa0H
	je	$LN25@HandleData
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 2
	je	$LN24@HandleData
; Line 150
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 2
; Line 153
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	SHORT $LN23@HandleData
; Line 154
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T11[ebp], edx
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN44@HandleData
	push	1
	mov	eax, DWORD PTR $T11[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T11[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN45@HandleData
$LN44@HandleData:
	mov	DWORD PTR tv160[ebp], 0
$LN45@HandleData:
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0
$LN23@HandleData:
; Line 159
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+28], 0
	jne	SHORT $LN22@HandleData
; Line 161
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN46@HandleData
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0nsMBCSGroupProber@@QAE@I@Z		; nsMBCSGroupProber::nsMBCSGroupProber
	mov	DWORD PTR tv181[ebp], eax
	jmp	SHORT $LN47@HandleData
$LN46@HandleData:
	mov	DWORD PTR tv181[ebp], 0
$LN47@HandleData:
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx+eax+28], edx
; Line 162
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+28], 0
	jne	SHORT $LN22@HandleData
; Line 163
	mov	eax, 1
	jmp	$LN42@HandleData
$LN22@HandleData:
; Line 166
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+28], 0
	jne	SHORT $LN20@HandleData
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	and	eax, 16					; 00000010H
	je	SHORT $LN20@HandleData
; Line 168
	push	88					; 00000058H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN48@HandleData
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0nsSBCSGroupProber@@QAE@XZ		; nsSBCSGroupProber::nsSBCSGroupProber
	mov	DWORD PTR tv206[ebp], eax
	jmp	SHORT $LN49@HandleData
$LN48@HandleData:
	mov	DWORD PTR tv206[ebp], 0
$LN49@HandleData:
	mov	ecx, DWORD PTR tv206[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [eax+edx+28], ecx
; Line 169
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+28], 0
	jne	SHORT $LN20@HandleData
; Line 170
	mov	eax, 1
	jmp	$LN42@HandleData
$LN20@HandleData:
; Line 172
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+28], 0
	jne	SHORT $LN24@HandleData
; Line 174
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN50@HandleData
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0nsLatin1Prober@@QAE@XZ		; nsLatin1Prober::nsLatin1Prober
	mov	DWORD PTR tv228[ebp], eax
	jmp	SHORT $LN51@HandleData
$LN50@HandleData:
	mov	DWORD PTR tv228[ebp], 0
$LN51@HandleData:
	mov	eax, DWORD PTR tv228[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edx+ecx+28], eax
; Line 175
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+28], 0
	jne	SHORT $LN24@HandleData
; Line 176
	mov	eax, 1
	jmp	$LN42@HandleData
$LN24@HandleData:
; Line 180
	jmp	SHORT $LN16@HandleData
$LN25@HandleData:
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN15@HandleData
	mov	ecx, DWORD PTR _aBuf$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 27					; 0000001bH
	je	SHORT $LN14@HandleData
	mov	eax, DWORD PTR _aBuf$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 123				; 0000007bH
	jne	SHORT $LN15@HandleData
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+12]
	cmp	eax, 126				; 0000007eH
	jne	SHORT $LN15@HandleData
$LN14@HandleData:
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 1
$LN15@HandleData:
; Line 189
	mov	edx, DWORD PTR _aBuf$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax+12], cl
$LN16@HandleData:
; Line 191
	jmp	$LN27@HandleData
$LN26@HandleData:
; Line 194
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv251[ebp], eax
	cmp	DWORD PTR tv251[ebp], 1
	je	SHORT $LN11@HandleData
	cmp	DWORD PTR tv251[ebp], 2
	je	$LN7@HandleData
	jmp	$LN12@HandleData
$LN11@HandleData:
; Line 197
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN10@HandleData
; Line 198
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN52@HandleData
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0nsEscCharSetProber@@QAE@I@Z		; nsEscCharSetProber::nsEscCharSetProber
	mov	DWORD PTR tv267[ebp], eax
	jmp	SHORT $LN53@HandleData
$LN52@HandleData:
	mov	DWORD PTR tv267[ebp], 0
$LN53@HandleData:
	mov	ecx, DWORD PTR tv267[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+40], eax
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN10@HandleData
; Line 200
	mov	eax, 1
	jmp	$LN42@HandleData
$LN10@HandleData:
; Line 202
	mov	edx, DWORD PTR _aLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _aBuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	DWORD PTR _st$[ebp], eax
; Line 203
	cmp	DWORD PTR _st$[ebp], 1
	jne	SHORT $LN8@HandleData
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 1
; Line 206
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN8@HandleData:
; Line 208
	jmp	SHORT $LN12@HandleData
$LN7@HandleData:
; Line 210
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@HandleData
$LN5@HandleData:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN6@HandleData:
	cmp	DWORD PTR _i$[ebp], 3
	jae	SHORT $LN12@HandleData
; Line 212
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+28], 0
	je	SHORT $LN3@HandleData
; Line 214
	mov	edx, DWORD PTR _aLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _aBuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+28]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4+28]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	DWORD PTR _st$[ebp], eax
; Line 215
	cmp	DWORD PTR _st$[ebp], 1
	jne	SHORT $LN3@HandleData
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
; Line 218
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+28]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4+28]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 219
	xor	eax, eax
	jmp	SHORT $LN42@HandleData
$LN3@HandleData:
; Line 222
	jmp	SHORT $LN5@HandleData
$LN12@HandleData:
; Line 228
	xor	eax, eax
$LN42@HandleData:
; Line 229
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$0:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$1:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$2:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z$3:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HandleData@nsUniversalDetector@@UAE?AW4nsresult@@PBDI@Z ENDP ; nsUniversalDetector::HandleData
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T1 = -28						; size = 4
tv76 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
_this$ = -12						; size = 4
$T4 = -8						; size = 4
_i$5 = -4						; size = 4
??1nsUniversalDetector@@UAE@XZ PROC			; nsUniversalDetector::~nsUniversalDetector
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsuniversaldetector.cpp
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsUniversalDetector@@6B@
; Line 69
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN3@nsUniversa
$LN2@nsUniversa:
	mov	ecx, DWORD PTR _i$5[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$5[ebp], ecx
$LN3@nsUniversa:
	cmp	DWORD PTR _i$5[ebp], 3
	jge	SHORT $LN1@nsUniversa
; Line 70
	mov	edx, DWORD PTR _i$5[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+28]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T4[ebp], edx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN6@nsUniversa
	push	1
	mov	eax, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN7@nsUniversa
$LN6@nsUniversa:
	mov	DWORD PTR tv76[ebp], 0
$LN7@nsUniversa:
	jmp	SHORT $LN2@nsUniversa
$LN1@nsUniversa:
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN8@nsUniversa
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@nsUniversa
$LN8@nsUniversa:
	mov	DWORD PTR tv84[ebp], 0
$LN4@nsUniversa:
; Line 73
	mov	esp, ebp
	pop	ebp
	ret	0
??1nsUniversalDetector@@UAE@XZ ENDP			; nsUniversalDetector::~nsUniversalDetector
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
_aLanguageFilter$ = 8					; size = 4
??0nsUniversalDetector@@QAE@I@Z PROC			; nsUniversalDetector::nsUniversalDetector
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsuniversaldetector.cpp
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsUniversalDetector@@6B@
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 0
; Line 51
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], -1
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+9], 0
; Line 53
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0
; Line 55
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+10], 1
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+11], 0
; Line 58
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _aLanguageFilter$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 63
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@nsUniversa
$LN2@nsUniversa:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@nsUniversa:
	cmp	DWORD PTR _i$[ebp], 3
	jae	SHORT $LN4@nsUniversa
; Line 64
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+28], 0
	jmp	SHORT $LN2@nsUniversa
$LN4@nsUniversa:
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0nsUniversalDetector@@QAE@I@Z ENDP			; nsUniversalDetector::nsUniversalDetector
_TEXT	ENDS
END

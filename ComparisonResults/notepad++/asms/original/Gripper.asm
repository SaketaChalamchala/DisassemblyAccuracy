; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\WinControls\DockingWnd\Gripper.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?_isRegistered@Gripper@@0HA			; Gripper::_isRegistered
_BSS	SEGMENT
?_isRegistered@Gripper@@0HA DD 01H DUP (?)		; Gripper::_isRegistered
_hWndServer DD	01H DUP (?)
_hookMouse DD	01H DUP (?)
_hookKeyboard DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
$SG125965 DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'D', 00H, 'l', 00H
	DB	'g', 00H, 00H, 00H
$SG125969 DB	'Gripper::startGrip : RegisterClass() function failed', 00H
	ORG $+3
$SG125975 DB	00H, 00H
	ORG $+2
$SG125976 DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'D', 00H, 'l', 00H
	DB	'g', 00H, 00H, 00H
$SG125980 DB	'Gripper::startGrip : CreateWindowEx() function return nu'
	DB	'll', 00H
	ORG $+1
$SG126036 DB	'G', 00H, 'e', 00H, 't', 00H, 'L', 00H, 'a', 00H, 's', 00H
	DB	't', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, '('
	DB	00H, ')', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '%', 00H, 'l'
	DB	00H, 'u', 00H, 00H, 00H
$SG126037 DB	'S', 00H, 'e', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, 'H', 00H, 'o', 00H, 'o'
	DB	00H, 'k', 00H, 'E', 00H, 'x', 00H, '(', 00H, 'M', 00H, 'O', 00H
	DB	'U', 00H, 'S', 00H, 'E', 00H, ')', 00H, ' ', 00H, 'f', 00H, 'a'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'c', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, '(', 00H, ')', 00H, 00H
	DB	00H
$SG126075 DB	'G', 00H, 'e', 00H, 't', 00H, 'L', 00H, 'a', 00H, 's', 00H
	DB	't', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, '('
	DB	00H, ')', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '%', 00H, 'l'
	DB	00H, 'u', 00H, 00H, 00H
$SG126076 DB	'S', 00H, 'e', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, 'H', 00H, 'o', 00H, 'o'
	DB	00H, 'k', 00H, 'E', 00H, 'x', 00H, '(', 00H, 'K', 00H, 'E', 00H
	DB	'Y', 00H, 'B', 00H, 'O', 00H, 'A', 00H, 'R', 00H, 'D', 00H, ')'
	DB	00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'G', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 'p', 00H, 'e', 00H, 'r', 00H, ':', 00H
	DB	':', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H
	ORG $+2
_DotPattern DW	0aaH
	DW	055H
	DW	0aaH
	DW	055H
	DW	0aaH
	DW	055H
	DW	0aaH
	DW	055H
CONST	ENDS
PUBLIC	_hypot
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??0Gripper@@QAE@XZ				; Gripper::Gripper
PUBLIC	?startGrip@Gripper@@QAEXPAVDockingCont@@PAVDockingManager@@@Z ; Gripper::startGrip
PUBLIC	??1Gripper@@QAE@XZ				; Gripper::~Gripper
PUBLIC	?create@Gripper@@IAEXXZ				; Gripper::create
PUBLIC	?staticWinProc@Gripper@@KGJPAUHWND__@@IIJ@Z	; Gripper::staticWinProc
PUBLIC	?runProc@Gripper@@IAEJIIJ@Z			; Gripper::runProc
PUBLIC	?onMove@Gripper@@IAEXXZ				; Gripper::onMove
PUBLIC	?onButtonUp@Gripper@@IAEXXZ			; Gripper::onButtonUp
PUBLIC	?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z	; Gripper::doTabReordering
PUBLIC	?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z	; Gripper::drawRectangle
PUBLIC	?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z	; Gripper::getMousePoints
PUBLIC	?getMovingRect@Gripper@@IAEXUtagPOINT@@PAUtagRECT@@@Z ; Gripper::getMovingRect
PUBLIC	?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z ; Gripper::contHitTest
PUBLIC	?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z ; Gripper::workHitTest
PUBLIC	?initTabInformation@Gripper@@IAEXXZ		; Gripper::initTabInformation
PUBLIC	?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z ; Gripper::CalcRectToScreen
PUBLIC	?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z	; Gripper::ShrinkRcToSize
PUBLIC	?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z ; Gripper::DoCalcGripperRect
PUBLIC	??_GGripper@@QAEPAXI@Z				; Gripper::`scalar deleting destructor'
PUBLIC	?getHSelf@Window@@QBEPAUHWND__@@XZ		; Window::getHSelf
PUBLIC	?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ	; DockingCont::getTabWnd
PUBLIC	?getCaptionWnd@DockingCont@@QAEPAUHWND__@@XZ	; DockingCont::getCaptionWnd
PUBLIC	?isFloating@DockingCont@@QAE_NXZ		; DockingCont::isFloating
PUBLIC	?startMovingFromTab@DockingCont@@QAEHXZ		; DockingCont::startMovingFromTab
PUBLIC	?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ; DockingManager::getContainerInfo
PUBLIC	?getDockInfo@DockingManager@@QAEXPAUtDockMgr@@@Z ; DockingManager::getDockInfo
PUBLIC	?select_on_container_copy_construction@?$allocator@PAVDockingCont@@@std@@QBE?AV12@XZ ; std::allocator<DockingCont *>::select_on_container_copy_construction
PUBLIC	??0?$allocator@PAVDockingCont@@@std@@QAE@XZ	; std::allocator<DockingCont *>::allocator<DockingCont *>
PUBLIC	??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z ; std::allocator<DockingCont *>::allocator<DockingCont *>
PUBLIC	?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::deallocate
PUBLIC	?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::allocate
PUBLIC	?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ ; std::allocator<DockingCont *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SA?AV?$allocator@PAVDockingCont@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingCont *> >::~_Vector_val<std::_Simple_types<DockingCont *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
PUBLIC	??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
PUBLIC	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
PUBLIC	?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::begin
PUBLIC	?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::end
PUBLIC	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
PUBLIC	?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size
PUBLIC	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
PUBLIC	?_Buy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAE_NI@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Buy
PUBLIC	?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy
PUBLIC	?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen
PUBLIC	?getInstance@NppParameters@@SAPAV1@XZ		; NppParameters::getInstance
PUBLIC	?getWinVersion@NppParameters@@QAE?AW4winVer@@XZ	; NppParameters::getWinVersion
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QBEPBQAVDockingCont@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Unchecked
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > > >
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z ; std::_Allocate<DockingCont *>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAVDockingCont@@PAPAV2@@Z ; std::_Ptr_cat<DockingCont *,DockingCont *>
PUBLIC	??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z ; std::_Ptr_cat<DockingCont *,DockingCont *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<DockingCont *> > >
PUBLIC	??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Unchecked<DockingCont * *>
PUBLIC	??$_Uninit_copy@PBQAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninit_copy<DockingCont * const *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<DockingCont * *,DockingCont * *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$_Uninit_copy@QAVDockingCont@@PAV1@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<DockingCont * const,DockingCont *>
PUBLIC	??$_Debug_range@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WI@Z ; std::_Debug_range<DockingCont * const *>
PUBLIC	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
PUBLIC	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
PUBLIC	??$_Iter_cat@PBQAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAVDockingCont@@@Z ; std::_Iter_cat<DockingCont * const *>
PUBLIC	??$_Debug_range2@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DockingCont * const *>
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__BitBlt@36:PROC
EXTRN	__imp__CreateBitmap@20:PROC
EXTRN	__imp__CreateCompatibleBitmap@12:PROC
EXTRN	__imp__CreateCompatibleDC@4:PROC
EXTRN	__imp__CreatePatternBrush@4:PROC
EXTRN	__imp__DeleteDC@4:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	__imp__PatBlt@24:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__SetBrushOrgEx@16:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__PostMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__RegisterClassW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__MoveWindow@24:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__IsWindowVisible@4:PROC
EXTRN	__imp__mouse_event@20:PROC
EXTRN	__imp__SetCapture@4:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__GetDCEx@12:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__LockWindowUpdate@4:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	__imp__GetCursorPos@4:PROC
EXTRN	__imp__ScreenToClient@8:PROC
EXTRN	__imp__WindowFromPoint@8:PROC
EXTRN	__imp__PtInRect@12:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__SetWindowsHookExW@16:PROC
EXTRN	__imp__UnhookWindowsHookEx@4:PROC
EXTRN	__imp__CallNextHookEx@16:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	__hypot:PROC
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	__CrtDbgReportW:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z:PROC ; ClientRectToScreenRect
EXTRN	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ:PROC ; DockingCont::getDataOfActiveTb
EXTRN	?focusClient@DockingCont@@QAEXXZ:PROC		; DockingCont::focusClient
EXTRN	?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z:PROC ; DockingManager::toggleActiveTb
EXTRN	?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z:PROC ; DockingManager::toggleVisTb
EXTRN	?toggleActiveTb@DockingManager@@QAEXPAVDockingCont@@0@Z:PROC ; DockingManager::toggleActiveTb
EXTRN	?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z:PROC ; DockingManager::toggleVisTb
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?_pSelf@NppParameters@@0PAV1@A:DWORD		; NppParameters::_pSelf
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?szText@?6??initTabInformation@Gripper@@IAEXXZ@4PA_WA
_BSS	SEGMENT
?szText@?6??initTabInformation@Gripper@@IAEXXZ@4PA_WA DW 040H DUP (?) ; `Gripper::initTabInformation'::`7'::szText
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@
CONST	SEGMENT
??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'D', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'C', 00H, 'o'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	'D', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$3
__ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$3
__ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$4
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z$0
__unwindtable$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z$0
__unwindtable$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z$0
__ehfuncinfo$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_System_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_System_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_System_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_System_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_System_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_System_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iostream_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iostream_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Iostream_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Iostream_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Generic_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Generic_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Generic_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Generic_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0runtime_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0runtime_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1runtime_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1runtime_error@std@@UAE@XZ$0
__ehfuncinfo$??1runtime_error@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1runtime_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0runtime_error@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0
__ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0runtime_error@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DockingCont * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DockingCont * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PBQAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAVDockingCont@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PBQAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAVDockingCont@@@Z PROC ; std::_Iter_cat<DockingCont * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PBQAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAVDockingCont@@@Z ENDP ; std::_Iter_cat<DockingCont * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z PROC ; std::_Debug_pointer<DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z ENDP ; std::_Debug_pointer<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z PROC ; std::_Debug_pointer<DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ENDP ; std::_Debug_pointer<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WI@Z PROC ; std::_Debug_range<DockingCont * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PBQAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAVDockingCont@@@Z ; std::_Iter_cat<DockingCont * const *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DockingCont * const *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WI@Z ENDP ; std::_Debug_range<DockingCont * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@QAVDockingCont@@PAV1@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@QAVDockingCont@@PAV1@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<DockingCont * const,DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 401
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 402
	push	402					; 00000192H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WI@Z ; std::_Debug_range<DockingCont * const *>
	add	esp, 16					; 00000010H
; Line 403
	push	403					; 00000193H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
	add	esp, 12					; 0000000cH
; Line 404
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 406
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 407
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@QAVDockingCont@@PAV1@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<DockingCont * const,DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<DockingCont * *,DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<DockingCont * *,DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@PBQAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PBQAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z PROC ; std::_Uninit_copy<DockingCont * const *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 414
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 416
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAVDockingCont@@PAPAV2@@Z ; std::_Ptr_cat<DockingCont *,DockingCont *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@QAVDockingCont@@PAV1@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<DockingCont * const,DockingCont *>
	add	esp, 20					; 00000014H
; Line 417
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PBQAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ENDP ; std::_Uninit_copy<DockingCont * const *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z PROC ; std::_Unchecked<DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ENDP ; std::_Unchecked<DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 264
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 265
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QBEPBQAVDockingCont@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Unchecked
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 266
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Iter$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z PROC ; std::_Ptr_cat<DockingCont *,DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z ENDP ; std::_Ptr_cat<DockingCont *,DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAVDockingCont@@PAPAV2@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAVDockingCont@@PAPAV2@@Z PROC ; std::_Ptr_cat<DockingCont *,DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 453
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 455
	mov	al, BYTE PTR __Cat$[ebp]
; Line 456
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAVDockingCont@@PAPAV2@@Z ENDP ; std::_Ptr_cat<DockingCont *,DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
_TEXT	SEGMENT
tv147 = -52						; size = 4
$T2 = -48						; size = 4
tv143 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv67 = -32						; size = 4
tv148 = -28						; size = 4
tv153 = -24						; size = 4
tv144 = -20						; size = 4
tv151 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Dest$ = 32						; size = 4
__Al$ = 36						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 427
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Unchecked<DockingCont * *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv151[ebp], eax
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<DockingCont *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], eax
	mov	ecx, DWORD PTR tv144[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv153[ebp], eax
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR tv147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<DockingCont *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	push	ecx
	call	??$_Uninit_copy@PBQAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninit_copy<DockingCont * const *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR tv67[ebp]
	push	edx
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<DockingCont * *,DockingCont * *>
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 428
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z PROC ; std::_Allocate<DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z ENDP ; std::_Allocate<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z ; std::_Ptr_cat<DockingCont *,DockingCont *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z
_TEXT	SEGMENT
tv142 = -52						; size = 4
$T2 = -48						; size = 4
tv139 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv71 = -32						; size = 4
tv146 = -28						; size = 4
tv145 = -24						; size = 4
_this$ = -20						; size = 4
__Alval$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Ptr$ = 32						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1636
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1638
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
; Line 1640
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv139[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv146[ebp], eax
	mov	eax, DWORD PTR tv146[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 1641
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QBEPBQAVDockingCont@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QBEPBQAVDockingCont@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Unchecked, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 60
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QBEPBQAVDockingCont@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DockingCont *,int,DockingCont * const *,DockingCont * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
_TEXT	SEGMENT
_nCode$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?hookProcKeyboard@@YGJHIJ@Z PROC			; hookProcKeyboard
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 77
	push	ebp
	mov	ebp, esp
; Line 78
	cmp	DWORD PTR _nCode$[ebp], 0
	jl	SHORT $LN2@hookProcKe
; Line 80
	cmp	DWORD PTR _wParam$[ebp], 27		; 0000001bH
	jne	SHORT $LN2@hookProcKe
; Line 82
	push	0
	push	0
	push	20492					; 0000500cH
	mov	eax, DWORD PTR _hWndServer
	push	eax
	call	DWORD PTR __imp__PostMessageW@16
; Line 83
	xor	eax, eax
	jmp	SHORT $LN3@hookProcKe
$LN2@hookProcKe:
; Line 87
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _nCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hookKeyboard
	push	ecx
	call	DWORD PTR __imp__CallNextHookEx@16
$LN3@hookProcKe:
; Line 88
	pop	ebp
	ret	12					; 0000000cH
?hookProcKeyboard@@YGJHIJ@Z ENDP			; hookProcKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv65 = -4						; size = 4
_nCode$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?hookProcMouse@@YGJHIJ@Z PROC				; hookProcMouse
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 55
	cmp	DWORD PTR _nCode$[ebp], 0
	jl	SHORT $LN6@hookProcMo
; Line 57
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 512		; 00000200H
	ja	SHORT $LN9@hookProcMo
	cmp	DWORD PTR tv65[ebp], 512		; 00000200H
	je	SHORT $LN3@hookProcMo
	cmp	DWORD PTR tv65[ebp], 160		; 000000a0H
	je	SHORT $LN3@hookProcMo
	cmp	DWORD PTR tv65[ebp], 162		; 000000a2H
	je	SHORT $LN2@hookProcMo
	jmp	SHORT $LN6@hookProcMo
$LN9@hookProcMo:
	cmp	DWORD PTR tv65[ebp], 514		; 00000202H
	je	SHORT $LN2@hookProcMo
	jmp	SHORT $LN6@hookProcMo
$LN3@hookProcMo:
; Line 62
	push	0
	push	0
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWndServer
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 63
	jmp	SHORT $LN6@hookProcMo
$LN2@hookProcMo:
; Line 67
	push	0
	push	0
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndServer
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 68
	mov	eax, 1
	jmp	SHORT $LN7@hookProcMo
$LN6@hookProcMo:
; Line 73
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hookMouse
	push	edx
	call	DWORD PTR __imp__CallNextHookEx@16
$LN7@hookProcMo:
; Line 74
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?hookProcMouse@@YGJHIJ@Z ENDP				; hookProcMouse
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getWinVersion@NppParameters@@QAE?AW4winVer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getWinVersion@NppParameters@@QAE?AW4winVer@@XZ PROC	; NppParameters::getWinVersion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1456
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+117788]
	mov	esp, ebp
	pop	ebp
	ret	0
?getWinVersion@NppParameters@@QAE?AW4winVer@@XZ ENDP	; NppParameters::getWinVersion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getInstance@NppParameters@@SAPAV1@XZ
_TEXT	SEGMENT
?getInstance@NppParameters@@SAPAV1@XZ PROC		; NppParameters::getInstance, COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1155
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?_pSelf@NppParameters@@0PAV1@A ; NppParameters::_pSelf
	pop	ebp
	ret	0
?getInstance@NppParameters@@SAPAV1@XZ ENDP		; NppParameters::getInstance
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAE_NI@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Buy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1546
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1548
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 1549
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 1551
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1552
	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1553
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1554
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen
; Line 1555
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1557
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1558
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 1559
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN3@Buy:
; Line 1561
	mov	al, 1
$LN6@Buy:
; Line 1562
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1030
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::begin
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
__ehhandler$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv178 = -52						; size = 4
$T2 = -48						; size = 4
tv175 = -44						; size = 4
$T3 = -40						; size = 4
tv135 = -36						; size = 4
tv180 = -32						; size = 4
tv69 = -28						; size = 4
_this$ = -24						; size = 4
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 721
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 722
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAE_NI@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	$LN3@vector
; Line 723
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 725
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::begin
	mov	DWORD PTR tv180[ebp], eax
	mov	edx, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DockingCont *> > > >
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN5@vector
__catch$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$0:
; Line 727
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
; Line 728
	push	0
	push	0
	call	__CxxThrowException@8
; Line 729
	mov	eax, $LN11@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN3@vector
$LN11@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector:
; Line 730
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$3:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$4:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DockingCont *> >::~_Vector_val<std::_Simple_types<DockingCont *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DockingCont *> >::~_Vector_val<std::_Simple_types<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z ; std::allocator<DockingCont *>::allocator<DockingCont *>
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAVDockingCont@@@std@@QAE@XZ ; std::allocator<DockingCont *>::allocator<DockingCont *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SA?AV?$allocator@PAVDockingCont@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 780
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SA?AV?$allocator@PAVDockingCont@@@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SA?AV?$allocator@PAVDockingCont@@@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<DockingCont *> >::select_on_container_copy_construction, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 740
	push	ebp
	mov	ebp, esp
; Line 741
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?select_on_container_copy_construction@?$allocator@PAVDockingCont@@@std@@QBE?AV12@XZ ; std::allocator<DockingCont *>::select_on_container_copy_construction
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 742
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SA?AV?$allocator@PAVDockingCont@@@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<DockingCont *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z PROC ; std::allocator_traits<std::allocator<DockingCont *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ ; std::allocator<DockingCont *>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DockingCont *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ PROC	; std::allocator<DockingCont *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ ENDP	; std::allocator<DockingCont *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z PROC ; std::allocator<DockingCont *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z ; std::_Allocate<DockingCont *>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z ENDP ; std::allocator<DockingCont *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z PROC ; std::allocator<DockingCont *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z ENDP ; std::allocator<DockingCont *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z PROC	; std::allocator<DockingCont *>::allocator<DockingCont *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 556
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<DockingCont *>::allocator<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAVDockingCont@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVDockingCont@@@std@@QAE@XZ PROC	; std::allocator<DockingCont *>::allocator<DockingCont *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVDockingCont@@@std@@QAE@XZ ENDP	; std::allocator<DockingCont *>::allocator<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator@PAVDockingCont@@@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@PAVDockingCont@@@std@@QBE?AV12@XZ PROC ; std::allocator<DockingCont *>::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z ; std::allocator<DockingCont *>::allocator<DockingCont *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 534
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$allocator@PAVDockingCont@@@std@@QBE?AV12@XZ ENDP ; std::allocator<DockingCont *>::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getDockInfo@DockingManager@@QAEXPAUtDockMgr@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDockData$ = 8						; size = 4
?getDockInfo@DockingManager@@QAEXPAUtDockMgr@@@Z PROC	; DockingManager::getDockInfo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 92					; 0000005cH
	mov	ecx, 17					; 00000011H
	mov	edi, DWORD PTR _pDockData$[ebp]
	rep movsd
; Line 94
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?getDockInfo@DockingManager@@QAEXPAUtDockMgr@@@Z ENDP	; DockingManager::getDockInfo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ PROC ; DockingManager::getContainerInfo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.h
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
; Line 90
	mov	esp, ebp
	pop	ebp
	ret	0
?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ENDP ; DockingManager::getContainerInfo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?startMovingFromTab@DockingCont@@QAEHXZ
_TEXT	SEGMENT
_dragFromTabTemp$ = -8					; size = 4
_this$ = -4						; size = 4
?startMovingFromTab@DockingCont@@QAEHXZ PROC		; DockingCont::startMovingFromTab, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR _dragFromTabTemp$[ebp], ecx
; Line 123
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 0
; Line 124
	mov	eax, DWORD PTR _dragFromTabTemp$[ebp]
; Line 125
	mov	esp, ebp
	pop	ebp
	ret	0
?startMovingFromTab@DockingCont@@QAEHXZ ENDP		; DockingCont::startMovingFromTab
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isFloating@DockingCont@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isFloating@DockingCont@@QAE_NXZ PROC			; DockingCont::isFloating, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 112
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+36]
; Line 114
	mov	esp, ebp
	pop	ebp
	ret	0
?isFloating@DockingCont@@QAE_NXZ ENDP			; DockingCont::isFloating
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getCaptionWnd@DockingCont@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getCaptionWnd@DockingCont@@QAEPAUHWND__@@XZ PROC	; DockingCont::getCaptionWnd, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	jne	SHORT $LN2@getCaption
; Line 76
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	jmp	SHORT $LN3@getCaption
; Line 77
	jmp	SHORT $LN3@getCaption
$LN2@getCaption:
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
$LN3@getCaption:
; Line 79
	mov	esp, ebp
	pop	ebp
	ret	0
?getCaptionWnd@DockingCont@@QAEPAUHWND__@@XZ ENDP	; DockingCont::getCaptionWnd
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ PROC		; DockingCont::getTabWnd, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
; Line 73
	mov	esp, ebp
	pop	ebp
	ret	0
?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ ENDP		; DockingCont::getTabWnd
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getHSelf@Window@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getHSelf@Window@@QBEPAUHWND__@@XZ PROC			; Window::getHSelf, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 96
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 99
	mov	esp, ebp
	pop	ebp
	ret	0
?getHSelf@Window@@QBEPAUHWND__@@XZ ENDP			; Window::getHSelf
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GGripper@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGripper@@QAEPAXI@Z PROC				; Gripper::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Gripper@@QAE@XZ			; Gripper::~Gripper
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGripper@@QAEPAXI@Z ENDP				; Gripper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
_rcCorr$ = 12						; size = 16
_pt$ = 28						; size = 8
?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z PROC ; Gripper::DoCalcGripperRect, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.h
; Line 122
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _rc$[ebp]
	add	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR _pt$[ebp]
	jge	SHORT $LN2@DoCalcGrip
; Line 124
	mov	eax, DWORD PTR _pt$[ebp]
	sub	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@DoCalcGrip:
; Line 125
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _rc$[ebp]
	add	eax, DWORD PTR [ecx+12]
	cmp	eax, DWORD PTR _pt$[ebp+4]
	jge	SHORT $LN3@DoCalcGrip
; Line 126
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR _rcCorr$[ebp+12]
	sub	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _rc$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@DoCalcGrip:
; Line 127
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z ENDP ; Gripper::DoCalcGripperRect
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z PROC	; Gripper::ShrinkRcToSize, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.h
; Line 118
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 120
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 121
	mov	esp, ebp
	pop	ebp
	ret	4
?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z ENDP	; Gripper::ShrinkRcToSize
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_rc$ = 12						; size = 4
?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z PROC ; Gripper::CalcRectToScreen, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.h
; Line 110
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 111
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z ; ClientRectToScreenRect
	add	esp, 8
; Line 112
	mov	edx, DWORD PTR _rc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z ; Gripper::ShrinkRcToSize
; Line 113
	mov	esp, ebp
	pop	ebp
	ret	8
?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z ENDP ; Gripper::CalcRectToScreen
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?initTabInformation@Gripper@@IAEXXZ PROC		; Gripper::initTabInformation
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 858
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 862
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ ; DockingCont::getTabWnd
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], eax
; Line 863
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	?startMovingFromTab@DockingCont@@QAEHXZ	; DockingCont::startMovingFromTab
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+132], eax
; Line 864
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+132], 0
	jne	SHORT $LN2@initTabInf
	push	0
	push	0
	push	4868					; 00001304H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN2@initTabInf
; Line 866
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], 1
; Line 867
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
; Line 869
	jmp	SHORT $LN1@initTabInf
$LN2@initTabInf:
; Line 872
	push	0
	push	0
	push	4875					; 0000130bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN1@initTabInf:
; Line 876
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR [edx+124], ecx
; Line 877
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 140				; 0000008cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	push	4874					; 0000130aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 881
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+156], 9
; Line 882
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+168], OFFSET ?szText@?6??initTabInformation@Gripper@@IAEXXZ@4PA_WA
; Line 883
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+172], 64			; 00000040H
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	push	4924					; 0000133cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?initTabInformation@Gripper@@IAEXXZ ENDP		; Gripper::initTabInformation
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -92						; size = 4
$T3 = -88						; size = 4
_len$4 = -84						; size = 4
$T5 = -80						; size = 4
_vCont$ = -76						; size = 16
tv134 = -60						; size = 4
tv153 = -56						; size = 4
tv87 = -52						; size = 4
tv167 = -48						; size = 4
_this$ = -44						; size = 4
_iCont$6 = -40						; size = 4
_iWork$7 = -36						; size = 4
_rcCont$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pt$ = 8						; size = 8
_rc$ = 16						; size = 4
?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z PROC ; Gripper::workHitTest
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 782
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 783
	mov	DWORD PTR _rcCont$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _rcCont$[ebp+4], eax
	mov	DWORD PTR _rcCont$[ebp+8], eax
	mov	DWORD PTR _rcCont$[ebp+12], eax
; Line 784
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ; DockingManager::getContainerInfo
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 787
	mov	DWORD PTR _iCont$6[ebp], 0
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$4[ebp], eax
	jmp	SHORT $LN19@workHitTes
$LN18@workHitTes:
	mov	edx, DWORD PTR _iCont$6[ebp]
	add	edx, 1
	mov	DWORD PTR _iCont$6[ebp], edx
$LN19@workHitTes:
	mov	eax, DWORD PTR _iCont$6[ebp]
	cmp	eax, DWORD PTR _len$4[ebp]
	jae	$LN17@workHitTes
; Line 789
	mov	ecx, DWORD PTR _iCont$6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], edx
	mov	eax, DWORD PTR tv87[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@workHitTes
; Line 791
	mov	edx, DWORD PTR _iCont$6[ebp]
	push	edx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv134[ebp], eax
	lea	ecx, DWORD PTR _rcCont$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv134[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv134[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx
; Line 793
	mov	eax, DWORD PTR _pt$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pt$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rcCont$[ebp]
	push	edx
	call	DWORD PTR __imp__PtInRect@12
	cmp	eax, 1
	jne	SHORT $LN16@workHitTes
; Line 796
	mov	DWORD PTR $T5[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN20@workHitTes
$LN16@workHitTes:
; Line 799
	jmp	$LN18@workHitTes
$LN17@workHitTes:
; Line 802
	mov	DWORD PTR _iWork$7[ebp], 0
	jmp	SHORT $LN14@workHitTes
$LN13@workHitTes:
	mov	eax, DWORD PTR _iWork$7[ebp]
	add	eax, 1
	mov	DWORD PTR _iWork$7[ebp], eax
$LN14@workHitTes:
	cmp	DWORD PTR _iWork$7[ebp], 4
	jge	$LN12@workHitTes
; Line 804
	mov	ecx, DWORD PTR _iWork$7[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv153[ebp], edx
	mov	eax, DWORD PTR tv153[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv153[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN11@workHitTes
; Line 806
	mov	edx, DWORD PTR _iWork$7[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+16]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _rcCont$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _rcCont$[ebp+4], eax
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _rcCont$[ebp+8], edx
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _rcCont$[ebp+12], eax
; Line 807
	mov	ecx, DWORD PTR _rcCont$[ebp+8]
	add	ecx, DWORD PTR _rcCont$[ebp]
	mov	DWORD PTR _rcCont$[ebp+8], ecx
; Line 808
	mov	edx, DWORD PTR _rcCont$[ebp+12]
	add	edx, DWORD PTR _rcCont$[ebp+4]
	mov	DWORD PTR _rcCont$[ebp+12], edx
; Line 810
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN10@workHitTes
; Line 812
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rcCont$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rcCont$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rcCont$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rcCont$[ebp+12]
	mov	DWORD PTR [eax+12], edx
$LN10@workHitTes:
; Line 816
	mov	eax, DWORD PTR _iWork$7[ebp]
	mov	DWORD PTR tv167[ebp], eax
	cmp	DWORD PTR tv167[ebp], 3
	ja	SHORT $LN8@workHitTes
	mov	ecx, DWORD PTR tv167[ebp]
	jmp	DWORD PTR $LN24@workHitTes[ecx*4]
$LN7@workHitTes:
; Line 819
	mov	edx, DWORD PTR _rcCont$[ebp]
	add	edx, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp+8], edx
; Line 820
	mov	eax, DWORD PTR _rcCont$[ebp]
	sub	eax, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp], eax
; Line 821
	jmp	SHORT $LN8@workHitTes
$LN6@workHitTes:
; Line 823
	mov	ecx, DWORD PTR _rcCont$[ebp+8]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp], ecx
; Line 824
	mov	edx, DWORD PTR _rcCont$[ebp+8]
	add	edx, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp+8], edx
; Line 825
	jmp	SHORT $LN8@workHitTes
$LN5@workHitTes:
; Line 827
	mov	eax, DWORD PTR _rcCont$[ebp+4]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp+12], eax
; Line 828
	mov	ecx, DWORD PTR _rcCont$[ebp+4]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp+4], ecx
; Line 829
	jmp	SHORT $LN8@workHitTes
$LN4@workHitTes:
; Line 831
	mov	edx, DWORD PTR _rcCont$[ebp+12]
	sub	edx, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp+4], edx
; Line 832
	mov	eax, DWORD PTR _rcCont$[ebp+12]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _rcCont$[ebp+12], eax
$LN8@workHitTes:
; Line 837
	lea	ecx, DWORD PTR _rcCont$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z ; ClientRectToScreenRect
	add	esp, 8
; Line 839
	mov	ecx, DWORD PTR _pt$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _pt$[ebp]
	push	edx
	lea	eax, DWORD PTR _rcCont$[ebp]
	push	eax
	call	DWORD PTR __imp__PtInRect@12
	cmp	eax, 1
	jne	SHORT $LN11@workHitTes
; Line 841
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN1@workHitTes
; Line 843
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z ; ClientRectToScreenRect
	add	esp, 8
; Line 844
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 845
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN1@workHitTes:
; Line 847
	mov	eax, DWORD PTR _iWork$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN20@workHitTes
$LN11@workHitTes:
; Line 850
	jmp	$LN13@workHitTes
$LN12@workHitTes:
; Line 853
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T3[ebp]
$LN20@workHitTes:
; Line 854
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN24@workHitTes:
	DD	$LN7@workHitTes
	DD	$LN6@workHitTes
	DD	$LN5@workHitTes
	DD	$LN4@workHitTes
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z$0:
	lea	ecx, DWORD PTR _vCont$[ebp]
	jmp	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
__ehhandler$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z ENDP ; Gripper::workHitTest
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$2 = -104						; size = 4
$T3 = -100						; size = 4
$T4 = -96						; size = 4
$T5 = -92						; size = 4
_hWnd$ = -88						; size = 4
$T6 = -84						; size = 4
$T7 = -80						; size = 4
tv134 = -76						; size = 4
_this$ = -72						; size = 4
_vCont$ = -68						; size = 16
_iCont$8 = -52						; size = 4
_rc$9 = -48						; size = 16
_rc$10 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pt$ = 8						; size = 8
?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z PROC ; Gripper::contHitTest
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 729
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ; DockingManager::getContainerInfo
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 731
	mov	ecx, DWORD PTR _pt$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _pt$[ebp]
	push	edx
	call	DWORD PTR __imp__WindowFromPoint@8
	mov	DWORD PTR _hWnd$[ebp], eax
; Line 733
	mov	DWORD PTR _iCont$8[ebp], 0
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$2[ebp], eax
	jmp	SHORT $LN11@contHitTes
$LN10@contHitTes:
	mov	eax, DWORD PTR _iCont$8[ebp]
	add	eax, 1
	mov	DWORD PTR _iCont$8[ebp], eax
$LN11@contHitTes:
	mov	ecx, DWORD PTR _iCont$8[ebp]
	cmp	ecx, DWORD PTR _len$2[ebp]
	jae	$LN9@contHitTes
; Line 736
	mov	edx, DWORD PTR _iCont$8[ebp]
	push	edx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getCaptionWnd@DockingCont@@QAEPAUHWND__@@XZ ; DockingCont::getCaptionWnd
	cmp	DWORD PTR _hWnd$[ebp], eax
	jne	$LN8@contHitTes
; Line 738
	mov	eax, DWORD PTR _iCont$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@contHitTes
; Line 740
	mov	DWORD PTR _rc$10[ebp], 0
	xor	edx, edx
	mov	DWORD PTR _rc$10[ebp+4], edx
	mov	DWORD PTR _rc$10[ebp+8], edx
	mov	DWORD PTR _rc$10[ebp+12], edx
; Line 742
	mov	eax, DWORD PTR _iCont$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv134[ebp], ecx
	lea	edx, DWORD PTR _rc$10[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv134[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
; Line 743
	mov	ecx, DWORD PTR _rc$10[ebp+4]
	cmp	ecx, DWORD PTR _pt$[ebp+4]
	jge	SHORT $LN6@contHitTes
	mov	edx, DWORD PTR _rc$10[ebp+4]
	add	edx, 24					; 00000018H
	cmp	DWORD PTR _pt$[ebp+4], edx
	jge	SHORT $LN6@contHitTes
; Line 746
	mov	eax, DWORD PTR _iCont$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+84]
	jne	SHORT $LN5@contHitTes
; Line 748
	mov	DWORD PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN12@contHitTes
; Line 750
	jmp	SHORT $LN6@contHitTes
$LN5@contHitTes:
; Line 752
	mov	eax, DWORD PTR _iCont$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T7[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN12@contHitTes
$LN6@contHitTes:
; Line 756
	jmp	SHORT $LN8@contHitTes
$LN7@contHitTes:
; Line 758
	mov	edx, DWORD PTR _iCont$8[ebp]
	push	edx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN12@contHitTes
$LN8@contHitTes:
; Line 763
	mov	ecx, DWORD PTR _iCont$8[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ ; DockingCont::getTabWnd
	push	eax
	call	DWORD PTR __imp__IsWindowVisible@4
	test	eax, eax
	je	SHORT $LN2@contHitTes
; Line 766
	mov	DWORD PTR _rc$9[ebp], 0
	xor	edx, edx
	mov	DWORD PTR _rc$9[ebp+4], edx
	mov	DWORD PTR _rc$9[ebp+8], edx
	mov	DWORD PTR _rc$9[ebp+12], edx
; Line 768
	lea	eax, DWORD PTR _rc$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCont$8[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ ; DockingCont::getTabWnd
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
; Line 769
	mov	edx, DWORD PTR _pt$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rc$9[ebp]
	push	ecx
	call	DWORD PTR __imp__PtInRect@12
	test	eax, eax
	je	SHORT $LN2@contHitTes
; Line 771
	mov	edx, DWORD PTR _iCont$8[ebp]
	push	edx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T5[ebp]
	jmp	SHORT $LN12@contHitTes
$LN2@contHitTes:
; Line 774
	jmp	$LN10@contHitTes
$LN9@contHitTes:
; Line 777
	mov	DWORD PTR $T6[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	eax, DWORD PTR $T6[ebp]
$LN12@contHitTes:
; Line 778
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z$0:
	lea	ecx, DWORD PTR _vCont$[ebp]
	jmp	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
__ehhandler$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z ENDP ; Gripper::contHitTest
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pContHit$ = -28					; size = 4
_this$ = -24						; size = 4
_rcCorr$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_pt$ = 8						; size = 8
_rc$ = 16						; size = 4
?getMovingRect@Gripper@@IAEXUtagPOINT@@PAUtagRECT@@@Z PROC ; Gripper::getMovingRect
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 676
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 677
	mov	DWORD PTR _rcCorr$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _rcCorr$[ebp+4], eax
	mov	DWORD PTR _rcCorr$[ebp+8], eax
	mov	DWORD PTR _rcCorr$[ebp+12], eax
; Line 678
	mov	DWORD PTR _pContHit$[ebp], 0
; Line 681
	mov	ecx, DWORD PTR _pt$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _pt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z ; Gripper::contHitTest
	mov	DWORD PTR _pContHit$[ebp], eax
; Line 683
	cmp	DWORD PTR _pContHit$[ebp], 0
	je	$LN7@getMovingR
; Line 686
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContHit$[ebp]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
; Line 689
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	edx, al
	cmp	edx, 1
	jne	SHORT $LN6@getMovingR
; Line 690
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rcCorr$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _rcCorr$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _rcCorr$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _rcCorr$[ebp+12], edx
; Line 691
	jmp	SHORT $LN5@getMovingR
$LN6@getMovingR:
; Line 692
	lea	eax, DWORD PTR _rcCorr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+84]
	mov	eax, DWORD PTR [edx+28]
	call	eax
$LN5@getMovingR:
; Line 694
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z ; Gripper::ShrinkRcToSize
; Line 695
	lea	edx, DWORD PTR _rcCorr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z ; Gripper::ShrinkRcToSize
; Line 698
	mov	eax, DWORD PTR _pt$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pt$[ebp]
	push	ecx
	sub	esp, 16					; 00000010H
	mov	edx, esp
	mov	eax, DWORD PTR _rcCorr$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _rcCorr$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _rcCorr$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _rcCorr$[ebp+12]
	mov	DWORD PTR [edx+12], ecx
	mov	edx, DWORD PTR _rc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z ; Gripper::DoCalcGripperRect
; Line 700
	jmp	$LN8@getMovingR
$LN7@getMovingR:
; Line 703
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pt$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _pt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z ; Gripper::workHitTest
	mov	DWORD PTR _pContHit$[ebp], eax
; Line 706
	cmp	DWORD PTR _pContHit$[ebp], 0
	jne	$LN8@getMovingR
; Line 709
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@getMovingR
; Line 710
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 711
	jmp	SHORT $LN1@getMovingR
$LN2@getMovingR:
; Line 712
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR [edx+32]
	call	eax
$LN1@getMovingR:
; Line 713
	lea	ecx, DWORD PTR _rcCorr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR [edx+28]
	call	eax
; Line 715
	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z ; Gripper::CalcRectToScreen
; Line 716
	lea	ecx, DWORD PTR _rcCorr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z ; Gripper::CalcRectToScreen
; Line 718
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pt$[ebp]
	sub	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [eax], edx
; Line 719
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pt$[ebp+4]
	sub	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 722
	mov	ecx, DWORD PTR _pt$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _pt$[ebp]
	push	edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _rcCorr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rcCorr$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rcCorr$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rcCorr$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z ; Gripper::DoCalcGripperRect
$LN8@getMovingR:
; Line 725
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getMovingRect@Gripper@@IAEXUtagPOINT@@PAUtagRECT@@@Z ENDP ; Gripper::getMovingRect
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pt$ = 8						; size = 4
_ptPrev$ = 12						; size = 4
?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z PROC	; Gripper::getMousePoints
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 669
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 670
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [eax+100]
	mov	eax, DWORD PTR _ptPrev$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 671
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], edx
	mov	DWORD PTR [ecx+100], eax
; Line 672
	mov	esp, ebp
	pop	ebp
	ret	8
?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z ENDP	; Gripper::getMousePoints
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv145 = -96						; size = 4
_hbrushOrig$ = -92					; size = 4
tv143 = -88						; size = 4
tv80 = -84						; size = 4
_hWnd$1 = -80						; size = 4
tv157 = -76						; size = 4
_hBm$ = -72						; size = 4
_hbmOrig$ = -68						; size = 4
tv151 = -64						; size = 4
_hdcMem$ = -60						; size = 4
_this$ = -56						; size = 4
_rc$ = -52						; size = 16
_rcOld$ = -36						; size = 16
_rcNew$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_pPt$ = 8						; size = 4
?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z PROC	; Gripper::drawRectangle
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 555
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 556
	mov	DWORD PTR _hbrushOrig$[ebp], 0
; Line 557
	mov	DWORD PTR _hbmOrig$[ebp], 0
; Line 558
	mov	DWORD PTR _rc$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _rc$[ebp+4], eax
	mov	DWORD PTR _rc$[ebp+8], eax
	mov	DWORD PTR _rc$[ebp+12], eax
; Line 559
	mov	DWORD PTR _rcNew$[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _rcNew$[ebp+4], ecx
	mov	DWORD PTR _rcNew$[ebp+8], ecx
	mov	DWORD PTR _rcNew$[ebp+12], ecx
; Line 560
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 108				; 0000006cH
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _rcOld$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _rcOld$[ebp+4], ecx
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _rcOld$[ebp+8], eax
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR _rcOld$[ebp+12], ecx
; Line 565
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+184], 0
	jne	SHORT $LN13@drawRectan
; Line 567
	call	DWORD PTR __imp__GetDesktopWindow@0
	mov	DWORD PTR _hWnd$1[ebp], eax
; Line 569
	mov	eax, DWORD PTR _hWnd$1[ebp]
	push	eax
	call	DWORD PTR __imp__LockWindowUpdate@4
	test	eax, eax
	je	SHORT $LN16@drawRectan
	mov	DWORD PTR tv80[ebp], 1027		; 00000403H
	jmp	SHORT $LN17@drawRectan
$LN16@drawRectan:
	mov	DWORD PTR tv80[ebp], 3
$LN17@drawRectan:
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hWnd$1[ebp]
	push	edx
	call	DWORD PTR __imp__GetDCEx@12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+184], eax
$LN13@drawRectan:
; Line 576
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+188], 0
	jne	SHORT $LN12@drawRectan
; Line 577
	push	OFFSET _DotPattern
	push	1
	push	1
	push	8
	push	8
	call	DWORD PTR __imp__CreateBitmap@20
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+188], eax
$LN12@drawRectan:
; Line 578
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+192], 0
	jne	SHORT $LN11@drawRectan
; Line 579
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	push	ecx
	call	DWORD PTR __imp__CreatePatternBrush@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+192], eax
$LN11@drawRectan:
; Line 581
	cmp	DWORD PTR _pPt$[ebp], 0
	je	$LN10@drawRectan
; Line 587
	lea	eax, DWORD PTR _rcNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPt$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMovingRect@Gripper@@IAEXUtagPOINT@@PAUtagRECT@@@Z ; Gripper::getMovingRect
; Line 588
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _rcNew$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _rcNew$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _rcNew$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _rcNew$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 594
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 0
	je	$LN9@drawRectan
; Line 604
	mov	edx, DWORD PTR _rcOld$[ebp]
	cmp	edx, DWORD PTR _rcNew$[ebp]
	jne	SHORT $LN8@drawRectan
	mov	eax, DWORD PTR _rcOld$[ebp+8]
	cmp	eax, DWORD PTR _rcNew$[ebp+8]
	jne	SHORT $LN8@drawRectan
	mov	ecx, DWORD PTR _rcOld$[ebp+4]
	cmp	ecx, DWORD PTR _rcNew$[ebp+4]
	jne	SHORT $LN8@drawRectan
	mov	edx, DWORD PTR _rcOld$[ebp+12]
	cmp	edx, DWORD PTR _rcNew$[ebp+12]
	jne	SHORT $LN8@drawRectan
; Line 605
	jmp	$LN14@drawRectan
$LN8@drawRectan:
; Line 607
	mov	eax, DWORD PTR _rcOld$[ebp]
	cmp	eax, DWORD PTR _rcNew$[ebp]
	jge	SHORT $LN18@drawRectan
	mov	ecx, DWORD PTR _rcOld$[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	jmp	SHORT $LN19@drawRectan
$LN18@drawRectan:
	mov	edx, DWORD PTR _rcNew$[ebp]
	mov	DWORD PTR tv143[ebp], edx
$LN19@drawRectan:
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR _rc$[ebp], eax
; Line 608
	mov	ecx, DWORD PTR _rcOld$[ebp+4]
	cmp	ecx, DWORD PTR _rcNew$[ebp+4]
	jge	SHORT $LN20@drawRectan
	mov	edx, DWORD PTR _rcOld$[ebp+4]
	mov	DWORD PTR tv145[ebp], edx
	jmp	SHORT $LN21@drawRectan
$LN20@drawRectan:
	mov	eax, DWORD PTR _rcNew$[ebp+4]
	mov	DWORD PTR tv145[ebp], eax
$LN21@drawRectan:
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR _rc$[ebp+4], ecx
; Line 609
	mov	edx, DWORD PTR _rcOld$[ebp]
	add	edx, DWORD PTR _rcOld$[ebp+8]
	mov	eax, DWORD PTR _rcNew$[ebp]
	add	eax, DWORD PTR _rcNew$[ebp+8]
	cmp	edx, eax
	jle	SHORT $LN22@drawRectan
	mov	ecx, DWORD PTR _rcOld$[ebp]
	add	ecx, DWORD PTR _rcOld$[ebp+8]
	mov	DWORD PTR tv151[ebp], ecx
	jmp	SHORT $LN23@drawRectan
$LN22@drawRectan:
	mov	edx, DWORD PTR _rcNew$[ebp]
	add	edx, DWORD PTR _rcNew$[ebp+8]
	mov	DWORD PTR tv151[ebp], edx
$LN23@drawRectan:
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR _rc$[ebp+8], eax
; Line 610
	mov	ecx, DWORD PTR _rcOld$[ebp+4]
	add	ecx, DWORD PTR _rcOld$[ebp+12]
	mov	edx, DWORD PTR _rcNew$[ebp+4]
	add	edx, DWORD PTR _rcNew$[ebp+12]
	cmp	ecx, edx
	jle	SHORT $LN24@drawRectan
	mov	eax, DWORD PTR _rcOld$[ebp+4]
	add	eax, DWORD PTR _rcOld$[ebp+12]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN25@drawRectan
$LN24@drawRectan:
	mov	ecx, DWORD PTR _rcNew$[ebp+4]
	add	ecx, DWORD PTR _rcNew$[ebp+12]
	mov	DWORD PTR tv157[ebp], ecx
$LN25@drawRectan:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR _rc$[ebp+12], edx
; Line 611
	mov	eax, DWORD PTR _rc$[ebp+8]
	sub	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR _rc$[ebp+8], eax
; Line 612
	mov	ecx, DWORD PTR _rc$[ebp+12]
	sub	ecx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR _rc$[ebp+12], ecx
	jmp	SHORT $LN7@drawRectan
$LN9@drawRectan:
; Line 614
	mov	edx, DWORD PTR _rcNew$[ebp]
	mov	DWORD PTR _rc$[ebp], edx
	mov	eax, DWORD PTR _rcNew$[ebp+4]
	mov	DWORD PTR _rc$[ebp+4], eax
	mov	ecx, DWORD PTR _rcNew$[ebp+8]
	mov	DWORD PTR _rc$[ebp+8], ecx
	mov	edx, DWORD PTR _rcNew$[ebp+12]
	mov	DWORD PTR _rc$[ebp+12], edx
$LN7@drawRectan:
	jmp	SHORT $LN6@drawRectan
$LN10@drawRectan:
; Line 616
	mov	eax, DWORD PTR _rcOld$[ebp]
	mov	DWORD PTR _rc$[ebp], eax
	mov	ecx, DWORD PTR _rcOld$[ebp+4]
	mov	DWORD PTR _rc$[ebp+4], ecx
	mov	edx, DWORD PTR _rcOld$[ebp+8]
	mov	DWORD PTR _rc$[ebp+8], edx
	mov	eax, DWORD PTR _rcOld$[ebp+12]
	mov	DWORD PTR _rc$[ebp+12], eax
$LN6@drawRectan:
; Line 622
	mov	ecx, DWORD PTR _rcOld$[ebp]
	sub	ecx, DWORD PTR _rc$[ebp]
	mov	DWORD PTR _rcOld$[ebp], ecx
; Line 623
	mov	edx, DWORD PTR _rcOld$[ebp+4]
	sub	edx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR _rcOld$[ebp+4], edx
; Line 624
	mov	eax, DWORD PTR _rcNew$[ebp]
	sub	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR _rcNew$[ebp], eax
; Line 625
	mov	ecx, DWORD PTR _rcNew$[ebp+4]
	sub	ecx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR _rcNew$[ebp+4], ecx
; Line 627
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	DWORD PTR __imp__CreateCompatibleDC@4
	mov	DWORD PTR _hdcMem$[ebp], eax
; Line 628
	mov	ecx, DWORD PTR _rc$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	DWORD PTR __imp__CreateCompatibleBitmap@12
	mov	DWORD PTR _hBm$[ebp], eax
; Line 629
	mov	edx, DWORD PTR _hBm$[ebp]
	push	edx
	mov	eax, DWORD PTR _hdcMem$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _hbrushOrig$[ebp], eax
; Line 631
	push	0
	mov	ecx, DWORD PTR _rc$[ebp+4]
	and	ecx, -2147483641			; 80000007H
	jns	SHORT $LN26@drawRectan
	dec	ecx
	or	ecx, -8					; fffffff8H
	inc	ecx
$LN26@drawRectan:
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	and	edx, -2147483641			; 80000007H
	jns	SHORT $LN27@drawRectan
	dec	edx
	or	edx, -8					; fffffff8H
	inc	edx
$LN27@drawRectan:
	push	edx
	mov	eax, DWORD PTR _hdcMem$[ebp]
	push	eax
	call	DWORD PTR __imp__SetBrushOrgEx@16
; Line 632
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	mov	eax, DWORD PTR _hdcMem$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _hbmOrig$[ebp], eax
; Line 634
	push	13369376				; 00cc0020H
	mov	ecx, DWORD PTR _rc$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp+12]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp+8]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _hdcMem$[ebp]
	push	ecx
	call	DWORD PTR __imp__BitBlt@36
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+104], 0
	je	SHORT $LN5@drawRectan
; Line 637
	push	5898313					; 005a0049H
	mov	eax, DWORD PTR _rcOld$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _rcOld$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _rcOld$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rcOld$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdcMem$[ebp]
	push	ecx
	call	DWORD PTR __imp__PatBlt@24
; Line 638
	push	5898313					; 005a0049H
	mov	edx, DWORD PTR _rcOld$[ebp+12]
	sub	edx, 6
	push	edx
	mov	eax, DWORD PTR _rcOld$[ebp+8]
	sub	eax, 6
	push	eax
	mov	ecx, DWORD PTR _rcOld$[ebp+4]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _rcOld$[ebp]
	add	edx, 3
	push	edx
	mov	eax, DWORD PTR _hdcMem$[ebp]
	push	eax
	call	DWORD PTR __imp__PatBlt@24
$LN5@drawRectan:
; Line 640
	cmp	DWORD PTR _pPt$[ebp], 0
	je	SHORT $LN4@drawRectan
; Line 642
	push	5898313					; 005a0049H
	mov	ecx, DWORD PTR _rcNew$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _rcNew$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _rcNew$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rcNew$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hdcMem$[ebp]
	push	edx
	call	DWORD PTR __imp__PatBlt@24
; Line 643
	push	5898313					; 005a0049H
	mov	eax, DWORD PTR _rcNew$[ebp+12]
	sub	eax, 6
	push	eax
	mov	ecx, DWORD PTR _rcNew$[ebp+8]
	sub	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _rcNew$[ebp+4]
	add	edx, 3
	push	edx
	mov	eax, DWORD PTR _rcNew$[ebp]
	add	eax, 3
	push	eax
	mov	ecx, DWORD PTR _hdcMem$[ebp]
	push	ecx
	call	DWORD PTR __imp__PatBlt@24
$LN4@drawRectan:
; Line 645
	push	13369376				; 00cc0020H
	push	0
	push	0
	mov	edx, DWORD PTR _hdcMem$[ebp]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _rc$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	DWORD PTR __imp__BitBlt@36
; Line 647
	mov	eax, DWORD PTR _hbrushOrig$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdcMem$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
; Line 648
	mov	edx, DWORD PTR _hbmOrig$[ebp]
	push	edx
	mov	eax, DWORD PTR _hdcMem$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
; Line 649
	mov	ecx, DWORD PTR _hBm$[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
; Line 650
	mov	edx, DWORD PTR _hdcMem$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteDC@4
; Line 652
	cmp	DWORD PTR _pPt$[ebp], 0
	jne	SHORT $LN3@drawRectan
; Line 655
	push	0
	call	DWORD PTR __imp__LockWindowUpdate@4
; Line 657
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 658
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	SHORT $LN2@drawRectan
; Line 660
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	push	0
	call	DWORD PTR __imp__ReleaseDC@8
; Line 661
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+184], 0
$LN2@drawRectan:
; Line 663
	jmp	SHORT $LN14@drawRectan
$LN3@drawRectan:
; Line 664
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+104], 1
$LN14@drawRectan:
; Line 665
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z ENDP	; Gripper::drawRectangle
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_vCont$ = -104						; size = 16
_iSel$2 = -88						; size = 4
_len$3 = -84						; size = 4
tv220 = -80						; size = 4
_iLastItem$4 = -76					; size = 4
_inTab$ = -72						; size = 4
_iCont$5 = -68						; size = 4
_iItem$ = -64						; size = 4
_hTabOld$ = -60						; size = 4
_iItemOld$ = -56					; size = 4
_hTab$ = -52						; size = 4
_this$ = -48						; size = 4
_info$6 = -44						; size = 12
_rc$7 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pt$ = 8						; size = 8
?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z PROC	; Gripper::doTabReordering
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 411
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ; DockingManager::getContainerInfo
	push	eax
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 413
	mov	DWORD PTR _inTab$[ebp], 0
; Line 414
	mov	DWORD PTR _hTab$[ebp], 0
; Line 415
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR _hTabOld$[ebp], edx
; Line 416
	mov	DWORD PTR _iItem$[ebp], -1
; Line 417
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	DWORD PTR _iItemOld$[ebp], ecx
; Line 420
	mov	DWORD PTR _iCont$5[ebp], 0
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$3[ebp], eax
	jmp	SHORT $LN22@doTabReord
$LN21@doTabReord:
	mov	edx, DWORD PTR _iCont$5[ebp]
	add	edx, 1
	mov	DWORD PTR _iCont$5[ebp], edx
$LN22@doTabReord:
	mov	eax, DWORD PTR _iCont$5[ebp]
	cmp	eax, DWORD PTR _len$3[ebp]
	jae	$LN20@doTabReord
; Line 422
	mov	ecx, DWORD PTR _iCont$5[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ ; DockingCont::getTabWnd
	mov	DWORD PTR _hTab$[ebp], eax
; Line 425
	mov	edx, DWORD PTR _hTab$[ebp]
	push	edx
	call	DWORD PTR __imp__IsWindowVisible@4
	cmp	eax, 1
	jne	$LN19@doTabReord
; Line 427
	mov	DWORD PTR _rc$7[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _rc$7[ebp+4], eax
	mov	DWORD PTR _rc$7[ebp+8], eax
	mov	DWORD PTR _rc$7[ebp+12], eax
; Line 429
	lea	ecx, DWORD PTR _rc$7[ebp]
	push	ecx
	mov	edx, DWORD PTR _hTab$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8
; Line 432
	mov	eax, DWORD PTR _pt$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pt$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rc$7[ebp]
	push	edx
	call	DWORD PTR __imp__PtInRect@12
	cmp	eax, 1
	jne	$LN19@doTabReord
; Line 434
	mov	DWORD PTR _info$6[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _info$6[ebp+4], eax
	mov	DWORD PTR _info$6[ebp+8], eax
; Line 436
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+124], 0
	jne	SHORT $LN17@doTabReord
; Line 438
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initTabInformation@Gripper@@IAEXXZ	; Gripper::initTabInformation
; Line 439
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	DWORD PTR _hTabOld$[ebp], eax
; Line 440
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	DWORD PTR _iItemOld$[ebp], edx
$LN17@doTabReord:
; Line 444
	mov	eax, DWORD PTR _pt$[ebp]
	mov	DWORD PTR _info$6[ebp], eax
	mov	ecx, DWORD PTR _pt$[ebp+4]
	mov	DWORD PTR _info$6[ebp+4], ecx
; Line 445
	lea	edx, DWORD PTR _info$6[ebp]
	push	edx
	mov	eax, DWORD PTR _hTab$[ebp]
	push	eax
	call	DWORD PTR __imp__ScreenToClient@8
; Line 446
	lea	ecx, DWORD PTR _info$6[ebp]
	push	ecx
	push	0
	push	4877					; 0000130dH
	mov	edx, DWORD PTR _hTab$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iItem$[ebp], eax
; Line 448
	cmp	DWORD PTR _iItem$[ebp], -1
	je	SHORT $LN16@doTabReord
; Line 451
	lea	eax, DWORD PTR _rc$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _iItem$[ebp]
	push	ecx
	push	4874					; 0000130aH
	mov	edx, DWORD PTR _hTab$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 452
	lea	eax, DWORD PTR _rc$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _hTab$[ebp]
	push	ecx
	call	?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z ; ClientRectToScreenRect
	add	esp, 8
; Line 454
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+148]
	sub	ecx, DWORD PTR [eax+140]
	add	ecx, DWORD PTR _rc$7[ebp]
	cmp	ecx, DWORD PTR _pt$[ebp]
	jge	SHORT $LN15@doTabReord
; Line 456
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	jmp	$LN23@doTabReord
$LN15@doTabReord:
; Line 459
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _iItem$[ebp]
	mov	DWORD PTR [edx+136], eax
	jmp	SHORT $LN14@doTabReord
$LN16@doTabReord:
; Line 461
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+124], 0
	je	SHORT $LN14@doTabReord
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _hTab$[ebp]
	cmp	eax, DWORD PTR [edx+124]
	jne	SHORT $LN12@doTabReord
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+136], -1
	jne	SHORT $LN14@doTabReord
$LN12@doTabReord:
; Line 464
	push	0
	push	0
	push	4868					; 00001304H
	mov	edx, DWORD PTR _hTab$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	sub	eax, 1
	mov	DWORD PTR _iLastItem$4[ebp], eax
; Line 466
	lea	eax, DWORD PTR _rc$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _iLastItem$4[ebp]
	push	ecx
	push	4874					; 0000130aH
	mov	edx, DWORD PTR _hTab$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 467
	mov	eax, DWORD PTR _rc$7[ebp]
	add	eax, DWORD PTR _rc$7[ebp+8]
	cmp	eax, DWORD PTR _pt$[ebp]
	jge	SHORT $LN14@doTabReord
; Line 469
	mov	ecx, DWORD PTR _iLastItem$4[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+136], ecx
$LN14@doTabReord:
; Line 473
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hTab$[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 474
	mov	DWORD PTR _inTab$[ebp], 1
; Line 475
	jmp	SHORT $LN20@doTabReord
$LN19@doTabReord:
; Line 478
	jmp	$LN21@doTabReord
$LN20@doTabReord:
; Line 481
	cmp	DWORD PTR _inTab$[ebp], 1
	jne	SHORT $LN10@doTabReord
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _iItemOld$[ebp]
	cmp	eax, DWORD PTR [edx+136]
	je	SHORT $LN10@doTabReord
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+124]
	cmp	eax, DWORD PTR [edx+128]
	jne	SHORT $LN9@doTabReord
; Line 486
	push	0
	push	0
	push	4875					; 0000130bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iSel$2[ebp], eax
; Line 487
	push	0
	mov	eax, DWORD PTR _iSel$2[ebp]
	push	eax
	push	4872					; 00001308H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN8@doTabReord
$LN9@doTabReord:
; Line 489
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	cmp	ecx, DWORD PTR _hTabOld$[ebp]
	jne	SHORT $LN8@doTabReord
; Line 492
	push	0
	mov	edx, DWORD PTR _iItemOld$[ebp]
	push	edx
	push	4872					; 00001308H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN8@doTabReord:
; Line 494
	jmp	SHORT $LN6@doTabReord
$LN10@doTabReord:
; Line 495
	cmp	DWORD PTR _inTab$[ebp], 0
	jne	SHORT $LN6@doTabReord
; Line 497
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _hTabOld$[ebp]
	cmp	eax, DWORD PTR [edx+128]
	je	SHORT $LN4@doTabReord
; Line 499
	push	0
	mov	ecx, DWORD PTR _iItemOld$[ebp]
	push	ecx
	push	4872					; 00001308H
	mov	edx, DWORD PTR _hTabOld$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN4@doTabReord:
; Line 501
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], -1
$LN6@doTabReord:
; Line 505
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+124], 0
	je	SHORT $LN3@doTabReord
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	cmp	eax, DWORD PTR _hTabOld$[ebp]
	jne	SHORT $LN2@doTabReord
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	cmp	edx, DWORD PTR _iItemOld$[ebp]
	je	SHORT $LN3@doTabReord
$LN2@doTabReord:
; Line 507
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+124]
	cmp	edx, DWORD PTR [ecx+128]
	jne	SHORT $LN25@doTabReord
	mov	DWORD PTR tv220[ebp], 1
	jmp	SHORT $LN26@doTabReord
$LN25@doTabReord:
	mov	DWORD PTR tv220[ebp], 0
$LN26@doTabReord:
	mov	eax, DWORD PTR tv220[ebp]
	or	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+156], eax
; Line 508
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 156				; 0000009cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	push	4926					; 0000133eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN3@doTabReord:
; Line 512
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+124]
	cmp	eax, DWORD PTR [edx+128]
	jne	SHORT $LN1@doTabReord
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+136], -1
	je	SHORT $LN1@doTabReord
; Line 514
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	push	4876					; 0000130cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN1@doTabReord:
; Line 524
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
; Line 525
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vCont$[ebp]
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
$LN23@doTabReord:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z$0:
	lea	ecx, DWORD PTR _vCont$[ebp]
	jmp	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
__ehhandler$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z ENDP	; Gripper::doTabReordering
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ptBuf$ = -64						; size = 8
_pt$ = -56						; size = 8
_pContMove$ = -48					; size = 4
_pDockCont$ = -44					; size = 4
_this$ = -40						; size = 4
_rcCorr$ = -36						; size = 16
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?onButtonUp@Gripper@@IAEXXZ PROC			; Gripper::onButtonUp
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	DWORD PTR _pt$[ebp], 0
	mov	DWORD PTR _pt$[ebp+4], 0
; Line 328
	mov	DWORD PTR _ptBuf$[ebp], 0
	mov	DWORD PTR _ptBuf$[ebp+4], 0
; Line 329
	mov	DWORD PTR _rc$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _rc$[ebp+4], eax
	mov	DWORD PTR _rc$[ebp+8], eax
	mov	DWORD PTR _rc$[ebp+12], eax
; Line 330
	mov	DWORD PTR _rcCorr$[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _rcCorr$[ebp+4], ecx
	mov	DWORD PTR _rcCorr$[ebp+8], ecx
	mov	DWORD PTR _rcCorr$[ebp+12], ecx
; Line 331
	mov	DWORD PTR _pContMove$[ebp], 0
; Line 333
	lea	edx, DWORD PTR _pt$[ebp]
	push	edx
	call	DWORD PTR __imp__GetCursorPos@4
; Line 334
	lea	eax, DWORD PTR _ptBuf$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z ; Gripper::getMousePoints
; Line 337
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+104], 0
	jne	SHORT $LN13@onButtonUp
; Line 338
	jmp	$LN14@onButtonUp
$LN13@onButtonUp:
; Line 341
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z ; Gripper::drawRectangle
; Line 344
	mov	eax, DWORD PTR _pt$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z ; Gripper::contHitTest
	mov	DWORD PTR _pDockCont$[ebp], eax
; Line 346
	cmp	DWORD PTR _pDockCont$[ebp], 0
	jne	SHORT $LN12@onButtonUp
; Line 348
	push	0
	mov	edx, DWORD PTR _pt$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z ; Gripper::workHitTest
	mov	DWORD PTR _pDockCont$[ebp], eax
$LN12@onButtonUp:
; Line 352
	cmp	DWORD PTR _pDockCont$[ebp], 0
	jne	$LN11@onButtonUp
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	add	eax, 24					; 00000018H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _rc$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _rc$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _rc$[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _rc$[ebp+12], eax
; Line 356
	lea	ecx, DWORD PTR _rcCorr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR [edx+28]
	call	eax
; Line 358
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z ; Gripper::CalcRectToScreen
; Line 359
	lea	ecx, DWORD PTR _rcCorr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z ; Gripper::CalcRectToScreen
; Line 361
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pt$[ebp]
	sub	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR _rc$[ebp], edx
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pt$[ebp+4]
	sub	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _rc$[ebp+4], ecx
; Line 365
	mov	edx, DWORD PTR _pt$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pt$[ebp]
	push	eax
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR _rcCorr$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _rcCorr$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _rcCorr$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _rcCorr$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	lea	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z ; Gripper::DoCalcGripperRect
; Line 368
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+132], 1
	jne	SHORT $LN10@onButtonUp
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@onButtonUp
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@onButtonUp
	push	0
	push	0
	push	4868					; 00001304H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jle	SHORT $LN9@onButtonUp
$LN8@onButtonUp:
; Line 374
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	1
	push	20483					; 00005003H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z ; DockingManager::toggleActiveTb
	mov	DWORD PTR _pContMove$[ebp], eax
$LN9@onButtonUp:
; Line 376
	jmp	SHORT $LN7@onButtonUp
$LN10@onButtonUp:
; Line 377
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@onButtonUp
; Line 380
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	20483					; 00005003H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z ; DockingManager::toggleVisTb
	mov	DWORD PTR _pContMove$[ebp], eax
$LN7@onButtonUp:
; Line 384
	cmp	DWORD PTR _pContMove$[ebp], 0
	jne	SHORT $LN5@onButtonUp
; Line 386
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR _pContMove$[ebp], edx
$LN5@onButtonUp:
; Line 390
	push	1
	mov	eax, DWORD PTR _rc$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _rc$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContMove$[ebp]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 391
	push	0
	push	0
	push	5
	mov	ecx, DWORD PTR _pContMove$[ebp]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN14@onButtonUp
$LN11@onButtonUp:
; Line 393
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	cmp	edx, DWORD PTR _pDockCont$[ebp]
	je	SHORT $LN14@onButtonUp
; Line 396
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 1
	jne	SHORT $LN2@onButtonUp
	push	0
	push	0
	push	4868					; 00001304H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	je	SHORT $LN2@onButtonUp
; Line 399
	mov	eax, DWORD PTR _pDockCont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?toggleActiveTb@DockingManager@@QAEXPAVDockingCont@@0@Z ; DockingManager::toggleActiveTb
; Line 401
	jmp	SHORT $LN14@onButtonUp
$LN2@onButtonUp:
; Line 404
	mov	ecx, DWORD PTR _pDockCont$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z ; DockingManager::toggleVisTb
$LN14@onButtonUp:
; Line 407
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?onButtonUp@Gripper@@IAEXXZ ENDP			; Gripper::onButtonUp
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ptBuf$ = -20						; size = 8
_pt$ = -12						; size = 8
_this$ = -4						; size = 4
?onMove@Gripper@@IAEXXZ PROC				; Gripper::onMove
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 309
	mov	DWORD PTR _pt$[ebp], 0
	mov	DWORD PTR _pt$[ebp+4], 0
; Line 310
	mov	DWORD PTR _ptBuf$[ebp], 0
	mov	DWORD PTR _ptBuf$[ebp+4], 0
; Line 312
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
; Line 313
	lea	ecx, DWORD PTR _ptBuf$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z ; Gripper::getMousePoints
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 1
	jne	SHORT $LN1@onMove
; Line 318
	mov	ecx, DWORD PTR _pt$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _pt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z ; Gripper::doTabReordering
$LN1@onMove:
; Line 321
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z ; Gripper::drawRectangle
; Line 322
	mov	esp, ebp
	pop	ebp
	ret	0
?onMove@Gripper@@IAEXXZ ENDP				; Gripper::onMove
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ptBuf$1 = -36						; size = 8
_pt$2 = -28						; size = 8
tv134 = -20						; size = 4
$T3 = -16						; size = 4
$T4 = -12						; size = 4
tv64 = -8						; size = 4
_this$ = -4						; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?runProc@Gripper@@IAEJIIJ@Z PROC			; Gripper::runProc
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 162		; 000000a2H
	ja	SHORT $LN14@runProc
	cmp	DWORD PTR tv64[ebp], 162		; 000000a2H
	je	SHORT $LN5@runProc
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN7@runProc
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN2@runProc
	cmp	DWORD PTR tv64[ebp], 160		; 000000a0H
	je	SHORT $LN6@runProc
	jmp	$LN8@runProc
$LN14@runProc:
	cmp	DWORD PTR tv64[ebp], 512		; 00000200H
	je	SHORT $LN6@runProc
	cmp	DWORD PTR tv64[ebp], 514		; 00000202H
	je	SHORT $LN5@runProc
	cmp	DWORD PTR tv64[ebp], 20492		; 0000500cH
	je	SHORT $LN3@runProc
	jmp	$LN8@runProc
$LN7@runProc:
; Line 195
	mov	ecx, DWORD PTR _this$[ebp]
	call	?create@Gripper@@IAEXXZ			; Gripper::create
; Line 196
	jmp	$LN8@runProc
$LN6@runProc:
; Line 201
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onMove@Gripper@@IAEXXZ			; Gripper::onMove
; Line 202
	mov	eax, 1
	jmp	$LN10@runProc
$LN5@runProc:
; Line 208
	cmp	DWORD PTR _hookMouse, 0
	je	SHORT $LN4@runProc
; Line 210
	mov	ecx, DWORD PTR _hookMouse
	push	ecx
	call	DWORD PTR __imp__UnhookWindowsHookEx@4
; Line 211
	mov	edx, DWORD PTR _hookKeyboard
	push	edx
	call	DWORD PTR __imp__UnhookWindowsHookEx@4
; Line 212
	mov	DWORD PTR _hookMouse, 0
; Line 213
	mov	DWORD PTR _hookKeyboard, 0
$LN4@runProc:
; Line 215
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onButtonUp@Gripper@@IAEXXZ		; Gripper::onButtonUp
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 217
	mov	eax, 1
	jmp	$LN10@runProc
$LN3@runProc:
; Line 221
	mov	DWORD PTR _pt$2[ebp], 0
	mov	DWORD PTR _pt$2[ebp+4], 0
; Line 222
	mov	DWORD PTR _ptBuf$1[ebp], 0
	mov	DWORD PTR _ptBuf$1[ebp+4], 0
; Line 224
	lea	edx, DWORD PTR _pt$2[ebp]
	push	edx
	call	DWORD PTR __imp__GetCursorPos@4
; Line 225
	lea	eax, DWORD PTR _ptBuf$1[ebp]
	push	eax
	lea	ecx, DWORD PTR _pt$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z ; Gripper::getMousePoints
; Line 228
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z ; Gripper::drawRectangle
; Line 231
	mov	edx, DWORD PTR _hookMouse
	push	edx
	call	DWORD PTR __imp__UnhookWindowsHookEx@4
; Line 232
	mov	eax, DWORD PTR _hookKeyboard
	push	eax
	call	DWORD PTR __imp__UnhookWindowsHookEx@4
; Line 234
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 235
	xor	eax, eax
	jmp	SHORT $LN10@runProc
$LN2@runProc:
; Line 239
	push	0
	push	0
	push	0
	push	0
	push	4
	call	DWORD PTR __imp__mouse_event@20
; Line 240
	push	3
	push	0
	push	0
	push	0
	push	0
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
; Line 241
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	?focusClient@DockingCont@@QAEXXZ	; DockingCont::focusClient
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN12@runProc
	push	1
	mov	ecx, DWORD PTR $T4[ebp]
	call	??_GGripper@@QAEPAXI@Z
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN8@runProc
$LN12@runProc:
	mov	DWORD PTR tv134[ebp], 0
$LN8@runProc:
; Line 249
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__DefWindowProcW@16
$LN10@runProc:
; Line 250
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?runProc@Gripper@@IAEJIIJ@Z ENDP			; Gripper::runProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = -8						; size = 4
_pDlgMoving$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?staticWinProc@Gripper@@KGJPAUHWND__@@IIJ@Z PROC	; Gripper::staticWinProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 172
	mov	DWORD PTR _pDlgMoving$[ebp], 0
; Line 173
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 129		; 00000081H
	je	SHORT $LN3@staticWinP
	jmp	SHORT $LN2@staticWinP
$LN3@staticWinP:
; Line 176
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pDlgMoving$[ebp], edx
; Line 177
	mov	eax, DWORD PTR _pDlgMoving$[ebp]
	mov	ecx, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 178
	mov	edx, DWORD PTR _pDlgMoving$[ebp]
	push	edx
	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongW@12
; Line 179
	mov	eax, 1
	jmp	SHORT $LN6@staticWinP
$LN2@staticWinP:
; Line 182
	push	-21					; ffffffebH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _pDlgMoving$[ebp], eax
; Line 183
	cmp	DWORD PTR _pDlgMoving$[ebp], 0
	jne	SHORT $LN1@staticWinP
; Line 184
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN6@staticWinP
$LN1@staticWinP:
; Line 185
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pDlgMoving$[ebp]
	call	?runProc@Gripper@@IAEJIIJ@Z		; Gripper::runProc
$LN6@staticWinP:
; Line 187
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?staticWinProc@Gripper@@KGJPAUHWND__@@IIJ@Z ENDP	; Gripper::staticWinProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dwError$1 = -556					; size = 4
_dwError$2 = -552					; size = 4
_pt$ = -548						; size = 8
_ver$ = -540						; size = 4
_this$ = -536						; size = 4
_rc$ = -532						; size = 16
_str$3 = -516						; size = 256
_str$4 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?create@Gripper@@IAEXXZ PROC				; Gripper::create
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 556				; 0000022cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 255
	mov	DWORD PTR _rc$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _rc$[ebp+4], eax
	mov	DWORD PTR _rc$[ebp+8], eax
	mov	DWORD PTR _rc$[ebp+12], eax
; Line 256
	mov	DWORD PTR _pt$[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _pt$[ebp+4], ecx
; Line 259
	push	3
	push	0
	push	0
	push	0
	push	0
	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SetCapture@4
; Line 261
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	ecx, eax
	call	?getWinVersion@NppParameters@@QAE?AW4winVer@@XZ ; NppParameters::getWinVersion
	mov	DWORD PTR _ver$[ebp], eax
; Line 262
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET ?hookProcMouse@@YGJHIJ@Z		; hookProcMouse
	push	14					; 0000000eH
	call	DWORD PTR __imp__SetWindowsHookExW@16
	mov	DWORD PTR _hookMouse, eax
; Line 264
	cmp	DWORD PTR _hookMouse, 0
	jne	SHORT $LN5@create
; Line 266
	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _dwError$1[ebp], eax
; Line 268
	mov	ecx, DWORD PTR _dwError$1[ebp]
	push	ecx
	push	OFFSET $SG126036
	lea	edx, DWORD PTR _str$3[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
; Line 269
	push	16					; 00000010H
	push	OFFSET $SG126037
	lea	eax, DWORD PTR _str$3[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
$LN5@create:
; Line 272
	cmp	DWORD PTR _ver$[ebp], 0
	je	SHORT $LN4@create
	cmp	DWORD PTR _ver$[ebp], 10		; 0000000aH
	jge	SHORT $LN4@create
; Line 274
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET ?hookProcKeyboard@@YGJHIJ@Z	; hookProcKeyboard
	push	13					; 0000000dH
	call	DWORD PTR __imp__SetWindowsHookExW@16
	mov	DWORD PTR _hookKeyboard, eax
; Line 275
	cmp	DWORD PTR _hookKeyboard, 0
	jne	SHORT $LN4@create
; Line 277
	call	DWORD PTR __imp__GetLastError@0
	mov	DWORD PTR _dwError$2[ebp], eax
; Line 279
	mov	eax, DWORD PTR _dwError$2[ebp]
	push	eax
	push	OFFSET $SG126075
	lea	ecx, DWORD PTR _str$4[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
; Line 280
	push	16					; 00000010H
	push	OFFSET $SG126076
	lea	edx, DWORD PTR _str$4[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__MessageBoxW@16
$LN4@create:
; Line 287
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
; Line 290
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initTabInformation@Gripper@@IAEXXZ	; Gripper::initTabInformation
; Line 292
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	edx, al
	cmp	edx, 1
	jne	SHORT $LN2@create
; Line 294
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
; Line 296
	jmp	SHORT $LN1@create
$LN2@create:
; Line 298
	lea	edx, DWORD PTR _rc$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+84]
	mov	edx, DWORD PTR [eax+28]
	call	edx
; Line 299
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__ScreenToClient@8
$LN1@create:
; Line 302
	mov	edx, DWORD PTR _pt$[ebp]
	sub	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], edx
; Line 303
	mov	ecx, DWORD PTR _pt$[ebp+4]
	sub	ecx, DWORD PTR _rc$[ebp+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], ecx
; Line 304
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?create@Gripper@@IAEXXZ ENDP				; Gripper::create
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Gripper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Gripper@@QAE@XZ PROC					; Gripper::~Gripper, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN3@Gripper
; Line 79
	push	0
	call	DWORD PTR __imp__LockWindowUpdate@4
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	push	0
	call	DWORD PTR __imp__ReleaseDC@8
$LN3@Gripper:
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+188], 0
	je	SHORT $LN2@Gripper
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	call	DWORD PTR __imp__DeleteObject@4
$LN2@Gripper:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+192], 0
	je	SHORT $LN4@Gripper
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	push	edx
	call	DWORD PTR __imp__DeleteObject@4
$LN4@Gripper:
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??1Gripper@@QAE@XZ ENDP					; Gripper::~Gripper
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_clz$1 = -68						; size = 40
$T2 = -28						; size = 12
$T3 = -16						; size = 12
_this$ = -4						; size = 4
_pCont$ = 8						; size = 4
_pDockMgr$ = 12						; size = 4
?startGrip@Gripper@@QAEXPAVDockingCont@@PAVDockingManager@@@Z PROC ; Gripper::startGrip
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pDockMgr$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 124
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pCont$[ebp]
	mov	DWORD PTR [edx+84], eax
; Line 126
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	call	?getDockInfo@DockingManager@@QAEXPAUtDockMgr@@@Z ; DockingManager::getDockInfo
; Line 128
	cmp	DWORD PTR ?_isRegistered@Gripper@@0HA, 0 ; Gripper::_isRegistered
	jne	$LN3@startGrip
; Line 132
	mov	DWORD PTR _clz$1[ebp], 0
; Line 133
	mov	DWORD PTR _clz$1[ebp+4], OFFSET ?staticWinProc@Gripper@@KGJPAUHWND__@@IIJ@Z ; Gripper::staticWinProc
; Line 134
	mov	DWORD PTR _clz$1[ebp+8], 0
; Line 135
	mov	DWORD PTR _clz$1[ebp+12], 0
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _clz$1[ebp+16], ecx
; Line 137
	mov	DWORD PTR _clz$1[ebp+20], 0
; Line 138
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	mov	DWORD PTR _clz$1[ebp+24], eax
; Line 140
	mov	DWORD PTR _clz$1[ebp+28], 0
; Line 141
	mov	DWORD PTR _clz$1[ebp+32], 0
; Line 142
	mov	DWORD PTR _clz$1[ebp+36], OFFSET $SG125965
; Line 144
	lea	edx, DWORD PTR _clz$1[ebp]
	push	edx
	call	DWORD PTR __imp__RegisterClassW@4
	movzx	eax, ax
	test	eax, eax
	jne	SHORT $LN2@startGrip
; Line 146
	push	OFFSET $SG125969
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@startGrip:
; Line 148
	mov	DWORD PTR ?_isRegistered@Gripper@@0HA, 1 ; Gripper::_isRegistered
$LN3@startGrip:
; Line 160
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	push	0
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	0
	push	OFFSET $SG125975
	push	OFFSET $SG125976
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hWndServer, ecx
; Line 163
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN5@startGrip
; Line 165
	push	OFFSET $SG125980
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	__CxxThrowException@8
$LN5@startGrip:
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	8
?startGrip@Gripper@@QAEXPAVDockingCont@@PAVDockingManager@@@Z ENDP ; Gripper::startGrip
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Gripper@@QAE@XZ PROC					; Gripper::Gripper
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 94
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 96
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], 0
; Line 98
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], 0
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 101
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], 0
; Line 102
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+100], 0
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 105
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0
; Line 106
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 0
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 108
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], 0
; Line 110
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+184], 0
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+188], 0
; Line 112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+192], 0
; Line 114
	push	16					; 00000010H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 108				; 0000006cH
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 115
	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 140				; 0000008cH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 116
	push	28					; 0000001cH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 117
	push	68					; 00000044H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Gripper@@QAE@XZ ENDP					; Gripper::Gripper
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_System_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_System_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 608
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_System_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_System_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_System_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Iostream_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??1_Generic_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 564
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Generic_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??0_Generic_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Odtp
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1runtime_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
__ehhandler$??1runtime_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1runtime_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
; Function compile flags: /Odtp
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\stdexcept
; Line 178
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0runtime_error@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
; Line 179
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
__ehhandler$??0runtime_error@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2296
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2291
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	edx, DWORD PTR __Oldlen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 2232
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnext$1 = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -28						; size = 4
__Lock$3 = -24						; size = 4
__Parent_proxy$4 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$4[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$4[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:
; Line 174
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$3[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:
; Line 127
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator
; Line 128
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 129
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 132
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
; Line 137
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 120
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all
; Line 218
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$3[ebp], edx
; Line 221
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all
; Line 222
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:
; Line 223
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0
; Line 224
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
; Line 557
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	__hypot
	add	esp, 16					; 00000010H
; Line 558
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\WinControls\Preference\preferenceDlg.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?encodings@@3PAHA				; encodings
_DATA	SEGMENT
?encodings@@3PAHA DD 04e2H				; encodings
	DD	04e3H
	DD	04e4H
	DD	04e5H
	DD	04e6H
	DD	04e7H
	DD	04e8H
	DD	04e9H
	DD	04eaH
	DD	06fafH
	DD	06fb0H
	DD	06fb1H
	DD	06fb2H
	DD	06fb3H
	DD	06fb4H
	DD	06fb5H
	DD	06fb6H
	DD	06fb7H
	DD	06fbbH
	DD	06fbcH
	DD	06fbdH
	DD	01b5H
	DD	02d0H
	DD	02e1H
	DD	0307H
	DD	0352H
	DD	0354H
	DD	0357H
	DD	0359H
	DD	035aH
	DD	035cH
	DD	035dH
	DD	035eH
	DD	035fH
	DD	0361H
	DD	0362H
	DD	0365H
	DD	03b6H
	DD	03a8H
	DD	03a4H
	DD	03b5H
	DD	0caedH
	DD	036aH
	DD	02717H
	DD	0556aH
	DD	05182H
_DATA	ENDS
CONST	SEGMENT
$SG145482 DB	'\', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'u', 00H
	DB	'p', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG145511 DB	00H, 00H
	ORG $+2
$SG145527 DB	00H, 00H
	ORG $+2
$SG145655 DB	' ', 00H, '(', 00H, ' ', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG145658 DB	' ', 00H, '[', 00H, ' ', 00H, ' ', 00H, ']', 00H, 00H, 00H
$SG145661 DB	' ', 00H, '{', 00H, ' ', 00H, ' ', 00H, '}', 00H, 00H, 00H
$SG143614 DB	'G', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG143615 DB	'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H
$SG145664 DB	' ', 00H, '''', 00H, ' ', 00H, ' ', 00H, '''', 00H, 00H, 00H
$SG143617 DB	'S', 00H, 'c', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143618 DB	'E', 00H, 'd', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 00H, 00H
$SG145667 DB	' ', 00H, '"', 00H, ' ', 00H, ' ', 00H, '"', 00H, 00H, 00H
$SG143620 DB	'N', 00H, 'e', 00H, 'w', 00H, 'D', 00H, 'o', 00H, 'c', 00H
	DB	00H, 00H
	ORG $+2
$SG143621 DB	'N', 00H, 'e', 00H, 'w', 00H, ' ', 00H, 'D', 00H, 'o', 00H
	DB	'c', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H
	ORG $+2
$SG143623 DB	'D', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG143624 DB	'D', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
$SG143626 DB	'R', 00H, 'e', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, 'H', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG143627 DB	'R', 00H, 'e', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 's', 00H, ' '
	DB	00H, 'H', 00H, 'i', 00H, 's', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'y', 00H, 00H, 00H
	ORG $+2
$SG143629 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 's', 00H
	DB	's', 00H, 'o', 00H, 'c', 00H, 00H, 00H
$SG143630 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'A', 00H
	DB	's', 00H, 's', 00H, 'o', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG143632 DB	'L', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG143633 DB	'L', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'u', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u'
	DB	00H, 00H, 00H
$SG143635 DB	'T', 00H, 'a', 00H, 'b', 00H, 'S', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG143636 DB	'T', 00H, 'a', 00H, 'b', 00H, ' ', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG143638 DB	'P', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 't', 00H, 00H, 00H
$SG143639 DB	'P', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 't', 00H, 00H, 00H
$SG143641 DB	'B', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'u', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG143642 DB	'B', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'u', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG143644 DB	'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG143645 DB	'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, '-', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG143647 DB	'M', 00H, 'u', 00H, 'l', 00H, 't', 00H, 'i', 00H, 'I', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e'
	DB	00H, 00H, 00H
$SG143648 DB	'M', 00H, 'u', 00H, 'l', 00H, 't', 00H, 'i', 00H, '-', 00H
	DB	'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG143650 DB	'D', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG143651 DB	'D', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG143653 DB	'C', 00H, 'l', 00H, 'o', 00H, 'u', 00H, 'd', 00H, 00H, 00H
$SG143654 DB	'C', 00H, 'l', 00H, 'o', 00H, 'u', 00H, 'd', 00H, 00H, 00H
$SG143656 DB	'M', 00H, 'I', 00H, 'S', 00H, 'C', 00H, 00H, 00H
	ORG $+2
$SG143657 DB	'M', 00H, 'I', 00H, 'S', 00H, 'C', 00H, '.', 00H, 00H, 00H
$SG144745 DB	'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, ':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG144759 DB	'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG145846 DB	'N', 00H, 'b', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, ' ', 00H, ':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG145858 DB	' ', 00H, '(', 00H, ' ', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG145859 DB	' ', 00H, '(', 00H, 00H, 00H
	ORG $+2
$SG145862 DB	' ', 00H, '[', 00H, ' ', 00H, ' ', 00H, ']', 00H, 00H, 00H
$SG145863 DB	' ', 00H, '[', 00H, 00H, 00H
	ORG $+2
$SG143816 DB	'E', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG145866 DB	' ', 00H, '{', 00H, ' ', 00H, ' ', 00H, '}', 00H, 00H, 00H
$SG145867 DB	' ', 00H, '{', 00H, 00H, 00H
	ORG $+2
$SG145870 DB	' ', 00H, '"', 00H, ' ', 00H, ' ', 00H, '"', 00H, 00H, 00H
$SG145871 DB	' ', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG145873 DB	' ', 00H, '''', 00H, ' ', 00H, ' ', 00H, '''', 00H, 00H, 00H
$SG145874 DB	' ', 00H, '''', 00H, 00H, 00H
	ORG $+2
$SG144862 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'L', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'u'
	DB	00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'M', 00H, 'e', 00H
	DB	'n', 00H, 'u', 00H, 00H, 00H
$SG144863 DB	'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'w'
	DB	00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b', 00H, 'e', 00H
	DB	' ', 00H, 'e', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 't', 00H
	DB	'h', 00H, 'e', 00H, ' ', 00H, 'n', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, ' ', 00H, 'l', 00H, 'a', 00H, 'u', 00H, 'n', 00H, 'c', 00H
	DB	'h', 00H, '.', 00H, 00H, 00H
$SG144864 DB	'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'w'
	DB	00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b', 00H, 'e', 00H
	DB	' ', 00H, 'd', 00H, 'i', 00H, 's', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'n', 00H, 'e', 00H, 'x'
	DB	00H, 't', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'u', 00H, 'n', 00H
	DB	'c', 00H, 'h', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG145042 DB	'N', 00H, 'o', 00H, 't', 00H, 'e', 00H, 'p', 00H, 'a', 00H
	DB	'd', 00H, 'P', 00H, 'l', 00H, 'u', 00H, 's', 00H, 00H, 00H
$SG145043 DB	'L', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG145045 DB	'L', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 'r', 00H, 'T', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 00H, 00H
$SG145049 DB	'L', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 'r', 00H, 'T', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 00H, 00H
$SG145070 DB	'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG145073 DB	'y', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG145074 DB	'n', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG145075 DB	'e', 00H, 'x', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG145117 DB	'[', 00H, 'D', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H
	DB	'l', 00H, 't', 00H, ']', 00H, 00H, 00H
$SG146160 DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, ' ', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'e', 00H
	DB	'p', 00H, 'a', 00H, 'd', 00H, '+', 00H, '+', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'k', 00H, 'e', 00H
	DB	' ', 00H, 'e', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '.', 00H, 00H, 00H
	ORG $+2
$SG146161 DB	00H, 00H
	ORG $+2
$SG146163 DB	'dropbox', 00H
$SG145149 DB	'T', 00H, 'a', 00H, 'b', 00H, ' ', 00H, 'S', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, ' ', 00H, ':', 00H, ' ', 00H, 00H, 00H
$SG146181 DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, ' ', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'e', 00H
	DB	'p', 00H, 'a', 00H, 'd', 00H, '+', 00H, '+', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'k', 00H, 'e', 00H
	DB	' ', 00H, 'e', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '.', 00H, 00H, 00H
	ORG $+2
$SG146182 DB	00H, 00H
	ORG $+2
$SG146184 DB	'oneDrive', 00H
	ORG $+3
$SG146203 DB	00H, 00H
	ORG $+2
$SG146202 DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, ' ', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'e', 00H
	DB	'p', 00H, 'a', 00H, 'd', 00H, '+', 00H, '+', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'k', 00H, 'e', 00H
	DB	' ', 00H, 'e', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '.', 00H, 00H, 00H
	ORG $+2
$SG146205 DB	'googleDrive', 00H
$SG146223 DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, ' ', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'e', 00H
	DB	'p', 00H, 'a', 00H, 'd', 00H, '+', 00H, '+', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'k', 00H, 'e', 00H
	DB	' ', 00H, 'e', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, '.', 00H, 00H, 00H
	ORG $+2
$SG146224 DB	00H, 00H
	ORG $+2
$SG146232 DB	'\', 00H, 'c', 00H, 'l', 00H, 'o', 00H, 'u', 00H, 'd', 00H
	DB	'\', 00H, 00H, 00H
$SG146234 DB	'c', 00H, 'h', 00H, 'o', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG146240 DB	'\', 00H, 'c', 00H, 'l', 00H, 'o', 00H, 'u', 00H, 'd', 00H
	DB	'\', 00H, 'c', 00H, 'h', 00H, 'o', 00H, 'i', 00H, 'c', 00H, 'e'
	DB	00H, 00H, 00H
$SG144198 DB	'E', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	'h', 00H, 00H, 00H
$SG144245 DB	'0', 00H, 00H, 00H
$SG144247 DB	'1', 00H, 00H, 00H
$SG144249 DB	'2', 00H, 00H, 00H
$SG144251 DB	'3', 00H, 00H, 00H
$SG144253 DB	'B', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 00H, 00H
$SG145282 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG145307 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG145310 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG145314 DB	'$', 00H, '(', 00H, 'F', 00H, 'U', 00H, 'L', 00H, 'L', 00H
	DB	'_', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'R', 00H, 'E', 00H, 'N'
	DB	00H, 'T', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'T', 00H, 'H', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG145315 DB	'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'f', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'n', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'h', 00H
	DB	00H, 00H
$SG145317 DB	'$', 00H, '(', 00H, 'F', 00H, 'I', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'N', 00H, 'A', 00H, 'M', 00H, 'E', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG145318 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'n', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG145320 DB	'$', 00H, '(', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'R', 00H
	DB	'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'D', 00H, 'I', 00H, 'R'
	DB	00H, 'E', 00H, 'C', 00H, 'T', 00H, 'O', 00H, 'R', 00H, 'Y', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG145321 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'd', 00H
	DB	'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG145323 DB	'$', 00H, '(', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'R', 00H
	DB	'E', 00H, 'N', 00H, 'T', 00H, '_', 00H, 'P', 00H, 'R', 00H, 'I'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'G', 00H, '_', 00H
	DB	'P', 00H, 'A', 00H, 'G', 00H, 'E', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG145324 DB	'P', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG145326 DB	'$', 00H, '(', 00H, 'S', 00H, 'H', 00H, 'O', 00H, 'R', 00H
	DB	'T', 00H, '_', 00H, 'D', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ')'
	DB	00H, 00H, 00H
$SG145327 DB	'S', 00H, 'h', 00H, 'o', 00H, 'r', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 00H, 00H
$SG144303 DB	'N', 00H, 'b', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'n', 00H, ':'
	DB	00H, 00H, 00H
$SG145329 DB	'$', 00H, '(', 00H, 'L', 00H, 'O', 00H, 'N', 00H, 'G', 00H
	DB	'_', 00H, 'D', 00H, 'A', 00H, 'T', 00H, 'E', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG145330 DB	'L', 00H, 'o', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 'a', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG145332 DB	'$', 00H, '(', 00H, 'T', 00H, 'I', 00H, 'M', 00H, 'E', 00H
	DB	')', 00H, 00H, 00H
$SG145333 DB	'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG145401 DB	' ', 00H, 00H, 00H
$SG145402 DB	' ', 00H, ':', 00H, ' ', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??0Window@@QAE@XZ				; Window::Window
PUBLIC	??1Window@@UAE@XZ				; Window::~Window
PUBLIC	?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z	; Window::init
PUBLIC	?display@Window@@UBEX_N@Z			; Window::display
PUBLIC	?reSizeTo@Window@@UAEXAAUtagRECT@@@Z		; Window::reSizeTo
PUBLIC	?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z		; Window::reSizeToWH
PUBLIC	?redraw@Window@@UBEX_N@Z			; Window::redraw
PUBLIC	?getClientRect@Window@@UBEXAAUtagRECT@@@Z	; Window::getClientRect
PUBLIC	?getWindowRect@Window@@UBEXAAUtagRECT@@@Z	; Window::getWindowRect
PUBLIC	?getWidth@Window@@UBEHXZ			; Window::getWidth
PUBLIC	?getHeight@Window@@UBEHXZ			; Window::getHeight
PUBLIC	?isVisible@Window@@UBE_NXZ			; Window::isVisible
PUBLIC	??_GWindow@@UAEPAXI@Z				; Window::`scalar deleting destructor'
PUBLIC	_hypot
PUBLIC	_wmemchr
PUBLIC	_wmemcmp
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	_wmemset
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?compare@?$char_traits@_W@std@@SAHPB_W0I@Z	; std::char_traits<wchar_t>::compare
PUBLIC	?length@?$char_traits@_W@std@@SAIPB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z	; std::char_traits<wchar_t>::find
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ ; std::allocator<char>::select_on_container_copy_construction
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z		; std::_Debug_pointer<wchar_t>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ ; std::allocator<wchar_t>::select_on_container_copy_construction
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??0?$allocator@_W@std@@QAE@ABV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Change_alloc
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
PUBLIC	?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
PUBLIC	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
PUBLIC	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
PUBLIC	?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
PUBLIC	?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
PUBLIC	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
PUBLIC	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
PUBLIC	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
PUBLIC	?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z		; DlgInfo::DlgInfo
PUBLIC	??1DlgInfo@@QAE@XZ				; DlgInfo::~DlgInfo
PUBLIC	??0DlgInfo@@QAE@ABU0@@Z				; DlgInfo::DlgInfo
PUBLIC	??_GDlgInfo@@QAEPAXI@Z				; DlgInfo::`scalar deleting destructor'
PUBLIC	?ToElement@TiXmlNode@@QBEPAVTiXmlElement@@XZ	; TiXmlNode::ToElement
PUBLIC	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0StaticDialog@@QAE@XZ				; StaticDialog::StaticDialog
PUBLIC	??1StaticDialog@@UAE@XZ				; StaticDialog::~StaticDialog
PUBLIC	?isCreated@StaticDialog@@UBE_NXZ		; StaticDialog::isCreated
PUBLIC	?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z ; StaticDialog::getTopPoint
PUBLIC	?isCheckedOrNot@StaticDialog@@QBE_NH@Z		; StaticDialog::isCheckedOrNot
PUBLIC	?destroy@StaticDialog@@UAEXXZ			; StaticDialog::destroy
PUBLIC	??_GStaticDialog@@UAEPAXI@Z			; StaticDialog::`scalar deleting destructor'
PUBLIC	?scaleX@DPIManager@@QAEHH@Z			; DPIManager::scaleX
PUBLIC	?scaleY@DPIManager@@QAEHH@Z			; DPIManager::scaleY
PUBLIC	??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; LangMenuItem::LangMenuItem
PUBLIC	??1LangMenuItem@@QAE@XZ				; LangMenuItem::~LangMenuItem
PUBLIC	??0LangMenuItem@@QAE@ABU0@@Z			; LangMenuItem::LangMenuItem
PUBLIC	??4LangMenuItem@@QAEAAU0@ABU0@@Z		; LangMenuItem::operator=
PUBLIC	??_GLangMenuItem@@QAEPAXI@Z			; LangMenuItem::`scalar deleting destructor'
PUBLIC	??0?$allocator@U?$pair@DD@std@@@std@@QAE@XZ	; std::allocator<std::pair<char,char> >::allocator<std::pair<char,char> >
PUBLIC	?deallocate@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@2@I@Z ; std::allocator<std::pair<char,char> >::deallocate
PUBLIC	?allocate@?$allocator@U?$pair@DD@std@@@std@@QAEPAU?$pair@DD@2@I@Z ; std::allocator<std::pair<char,char> >::allocate
PUBLIC	?max_size@?$allocator@U?$pair@DD@std@@@std@@QBEIXZ ; std::allocator<std::pair<char,char> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAIABV?$allocator@U?$pair@DD@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<char,char> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::_Wrap_alloc<std::allocator<std::pair<char,char> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEPAU?$pair@DD@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
PUBLIC	?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::push_back
PUBLIC	?capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::capacity
PUBLIC	?_Unused_capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Unused_capacity
PUBLIC	?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size
PUBLIC	?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::max_size
PUBLIC	??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::operator[]
PUBLIC	?clear@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEXXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::clear
PUBLIC	?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Destroy
PUBLIC	?_Grow_to@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEII@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Grow_to
PUBLIC	?_Inside@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBE_NPBU?$pair@DD@2@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Inside
PUBLIC	?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reallocate
PUBLIC	?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reserve
PUBLIC	?_Xlen@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Orphan_range
PUBLIC	?getNewDocDefaultSettings@NppGUI@@QBEABUNewDocDefaultSettings@@XZ ; NppGUI::getNewDocDefaultSettings
PUBLIC	??0?$allocator@ULangMenuItem@@@std@@QAE@XZ	; std::allocator<LangMenuItem>::allocator<LangMenuItem>
PUBLIC	?deallocate@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@I@Z ; std::allocator<LangMenuItem>::deallocate
PUBLIC	?allocate@?$allocator@ULangMenuItem@@@std@@QAEPAULangMenuItem@@I@Z ; std::allocator<LangMenuItem>::allocate
PUBLIC	?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z ; std::allocator<LangMenuItem>::construct
PUBLIC	?max_size@?$allocator@ULangMenuItem@@@std@@QBEIXZ ; std::allocator<LangMenuItem>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAIABV?$allocator@ULangMenuItem@@@2@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::_Wrap_alloc<std::allocator<LangMenuItem> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEPAULangMenuItem@@I@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
PUBLIC	?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEX$$QAULangMenuItem@@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back
PUBLIC	?capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::capacity
PUBLIC	?_Unused_capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Unused_capacity
PUBLIC	?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::begin
PUBLIC	?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Make_iter
PUBLIC	?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
PUBLIC	?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::max_size
PUBLIC	?at@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::at
PUBLIC	??A?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::operator[]
PUBLIC	?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXABULangMenuItem@@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back
PUBLIC	?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::erase
PUBLIC	?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Destroy
PUBLIC	?_Grow_to@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEII@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Grow_to
PUBLIC	?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Inside
PUBLIC	?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reallocate
PUBLIC	?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reserve
PUBLIC	?_Xlen@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xlen
PUBLIC	?_Xran@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xran
PUBLIC	?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range
PUBLIC	?isSnapshotMode@NppGUI@@QBE_NXZ			; NppGUI::isSnapshotMode
PUBLIC	?getLangName@Lang@@QBEPB_WXZ			; Lang::getLangName
PUBLIC	?getTabInfo@Lang@@QBEHXZ			; Lang::getTabInfo
PUBLIC	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
PUBLIC	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
PUBLIC	?size@LocalizationSwitcher@@QBEIXZ		; LocalizationSwitcher::size
PUBLIC	?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z ; LocalizationSwitcher::getElementFromIndex
PUBLIC	?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; LocalizationSwitcher::getFileName
PUBLIC	?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::size
PUBLIC	??A?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@1@I@Z ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator[]
PUBLIC	??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><wchar_t const (&)[1],wchar_t const (&)[1],void>
PUBLIC	?getInstance@NppParameters@@SAPAV1@XZ		; NppParameters::getInstance
PUBLIC	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ	; NppParameters::getNppGUI
PUBLIC	?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ; NppParameters::getLangFromIndex
PUBLIC	?getNbLang@NppParameters@@QBEHXZ		; NppParameters::getNbLang
PUBLIC	?setNbMaxRecentFile@NppParameters@@QAEXH@Z	; NppParameters::setNbMaxRecentFile
PUBLIC	?getNbMaxRecentFile@NppParameters@@QBEHXZ	; NppParameters::getNbMaxRecentFile
PUBLIC	?setPutRecentFileInSubMenu@NppParameters@@QAEX_N@Z ; NppParameters::setPutRecentFileInSubMenu
PUBLIC	?putRecentFileInSubMenu@NppParameters@@QBE_NXZ	; NppParameters::putRecentFileInSubMenu
PUBLIC	?setRecentFileCustomLength@NppParameters@@QAEXH@Z ; NppParameters::setRecentFileCustomLength
PUBLIC	?getRecentFileCustomLength@NppParameters@@QBEHXZ ; NppParameters::getRecentFileCustomLength
PUBLIC	?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ ; NppParameters::getSVP
PUBLIC	?getFontList@NppParameters@@QBEABV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@XZ ; NppParameters::getFontList
PUBLIC	?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ ; NppParameters::getExternalLexerDoc
PUBLIC	?getNativeLangA@NppParameters@@QBEPAVTiXmlDocumentA@@XZ ; NppParameters::getNativeLangA
PUBLIC	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
PUBLIC	?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ ; NppParameters::getLocalizationSwitcher
PUBLIC	?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; NppParameters::getUserPath
PUBLIC	?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::size
PUBLIC	?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::at
PUBLIC	?_Xran@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@IBEXXZ ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::_Xran
PUBLIC	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?run_dlgProc@SettingsDlg@@EAGHIIJ@Z		; SettingsDlg::run_dlgProc
PUBLIC	?run_dlgProc@BarsDlg@@EAGHIIJ@Z			; BarsDlg::run_dlgProc
PUBLIC	?run_dlgProc@MarginsDlg@@EAGHIIJ@Z		; MarginsDlg::run_dlgProc
PUBLIC	?initScintParam@MarginsDlg@@AAEXXZ		; MarginsDlg::initScintParam
PUBLIC	??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; LangID_Name::LangID_Name
PUBLIC	??1LangID_Name@@QAE@XZ				; LangID_Name::~LangID_Name
PUBLIC	??0LangID_Name@@QAE@ABU0@@Z			; LangID_Name::LangID_Name
PUBLIC	??_GLangID_Name@@QAEPAXI@Z			; LangID_Name::`scalar deleting destructor'
PUBLIC	??0?$allocator@ULangID_Name@@@std@@QAE@XZ	; std::allocator<LangID_Name>::allocator<LangID_Name>
PUBLIC	?deallocate@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@I@Z ; std::allocator<LangID_Name>::deallocate
PUBLIC	?allocate@?$allocator@ULangID_Name@@@std@@QAEPAULangID_Name@@I@Z ; std::allocator<LangID_Name>::allocate
PUBLIC	?max_size@?$allocator@ULangID_Name@@@std@@QBEIXZ ; std::allocator<LangID_Name>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAIABV?$allocator@ULangID_Name@@@2@@Z ; std::allocator_traits<std::allocator<LangID_Name> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<LangID_Name> >::_Wrap_alloc<std::allocator<LangID_Name> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEPAULangID_Name@@I@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<LangID_Name> >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
PUBLIC	?push_back@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEX$$QAULangID_Name@@@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::push_back
PUBLIC	?capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::capacity
PUBLIC	?_Unused_capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Unused_capacity
PUBLIC	?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size
PUBLIC	?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::max_size
PUBLIC	??A?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEAAULangID_Name@@I@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::operator[]
PUBLIC	?_Destroy@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXPAULangID_Name@@0@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Destroy
PUBLIC	?_Grow_to@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEII@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Grow_to
PUBLIC	?_Inside@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBE_NPBULangID_Name@@@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Inside
PUBLIC	?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reallocate
PUBLIC	?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reserve
PUBLIC	?_Xlen@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Orphan_range
PUBLIC	?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z	; DefaultNewDocDlg::makeOpenAnsiAsUtf8
PUBLIC	?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z	; DefaultNewDocDlg::run_dlgProc
PUBLIC	?run_dlgProc@DefaultDirectoryDlg@@EAGHIIJ@Z	; DefaultDirectoryDlg::run_dlgProc
PUBLIC	?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z	; RecentFilesHistoryDlg::setCustomLen
PUBLIC	?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z	; RecentFilesHistoryDlg::run_dlgProc
PUBLIC	?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z		; LangMenuDlg::run_dlgProc
PUBLIC	?run_dlgProc@TabSettings@@EAGHIIJ@Z		; TabSettings::run_dlgProc
PUBLIC	??0strCouple@@QAE@PA_W0@Z			; strCouple::strCouple
PUBLIC	??1strCouple@@QAE@XZ				; strCouple::~strCouple
PUBLIC	??0strCouple@@QAE@ABU0@@Z			; strCouple::strCouple
PUBLIC	??_GstrCouple@@QAEPAXI@Z			; strCouple::`scalar deleting destructor'
PUBLIC	?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z	; PrintSettingsDlg::run_dlgProc
PUBLIC	??0?$allocator@UstrCouple@@@std@@QAE@XZ		; std::allocator<strCouple>::allocator<strCouple>
PUBLIC	?deallocate@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@I@Z ; std::allocator<strCouple>::deallocate
PUBLIC	?allocate@?$allocator@UstrCouple@@@std@@QAEPAUstrCouple@@I@Z ; std::allocator<strCouple>::allocate
PUBLIC	?max_size@?$allocator@UstrCouple@@@std@@QBEIXZ	; std::allocator<strCouple>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAIABV?$allocator@UstrCouple@@@2@@Z ; std::allocator_traits<std::allocator<strCouple> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<strCouple> >::_Wrap_alloc<std::allocator<strCouple> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEPAUstrCouple@@I@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<strCouple> >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
PUBLIC	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
PUBLIC	?capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::_Unused_capacity
PUBLIC	?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::size
PUBLIC	?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::max_size
PUBLIC	??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z ; std::vector<strCouple,std::allocator<strCouple> >::operator[]
PUBLIC	?_Destroy@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXPAUstrCouple@@0@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEII@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Grow_to
PUBLIC	?_Inside@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBE_NPBUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Inside
PUBLIC	?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Reserve
PUBLIC	?_Xlen@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXXZ ; std::vector<strCouple,std::allocator<strCouple> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Orphan_range
PUBLIC	?updateBackupGUI@BackupDlg@@AAEXXZ		; BackupDlg::updateBackupGUI
PUBLIC	?run_dlgProc@BackupDlg@@EAGHIIJ@Z		; BackupDlg::run_dlgProc
PUBLIC	?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z	; AutoCompletionDlg::run_dlgProc
PUBLIC	?run_dlgProc@MultiInstDlg@@EAGHIIJ@Z		; MultiInstDlg::run_dlgProc
PUBLIC	?run_dlgProc@DelimiterSettingsDlg@@EAGHIIJ@Z	; DelimiterSettingsDlg::run_dlgProc
PUBLIC	?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z	; SettingsOnCloudDlg::run_dlgProc
PUBLIC	?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z	; SettingsOnCloudDlg::setCloudChoice
PUBLIC	?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ	; SettingsOnCloudDlg::removeCloudChoice
PUBLIC	?renameDialogTitle@PreferenceDlg@@QAE_NPB_W0@Z	; PreferenceDlg::renameDialogTitle
PUBLIC	?setListSelection@PreferenceDlg@@QBEXI@Z	; PreferenceDlg::setListSelection
PUBLIC	?destroy@PreferenceDlg@@UAEXXZ			; PreferenceDlg::destroy
PUBLIC	?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z		; PreferenceDlg::run_dlgProc
PUBLIC	?makeCategoryList@PreferenceDlg@@AAEXXZ		; PreferenceDlg::makeCategoryList
PUBLIC	?showDialogByIndex@PreferenceDlg@@AAEXH@Z	; PreferenceDlg::showDialogByIndex
PUBLIC	??0?$allocator@UDlgInfo@@@std@@QAE@XZ		; std::allocator<DlgInfo>::allocator<DlgInfo>
PUBLIC	?deallocate@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@I@Z ; std::allocator<DlgInfo>::deallocate
PUBLIC	?allocate@?$allocator@UDlgInfo@@@std@@QAEPAUDlgInfo@@I@Z ; std::allocator<DlgInfo>::allocate
PUBLIC	?max_size@?$allocator@UDlgInfo@@@std@@QBEIXZ	; std::allocator<DlgInfo>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAIABV?$allocator@UDlgInfo@@@2@@Z ; std::allocator_traits<std::allocator<DlgInfo> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DlgInfo> >::_Wrap_alloc<std::allocator<DlgInfo> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEPAUDlgInfo@@I@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DlgInfo> >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
PUBLIC	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
PUBLIC	?capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Unused_capacity
PUBLIC	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
PUBLIC	?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::max_size
PUBLIC	??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::operator[]
PUBLIC	?_Destroy@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXPAUDlgInfo@@0@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEII@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Grow_to
PUBLIC	?_Inside@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBE_NPBUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Inside
PUBLIC	?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reserve
PUBLIC	?_Xlen@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Orphan_range
PUBLIC	??0ValueDlg@@QAE@XZ				; ValueDlg::ValueDlg
PUBLIC	?setNBNumber@ValueDlg@@QAEXH@Z			; ValueDlg::setNBNumber
PUBLIC	?destroy@ValueDlg@@UAEXXZ			; ValueDlg::destroy
PUBLIC	??1ValueDlg@@UAE@XZ				; ValueDlg::~ValueDlg
PUBLIC	??_GValueDlg@@UAEPAXI@Z				; ValueDlg::`scalar deleting destructor'
PUBLIC	?getInstance@EncodingMapper@@SAPAV1@XZ		; EncodingMapper::getInstance
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
PUBLIC	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
PUBLIC	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
PUBLIC	??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator!=
PUBLIC	??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator<
PUBLIC	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
PUBLIC	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
PUBLIC	??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
PUBLIC	??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
PUBLIC	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,void>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAB_WXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
PUBLIC	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-
PUBLIC	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==
PUBLIC	??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator!=
PUBLIC	??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator<
PUBLIC	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat
PUBLIC	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
PUBLIC	?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; trim
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAA_WXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
PUBLIC	??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-
PUBLIC	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::~_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z		; std::pair<char,char>::pair<char,char><char,char,void>
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
PUBLIC	??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
PUBLIC	??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z ; std::addressof<std::pair<char,char> >
PUBLIC	??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z ; std::forward<std::pair<char,char> >
PUBLIC	??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
PUBLIC	??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z ; std::addressof<LangMenuItem>
PUBLIC	??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem>
PUBLIC	??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
PUBLIC	??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z ; std::addressof<LangMenuItem const >
PUBLIC	??$construct@ULangMenuItem@@AAU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>
PUBLIC	??$construct@ULangMenuItem@@ABU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>
PUBLIC	??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00@Z ; std::_Move<LangMenuItem *,LangMenuItem *>
PUBLIC	??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z ; std::addressof<LangID_Name>
PUBLIC	??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z ; std::forward<LangID_Name>
PUBLIC	??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
PUBLIC	??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z ; std::addressof<strCouple>
PUBLIC	??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z ; std::forward<strCouple>
PUBLIC	??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::construct<strCouple,strCouple>
PUBLIC	??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z ; std::addressof<DlgInfo>
PUBLIC	??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z ; std::forward<DlgInfo>
PUBLIC	??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@_W@std@@YAPA_WAA_W@Z		; std::addressof<wchar_t>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$_Umove@PAU?$pair@DD@std@@@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEPAU?$pair@DD@1@PAU21@00@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Umove<std::pair<char,char> *>
PUBLIC	??$_Umove@PAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEPAULangMenuItem@@PAU2@00@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Umove<LangMenuItem *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >
PUBLIC	??$_Umove@PAULangID_Name@@@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEPAULangID_Name@@PAU2@00@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Umove<LangID_Name *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >
PUBLIC	??$_Umove@PAUstrCouple@@@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEPAUstrCouple@@PAU2@00@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Umove<strCouple *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >
PUBLIC	??$_Umove@PAUDlgInfo@@@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEPAUDlgInfo@@PAU2@00@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Umove<DlgInfo *>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@IPAU10@@Z ; std::_Allocate<std::pair<char,char> >
PUBLIC	??$_Allocate@ULangMenuItem@@@std@@YAPAULangMenuItem@@IPAU1@@Z ; std::_Allocate<LangMenuItem>
PUBLIC	??$_Allocate@ULangID_Name@@@std@@YAPAULangID_Name@@IPAU1@@Z ; std::_Allocate<LangID_Name>
PUBLIC	??$_Allocate@UstrCouple@@@std@@YAPAUstrCouple@@IPAU1@@Z ; std::_Allocate<strCouple>
PUBLIC	??$_Allocate@UDlgInfo@@@std@@YAPAUDlgInfo@@IPAU1@@Z ; std::_Allocate<DlgInfo>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Allocate@_W@std@@YAPA_WIPA_W@Z		; std::_Allocate<wchar_t>
PUBLIC	??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z ; std::forward<wchar_t const (&)[1]>
PUBLIC	??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Iter_cat<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$forward@D@std@@YA$$QADAAD@Z			; std::forward<char>
PUBLIC	??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::operator==<std::allocator<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z	; std::operator==<wchar_t,wchar_t>
PUBLIC	??$_Iter_cat@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@@Z ; std::_Iter_cat<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
PUBLIC	??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
PUBLIC	??$construct@U?$pair@DD@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
PUBLIC	??$construct@ULangMenuItem@@U1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@$$QAU3@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
PUBLIC	??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem &>
PUBLIC	??$construct@ULangMenuItem@@AAU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@AAU3@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>
PUBLIC	??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z ; std::forward<LangMenuItem const &>
PUBLIC	??$construct@ULangMenuItem@@ABU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@ABU3@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>
PUBLIC	??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z ; std::_Ptr_cat<LangMenuItem,LangMenuItem>
PUBLIC	??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<LangMenuItem *,LangMenuItem *>
PUBLIC	??$construct@ULangID_Name@@U1@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@$$QAU3@@Z ; std::allocator_traits<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
PUBLIC	??$construct@UstrCouple@@U1@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@$$QAU3@@Z ; std::allocator_traits<std::allocator<strCouple> >::construct<strCouple,strCouple>
PUBLIC	??$construct@UDlgInfo@@U1@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z ; std::_Ptr_cat<std::pair<char,char>,std::pair<char,char> >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Uninitialized_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
PUBLIC	??$_Uninitialized_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ; std::_Uninitialized_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >
PUBLIC	??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z ; std::_Ptr_cat<LangID_Name,LangID_Name>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >
PUBLIC	??$_Uninitialized_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ; std::_Uninitialized_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >
PUBLIC	??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z ; std::_Ptr_cat<strCouple,strCouple>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >
PUBLIC	??$_Uninitialized_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ; std::_Uninitialized_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >
PUBLIC	??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z ; std::_Ptr_cat<DlgInfo,DlgInfo>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >
PUBLIC	??$_Uninitialized_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ; std::_Uninitialized_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >
PUBLIC	??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>
PUBLIC	??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
PUBLIC	??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ; std::allocator<std::pair<char,char> >::construct<std::pair<char,char>,std::pair<char,char> >
PUBLIC	??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem>
PUBLIC	??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem &>
PUBLIC	??$move@AAULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::move<LangMenuItem &>
PUBLIC	??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ; std::allocator<LangID_Name>::construct<LangID_Name,LangID_Name>
PUBLIC	??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ; std::allocator<strCouple>::construct<strCouple,strCouple>
PUBLIC	??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ; std::allocator<DlgInfo>::construct<DlgInfo,DlgInfo>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >
PUBLIC	??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::destroy<LangMenuItem>
PUBLIC	??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ; std::_Unchecked<std::pair<char,char> *>
PUBLIC	??$_Uninit_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
PUBLIC	??$_Rechecked@PAU?$pair@DD@std@@PAU12@@std@@YAAAPAU?$pair@DD@0@AAPAU10@PAU10@@Z ; std::_Rechecked<std::pair<char,char> *,std::pair<char,char> *>
PUBLIC	??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ; std::_Unchecked<LangMenuItem *>
PUBLIC	??$_Uninit_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >
PUBLIC	??$_Rechecked@PAULangMenuItem@@PAU1@@std@@YAAAPAULangMenuItem@@AAPAU1@PAU1@@Z ; std::_Rechecked<LangMenuItem *,LangMenuItem *>
PUBLIC	??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::destroy<LangID_Name>
PUBLIC	??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ; std::_Unchecked<LangID_Name *>
PUBLIC	??$_Uninit_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >
PUBLIC	??$_Rechecked@PAULangID_Name@@PAU1@@std@@YAAAPAULangID_Name@@AAPAU1@PAU1@@Z ; std::_Rechecked<LangID_Name *,LangID_Name *>
PUBLIC	??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::destroy<strCouple>
PUBLIC	??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ; std::_Unchecked<strCouple *>
PUBLIC	??$_Uninit_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ; std::_Uninit_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >
PUBLIC	??$_Rechecked@PAUstrCouple@@PAU1@@std@@YAAAPAUstrCouple@@AAPAU1@PAU1@@Z ; std::_Rechecked<strCouple *,strCouple *>
PUBLIC	??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::destroy<DlgInfo>
PUBLIC	??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ; std::_Unchecked<DlgInfo *>
PUBLIC	??$_Uninit_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >
PUBLIC	??$_Rechecked@PAUDlgInfo@@PAU1@@std@@YAAAPAUDlgInfo@@AAPAU1@PAU1@@Z ; std::_Rechecked<DlgInfo *,DlgInfo *>
PUBLIC	??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>
PUBLIC	??$?0DDX@?$pair@DD@std@@QAE@$$QAU01@@Z		; std::pair<char,char>::pair<char,char><char,char,void>
PUBLIC	??$destroy@U?$pair@DD@std@@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@@Z ; std::allocator_traits<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >
PUBLIC	??$destroy@ULangMenuItem@@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::destroy<LangMenuItem>
PUBLIC	??$_Val_type@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ; std::_Val_type<std::pair<char,char> *>
PUBLIC	??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::allocator<std::pair<char,char> >,std::pair<char,char> >
PUBLIC	??$_Val_type@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ; std::_Val_type<LangMenuItem *>
PUBLIC	??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::allocator<LangMenuItem>,LangMenuItem>
PUBLIC	??$destroy@ULangID_Name@@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@@Z ; std::allocator_traits<std::allocator<LangID_Name> >::destroy<LangID_Name>
PUBLIC	??$_Val_type@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ; std::_Val_type<LangID_Name *>
PUBLIC	??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::allocator<LangID_Name>,LangID_Name>
PUBLIC	??$destroy@UstrCouple@@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@@Z ; std::allocator_traits<std::allocator<strCouple> >::destroy<strCouple>
PUBLIC	??$_Val_type@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ; std::_Val_type<strCouple *>
PUBLIC	??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<strCouple *,strCouple *,std::allocator<strCouple>,strCouple>
PUBLIC	??$destroy@UDlgInfo@@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@@Z ; std::allocator_traits<std::allocator<DlgInfo> >::destroy<DlgInfo>
PUBLIC	??$_Val_type@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ; std::_Val_type<DlgInfo *>
PUBLIC	??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::allocator<DlgInfo>,DlgInfo>
PUBLIC	??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$destroy@U?$pair@DD@std@@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@@Z ; std::allocator<std::pair<char,char> >::destroy<std::pair<char,char> >
PUBLIC	??$destroy@ULangMenuItem@@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@@Z ; std::allocator<LangMenuItem>::destroy<LangMenuItem>
PUBLIC	??$_Debug_range@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WI@Z ; std::_Debug_range<std::pair<char,char> *>
PUBLIC	??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z ; std::_Debug_pointer<std::pair<char,char> >
PUBLIC	??$_Debug_range@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WI@Z ; std::_Debug_range<LangMenuItem *>
PUBLIC	??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z ; std::_Debug_pointer<LangMenuItem>
PUBLIC	??$destroy@ULangID_Name@@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@@Z ; std::allocator<LangID_Name>::destroy<LangID_Name>
PUBLIC	??$_Debug_range@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WI@Z ; std::_Debug_range<LangID_Name *>
PUBLIC	??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z ; std::_Debug_pointer<LangID_Name>
PUBLIC	??$destroy@UstrCouple@@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@@Z ; std::allocator<strCouple>::destroy<strCouple>
PUBLIC	??$_Debug_range@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WI@Z ; std::_Debug_range<strCouple *>
PUBLIC	??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z ; std::_Debug_pointer<strCouple>
PUBLIC	??$destroy@UDlgInfo@@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@@Z ; std::allocator<DlgInfo>::destroy<DlgInfo>
PUBLIC	??$_Debug_range@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WI@Z ; std::_Debug_range<DlgInfo *>
PUBLIC	??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z ; std::_Debug_pointer<DlgInfo>
PUBLIC	??$_Iter_cat@PAU?$pair@DD@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@DD@0@@Z ; std::_Iter_cat<std::pair<char,char> *>
PUBLIC	??$_Debug_range2@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::pair<char,char> *>
PUBLIC	??$_Iter_cat@PAULangMenuItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangMenuItem@@@Z ; std::_Iter_cat<LangMenuItem *>
PUBLIC	??$_Debug_range2@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<LangMenuItem *>
PUBLIC	??$_Iter_cat@PAULangID_Name@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangID_Name@@@Z ; std::_Iter_cat<LangID_Name *>
PUBLIC	??$_Debug_range2@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<LangID_Name *>
PUBLIC	??$_Iter_cat@PAUstrCouple@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUstrCouple@@@Z ; std::_Iter_cat<strCouple *>
PUBLIC	??$_Debug_range2@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<strCouple *>
PUBLIC	??$_Iter_cat@PAUDlgInfo@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDlgInfo@@@Z ; std::_Iter_cat<DlgInfo *>
PUBLIC	??$_Debug_range2@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DlgInfo *>
PUBLIC	??_7Window@@6B@					; Window::`vftable'
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	??_7StaticDialog@@6B@				; StaticDialog::`vftable'
PUBLIC	??_7ValueDlg@@6B@				; ValueDlg::`vftable'
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1NE@NHMFFEGJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAh?$AAa@ ; `string'
PUBLIC	??_C@_1LC@JLHHOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAM?$AAe?$AAn?$AAu?$AAI?$AAt?$AAe?$AAm?$AA?0@ ; `string'
PUBLIC	??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1DLI@PMFFPGKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1KO@COKKPCNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAI?$AAD?$AA_?$AAN?$AAa?$AAm?$AAe?$AA?0?$AAc@ ; `string'
PUBLIC	??_C@_1KG@IMKDFIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAC?$AAo?$AAu?$AAp?$AAl?$AAe?$AA?0?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1JO@EEMIOACN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAl?$AAg?$AAI?$AAn?$AAf?$AAo?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1OG@LJKJDHOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1MG@CLNEOJNJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1MM@BFHGHMKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R4Window@@6B@				; Window::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVWindow@@@8				; Window `RTTI Type Descriptor'
PUBLIC	??_R3Window@@8					; Window::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Window@@8					; Window::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Window@@8				; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4StaticDialog@@6B@				; StaticDialog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStaticDialog@@@8			; StaticDialog `RTTI Type Descriptor'
PUBLIC	??_R3StaticDialog@@8				; StaticDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StaticDialog@@8				; StaticDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StaticDialog@@8			; StaticDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ValueDlg@@6B@				; ValueDlg::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVValueDlg@@@8				; ValueDlg `RTTI Type Descriptor'
PUBLIC	??_R3ValueDlg@@8				; ValueDlg::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ValueDlg@@8				; ValueDlg::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ValueDlg@@8			; ValueDlg::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_wcslen:PROC
EXTRN	__imp__ExpandEnvironmentStringsW@12:PROC
EXTRN	__imp__CreateDirectoryW@8:PROC
EXTRN	__imp__DeleteFileW@4:PROC
EXTRN	__imp__MulDiv@12:PROC
EXTRN	__imp__lstrcmpW@8:PROC
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	__imp__SetBkColor@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__MoveWindow@24:PROC
EXTRN	__imp__IsWindowVisible@4:PROC
EXTRN	__imp__GetDlgItem@8:PROC
EXTRN	__imp__SetDlgItemInt@16:PROC
EXTRN	__imp__GetDlgItemInt@16:PROC
EXTRN	__imp__SetDlgItemTextW@12:PROC
EXTRN	__imp__GetDlgItemTextW@16:PROC
EXTRN	__imp__SendDlgItemMessageW@20:PROC
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	__imp__DrawMenuBar@4:PROC
EXTRN	__imp__GetSubMenu@8:PROC
EXTRN	__imp__InsertMenuW@20:PROC
EXTRN	__imp__DeleteMenu@12:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__MessageBoxW@16:PROC
EXTRN	__imp__GetCursorPos@4:PROC
EXTRN	__imp__ScreenToClient@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__GetParent@4:PROC
EXTRN	_wcstol:PROC
EXTRN	__imp__PathFileExistsW@4:PROC
EXTRN	??_EWindow@@UAEPAXI@Z:PROC			; Window::`vector deleting destructor'
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	__hypot:PROC
EXTRN	__CrtDbgReportW:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?folderBrowser@@YAXPAUHWND__@@HPB_W@Z:PROC	; folderBrowser
EXTRN	?writeFileContent@@YAXPB_WPBD@Z:PROC		; writeFileContent
EXTRN	?getCtrlBgColor@@YAKPAUHWND__@@@Z:PROC		; getCtrlBgColor
EXTRN	?create@URLCtrl@@QAEXPAUHWND__@@H0@Z:PROC	; URLCtrl::create
EXTRN	?FirstChild@TiXmlNode@@QBEPAV1@PB_W@Z:PROC	; TiXmlNode::FirstChild
EXTRN	?NextSibling@TiXmlNode@@QBEPAV1@PB_W@Z:PROC	; TiXmlNode::NextSibling
EXTRN	?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z:PROC ; TiXmlNode::FirstChildElement
EXTRN	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z:PROC	; TiXmlElement::Attribute
EXTRN	?SetAttribute@TiXmlElement@@QAEXPB_W0@Z:PROC	; TiXmlElement::SetAttribute
EXTRN	?SaveFile@TiXmlDocument@@QBE_NXZ:PROC		; TiXmlDocument::SaveFile
EXTRN	?create@StaticDialog@@UAEXH_N0@Z:PROC		; StaticDialog::create
EXTRN	?display@StaticDialog@@UBEX_N@Z:PROC		; StaticDialog::display
EXTRN	??_EStaticDialog@@UAEPAXI@Z:PROC		; StaticDialog::`vector deleting destructor'
EXTRN	?getNameStrFromCmd@@YAXKAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:PROC ; getNameStrFromCmd
EXTRN	?getLangFromXmlFileName@LocalizationSwitcher@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PB_W@Z:PROC ; LocalizationSwitcher::getLangFromXmlFileName
EXTRN	?switchToLang@LocalizationSwitcher@@QBE_NPA_W@Z:PROC ; LocalizationSwitcher::switchToLang
EXTRN	?getSettingsFolder@NppParameters@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:PROC ; NppParameters::getSettingsFolder
EXTRN	?insertTabInfo@NppParameters@@QAE_NPB_WH@Z:PROC	; NppParameters::insertTabInfo
EXTRN	?setWorkingDir@NppParameters@@QAEXPB_W@Z:PROC	; NppParameters::setWorkingDir
EXTRN	?langTypeToCommandID@NppParameters@@QBEHW4LangType@@@Z:PROC ; NppParameters::langTypeToCommandID
EXTRN	?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z:PROC ; ValueDlg::init
EXTRN	?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z:PROC	; ValueDlg::doDialog
EXTRN	?run_dlgProc@ValueDlg@@MAGHIIJ@Z:PROC		; ValueDlg::run_dlgProc
EXTRN	??_EValueDlg@@UAEPAXI@Z:PROC			; ValueDlg::`vector deleting destructor'
EXTRN	?getIndexFromEncoding@EncodingMapper@@QBEHH@Z:PROC ; EncodingMapper::getIndexFromEncoding
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?_pSelf@NppParameters@@0PAV1@A:DWORD		; NppParameters::_pSelf
EXTRN	?_pSelf@EncodingMapper@@0PAV1@A:DWORD		; EncodingMapper::_pSelf
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@ValueDlg@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ValueDlg@@8 DD FLAT:??_R0?AVValueDlg@@@8	; ValueDlg::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ValueDlg@@8
rdata$r	ENDS
;	COMDAT ??_R2ValueDlg@@8
rdata$r	SEGMENT
??_R2ValueDlg@@8 DD FLAT:??_R1A@?0A@EA@ValueDlg@@8	; ValueDlg::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StaticDialog@@8
	DD	FLAT:??_R1A@?0A@EA@Window@@8
rdata$r	ENDS
;	COMDAT ??_R3ValueDlg@@8
rdata$r	SEGMENT
??_R3ValueDlg@@8 DD 00H					; ValueDlg::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ValueDlg@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVValueDlg@@@8
data$r	SEGMENT
??_R0?AVValueDlg@@@8 DD FLAT:??_7type_info@@6B@		; ValueDlg `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVValueDlg@@', 00H
data$r	ENDS
;	COMDAT ??_R4ValueDlg@@6B@
rdata$r	SEGMENT
??_R4ValueDlg@@6B@ DD 00H				; ValueDlg::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVValueDlg@@@8
	DD	FLAT:??_R3ValueDlg@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StaticDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StaticDialog@@8 DD FLAT:??_R0?AVStaticDialog@@@8 ; StaticDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StaticDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2StaticDialog@@8
rdata$r	SEGMENT
??_R2StaticDialog@@8 DD FLAT:??_R1A@?0A@EA@StaticDialog@@8 ; StaticDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Window@@8
rdata$r	ENDS
;	COMDAT ??_R3StaticDialog@@8
rdata$r	SEGMENT
??_R3StaticDialog@@8 DD 00H				; StaticDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2StaticDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStaticDialog@@@8
data$r	SEGMENT
??_R0?AVStaticDialog@@@8 DD FLAT:??_7type_info@@6B@	; StaticDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStaticDialog@@', 00H
data$r	ENDS
;	COMDAT ??_R4StaticDialog@@6B@
rdata$r	SEGMENT
??_R4StaticDialog@@6B@ DD 00H				; StaticDialog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStaticDialog@@@8
	DD	FLAT:??_R3StaticDialog@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Window@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Window@@8 DD FLAT:??_R0?AVWindow@@@8	; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Window@@8
rdata$r	ENDS
;	COMDAT ??_R2Window@@8
rdata$r	SEGMENT
??_R2Window@@8 DD FLAT:??_R1A@?0A@EA@Window@@8		; Window::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Window@@8
rdata$r	SEGMENT
??_R3Window@@8 DD 00H					; Window::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Window@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVWindow@@@8
data$r	SEGMENT
??_R0?AVWindow@@@8 DD FLAT:??_7type_info@@6B@		; Window `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVWindow@@', 00H
data$r	ENDS
;	COMDAT ??_R4Window@@6B@
rdata$r	SEGMENT
??_R4Window@@6B@ DD 00H					; Window::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVWindow@@@8
	DD	FLAT:??_R3Window@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H
	DB	'+', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1MM@BFHGHMKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MM@BFHGHMKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'w', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '*', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm'
	DB	00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@CLNEOJNJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MG@CLNEOJNJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'w', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@LJKJDHOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OG@LJKJDHOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'L', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u'
	DB	00H, 'I', 00H, 't', 00H, 'e', 00H, 'm', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '+', 00H, '=', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EEMIOACN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAl?$AAg?$AAI?$AAn?$AAf?$AAo?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
CONST	SEGMENT
??_C@_1JO@EEMIOACN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAl?$AAg?$AAI?$AAn?$AAf?$AAo?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'l', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 'D', 00H, 'l', 00H, 'g', 00H, 'I', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1KG@IMKDFIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAC?$AAo?$AAu?$AAp?$AAl?$AAe?$AA?0?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1KG@IMKDFIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAC?$AAo?$AAu?$AAp?$AAl?$AAe?$AA?0?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'p', 00H, 'l'
	DB	00H, 'e', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'p', 00H, 'l', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KO@COKKPCNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAI?$AAD?$AA_?$AAN?$AAa?$AAm?$AAe?$AA?0?$AAc@
CONST	SEGMENT
??_C@_1KO@COKKPCNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAI?$AAD?$AA_?$AAN?$AAa?$AAm?$AAe?$AA?0?$AAc@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'L', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'I', 00H, 'D', 00H, '_', 00H, 'N'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, ',', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	'L', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'I', 00H, 'D', 00H, '_'
	DB	00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H
	DB	']', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DLI@PMFFPGKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1DLI@PMFFPGKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i'
	DB	00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '<'
	DB	00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H
	DB	't', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H
	DB	'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H
	DB	'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'w'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i'
	DB	00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '<'
	DB	00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H
	DB	't', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H
	DB	'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H
	DB	'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'w'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a'
	DB	00H, 'r', 00H, '_', 00H, 't', 00H, ',', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't'
	DB	00H, 's', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, '_', 00H, 't', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's'
	DB	00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, ',', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 't', 00H, 's', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@JLHHOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAM?$AAe?$AAn?$AAu?$AAI?$AAt?$AAe?$AAm?$AA?0@
CONST	SEGMENT
??_C@_1LC@JLHHOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAM?$AAe?$AAn?$AAu?$AAI?$AAt?$AAe?$AAm?$AA?0@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'L', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u'
	DB	00H, 'I', 00H, 't', 00H, 'e', 00H, 'm', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 'L', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'e'
	DB	00H, 'n', 00H, 'u', 00H, 'I', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@NHMFFEGJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAh?$AAa@
CONST	SEGMENT
??_C@_1NE@NHMFFEGJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAh?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i'
	DB	00H, 'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H
	DB	',', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ValueDlg@@6B@
CONST	SEGMENT
??_7ValueDlg@@6B@ DD FLAT:??_R4ValueDlg@@6B@		; ValueDlg::`vftable'
	DD	FLAT:??_EValueDlg@@UAEPAXI@Z
	DD	FLAT:?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:?destroy@ValueDlg@@UAEXXZ
	DD	FLAT:?display@StaticDialog@@UBEX_N@Z
	DD	FLAT:?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
	DD	FLAT:?create@StaticDialog@@UAEXH_N0@Z
	DD	FLAT:?isCreated@StaticDialog@@UBE_NXZ
	DD	FLAT:?run_dlgProc@ValueDlg@@MAGHIIJ@Z
CONST	ENDS
;	COMDAT ??_7StaticDialog@@6B@
CONST	SEGMENT
??_7StaticDialog@@6B@ DD FLAT:??_R4StaticDialog@@6B@	; StaticDialog::`vftable'
	DD	FLAT:??_EStaticDialog@@UAEPAXI@Z
	DD	FLAT:?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:?destroy@StaticDialog@@UAEXXZ
	DD	FLAT:?display@StaticDialog@@UBEX_N@Z
	DD	FLAT:?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
	DD	FLAT:?create@StaticDialog@@UAEXH_N0@Z
	DD	FLAT:?isCreated@StaticDialog@@UBE_NXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB DD 0ffffffffH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7Window@@6B@
CONST	SEGMENT
??_7Window@@6B@ DD FLAT:??_R4Window@@6B@		; Window::`vftable'
	DD	FLAT:??_EWindow@@UAEPAXI@Z
	DD	FLAT:?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?display@Window@@UBEX_N@Z
	DD	FLAT:?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0
__ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z$0
__ehfuncinfo$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$3
__ehfuncinfo$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$3
__ehfuncinfo$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$8 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$0
__tryblocktable$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z DD 06H
	DD	06H
	DD	07H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$8
__ehfuncinfo$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$7
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$3
__ehfuncinfo$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$4
	DD	08H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z$0
__ehfuncinfo$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4
	DD	08H
	DD	FLAT:__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z$0
__ehfuncinfo$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ValueDlg@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ValueDlg@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ValueDlg@@UAE@XZ$1
__ehfuncinfo$??1ValueDlg@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ValueDlg@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ValueDlg@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ValueDlg@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ValueDlg@@QAE@XZ$1
__ehfuncinfo$??0ValueDlg@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ValueDlg@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0strCouple@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0strCouple@@QAE@ABU0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0strCouple@@QAE@ABU0@@Z$1
__ehfuncinfo$??0strCouple@@QAE@ABU0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0strCouple@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1strCouple@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1strCouple@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1strCouple@@QAE@XZ$1
__ehfuncinfo$??1strCouple@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1strCouple@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0strCouple@@QAE@PA_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0strCouple@@QAE@PA_W0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0strCouple@@QAE@PA_W0@Z$1
__ehfuncinfo$??0strCouple@@QAE@PA_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0strCouple@@QAE@PA_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0LangID_Name@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0LangID_Name@@QAE@ABU0@@Z$0
__ehfuncinfo$??0LangID_Name@@QAE@ABU0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0LangID_Name@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1LangID_Name@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1LangID_Name@@QAE@XZ$0
__ehfuncinfo$??1LangID_Name@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1LangID_Name@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1
__ehfuncinfo$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ$0
__unwindtable$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z$0
__unwindtable$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z$0
__unwindtable$?run_dlgProc@BackupDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@BackupDlg@@EAGHIIJ@Z$0
__unwindtable$?run_dlgProc@TabSettings@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@TabSettings@@EAGHIIJ@Z$0
__unwindtable$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z$0
__unwindtable$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z$1
__unwindtable$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$3
__unwindtable$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$3
__ehfuncinfo$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@BackupDlg@@EAGHIIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?run_dlgProc@BackupDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@TabSettings@@EAGHIIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?run_dlgProc@TabSettings@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?run_dlgProc@BarsDlg@@EAGHIIJ@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?run_dlgProc@BarsDlg@@EAGHIIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2
__unwindtable$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$8
__unwindtable$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$8
__unwindtable$?run_dlgProc@BarsDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$8
__unwindtable$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$14
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$0
__ehfuncinfo$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z$1
__ehfuncinfo$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z$1
__ehfuncinfo$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ$1
__ehfuncinfo$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
__ehfuncinfo$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z$0
__ehfuncinfo$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$1
__ehfuncinfo$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z$0
__ehfuncinfo$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0LangMenuItem@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0LangMenuItem@@QAE@ABU0@@Z$0
__ehfuncinfo$??0LangMenuItem@@QAE@ABU0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0LangMenuItem@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1LangMenuItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1LangMenuItem@@QAE@XZ$0
__ehfuncinfo$??1LangMenuItem@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1LangMenuItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1
__ehfuncinfo$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1StaticDialog@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1StaticDialog@@UAE@XZ$0
__ehfuncinfo$??1StaticDialog@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1StaticDialog@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StaticDialog@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StaticDialog@@QAE@XZ$0
__ehfuncinfo$??0StaticDialog@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0StaticDialog@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DlgInfo@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DlgInfo@@QAE@ABU0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DlgInfo@@QAE@ABU0@@Z$1
__ehfuncinfo$??0DlgInfo@@QAE@ABU0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DlgInfo@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DlgInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DlgInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DlgInfo@@QAE@XZ$1
__ehfuncinfo$??1DlgInfo@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1DlgInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z$1
__ehfuncinfo$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$1
__ehfuncinfo$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$8
	DD	03H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$10
	DD	03H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$13
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$7
	DD	08H
	DD	FLAT:__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z$1
__ehfuncinfo$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_System_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_System_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_System_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_System_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_System_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_System_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iostream_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iostream_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Iostream_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Iostream_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Generic_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Generic_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Generic_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Generic_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DlgInfo *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z ; std::_Debug_pointer<DlgInfo>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z ; std::_Debug_pointer<DlgInfo>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DlgInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAUDlgInfo@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDlgInfo@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUDlgInfo@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDlgInfo@@@Z PROC ; std::_Iter_cat<DlgInfo *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAUDlgInfo@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDlgInfo@@@Z ENDP ; std::_Iter_cat<DlgInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<strCouple *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z ; std::_Debug_pointer<strCouple>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z ; std::_Debug_pointer<strCouple>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<strCouple *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAUstrCouple@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUstrCouple@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUstrCouple@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUstrCouple@@@Z PROC ; std::_Iter_cat<strCouple *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAUstrCouple@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUstrCouple@@@Z ENDP ; std::_Iter_cat<strCouple *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<LangID_Name *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z ; std::_Debug_pointer<LangID_Name>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z ; std::_Debug_pointer<LangID_Name>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<LangID_Name *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAULangID_Name@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangID_Name@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAULangID_Name@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangID_Name@@@Z PROC ; std::_Iter_cat<LangID_Name *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAULangID_Name@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangID_Name@@@Z ENDP ; std::_Iter_cat<LangID_Name *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z ; std::_Debug_pointer<LangMenuItem>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z ; std::_Debug_pointer<LangMenuItem>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAULangMenuItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangMenuItem@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAULangMenuItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangMenuItem@@@Z PROC ; std::_Iter_cat<LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAULangMenuItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangMenuItem@@@Z ENDP ; std::_Iter_cat<LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::pair<char,char> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z ; std::_Debug_pointer<std::pair<char,char> >
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z ; std::_Debug_pointer<std::pair<char,char> >
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::pair<char,char> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAU?$pair@DD@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@DD@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAU?$pair@DD@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@DD@0@@Z PROC ; std::_Iter_cat<std::pair<char,char> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAU?$pair@DD@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@DD@0@@Z ENDP ; std::_Iter_cat<std::pair<char,char> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z PROC ; std::_Debug_pointer<DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z ENDP ; std::_Debug_pointer<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WI@Z PROC ; std::_Debug_range<DlgInfo *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAUDlgInfo@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDlgInfo@@@Z ; std::_Iter_cat<DlgInfo *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DlgInfo *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WI@Z ENDP ; std::_Debug_range<DlgInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UDlgInfo@@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDlgInfo@@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@@Z PROC ; std::allocator<DlgInfo>::destroy<DlgInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_GDlgInfo@@QAEPAXI@Z
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UDlgInfo@@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@@Z ENDP ; std::allocator<DlgInfo>::destroy<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z PROC ; std::_Debug_pointer<strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z ENDP ; std::_Debug_pointer<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WI@Z PROC ; std::_Debug_range<strCouple *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAUstrCouple@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUstrCouple@@@Z ; std::_Iter_cat<strCouple *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<strCouple *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WI@Z ENDP ; std::_Debug_range<strCouple *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UstrCouple@@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UstrCouple@@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@@Z PROC ; std::allocator<strCouple>::destroy<strCouple>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_GstrCouple@@QAEPAXI@Z
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UstrCouple@@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@@Z ENDP ; std::allocator<strCouple>::destroy<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z PROC ; std::_Debug_pointer<LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z ENDP ; std::_Debug_pointer<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WI@Z PROC ; std::_Debug_range<LangID_Name *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAULangID_Name@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangID_Name@@@Z ; std::_Iter_cat<LangID_Name *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<LangID_Name *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WI@Z ENDP ; std::_Debug_range<LangID_Name *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@ULangID_Name@@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@ULangID_Name@@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@@Z PROC ; std::allocator<LangID_Name>::destroy<LangID_Name>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_GLangID_Name@@QAEPAXI@Z
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@ULangID_Name@@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@@Z ENDP ; std::allocator<LangID_Name>::destroy<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z PROC ; std::_Debug_pointer<LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z ENDP ; std::_Debug_pointer<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WI@Z PROC ; std::_Debug_range<LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAULangMenuItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangMenuItem@@@Z ; std::_Iter_cat<LangMenuItem *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<LangMenuItem *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WI@Z ENDP ; std::_Debug_range<LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z PROC ; std::_Debug_pointer<std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WI@Z PROC ; std::_Debug_range<std::pair<char,char> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAU?$pair@DD@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@DD@0@@Z ; std::_Iter_cat<std::pair<char,char> *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::pair<char,char> *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WI@Z ENDP ; std::_Debug_range<std::pair<char,char> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@ULangMenuItem@@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@ULangMenuItem@@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@@Z PROC ; std::allocator<LangMenuItem>::destroy<LangMenuItem>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_GLangMenuItem@@QAEPAXI@Z
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@ULangMenuItem@@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@@Z ENDP ; std::allocator<LangMenuItem>::destroy<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@DD@std@@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@DD@std@@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@@Z PROC ; std::allocator<std::pair<char,char> >::destroy<std::pair<char,char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@DD@std@@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@@Z ENDP ; std::allocator<std::pair<char,char> >::destroy<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 540
	push	ebp
	mov	ebp, esp
; Line 541
	pop	ebp
	ret	0
??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::allocator<DlgInfo>,DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WI@Z ; std::_Debug_range<DlgInfo *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z ; std::_Debug_pointer<DlgInfo>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 60					; 0000003cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 60					; 0000003cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 60					; 0000003cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::destroy<DlgInfo>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::allocator<DlgInfo>,DlgInfo>
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z PROC ; std::_Val_type<DlgInfo *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ENDP ; std::_Val_type<DlgInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UDlgInfo@@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UDlgInfo@@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@@Z PROC ; std::allocator_traits<std::allocator<DlgInfo> >::destroy<DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDlgInfo@@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@@Z ; std::allocator<DlgInfo>::destroy<DlgInfo>
; Line 731
	pop	ebp
	ret	0
??$destroy@UDlgInfo@@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@@Z ENDP ; std::allocator_traits<std::allocator<DlgInfo> >::destroy<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<strCouple *,strCouple *,std::allocator<strCouple>,strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WI@Z ; std::_Debug_range<strCouple *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z ; std::_Debug_pointer<strCouple>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 56					; 00000038H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 56					; 00000038H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::construct<strCouple,strCouple>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 56					; 00000038H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::destroy<strCouple>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<strCouple *,strCouple *,std::allocator<strCouple>,strCouple>
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z PROC ; std::_Val_type<strCouple *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ENDP ; std::_Val_type<strCouple *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UstrCouple@@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UstrCouple@@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@@Z PROC ; std::allocator_traits<std::allocator<strCouple> >::destroy<strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UstrCouple@@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@@Z ; std::allocator<strCouple>::destroy<strCouple>
; Line 731
	pop	ebp
	ret	0
??$destroy@UstrCouple@@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@@Z ENDP ; std::allocator_traits<std::allocator<strCouple> >::destroy<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::allocator<LangID_Name>,LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WI@Z ; std::_Debug_range<LangID_Name *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z ; std::_Debug_pointer<LangID_Name>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::destroy<LangID_Name>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::allocator<LangID_Name>,LangID_Name>
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z PROC ; std::_Val_type<LangID_Name *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ENDP ; std::_Val_type<LangID_Name *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@ULangID_Name@@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@ULangID_Name@@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@@Z PROC ; std::allocator_traits<std::allocator<LangID_Name> >::destroy<LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@ULangID_Name@@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@@Z ; std::allocator<LangID_Name>::destroy<LangID_Name>
; Line 731
	pop	ebp
	ret	0
??$destroy@ULangID_Name@@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@@Z ENDP ; std::allocator_traits<std::allocator<LangID_Name> >::destroy<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::allocator<LangMenuItem>,LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WI@Z ; std::_Debug_range<LangMenuItem *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z ; std::_Debug_pointer<LangMenuItem>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 36					; 00000024H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 36					; 00000024H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 36					; 00000024H
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::destroy<LangMenuItem>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::allocator<LangMenuItem>,LangMenuItem>
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z PROC ; std::_Val_type<LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ENDP ; std::_Val_type<LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::allocator<std::pair<char,char> >,std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WI@Z ; std::_Debug_range<std::pair<char,char> *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z ; std::_Debug_pointer<std::pair<char,char> >
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 2
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 2
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 2
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::allocator<std::pair<char,char> >,std::pair<char,char> >
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z PROC ; std::_Val_type<std::pair<char,char> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ENDP ; std::_Val_type<std::pair<char,char> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@ULangMenuItem@@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@ULangMenuItem@@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@@Z PROC ; std::allocator_traits<std::allocator<LangMenuItem> >::destroy<LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@ULangMenuItem@@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@@Z ; std::allocator<LangMenuItem>::destroy<LangMenuItem>
; Line 731
	pop	ebp
	ret	0
??$destroy@ULangMenuItem@@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@@Z ENDP ; std::allocator_traits<std::allocator<LangMenuItem> >::destroy<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@DD@std@@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@DD@std@@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@@Z PROC ; std::allocator_traits<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@DD@std@@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@@Z ; std::allocator<std::pair<char,char> >::destroy<std::pair<char,char> >
; Line 731
	pop	ebp
	ret	0
??$destroy@U?$pair@DD@std@@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?0DDX@?$pair@DD@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0DDX@?$pair@DD@std@@QAE@$$QAU01@@Z PROC		; std::pair<char,char>::pair<char,char><char,char,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 157
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@D@std@@YA$$QADAAD@Z		; std::forward<char>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 1
	push	eax
	call	??$forward@D@std@@YA$$QADAAD@Z		; std::forward<char>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+1], dl
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0DDX@?$pair@DD@std@@QAE@$$QAU01@@Z ENDP		; std::pair<char,char>::pair<char,char><char,char,void>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Off$ = 32						; size = 4
___formal$ = 36						; size = 1
??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 741
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 743
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Distance2
; Line 745
	push	745					; 000002e9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 12					; 0000000cH
; Line 746
	push	746					; 000002eaH
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 12					; 0000000cH
$LN1@Distance2:
; Line 750
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
	mov	edx, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 751
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 571
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang
; Line 573
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 12					; 0000000cH
; Line 574
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 12					; 0000000cH
; Line 575
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator<
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Debug_rang
; Line 576
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_rang:
; Line 578
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAUDlgInfo@@PAU1@@std@@YAAAPAUDlgInfo@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUDlgInfo@@PAU1@@std@@YAAAPAUDlgInfo@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<DlgInfo *,DlgInfo *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAUDlgInfo@@PAU1@@std@@YAAAPAUDlgInfo@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<DlgInfo *,DlgInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z PROC ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z ; std::_Ptr_cat<DlgInfo,DlgInfo>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ; std::_Val_type<DlgInfo *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::allocator<DlgInfo>,DlgInfo>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ENDP ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z PROC ; std::_Unchecked<DlgInfo *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ENDP ; std::_Unchecked<DlgInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z PROC ; std::_Wrap_alloc<std::allocator<DlgInfo> >::destroy<DlgInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UDlgInfo@@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@@Z ; std::allocator_traits<std::allocator<DlgInfo> >::destroy<DlgInfo>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z ENDP ; std::_Wrap_alloc<std::allocator<DlgInfo> >::destroy<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAUstrCouple@@PAU1@@std@@YAAAPAUstrCouple@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUstrCouple@@PAU1@@std@@YAAAPAUstrCouple@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<strCouple *,strCouple *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAUstrCouple@@PAU1@@std@@YAAAPAUstrCouple@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<strCouple *,strCouple *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z PROC ; std::_Uninit_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z ; std::_Ptr_cat<strCouple,strCouple>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ; std::_Val_type<strCouple *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<strCouple *,strCouple *,std::allocator<strCouple>,strCouple>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ENDP ; std::_Uninit_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z PROC ; std::_Unchecked<strCouple *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ENDP ; std::_Unchecked<strCouple *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z PROC ; std::_Wrap_alloc<std::allocator<strCouple> >::destroy<strCouple>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UstrCouple@@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@@Z ; std::allocator_traits<std::allocator<strCouple> >::destroy<strCouple>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z ENDP ; std::_Wrap_alloc<std::allocator<strCouple> >::destroy<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAULangID_Name@@PAU1@@std@@YAAAPAULangID_Name@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAULangID_Name@@PAU1@@std@@YAAAPAULangID_Name@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<LangID_Name *,LangID_Name *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAULangID_Name@@PAU1@@std@@YAAAPAULangID_Name@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<LangID_Name *,LangID_Name *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z PROC ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z ; std::_Ptr_cat<LangID_Name,LangID_Name>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ; std::_Val_type<LangID_Name *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::allocator<LangID_Name>,LangID_Name>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ENDP ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z PROC ; std::_Unchecked<LangID_Name *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ENDP ; std::_Unchecked<LangID_Name *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z PROC ; std::_Wrap_alloc<std::allocator<LangID_Name> >::destroy<LangID_Name>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@ULangID_Name@@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@@Z ; std::allocator_traits<std::allocator<LangID_Name> >::destroy<LangID_Name>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z ENDP ; std::_Wrap_alloc<std::allocator<LangID_Name> >::destroy<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAULangMenuItem@@PAU1@@std@@YAAAPAULangMenuItem@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAULangMenuItem@@PAU1@@std@@YAAAPAULangMenuItem@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<LangMenuItem *,LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAULangMenuItem@@PAU1@@std@@YAAAPAULangMenuItem@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<LangMenuItem *,LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z PROC ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z ; std::_Ptr_cat<LangMenuItem,LangMenuItem>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ; std::_Val_type<LangMenuItem *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::allocator<LangMenuItem>,LangMenuItem>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ENDP ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z PROC ; std::_Unchecked<LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ENDP ; std::_Unchecked<LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAU?$pair@DD@std@@PAU12@@std@@YAAAPAU?$pair@DD@0@AAPAU10@PAU10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAU?$pair@DD@std@@PAU12@@std@@YAAAPAU?$pair@DD@0@AAPAU10@PAU10@@Z PROC ; std::_Rechecked<std::pair<char,char> *,std::pair<char,char> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAU?$pair@DD@std@@PAU12@@std@@YAAAPAU?$pair@DD@0@AAPAU10@PAU10@@Z ENDP ; std::_Rechecked<std::pair<char,char> *,std::pair<char,char> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z ; std::_Ptr_cat<std::pair<char,char>,std::pair<char,char> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ; std::_Val_type<std::pair<char,char> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::allocator<std::pair<char,char> >,std::pair<char,char> >
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z PROC ; std::_Unchecked<std::pair<char,char> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ENDP ; std::_Unchecked<std::pair<char,char> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::destroy<LangMenuItem>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@ULangMenuItem@@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::destroy<LangMenuItem>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::destroy<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U?$pair@DD@std@@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@@Z ; std::allocator_traits<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z	; std::forward<wchar_t * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
;	COMDAT ??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z PROC ; std::allocator<DlgInfo>::construct<DlgInfo,DlgInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	60					; 0000003cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z ; std::forward<DlgInfo>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0DlgInfo@@QAE@ABU0@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ENDP ; std::allocator<DlgInfo>::construct<DlgInfo,DlgInfo>
; Function compile flags: /Odtp
;	COMDAT ??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z PROC ; std::allocator<strCouple>::construct<strCouple,strCouple>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	56					; 00000038H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z ; std::forward<strCouple>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0strCouple@@QAE@ABU0@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ENDP ; std::allocator<strCouple>::construct<strCouple,strCouple>
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z PROC ; std::allocator<LangID_Name>::construct<LangID_Name,LangID_Name>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	32					; 00000020H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z ; std::forward<LangID_Name>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0LangID_Name@@QAE@ABU0@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ENDP ; std::allocator<LangID_Name>::construct<LangID_Name,LangID_Name>
; Function compile flags: /Odtp
;	COMDAT ??$move@AAULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z PROC ; std::move<LangMenuItem &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1519
	push	ebp
	mov	ebp, esp
; Line 1520
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1521
	pop	ebp
	ret	0
??$move@AAULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ENDP ; std::move<LangMenuItem &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z PROC ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	36					; 00000024H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0LangMenuItem@@QAE@ABU0@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z ENDP ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem &>
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z PROC ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	36					; 00000024H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0LangMenuItem@@QAE@ABU0@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ENDP ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem>
; Function compile flags: /Odtp
;	COMDAT ??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z PROC ; std::allocator<std::pair<char,char> >::construct<std::pair<char,char>,std::pair<char,char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	2
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z ; std::forward<std::pair<char,char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??$?0DDX@?$pair@DD@std@@QAE@$$QAU01@@Z	; std::pair<char,char>::pair<char,char><char,char,void>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ENDP ; std::allocator<std::pair<char,char> >::construct<std::pair<char,char>,std::pair<char,char> >
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 540
	push	ebp
	mov	ebp, esp
; Line 541
	pop	ebp
	ret	0
??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z
_TEXT	SEGMENT
tv138 = -40						; size = 4
$T2 = -36						; size = 4
tv135 = -32						; size = 4
$T3 = -28						; size = 4
tv142 = -24						; size = 4
tv141 = -20						; size = 4
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Off$ = 32						; size = 4
??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 765
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 766
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Iter_cat<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv142[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>
	add	esp, 32					; 00000020H
; Line 767
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
tv140 = -40						; size = 4
$T2 = -36						; size = 4
tv137 = -32						; size = 4
$T3 = -28						; size = 4
tv144 = -24						; size = 4
tv143 = -20						; size = 4
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Iter_cat<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv137[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 36					; 00000024H
; Line 585
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ; std::_Unchecked<DlgInfo *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ; std::_Unchecked<DlgInfo *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z ; std::_Unchecked<DlgInfo *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ; std::_Uninit_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUDlgInfo@@PAU1@@std@@YAAAPAUDlgInfo@@AAPAU1@PAU1@@Z ; std::_Rechecked<DlgInfo *,DlgInfo *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 60					; 0000003cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::destroy<DlgInfo>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z PROC ; std::_Ptr_cat<DlgInfo,DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z ENDP ; std::_Ptr_cat<DlgInfo,DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z PROC ; std::_Uninitialized_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ; std::_Unchecked<strCouple *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ; std::_Unchecked<strCouple *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z ; std::_Unchecked<strCouple *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ; std::_Uninit_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUstrCouple@@PAU1@@std@@YAAAPAUstrCouple@@AAPAU1@PAU1@@Z ; std::_Rechecked<strCouple *,strCouple *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 56					; 00000038H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::destroy<strCouple>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z PROC ; std::_Ptr_cat<strCouple,strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z ENDP ; std::_Ptr_cat<strCouple,strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z PROC ; std::_Uninitialized_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ; std::_Unchecked<LangID_Name *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ; std::_Unchecked<LangID_Name *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z ; std::_Unchecked<LangID_Name *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ; std::_Uninit_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAULangID_Name@@PAU1@@std@@YAAAPAULangID_Name@@AAPAU1@PAU1@@Z ; std::_Rechecked<LangID_Name *,LangID_Name *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::destroy<LangID_Name>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z PROC ; std::_Ptr_cat<LangID_Name,LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z ENDP ; std::_Ptr_cat<LangID_Name,LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z PROC ; std::_Uninitialized_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ; std::_Unchecked<LangMenuItem *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ; std::_Unchecked<LangMenuItem *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z ; std::_Unchecked<LangMenuItem *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ; std::_Uninit_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAULangMenuItem@@PAU1@@std@@YAAAPAULangMenuItem@@AAPAU1@PAU1@@Z ; std::_Rechecked<LangMenuItem *,LangMenuItem *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ; std::_Unchecked<std::pair<char,char> *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ; std::_Unchecked<std::pair<char,char> *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z ; std::_Unchecked<std::pair<char,char> *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ; std::_Uninit_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAU?$pair@DD@std@@PAU12@@std@@YAAAPAU?$pair@DD@0@AAPAU10@PAU10@@Z ; std::_Rechecked<std::pair<char,char> *,std::pair<char,char> *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 36					; 00000024H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::destroy<LangMenuItem>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 2
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::destroy<std::pair<char,char> >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z PROC ; std::_Ptr_cat<std::pair<char,char>,std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z ENDP ; std::_Ptr_cat<std::pair<char,char>,std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z	; std::forward<wchar_t * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UDlgInfo@@U1@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDlgInfo@@U1@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z ; std::forward<DlgInfo>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ; std::allocator<DlgInfo>::construct<DlgInfo,DlgInfo>
; Line 724
	pop	ebp
	ret	0
??$construct@UDlgInfo@@U1@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UstrCouple@@U1@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UstrCouple@@U1@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<strCouple> >::construct<strCouple,strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z ; std::forward<strCouple>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ; std::allocator<strCouple>::construct<strCouple,strCouple>
; Line 724
	pop	ebp
	ret	0
??$construct@UstrCouple@@U1@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<strCouple> >::construct<strCouple,strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangID_Name@@U1@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@ULangID_Name@@U1@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z ; std::forward<LangID_Name>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ; std::allocator<LangID_Name>::construct<LangID_Name,LangID_Name>
; Line 724
	pop	ebp
	ret	0
??$construct@ULangID_Name@@U1@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<LangMenuItem *,LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2418
	push	ebp
	mov	ebp, esp
; Line 2419
	jmp	SHORT $LN3@Move
$LN2@Move:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 36					; 00000024H
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 36					; 00000024H
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Move:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Move
; Line 2420
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$move@AAULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::move<LangMenuItem &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	call	??4LangMenuItem@@QAEAAU0@ABU0@@Z
	jmp	SHORT $LN2@Move
$LN1@Move:
; Line 2421
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2422
	pop	ebp
	ret	0
??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<LangMenuItem *,LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z PROC ; std::_Ptr_cat<LangMenuItem,LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z ENDP ; std::_Ptr_cat<LangMenuItem,LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@ABU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@ABU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@ULangMenuItem@@ABU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@ABU3@@Z PROC ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z ; std::forward<LangMenuItem const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z ; std::allocator<LangMenuItem>::construct
; Line 724
	pop	ebp
	ret	0
??$construct@ULangMenuItem@@ABU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@ABU3@@Z ENDP ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z PROC ; std::forward<LangMenuItem const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z ENDP ; std::forward<LangMenuItem const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@AAU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@AAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@ULangMenuItem@@AAU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@AAU3@@Z PROC ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem &>
; Line 724
	pop	ebp
	ret	0
??$construct@ULangMenuItem@@AAU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@AAU3@@Z ENDP ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z PROC ; std::forward<LangMenuItem &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z ENDP ; std::forward<LangMenuItem &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@U1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@ULangMenuItem@@U1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ; std::allocator<LangMenuItem>::construct<LangMenuItem,LangMenuItem>
; Line 724
	pop	ebp
	ret	0
??$construct@ULangMenuItem@@U1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U?$pair@DD@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@DD@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z ; std::forward<std::pair<char,char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ; std::allocator<std::pair<char,char> >::construct<std::pair<char,char>,std::pair<char,char> >
; Line 724
	pop	ebp
	ret	0
??$construct@U?$pair@DD@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 571
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Debug_rang
; Line 573
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
	add	esp, 12					; 0000000cH
; Line 574
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z ; std::_Debug_pointer<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
	add	esp, 12					; 0000000cH
; Line 575
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator<
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Debug_rang
; Line 576
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_rang:
; Line 578
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z PROC		; std::operator==<wchar_t,wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 660
	push	ebp
	mov	ebp, esp
; Line 661
	mov	al, 1
; Line 662
	pop	ebp
	ret	0
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ENDP		; std::operator==<wchar_t,wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z PROC ; std::operator==<std::allocator<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 892
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 893
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	call	??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ; std::operator==<wchar_t,wchar_t>
	add	esp, 8
; Line 894
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ENDP ; std::operator==<std::allocator<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@D@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@D@std@@YA$$QADAAD@Z PROC			; std::forward<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@D@std@@YA$$QADAAD@Z ENDP			; std::forward<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z
_TEXT	SEGMENT
$T2 = -104						; size = 4
tv165 = -100						; size = 4
tv175 = -96						; size = 4
$T3 = -92						; size = 4
$T4 = -88						; size = 4
tv168 = -84						; size = 4
tv172 = -80						; size = 4
$T5 = -76						; size = 4
tv164 = -72						; size = 4
tv182 = -68						; size = 4
tv181 = -64						; size = 4
$T6 = -60						; size = 4
tv185 = -56						; size = 4
tv184 = -52						; size = 4
_this$ = -48						; size = 4
__Right$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__First2$ = 32						; size = 12
__Last2$ = 44						; size = 12
??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1544
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 1549
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	eax, DWORD PTR __Last2$[ebp]
	push	eax
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv181[ebp], eax
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR tv164[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __First2$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv182[ebp], eax
	mov	eax, DWORD PTR tv182[ebp]
	mov	DWORD PTR tv168[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR __Right$[ebp]
	call	??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,void>
	mov	DWORD PTR tv165[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1550
	lea	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv172[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv185[ebp], eax
	mov	eax, DWORD PTR tv185[ebp]
	mov	DWORD PTR tv175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
; Line 1551
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR __Right$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First2$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last2$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T6[ebp]
; Line 1552
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$0:
	lea	ecx, DWORD PTR __Last2$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$1:
	lea	ecx, DWORD PTR __First2$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$3:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$4:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$5:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$6:
	lea	ecx, DWORD PTR __Right$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$7:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$8:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
tv196 = -72						; size = 4
$T2 = -68						; size = 4
tv193 = -64						; size = 4
$T3 = -60						; size = 4
tv190 = -56						; size = 4
$T4 = -52						; size = 4
tv187 = -48						; size = 4
$T5 = -44						; size = 4
tv204 = -40						; size = 4
tv203 = -36						; size = 4
tv201 = -32						; size = 4
tv200 = -28						; size = 4
__Count$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
___formal$ = 32						; size = 1
??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 840
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 843
	push	843					; 0000034bH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv200[ebp], eax
	mov	ecx, DWORD PTR tv200[ebp]
	mov	DWORD PTR tv187[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv201[ebp], eax
	mov	eax, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv190[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 32					; 00000020H
; Line 844
	mov	DWORD PTR __Count$[ebp], 0
; Line 845
	lea	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv203[ebp], eax
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv193[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv204[ebp], eax
	mov	eax, DWORD PTR tv204[ebp]
	mov	DWORD PTR tv196[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,unsigned int>
	add	esp, 28					; 0000001cH
; Line 846
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
; Line 848
	mov	BYTE PTR __$EHRec$[ebp+12], 6
; Line 849
	jmp	SHORT $LN3@Construct
$LN2@Construct:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
$LN3@Construct:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Construct
; Line 850
	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
	movsx	cx, BYTE PTR [eax]
	movzx	edx, cx
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
	jmp	SHORT $LN2@Construct
$LN1@Construct:
	jmp	SHORT $LN7@Construct
__catch$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$0:
; Line 852
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 853
	push	0
	push	0
	call	__CxxThrowException@8
; Line 854
	mov	eax, $LN16@Construct
	ret	0
$LN7@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$1
$LN16@Construct:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$1:
; Line 855
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN6@Construct:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$3:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$4:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$5:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$6:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$7:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z PROC ; std::forward<wchar_t const (&)[1]>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z ENDP ; std::forward<wchar_t const (&)[1]>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@_W@std@@YAPA_WIPA_W@Z PROC			; std::_Allocate<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@_W@std@@YAPA_WIPA_W@Z ENDP			; std::_Allocate<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@UDlgInfo@@@std@@YAPAUDlgInfo@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UDlgInfo@@@std@@YAPAUDlgInfo@@IPAU1@@Z PROC ; std::_Allocate<DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 71582788	; 04444444H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 60
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UDlgInfo@@@std@@YAPAUDlgInfo@@IPAU1@@Z ENDP ; std::_Allocate<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@UstrCouple@@@std@@YAPAUstrCouple@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UstrCouple@@@std@@YAPAUstrCouple@@IPAU1@@Z PROC ; std::_Allocate<strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 76695844	; 04924924H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 56
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UstrCouple@@@std@@YAPAUstrCouple@@IPAU1@@Z ENDP ; std::_Allocate<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@ULangID_Name@@@std@@YAPAULangID_Name@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@ULangID_Name@@@std@@YAPAULangID_Name@@IPAU1@@Z PROC ; std::_Allocate<LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 134217727	; 07ffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 5
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@ULangID_Name@@@std@@YAPAULangID_Name@@IPAU1@@Z ENDP ; std::_Allocate<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@ULangMenuItem@@@std@@YAPAULangMenuItem@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@ULangMenuItem@@@std@@YAPAULangMenuItem@@IPAU1@@Z PROC ; std::_Allocate<LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 119304647	; 071c71c7H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 36
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@ULangMenuItem@@@std@@YAPAULangMenuItem@@IPAU1@@Z ENDP ; std::_Allocate<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@IPAU10@@Z PROC ; std::_Allocate<std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@IPAU10@@Z ENDP ; std::_Allocate<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAUDlgInfo@@@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEPAUDlgInfo@@PAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUDlgInfo@@@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEPAUDlgInfo@@PAU2@00@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Umove<DlgInfo *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ; std::_Uninitialized_move<DlgInfo *,DlgInfo *,std::_Wrap_alloc<std::allocator<DlgInfo> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUDlgInfo@@@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEPAUDlgInfo@@PAU2@00@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Umove<DlgInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z ; std::_Ptr_cat<DlgInfo,DlgInfo>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAUstrCouple@@@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEPAUstrCouple@@PAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUstrCouple@@@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEPAUstrCouple@@PAU2@00@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Umove<strCouple *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ; std::_Uninitialized_move<strCouple *,strCouple *,std::_Wrap_alloc<std::allocator<strCouple> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUstrCouple@@@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEPAUstrCouple@@PAU2@00@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Umove<strCouple *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z ; std::_Ptr_cat<strCouple,strCouple>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAULangID_Name@@@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEPAULangID_Name@@PAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAULangID_Name@@@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEPAULangID_Name@@PAU2@00@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Umove<LangID_Name *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ; std::_Uninitialized_move<LangID_Name *,LangID_Name *,std::_Wrap_alloc<std::allocator<LangID_Name> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAULangID_Name@@@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEPAULangID_Name@@PAU2@00@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Umove<LangID_Name *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z ; std::_Ptr_cat<LangID_Name,LangID_Name>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEPAULangMenuItem@@PAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEPAULangMenuItem@@PAU2@00@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Umove<LangMenuItem *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ; std::_Uninitialized_move<LangMenuItem *,LangMenuItem *,std::_Wrap_alloc<std::allocator<LangMenuItem> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEPAULangMenuItem@@PAU2@00@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Umove<LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAU?$pair@DD@std@@@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEPAU?$pair@DD@1@PAU21@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAU?$pair@DD@std@@@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEPAU?$pair@DD@1@PAU21@00@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Umove<std::pair<char,char> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<char,char> *,std::pair<char,char> *,std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAU?$pair@DD@std@@@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEPAU?$pair@DD@1@PAU21@00@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Umove<std::pair<char,char> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z ; std::_Ptr_cat<LangMenuItem,LangMenuItem>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z ; std::_Ptr_cat<std::pair<char,char>,std::pair<char,char> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@_W@std@@YAPA_WAA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@_W@std@@YAPA_WAA_W@Z PROC			; std::addressof<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@_W@std@@YAPA_WAA_W@Z ENDP			; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z	; std::forward<wchar_t * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z ; std::forward<DlgInfo>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UDlgInfo@@U1@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z PROC	; std::forward<DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z ENDP	; std::forward<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z PROC	; std::addressof<DlgInfo>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z ENDP	; std::addressof<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<strCouple> >::construct<strCouple,strCouple>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z ; std::forward<strCouple>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UstrCouple@@U1@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@$$QAU3@@Z ; std::allocator_traits<std::allocator<strCouple> >::construct<strCouple,strCouple>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<strCouple> >::construct<strCouple,strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z PROC ; std::forward<strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z ENDP ; std::forward<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z PROC ; std::addressof<strCouple>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z ENDP ; std::addressof<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z ; std::forward<LangID_Name>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@ULangID_Name@@U1@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@$$QAU3@@Z ; std::allocator_traits<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z PROC ; std::forward<LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z ENDP ; std::forward<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z PROC ; std::addressof<LangID_Name>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z ENDP ; std::addressof<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00@Z PROC ; std::_Move<LangMenuItem *,LangMenuItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2439
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2441
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z ; std::_Ptr_cat<LangMenuItem,LangMenuItem>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<LangMenuItem *,LangMenuItem *>
	add	esp, 16					; 00000010H
; Line 2442
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00@Z ENDP ; std::_Move<LangMenuItem *,LangMenuItem *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@ABU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@ABU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@ULangMenuItem@@ABU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@ABU2@@Z PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z ; std::forward<LangMenuItem const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@ULangMenuItem@@ABU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@ABU3@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@ULangMenuItem@@ABU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@ABU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@AAU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@ULangMenuItem@@AAU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@AAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@ULangMenuItem@@AAU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@AAU3@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@ULangMenuItem@@AAU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@AAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z PROC ; std::addressof<LangMenuItem const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z ENDP ; std::addressof<LangMenuItem const >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@ULangMenuItem@@U1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@$$QAU3@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z PROC ; std::forward<LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ENDP ; std::forward<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z PROC ; std::addressof<LangMenuItem>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z ENDP ; std::addressof<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z ; std::forward<std::pair<char,char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U?$pair@DD@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z PROC ; std::forward<std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z ENDP ; std::forward<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z PROC ; std::addressof<std::pair<char,char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z ENDP ; std::addressof<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
tv140 = -40						; size = 4
$T2 = -36						; size = 4
tv137 = -32						; size = 4
$T3 = -28						; size = 4
tv144 = -24						; size = 4
tv143 = -20						; size = 4
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@@Z ; std::_Iter_cat<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv137[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
	add	esp, 36					; 00000024H
; Line 585
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
; Function compile flags: /Odtp
;	COMDAT ??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z
_TEXT	SEGMENT
$T2 = -112						; size = 12
$T3 = -100						; size = 12
tv188 = -88						; size = 4
$T4 = -84						; size = 4
tv183 = -80						; size = 4
$T5 = -76						; size = 4
tv178 = -72						; size = 4
$T6 = -68						; size = 4
tv174 = -64						; size = 4
$T7 = -60						; size = 4
$T8 = -56						; size = 4
tv175 = -52						; size = 4
tv196 = -48						; size = 4
tv185 = -44						; size = 4
tv195 = -40						; size = 4
tv194 = -36						; size = 4
tv180 = -32						; size = 4
tv193 = -28						; size = 4
tv192 = -24						; size = 4
tv191 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1186
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1190
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	eax, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv178[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv180[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	mov	eax, DWORD PTR tv180[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv185[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	edx, DWORD PTR tv185[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv196[ebp], eax
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
	mov	DWORD PTR tv175[ebp], eax
	mov	ecx, DWORD PTR tv175[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T8[ebp]
; Line 1191
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$2:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$3:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$4:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$5:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$6:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$7:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
; Function compile flags: /Odtp
;	COMDAT ??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z PROC ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 900
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 901
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::operator==<std::allocator<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 902
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z PROC		; std::pair<char,char>::pair<char,char><char,char,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@D@std@@YA$$QADAAD@Z		; std::forward<char>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@D@std@@YA$$QADAAD@Z		; std::forward<char>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+1], dl
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z ENDP		; std::pair<char,char>::pair<char,char><char,char,void>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::~_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::~_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 12
$T3 = -28						; size = 4
tv77 = -24						; size = 4
tv78 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 393
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv78[ebp], eax
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv77[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv77[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]
; Line 395
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-
; Function compile flags: /Odtp
;	COMDAT ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAA_WXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 335
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAB_WXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
; Line 336
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAA_WXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 317
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 318
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -96						; size = 12
$T3 = -84						; size = 12
$T4 = -72						; size = 12
tv165 = -60						; size = 4
tv170 = -56						; size = 4
$T5 = -52						; size = 4
tv164 = -48						; size = 4
$T6 = -44						; size = 4
tv175 = -40						; size = 4
tv167 = -36						; size = 4
tv174 = -32						; size = 4
tv173 = -28						; size = 4
tv162 = -24						; size = 4
tv172 = -20						; size = 4
_pos$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; trim
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1874
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1875
	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _str$[ebp]
	call	?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
	mov	DWORD PTR _pos$[ebp], eax
; Line 1877
	mov	ecx, DWORD PTR _pos$[ebp]
	cmp	ecx, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	je	SHORT $LN3@trim
; Line 1879
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
; Line 1880
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _str$[ebp]
	call	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
	mov	DWORD PTR _pos$[ebp], eax
; Line 1881
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	je	SHORT $LN2@trim
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _str$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
$LN2@trim:
; Line 1882
	jmp	$LN4@trim
$LN3@trim:
; Line 1883
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
	mov	DWORD PTR tv172[ebp], eax
	mov	eax, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv162[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	mov	edx, DWORD PTR tv162[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv173[ebp], eax
	mov	eax, DWORD PTR tv173[ebp]
	mov	DWORD PTR tv164[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv167[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	mov	eax, DWORD PTR tv167[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv175[ebp], eax
	mov	ecx, DWORD PTR tv175[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _str$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
$LN4@trim:
; Line 1884
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; trim
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
; Function compile flags: /Odtp
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -32						; size = 12
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 365
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 367
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 368
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@operator
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
$LN5@operator:
	ret	0
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
; Line 362
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 307
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	imul	esi, DWORD PTR __Off$[ebp], 36
	mov	eax, DWORD PTR _this$[ebp]
	add	esi, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	imul	ecx, DWORD PTR __Off$[ebp], 36
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax+8], ecx
	jae	SHORT $LN2@operator
$LN1@operator:
; Line 159
	push	159					; 0000009fH
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 160
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1OG@LJKJDHOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 170
	imul	eax, DWORD PTR __Off$[ebp], 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
; Line 172
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,LangMenuItem,int,LangMenuItem const *,LangMenuItem const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
_TEXT	SEGMENT
$T2 = -112						; size = 12
$T3 = -100						; size = 12
tv188 = -88						; size = 4
$T4 = -84						; size = 4
tv183 = -80						; size = 4
$T5 = -76						; size = 4
tv178 = -72						; size = 4
$T6 = -68						; size = 4
tv174 = -64						; size = 4
$T7 = -60						; size = 4
$T8 = -56						; size = 4
tv175 = -52						; size = 4
tv196 = -48						; size = 4
tv185 = -44						; size = 4
tv195 = -40						; size = 4
tv194 = -36						; size = 4
tv180 = -32						; size = 4
tv193 = -28						; size = 4
tv192 = -24						; size = 4
tv191 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1186
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1190
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	eax, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv178[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv180[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	mov	eax, DWORD PTR tv180[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv185[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	edx, DWORD PTR tv185[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv196[ebp], eax
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	mov	DWORD PTR tv175[ebp], eax
	mov	ecx, DWORD PTR tv175[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T8[ebp]
; Line 1191
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$5:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$6:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$7:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@Compat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN3@Compat
$LN1@Compat:
; Line 250
	push	250					; 000000faH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 251
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@Compat
	xor	ecx, ecx
	jne	SHORT $LN6@Compat
$LN5@Compat:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	251					; 000000fbH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@Compat
	int	3
$LN6@Compat:
	push	0
	push	251					; 000000fbH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MG@CLNEOJNJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN3@Compat:
; Line 253
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator<, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	4
??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator<
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 220
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 221
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat
; Line 215
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 216
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 202
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 203
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat
; Line 204
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+8]
	sar	eax, 1
; Line 205
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAB_WXZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	edx, DWORD PTR [eax+20]
	lea	eax, DWORD PTR [esi+edx*2]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 79
	push	79					; 0000004fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 80
	mov	edx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	edx, edx
	je	SHORT $LN5@operator
	xor	eax, eax
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	80					; 00000050H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	80					; 00000050H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MM@BFHGHMKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 93
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
; Line 94
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAB_WXZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 53
	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 55
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv160 = -44						; size = 4
$T2 = -40						; size = 4
tv157 = -36						; size = 4
$T3 = -32						; size = 4
tv161 = -28						; size = 4
tv71 = -24						; size = 4
_this$ = -20						; size = 4
$T4 = -15						; size = 1
$T5 = -14						; size = 1
$T6 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 811
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 812
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 813
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Iter_cat<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR $T6[ebp], dl
	movzx	eax, BYTE PTR $T6[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv71[ebp], eax
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv161[ebp], eax
	mov	eax, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv160[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Line 814
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,void>
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp
;	COMDAT ??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 12
$T3 = -28						; size = 4
tv77 = -24						; size = 4
tv78 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 393
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv78[ebp], eax
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv77[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv77[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]
; Line 395
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
; Function compile flags: /Odtp
;	COMDAT ??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 344
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 345
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
; Line 347
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 335
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
; Line 336
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 317
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 318
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp
;	COMDAT ?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@Compat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN3@Compat
$LN1@Compat:
; Line 250
	push	250					; 000000faH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 251
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@Compat
	xor	ecx, ecx
	jne	SHORT $LN6@Compat
$LN5@Compat:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	251					; 000000fbH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@Compat
	int	3
$LN6@Compat:
	push	0
	push	251					; 000000fbH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN3@Compat:
; Line 253
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator<, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	4
??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator<
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 220
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 221
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
; Line 215
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 216
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 202
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 203
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
; Line 204
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+8]
; Line 205
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	add	esi, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	esi, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 109
	push	109					; 0000006dH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 110
	mov	edx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	edx, edx
	je	SHORT $LN5@operator
	xor	eax, eax
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	110					; 0000006eH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	110					; 0000006eH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 120
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
; Line 122
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, eax
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	add	esi, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	esi, DWORD PTR [edx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 79
	push	79					; 0000004fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 80
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	80					; 00000050H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	80					; 00000050H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 94
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 53
	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 55
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ?getInstance@EncodingMapper@@SAPAV1@XZ
_TEXT	SEGMENT
?getInstance@EncodingMapper@@SAPAV1@XZ PROC		; EncodingMapper::getInstance, COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\encodingmapper.h
; Line 39
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?_pSelf@EncodingMapper@@0PAV1@A ; EncodingMapper::_pSelf
	pop	ebp
	ret	0
?getInstance@EncodingMapper@@SAPAV1@XZ ENDP		; EncodingMapper::getInstance
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GValueDlg@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GValueDlg@@UAEPAXI@Z PROC				; ValueDlg::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GValueDlg@@UAEPAXI@Z ENDP				; ValueDlg::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ValueDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ValueDlg@@UAE@XZ PROC				; ValueDlg::~ValueDlg, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StaticDialog@@UAE@XZ			; StaticDialog::~StaticDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ValueDlg@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1StaticDialog@@UAE@XZ			; StaticDialog::~StaticDialog
__unwindfunclet$??1ValueDlg@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??1ValueDlg@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ValueDlg@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ValueDlg@@UAE@XZ ENDP				; ValueDlg::~ValueDlg
; Function compile flags: /Odtp
;	COMDAT ?destroy@ValueDlg@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?destroy@ValueDlg@@UAEXXZ PROC				; ValueDlg::destroy, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\lesdlgs.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy@ValueDlg@@UAEXXZ ENDP				; ValueDlg::destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?setNBNumber@ValueDlg@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nbNumber$ = 8						; size = 4
?setNBNumber@ValueDlg@@QAEXH@Z PROC			; ValueDlg::setNBNumber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\lesdlgs.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	cmp	DWORD PTR _nbNumber$[ebp], 0
	jle	SHORT $LN2@setNBNumbe
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nbNumber$[ebp]
	mov	DWORD PTR [eax+32], ecx
$LN2@setNBNumbe:
; Line 45
	mov	esp, ebp
	pop	ebp
	ret	4
?setNBNumber@ValueDlg@@QAEXH@Z ENDP			; ValueDlg::setNBNumber
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ValueDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0ValueDlg@@QAE@XZ PROC				; ValueDlg::ValueDlg, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\lesdlgs.h
; Line 39
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ValueDlg@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0StaticDialog@@QAE@XZ			; StaticDialog::StaticDialog
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ValueDlg@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ValueDlg@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1StaticDialog@@UAE@XZ			; StaticDialog::~StaticDialog
__unwindfunclet$??0ValueDlg@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0ValueDlg@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ValueDlg@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ValueDlg@@QAE@XZ ENDP				; ValueDlg::ValueDlg
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXXZ PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXXZ ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEII@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEPAUDlgInfo@@I@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUDlgInfo@@@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEPAUDlgInfo@@PAU2@00@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Umove<DlgInfo *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXPAUDlgInfo@@0@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	imul	edx, DWORD PTR __Count$[ebp], 60
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	imul	ecx, DWORD PTR __Size$[ebp], 60
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1608
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBE_NPBUDlgInfo@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBE_NPBUDlgInfo@@@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBE_NPBUDlgInfo@@@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEII@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEII@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXPAUDlgInfo@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXPAUDlgInfo@@0@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DlgInfo> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXPAUDlgInfo@@0@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1JO@EEMIOACN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAl?$AAg?$AAI?$AAn?$AAf?$AAo?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	imul	eax, DWORD PTR __Pos$[ebp], 60
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DlgInfo> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z PROC ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 866
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z ; std::addressof<DlgInfo>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBE_NPBUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 868
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z ; std::addressof<DlgInfo>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 869
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 870
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reserve
$LN3@push_back:
; Line 871
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Orphan_range
; Line 873
	imul	eax, DWORD PTR __Idx$1[ebp], 60
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	call	??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z ; std::forward<DlgInfo>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
	mov	ecx, eax
	call	??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
; Line 874
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 876
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 878
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 879
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Reserve
$LN1@push_back:
; Line 880
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::_Orphan_range
; Line 882
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z ; std::forward<DlgInfo>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
	mov	ecx, eax
	call	??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DlgInfo> >::construct<DlgInfo,DlgInfo>
; Line 883
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 60					; 0000003cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ENDP ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DlgInfo> >::_Wrap_alloc<std::allocator<DlgInfo> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DlgInfo,std::allocator<DlgInfo> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DlgInfo> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAIABV?$allocator@UDlgInfo@@@2@@Z ; std::allocator_traits<std::allocator<DlgInfo> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DlgInfo> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DlgInfo> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@I@Z ; std::allocator<DlgInfo>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DlgInfo> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEPAUDlgInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEPAUDlgInfo@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DlgInfo> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@UDlgInfo@@@std@@QAEPAUDlgInfo@@I@Z ; std::allocator<DlgInfo>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEPAUDlgInfo@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DlgInfo> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DlgInfo> >::_Wrap_alloc<std::allocator<DlgInfo> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UDlgInfo@@@std@@QAE@XZ	; std::allocator<DlgInfo>::allocator<DlgInfo>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DlgInfo> >::_Wrap_alloc<std::allocator<DlgInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAIABV?$allocator@UDlgInfo@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAIABV?$allocator@UDlgInfo@@@2@@Z PROC ; std::allocator_traits<std::allocator<DlgInfo> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@UDlgInfo@@@std@@QBEIXZ ; std::allocator<DlgInfo>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAIABV?$allocator@UDlgInfo@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DlgInfo> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@UDlgInfo@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UDlgInfo@@@std@@QBEIXZ PROC	; std::allocator<DlgInfo>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 71582788				; 04444444H
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UDlgInfo@@@std@@QBEIXZ ENDP	; std::allocator<DlgInfo>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@UDlgInfo@@@std@@QAEPAUDlgInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UDlgInfo@@@std@@QAEPAUDlgInfo@@I@Z PROC ; std::allocator<DlgInfo>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@UDlgInfo@@@std@@YAPAUDlgInfo@@IPAU1@@Z ; std::_Allocate<DlgInfo>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UDlgInfo@@@std@@QAEPAUDlgInfo@@I@Z ENDP ; std::allocator<DlgInfo>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@I@Z PROC ; std::allocator<DlgInfo>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@I@Z ENDP ; std::allocator<DlgInfo>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UDlgInfo@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UDlgInfo@@@std@@QAE@XZ PROC		; std::allocator<DlgInfo>::allocator<DlgInfo>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UDlgInfo@@@std@@QAE@XZ ENDP		; std::allocator<DlgInfo>::allocator<DlgInfo>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$ = -20						; size = 4
tv87 = -16						; size = 4
tv76 = -12						; size = 4
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
_index$ = 8						; size = 4
?showDialogByIndex@PreferenceDlg@@AAEXH@Z PROC		; PreferenceDlg::showDialogByIndex
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
	mov	DWORD PTR _len$[ebp], eax
; Line 283
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@showDialog
$LN2@showDialog:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@showDialog:
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jae	SHORT $LN1@showDialog
; Line 285
	mov	edx, DWORD PTR _i$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv76[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
; Line 286
	jmp	SHORT $LN2@showDialog
$LN1@showDialog:
; Line 287
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], edx
	push	1
	mov	eax, DWORD PTR tv87[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
; Line 288
	mov	esp, ebp
	pop	ebp
	ret	4
?showDialogByIndex@PreferenceDlg@@AAEXH@Z ENDP		; PreferenceDlg::showDialogByIndex
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -12						; size = 4
_this$ = -8						; size = 4
_i$2 = -4						; size = 4
?makeCategoryList@PreferenceDlg@@AAEXXZ PROC		; PreferenceDlg::makeCategoryList
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 232
	mov	DWORD PTR _i$2[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN3@makeCatego
$LN2@makeCatego:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN3@makeCatego:
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN1@makeCatego
; Line 234
	mov	edx, DWORD PTR _i$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::operator[]
	add	eax, 4
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	384					; 00000180H
	push	6002					; 00001772H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 235
	jmp	SHORT $LN2@makeCatego
$LN1@makeCatego:
; Line 236
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setListSelection@PreferenceDlg@@QBEXI@Z ; PreferenceDlg::setListSelection
; Line 237
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCategoryList@PreferenceDlg@@AAEXXZ ENDP		; PreferenceDlg::makeCategoryList
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv1098 = -1072						; size = 4
tv1089 = -1068						; size = 4
tv1075 = -1064						; size = 4
tv1090 = -1060						; size = 4
tv1097 = -1056						; size = 4
tv1085 = -1052						; size = 4
tv1073 = -1048						; size = 4
tv1077 = -1044						; size = 4
tv1096 = -1040						; size = 4
tv1087 = -1036						; size = 4
tv1071 = -1032						; size = 4
tv1083 = -1028						; size = 4
tv1095 = -1024						; size = 4
tv1079 = -1020						; size = 4
tv1069 = -1016						; size = 4
_pNppParam$2 = -1012					; size = 4
tv1094 = -1008						; size = 4
tv1104 = -1004						; size = 4
tv1067 = -1000						; size = 4
tv1103 = -996						; size = 4
tv1093 = -992						; size = 4
tv1102 = -988						; size = 4
tv1065 = -984						; size = 4
tv1101 = -980						; size = 4
tv1092 = -976						; size = 4
tv1100 = -972						; size = 4
tv1063 = -968						; size = 4
tv1099 = -964						; size = 4
tv1091 = -960						; size = 4
tv1061 = -956						; size = 4
tv1081 = -952						; size = 4
_i$3 = -948						; size = 4
tv64 = -944						; size = 4
_enableDlgTheme$4 = -940				; size = 4
tv1038 = -936						; size = 4
$T5 = -932						; size = 60
$T6 = -872						; size = 60
$T7 = -812						; size = 60
$T8 = -752						; size = 60
$T9 = -692						; size = 60
$T10 = -632						; size = 60
$T11 = -572						; size = 60
$T12 = -512						; size = 60
$T13 = -452						; size = 60
$T14 = -392						; size = 60
$T15 = -332						; size = 60
$T16 = -272						; size = 60
$T17 = -212						; size = 60
$T18 = -152						; size = 60
$T19 = -92						; size = 60
_rc$20 = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z PROC		; PreferenceDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 97
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1060				; 00000424H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 98
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN11@run_dlgPro
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN9@run_dlgPro
	jmp	$LN12@run_dlgPro
$LN11@run_dlgPro:
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 103
	push	0
	push	0
	push	6100					; 000017d4H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 104
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	edx, DWORD PTR [eax+12]
	call	edx
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 107
	push	0
	push	0
	push	6200					; 00001838H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 188				; 000000bcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+188]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 110
	push	0
	push	0
	push	6300					; 0000189cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 188				; 000000bcH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+188]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113116				; 0001b9dcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113116]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 113
	push	0
	push	0
	push	6400					; 00001900H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113116				; 0001b9dcH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113116]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113164				; 0001ba0cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113164]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 116
	push	0
	push	0
	push	6450					; 00001932H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113164				; 0001ba0cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113164]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 118
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113196				; 0001ba2cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113196]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 119
	push	0
	push	0
	push	6460					; 0000193cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113196				; 0001ba2cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113196]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 122
	push	0
	push	0
	push	4000					; 00000fa0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+220]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113056				; 0001b9a0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113056]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 125
	push	0
	push	0
	push	6600					; 000019c8H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113056				; 0001b9a0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113056]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+256]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 128
	push	0
	push	0
	push	6500					; 00001964H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+256]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 130
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112948				; 0001b934H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112948]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 131
	push	0
	push	0
	push	6550					; 00001996H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112948				; 0001b934H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112948]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113396				; 0001baf4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113396]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 134
	push	0
	push	0
	push	6800					; 00001a90H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113396				; 0001baf4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113396]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 136
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113428				; 0001bb14H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113428]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 137
	push	0
	push	0
	push	6850					; 00001ac2H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113428				; 0001bb14H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113428]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113536				; 0001bb80H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113536]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 140
	push	0
	push	0
	push	6150					; 00001806H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113536				; 0001bb80H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113536]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 142
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113568				; 0001bba0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113568]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 143
	push	0
	push	0
	push	6250					; 0000186aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113568				; 0001bba0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113568]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113648				; 0001bbf0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113648]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 146
	push	0
	push	0
	push	6260					; 00001874H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113648				; 0001bbf0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113648]
	mov	eax, DWORD PTR [edx+48]
	call	eax
; Line 149
	push	OFFSET $SG143614
	push	OFFSET $SG143615
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	lea	ecx, DWORD PTR $T14[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1090[ebp], eax
	mov	edx, DWORD PTR tv1090[ebp]
	mov	DWORD PTR tv1061[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv1061[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T14[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 150
	push	OFFSET $SG143617
	push	OFFSET $SG143618
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	push	ecx
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1091[ebp], eax
	mov	edx, DWORD PTR tv1091[ebp]
	mov	DWORD PTR tv1063[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv1063[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 151
	push	OFFSET $SG143620
	push	OFFSET $SG143621
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113116				; 0001b9dcH
	push	ecx
	lea	ecx, DWORD PTR $T12[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1092[ebp], eax
	mov	edx, DWORD PTR tv1092[ebp]
	mov	DWORD PTR tv1065[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv1065[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 152
	push	OFFSET $SG143623
	push	OFFSET $SG143624
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113164				; 0001ba0cH
	push	ecx
	lea	ecx, DWORD PTR $T19[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1093[ebp], eax
	mov	edx, DWORD PTR tv1093[ebp]
	mov	DWORD PTR tv1067[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv1067[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 153
	push	OFFSET $SG143626
	push	OFFSET $SG143627
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113196				; 0001ba2cH
	push	ecx
	lea	ecx, DWORD PTR $T18[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1094[ebp], eax
	mov	edx, DWORD PTR tv1094[ebp]
	mov	DWORD PTR tv1069[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv1069[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T18[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 154
	push	OFFSET $SG143629
	push	OFFSET $SG143630
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	push	ecx
	lea	ecx, DWORD PTR $T17[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1095[ebp], eax
	mov	edx, DWORD PTR tv1095[ebp]
	mov	DWORD PTR tv1071[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv1071[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T17[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 155
	push	OFFSET $SG143632
	push	OFFSET $SG143633
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	push	ecx
	lea	ecx, DWORD PTR $T16[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1096[ebp], eax
	mov	edx, DWORD PTR tv1096[ebp]
	mov	DWORD PTR tv1073[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv1073[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T16[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 156
	push	OFFSET $SG143635
	push	OFFSET $SG143636
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112948				; 0001b934H
	push	ecx
	lea	ecx, DWORD PTR $T15[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1097[ebp], eax
	mov	edx, DWORD PTR tv1097[ebp]
	mov	DWORD PTR tv1075[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv1075[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T15[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 157
	push	OFFSET $SG143638
	push	OFFSET $SG143639
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113056				; 0001b9a0H
	push	ecx
	lea	ecx, DWORD PTR $T13[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1098[ebp], eax
	mov	edx, DWORD PTR tv1098[ebp]
	mov	DWORD PTR tv1077[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv1077[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T13[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 158
	push	OFFSET $SG143641
	push	OFFSET $SG143642
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113396				; 0001baf4H
	push	ecx
	lea	ecx, DWORD PTR $T11[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1099[ebp], eax
	mov	edx, DWORD PTR tv1099[ebp]
	mov	DWORD PTR tv1079[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv1079[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 159
	push	OFFSET $SG143644
	push	OFFSET $SG143645
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113428				; 0001bb14H
	push	ecx
	lea	ecx, DWORD PTR $T9[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1100[ebp], eax
	mov	edx, DWORD PTR tv1100[ebp]
	mov	DWORD PTR tv1081[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv1081[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 160
	push	OFFSET $SG143647
	push	OFFSET $SG143648
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113536				; 0001bb80H
	push	ecx
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1101[ebp], eax
	mov	edx, DWORD PTR tv1101[ebp]
	mov	DWORD PTR tv1083[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	eax, DWORD PTR tv1083[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 161
	push	OFFSET $SG143650
	push	OFFSET $SG143651
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113568				; 0001bba0H
	push	ecx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1102[ebp], eax
	mov	edx, DWORD PTR tv1102[ebp]
	mov	DWORD PTR tv1085[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	eax, DWORD PTR tv1085[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 162
	push	OFFSET $SG143653
	push	OFFSET $SG143654
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113648				; 0001bbf0H
	push	ecx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1103[ebp], eax
	mov	edx, DWORD PTR tv1103[ebp]
	mov	DWORD PTR tv1087[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	eax, DWORD PTR tv1087[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T10[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 163
	push	OFFSET $SG143656
	push	OFFSET $SG143657
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 188				; 000000bcH
	push	ecx
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z	; DlgInfo::DlgInfo
	mov	DWORD PTR tv1104[ebp], eax
	mov	edx, DWORD PTR tv1104[ebp]
	mov	DWORD PTR tv1089[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR tv1089[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1DlgInfo@@QAE@XZ
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeCategoryList@PreferenceDlg@@AAEXXZ	; PreferenceDlg::makeCategoryList
; Line 168
	lea	ecx, DWORD PTR _rc$20[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx
; Line 170
	push	10					; 0000000aH
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	?scaleY@DPIManager@@QAEHH@Z		; DPIManager::scaleY
	add	eax, DWORD PTR _rc$20[ebp+4]
	mov	DWORD PTR _rc$20[ebp+4], eax
; Line 171
	push	50					; 00000032H
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	?scaleY@DPIManager@@QAEHH@Z		; DPIManager::scaleY
	mov	ecx, DWORD PTR _rc$20[ebp+12]
	sub	ecx, eax
	mov	DWORD PTR _rc$20[ebp+12], ecx
; Line 172
	push	150					; 00000096H
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	?scaleX@DPIManager@@QAEHH@Z		; DPIManager::scaleX
	add	eax, DWORD PTR _rc$20[ebp]
	mov	DWORD PTR _rc$20[ebp], eax
; Line 174
	lea	edx, DWORD PTR _rc$20[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	mov	eax, DWORD PTR [edx+16]
	call	eax
; Line 175
	lea	ecx, DWORD PTR _rc$20[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 176
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 188				; 000000bcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+188]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 177
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113116				; 0001b9dcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113116]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 178
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113164				; 0001ba0cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113164]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 179
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113196				; 0001ba2cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113196]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 180
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 181
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+256]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 182
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112948				; 0001b934H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112948]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 183
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113056				; 0001b9a0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113056]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 184
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113396				; 0001baf4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113396]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 185
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113428				; 0001bb14H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113428]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 186
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113536				; 0001bb80H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113536]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 187
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113568				; 0001bba0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113568]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 188
	lea	eax, DWORD PTR _rc$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113648				; 0001bbf0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113648]
	mov	edx, DWORD PTR [eax+16]
	call	edx
; Line 190
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$2[ebp], eax
; Line 191
	mov	ecx, DWORD PTR _pNppParam$2[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$4[ebp], eax
; Line 192
	cmp	DWORD PTR _enableDlgTheme$4[ebp], 0
	je	SHORT $LN10@run_dlgPro
; Line 193
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR _enableDlgTheme$4[ebp]
$LN10@run_dlgPro:
; Line 195
	mov	eax, 1
	jmp	$LN14@run_dlgPro
$LN9@run_dlgPro:
; Line 200
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 6002				; 00001772H
	jne	SHORT $LN8@run_dlgPro
; Line 202
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 1
	jne	SHORT $LN7@run_dlgPro
; Line 204
	push	0
	push	0
	push	392					; 00000188H
	push	6002					; 00001772H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _i$3[ebp], eax
; Line 205
	cmp	DWORD PTR _i$3[ebp], -1
	je	SHORT $LN7@run_dlgPro
; Line 207
	mov	edx, DWORD PTR _i$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?showDialogByIndex@PreferenceDlg@@AAEXH@Z ; PreferenceDlg::showDialogByIndex
$LN7@run_dlgPro:
; Line 211
	jmp	SHORT $LN12@run_dlgPro
$LN8@run_dlgPro:
; Line 213
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv1038[ebp], eax
	cmp	DWORD PTR tv1038[ebp], 2
	je	SHORT $LN2@run_dlgPro
	cmp	DWORD PTR tv1038[ebp], 6001		; 00001771H
	je	SHORT $LN2@run_dlgPro
	jmp	SHORT $LN1@run_dlgPro
$LN2@run_dlgPro:
; Line 217
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
; Line 218
	mov	eax, 1
	jmp	SHORT $LN14@run_dlgPro
$LN1@run_dlgPro:
; Line 221
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 222
	mov	eax, 1
	jmp	SHORT $LN14@run_dlgPro
$LN12@run_dlgPro:
; Line 227
	xor	eax, eax
$LN14@run_dlgPro:
; Line 228
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR $T14[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$1:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$2:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$3:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$4:
	lea	ecx, DWORD PTR $T18[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$5:
	lea	ecx, DWORD PTR $T17[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$6:
	lea	ecx, DWORD PTR $T16[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$7:
	lea	ecx, DWORD PTR $T15[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$8:
	lea	ecx, DWORD PTR $T13[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$9:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$10:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$11:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$12:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$13:
	lea	ecx, DWORD PTR $T10[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$14:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1DlgInfo@@QAE@XZ
__ehhandler$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1064]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z ENDP		; PreferenceDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?destroy@PreferenceDlg@@UAEXXZ PROC			; PreferenceDlg::destroy
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 291
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 292
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 293
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	edx, DWORD PTR [eax+8]
	call	edx
; Line 294
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 188				; 000000bcH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+188]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 295
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	edx, DWORD PTR [eax+8]
	call	edx
; Line 296
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+256]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 297
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112948				; 0001b934H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112948]
	mov	edx, DWORD PTR [eax+8]
	call	edx
; Line 298
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113056				; 0001b9a0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113056]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 299
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113116				; 0001b9dcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113116]
	mov	edx, DWORD PTR [eax+8]
	call	edx
; Line 300
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113164				; 0001ba0cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113164]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 301
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113196				; 0001ba2cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113196]
	mov	edx, DWORD PTR [eax+8]
	call	edx
; Line 302
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113396				; 0001baf4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113396]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 303
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113428				; 0001bb14H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113428]
	mov	edx, DWORD PTR [eax+8]
	call	edx
; Line 304
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113536				; 0001bb80H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+113536]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 305
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 113568				; 0001bba0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+113568]
	mov	edx, DWORD PTR [eax+8]
	call	edx
; Line 306
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy@PreferenceDlg@@UAEXXZ ENDP			; PreferenceDlg::destroy
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -520						; size = 4
_selStr$ = -516						; size = 512
__$ArrayPad$ = -4					; size = 4
_currentSel$ = 8					; size = 4
?setListSelection@PreferenceDlg@@QBEXI@Z PROC		; PreferenceDlg::setListSelection
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 520				; 00000208H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 243
	lea	eax, DWORD PTR _selStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentSel$[ebp]
	push	ecx
	push	393					; 00000189H
	push	6002					; 00001772H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 244
	lea	ecx, DWORD PTR _selStr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _currentSel$[ebp]
	push	edx
	push	396					; 0000018cH
	push	6002					; 00001772H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 245
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?setListSelection@PreferenceDlg@@QBEXI@Z ENDP		; PreferenceDlg::setListSelection
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_lenMax$ = -540						; size = 4
_txtLen$ = -536						; size = 4
_len$1 = -532						; size = 4
_this$ = -528						; size = 4
_i$ = -524						; size = 4
_foundIt$ = -517					; size = 1
_oldName$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_internalName$ = 8					; size = 4
_newName$ = 12						; size = 4
?renameDialogTitle@PreferenceDlg@@QAE_NPB_W0@Z PROC	; PreferenceDlg::renameDialogTitle
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 540				; 0000021cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 249
	mov	BYTE PTR _foundIt$[ebp], 0
; Line 250
	mov	DWORD PTR _i$[ebp], 0
; Line 251
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ ; std::vector<DlgInfo,std::allocator<DlgInfo> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN7@renameDial
$LN6@renameDial:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@renameDial:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN5@renameDial
; Line 253
	mov	edx, DWORD PTR _internalName$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z ; std::vector<DlgInfo,std::allocator<DlgInfo> >::operator[]
	add	eax, 32					; 00000020H
	push	eax
	call	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@renameDial
; Line 255
	mov	BYTE PTR _foundIt$[ebp], 1
; Line 256
	jmp	SHORT $LN5@renameDial
$LN4@renameDial:
; Line 258
	jmp	SHORT $LN6@renameDial
$LN5@renameDial:
; Line 259
	movzx	edx, BYTE PTR _foundIt$[ebp]
	test	edx, edx
	jne	SHORT $LN3@renameDial
; Line 260
	xor	al, al
	jmp	$LN8@renameDial
$LN3@renameDial:
; Line 262
	mov	DWORD PTR _lenMax$[ebp], 256		; 00000100H
; Line 263
	xor	eax, eax
	mov	WORD PTR _oldName$[ebp], ax
	push	510					; 000001feH
	push	0
	lea	ecx, DWORD PTR _oldName$[ebp+2]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 264
	push	0
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	push	394					; 0000018aH
	push	6002					; 00001772H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _txtLen$[ebp], eax
; Line 265
	cmp	DWORD PTR _txtLen$[ebp], 256		; 00000100H
	jb	SHORT $LN2@renameDial
; Line 266
	xor	al, al
	jmp	$LN8@renameDial
$LN2@renameDial:
; Line 268
	lea	edx, DWORD PTR _oldName$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	393					; 00000189H
	push	6002					; 00001772H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 271
	lea	eax, DWORD PTR _oldName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newName$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcmpW@8
	test	eax, eax
	jne	SHORT $LN1@renameDial
; Line 272
	mov	al, 1
	jmp	SHORT $LN8@renameDial
$LN1@renameDial:
; Line 274
	push	0
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	push	386					; 00000182H
	push	6002					; 00001772H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 275
	mov	edx, DWORD PTR _newName$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	385					; 00000181H
	push	6002					; 00001772H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 277
	mov	al, 1
$LN8@renameDial:
; Line 278
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?renameDialogTitle@PreferenceDlg@@QAE_NPB_W0@Z ENDP	; PreferenceDlg::renameDialogTitle
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -48						; size = 4
_cloudChoicePath$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ PROC	; SettingsOnCloudDlg::removeCloudChoice
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2907
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2908
	lea	eax, DWORD PTR _cloudChoicePath$[ebp]
	push	eax
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	ecx, eax
	call	?getSettingsFolder@NppParameters@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; NppParameters::getSettingsFolder
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2911
	push	OFFSET $SG146240
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Line 2912
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	call	DWORD PTR __imp__PathFileExistsW@4
	test	eax, eax
	je	SHORT $LN1@removeClou
; Line 2914
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	call	DWORD PTR __imp__DeleteFileW@4
$LN1@removeClou:
; Line 2916
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ$0:
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ ENDP	; SettingsOnCloudDlg::removeCloudChoice
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -48						; size = 4
_cloudChoicePath$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_choice$ = 8						; size = 4
?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z PROC	; SettingsOnCloudDlg::setCloudChoice
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2893
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2894
	lea	eax, DWORD PTR _cloudChoicePath$[ebp]
	push	eax
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	ecx, eax
	call	?getSettingsFolder@NppParameters@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; NppParameters::getSettingsFolder
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2895
	push	OFFSET $SG146232
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Line 2897
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	call	DWORD PTR __imp__PathFileExistsW@4
	test	eax, eax
	jne	SHORT $LN1@setCloudCh
; Line 2899
	push	0
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	call	DWORD PTR __imp__CreateDirectoryW@8
$LN1@setCloudCh:
; Line 2901
	push	OFFSET $SG146234
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Line 2902
	mov	ecx, DWORD PTR _choice$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	call	?writeFileContent@@YAXPB_WPBD@Z		; writeFileContent
	add	esp, 8
; Line 2904
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z$0:
	lea	ecx, DWORD PTR _cloudChoicePath$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z ENDP	; SettingsOnCloudDlg::setCloudChoice
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv145 = -188						; size = 4
tv67 = -184						; size = 4
tv132 = -180						; size = 4
tv204 = -176						; size = 4
tv86 = -172						; size = 4
tv225 = -168						; size = 4
tv74 = -164						; size = 4
tv186 = -160						; size = 4
tv267 = -156						; size = 4
tv159 = -152						; size = 4
tv246 = -148						; size = 4
tv172 = -144						; size = 4
tv71 = -140						; size = 4
_cloudChoice$2 = -136					; size = 4
_nppGUI$ = -132						; size = 4
_message$3 = -128					; size = 28
_message$4 = -100					; size = 28
_message$5 = -72					; size = 28
_message$6 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z PROC		; SettingsOnCloudDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2811
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2812
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	ecx, eax
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 2813
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN9@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN8@run_dlgPro
	jmp	$LN10@run_dlgPro
$LN9@run_dlgPro:
; Line 2817
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+1692]
	mov	DWORD PTR _cloudChoice$2[ebp], edx
; Line 2818
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+1692]
	mov	DWORD PTR [eax+32], edx
; Line 2824
	cmp	DWORD PTR _cloudChoice$2[ebp], 0
	jne	SHORT $LN14@run_dlgPro
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN15@run_dlgPro
$LN14@run_dlgPro:
	mov	DWORD PTR tv74[ebp], 0
$LN15@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	241					; 000000f1H
	push	6263					; 00001877H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2826
	cmp	DWORD PTR _cloudChoice$2[ebp], 1
	jne	SHORT $LN16@run_dlgPro
	mov	DWORD PTR tv86[ebp], 1
	jmp	SHORT $LN17@run_dlgPro
$LN16@run_dlgPro:
	mov	DWORD PTR tv86[ebp], 0
$LN17@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	push	241					; 000000f1H
	push	6264					; 00001878H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2827
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+1696]
	and	ecx, 1
	je	SHORT $LN18@run_dlgPro
	mov	DWORD PTR tv132[ebp], 1
	jmp	SHORT $LN19@run_dlgPro
$LN18@run_dlgPro:
	mov	DWORD PTR tv132[ebp], 0
$LN19@run_dlgPro:
	mov	edx, DWORD PTR tv132[ebp]
	push	edx
	push	6264					; 00001878H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2829
	cmp	DWORD PTR _cloudChoice$2[ebp], 2
	jne	SHORT $LN20@run_dlgPro
	mov	DWORD PTR tv145[ebp], 1
	jmp	SHORT $LN21@run_dlgPro
$LN20@run_dlgPro:
	mov	DWORD PTR tv145[ebp], 0
$LN21@run_dlgPro:
	push	0
	mov	edx, DWORD PTR tv145[ebp]
	push	edx
	push	241					; 000000f1H
	push	6265					; 00001879H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2830
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+1696]
	and	eax, 2
	je	SHORT $LN22@run_dlgPro
	mov	DWORD PTR tv159[ebp], 1
	jmp	SHORT $LN23@run_dlgPro
$LN22@run_dlgPro:
	mov	DWORD PTR tv159[ebp], 0
$LN23@run_dlgPro:
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	push	6265					; 00001879H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2832
	cmp	DWORD PTR _cloudChoice$2[ebp], 3
	jne	SHORT $LN24@run_dlgPro
	mov	DWORD PTR tv172[ebp], 1
	jmp	SHORT $LN25@run_dlgPro
$LN24@run_dlgPro:
	mov	DWORD PTR tv172[ebp], 0
$LN25@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv172[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6266					; 0000187aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2833
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+1696]
	and	edx, 4
	je	SHORT $LN26@run_dlgPro
	mov	DWORD PTR tv186[ebp], 1
	jmp	SHORT $LN27@run_dlgPro
$LN26@run_dlgPro:
	mov	DWORD PTR tv186[ebp], 0
$LN27@run_dlgPro:
	mov	eax, DWORD PTR tv186[ebp]
	push	eax
	push	6266					; 0000187aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2836
	jmp	$LN10@run_dlgPro
$LN8@run_dlgPro:
; Line 2840
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 6263				; 00001877H
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 3
	ja	$LN1@run_dlgPro
	mov	edx, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN41@run_dlgPro[edx*4]
$LN5@run_dlgPro:
; Line 2844
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+1692], 0
; Line 2845
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ ; SettingsOnCloudDlg::removeCloudChoice
; Line 2847
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	cmp	eax, DWORD PTR [edx+1692]
	je	SHORT $LN28@run_dlgPro
	mov	DWORD PTR tv204[ebp], OFFSET $SG146160
	jmp	SHORT $LN29@run_dlgPro
$LN28@run_dlgPro:
	mov	DWORD PTR tv204[ebp], OFFSET $SG146161
$LN29@run_dlgPro:
	mov	ecx, DWORD PTR tv204[ebp]
	push	ecx
	lea	ecx, DWORD PTR _message$5[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2848
	lea	ecx, DWORD PTR _message$5[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6261					; 00001875H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 2849
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _message$5[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 2850
	jmp	$LN10@run_dlgPro
$LN4@run_dlgPro:
; Line 2854
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+1692], 1
; Line 2855
	push	OFFSET $SG146163
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z ; SettingsOnCloudDlg::setCloudChoice
; Line 2857
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	cmp	ecx, DWORD PTR [eax+1692]
	je	SHORT $LN30@run_dlgPro
	mov	DWORD PTR tv225[ebp], OFFSET $SG146181
	jmp	SHORT $LN31@run_dlgPro
$LN30@run_dlgPro:
	mov	DWORD PTR tv225[ebp], OFFSET $SG146182
$LN31@run_dlgPro:
	mov	edx, DWORD PTR tv225[ebp]
	push	edx
	lea	ecx, DWORD PTR _message$3[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 2858
	lea	ecx, DWORD PTR _message$3[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6261					; 00001875H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 2859
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _message$3[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 2860
	jmp	$LN10@run_dlgPro
$LN3@run_dlgPro:
; Line 2864
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [edx+1692], 2
; Line 2865
	push	OFFSET $SG146184
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z ; SettingsOnCloudDlg::setCloudChoice
; Line 2867
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [eax+32]
	cmp	edx, DWORD PTR [ecx+1692]
	je	SHORT $LN32@run_dlgPro
	mov	DWORD PTR tv246[ebp], OFFSET $SG146202
	jmp	SHORT $LN33@run_dlgPro
$LN32@run_dlgPro:
	mov	DWORD PTR tv246[ebp], OFFSET $SG146203
$LN33@run_dlgPro:
	mov	eax, DWORD PTR tv246[ebp]
	push	eax
	lea	ecx, DWORD PTR _message$4[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 2868
	lea	ecx, DWORD PTR _message$4[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6261					; 00001875H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 2869
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _message$4[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 2870
	jmp	$LN10@run_dlgPro
$LN2@run_dlgPro:
; Line 2874
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+1692], 3
; Line 2875
	push	OFFSET $SG146205
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z ; SettingsOnCloudDlg::setCloudChoice
; Line 2877
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	cmp	eax, DWORD PTR [edx+1692]
	je	SHORT $LN34@run_dlgPro
	mov	DWORD PTR tv267[ebp], OFFSET $SG146223
	jmp	SHORT $LN35@run_dlgPro
$LN34@run_dlgPro:
	mov	DWORD PTR tv267[ebp], OFFSET $SG146224
$LN35@run_dlgPro:
	mov	ecx, DWORD PTR tv267[ebp]
	push	ecx
	lea	ecx, DWORD PTR _message$6[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 2878
	lea	ecx, DWORD PTR _message$6[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6261					; 00001875H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 2879
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _message$6[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 2880
	jmp	SHORT $LN10@run_dlgPro
$LN1@run_dlgPro:
; Line 2883
	xor	eax, eax
	jmp	SHORT $LN12@run_dlgPro
$LN10@run_dlgPro:
; Line 2889
	xor	eax, eax
$LN12@run_dlgPro:
; Line 2890
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN41@run_dlgPro:
	DD	$LN5@run_dlgPro
	DD	$LN4@run_dlgPro
	DD	$LN3@run_dlgPro
	DD	$LN2@run_dlgPro
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _message$5[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$1:
	lea	ecx, DWORD PTR _message$3[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$2:
	lea	ecx, DWORD PTR _message$4[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$3:
	lea	ecx, DWORD PTR _message$6[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z ENDP		; SettingsOnCloudDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -104						; size = 8
_point$2 = -96						; size = 8
tv420 = -88						; size = 4
_closer$3 = -84						; size = 4
_opener$4 = -80						; size = 4
tv453 = -76						; size = 4
tv439 = -72						; size = 4
tv433 = -68						; size = 4
tv391 = -64						; size = 4
_hdcStatic$5 = -60					; size = 4
_hwnd$6 = -56						; size = 4
tv283 = -52						; size = 4
tv269 = -48						; size = 4
tv157 = -44						; size = 4
_closer$7 = -40						; size = 4
_opener$8 = -36						; size = 4
$T9 = -32						; size = 4
$T10 = -28						; size = 4
_bgColor$11 = -24					; size = 4
tv67 = -20						; size = 4
_p$12 = -16						; size = 4
_p$13 = -12						; size = 4
_nppGUI$ = -8						; size = 4
_isChecked$14 = -2					; size = 1
_onSeveralLines$15 = -1					; size = 1
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?run_dlgProc@DelimiterSettingsDlg@@EAGHIIJ@Z PROC	; DelimiterSettingsDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2698
	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
; Line 2699
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	ecx, eax
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 2700
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN15@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN11@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 312		; 00000138H
	je	$LN14@run_dlgPro
	jmp	$LN16@run_dlgPro
$LN15@run_dlgPro:
; Line 2705
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movsx	dx, BYTE PTR [ecx+70]
	mov	eax, 2
	imul	ecx, eax, 0
	mov	WORD PTR _opener$8[ebp+ecx], dx
; Line 2706
	mov	DWORD PTR $T10[ebp], 2
	cmp	DWORD PTR $T10[ebp], 4
	jae	SHORT $LN20@run_dlgPro
	jmp	SHORT $LN21@run_dlgPro
$LN20@run_dlgPro:
	call	___report_rangecheckfailure
$LN21@run_dlgPro:
	xor	edx, edx
	mov	eax, DWORD PTR $T10[ebp]
	mov	WORD PTR _opener$8[ebp+eax], dx
; Line 2708
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movsx	dx, BYTE PTR [ecx+71]
	mov	eax, 2
	imul	ecx, eax, 0
	mov	WORD PTR _closer$7[ebp+ecx], dx
; Line 2709
	mov	DWORD PTR $T9[ebp], 2
	cmp	DWORD PTR $T9[ebp], 4
	jae	SHORT $LN22@run_dlgPro
	jmp	SHORT $LN23@run_dlgPro
$LN22@run_dlgPro:
	call	___report_rangecheckfailure
$LN23@run_dlgPro:
	xor	edx, edx
	mov	eax, DWORD PTR $T9[ebp]
	mov	WORD PTR _closer$7[ebp+eax], dx
; Line 2710
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR [ecx+72]
	mov	BYTE PTR _onSeveralLines$15[ebp], dl
; Line 2712
	push	0
	push	1
	push	197					; 000000c5H
	push	6253					; 0000186dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2713
	push	0
	push	1
	push	197					; 000000c5H
	push	6254					; 0000186eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2714
	lea	ecx, DWORD PTR _opener$8[ebp]
	push	ecx
	push	0
	push	12					; 0000000cH
	push	6253					; 0000186dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2715
	lea	ecx, DWORD PTR _closer$7[ebp]
	push	ecx
	push	0
	push	12					; 0000000cH
	push	6254					; 0000186eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2716
	movzx	ecx, BYTE PTR _onSeveralLines$15[ebp]
	test	ecx, ecx
	je	SHORT $LN24@run_dlgPro
	mov	DWORD PTR tv157[ebp], 1
	jmp	SHORT $LN25@run_dlgPro
$LN24@run_dlgPro:
	mov	DWORD PTR tv157[ebp], 0
$LN25@run_dlgPro:
	push	0
	mov	edx, DWORD PTR tv157[ebp]
	push	edx
	push	241					; 000000f1H
	push	6256					; 00001870H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2718
	push	0
	push	6257					; 00001871H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	ecx, DWORD PTR _point$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z ; StaticDialog::getTopPoint
; Line 2719
	mov	edx, DWORD PTR _point$2[ebp]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], edx
; Line 2720
	mov	ecx, DWORD PTR _point$2[ebp+4]
	sub	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 2722
	push	0
	push	6258					; 00001872H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z ; StaticDialog::getTopPoint
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _point$2[ebp], ecx
	mov	DWORD PTR _point$2[ebp+4], edx
; Line 2723
	mov	eax, DWORD PTR _point$2[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 2724
	mov	edx, DWORD PTR _point$2[ebp+4]
	sub	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], edx
; Line 2726
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	push	6254					; 0000186eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 2727
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+56]
	sub	eax, DWORD PTR [edx+48]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 2728
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	sub	ecx, DWORD PTR [eax+52]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 2730
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	push	6255					; 0000186fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 2731
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+72]
	sub	edx, DWORD PTR [ecx+64]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], edx
; Line 2732
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+76]
	sub	eax, DWORD PTR [edx+68]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 2735
	movzx	edx, BYTE PTR _onSeveralLines$15[ebp]
	test	edx, edx
	je	SHORT $LN26@run_dlgPro
	mov	DWORD PTR tv269[ebp], 5
	jmp	SHORT $LN27@run_dlgPro
$LN26@run_dlgPro:
	mov	DWORD PTR tv269[ebp], 0
$LN27@run_dlgPro:
	mov	eax, DWORD PTR tv269[ebp]
	push	eax
	push	6258					; 00001872H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 2737
	movzx	eax, BYTE PTR _onSeveralLines$15[ebp]
	test	eax, eax
	je	SHORT $LN28@run_dlgPro
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	DWORD PTR tv283[ebp], ecx
	jmp	SHORT $LN29@run_dlgPro
$LN28@run_dlgPro:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR tv283[ebp], edx
$LN29@run_dlgPro:
	mov	eax, DWORD PTR tv283[ebp]
	mov	DWORD PTR _p$13[ebp], eax
; Line 2738
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _p$13[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _p$13[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	6254					; 0000186eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 2739
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	mov	eax, DWORD PTR _p$13[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _p$13[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	lea	eax, DWORD PTR [eax+edx+4]
	push	eax
	push	6255					; 0000186fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 2741
	mov	eax, 1
	jmp	$LN19@run_dlgPro
$LN14@run_dlgPro:
; Line 2746
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR _hdcStatic$5[ebp], eax
; Line 2747
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hwnd$6[ebp], ecx
; Line 2748
	push	6257					; 00001871H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	DWORD PTR _hwnd$6[ebp], eax
	je	SHORT $LN12@run_dlgPro
	push	6258					; 00001872H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	DWORD PTR _hwnd$6[ebp], eax
	jne	SHORT $LN13@run_dlgPro
$LN12@run_dlgPro:
; Line 2750
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?getCtrlBgColor@@YAKPAUHWND__@@@Z	; getCtrlBgColor
	add	esp, 4
	mov	DWORD PTR _bgColor$11[ebp], eax
; Line 2751
	push	0
	mov	edx, DWORD PTR _hdcStatic$5[ebp]
	push	edx
	call	DWORD PTR __imp__SetTextColor@8
; Line 2752
	mov	eax, DWORD PTR _bgColor$11[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	sub	ecx, 30					; 0000001eH
	movzx	edx, cl
	movzx	eax, WORD PTR _bgColor$11[ebp]
	sar	eax, 8
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	sub	ecx, 30					; 0000001eH
	movzx	eax, cl
	shl	eax, 8
	or	edx, eax
	mov	ecx, DWORD PTR _bgColor$11[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	movzx	eax, cl
	sub	eax, 30					; 0000001eH
	movzx	ecx, al
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	push	edx
	mov	edx, DWORD PTR _hdcStatic$5[ebp]
	push	edx
	call	DWORD PTR __imp__SetBkColor@8
; Line 2753
	mov	eax, 1
	jmp	$LN19@run_dlgPro
$LN13@run_dlgPro:
; Line 2755
	xor	eax, eax
	jmp	$LN19@run_dlgPro
$LN11@run_dlgPro:
; Line 2760
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 768				; 00000300H
	jne	$LN10@run_dlgPro
; Line 2762
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR tv391[ebp], eax
	cmp	DWORD PTR tv391[ebp], 6253		; 0000186dH
	je	SHORT $LN7@run_dlgPro
	cmp	DWORD PTR tv391[ebp], 6254		; 0000186eH
	je	SHORT $LN6@run_dlgPro
	jmp	SHORT $LN5@run_dlgPro
$LN7@run_dlgPro:
; Line 2767
	lea	ecx, DWORD PTR _opener$4[ebp]
	push	ecx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6253					; 0000186dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2768
	mov	ecx, 2
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR _opener$4[ebp+edx]
	mov	BYTE PTR [eax+70], cl
; Line 2769
	mov	eax, 1
	jmp	$LN19@run_dlgPro
$LN6@run_dlgPro:
; Line 2774
	lea	edx, DWORD PTR _closer$3[ebp]
	push	edx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6254					; 0000186eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2775
	mov	edx, 2
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR _closer$3[ebp+eax]
	mov	BYTE PTR [ecx+71], dl
; Line 2776
	mov	eax, 1
	jmp	$LN19@run_dlgPro
$LN5@run_dlgPro:
; Line 2779
	xor	eax, eax
	jmp	$LN19@run_dlgPro
$LN10@run_dlgPro:
; Line 2783
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv420[ebp], eax
	cmp	DWORD PTR tv420[ebp], 6256		; 00001870H
	je	SHORT $LN2@run_dlgPro
	jmp	$LN1@run_dlgPro
$LN2@run_dlgPro:
; Line 2788
	push	0
	push	0
	push	240					; 000000f0H
	push	6256					; 00001870H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN30@run_dlgPro
	mov	DWORD PTR tv433[ebp], 1
	jmp	SHORT $LN31@run_dlgPro
$LN30@run_dlgPro:
	mov	DWORD PTR tv433[ebp], 0
$LN31@run_dlgPro:
	mov	al, BYTE PTR tv433[ebp]
	mov	BYTE PTR _isChecked$14[ebp], al
; Line 2789
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR _isChecked$14[ebp]
	mov	BYTE PTR [ecx+72], dl
; Line 2791
	movzx	eax, BYTE PTR _isChecked$14[ebp]
	test	eax, eax
	je	SHORT $LN32@run_dlgPro
	mov	DWORD PTR tv439[ebp], 5
	jmp	SHORT $LN33@run_dlgPro
$LN32@run_dlgPro:
	mov	DWORD PTR tv439[ebp], 0
$LN33@run_dlgPro:
	mov	ecx, DWORD PTR tv439[ebp]
	push	ecx
	push	6258					; 00001872H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 2793
	movzx	ecx, BYTE PTR _isChecked$14[ebp]
	test	ecx, ecx
	je	SHORT $LN34@run_dlgPro
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 40					; 00000028H
	mov	DWORD PTR tv453[ebp], edx
	jmp	SHORT $LN35@run_dlgPro
$LN34@run_dlgPro:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv453[ebp], eax
$LN35@run_dlgPro:
	mov	ecx, DWORD PTR tv453[ebp]
	mov	DWORD PTR _p$12[ebp], ecx
; Line 2794
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	mov	eax, DWORD PTR _p$12[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _p$12[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	6254					; 0000186eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 2795
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	mov	ecx, DWORD PTR _p$12[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _p$12[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	lea	ecx, DWORD PTR [ecx+eax+4]
	push	ecx
	push	6255					; 0000186fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 2797
	mov	eax, 1
	jmp	SHORT $LN19@run_dlgPro
$LN1@run_dlgPro:
; Line 2801
	xor	eax, eax
	jmp	SHORT $LN19@run_dlgPro
$LN16@run_dlgPro:
; Line 2807
	xor	eax, eax
$LN19@run_dlgPro:
; Line 2808
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?run_dlgProc@DelimiterSettingsDlg@@EAGHIIJ@Z ENDP	; DelimiterSettingsDlg::run_dlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv128 = -28						; size = 4
tv84 = -24						; size = 4
tv72 = -20						; size = 4
tv67 = -16						; size = 4
tv69 = -12						; size = 4
_multiInstSetting$1 = -8				; size = 4
_nppGUI$ = -4						; size = 4
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@MultiInstDlg@@EAGHIIJ@Z PROC		; MultiInstDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2652
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 2653
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	ecx, eax
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 2654
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN8@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN7@run_dlgPro
	jmp	$LN9@run_dlgPro
$LN8@run_dlgPro:
; Line 2658
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+1680]
	mov	DWORD PTR _multiInstSetting$1[ebp], edx
; Line 2660
	cmp	DWORD PTR _multiInstSetting$1[ebp], 1
	jne	SHORT $LN13@run_dlgPro
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN14@run_dlgPro
$LN13@run_dlgPro:
	mov	DWORD PTR tv72[ebp], 0
$LN14@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	push	241					; 000000f1H
	push	6152					; 00001808H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2661
	cmp	DWORD PTR _multiInstSetting$1[ebp], 2
	jne	SHORT $LN15@run_dlgPro
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN16@run_dlgPro
$LN15@run_dlgPro:
	mov	DWORD PTR tv84[ebp], 0
$LN16@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv84[ebp]
	push	eax
	push	241					; 000000f1H
	push	6153					; 00001809H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2662
	cmp	DWORD PTR _multiInstSetting$1[ebp], 0
	jne	SHORT $LN17@run_dlgPro
	mov	DWORD PTR tv128[ebp], 1
	jmp	SHORT $LN18@run_dlgPro
$LN17@run_dlgPro:
	mov	DWORD PTR tv128[ebp], 0
$LN18@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv128[ebp]
	push	eax
	push	241					; 000000f1H
	push	6154					; 0000180aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2664
	jmp	SHORT $LN9@run_dlgPro
$LN7@run_dlgPro:
; Line 2668
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	cmp	DWORD PTR tv69[ebp], 6152		; 00001808H
	je	SHORT $LN4@run_dlgPro
	cmp	DWORD PTR tv69[ebp], 6153		; 00001809H
	je	SHORT $LN3@run_dlgPro
	cmp	DWORD PTR tv69[ebp], 6154		; 0000180aH
	je	SHORT $LN2@run_dlgPro
	jmp	SHORT $LN1@run_dlgPro
$LN4@run_dlgPro:
; Line 2672
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+1680], 1
; Line 2674
	jmp	SHORT $LN9@run_dlgPro
$LN3@run_dlgPro:
; Line 2678
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [edx+1680], 2
; Line 2680
	jmp	SHORT $LN9@run_dlgPro
$LN2@run_dlgPro:
; Line 2684
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+1680], 0
; Line 2686
	jmp	SHORT $LN9@run_dlgPro
$LN1@run_dlgPro:
; Line 2688
	xor	eax, eax
	jmp	SHORT $LN11@run_dlgPro
$LN9@run_dlgPro:
; Line 2694
	xor	eax, eax
$LN11@run_dlgPro:
; Line 2695
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?run_dlgProc@MultiInstDlg@@EAGHIIJ@Z ENDP		; MultiInstDlg::run_dlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_NB_MAX_CHAR$2 = -276					; size = 4
_NB_MIN_CHAR$3 = -272					; size = 4
_p$4 = -268						; size = 8
_pNppParam$ = -260					; size = 4
$T5 = -256						; size = 2
$T6 = -254						; size = 2
$T7 = -252						; size = 4
$T8 = -246						; size = 2
$T9 = -244						; size = 4
tv1021 = -240						; size = 4
tv414 = -236						; size = 4
tv254 = -232						; size = 4
tv356 = -228						; size = 4
tv298 = -224						; size = 4
tv996 = -220						; size = 4
$T10 = -216						; size = 4
tv991 = -212						; size = 4
tv385 = -208						; size = 4
tv985 = -204						; size = 4
tv327 = -200						; size = 4
tv979 = -196						; size = 4
tv269 = -192						; size = 4
tv973 = -188						; size = 4
tv152 = -184						; size = 4
tv966 = -180						; size = 4
tv67 = -176						; size = 4
tv917 = -172						; size = 4
tv778 = -168						; size = 4
tv146 = -164						; size = 4
_nbMatchedPair$11 = -160				; size = 4
_selectedID$12 = -156					; size = 4
_openChar$13 = -152					; size = 4
_closeChar$14 = -148					; size = 4
tv733 = -144						; size = 4
tv583 = -140						; size = 4
_label$15 = -136					; size = 4
_size$16 = -132						; size = 4
$T17 = -126						; size = 1
$T18 = -125						; size = 1
$T19 = -124						; size = 1
$T20 = -123						; size = 1
$T21 = -122						; size = 1
$T22 = -121						; size = 1
_i$23 = -120						; size = 4
_isEnableAutoC$24 = -113				; size = 1
_opener$25 = -112					; size = 4
_closer$26 = -108					; size = 4
_isEnableAutoC$27 = -101				; size = 1
_nppGUI$ = -100						; size = 4
_isChecked$28 = -93					; size = 1
_valDlg$29 = -92					; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z PROC		; AutoCompletionDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2384
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2385
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 2386
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 2387
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN53@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN33@run_dlgPro
	jmp	$LN54@run_dlgPro
$LN53@run_dlgPro:
; Line 2391
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+496]
	push	edx
	push	6812					; 00001a9cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 2392
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [edx+4]
	call	eax
; Line 2393
	push	0
	push	6812					; 00001a9cH
	push	6812					; 00001a9cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?create@URLCtrl@@QAEXPAUHWND__@@H0@Z	; URLCtrl::create
; Line 2395
	mov	eax, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [eax+492], 0
	je	SHORT $LN58@run_dlgPro
	mov	DWORD PTR tv146[ebp], 1
	jmp	SHORT $LN59@run_dlgPro
$LN58@run_dlgPro:
	mov	DWORD PTR tv146[ebp], 0
$LN59@run_dlgPro:
	mov	cl, BYTE PTR tv146[ebp]
	mov	BYTE PTR _isEnableAutoC$24[ebp], cl
; Line 2397
	movzx	edx, BYTE PTR _isEnableAutoC$24[ebp]
	test	edx, edx
	je	SHORT $LN60@run_dlgPro
	mov	DWORD PTR tv152[ebp], 1
	jmp	SHORT $LN61@run_dlgPro
$LN60@run_dlgPro:
	mov	DWORD PTR tv152[ebp], 0
$LN61@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv152[ebp]
	push	eax
	push	241					; 000000f1H
	push	6808					; 00001a98H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2399
	mov	DWORD PTR _selectedID$12[ebp], 6816	; 00001aa0H
; Line 2400
	mov	eax, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [eax+492], 1
	jne	SHORT $LN52@run_dlgPro
; Line 2401
	mov	DWORD PTR _selectedID$12[ebp], 6809	; 00001a99H
; Line 2402
	jmp	SHORT $LN51@run_dlgPro
$LN52@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [ecx+492], 2
	jne	SHORT $LN50@run_dlgPro
; Line 2403
	mov	DWORD PTR _selectedID$12[ebp], 6810	; 00001a9aH
; Line 2404
	jmp	SHORT $LN51@run_dlgPro
$LN50@run_dlgPro:
	mov	edx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [edx+492], 3
	jne	SHORT $LN51@run_dlgPro
; Line 2405
	mov	DWORD PTR _selectedID$12[ebp], 6816	; 00001aa0H
$LN51@run_dlgPro:
; Line 2407
	push	0
	push	1
	push	241					; 000000f1H
	mov	eax, DWORD PTR _selectedID$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2409
	movzx	eax, BYTE PTR _isEnableAutoC$24[ebp]
	test	eax, eax
	jne	$LN47@run_dlgPro
; Line 2411
	push	0
	push	6809					; 00001a99H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2412
	push	0
	push	6810					; 00001a9aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2413
	push	0
	push	6816					; 00001aa0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2414
	push	0
	push	6811					; 00001a9bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2415
	push	0
	push	6812					; 00001a9cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2416
	push	0
	push	6813					; 00001a9dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2417
	push	0
	push	6814					; 00001a9eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
$LN47@run_dlgPro:
; Line 2419
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+500]
	test	ecx, ecx
	je	SHORT $LN62@run_dlgPro
	mov	DWORD PTR tv254[ebp], 1
	jmp	SHORT $LN63@run_dlgPro
$LN62@run_dlgPro:
	mov	DWORD PTR tv254[ebp], 0
$LN63@run_dlgPro:
	push	0
	mov	edx, DWORD PTR tv254[ebp]
	push	edx
	push	241					; 000000f1H
	push	6815					; 00001a9fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2421
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+537]
	test	eax, eax
	je	SHORT $LN64@run_dlgPro
	mov	DWORD PTR tv269[ebp], 1
	jmp	SHORT $LN65@run_dlgPro
$LN64@run_dlgPro:
	mov	DWORD PTR tv269[ebp], 0
$LN65@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv269[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6852					; 00001ac4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2422
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+537]
	test	edx, edx
	je	SHORT $LN46@run_dlgPro
; Line 2423
	push	OFFSET $SG145655
	push	0
	push	12					; 0000000cH
	push	6852					; 00001ac4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN46@run_dlgPro:
; Line 2425
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+538]
	test	eax, eax
	je	SHORT $LN66@run_dlgPro
	mov	DWORD PTR tv298[ebp], 1
	jmp	SHORT $LN67@run_dlgPro
$LN66@run_dlgPro:
	mov	DWORD PTR tv298[ebp], 0
$LN67@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv298[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6853					; 00001ac5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2426
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+538]
	test	edx, edx
	je	SHORT $LN45@run_dlgPro
; Line 2427
	push	OFFSET $SG145658
	push	0
	push	12					; 0000000cH
	push	6853					; 00001ac5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN45@run_dlgPro:
; Line 2429
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+539]
	test	eax, eax
	je	SHORT $LN68@run_dlgPro
	mov	DWORD PTR tv327[ebp], 1
	jmp	SHORT $LN69@run_dlgPro
$LN68@run_dlgPro:
	mov	DWORD PTR tv327[ebp], 0
$LN69@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv327[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6854					; 00001ac6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2430
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+539]
	test	edx, edx
	je	SHORT $LN44@run_dlgPro
; Line 2431
	push	OFFSET $SG145661
	push	0
	push	12					; 0000000cH
	push	6854					; 00001ac6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN44@run_dlgPro:
; Line 2433
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+540]
	test	eax, eax
	je	SHORT $LN70@run_dlgPro
	mov	DWORD PTR tv356[ebp], 1
	jmp	SHORT $LN71@run_dlgPro
$LN70@run_dlgPro:
	mov	DWORD PTR tv356[ebp], 0
$LN71@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv356[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6856					; 00001ac8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2434
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+540]
	test	edx, edx
	je	SHORT $LN43@run_dlgPro
; Line 2435
	push	OFFSET $SG145664
	push	0
	push	12					; 0000000cH
	push	6856					; 00001ac8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN43@run_dlgPro:
; Line 2437
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+541]
	test	eax, eax
	je	SHORT $LN72@run_dlgPro
	mov	DWORD PTR tv385[ebp], 1
	jmp	SHORT $LN73@run_dlgPro
$LN72@run_dlgPro:
	mov	DWORD PTR tv385[ebp], 0
$LN73@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv385[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6855					; 00001ac7H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2438
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+541]
	test	edx, edx
	je	SHORT $LN42@run_dlgPro
; Line 2439
	push	OFFSET $SG145667
	push	0
	push	12					; 0000000cH
	push	6855					; 00001ac7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN42@run_dlgPro:
; Line 2441
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+536]
	test	eax, eax
	je	SHORT $LN74@run_dlgPro
	mov	DWORD PTR tv414[ebp], 1
	jmp	SHORT $LN75@run_dlgPro
$LN74@run_dlgPro:
	mov	DWORD PTR tv414[ebp], 0
$LN75@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv414[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6857					; 00001ac9H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2443
	push	0
	push	1
	push	197					; 000000c5H
	push	6861					; 00001acdH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2444
	push	0
	push	1
	push	197					; 000000c5H
	push	6862					; 00001aceH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2445
	push	0
	push	1
	push	197					; 000000c5H
	push	6864					; 00001ad0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2446
	push	0
	push	1
	push	197					; 000000c5H
	push	6865					; 00001ad1H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2447
	push	0
	push	1
	push	197					; 000000c5H
	push	6867					; 00001ad3H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2448
	push	0
	push	1
	push	197					; 000000c5H
	push	6868					; 00001ad4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2450
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 520				; 00000208H
	call	?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size
	mov	DWORD PTR _nbMatchedPair$11[ebp], eax
; Line 2451
	cmp	DWORD PTR _nbMatchedPair$11[ebp], 3
	jbe	SHORT $LN41@run_dlgPro
; Line 2452
	mov	DWORD PTR _nbMatchedPair$11[ebp], 3
$LN41@run_dlgPro:
; Line 2453
	mov	DWORD PTR _i$23[ebp], 0
	jmp	SHORT $LN40@run_dlgPro
$LN39@run_dlgPro:
	mov	ecx, DWORD PTR _i$23[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$23[ebp], ecx
$LN40@run_dlgPro:
	mov	edx, DWORD PTR _i$23[ebp]
	cmp	edx, DWORD PTR _nbMatchedPair$11[ebp]
	jae	$LN38@run_dlgPro
; Line 2456
	mov	eax, DWORD PTR _i$23[ebp]
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 520				; 00000208H
	call	??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::operator[]
	movsx	cx, BYTE PTR [eax]
	mov	edx, 2
	imul	eax, edx, 0
	mov	WORD PTR _openChar$13[ebp+eax], cx
; Line 2457
	mov	DWORD PTR $T10[ebp], 2
	cmp	DWORD PTR $T10[ebp], 4
	jae	SHORT $LN76@run_dlgPro
	jmp	SHORT $LN77@run_dlgPro
$LN76@run_dlgPro:
	call	___report_rangecheckfailure
$LN77@run_dlgPro:
	xor	ecx, ecx
	mov	edx, DWORD PTR $T10[ebp]
	mov	WORD PTR _openChar$13[ebp+edx], cx
; Line 2459
	mov	eax, DWORD PTR _i$23[ebp]
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 520				; 00000208H
	call	??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::operator[]
	movsx	cx, BYTE PTR [eax+1]
	mov	edx, 2
	imul	eax, edx, 0
	mov	WORD PTR _closeChar$14[ebp+eax], cx
; Line 2460
	mov	DWORD PTR $T9[ebp], 2
	cmp	DWORD PTR $T9[ebp], 4
	jae	SHORT $LN78@run_dlgPro
	jmp	SHORT $LN79@run_dlgPro
$LN78@run_dlgPro:
	call	___report_rangecheckfailure
$LN79@run_dlgPro:
	xor	ecx, ecx
	mov	edx, DWORD PTR $T9[ebp]
	mov	WORD PTR _closeChar$14[ebp+edx], cx
; Line 2462
	cmp	DWORD PTR _i$23[ebp], 0
	jne	SHORT $LN37@run_dlgPro
; Line 2464
	lea	eax, DWORD PTR _openChar$13[ebp]
	push	eax
	push	0
	push	12					; 0000000cH
	push	6861					; 00001acdH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2465
	lea	eax, DWORD PTR _closeChar$14[ebp]
	push	eax
	push	0
	push	12					; 0000000cH
	push	6862					; 00001aceH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	jmp	SHORT $LN36@run_dlgPro
$LN37@run_dlgPro:
; Line 2467
	cmp	DWORD PTR _i$23[ebp], 1
	jne	SHORT $LN36@run_dlgPro
; Line 2469
	lea	eax, DWORD PTR _openChar$13[ebp]
	push	eax
	push	0
	push	12					; 0000000cH
	push	6864					; 00001ad0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2470
	lea	eax, DWORD PTR _closeChar$14[ebp]
	push	eax
	push	0
	push	12					; 0000000cH
	push	6865					; 00001ad1H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN36@run_dlgPro:
; Line 2472
	cmp	DWORD PTR _i$23[ebp], 2
	jne	SHORT $LN34@run_dlgPro
; Line 2474
	lea	eax, DWORD PTR _openChar$13[ebp]
	push	eax
	push	0
	push	12					; 0000000cH
	push	6867					; 00001ad3H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2475
	lea	eax, DWORD PTR _closeChar$14[ebp]
	push	eax
	push	0
	push	12					; 0000000cH
	push	6868					; 00001ad4H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN34@run_dlgPro:
; Line 2477
	jmp	$LN39@run_dlgPro
$LN38@run_dlgPro:
; Line 2479
	mov	eax, 1
	jmp	$LN57@run_dlgPro
$LN33@run_dlgPro:
; Line 2483
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 768				; 00000300H
	jne	$LN32@run_dlgPro
; Line 2485
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR tv583[ebp], eax
	mov	ecx, DWORD PTR tv583[ebp]
	sub	ecx, 6861				; 00001acdH
	mov	DWORD PTR tv583[ebp], ecx
	cmp	DWORD PTR tv583[ebp], 7
	ja	$LN32@run_dlgPro
	mov	edx, DWORD PTR tv583[ebp]
	movzx	eax, BYTE PTR $LN99@run_dlgPro[edx]
	jmp	DWORD PTR $LN102@run_dlgPro[eax*4]
$LN29@run_dlgPro:
; Line 2494
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 504				; 000001f8H
	call	?clear@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEXXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::clear
; Line 2496
	xor	ecx, ecx
	mov	WORD PTR _opener$25[ebp], cx
	xor	edx, edx
	mov	WORD PTR _opener$25[ebp+2], dx
; Line 2497
	xor	eax, eax
	mov	WORD PTR _closer$26[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _closer$26[ebp+2], cx
; Line 2499
	lea	edx, DWORD PTR _opener$25[ebp]
	push	edx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6861					; 00001acdH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2500
	lea	edx, DWORD PTR _closer$26[ebp]
	push	edx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6862					; 00001aceH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2501
	mov	edx, 2
	imul	eax, edx, 0
	movzx	ecx, WORD PTR _opener$25[ebp+eax]
	cmp	ecx, 128				; 00000080H
	jge	SHORT $LN28@run_dlgPro
	mov	edx, 2
	imul	eax, edx, 0
	movzx	ecx, WORD PTR _opener$25[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN28@run_dlgPro
	mov	edx, 2
	imul	eax, edx, 0
	movzx	ecx, WORD PTR _closer$26[ebp+eax]
	cmp	ecx, 128				; 00000080H
	jge	SHORT $LN28@run_dlgPro
	mov	edx, 2
	imul	eax, edx, 0
	movzx	ecx, WORD PTR _closer$26[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN28@run_dlgPro
; Line 2502
	mov	edx, 2
	imul	eax, edx, 0
	mov	cl, BYTE PTR _closer$26[ebp+eax]
	mov	BYTE PTR $T22[ebp], cl
	mov	edx, 2
	imul	eax, edx, 0
	mov	cl, BYTE PTR _opener$25[ebp+eax]
	mov	BYTE PTR $T20[ebp], cl
	lea	edx, DWORD PTR $T22[ebp]
	push	edx
	lea	eax, DWORD PTR $T20[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z	; std::pair<char,char>::pair<char,char><char,char,void>
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 504				; 000001f8H
	call	?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::push_back
$LN28@run_dlgPro:
; Line 2504
	lea	ecx, DWORD PTR _opener$25[ebp]
	push	ecx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6864					; 00001ad0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2505
	lea	ecx, DWORD PTR _closer$26[ebp]
	push	ecx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6865					; 00001ad1H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2506
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR _opener$25[ebp+edx]
	cmp	eax, 128				; 00000080H
	jge	SHORT $LN27@run_dlgPro
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR _opener$25[ebp+edx]
	test	eax, eax
	je	SHORT $LN27@run_dlgPro
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR _closer$26[ebp+edx]
	cmp	eax, 128				; 00000080H
	jge	SHORT $LN27@run_dlgPro
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR _closer$26[ebp+edx]
	test	eax, eax
	je	SHORT $LN27@run_dlgPro
; Line 2507
	mov	ecx, 2
	imul	edx, ecx, 0
	mov	al, BYTE PTR _closer$26[ebp+edx]
	mov	BYTE PTR $T17[ebp], al
	mov	ecx, 2
	imul	edx, ecx, 0
	mov	al, BYTE PTR _opener$25[ebp+edx]
	mov	BYTE PTR $T21[ebp], al
	lea	ecx, DWORD PTR $T17[ebp]
	push	ecx
	lea	edx, DWORD PTR $T21[ebp]
	push	edx
	lea	ecx, DWORD PTR $T6[ebp]
	call	??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z	; std::pair<char,char>::pair<char,char><char,char,void>
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 504				; 000001f8H
	call	?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::push_back
$LN27@run_dlgPro:
; Line 2509
	lea	eax, DWORD PTR _opener$25[ebp]
	push	eax
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6867					; 00001ad3H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2510
	lea	eax, DWORD PTR _closer$26[ebp]
	push	eax
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6868					; 00001ad4H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2511
	mov	eax, 2
	imul	ecx, eax, 0
	movzx	edx, WORD PTR _opener$25[ebp+ecx]
	cmp	edx, 128				; 00000080H
	jge	SHORT $LN26@run_dlgPro
	mov	eax, 2
	imul	ecx, eax, 0
	movzx	edx, WORD PTR _opener$25[ebp+ecx]
	test	edx, edx
	je	SHORT $LN26@run_dlgPro
	mov	eax, 2
	imul	ecx, eax, 0
	movzx	edx, WORD PTR _closer$26[ebp+ecx]
	cmp	edx, 128				; 00000080H
	jge	SHORT $LN26@run_dlgPro
	mov	eax, 2
	imul	ecx, eax, 0
	movzx	edx, WORD PTR _closer$26[ebp+ecx]
	test	edx, edx
	je	SHORT $LN26@run_dlgPro
; Line 2512
	mov	eax, 2
	imul	ecx, eax, 0
	mov	dl, BYTE PTR _closer$26[ebp+ecx]
	mov	BYTE PTR $T18[ebp], dl
	mov	eax, 2
	imul	ecx, eax, 0
	mov	dl, BYTE PTR _opener$25[ebp+ecx]
	mov	BYTE PTR $T19[ebp], dl
	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	lea	ecx, DWORD PTR $T19[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T8[ebp]
	call	??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z	; std::pair<char,char>::pair<char,char><char,char,void>
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 504				; 000001f8H
	call	?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::push_back
$LN26@run_dlgPro:
; Line 2514
	mov	eax, 1
	jmp	$LN57@run_dlgPro
$LN32@run_dlgPro:
; Line 2519
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv733[ebp], edx
	mov	eax, DWORD PTR tv733[ebp]
	sub	eax, 6808				; 00001a98H
	mov	DWORD PTR tv733[ebp], eax
	cmp	DWORD PTR tv733[ebp], 49		; 00000031H
	ja	$LN1@run_dlgPro
	mov	ecx, DWORD PTR tv733[ebp]
	movzx	edx, BYTE PTR $LN100@run_dlgPro[ecx]
	jmp	DWORD PTR $LN103@run_dlgPro[edx*4]
$LN23@run_dlgPro:
; Line 2524
	push	0
	push	0
	push	240					; 000000f0H
	push	6808					; 00001a98H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN80@run_dlgPro
	mov	DWORD PTR tv778[ebp], 1
	jmp	SHORT $LN81@run_dlgPro
$LN80@run_dlgPro:
	mov	DWORD PTR tv778[ebp], 0
$LN81@run_dlgPro:
	mov	dl, BYTE PTR tv778[ebp]
	mov	BYTE PTR _isEnableAutoC$27[ebp], dl
; Line 2526
	movzx	eax, BYTE PTR _isEnableAutoC$27[ebp]
	test	eax, eax
	je	SHORT $LN22@run_dlgPro
; Line 2528
	push	0
	push	1
	push	241					; 000000f1H
	push	6816					; 00001aa0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2529
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+492], 3
; Line 2531
	jmp	SHORT $LN21@run_dlgPro
$LN22@run_dlgPro:
; Line 2533
	push	0
	push	0
	push	241					; 000000f1H
	push	6809					; 00001a99H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2534
	push	0
	push	0
	push	241					; 000000f1H
	push	6810					; 00001a9aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2535
	push	0
	push	0
	push	241					; 000000f1H
	push	6816					; 00001aa0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2536
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+492], 0
$LN21@run_dlgPro:
; Line 2538
	movzx	edx, BYTE PTR _isEnableAutoC$27[ebp]
	push	edx
	push	6809					; 00001a99H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2539
	movzx	edx, BYTE PTR _isEnableAutoC$27[ebp]
	push	edx
	push	6810					; 00001a9aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2540
	movzx	edx, BYTE PTR _isEnableAutoC$27[ebp]
	push	edx
	push	6816					; 00001aa0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2541
	movzx	edx, BYTE PTR _isEnableAutoC$27[ebp]
	push	edx
	push	6811					; 00001a9bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2542
	movzx	edx, BYTE PTR _isEnableAutoC$27[ebp]
	push	edx
	push	6812					; 00001a9cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2543
	movzx	edx, BYTE PTR _isEnableAutoC$27[ebp]
	push	edx
	push	6813					; 00001a9dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2544
	movzx	edx, BYTE PTR _isEnableAutoC$27[ebp]
	push	edx
	push	6814					; 00001a9eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2545
	mov	eax, 1
	jmp	$LN57@run_dlgPro
$LN20@run_dlgPro:
; Line 2550
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [edx+492], 1
; Line 2551
	mov	eax, 1
	jmp	$LN57@run_dlgPro
$LN19@run_dlgPro:
; Line 2556
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+492], 2
; Line 2557
	mov	eax, 1
	jmp	$LN57@run_dlgPro
$LN18@run_dlgPro:
; Line 2562
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+492], 3
; Line 2563
	mov	eax, 1
	jmp	$LN57@run_dlgPro
$LN17@run_dlgPro:
; Line 2568
	push	0
	push	0
	push	240					; 000000f0H
	push	6815					; 00001a9fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN82@run_dlgPro
	mov	DWORD PTR tv917[ebp], 1
	jmp	SHORT $LN83@run_dlgPro
$LN82@run_dlgPro:
	mov	DWORD PTR tv917[ebp], 0
$LN83@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv917[ebp]
	mov	BYTE PTR [ecx+500], dl
; Line 2569
	mov	eax, 1
	jmp	$LN57@run_dlgPro
$LN16@run_dlgPro:
; Line 2574
	mov	DWORD PTR _NB_MIN_CHAR$3[ebp], 1
; Line 2575
	mov	DWORD PTR _NB_MAX_CHAR$2[ebp], 9
; Line 2577
	lea	ecx, DWORD PTR _valDlg$29[ebp]
	call	??0ValueDlg@@QAE@XZ			; ValueDlg::ValueDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2579
	push	OFFSET $SG145846
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+496]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	0
	lea	ecx, DWORD PTR _valDlg$29[ebp]
	call	?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z ; ValueDlg::init
; Line 2580
	push	1
	lea	ecx, DWORD PTR _valDlg$29[ebp]
	call	?setNBNumber@ValueDlg@@QAEXH@Z		; ValueDlg::setNBNumber
; Line 2583
	lea	ecx, DWORD PTR _p$4[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCursorPos@4
; Line 2585
	push	0
	mov	edx, DWORD PTR _p$4[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _valDlg$29[ebp]
	call	?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z	; ValueDlg::doDialog
	mov	DWORD PTR _size$16[ebp], eax
; Line 2586
	cmp	DWORD PTR _size$16[ebp], -1
	je	SHORT $LN15@run_dlgPro
; Line 2588
	cmp	DWORD PTR _size$16[ebp], 9
	jle	SHORT $LN14@run_dlgPro
; Line 2589
	mov	DWORD PTR _size$16[ebp], 9
	jmp	SHORT $LN13@run_dlgPro
$LN14@run_dlgPro:
; Line 2590
	cmp	DWORD PTR _size$16[ebp], 1
	jge	SHORT $LN13@run_dlgPro
; Line 2591
	mov	DWORD PTR _size$16[ebp], 1
$LN13@run_dlgPro:
; Line 2593
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR _size$16[ebp]
	mov	DWORD PTR [ecx+496], edx
; Line 2594
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+496]
	push	ecx
	push	6812					; 00001a9cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
$LN15@run_dlgPro:
; Line 2596
	mov	DWORD PTR $T7[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _valDlg$29[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN57@run_dlgPro
$LN11@run_dlgPro:
; Line 2605
	push	0
	push	0
	push	240					; 000000f0H
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN84@run_dlgPro
	mov	DWORD PTR tv966[ebp], 1
	jmp	SHORT $LN85@run_dlgPro
$LN84@run_dlgPro:
	mov	DWORD PTR tv966[ebp], 0
$LN85@run_dlgPro:
	mov	cl, BYTE PTR tv966[ebp]
	mov	BYTE PTR _isChecked$28[ebp], cl
; Line 2607
	cmp	DWORD PTR _wParam$[ebp], 6852		; 00001ac4H
	jne	SHORT $LN10@run_dlgPro
; Line 2609
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	al, BYTE PTR _isChecked$28[ebp]
	mov	BYTE PTR [edx+537], al
; Line 2610
	movzx	ecx, BYTE PTR _isChecked$28[ebp]
	test	ecx, ecx
	je	SHORT $LN86@run_dlgPro
	mov	DWORD PTR tv973[ebp], OFFSET $SG145858
	jmp	SHORT $LN87@run_dlgPro
$LN86@run_dlgPro:
	mov	DWORD PTR tv973[ebp], OFFSET $SG145859
$LN87@run_dlgPro:
	mov	edx, DWORD PTR tv973[ebp]
	mov	DWORD PTR _label$15[ebp], edx
	jmp	$LN9@run_dlgPro
$LN10@run_dlgPro:
; Line 2612
	cmp	DWORD PTR _wParam$[ebp], 6853		; 00001ac5H
	jne	SHORT $LN8@run_dlgPro
; Line 2614
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR _isChecked$28[ebp]
	mov	BYTE PTR [eax+538], cl
; Line 2615
	movzx	edx, BYTE PTR _isChecked$28[ebp]
	test	edx, edx
	je	SHORT $LN88@run_dlgPro
	mov	DWORD PTR tv979[ebp], OFFSET $SG145862
	jmp	SHORT $LN89@run_dlgPro
$LN88@run_dlgPro:
	mov	DWORD PTR tv979[ebp], OFFSET $SG145863
$LN89@run_dlgPro:
	mov	eax, DWORD PTR tv979[ebp]
	mov	DWORD PTR _label$15[ebp], eax
	jmp	$LN9@run_dlgPro
$LN8@run_dlgPro:
; Line 2617
	cmp	DWORD PTR _wParam$[ebp], 6854		; 00001ac6H
	jne	SHORT $LN6@run_dlgPro
; Line 2619
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR _isChecked$28[ebp]
	mov	BYTE PTR [ecx+539], dl
; Line 2620
	movzx	eax, BYTE PTR _isChecked$28[ebp]
	test	eax, eax
	je	SHORT $LN90@run_dlgPro
	mov	DWORD PTR tv985[ebp], OFFSET $SG145866
	jmp	SHORT $LN91@run_dlgPro
$LN90@run_dlgPro:
	mov	DWORD PTR tv985[ebp], OFFSET $SG145867
$LN91@run_dlgPro:
	mov	ecx, DWORD PTR tv985[ebp]
	mov	DWORD PTR _label$15[ebp], ecx
	jmp	SHORT $LN9@run_dlgPro
$LN6@run_dlgPro:
; Line 2622
	cmp	DWORD PTR _wParam$[ebp], 6855		; 00001ac7H
	jne	SHORT $LN4@run_dlgPro
; Line 2624
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	al, BYTE PTR _isChecked$28[ebp]
	mov	BYTE PTR [edx+541], al
; Line 2625
	movzx	ecx, BYTE PTR _isChecked$28[ebp]
	test	ecx, ecx
	je	SHORT $LN92@run_dlgPro
	mov	DWORD PTR tv991[ebp], OFFSET $SG145870
	jmp	SHORT $LN93@run_dlgPro
$LN92@run_dlgPro:
	mov	DWORD PTR tv991[ebp], OFFSET $SG145871
$LN93@run_dlgPro:
	mov	edx, DWORD PTR tv991[ebp]
	mov	DWORD PTR _label$15[ebp], edx
; Line 2627
	jmp	SHORT $LN9@run_dlgPro
$LN4@run_dlgPro:
; Line 2629
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR _isChecked$28[ebp]
	mov	BYTE PTR [eax+540], cl
; Line 2630
	movzx	edx, BYTE PTR _isChecked$28[ebp]
	test	edx, edx
	je	SHORT $LN94@run_dlgPro
	mov	DWORD PTR tv996[ebp], OFFSET $SG145873
	jmp	SHORT $LN95@run_dlgPro
$LN94@run_dlgPro:
	mov	DWORD PTR tv996[ebp], OFFSET $SG145874
$LN95@run_dlgPro:
	mov	eax, DWORD PTR tv996[ebp]
	mov	DWORD PTR _label$15[ebp], eax
$LN9@run_dlgPro:
; Line 2632
	mov	ecx, DWORD PTR _label$15[ebp]
	push	ecx
	push	0
	push	12					; 0000000cH
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2633
	mov	eax, 1
	jmp	SHORT $LN57@run_dlgPro
$LN2@run_dlgPro:
; Line 2638
	push	0
	push	0
	push	240					; 000000f0H
	push	6857					; 00001ac9H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN96@run_dlgPro
	mov	DWORD PTR tv1021[ebp], 1
	jmp	SHORT $LN97@run_dlgPro
$LN96@run_dlgPro:
	mov	DWORD PTR tv1021[ebp], 0
$LN97@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv1021[ebp]
	mov	BYTE PTR [ecx+536], dl
; Line 2639
	mov	eax, 1
	jmp	SHORT $LN57@run_dlgPro
$LN1@run_dlgPro:
; Line 2642
	xor	eax, eax
	jmp	SHORT $LN57@run_dlgPro
$LN54@run_dlgPro:
; Line 2647
	xor	eax, eax
$LN57@run_dlgPro:
; Line 2648
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN102@run_dlgPro:
	DD	$LN29@run_dlgPro
	DD	$LN32@run_dlgPro
$LN99@run_dlgPro:
	DB	0
	DB	0
	DB	1
	DB	0
	DB	0
	DB	1
	DB	0
	DB	0
$LN103@run_dlgPro:
	DD	$LN23@run_dlgPro
	DD	$LN20@run_dlgPro
	DD	$LN19@run_dlgPro
	DD	$LN16@run_dlgPro
	DD	$LN17@run_dlgPro
	DD	$LN18@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN2@run_dlgPro
	DD	$LN1@run_dlgPro
$LN100@run_dlgPro:
	DB	0
	DB	1
	DB	2
	DB	8
	DB	3
	DB	8
	DB	8
	DB	4
	DB	5
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	7
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _valDlg$29[ebp]
	jmp	??1ValueDlg@@UAE@XZ
__ehhandler$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z ENDP		; AutoCompletionDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stringSize$2 = -696					; size = 4
_stringSize$3 = -692					; size = 4
_periodicBackupInSec$4 = -688				; size = 4
_pNppParam$ = -684					; size = 4
$T5 = -680						; size = 4
tv272 = -676						; size = 4
tv163 = -672						; size = 4
tv211 = -668						; size = 4
tv93 = -664						; size = 4
tv67 = -660						; size = 4
tv87 = -656						; size = 4
tv343 = -652						; size = 4
tv370 = -648						; size = 4
_ID2CheckBackupOnSave$6 = -644				; size = 4
_snapshotCheck$7 = -637					; size = 1
tv298 = -636						; size = 4
_nppGUI$ = -632						; size = 4
_backupFilePath$8 = -628				; size = 28
_inputDir$9 = -600					; size = 520
_str$10 = -80						; size = 32
_str$11 = -48						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@BackupDlg@@EAGHIIJ@Z PROC			; BackupDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2190
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@BackupDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 684				; 000002acH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2191
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 2192
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 2193
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN33@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN26@run_dlgPro
	jmp	$LN34@run_dlgPro
$LN33@run_dlgPro:
; Line 2197
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+58]
	push	edx
	push	241					; 000000f1H
	push	6309					; 000018a5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2198
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+58]
	test	eax, eax
	je	SHORT $LN38@run_dlgPro
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	call	?isSnapshotMode@NppGUI@@QBE_NXZ		; NppGUI::isSnapshotMode
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN38@run_dlgPro
	mov	DWORD PTR tv87[ebp], 1
	jmp	SHORT $LN39@run_dlgPro
$LN38@run_dlgPro:
	mov	DWORD PTR tv87[ebp], 0
$LN39@run_dlgPro:
	mov	dl, BYTE PTR tv87[ebp]
	mov	BYTE PTR _snapshotCheck$7[ebp], dl
; Line 2199
	movzx	eax, BYTE PTR _snapshotCheck$7[ebp]
	test	eax, eax
	je	SHORT $LN40@run_dlgPro
	mov	DWORD PTR tv93[ebp], 1
	jmp	SHORT $LN41@run_dlgPro
$LN40@run_dlgPro:
	mov	DWORD PTR tv93[ebp], 0
$LN41@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6818					; 00001aa2H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2200
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [ecx+1688]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	DWORD PTR _periodicBackupInSec$4[ebp], eax
; Line 2201
	push	0
	mov	edx, DWORD PTR _periodicBackupInSec$4[ebp]
	push	edx
	push	6820					; 00001aa4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 2202
	lea	edx, DWORD PTR _backupFilePath$8[ebp]
	push	edx
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	ecx, eax
	call	?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; NppParameters::getUserPath
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2203
	push	OFFSET $SG145482
	lea	ecx, DWORD PTR _backupFilePath$8[ebp]
	call	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Line 2204
	lea	ecx, DWORD PTR _backupFilePath$8[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6823					; 00001aa7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 2206
	mov	DWORD PTR _ID2CheckBackupOnSave$6[ebp], 0
; Line 2208
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+384]
	mov	DWORD PTR tv163[ebp], eax
	cmp	DWORD PTR tv163[ebp], 1
	je	SHORT $LN30@run_dlgPro
	cmp	DWORD PTR tv163[ebp], 2
	je	SHORT $LN29@run_dlgPro
	jmp	SHORT $LN28@run_dlgPro
$LN30@run_dlgPro:
; Line 2211
	mov	DWORD PTR _ID2CheckBackupOnSave$6[ebp], 6316 ; 000018acH
; Line 2212
	jmp	SHORT $LN31@run_dlgPro
$LN29@run_dlgPro:
; Line 2214
	mov	DWORD PTR _ID2CheckBackupOnSave$6[ebp], 6317 ; 000018adH
; Line 2215
	jmp	SHORT $LN31@run_dlgPro
$LN28@run_dlgPro:
; Line 2218
	mov	DWORD PTR _ID2CheckBackupOnSave$6[ebp], 6315 ; 000018abH
$LN31@run_dlgPro:
; Line 2220
	push	0
	push	1
	push	241					; 000000f1H
	mov	ecx, DWORD PTR _ID2CheckBackupOnSave$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2222
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+388]
	test	edx, edx
	je	SHORT $LN27@run_dlgPro
; Line 2223
	push	0
	push	1
	push	241					; 000000f1H
	push	6802					; 00001a92H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN27@run_dlgPro:
; Line 2225
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 392				; 00000188H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	12					; 0000000cH
	push	6805					; 00001a95H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2227
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBackupGUI@BackupDlg@@AAEXXZ	; BackupDlg::updateBackupGUI
; Line 2228
	mov	DWORD PTR $T5[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _backupFilePath$8[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN36@run_dlgPro
$LN26@run_dlgPro:
; Line 2232
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 768				; 00000300H
	jne	$LN25@run_dlgPro
; Line 2234
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR tv211[ebp], ecx
	cmp	DWORD PTR tv211[ebp], 6805		; 00001a95H
	je	SHORT $LN22@run_dlgPro
	cmp	DWORD PTR tv211[ebp], 6820		; 00001aa4H
	je	SHORT $LN21@run_dlgPro
	jmp	$LN23@run_dlgPro
$LN22@run_dlgPro:
; Line 2239
	lea	edx, DWORD PTR _inputDir$9[ebp]
	push	edx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6805					; 00001a95H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2240
	lea	edx, DWORD PTR _inputDir$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 392				; 00000188H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2241
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN21@run_dlgPro:
; Line 2247
	mov	DWORD PTR _stringSize$2[ebp], 16	; 00000010H
; Line 2250
	push	16					; 00000010H
	lea	eax, DWORD PTR _str$11[ebp]
	push	eax
	push	6820					; 00001aa4H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItemTextW@16
; Line 2252
	push	OFFSET $SG145511
	lea	eax, DWORD PTR _str$11[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcmpW@8
	test	eax, eax
	jne	SHORT $LN20@run_dlgPro
; Line 2253
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN20@run_dlgPro:
; Line 2255
	push	0
	push	0
	push	6820					; 00001aa4H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItemInt@16
	imul	eax, eax, 1000
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+1688], eax
; Line 2256
	mov	edx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [edx+1688], 0
	jne	SHORT $LN19@run_dlgPro
; Line 2258
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+1688], 1000		; 000003e8H
; Line 2259
	push	0
	push	1
	push	6820					; 00001aa4H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16
$LN19@run_dlgPro:
; Line 2261
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN23@run_dlgPro:
; Line 2265
	jmp	$LN18@run_dlgPro
$LN25@run_dlgPro:
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 512				; 00000200H
	jne	SHORT $LN18@run_dlgPro
; Line 2267
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR tv272[ebp], eax
	cmp	DWORD PTR tv272[ebp], 6820		; 00001aa4H
	je	SHORT $LN14@run_dlgPro
	jmp	SHORT $LN18@run_dlgPro
$LN14@run_dlgPro:
; Line 2272
	mov	DWORD PTR _stringSize$3[ebp], 16	; 00000010H
; Line 2275
	push	16					; 00000010H
	lea	ecx, DWORD PTR _str$10[ebp]
	push	ecx
	push	6820					; 00001aa4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItemTextW@16
; Line 2277
	push	OFFSET $SG145527
	lea	ecx, DWORD PTR _str$10[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcmpW@8
	test	eax, eax
	jne	SHORT $LN18@run_dlgPro
; Line 2279
	push	0
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+1688]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	push	eax
	push	6820					; 00001aa4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
$LN18@run_dlgPro:
; Line 2285
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv298[ebp], ecx
	cmp	DWORD PTR tv298[ebp], 6317		; 000018adH
	ja	SHORT $LN46@run_dlgPro
	cmp	DWORD PTR tv298[ebp], 6317		; 000018adH
	je	$LN5@run_dlgPro
	cmp	DWORD PTR tv298[ebp], 6309		; 000018a5H
	je	SHORT $LN10@run_dlgPro
	cmp	DWORD PTR tv298[ebp], 6315		; 000018abH
	je	$LN4@run_dlgPro
	cmp	DWORD PTR tv298[ebp], 6316		; 000018acH
	je	$LN6@run_dlgPro
	jmp	$LN1@run_dlgPro
$LN46@run_dlgPro:
	cmp	DWORD PTR tv298[ebp], 6802		; 00001a92H
	je	$LN3@run_dlgPro
	cmp	DWORD PTR tv298[ebp], 6806		; 00001a96H
	je	$LN2@run_dlgPro
	cmp	DWORD PTR tv298[ebp], 6818		; 00001aa2H
	je	SHORT $LN8@run_dlgPro
	jmp	$LN1@run_dlgPro
$LN10@run_dlgPro:
; Line 2289
	push	6309					; 000018a5H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	BYTE PTR [edx+58], al
; Line 2290
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+58]
	test	ecx, ecx
	jne	SHORT $LN9@run_dlgPro
; Line 2292
	push	0
	push	0
	push	241					; 000000f1H
	push	6818					; 00001aa2H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2293
	push	0
	push	6818					; 00001aa2H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN9@run_dlgPro:
; Line 2295
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBackupGUI@BackupDlg@@AAEXXZ	; BackupDlg::updateBackupGUI
; Line 2296
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN8@run_dlgPro:
; Line 2300
	push	0
	push	0
	push	240					; 000000f0H
	push	6818					; 00001aa2H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN42@run_dlgPro
	mov	DWORD PTR tv343[ebp], 1
	jmp	SHORT $LN43@run_dlgPro
$LN42@run_dlgPro:
	mov	DWORD PTR tv343[ebp], 0
$LN43@run_dlgPro:
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	al, BYTE PTR tv343[ebp]
	mov	BYTE PTR [edx+1685], al
; Line 2301
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBackupGUI@BackupDlg@@AAEXXZ	; BackupDlg::updateBackupGUI
; Line 2303
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+1685]
	test	edx, edx
	je	SHORT $LN7@run_dlgPro
; Line 2306
	push	0
	push	0
	push	1062					; 00000426H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN7@run_dlgPro:
; Line 2308
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN6@run_dlgPro:
; Line 2313
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [edx+384], 1
; Line 2314
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBackupGUI@BackupDlg@@AAEXXZ	; BackupDlg::updateBackupGUI
; Line 2315
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN5@run_dlgPro:
; Line 2320
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+384], 2
; Line 2321
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBackupGUI@BackupDlg@@AAEXXZ	; BackupDlg::updateBackupGUI
; Line 2322
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN4@run_dlgPro:
; Line 2327
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+384], 0
; Line 2328
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBackupGUI@BackupDlg@@AAEXXZ	; BackupDlg::updateBackupGUI
; Line 2329
	mov	eax, 1
	jmp	SHORT $LN36@run_dlgPro
$LN3@run_dlgPro:
; Line 2334
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+388]
	test	eax, eax
	jne	SHORT $LN44@run_dlgPro
	mov	DWORD PTR tv370[ebp], 1
	jmp	SHORT $LN45@run_dlgPro
$LN44@run_dlgPro:
	mov	DWORD PTR tv370[ebp], 0
$LN45@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv370[ebp]
	mov	BYTE PTR [ecx+388], dl
; Line 2335
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateBackupGUI@BackupDlg@@AAEXXZ	; BackupDlg::updateBackupGUI
; Line 2336
	mov	eax, 1
	jmp	SHORT $LN36@run_dlgPro
$LN2@run_dlgPro:
; Line 2340
	push	0
	push	6805					; 00001a95H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?folderBrowser@@YAXPAUHWND__@@HPB_W@Z	; folderBrowser
	add	esp, 12					; 0000000cH
; Line 2341
	mov	eax, 1
	jmp	SHORT $LN36@run_dlgPro
$LN1@run_dlgPro:
; Line 2346
	xor	eax, eax
	jmp	SHORT $LN36@run_dlgPro
$LN34@run_dlgPro:
; Line 2351
	xor	eax, eax
$LN36@run_dlgPro:
; Line 2352
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@BackupDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _backupFilePath$8[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?run_dlgProc@BackupDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-688]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@BackupDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@BackupDlg@@EAGHIIJ@Z ENDP			; BackupDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv204 = -20						; size = 4
tv188 = -16						; size = 4
_this$ = -12						; size = 4
_noBackup$ = -5						; size = 1
_rememberSession$ = -4					; size = 1
_isEnableGlobableCheck$ = -3				; size = 1
_isEnableLocalCheck$ = -2				; size = 1
_isSnapshot$ = -1					; size = 1
?updateBackupGUI@BackupDlg@@AAEXXZ PROC			; BackupDlg::updateBackupGUI
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 2355
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 2356
	push	6309					; 000018a5H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _rememberSession$[ebp], al
; Line 2357
	push	6818					; 00001aa2H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isSnapshot$[ebp], al
; Line 2358
	movzx	eax, BYTE PTR _rememberSession$[ebp]
	push	eax
	push	6818					; 00001aa2H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2359
	movzx	eax, BYTE PTR _isSnapshot$[ebp]
	push	eax
	push	6819					; 00001aa3H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2360
	movzx	eax, BYTE PTR _isSnapshot$[ebp]
	push	eax
	push	6820					; 00001aa4H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2361
	movzx	eax, BYTE PTR _isSnapshot$[ebp]
	push	eax
	push	6821					; 00001aa5H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2362
	movzx	eax, BYTE PTR _isSnapshot$[ebp]
	push	eax
	push	6822					; 00001aa6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2363
	movzx	eax, BYTE PTR _isSnapshot$[ebp]
	push	eax
	push	6823					; 00001aa7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2365
	push	0
	push	0
	push	240					; 000000f0H
	push	6315					; 000018abH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN4@updateBack
	mov	DWORD PTR tv188[ebp], 1
	jmp	SHORT $LN5@updateBack
$LN4@updateBack:
	mov	DWORD PTR tv188[ebp], 0
$LN5@updateBack:
	mov	dl, BYTE PTR tv188[ebp]
	mov	BYTE PTR _noBackup$[ebp], dl
; Line 2366
	mov	BYTE PTR _isEnableGlobableCheck$[ebp], 0
; Line 2367
	mov	BYTE PTR _isEnableLocalCheck$[ebp], 0
; Line 2369
	movzx	eax, BYTE PTR _noBackup$[ebp]
	test	eax, eax
	jne	SHORT $LN1@updateBack
; Line 2371
	mov	BYTE PTR _isEnableGlobableCheck$[ebp], 1
; Line 2372
	push	0
	push	0
	push	240					; 000000f0H
	push	6802					; 00001a92H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN6@updateBack
	mov	DWORD PTR tv204[ebp], 1
	jmp	SHORT $LN7@updateBack
$LN6@updateBack:
	mov	DWORD PTR tv204[ebp], 0
$LN7@updateBack:
	mov	al, BYTE PTR tv204[ebp]
	mov	BYTE PTR _isEnableLocalCheck$[ebp], al
$LN1@updateBack:
; Line 2374
	movzx	ecx, BYTE PTR _isEnableGlobableCheck$[ebp]
	push	ecx
	push	6804					; 00001a94H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2375
	movzx	ecx, BYTE PTR _isEnableGlobableCheck$[ebp]
	push	ecx
	push	6802					; 00001a92H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2377
	movzx	ecx, BYTE PTR _isEnableLocalCheck$[ebp]
	push	ecx
	push	6803					; 00001a93H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2378
	movzx	ecx, BYTE PTR _isEnableLocalCheck$[ebp]
	push	ecx
	push	6805					; 00001a95H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2379
	movzx	ecx, BYTE PTR _isEnableLocalCheck$[ebp]
	push	ecx
	push	6806					; 00001a96H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 2380
	mov	esp, ebp
	pop	ebp
	ret	0
?updateBackupGUI@BackupDlg@@AAEXXZ ENDP			; BackupDlg::updateBackupGUI
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXXZ PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXXZ ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXXZ ; std::vector<strCouple,std::allocator<strCouple> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEII@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEPAUstrCouple@@I@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUstrCouple@@@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEPAUstrCouple@@PAU2@00@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Umove<strCouple *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXPAUstrCouple@@0@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 56					; 00000038H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	imul	edx, DWORD PTR __Count$[ebp], 56
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	imul	ecx, DWORD PTR __Size$[ebp], 56
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1608
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBE_NPBUstrCouple@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBE_NPBUstrCouple@@@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBE_NPBUstrCouple@@@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEII@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEII@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXPAUstrCouple@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXPAUstrCouple@@0@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<strCouple> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXPAUstrCouple@@0@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1KG@IMKDFIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAC?$AAo?$AAu?$AAp?$AAl?$AAe?$AA?0?$AAc?$AAl?$AAa@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	imul	eax, DWORD PTR __Pos$[ebp], 56
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ PROC ; std::vector<strCouple,std::allocator<strCouple> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<strCouple> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ENDP ; std::vector<strCouple,std::allocator<strCouple> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ PROC ; std::vector<strCouple,std::allocator<strCouple> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 56					; 00000038H
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ENDP ; std::vector<strCouple,std::allocator<strCouple> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ PROC ; std::vector<strCouple,std::allocator<strCouple> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	cdq
	mov	ecx, 56					; 00000038H
	idiv	ecx
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ENDP ; std::vector<strCouple,std::allocator<strCouple> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ PROC ; std::vector<strCouple,std::allocator<strCouple> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 56					; 00000038H
	idiv	ecx
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ENDP ; std::vector<strCouple,std::allocator<strCouple> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z PROC ; std::vector<strCouple,std::allocator<strCouple> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 866
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z ; std::addressof<strCouple>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBE_NPBUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 868
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z ; std::addressof<strCouple>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 56					; 00000038H
	idiv	ecx
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 869
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 870
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Reserve
$LN3@push_back:
; Line 871
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Orphan_range
; Line 873
	imul	eax, DWORD PTR __Idx$1[ebp], 56
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	call	??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z ; std::forward<strCouple>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
	mov	ecx, eax
	call	??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::construct<strCouple,strCouple>
; Line 874
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 876
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 878
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 879
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Reserve
$LN1@push_back:
; Line 880
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z ; std::vector<strCouple,std::allocator<strCouple> >::_Orphan_range
; Line 882
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z ; std::forward<strCouple>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
	mov	ecx, eax
	call	??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<strCouple> >::construct<strCouple,strCouple>
; Line 883
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 56					; 00000038H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ENDP ; std::vector<strCouple,std::allocator<strCouple> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<strCouple> >::_Wrap_alloc<std::allocator<strCouple> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<strCouple,std::allocator<strCouple> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<strCouple> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAIABV?$allocator@UstrCouple@@@2@@Z ; std::allocator_traits<std::allocator<strCouple> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<strCouple> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z PROC ; std::_Wrap_alloc<std::allocator<strCouple> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@I@Z ; std::allocator<strCouple>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<strCouple> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEPAUstrCouple@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEPAUstrCouple@@I@Z PROC ; std::_Wrap_alloc<std::allocator<strCouple> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@UstrCouple@@@std@@QAEPAUstrCouple@@I@Z ; std::allocator<strCouple>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEPAUstrCouple@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<strCouple> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<strCouple> >::_Wrap_alloc<std::allocator<strCouple> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UstrCouple@@@std@@QAE@XZ	; std::allocator<strCouple>::allocator<strCouple>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<strCouple> >::_Wrap_alloc<std::allocator<strCouple> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAIABV?$allocator@UstrCouple@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAIABV?$allocator@UstrCouple@@@2@@Z PROC ; std::allocator_traits<std::allocator<strCouple> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@UstrCouple@@@std@@QBEIXZ ; std::allocator<strCouple>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAIABV?$allocator@UstrCouple@@@2@@Z ENDP ; std::allocator_traits<std::allocator<strCouple> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@UstrCouple@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UstrCouple@@@std@@QBEIXZ PROC	; std::allocator<strCouple>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 76695844				; 04924924H
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UstrCouple@@@std@@QBEIXZ ENDP	; std::allocator<strCouple>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@UstrCouple@@@std@@QAEPAUstrCouple@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UstrCouple@@@std@@QAEPAUstrCouple@@I@Z PROC ; std::allocator<strCouple>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@UstrCouple@@@std@@YAPAUstrCouple@@IPAU1@@Z ; std::_Allocate<strCouple>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UstrCouple@@@std@@QAEPAUstrCouple@@I@Z ENDP ; std::allocator<strCouple>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@I@Z PROC ; std::allocator<strCouple>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@I@Z ENDP ; std::allocator<strCouple>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UstrCouple@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UstrCouple@@@std@@QAE@XZ PROC		; std::allocator<strCouple>::allocator<strCouple>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UstrCouple@@@std@@QAE@XZ ENDP		; std::allocator<strCouple>::allocator<strCouple>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stringSize$2 = -2232					; size = 4
_stringSize$3 = -2228					; size = 4
_stringSize$4 = -2224					; size = 4
tv1068 = -2220						; size = 4
_len$5 = -2216						; size = 4
tv1056 = -2212						; size = 4
_varStr$6 = -2208					; size = 4
tv1067 = -2204						; size = 4
tv1062 = -2200						; size = 4
tv1054 = -2196						; size = 4
$T7 = -2192						; size = 4
tv1066 = -2188						; size = 4
tv1046 = -2184						; size = 4
tv1052 = -2180						; size = 4
tv1058 = -2176						; size = 4
tv1065 = -2172						; size = 4
tv1050 = -2168						; size = 4
_iSel$8 = -2164						; size = 4
tv1064 = -2160						; size = 4
_j$9 = -2156						; size = 4
tv1048 = -2152						; size = 4
_len$10 = -2148						; size = 4
tv1063 = -2144						; size = 4
_j$11 = -2140						; size = 4
tv67 = -2136						; size = 4
tv83 = -2132						; size = 4
_enableDlgTheme$12 = -2128				; size = 4
tv940 = -2124						; size = 4
tv427 = -2120						; size = 4
_pVal$13 = -2116					; size = 4
tv472 = -2112						; size = 4
tv914 = -2108						; size = 4
tv442 = -2104						; size = 4
_iSel$14 = -2100					; size = 4
_fnStr$15 = -2096					; size = 4
tv457 = -2092						; size = 4
_pNppParam$ = -2088					; size = 4
tv612 = -2084						; size = 4
tv692 = -2080						; size = 4
tv866 = -2076						; size = 4
tv749 = -2072						; size = 4
_i$16 = -2068						; size = 4
tv925 = -2064						; size = 4
_i$17 = -2060						; size = 4
_fontlist$18 = -2056					; size = 4
_ID2Check$19 = -2052					; size = 4
_index$20 = -2048					; size = 4
_groupStatic$21 = -2044					; size = 4
_i$22 = -2040						; size = 4
_focusedEditStatic$23 = -2036				; size = 4
_printLN$24 = -2029					; size = 1
_nppGUI$ = -2028					; size = 4
$T25 = -2024						; size = 56
$T26 = -1968						; size = 56
$T27 = -1912						; size = 56
$T28 = -1856						; size = 56
$T29 = -1800						; size = 56
$T30 = -1744						; size = 56
$T31 = -1688						; size = 56
_str2Set$32 = -1632					; size = 28
_title$33 = -1604					; size = 28
_str$34 = -1576						; size = 512
_str$35 = -1064						; size = 512
_str$36 = -552						; size = 512
_intStr$37 = -40					; size = 10
_intStr$38 = -28					; size = 10
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z PROC		; PrintSettingsDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1887
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2220				; 000008acH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1888
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 1889
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 1891
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN72@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN53@run_dlgPro
	jmp	$LN73@run_dlgPro
$LN72@run_dlgPro:
; Line 1895
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR [ecx+120]
	mov	BYTE PTR _printLN$24[ebp], dl
; Line 1896
	push	0
	movzx	eax, BYTE PTR _printLN$24[ebp]
	push	eax
	push	241					; 000000f1H
	push	6601					; 000019c9H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1898
	mov	DWORD PTR _ID2Check$19[ebp], 0
; Line 1899
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR tv83[ebp], ecx
	cmp	DWORD PTR tv83[ebp], 3
	ja	SHORT $LN70@run_dlgPro
	mov	edx, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN103@run_dlgPro[edx*4]
$LN69@run_dlgPro:
; Line 1902
	mov	DWORD PTR _ID2Check$19[ebp], 6603	; 000019cbH
; Line 1903
	jmp	SHORT $LN70@run_dlgPro
$LN68@run_dlgPro:
; Line 1905
	mov	DWORD PTR _ID2Check$19[ebp], 6604	; 000019ccH
; Line 1906
	jmp	SHORT $LN70@run_dlgPro
$LN67@run_dlgPro:
; Line 1908
	mov	DWORD PTR _ID2Check$19[ebp], 6605	; 000019cdH
; Line 1909
	jmp	SHORT $LN70@run_dlgPro
$LN66@run_dlgPro:
; Line 1911
	mov	DWORD PTR _ID2Check$19[ebp], 6606	; 000019ceH
$LN70@run_dlgPro:
; Line 1914
	push	0
	push	1
	push	241					; 000000f1H
	mov	eax, DWORD PTR _ID2Check$19[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1916
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	push	ecx
	push	6608					; 000019d0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1917
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+376]
	push	edx
	push	6610					; 000019d2H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1918
	push	0
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+372]
	push	eax
	push	6609					; 000019d1H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1919
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+380]
	push	ecx
	push	6611					; 000019d3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1920
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 128				; 00000080H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6701					; 00001a2dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 1921
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 156				; 0000009cH
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6702					; 00001a2eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 1922
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 184				; 000000b8H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6703					; 00001a2fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 1923
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 248				; 000000f8H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6712					; 00001a38H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 1924
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 276				; 00000114H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6713					; 00001a39H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 1925
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 304				; 00000130H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	6714					; 00001a3aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 1928
	mov	DWORD PTR _i$16[ebp], 6
	jmp	SHORT $LN65@run_dlgPro
$LN64@run_dlgPro:
	mov	ecx, DWORD PTR _i$16[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$16[ebp], ecx
$LN65@run_dlgPro:
	cmp	DWORD PTR _i$16[ebp], 15		; 0000000fH
	jae	SHORT $LN63@run_dlgPro
; Line 1930
	mov	edx, DWORD PTR _i$16[ebp]
	push	edx
	push	OFFSET $SG145282
	lea	eax, DWORD PTR _intStr$38[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
; Line 1931
	lea	ecx, DWORD PTR _intStr$38[ebp]
	push	ecx
	push	0
	push	323					; 00000143H
	push	6705					; 00001a31H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1932
	lea	ecx, DWORD PTR _intStr$38[ebp]
	push	ecx
	push	0
	push	323					; 00000143H
	push	6716					; 00001a3cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1933
	jmp	SHORT $LN64@run_dlgPro
$LN63@run_dlgPro:
; Line 1934
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getFontList@NppParameters@@QBEABV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@XZ ; NppParameters::getFontList
	mov	DWORD PTR _fontlist$18[ebp], eax
; Line 1935
	mov	DWORD PTR _i$22[ebp], 0
	mov	ecx, DWORD PTR _fontlist$18[ebp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	mov	DWORD PTR _len$10[ebp], eax
	jmp	SHORT $LN62@run_dlgPro
$LN61@run_dlgPro:
	mov	ecx, DWORD PTR _i$22[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$22[ebp], ecx
$LN62@run_dlgPro:
	mov	edx, DWORD PTR _i$22[ebp]
	cmp	edx, DWORD PTR _len$10[ebp]
	jae	$LN60@run_dlgPro
; Line 1937
	mov	eax, DWORD PTR _i$22[ebp]
	push	eax
	mov	ecx, DWORD PTR _fontlist$18[ebp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	323					; 00000143H
	push	6704					; 00001a30H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _j$11[ebp], eax
; Line 1938
	mov	eax, DWORD PTR _i$22[ebp]
	push	eax
	mov	ecx, DWORD PTR _fontlist$18[ebp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	323					; 00000143H
	push	6715					; 00001a3bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1940
	mov	eax, DWORD PTR _i$22[ebp]
	push	eax
	mov	ecx, DWORD PTR _fontlist$18[ebp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	mov	ecx, DWORD PTR _j$11[ebp]
	push	ecx
	push	337					; 00000151H
	push	6704					; 00001a30H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1941
	mov	ecx, DWORD PTR _i$22[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fontlist$18[ebp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	mov	edx, DWORD PTR _j$11[ebp]
	push	edx
	push	337					; 00000151H
	push	6715					; 00001a3bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1942
	jmp	$LN61@run_dlgPro
$LN60@run_dlgPro:
; Line 1944
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 212				; 000000d4H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	-1
	push	344					; 00000158H
	push	6704					; 00001a30H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$20[ebp], eax
; Line 1945
	cmp	DWORD PTR _index$20[ebp], -1
	jne	SHORT $LN59@run_dlgPro
; Line 1946
	mov	DWORD PTR _index$20[ebp], 0
$LN59@run_dlgPro:
; Line 1947
	push	0
	mov	ecx, DWORD PTR _index$20[ebp]
	push	ecx
	push	334					; 0000014eH
	push	6704					; 00001a30H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1948
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 332				; 0000014cH
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	-1
	push	344					; 00000158H
	push	6715					; 00001a3bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$20[ebp], eax
; Line 1949
	cmp	DWORD PTR _index$20[ebp], -1
	jne	SHORT $LN58@run_dlgPro
; Line 1950
	mov	DWORD PTR _index$20[ebp], 0
$LN58@run_dlgPro:
; Line 1951
	push	0
	mov	eax, DWORD PTR _index$20[ebp]
	push	eax
	push	334					; 0000014eH
	push	6715					; 00001a3bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1953
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+244]
	push	ecx
	push	OFFSET $SG145307
	lea	edx, DWORD PTR _intStr$38[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
; Line 1954
	lea	eax, DWORD PTR _intStr$38[ebp]
	push	eax
	push	-1
	push	333					; 0000014dH
	push	6705					; 00001a31H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1955
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	push	ecx
	push	OFFSET $SG145310
	lea	edx, DWORD PTR _intStr$38[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
; Line 1956
	lea	eax, DWORD PTR _intStr$38[ebp]
	push	eax
	push	-1
	push	333					; 0000014dH
	push	6716					; 00001a3cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1958
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+240]
	and	ecx, 1
	je	SHORT $LN77@run_dlgPro
	mov	DWORD PTR tv427[ebp], 1
	jmp	SHORT $LN78@run_dlgPro
$LN77@run_dlgPro:
	mov	DWORD PTR tv427[ebp], 0
$LN78@run_dlgPro:
	push	0
	mov	edx, DWORD PTR tv427[ebp]
	push	edx
	push	241					; 000000f1H
	push	6706					; 00001a32H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1959
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+240]
	and	eax, 2
	je	SHORT $LN79@run_dlgPro
	mov	DWORD PTR tv442[ebp], 1
	jmp	SHORT $LN80@run_dlgPro
$LN79@run_dlgPro:
	mov	DWORD PTR tv442[ebp], 0
$LN80@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv442[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6707					; 00001a33H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1960
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	and	edx, 1
	je	SHORT $LN81@run_dlgPro
	mov	DWORD PTR tv457[ebp], 1
	jmp	SHORT $LN82@run_dlgPro
$LN81@run_dlgPro:
	mov	DWORD PTR tv457[ebp], 0
$LN82@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv457[ebp]
	push	eax
	push	241					; 000000f1H
	push	6717					; 00001a3dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1961
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	and	ecx, 2
	je	SHORT $LN83@run_dlgPro
	mov	DWORD PTR tv472[ebp], 1
	jmp	SHORT $LN84@run_dlgPro
$LN83@run_dlgPro:
	mov	DWORD PTR tv472[ebp], 0
$LN84@run_dlgPro:
	push	0
	mov	edx, DWORD PTR tv472[ebp]
	push	edx
	push	241					; 000000f1H
	push	6718					; 00001a3eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1963
	push	OFFSET $SG145314
	push	OFFSET $SG145315
	lea	ecx, DWORD PTR $T27[ebp]
	call	??0strCouple@@QAE@PA_W0@Z		; strCouple::strCouple
	mov	DWORD PTR tv1062[ebp], eax
	mov	edx, DWORD PTR tv1062[ebp]
	mov	DWORD PTR tv1046[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv1046[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T27[ebp]
	call	??1strCouple@@QAE@XZ
; Line 1964
	push	OFFSET $SG145317
	push	OFFSET $SG145318
	lea	ecx, DWORD PTR $T31[ebp]
	call	??0strCouple@@QAE@PA_W0@Z		; strCouple::strCouple
	mov	DWORD PTR tv1063[ebp], eax
	mov	ecx, DWORD PTR tv1063[ebp]
	mov	DWORD PTR tv1048[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv1048[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T31[ebp]
	call	??1strCouple@@QAE@XZ
; Line 1965
	push	OFFSET $SG145320
	push	OFFSET $SG145321
	lea	ecx, DWORD PTR $T30[ebp]
	call	??0strCouple@@QAE@PA_W0@Z		; strCouple::strCouple
	mov	DWORD PTR tv1064[ebp], eax
	mov	eax, DWORD PTR tv1064[ebp]
	mov	DWORD PTR tv1050[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv1050[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T30[ebp]
	call	??1strCouple@@QAE@XZ
; Line 1966
	push	OFFSET $SG145323
	push	OFFSET $SG145324
	lea	ecx, DWORD PTR $T28[ebp]
	call	??0strCouple@@QAE@PA_W0@Z		; strCouple::strCouple
	mov	DWORD PTR tv1065[ebp], eax
	mov	edx, DWORD PTR tv1065[ebp]
	mov	DWORD PTR tv1052[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv1052[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T28[ebp]
	call	??1strCouple@@QAE@XZ
; Line 1967
	push	OFFSET $SG145326
	push	OFFSET $SG145327
	lea	ecx, DWORD PTR $T25[ebp]
	call	??0strCouple@@QAE@PA_W0@Z		; strCouple::strCouple
	mov	DWORD PTR tv1066[ebp], eax
	mov	ecx, DWORD PTR tv1066[ebp]
	mov	DWORD PTR tv1054[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv1054[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T25[ebp]
	call	??1strCouple@@QAE@XZ
; Line 1968
	push	OFFSET $SG145329
	push	OFFSET $SG145330
	lea	ecx, DWORD PTR $T26[ebp]
	call	??0strCouple@@QAE@PA_W0@Z		; strCouple::strCouple
	mov	DWORD PTR tv1067[ebp], eax
	mov	eax, DWORD PTR tv1067[ebp]
	mov	DWORD PTR tv1056[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv1056[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T26[ebp]
	call	??1strCouple@@QAE@XZ
; Line 1969
	push	OFFSET $SG145332
	push	OFFSET $SG145333
	lea	ecx, DWORD PTR $T29[ebp]
	call	??0strCouple@@QAE@PA_W0@Z		; strCouple::strCouple
	mov	DWORD PTR tv1068[ebp], eax
	mov	edx, DWORD PTR tv1068[ebp]
	mov	DWORD PTR tv1058[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv1058[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z ; std::vector<strCouple,std::allocator<strCouple> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1strCouple@@QAE@XZ
; Line 1971
	mov	DWORD PTR _i$17[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ ; std::vector<strCouple,std::allocator<strCouple> >::size
	mov	DWORD PTR _len$5[ebp], eax
	jmp	SHORT $LN57@run_dlgPro
$LN56@run_dlgPro:
	mov	ecx, DWORD PTR _i$17[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$17[ebp], ecx
$LN57@run_dlgPro:
	mov	edx, DWORD PTR _i$17[ebp]
	cmp	edx, DWORD PTR _len$5[ebp]
	jae	SHORT $LN55@run_dlgPro
; Line 1973
	mov	eax, DWORD PTR _i$17[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z ; std::vector<strCouple,std::allocator<strCouple> >::operator[]
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	323					; 00000143H
	push	6724					; 00001a44H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _j$9[ebp], eax
; Line 1974
	mov	eax, DWORD PTR _i$17[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z ; std::vector<strCouple,std::allocator<strCouple> >::operator[]
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	mov	ecx, DWORD PTR _j$9[ebp]
	push	ecx
	push	337					; 00000151H
	push	6724					; 00001a44H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1975
	jmp	$LN56@run_dlgPro
$LN55@run_dlgPro:
; Line 1976
	push	0
	push	0
	push	334					; 0000014eH
	push	6724					; 00001a44H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1980
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$12[ebp], eax
; Line 1981
	cmp	DWORD PTR _enableDlgTheme$12[ebp], 0
	je	SHORT $LN54@run_dlgPro
; Line 1982
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR _enableDlgTheme$12[ebp]
$LN54@run_dlgPro:
; Line 1983
	jmp	$LN73@run_dlgPro
$LN53@run_dlgPro:
; Line 1987
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 768				; 00000300H
	jne	$LN52@run_dlgPro
; Line 1989
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR tv612[ebp], edx
	mov	eax, DWORD PTR tv612[ebp]
	sub	eax, 6608				; 000019d0H
	mov	DWORD PTR tv612[ebp], eax
	cmp	DWORD PTR tv612[ebp], 3
	ja	$LN45@run_dlgPro
	mov	ecx, DWORD PTR tv612[ebp]
	jmp	DWORD PTR $LN104@run_dlgPro[ecx*4]
$LN49@run_dlgPro:
; Line 1992
	push	0
	push	0
	push	6608					; 000019d0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItemInt@16
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+368], eax
; Line 1993
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN48@run_dlgPro:
; Line 1996
	push	0
	push	0
	push	6610					; 000019d2H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItemInt@16
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+376], eax
; Line 1997
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN47@run_dlgPro:
; Line 2000
	push	0
	push	0
	push	6609					; 000019d1H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItemInt@16
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+372], eax
; Line 2001
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN46@run_dlgPro:
; Line 2004
	push	0
	push	0
	push	6611					; 000019d3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItemInt@16
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+380], eax
; Line 2005
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN45@run_dlgPro:
; Line 2009
	mov	DWORD PTR _stringSize$4[ebp], 256	; 00000100H
; Line 2011
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 2012
	push	256					; 00000100H
	lea	edx, DWORD PTR _str$36[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItemTextW@16
; Line 2013
	lea	ecx, DWORD PTR _str$36[ebp]
	push	ecx
	push	0
	push	12					; 0000000cH
	push	6726					; 00001a46H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2014
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR tv692[ebp], edx
	mov	eax, DWORD PTR tv692[ebp]
	sub	eax, 6701				; 00001a2dH
	mov	DWORD PTR tv692[ebp], eax
	cmp	DWORD PTR tv692[ebp], 13		; 0000000dH
	ja	$LN36@run_dlgPro
	mov	ecx, DWORD PTR tv692[ebp]
	movzx	edx, BYTE PTR $LN98@run_dlgPro[ecx]
	jmp	DWORD PTR $LN105@run_dlgPro[edx*4]
$LN42@run_dlgPro:
; Line 2017
	lea	eax, DWORD PTR _str$36[ebp]
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 128				; 00000080H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2018
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	call	?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; trim
	add	esp, 4
; Line 2019
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN41@run_dlgPro:
; Line 2022
	lea	edx, DWORD PTR _str$36[ebp]
	push	edx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 156				; 0000009cH
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2023
	mov	eax, DWORD PTR _nppGUI$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	call	?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; trim
	add	esp, 4
; Line 2024
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN40@run_dlgPro:
; Line 2027
	lea	ecx, DWORD PTR _str$36[ebp]
	push	ecx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 184				; 000000b8H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2028
	mov	edx, DWORD PTR _nppGUI$[ebp]
	add	edx, 184				; 000000b8H
	push	edx
	call	?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; trim
	add	esp, 4
; Line 2029
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN39@run_dlgPro:
; Line 2032
	lea	eax, DWORD PTR _str$36[ebp]
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 248				; 000000f8H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2033
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 248				; 000000f8H
	push	ecx
	call	?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; trim
	add	esp, 4
; Line 2034
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN38@run_dlgPro:
; Line 2037
	lea	edx, DWORD PTR _str$36[ebp]
	push	edx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 276				; 00000114H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2038
	mov	eax, DWORD PTR _nppGUI$[ebp]
	add	eax, 276				; 00000114H
	push	eax
	call	?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; trim
	add	esp, 4
; Line 2039
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN37@run_dlgPro:
; Line 2042
	lea	ecx, DWORD PTR _str$36[ebp]
	push	ecx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 304				; 00000130H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2043
	mov	edx, DWORD PTR _nppGUI$[ebp]
	add	edx, 304				; 00000130H
	push	edx
	call	?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; trim
	add	esp, 4
; Line 2044
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN36@run_dlgPro:
; Line 2047
	xor	eax, eax
	jmp	$LN75@run_dlgPro
; Line 2052
	jmp	$LN35@run_dlgPro
$LN52@run_dlgPro:
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 256				; 00000100H
	jne	$LN34@run_dlgPro
; Line 2054
	mov	DWORD PTR _stringSize$2[ebp], 256	; 00000100H
; Line 2056
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 2058
	mov	DWORD PTR _focusedEditStatic$23[ebp], 0
; Line 2059
	mov	DWORD PTR _groupStatic$21[ebp], 0
; Line 2060
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR tv749[ebp], eax
	mov	ecx, DWORD PTR tv749[ebp]
	sub	ecx, 6701				; 00001a2dH
	mov	DWORD PTR tv749[ebp], ecx
	cmp	DWORD PTR tv749[ebp], 13		; 0000000dH
	ja	$LN25@run_dlgPro
	mov	edx, DWORD PTR tv749[ebp]
	movzx	eax, BYTE PTR $LN99@run_dlgPro[edx]
	jmp	DWORD PTR $LN106@run_dlgPro[eax*4]
$LN31@run_dlgPro:
; Line 2062
	mov	DWORD PTR _focusedEditStatic$23[ebp], 6709 ; 00001a35H
	mov	DWORD PTR _groupStatic$21[ebp], 6708	; 00001a34H
	jmp	SHORT $LN32@run_dlgPro
$LN30@run_dlgPro:
; Line 2063
	mov	DWORD PTR _focusedEditStatic$23[ebp], 6710 ; 00001a36H
	mov	DWORD PTR _groupStatic$21[ebp], 6708	; 00001a34H
	jmp	SHORT $LN32@run_dlgPro
$LN29@run_dlgPro:
; Line 2064
	mov	DWORD PTR _focusedEditStatic$23[ebp], 6711 ; 00001a37H
	mov	DWORD PTR _groupStatic$21[ebp], 6708	; 00001a34H
	jmp	SHORT $LN32@run_dlgPro
$LN28@run_dlgPro:
; Line 2065
	mov	DWORD PTR _focusedEditStatic$23[ebp], 6720 ; 00001a40H
	mov	DWORD PTR _groupStatic$21[ebp], 6719	; 00001a3fH
	jmp	SHORT $LN32@run_dlgPro
$LN27@run_dlgPro:
; Line 2066
	mov	DWORD PTR _focusedEditStatic$23[ebp], 6721 ; 00001a41H
	mov	DWORD PTR _groupStatic$21[ebp], 6719	; 00001a3fH
	jmp	SHORT $LN32@run_dlgPro
$LN26@run_dlgPro:
; Line 2067
	mov	DWORD PTR _focusedEditStatic$23[ebp], 6722 ; 00001a42H
	mov	DWORD PTR _groupStatic$21[ebp], 6719	; 00001a3fH
	jmp	SHORT $LN32@run_dlgPro
$LN25@run_dlgPro:
; Line 2068
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN32@run_dlgPro:
; Line 2070
	push	256					; 00000100H
	lea	ecx, DWORD PTR _str$35[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItemTextW@16
; Line 2071
	lea	eax, DWORD PTR _str$35[ebp]
	push	eax
	push	0
	push	12					; 0000000cH
	push	6726					; 00001a46H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2072
	push	256					; 00000100H
	lea	eax, DWORD PTR _str$35[ebp]
	push	eax
	mov	ecx, DWORD PTR _groupStatic$21[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItemTextW@16
; Line 2073
	lea	ecx, DWORD PTR _str$35[ebp]
	push	ecx
	lea	ecx, DWORD PTR _title$33[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 7
; Line 2074
	push	OFFSET $SG145401
	lea	ecx, DWORD PTR _title$33[ebp]
	call	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Line 2075
	push	256					; 00000100H
	lea	edx, DWORD PTR _str$35[ebp]
	push	edx
	mov	eax, DWORD PTR _focusedEditStatic$23[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItemTextW@16
; Line 2076
	lea	eax, DWORD PTR _str$35[ebp]
	push	eax
	lea	ecx, DWORD PTR _title$33[ebp]
	call	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Line 2077
	push	OFFSET $SG145402
	lea	ecx, DWORD PTR _title$33[ebp]
	call	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
; Line 2079
	lea	ecx, DWORD PTR _title$33[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	12					; 0000000cH
	push	6727					; 00001a47H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2080
	mov	DWORD PTR $T7[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _title$33[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN75@run_dlgPro
	jmp	$LN35@run_dlgPro
$LN34@run_dlgPro:
; Line 2082
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 1
	jne	$LN35@run_dlgPro
; Line 2084
	push	0
	push	0
	push	327					; 00000147H
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _iSel$14[ebp], eax
; Line 2086
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR tv866[ebp], ecx
	mov	edx, DWORD PTR tv866[ebp]
	sub	edx, 6704				; 00001a30H
	mov	DWORD PTR tv866[ebp], edx
	cmp	DWORD PTR tv866[ebp], 12		; 0000000cH
	ja	$LN21@run_dlgPro
	mov	eax, DWORD PTR tv866[ebp]
	movzx	ecx, BYTE PTR $LN100@run_dlgPro[eax]
	jmp	DWORD PTR $LN107@run_dlgPro[ecx*4]
$LN20@run_dlgPro:
; Line 2091
	push	0
	mov	edx, DWORD PTR _iSel$14[ebp]
	push	edx
	push	336					; 00000150H
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _fnStr$15[ebp], eax
; Line 2092
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 6704				; 00001a30H
	jne	SHORT $LN19@run_dlgPro
; Line 2093
	mov	eax, DWORD PTR _fnStr$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 212				; 000000d4H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 2094
	jmp	SHORT $LN18@run_dlgPro
$LN19@run_dlgPro:
; Line 2095
	mov	ecx, DWORD PTR _fnStr$15[ebp]
	push	ecx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 332				; 0000014cH
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
$LN18@run_dlgPro:
; Line 2097
	jmp	$LN21@run_dlgPro
$LN17@run_dlgPro:
; Line 2104
	lea	edx, DWORD PTR _intStr$37[ebp]
	push	edx
	mov	eax, DWORD PTR _iSel$14[ebp]
	push	eax
	push	328					; 00000148H
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2106
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 6705				; 00001a31H
	jne	SHORT $LN85@run_dlgPro
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 244				; 000000f4H
	mov	DWORD PTR tv914[ebp], ecx
	jmp	SHORT $LN86@run_dlgPro
$LN85@run_dlgPro:
	mov	edx, DWORD PTR _nppGUI$[ebp]
	add	edx, 364				; 0000016cH
	mov	DWORD PTR tv914[ebp], edx
$LN86@run_dlgPro:
	mov	eax, DWORD PTR tv914[ebp]
	mov	DWORD PTR _pVal$13[ebp], eax
; Line 2108
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR _intStr$37[ebp+edx]
	test	eax, eax
	jne	SHORT $LN16@run_dlgPro
; Line 2109
	mov	ecx, DWORD PTR _pVal$13[ebp]
	mov	DWORD PTR [ecx], 0
; Line 2110
	jmp	SHORT $LN21@run_dlgPro
$LN16@run_dlgPro:
; Line 2111
	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _intStr$37[ebp]
	push	edx
	call	_wcstol
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pVal$13[ebp]
	mov	DWORD PTR [ecx], eax
$LN21@run_dlgPro:
; Line 2120
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN35@run_dlgPro:
; Line 2124
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv925[ebp], edx
	mov	eax, DWORD PTR tv925[ebp]
	sub	eax, 6601				; 000019c9H
	mov	DWORD PTR tv925[ebp], eax
	cmp	DWORD PTR tv925[ebp], 122		; 0000007aH
	ja	$LN12@run_dlgPro
	mov	ecx, DWORD PTR tv925[ebp]
	movzx	edx, BYTE PTR $LN101@run_dlgPro[ecx]
	jmp	DWORD PTR $LN108@run_dlgPro[edx*4]
$LN11@run_dlgPro:
; Line 2127
	push	0
	push	0
	push	240					; 000000f0H
	push	6601					; 000019c9H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN87@run_dlgPro
	mov	DWORD PTR tv940[ebp], 1
	jmp	SHORT $LN88@run_dlgPro
$LN87@run_dlgPro:
	mov	DWORD PTR tv940[ebp], 0
$LN88@run_dlgPro:
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	al, BYTE PTR tv940[ebp]
	mov	BYTE PTR [edx+120], al
; Line 2128
	jmp	$LN12@run_dlgPro
$LN10@run_dlgPro:
; Line 2131
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+124], 0
; Line 2132
	jmp	$LN12@run_dlgPro
$LN9@run_dlgPro:
; Line 2135
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [edx+124], 1
; Line 2136
	jmp	$LN12@run_dlgPro
$LN8@run_dlgPro:
; Line 2139
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+124], 2
; Line 2140
	jmp	$LN12@run_dlgPro
$LN7@run_dlgPro:
; Line 2143
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+124], 3
; Line 2144
	jmp	$LN12@run_dlgPro
$LN6@run_dlgPro:
; Line 2146
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+240]
	xor	eax, 1
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+240], eax
; Line 2147
	jmp	$LN12@run_dlgPro
$LN5@run_dlgPro:
; Line 2150
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+240]
	xor	eax, 2
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+240], eax
; Line 2151
	jmp	$LN12@run_dlgPro
$LN4@run_dlgPro:
; Line 2154
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+360]
	xor	eax, 1
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+360], eax
; Line 2155
	jmp	$LN12@run_dlgPro
$LN3@run_dlgPro:
; Line 2158
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+360]
	xor	eax, 2
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+360], eax
; Line 2159
	jmp	$LN12@run_dlgPro
$LN2@run_dlgPro:
; Line 2163
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+48], 0
	jne	SHORT $LN1@run_dlgPro
; Line 2164
	mov	eax, 1
	jmp	$LN75@run_dlgPro
$LN1@run_dlgPro:
; Line 2166
	push	0
	push	0
	push	327					; 00000147H
	push	6724					; 00001a44H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _iSel$8[ebp], eax
; Line 2167
	push	0
	mov	edx, DWORD PTR _iSel$8[ebp]
	push	edx
	push	336					; 00000150H
	push	6724					; 00001a44H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _varStr$6[ebp], eax
; Line 2169
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	push	176					; 000000b0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2171
	mov	DWORD PTR _stringSize$3[ebp], 256	; 00000100H
; Line 2173
	lea	edx, DWORD PTR _str$34[ebp]
	push	edx
	push	256					; 00000100H
	push	13					; 0000000dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 2175
	lea	ecx, DWORD PTR _str$34[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str2Set$32[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 8
; Line 2176
	mov	edx, DWORD PTR _varStr$6[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+56]
	sub	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	lea	ecx, DWORD PTR _str2Set$32[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
; Line 2178
	lea	ecx, DWORD PTR _str2Set$32[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemTextW@12
; Line 2179
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str2Set$32[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN12@run_dlgPro:
; Line 2182
	mov	eax, 1
	jmp	SHORT $LN75@run_dlgPro
$LN73@run_dlgPro:
; Line 2185
	xor	eax, eax
$LN75@run_dlgPro:
; Line 2186
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN103@run_dlgPro:
	DD	$LN69@run_dlgPro
	DD	$LN68@run_dlgPro
	DD	$LN67@run_dlgPro
	DD	$LN66@run_dlgPro
$LN104@run_dlgPro:
	DD	$LN49@run_dlgPro
	DD	$LN47@run_dlgPro
	DD	$LN48@run_dlgPro
	DD	$LN46@run_dlgPro
$LN105@run_dlgPro:
	DD	$LN42@run_dlgPro
	DD	$LN41@run_dlgPro
	DD	$LN40@run_dlgPro
	DD	$LN39@run_dlgPro
	DD	$LN38@run_dlgPro
	DD	$LN37@run_dlgPro
	DD	$LN36@run_dlgPro
$LN98@run_dlgPro:
	DB	0
	DB	1
	DB	2
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	3
	DB	4
	DB	5
	npad	2
$LN106@run_dlgPro:
	DD	$LN31@run_dlgPro
	DD	$LN30@run_dlgPro
	DD	$LN29@run_dlgPro
	DD	$LN28@run_dlgPro
	DD	$LN27@run_dlgPro
	DD	$LN26@run_dlgPro
	DD	$LN25@run_dlgPro
$LN99@run_dlgPro:
	DB	0
	DB	1
	DB	2
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	3
	DB	4
	DB	5
	npad	2
$LN107@run_dlgPro:
	DD	$LN20@run_dlgPro
	DD	$LN17@run_dlgPro
	DD	$LN21@run_dlgPro
$LN100@run_dlgPro:
	DB	0
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	1
	npad	3
$LN108@run_dlgPro:
	DD	$LN11@run_dlgPro
	DD	$LN10@run_dlgPro
	DD	$LN9@run_dlgPro
	DD	$LN8@run_dlgPro
	DD	$LN7@run_dlgPro
	DD	$LN6@run_dlgPro
	DD	$LN5@run_dlgPro
	DD	$LN4@run_dlgPro
	DD	$LN3@run_dlgPro
	DD	$LN2@run_dlgPro
	DD	$LN12@run_dlgPro
$LN101@run_dlgPro:
	DB	0
	DB	10					; 0000000aH
	DB	1
	DB	2
	DB	3
	DB	4
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	5
	DB	6
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	7
	DB	8
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	9
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR $T27[ebp]
	jmp	??1strCouple@@QAE@XZ
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$1:
	lea	ecx, DWORD PTR $T31[ebp]
	jmp	??1strCouple@@QAE@XZ
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$2:
	lea	ecx, DWORD PTR $T30[ebp]
	jmp	??1strCouple@@QAE@XZ
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$3:
	lea	ecx, DWORD PTR $T28[ebp]
	jmp	??1strCouple@@QAE@XZ
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$4:
	lea	ecx, DWORD PTR $T25[ebp]
	jmp	??1strCouple@@QAE@XZ
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$5:
	lea	ecx, DWORD PTR $T26[ebp]
	jmp	??1strCouple@@QAE@XZ
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$6:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1strCouple@@QAE@XZ
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$7:
	lea	ecx, DWORD PTR _title$33[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$8:
	lea	ecx, DWORD PTR _str2Set$32[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z ENDP		; PrintSettingsDlg::run_dlgProc
; Function compile flags: /Odtp
;	COMDAT ??_GstrCouple@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GstrCouple@@QAEPAXI@Z PROC				; strCouple::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1strCouple@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GstrCouple@@QAEPAXI@Z ENDP				; strCouple::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0strCouple@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0strCouple@@QAE@ABU0@@Z PROC				; strCouple::strCouple, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0strCouple@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0strCouple@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??0strCouple@@QAE@ABU0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0strCouple@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0strCouple@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0strCouple@@QAE@ABU0@@Z ENDP				; strCouple::strCouple
; Function compile flags: /Odtp
;	COMDAT ??1strCouple@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1strCouple@@QAE@XZ PROC				; strCouple::~strCouple, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1strCouple@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1strCouple@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??1strCouple@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??1strCouple@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1strCouple@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1strCouple@@QAE@XZ ENDP				; strCouple::~strCouple
; Function compile flags: /Odtp
;	COMDAT ??0strCouple@@QAE@PA_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_varDesc$ = 8						; size = 4
_var$ = 12						; size = 4
??0strCouple@@QAE@PA_W0@Z PROC				; strCouple::strCouple, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.h
; Line 162
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0strCouple@@QAE@PA_W0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _varDesc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _var$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0strCouple@@QAE@PA_W0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??0strCouple@@QAE@PA_W0@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0strCouple@@QAE@PA_W0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0strCouple@@QAE@PA_W0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0strCouple@@QAE@PA_W0@Z ENDP				; strCouple::strCouple
; Function compile flags: /Odtp
_TEXT	SEGMENT
_index2Begin$2 = -264					; size = 4
_p$3 = -260						; size = 8
$T4 = -252						; size = 4
$T5 = -248						; size = 4
$T6 = -244						; size = 4
$T7 = -240						; size = 4
_nbLang$8 = -236					; size = 4
tv676 = -232						; size = 4
tv67 = -228						; size = 4
tv616 = -224						; size = 4
_enableDlgTheme$9 = -220				; size = 4
tv379 = -216						; size = 4
tv700 = -212						; size = 4
_size$10 = -208						; size = 4
tv319 = -204						; size = 4
tv410 = -200						; size = 4
tv791 = -196						; size = 4
tv355 = -192						; size = 4
tv760 = -188						; size = 4
tv333 = -184						; size = 4
tv736 = -180						; size = 4
tv301 = -176						; size = 4
tv725 = -172						; size = 4
tv269 = -168						; size = 4
tv709 = -164						; size = 4
tv281 = -160						; size = 4
_index$11 = -156					; size = 4
tv422 = -152						; size = 4
_index$12 = -148					; size = 4
_index$13 = -144					; size = 4
_i$14 = -140						; size = 4
_lang$15 = -136						; size = 4
_size$16 = -132						; size = 4
_index$17 = -128					; size = 4
_lang$18 = -124						; size = 4
_lang$19 = -120						; size = 4
_lang$20 = -116						; size = 4
tv395 = -110						; size = 1
tv776 = -109						; size = 1
_pNppParam$ = -108					; size = 4
_isTabReplacedBySpace$21 = -102				; size = 1
tv705 = -101						; size = 1
_nppGUI$ = -100						; size = 4
_useDefaultTab$22 = -94					; size = 1
_useDefaultTab$23 = -93					; size = 1
_tabSizeDlg$24 = -92					; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@TabSettings@@EAGHIIJ@Z PROC		; TabSettings::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1693
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@TabSettings@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1694
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 1695
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 1697
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN33@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN28@run_dlgPro
	jmp	$LN34@run_dlgPro
$LN33@run_dlgPro:
; Line 1701
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	push	6310					; 000018a6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1703
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [edx+4]
	call	eax
; Line 1704
	push	0
	push	6310					; 000018a6H
	push	6310					; 000018a6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?create@URLCtrl@@QAEXPAUHWND__@@H0@Z	; URLCtrl::create
; Line 1705
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	push	ecx
	push	241					; 000000f1H
	push	6302					; 0000189eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1707
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNbLang@NppParameters@@QBEHXZ	; NppParameters::getNbLang
	mov	DWORD PTR _nbLang$8[ebp], eax
; Line 1708
	push	OFFSET $SG145117
	push	0
	push	384					; 00000180H
	push	6509					; 0000196dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1709
	mov	DWORD PTR _i$14[ebp], 0
	jmp	SHORT $LN32@run_dlgPro
$LN31@run_dlgPro:
	mov	eax, DWORD PTR _i$14[ebp]
	add	eax, 1
	mov	DWORD PTR _i$14[ebp], eax
$LN32@run_dlgPro:
	mov	ecx, DWORD PTR _i$14[ebp]
	cmp	ecx, DWORD PTR _nbLang$8[ebp]
	jge	SHORT $LN30@run_dlgPro
; Line 1711
	mov	edx, DWORD PTR _i$14[ebp]
	push	edx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ; NppParameters::getLangFromIndex
	add	eax, 4
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	384					; 00000180H
	push	6509					; 0000196dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1712
	jmp	SHORT $LN31@run_dlgPro
$LN30@run_dlgPro:
; Line 1713
	mov	DWORD PTR _index2Begin$2[ebp], 0
; Line 1714
	push	0
	push	0
	push	390					; 00000186H
	push	6509					; 0000196dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1715
	push	0
	push	6511					; 0000196fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1716
	push	0
	push	6510					; 0000196eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1717
	push	0
	push	6512					; 00001970H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1718
	push	0
	push	6512					; 00001970H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1720
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$9[ebp], eax
; Line 1721
	cmp	DWORD PTR _enableDlgTheme$9[ebp], 0
	je	SHORT $LN29@run_dlgPro
; Line 1722
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR _enableDlgTheme$9[ebp]
$LN29@run_dlgPro:
; Line 1724
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN28@run_dlgPro:
; Line 1728
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 1
	jne	$LN27@run_dlgPro
; Line 1730
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 6509				; 0000196dH
	jne	$LN27@run_dlgPro
; Line 1732
	push	0
	push	0
	push	392					; 00000188H
	push	6509					; 0000196dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$17[ebp], eax
; Line 1733
	cmp	DWORD PTR _index$17[ebp], -1
	jne	SHORT $LN25@run_dlgPro
; Line 1734
	xor	eax, eax
	jmp	$LN36@run_dlgPro
$LN25@run_dlgPro:
; Line 1735
	cmp	DWORD PTR _index$17[ebp], 0
	je	SHORT $LN38@run_dlgPro
	mov	DWORD PTR tv269[ebp], 5
	jmp	SHORT $LN39@run_dlgPro
$LN38@run_dlgPro:
	mov	DWORD PTR tv269[ebp], 0
$LN39@run_dlgPro:
	mov	edx, DWORD PTR tv269[ebp]
	push	edx
	push	6511					; 0000196fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1736
	cmp	DWORD PTR _index$17[ebp], 0
	je	SHORT $LN40@run_dlgPro
	mov	DWORD PTR tv281[ebp], 5
	jmp	SHORT $LN41@run_dlgPro
$LN40@run_dlgPro:
	mov	DWORD PTR tv281[ebp], 0
$LN41@run_dlgPro:
	mov	edx, DWORD PTR tv281[ebp]
	push	edx
	push	6510					; 0000196eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1738
	cmp	DWORD PTR _index$17[ebp], 0
	je	$LN24@run_dlgPro
; Line 1740
	mov	edx, DWORD PTR _index$17[ebp]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ; NppParameters::getLangFromIndex
	mov	DWORD PTR _lang$19[ebp], eax
; Line 1741
	cmp	DWORD PTR _lang$19[ebp], 0
	jne	SHORT $LN23@run_dlgPro
	xor	eax, eax
	jmp	$LN36@run_dlgPro
$LN23@run_dlgPro:
; Line 1742
	mov	eax, DWORD PTR _lang$19[ebp]
	cmp	DWORD PTR [eax+132], -1
	je	SHORT $LN42@run_dlgPro
	mov	ecx, DWORD PTR _lang$19[ebp]
	cmp	DWORD PTR [ecx+132], 0
	je	SHORT $LN42@run_dlgPro
	mov	DWORD PTR tv301[ebp], 0
	jmp	SHORT $LN43@run_dlgPro
$LN42@run_dlgPro:
	mov	DWORD PTR tv301[ebp], 1
$LN43@run_dlgPro:
	mov	dl, BYTE PTR tv301[ebp]
	mov	BYTE PTR _useDefaultTab$22[ebp], dl
; Line 1744
	push	0
	movzx	eax, BYTE PTR _useDefaultTab$22[ebp]
	push	eax
	push	241					; 000000f1H
	push	6510					; 0000196eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1745
	movzx	eax, BYTE PTR _useDefaultTab$22[ebp]
	test	eax, eax
	jne	SHORT $LN44@run_dlgPro
	mov	DWORD PTR tv319[ebp], 1
	jmp	SHORT $LN45@run_dlgPro
$LN44@run_dlgPro:
	mov	DWORD PTR tv319[ebp], 0
$LN45@run_dlgPro:
	mov	ecx, DWORD PTR tv319[ebp]
	push	ecx
	push	6303					; 0000189fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1747
	movzx	ecx, BYTE PTR _useDefaultTab$22[ebp]
	test	ecx, ecx
	je	SHORT $LN46@run_dlgPro
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR tv333[ebp], eax
	jmp	SHORT $LN47@run_dlgPro
$LN46@run_dlgPro:
	mov	ecx, DWORD PTR _lang$19[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR tv333[ebp], edx
$LN47@run_dlgPro:
	mov	eax, DWORD PTR tv333[ebp]
	mov	DWORD PTR _size$10[ebp], eax
; Line 1748
	push	0
	mov	ecx, DWORD PTR _size$10[ebp]
	push	ecx
	push	6310					; 000018a6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1749
	push	0
	mov	ecx, DWORD PTR _size$10[ebp]
	push	ecx
	push	6512					; 00001970H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1751
	movzx	ecx, BYTE PTR _useDefaultTab$22[ebp]
	test	ecx, ecx
	jne	SHORT $LN48@run_dlgPro
	mov	DWORD PTR tv355[ebp], 1
	jmp	SHORT $LN49@run_dlgPro
$LN48@run_dlgPro:
	mov	DWORD PTR tv355[ebp], 0
$LN49@run_dlgPro:
	mov	edx, DWORD PTR tv355[ebp]
	push	edx
	push	6310					; 000018a6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1752
	movzx	edx, BYTE PTR _useDefaultTab$22[ebp]
	push	edx
	push	6512					; 00001970H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1753
	movzx	edx, BYTE PTR _useDefaultTab$22[ebp]
	test	edx, edx
	jne	SHORT $LN50@run_dlgPro
	mov	DWORD PTR tv379[ebp], 1
	jmp	SHORT $LN51@run_dlgPro
$LN50@run_dlgPro:
	mov	DWORD PTR tv379[ebp], 0
$LN51@run_dlgPro:
	mov	eax, DWORD PTR tv379[ebp]
	push	eax
	push	6310					; 000018a6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1754
	movzx	eax, BYTE PTR _useDefaultTab$22[ebp]
	test	eax, eax
	je	SHORT $LN52@run_dlgPro
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR [ecx+24]
	mov	BYTE PTR tv395[ebp], dl
	jmp	SHORT $LN53@run_dlgPro
$LN52@run_dlgPro:
	mov	eax, DWORD PTR _lang$19[ebp]
	mov	cl, BYTE PTR [eax+128]
	mov	BYTE PTR tv395[ebp], cl
$LN53@run_dlgPro:
	push	0
	movzx	edx, BYTE PTR tv395[ebp]
	push	edx
	push	241					; 000000f1H
	push	6302					; 0000189eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1755
	movzx	edx, BYTE PTR _useDefaultTab$22[ebp]
	test	edx, edx
	jne	SHORT $LN54@run_dlgPro
	mov	DWORD PTR tv410[ebp], 1
	jmp	SHORT $LN55@run_dlgPro
$LN54@run_dlgPro:
	mov	DWORD PTR tv410[ebp], 0
$LN55@run_dlgPro:
	mov	eax, DWORD PTR tv410[ebp]
	push	eax
	push	6302					; 0000189eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1757
	movzx	eax, BYTE PTR _useDefaultTab$22[ebp]
	test	eax, eax
	jne	SHORT $LN22@run_dlgPro
; Line 1759
	push	0
	mov	ecx, DWORD PTR _lang$19[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	push	6310					; 000018a6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1760
	push	0
	mov	edx, DWORD PTR _lang$19[ebp]
	movzx	eax, BYTE PTR [edx+128]
	push	eax
	push	241					; 000000f1H
	push	6302					; 0000189eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN22@run_dlgPro:
; Line 1763
	jmp	$LN21@run_dlgPro
$LN24@run_dlgPro:
; Line 1765
	push	1
	push	6303					; 0000189fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1766
	push	1
	push	6310					; 000018a6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1767
	push	5
	push	6310					; 000018a6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1768
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	6310					; 000018a6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1769
	push	0
	push	6512					; 00001970H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1770
	push	1
	push	6302					; 0000189eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1771
	push	0
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+24]
	push	eax
	push	241					; 000000f1H
	push	6302					; 0000189eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN21@run_dlgPro:
; Line 1774
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN27@run_dlgPro:
; Line 1778
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv422[ebp], eax
	cmp	DWORD PTR tv422[ebp], 6302		; 0000189eH
	je	$LN12@run_dlgPro
	cmp	DWORD PTR tv422[ebp], 6310		; 000018a6H
	je	SHORT $LN18@run_dlgPro
	cmp	DWORD PTR tv422[ebp], 6510		; 0000196eH
	je	$LN5@run_dlgPro
	jmp	$LN34@run_dlgPro
$LN18@run_dlgPro:
; Line 1782
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	call	??0ValueDlg@@QAE@XZ			; ValueDlg::ValueDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1783
	push	OFFSET $SG145149
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	call	?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z ; ValueDlg::init
; Line 1785
	lea	ecx, DWORD PTR _p$3[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCursorPos@4
; Line 1786
	push	0
	mov	edx, DWORD PTR _p$3[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	call	?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z	; ValueDlg::doDialog
	mov	DWORD PTR _size$16[ebp], eax
; Line 1787
	cmp	DWORD PTR _size$16[ebp], -1
	jne	SHORT $LN17@run_dlgPro
	mov	DWORD PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN36@run_dlgPro
$LN17@run_dlgPro:
; Line 1789
	push	0
	mov	ecx, DWORD PTR _size$16[ebp]
	push	ecx
	push	6310					; 000018a6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1790
	push	0
	mov	ecx, DWORD PTR _size$16[ebp]
	push	ecx
	push	6512					; 00001970H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1792
	push	0
	push	0
	push	392					; 00000188H
	push	6509					; 0000196dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$11[ebp], eax
; Line 1793
	cmp	DWORD PTR _index$11[ebp], -1
	jne	SHORT $LN16@run_dlgPro
	mov	DWORD PTR $T6[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN36@run_dlgPro
$LN16@run_dlgPro:
; Line 1795
	cmp	DWORD PTR _index$11[ebp], 0
	je	SHORT $LN15@run_dlgPro
; Line 1797
	mov	eax, DWORD PTR _index$11[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ; NppParameters::getLangFromIndex
	mov	DWORD PTR _lang$15[ebp], eax
; Line 1798
	cmp	DWORD PTR _lang$15[ebp], 0
	jne	SHORT $LN14@run_dlgPro
	mov	DWORD PTR $T5[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN36@run_dlgPro
$LN14@run_dlgPro:
; Line 1799
	mov	ecx, DWORD PTR _lang$15[ebp]
	mov	edx, DWORD PTR _size$16[ebp]
	mov	DWORD PTR [ecx+132], edx
; Line 1802
	mov	ecx, DWORD PTR _lang$15[ebp]
	call	?getTabInfo@Lang@@QBEHXZ		; Lang::getTabInfo
	push	eax
	mov	ecx, DWORD PTR _lang$15[ebp]
	call	?getLangName@Lang@@QBEPB_WXZ		; Lang::getLangName
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?insertTabInfo@NppParameters@@QAE_NPB_WH@Z ; NppParameters::insertTabInfo
; Line 1804
	jmp	SHORT $LN13@run_dlgPro
$LN15@run_dlgPro:
; Line 1806
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR _size$16[ebp]
	mov	DWORD PTR [eax+20], ecx
$LN13@run_dlgPro:
; Line 1809
	push	0
	push	0
	push	1054					; 0000041eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1810
	mov	DWORD PTR $T7[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN36@run_dlgPro
$LN12@run_dlgPro:
; Line 1815
	push	0
	push	0
	push	240					; 000000f0H
	push	6302					; 0000189eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN56@run_dlgPro
	mov	DWORD PTR tv616[ebp], 1
	jmp	SHORT $LN57@run_dlgPro
$LN56@run_dlgPro:
	mov	DWORD PTR tv616[ebp], 0
$LN57@run_dlgPro:
	mov	al, BYTE PTR tv616[ebp]
	mov	BYTE PTR _isTabReplacedBySpace$21[ebp], al
; Line 1816
	push	0
	push	0
	push	392					; 00000188H
	push	6509					; 0000196dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$13[ebp], eax
; Line 1817
	cmp	DWORD PTR _index$13[ebp], -1
	jne	SHORT $LN11@run_dlgPro
	xor	eax, eax
	jmp	$LN36@run_dlgPro
$LN11@run_dlgPro:
; Line 1818
	cmp	DWORD PTR _index$13[ebp], 0
	je	SHORT $LN10@run_dlgPro
; Line 1820
	mov	eax, DWORD PTR _index$13[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ; NppParameters::getLangFromIndex
	mov	DWORD PTR _lang$20[ebp], eax
; Line 1821
	cmp	DWORD PTR _lang$20[ebp], 0
	jne	SHORT $LN9@run_dlgPro
	xor	eax, eax
	jmp	$LN36@run_dlgPro
$LN9@run_dlgPro:
; Line 1822
	mov	ecx, DWORD PTR _lang$20[ebp]
	cmp	DWORD PTR [ecx+132], 0
	je	SHORT $LN7@run_dlgPro
	mov	edx, DWORD PTR _lang$20[ebp]
	cmp	DWORD PTR [edx+132], -1
	jne	SHORT $LN8@run_dlgPro
$LN7@run_dlgPro:
; Line 1823
	mov	eax, DWORD PTR _lang$20[ebp]
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+132], edx
$LN8@run_dlgPro:
; Line 1824
	mov	eax, DWORD PTR _lang$20[ebp]
	mov	cl, BYTE PTR _isTabReplacedBySpace$21[ebp]
	mov	BYTE PTR [eax+128], cl
; Line 1827
	mov	ecx, DWORD PTR _lang$20[ebp]
	call	?getTabInfo@Lang@@QBEHXZ		; Lang::getTabInfo
	push	eax
	mov	ecx, DWORD PTR _lang$20[ebp]
	call	?getLangName@Lang@@QBEPB_WXZ		; Lang::getLangName
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?insertTabInfo@NppParameters@@QAE_NPB_WH@Z ; NppParameters::insertTabInfo
; Line 1829
	jmp	SHORT $LN6@run_dlgPro
$LN10@run_dlgPro:
; Line 1831
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	al, BYTE PTR _isTabReplacedBySpace$21[ebp]
	mov	BYTE PTR [edx+24], al
$LN6@run_dlgPro:
; Line 1833
	push	0
	push	0
	push	1053					; 0000041dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1834
	mov	eax, 1
	jmp	$LN36@run_dlgPro
$LN5@run_dlgPro:
; Line 1839
	push	0
	push	0
	push	240					; 000000f0H
	push	6510					; 0000196eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN58@run_dlgPro
	mov	DWORD PTR tv676[ebp], 1
	jmp	SHORT $LN59@run_dlgPro
$LN58@run_dlgPro:
	mov	DWORD PTR tv676[ebp], 0
$LN59@run_dlgPro:
	mov	dl, BYTE PTR tv676[ebp]
	mov	BYTE PTR _useDefaultTab$23[ebp], dl
; Line 1840
	push	0
	push	0
	push	392					; 00000188H
	push	6509					; 0000196dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$12[ebp], eax
; Line 1841
	cmp	DWORD PTR _index$12[ebp], -1
	je	SHORT $LN3@run_dlgPro
	cmp	DWORD PTR _index$12[ebp], 0
	jne	SHORT $LN4@run_dlgPro
$LN3@run_dlgPro:
; Line 1842
	xor	eax, eax
	jmp	$LN36@run_dlgPro
$LN4@run_dlgPro:
; Line 1844
	mov	edx, DWORD PTR _index$12[ebp]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ; NppParameters::getLangFromIndex
	mov	DWORD PTR _lang$18[ebp], eax
; Line 1845
	cmp	DWORD PTR _lang$18[ebp], 0
	jne	SHORT $LN2@run_dlgPro
; Line 1846
	xor	eax, eax
	jmp	$LN36@run_dlgPro
$LN2@run_dlgPro:
; Line 1849
	movzx	eax, BYTE PTR _useDefaultTab$23[ebp]
	test	eax, eax
	je	SHORT $LN60@run_dlgPro
	mov	DWORD PTR tv700[ebp], 0
	jmp	SHORT $LN61@run_dlgPro
$LN60@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR tv700[ebp], edx
$LN61@run_dlgPro:
	mov	eax, DWORD PTR _lang$18[ebp]
	mov	ecx, DWORD PTR tv700[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 1850
	movzx	edx, BYTE PTR _useDefaultTab$23[ebp]
	test	edx, edx
	je	SHORT $LN62@run_dlgPro
	mov	BYTE PTR tv705[ebp], 0
	jmp	SHORT $LN63@run_dlgPro
$LN62@run_dlgPro:
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR [eax+24]
	mov	BYTE PTR tv705[ebp], cl
$LN63@run_dlgPro:
	mov	edx, DWORD PTR _lang$18[ebp]
	mov	al, BYTE PTR tv705[ebp]
	mov	BYTE PTR [edx+128], al
; Line 1853
	movzx	ecx, BYTE PTR _useDefaultTab$23[ebp]
	test	ecx, ecx
	jne	SHORT $LN64@run_dlgPro
	mov	DWORD PTR tv709[ebp], 1
	jmp	SHORT $LN65@run_dlgPro
$LN64@run_dlgPro:
	mov	DWORD PTR tv709[ebp], 0
$LN65@run_dlgPro:
	mov	edx, DWORD PTR tv709[ebp]
	push	edx
	push	6303					; 0000189fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1854
	movzx	edx, BYTE PTR _useDefaultTab$23[ebp]
	test	edx, edx
	je	SHORT $LN66@run_dlgPro
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv725[ebp], ecx
	jmp	SHORT $LN67@run_dlgPro
$LN66@run_dlgPro:
	mov	edx, DWORD PTR _lang$18[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	DWORD PTR tv725[ebp], eax
$LN67@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv725[ebp]
	push	ecx
	push	6310					; 000018a6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1855
	movzx	ecx, BYTE PTR _useDefaultTab$23[ebp]
	test	ecx, ecx
	jne	SHORT $LN68@run_dlgPro
	mov	DWORD PTR tv736[ebp], 1
	jmp	SHORT $LN69@run_dlgPro
$LN68@run_dlgPro:
	mov	DWORD PTR tv736[ebp], 0
$LN69@run_dlgPro:
	mov	edx, DWORD PTR tv736[ebp]
	push	edx
	push	6310					; 000018a6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1856
	movzx	edx, BYTE PTR _useDefaultTab$23[ebp]
	push	edx
	push	6512					; 00001970H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1857
	movzx	edx, BYTE PTR _useDefaultTab$23[ebp]
	test	edx, edx
	jne	SHORT $LN70@run_dlgPro
	mov	DWORD PTR tv760[ebp], 1
	jmp	SHORT $LN71@run_dlgPro
$LN70@run_dlgPro:
	mov	DWORD PTR tv760[ebp], 0
$LN71@run_dlgPro:
	mov	eax, DWORD PTR tv760[ebp]
	push	eax
	push	6310					; 000018a6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1858
	movzx	eax, BYTE PTR _useDefaultTab$23[ebp]
	test	eax, eax
	je	SHORT $LN72@run_dlgPro
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR [ecx+24]
	mov	BYTE PTR tv776[ebp], dl
	jmp	SHORT $LN73@run_dlgPro
$LN72@run_dlgPro:
	mov	eax, DWORD PTR _lang$18[ebp]
	mov	cl, BYTE PTR [eax+128]
	mov	BYTE PTR tv776[ebp], cl
$LN73@run_dlgPro:
	push	0
	movzx	edx, BYTE PTR tv776[ebp]
	push	edx
	push	241					; 000000f1H
	push	6302					; 0000189eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1859
	movzx	edx, BYTE PTR _useDefaultTab$23[ebp]
	test	edx, edx
	jne	SHORT $LN74@run_dlgPro
	mov	DWORD PTR tv791[ebp], 1
	jmp	SHORT $LN75@run_dlgPro
$LN74@run_dlgPro:
	mov	DWORD PTR tv791[ebp], 0
$LN75@run_dlgPro:
	mov	eax, DWORD PTR tv791[ebp]
	push	eax
	push	6302					; 0000189eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1862
	movzx	eax, BYTE PTR _useDefaultTab$23[ebp]
	test	eax, eax
	je	SHORT $LN1@run_dlgPro
; Line 1863
	push	-1
	mov	ecx, DWORD PTR _lang$18[ebp]
	call	?getLangName@Lang@@QBEPB_WXZ		; Lang::getLangName
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?insertTabInfo@NppParameters@@QAE_NPB_WH@Z ; NppParameters::insertTabInfo
$LN1@run_dlgPro:
; Line 1865
	mov	eax, 1
	jmp	SHORT $LN36@run_dlgPro
$LN34@run_dlgPro:
; Line 1870
	xor	eax, eax
$LN36@run_dlgPro:
; Line 1871
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@TabSettings@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _tabSizeDlg$24[ebp]
	jmp	??1ValueDlg@@UAE@XZ
__ehhandler$?run_dlgProc@TabSettings@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@TabSettings@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@TabSettings@@EAGHIIJ@Z ENDP		; TabSettings::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -448						; size = 12
$T3 = -436						; size = 12
tv663 = -424						; size = 4
_lang2Remove$4 = -420					; size = 12
tv662 = -408						; size = 4
$T5 = -404						; size = 4
$T6 = -400						; size = 4
tv653 = -396						; size = 4
_len$7 = -392						; size = 4
tv451 = -388						; size = 4
tv656 = -384						; size = 4
_i$8 = -380						; size = 4
tv654 = -376						; size = 4
tv407 = -372						; size = 4
tv92 = -368						; size = 4
_lexersRoot$9 = -364					; size = 4
_hDisableList$10 = -360					; size = 4
_nbLang$11 = -356					; size = 4
$T12 = -352						; size = 4
_idListbox2Disable$13 = -348				; size = 4
tv666 = -344						; size = 4
_hEnableList$14 = -340					; size = 4
tv671 = -336						; size = 4
tv659 = -332						; size = 4
tv324 = -328						; size = 4
_idButton2Enable$15 = -324				; size = 4
_idButton2Enable$16 = -320				; size = 4
tv601 = -316						; size = 4
_enableDlgTheme$17 = -312				; size = 4
tv369 = -308						; size = 4
tv198 = -304						; size = 4
_idButton2Disable$18 = -300				; size = 4
tv361 = -296						; size = 4
_pDestLst$19 = -292					; size = 4
tv67 = -288						; size = 4
_idButton2Disable$20 = -284				; size = 4
_element$21 = -280					; size = 4
_iAdd$22 = -276						; size = 4
tv325 = -272						; size = 4
_grandParent$23 = -268					; size = 4
_cmdID$24 = -264					; size = 4
_list2Add$25 = -260					; size = 4
_i$26 = -256						; size = 4
_childNode$27 = -252					; size = 4
_i$28 = -248						; size = 4
_pSrcLst$29 = -244					; size = 4
_iRemove$30 = -240					; size = 4
_x$31 = -236						; size = 4
_list2Remove$32 = -232					; size = 4
_i$33 = -228						; size = 4
_nppGUI$ = -224						; size = 4
$T34 = -217						; size = 1
_pNppParam$ = -216					; size = 4
_found$35 = -209					; size = 1
$T36 = -208						; size = 36
$T37 = -172						; size = 28
_str$38 = -144						; size = 28
_lmi$39 = -116						; size = 36
_s$40 = -80						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z PROC		; LangMenuDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1505
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 436				; 000001b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1506
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 1507
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 1509
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN42@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN28@run_dlgPro
	jmp	$LN43@run_dlgPro
$LN42@run_dlgPro:
; Line 1513
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNbLang@NppParameters@@QBEHXZ	; NppParameters::getNbLang
	mov	DWORD PTR _nbLang$11[ebp], eax
; Line 1514
	mov	DWORD PTR _i$28[ebp], 0
	jmp	SHORT $LN41@run_dlgPro
$LN40@run_dlgPro:
	mov	ecx, DWORD PTR _i$28[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$28[ebp], ecx
$LN41@run_dlgPro:
	mov	edx, DWORD PTR _i$28[ebp]
	cmp	edx, DWORD PTR _nbLang$11[ebp]
	jge	SHORT $LN39@run_dlgPro
; Line 1516
	mov	eax, DWORD PTR _i$28[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ; NppParameters::getLangFromIndex
	add	eax, 4
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	384					; 00000180H
	push	6509					; 0000196dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1517
	jmp	SHORT $LN40@run_dlgPro
$LN39@run_dlgPro:
; Line 1519
	mov	DWORD PTR _i$33[ebp], 0
	jmp	SHORT $LN38@run_dlgPro
$LN37@run_dlgPro:
	mov	eax, DWORD PTR _i$33[ebp]
	add	eax, 1
	mov	DWORD PTR _i$33[ebp], eax
$LN38@run_dlgPro:
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	mov	edx, DWORD PTR _i$33[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jge	$LN36@run_dlgPro
; Line 1521
	lea	ecx, DWORD PTR _str$38[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1522
	cmp	DWORD PTR _i$33[ebp], 15		; 0000000fH
	je	$LN35@run_dlgPro
; Line 1524
	mov	eax, DWORD PTR _i$33[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?langTypeToCommandID@NppParameters@@QBEHW4LangType@@@Z ; NppParameters::langTypeToCommandID
	mov	DWORD PTR _cmdID$24[ebp], eax
; Line 1525
	cmp	DWORD PTR _cmdID$24[ebp], -1
	je	$LN35@run_dlgPro
; Line 1527
	lea	ecx, DWORD PTR _str$38[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmdID$24[ebp]
	push	edx
	call	?getNameStrFromCmd@@YAXKAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; getNameStrFromCmd
	add	esp, 8
; Line 1528
	lea	ecx, DWORD PTR _str$38[ebp]
	call	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
	test	eax, eax
	jbe	$LN35@run_dlgPro
; Line 1530
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	eax, DWORD PTR _str$38[ebp]
	push	eax
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv653[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _cmdID$24[ebp]
	push	edx
	mov	eax, DWORD PTR _i$33[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T36[ebp]
	call	??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; LangMenuItem::LangMenuItem
	mov	DWORD PTR tv654[ebp], eax
	mov	ecx, DWORD PTR tv654[ebp]
	mov	DWORD PTR tv656[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv656[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112676				; 0001b824H
	call	?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEX$$QAULangMenuItem@@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T36[ebp]
	call	??1LangMenuItem@@QAE@XZ
; Line 1531
	lea	ecx, DWORD PTR _str$38[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	384					; 00000180H
	push	6501					; 00001965H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN35@run_dlgPro:
; Line 1535
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$38[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	jmp	$LN37@run_dlgPro
$LN36@run_dlgPro:
; Line 1537
	mov	DWORD PTR _i$26[ebp], 0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 100				; 00000064H
	call	?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
	mov	DWORD PTR _len$7[ebp], eax
	jmp	SHORT $LN32@run_dlgPro
$LN31@run_dlgPro:
	mov	edx, DWORD PTR _i$26[ebp]
	add	edx, 1
	mov	DWORD PTR _i$26[ebp], edx
$LN32@run_dlgPro:
	mov	eax, DWORD PTR _i$26[ebp]
	cmp	eax, DWORD PTR _len$7[ebp]
	jae	SHORT $LN30@run_dlgPro
; Line 1539
	mov	ecx, DWORD PTR _i$26[ebp]
	push	ecx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 100				; 00000064H
	call	??A?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::operator[]
	add	eax, 8
	mov	ecx, eax
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	384					; 00000180H
	push	6502					; 00001966H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1540
	jmp	SHORT $LN31@run_dlgPro
$LN30@run_dlgPro:
; Line 1542
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+116]
	test	edx, edx
	je	SHORT $LN47@run_dlgPro
	mov	DWORD PTR tv198[ebp], 1
	jmp	SHORT $LN48@run_dlgPro
$LN47@run_dlgPro:
	mov	DWORD PTR tv198[ebp], 0
$LN48@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv198[ebp]
	push	eax
	push	241					; 000000f1H
	push	6507					; 0000196bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1543
	push	0
	push	6503					; 00001967H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1544
	push	0
	push	6504					; 00001968H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1546
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$17[ebp], eax
; Line 1547
	cmp	DWORD PTR _enableDlgTheme$17[ebp], 0
	je	SHORT $LN29@run_dlgPro
; Line 1548
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR _enableDlgTheme$17[ebp]
$LN29@run_dlgPro:
; Line 1550
	mov	eax, 1
	jmp	$LN45@run_dlgPro
$LN28@run_dlgPro:
; Line 1554
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 1
	jne	$LN27@run_dlgPro
; Line 1556
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 6502				; 00001966H
	je	SHORT $LN25@run_dlgPro
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 6501				; 00001965H
	jne	$LN27@run_dlgPro
$LN25@run_dlgPro:
; Line 1558
	push	6501					; 00001965H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hEnableList$14[ebp], eax
; Line 1559
	push	6502					; 00001966H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hDisableList$10[ebp], eax
; Line 1560
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 2
	jne	SHORT $LN24@run_dlgPro
; Line 1562
	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR _hEnableList$14[ebp]
	jne	SHORT $LN23@run_dlgPro
; Line 1563
	push	0
	push	6503					; 00001967H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN22@run_dlgPro
$LN23@run_dlgPro:
; Line 1564
	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR _hDisableList$10[ebp]
	jne	SHORT $LN22@run_dlgPro
; Line 1565
	push	0
	push	6504					; 00001968H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN22@run_dlgPro:
; Line 1566
	mov	eax, 1
	jmp	$LN45@run_dlgPro
$LN24@run_dlgPro:
; Line 1571
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 6501				; 00001965H
	jne	SHORT $LN20@run_dlgPro
; Line 1573
	mov	DWORD PTR _idButton2Enable$16[ebp], 6503 ; 00001967H
; Line 1574
	mov	DWORD PTR _idButton2Disable$20[ebp], 6504 ; 00001968H
; Line 1576
	jmp	SHORT $LN19@run_dlgPro
$LN20@run_dlgPro:
; Line 1578
	mov	DWORD PTR _idButton2Enable$16[ebp], 6504 ; 00001968H
; Line 1579
	mov	DWORD PTR _idButton2Disable$20[ebp], 6503 ; 00001967H
$LN19@run_dlgPro:
; Line 1582
	push	0
	push	0
	push	392					; 00000188H
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _i$8[ebp], eax
; Line 1583
	cmp	DWORD PTR _i$8[ebp], -1
	je	$LN18@run_dlgPro
; Line 1585
	push	1
	mov	eax, DWORD PTR _idButton2Enable$16[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1586
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 6501				; 00001965H
	jne	SHORT $LN49@run_dlgPro
	mov	DWORD PTR tv324[ebp], 6502		; 00001966H
	jmp	SHORT $LN50@run_dlgPro
$LN49@run_dlgPro:
	mov	DWORD PTR tv324[ebp], 6501		; 00001965H
$LN50@run_dlgPro:
	mov	edx, DWORD PTR tv324[ebp]
	mov	DWORD PTR _idListbox2Disable$13[ebp], edx
; Line 1587
	push	0
	push	-1
	push	390					; 00000186H
	mov	eax, DWORD PTR _idListbox2Disable$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1588
	push	0
	mov	eax, DWORD PTR _idButton2Disable$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
$LN18@run_dlgPro:
; Line 1590
	mov	eax, 1
	jmp	$LN45@run_dlgPro
$LN27@run_dlgPro:
; Line 1595
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv325[ebp], eax
	cmp	DWORD PTR tv325[ebp], 6503		; 00001967H
	jb	$LN43@run_dlgPro
	cmp	DWORD PTR tv325[ebp], 6504		; 00001968H
	jbe	$LN14@run_dlgPro
	cmp	DWORD PTR tv325[ebp], 6507		; 0000196bH
	je	SHORT $LN15@run_dlgPro
	jmp	$LN43@run_dlgPro
$LN15@run_dlgPro:
; Line 1599
	push	0
	push	0
	push	240					; 000000f0H
	push	6507					; 0000196bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN51@run_dlgPro
	mov	DWORD PTR tv361[ebp], 1
	jmp	SHORT $LN52@run_dlgPro
$LN51@run_dlgPro:
	mov	DWORD PTR tv361[ebp], 0
$LN52@run_dlgPro:
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR tv361[ebp]
	mov	BYTE PTR [eax+116], cl
; Line 1602
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+116]
	test	eax, eax
	je	SHORT $LN53@run_dlgPro
	mov	DWORD PTR tv369[ebp], OFFSET $SG144863
	jmp	SHORT $LN54@run_dlgPro
$LN53@run_dlgPro:
	mov	DWORD PTR tv369[ebp], OFFSET $SG144864
$LN54@run_dlgPro:
	push	0
	push	OFFSET $SG144862
	mov	ecx, DWORD PTR tv369[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__MessageBoxW@16
; Line 1603
	mov	eax, 1
	jmp	$LN45@run_dlgPro
$LN14@run_dlgPro:
; Line 1612
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 6503				; 00001967H
	jne	SHORT $LN13@run_dlgPro
; Line 1614
	mov	DWORD PTR _list2Remove$32[ebp], 6501	; 00001965H
; Line 1615
	mov	DWORD PTR _list2Add$25[ebp], 6502	; 00001966H
; Line 1616
	mov	DWORD PTR _idButton2Enable$15[ebp], 6504 ; 00001968H
; Line 1617
	mov	DWORD PTR _idButton2Disable$18[ebp], 6503 ; 00001967H
; Line 1618
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112676				; 0001b824H
	mov	DWORD PTR _pSrcLst$29[ebp], eax
; Line 1619
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 100				; 00000064H
	mov	DWORD PTR _pDestLst$19[ebp], ecx
; Line 1621
	jmp	SHORT $LN12@run_dlgPro
$LN13@run_dlgPro:
; Line 1623
	mov	DWORD PTR _list2Remove$32[ebp], 6502	; 00001966H
; Line 1624
	mov	DWORD PTR _list2Add$25[ebp], 6501	; 00001965H
; Line 1625
	mov	DWORD PTR _idButton2Enable$15[ebp], 6503 ; 00001967H
; Line 1626
	mov	DWORD PTR _idButton2Disable$18[ebp], 6504 ; 00001968H
; Line 1627
	mov	edx, DWORD PTR _nppGUI$[ebp]
	add	edx, 100				; 00000064H
	mov	DWORD PTR _pSrcLst$29[ebp], edx
; Line 1628
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112676				; 0001b824H
	mov	DWORD PTR _pDestLst$19[ebp], eax
$LN12@run_dlgPro:
; Line 1630
	push	0
	push	0
	push	392					; 00000188H
	mov	ecx, DWORD PTR _list2Remove$32[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _iRemove$30[ebp], eax
; Line 1631
	cmp	DWORD PTR _iRemove$30[ebp], -1
	jne	SHORT $LN11@run_dlgPro
; Line 1632
	mov	eax, 1
	jmp	$LN45@run_dlgPro
$LN11@run_dlgPro:
; Line 1635
	lea	ecx, DWORD PTR _s$40[ebp]
	push	ecx
	mov	edx, DWORD PTR _iRemove$30[ebp]
	push	edx
	push	393					; 00000189H
	mov	eax, DWORD PTR _list2Remove$32[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1637
	mov	eax, DWORD PTR _iRemove$30[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSrcLst$29[ebp]
	call	?at@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::at
	push	eax
	lea	ecx, DWORD PTR _lmi$39[ebp]
	call	??0LangMenuItem@@QAE@ABU0@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 1638
	mov	ecx, DWORD PTR _iRemove$30[ebp]
	push	ecx
	lea	edx, DWORD PTR _lang2Remove$4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSrcLst$29[ebp]
	call	?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::begin
	mov	DWORD PTR tv407[ebp], eax
	mov	ecx, DWORD PTR tv407[ebp]
	mov	DWORD PTR tv659[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv659[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::operator+
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
; Line 1639
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR _lang2Remove$4[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv451[ebp], eax
	mov	eax, DWORD PTR tv451[ebp]
	mov	DWORD PTR tv662[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _pSrcLst$29[ebp]
	call	?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::erase
	mov	DWORD PTR tv663[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
; Line 1641
	lea	edx, DWORD PTR _s$40[ebp]
	push	edx
	push	0
	push	384					; 00000180H
	mov	eax, DWORD PTR _list2Add$25[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _iAdd$22[ebp], eax
; Line 1642
	push	0
	mov	eax, DWORD PTR _iRemove$30[ebp]
	push	eax
	push	386					; 00000182H
	mov	ecx, DWORD PTR _list2Remove$32[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1643
	lea	ecx, DWORD PTR _lmi$39[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pDestLst$19[ebp]
	call	?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXABULangMenuItem@@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back
; Line 1645
	push	0
	mov	edx, DWORD PTR _iAdd$22[ebp]
	push	edx
	push	390					; 00000186H
	mov	eax, DWORD PTR _list2Add$25[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1646
	push	0
	push	-1
	push	390					; 00000186H
	mov	eax, DWORD PTR _list2Remove$32[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1647
	push	1
	mov	eax, DWORD PTR _idButton2Enable$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1648
	push	0
	mov	eax, DWORD PTR _idButton2Disable$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1650
	cmp	DWORD PTR _lmi$39[ebp], 57		; 00000039H
	jl	$LN10@run_dlgPro
	mov	eax, DWORD PTR _pNppParam$[ebp]
	mov	ecx, DWORD PTR _lmi$39[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	$LN10@run_dlgPro
; Line 1652
	mov	BYTE PTR _found$35[ebp], 0
; Line 1653
	mov	DWORD PTR _x$31[ebp], 0
	jmp	SHORT $LN9@run_dlgPro
$LN8@run_dlgPro:
	mov	edx, DWORD PTR _x$31[ebp]
	add	edx, 1
	mov	DWORD PTR _x$31[ebp], edx
$LN9@run_dlgPro:
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ ; NppParameters::getExternalLexerDoc
	mov	ecx, eax
	call	?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::size
	cmp	DWORD PTR _x$31[ebp], eax
	jae	$LN10@run_dlgPro
	movzx	eax, BYTE PTR _found$35[ebp]
	test	eax, eax
	jne	$LN10@run_dlgPro
; Line 1655
	push	OFFSET $SG145043
	push	OFFSET $SG145042
	mov	ecx, DWORD PTR _x$31[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ ; NppParameters::getExternalLexerDoc
	mov	ecx, eax
	call	?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::at
	mov	ecx, DWORD PTR [eax]
	call	?FirstChild@TiXmlNode@@QBEPAV1@PB_W@Z	; TiXmlNode::FirstChild
	mov	ecx, eax
	call	?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _lexersRoot$9[ebp], eax
; Line 1656
	push	OFFSET $SG145045
	mov	ecx, DWORD PTR _lexersRoot$9[ebp]
	call	?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _childNode$27[ebp], eax
; Line 1657
	jmp	SHORT $LN6@run_dlgPro
$LN5@run_dlgPro:
; Line 1658
	push	OFFSET $SG145049
	mov	ecx, DWORD PTR _childNode$27[ebp]
	call	?NextSibling@TiXmlNode@@QBEPAV1@PB_W@Z	; TiXmlNode::NextSibling
	mov	DWORD PTR _childNode$27[ebp], eax
$LN6@run_dlgPro:
	cmp	DWORD PTR _childNode$27[ebp], 0
	je	$LN4@run_dlgPro
; Line 1660
	mov	ecx, DWORD PTR _childNode$27[ebp]
	call	?ToElement@TiXmlNode@@QBEPAVTiXmlElement@@XZ ; TiXmlNode::ToElement
	mov	DWORD PTR _element$21[ebp], eax
; Line 1662
	lea	edx, DWORD PTR _lmi$39[ebp+8]
	push	edx
	push	OFFSET $SG145070
	mov	ecx, DWORD PTR _element$21[ebp]
	call	?Attribute@TiXmlElement@@QBEPB_WPB_W@Z	; TiXmlElement::Attribute
	push	eax
	lea	ecx, DWORD PTR $T37[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR tv671[ebp], eax
	mov	eax, DWORD PTR tv671[ebp]
	mov	DWORD PTR tv666[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv666[ebp]
	push	ecx
	call	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	mov	BYTE PTR $T34[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T37[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	movzx	edx, BYTE PTR $T34[ebp]
	test	edx, edx
	je	SHORT $LN3@run_dlgPro
; Line 1664
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 6503				; 00001967H
	jne	SHORT $LN55@run_dlgPro
	mov	DWORD PTR tv601[ebp], OFFSET $SG145073
	jmp	SHORT $LN56@run_dlgPro
$LN55@run_dlgPro:
	mov	DWORD PTR tv601[ebp], OFFSET $SG145074
$LN56@run_dlgPro:
	mov	edx, DWORD PTR tv601[ebp]
	push	edx
	push	OFFSET $SG145075
	mov	ecx, DWORD PTR _element$21[ebp]
	call	?SetAttribute@TiXmlElement@@QAEXPB_W0@Z	; TiXmlElement::SetAttribute
; Line 1665
	mov	eax, DWORD PTR _x$31[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ ; NppParameters::getExternalLexerDoc
	mov	ecx, eax
	call	?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::at
	mov	ecx, DWORD PTR [eax]
	call	?SaveFile@TiXmlDocument@@QBE_NXZ	; TiXmlDocument::SaveFile
; Line 1666
	mov	BYTE PTR _found$35[ebp], 1
; Line 1667
	jmp	SHORT $LN4@run_dlgPro
$LN3@run_dlgPro:
; Line 1669
	jmp	$LN5@run_dlgPro
$LN4@run_dlgPro:
; Line 1670
	jmp	$LN8@run_dlgPro
$LN10@run_dlgPro:
; Line 1673
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _grandParent$23[ebp], eax
; Line 1675
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 6503				; 00001967H
	jne	SHORT $LN2@run_dlgPro
; Line 1677
	push	0
	mov	edx, DWORD PTR _lmi$39[ebp+4]
	push	edx
	push	0
	push	0
	push	1038					; 0000040eH
	mov	eax, DWORD PTR _grandParent$23[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	call	DWORD PTR __imp__DeleteMenu@12
; Line 1679
	jmp	SHORT $LN1@run_dlgPro
$LN2@run_dlgPro:
; Line 1681
	lea	ecx, DWORD PTR _lmi$39[ebp+8]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	mov	ecx, DWORD PTR _lmi$39[ebp+4]
	push	ecx
	push	1024					; 00000400H
	mov	edx, DWORD PTR _iAdd$22[ebp]
	sub	edx, 1
	push	edx
	push	5
	push	0
	push	0
	push	1038					; 0000040eH
	mov	eax, DWORD PTR _grandParent$23[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	push	eax
	call	DWORD PTR __imp__GetSubMenu@8
	push	eax
	call	DWORD PTR __imp__InsertMenuW@20
$LN1@run_dlgPro:
; Line 1683
	mov	ecx, DWORD PTR _grandParent$23[ebp]
	push	ecx
	call	DWORD PTR __imp__DrawMenuBar@4
; Line 1684
	mov	DWORD PTR $T12[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _lang2Remove$4[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lmi$39[ebp]
	call	??1LangMenuItem@@QAE@XZ
	mov	eax, DWORD PTR $T12[ebp]
	jmp	SHORT $LN45@run_dlgPro
$LN43@run_dlgPro:
; Line 1689
	xor	eax, eax
$LN45@run_dlgPro:
; Line 1690
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _str$38[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$1:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$2:
	lea	ecx, DWORD PTR $T36[ebp]
	jmp	??1LangMenuItem@@QAE@XZ
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$3:
	lea	ecx, DWORD PTR _lmi$39[ebp]
	jmp	??1LangMenuItem@@QAE@XZ
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$4:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$5:
	lea	ecx, DWORD PTR _lang2Remove$4[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$6:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$8:
	lea	ecx, DWORD PTR $T37[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-440]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z ENDP		; LangMenuDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p$2 = -252						; size = 8
_p$3 = -244						; size = 8
$T4 = -236						; size = 4
$T5 = -232						; size = 4
_len$6 = -228						; size = 4
tv150 = -224						; size = 4
tv189 = -220						; size = 4
tv67 = -216						; size = 4
_enableDlgTheme$7 = -212				; size = 4
tv275 = -208						; size = 4
_nppGUI$ = -204						; size = 4
tv201 = -200						; size = 4
_length$8 = -196					; size = 4
_size$9 = -192						; size = 4
_customLength$10 = -188					; size = 4
tv257 = -184						; size = 4
_id$11 = -180						; size = 4
_nbMaxFile$12 = -176					; size = 4
_pNppParam$ = -172					; size = 4
_nbFileMaxDlg$13 = -168					; size = 76
_customLengthDlg$14 = -92				; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z PROC	; RecentFilesHistoryDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1370
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1371
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 1372
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 1374
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN21@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN15@run_dlgPro
	jmp	$LN22@run_dlgPro
$LN21@run_dlgPro:
; Line 1379
	push	0
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNbMaxRecentFile@NppParameters@@QBEHXZ ; NppParameters::getNbMaxRecentFile
	push	eax
	push	6311					; 000018a7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1380
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 1381
	push	0
	push	6311					; 000018a7H
	push	6311					; 000018a7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?create@URLCtrl@@QAEXPAUHWND__@@H0@Z	; URLCtrl::create
; Line 1384
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+36]
	test	eax, eax
	jne	SHORT $LN26@run_dlgPro
	mov	DWORD PTR tv150[ebp], 1
	jmp	SHORT $LN27@run_dlgPro
$LN26@run_dlgPro:
	mov	DWORD PTR tv150[ebp], 0
$LN27@run_dlgPro:
	push	0
	mov	ecx, DWORD PTR tv150[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6305					; 000018a1H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1387
	push	0
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?putRecentFileInSubMenu@NppParameters@@QBE_NXZ ; NppParameters::putRecentFileInSubMenu
	movzx	ecx, al
	push	ecx
	push	241					; 000000f1H
	push	6424					; 00001918H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1390
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getRecentFileCustomLength@NppParameters@@QBEHXZ ; NppParameters::getRecentFileCustomLength
	mov	DWORD PTR _customLength$10[ebp], eax
; Line 1391
	mov	DWORD PTR _id$11[ebp], 6427		; 0000191bH
; Line 1392
	mov	ecx, DWORD PTR _customLength$10[ebp]
	mov	DWORD PTR _length$8[ebp], ecx
; Line 1394
	cmp	DWORD PTR _customLength$10[ebp], 0
	jne	SHORT $LN20@run_dlgPro
; Line 1396
	mov	DWORD PTR _id$11[ebp], 6425		; 00001919H
; Line 1397
	mov	DWORD PTR _length$8[ebp], 0
	jmp	SHORT $LN19@run_dlgPro
$LN20@run_dlgPro:
; Line 1399
	cmp	DWORD PTR _customLength$10[ebp], -1
	je	SHORT $LN17@run_dlgPro
	cmp	DWORD PTR _customLength$10[ebp], 0
	jge	SHORT $LN19@run_dlgPro
$LN17@run_dlgPro:
; Line 1401
	mov	DWORD PTR _id$11[ebp], 6426		; 0000191aH
; Line 1402
	mov	DWORD PTR _length$8[ebp], 0
$LN19@run_dlgPro:
; Line 1404
	push	0
	push	1
	push	241					; 000000f1H
	mov	edx, DWORD PTR _id$11[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1405
	cmp	DWORD PTR _id$11[ebp], 6427		; 0000191bH
	jne	SHORT $LN28@run_dlgPro
	mov	DWORD PTR tv189[ebp], 1
	jmp	SHORT $LN29@run_dlgPro
$LN28@run_dlgPro:
	mov	DWORD PTR tv189[ebp], 0
$LN29@run_dlgPro:
	mov	edx, DWORD PTR tv189[ebp]
	push	edx
	push	6428					; 0000191cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1406
	cmp	DWORD PTR _id$11[ebp], 6427		; 0000191bH
	jne	SHORT $LN30@run_dlgPro
	mov	DWORD PTR tv201[ebp], 5
	jmp	SHORT $LN31@run_dlgPro
$LN30@run_dlgPro:
	mov	DWORD PTR tv201[ebp], 0
$LN31@run_dlgPro:
	mov	edx, DWORD PTR tv201[ebp]
	push	edx
	push	6428					; 0000191cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1408
	push	0
	mov	edx, DWORD PTR _length$8[ebp]
	push	edx
	push	6428					; 0000191cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1409
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+108]
	mov	eax, DWORD PTR [edx+4]
	call	eax
; Line 1410
	push	0
	push	0
	push	6428					; 0000191cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	?create@URLCtrl@@QAEXPAUHWND__@@H0@Z	; URLCtrl::create
; Line 1415
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$7[ebp], eax
; Line 1416
	cmp	DWORD PTR _enableDlgTheme$7[ebp], 0
	je	SHORT $LN15@run_dlgPro
; Line 1417
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR _enableDlgTheme$7[ebp]
$LN15@run_dlgPro:
; Line 1422
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv257[ebp], edx
	mov	eax, DWORD PTR tv257[ebp]
	sub	eax, 6305				; 000018a1H
	mov	DWORD PTR tv257[ebp], eax
	cmp	DWORD PTR tv257[ebp], 123		; 0000007bH
	ja	$LN1@run_dlgPro
	mov	ecx, DWORD PTR tv257[ebp]
	movzx	edx, BYTE PTR $LN36@run_dlgPro[ecx]
	jmp	DWORD PTR $LN38@run_dlgPro[edx*4]
$LN12@run_dlgPro:
; Line 1425
	push	6305					; 000018a1H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN32@run_dlgPro
	mov	DWORD PTR tv275[ebp], 1
	jmp	SHORT $LN33@run_dlgPro
$LN32@run_dlgPro:
	mov	DWORD PTR tv275[ebp], 0
$LN33@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv275[ebp]
	mov	BYTE PTR [ecx+36], dl
; Line 1426
	mov	eax, 1
	jmp	$LN24@run_dlgPro
$LN11@run_dlgPro:
; Line 1430
	lea	ecx, DWORD PTR _nbFileMaxDlg$13[ebp]
	call	??0ValueDlg@@QAE@XZ			; ValueDlg::ValueDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1431
	push	OFFSET $SG144745
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNbMaxRecentFile@NppParameters@@QBEHXZ ; NppParameters::getNbMaxRecentFile
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _nbFileMaxDlg$13[ebp]
	call	?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z ; ValueDlg::init
; Line 1434
	lea	edx, DWORD PTR _p$2[ebp]
	push	edx
	call	DWORD PTR __imp__GetCursorPos@4
; Line 1436
	push	0
	mov	eax, DWORD PTR _p$2[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _p$2[ebp]
	push	ecx
	lea	ecx, DWORD PTR _nbFileMaxDlg$13[ebp]
	call	?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z	; ValueDlg::doDialog
	mov	DWORD PTR _nbMaxFile$12[ebp], eax
; Line 1437
	cmp	DWORD PTR _nbMaxFile$12[ebp], -1
	je	SHORT $LN10@run_dlgPro
; Line 1439
	cmp	DWORD PTR _nbMaxFile$12[ebp], 30	; 0000001eH
	jle	SHORT $LN9@run_dlgPro
; Line 1440
	mov	DWORD PTR _nbMaxFile$12[ebp], 30	; 0000001eH
$LN9@run_dlgPro:
; Line 1442
	mov	edx, DWORD PTR _nbMaxFile$12[ebp]
	push	edx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?setNbMaxRecentFile@NppParameters@@QAEXH@Z ; NppParameters::setNbMaxRecentFile
; Line 1443
	push	0
	mov	eax, DWORD PTR _nbMaxFile$12[ebp]
	push	eax
	push	6311					; 000018a7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1446
	push	0
	push	0
	push	1035					; 0000040bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN10@run_dlgPro:
; Line 1448
	mov	DWORD PTR $T4[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _nbFileMaxDlg$13[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN24@run_dlgPro
$LN8@run_dlgPro:
; Line 1452
	push	6424					; 00001918H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?setPutRecentFileInSubMenu@NppParameters@@QAEX_N@Z ; NppParameters::setPutRecentFileInSubMenu
; Line 1453
	push	0
	push	0
	push	1060					; 00000424H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1454
	mov	eax, 1
	jmp	$LN24@run_dlgPro
$LN7@run_dlgPro:
; Line 1457
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z ; RecentFilesHistoryDlg::setCustomLen
; Line 1458
	push	0
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?setRecentFileCustomLength@NppParameters@@QAEXH@Z ; NppParameters::setRecentFileCustomLength
; Line 1459
	push	0
	push	0
	push	1059					; 00000423H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1460
	mov	eax, 1
	jmp	$LN24@run_dlgPro
$LN6@run_dlgPro:
; Line 1462
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z ; RecentFilesHistoryDlg::setCustomLen
; Line 1463
	push	-1
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?setRecentFileCustomLength@NppParameters@@QAEXH@Z ; NppParameters::setRecentFileCustomLength
; Line 1464
	push	0
	push	0
	push	1059					; 00000423H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1465
	mov	eax, 1
	jmp	$LN24@run_dlgPro
$LN5@run_dlgPro:
; Line 1468
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getRecentFileCustomLength@NppParameters@@QBEHXZ ; NppParameters::getRecentFileCustomLength
	mov	DWORD PTR _len$6[ebp], eax
; Line 1469
	cmp	DWORD PTR _len$6[ebp], 0
	jg	SHORT $LN4@run_dlgPro
; Line 1471
	push	100					; 00000064H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z ; RecentFilesHistoryDlg::setCustomLen
; Line 1472
	push	100					; 00000064H
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?setRecentFileCustomLength@NppParameters@@QAEXH@Z ; NppParameters::setRecentFileCustomLength
; Line 1473
	push	0
	push	0
	push	1059					; 00000423H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN4@run_dlgPro:
; Line 1475
	mov	eax, 1
	jmp	$LN24@run_dlgPro
$LN3@run_dlgPro:
; Line 1480
	lea	ecx, DWORD PTR _customLengthDlg$14[ebp]
	call	??0ValueDlg@@QAE@XZ			; ValueDlg::ValueDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1481
	push	OFFSET $SG144759
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getRecentFileCustomLength@NppParameters@@QBEHXZ ; NppParameters::getRecentFileCustomLength
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	0
	lea	ecx, DWORD PTR _customLengthDlg$14[ebp]
	call	?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z ; ValueDlg::init
; Line 1482
	push	3
	lea	ecx, DWORD PTR _customLengthDlg$14[ebp]
	call	?setNBNumber@ValueDlg@@QAEXH@Z		; ValueDlg::setNBNumber
; Line 1485
	lea	ecx, DWORD PTR _p$3[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCursorPos@4
; Line 1487
	push	0
	mov	edx, DWORD PTR _p$3[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _customLengthDlg$14[ebp]
	call	?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z	; ValueDlg::doDialog
	mov	DWORD PTR _size$9[ebp], eax
; Line 1488
	cmp	DWORD PTR _size$9[ebp], -1
	je	SHORT $LN2@run_dlgPro
; Line 1490
	push	0
	mov	ecx, DWORD PTR _size$9[ebp]
	push	ecx
	push	6428					; 0000191cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1491
	mov	ecx, DWORD PTR _size$9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?setRecentFileCustomLength@NppParameters@@QAEXH@Z ; NppParameters::setRecentFileCustomLength
; Line 1492
	push	0
	push	0
	push	1059					; 00000423H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN2@run_dlgPro:
; Line 1494
	mov	DWORD PTR $T5[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _customLengthDlg$14[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T5[ebp]
	jmp	SHORT $LN24@run_dlgPro
$LN1@run_dlgPro:
; Line 1497
	xor	eax, eax
	jmp	SHORT $LN24@run_dlgPro
$LN22@run_dlgPro:
; Line 1501
	xor	eax, eax
$LN24@run_dlgPro:
; Line 1502
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN38@run_dlgPro:
	DD	$LN12@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN8@run_dlgPro
	DD	$LN7@run_dlgPro
	DD	$LN6@run_dlgPro
	DD	$LN5@run_dlgPro
	DD	$LN3@run_dlgPro
	DD	$LN1@run_dlgPro
$LN36@run_dlgPro:
	DB	0
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	1
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _nbFileMaxDlg$13[ebp]
	jmp	??1ValueDlg@@UAE@XZ
__unwindfunclet$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z$1:
	lea	ecx, DWORD PTR _customLengthDlg$14[ebp]
	jmp	??1ValueDlg@@UAE@XZ
__ehhandler$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z ENDP	; RecentFilesHistoryDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv87 = -12						; size = 4
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z PROC	; RecentFilesHistoryDlg::setCustomLen
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1087
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1088
	cmp	DWORD PTR _val$[ebp], 0
	jle	SHORT $LN3@setCustomL
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@setCustomL
$LN3@setCustomL:
	mov	DWORD PTR tv66[ebp], 0
$LN4@setCustomL:
	mov	eax, DWORD PTR tv66[ebp]
	push	eax
	push	6428					; 0000191cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1089
	push	0
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	push	6428					; 0000191cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 1090
	cmp	DWORD PTR _val$[ebp], 0
	jle	SHORT $LN5@setCustomL
	mov	DWORD PTR tv87[ebp], 5
	jmp	SHORT $LN6@setCustomL
$LN5@setCustomL:
	mov	DWORD PTR tv87[ebp], 0
$LN6@setCustomL:
	mov	eax, DWORD PTR tv87[ebp]
	push	eax
	push	6428					; 0000191cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 1091
	mov	esp, ebp
	pop	ebp
	ret	4
?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z ENDP	; RecentFilesHistoryDlg::setCustomLen
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv165 = -560						; size = 4
tv69 = -556						; size = 4
tv67 = -552						; size = 4
_enableDlgTheme$1 = -548				; size = 4
_pNppParam$ = -544					; size = 4
tv188 = -540						; size = 4
_ID2Check$2 = -536					; size = 4
_nppGUI$ = -532						; size = 4
_shouldActivated$3 = -525				; size = 1
_inputDir$4 = -524					; size = 520
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@DefaultDirectoryDlg@@EAGHIIJ@Z PROC	; DefaultDirectoryDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1283
	push	ebp
	mov	ebp, esp
	sub	esp, 560				; 00000230H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1284
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 1285
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 1287
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN19@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN12@run_dlgPro
	jmp	$LN20@run_dlgPro
$LN19@run_dlgPro:
; Line 1291
	mov	DWORD PTR _ID2Check$2[ebp], 0
; Line 1293
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR [ecx+608]
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 1
	je	SHORT $LN16@run_dlgPro
	cmp	DWORD PTR tv69[ebp], 2
	je	SHORT $LN15@run_dlgPro
	jmp	SHORT $LN14@run_dlgPro
$LN16@run_dlgPro:
; Line 1296
	mov	DWORD PTR _ID2Check$2[ebp], 6415	; 0000190fH
; Line 1297
	mov	BYTE PTR _shouldActivated$3[ebp], 0
; Line 1298
	jmp	SHORT $LN17@run_dlgPro
$LN15@run_dlgPro:
; Line 1300
	mov	DWORD PTR _ID2Check$2[ebp], 6416	; 00001910H
; Line 1301
	mov	BYTE PTR _shouldActivated$3[ebp], 1
; Line 1302
	jmp	SHORT $LN17@run_dlgPro
$LN14@run_dlgPro:
; Line 1305
	mov	DWORD PTR _ID2Check$2[ebp], 6414	; 0000190eH
; Line 1306
	mov	BYTE PTR _shouldActivated$3[ebp], 0
$LN17@run_dlgPro:
; Line 1308
	push	0
	push	1
	push	241					; 000000f1H
	mov	eax, DWORD PTR _ID2Check$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1309
	mov	eax, DWORD PTR _nppGUI$[ebp]
	add	eax, 612				; 00000264H
	push	eax
	push	0
	push	12					; 0000000cH
	push	6417					; 00001911H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1310
	movzx	eax, BYTE PTR _shouldActivated$3[ebp]
	push	eax
	push	6417					; 00001911H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1311
	movzx	eax, BYTE PTR _shouldActivated$3[ebp]
	push	eax
	push	6418					; 00001912H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1316
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$1[ebp], eax
; Line 1317
	cmp	DWORD PTR _enableDlgTheme$1[ebp], 0
	je	SHORT $LN12@run_dlgPro
; Line 1318
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR _enableDlgTheme$1[ebp]
$LN12@run_dlgPro:
; Line 1323
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 768				; 00000300H
	jne	$LN11@run_dlgPro
; Line 1325
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR tv165[ebp], edx
	cmp	DWORD PTR tv165[ebp], 6417		; 00001911H
	je	SHORT $LN8@run_dlgPro
	jmp	$LN11@run_dlgPro
$LN8@run_dlgPro:
; Line 1330
	lea	eax, DWORD PTR _inputDir$4[ebp]
	push	eax
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6417					; 00001911H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1331
	lea	eax, DWORD PTR _inputDir$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 612				; 00000264H
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1332
	push	500					; 000001f4H
	mov	edx, DWORD PTR _nppGUI$[ebp]
	add	edx, 1132				; 0000046cH
	push	edx
	mov	eax, DWORD PTR _nppGUI$[ebp]
	add	eax, 612				; 00000264H
	push	eax
	call	DWORD PTR __imp__ExpandEnvironmentStringsW@12
; Line 1333
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 1132				; 0000046cH
	push	ecx
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?setWorkingDir@NppParameters@@QAEXPB_W@Z ; NppParameters::setWorkingDir
; Line 1334
	mov	eax, 1
	jmp	$LN22@run_dlgPro
$LN11@run_dlgPro:
; Line 1339
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv188[ebp], edx
	mov	eax, DWORD PTR tv188[ebp]
	sub	eax, 6414				; 0000190eH
	mov	DWORD PTR tv188[ebp], eax
	cmp	DWORD PTR tv188[ebp], 4
	ja	$LN1@run_dlgPro
	mov	ecx, DWORD PTR tv188[ebp]
	jmp	DWORD PTR $LN24@run_dlgPro[ecx*4]
$LN5@run_dlgPro:
; Line 1342
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [edx+608], 0
; Line 1343
	push	0
	push	6417					; 00001911H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1344
	push	0
	push	6418					; 00001912H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1345
	mov	eax, 1
	jmp	$LN22@run_dlgPro
$LN4@run_dlgPro:
; Line 1347
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+608], 1
; Line 1348
	push	0
	push	6417					; 00001911H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1349
	push	0
	push	6418					; 00001912H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1350
	mov	eax, 1
	jmp	SHORT $LN22@run_dlgPro
$LN3@run_dlgPro:
; Line 1352
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [eax+608], 2
; Line 1353
	push	1
	push	6417					; 00001911H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1354
	push	1
	push	6418					; 00001912H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1355
	mov	eax, 1
	jmp	SHORT $LN22@run_dlgPro
$LN2@run_dlgPro:
; Line 1358
	push	0
	push	6417					; 00001911H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	?folderBrowser@@YAXPAUHWND__@@HPB_W@Z	; folderBrowser
	add	esp, 12					; 0000000cH
; Line 1359
	mov	eax, 1
	jmp	SHORT $LN22@run_dlgPro
$LN1@run_dlgPro:
; Line 1362
	xor	eax, eax
	jmp	SHORT $LN22@run_dlgPro
$LN20@run_dlgPro:
; Line 1366
	xor	eax, eax
$LN22@run_dlgPro:
; Line 1367
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN24@run_dlgPro:
	DD	$LN5@run_dlgPro
	DD	$LN4@run_dlgPro
	DD	$LN3@run_dlgPro
	DD	$LN1@run_dlgPro
	DD	$LN2@run_dlgPro
?run_dlgProc@DefaultDirectoryDlg@@EAGHIIJ@Z ENDP	; DefaultDirectoryDlg::run_dlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv488 = -228						; size = 4
$T2 = -224						; size = 4
_em$3 = -220						; size = 4
_index$4 = -216						; size = 4
_encodingArraySize$5 = -212				; size = 4
tv489 = -208						; size = 4
_cp$6 = -204						; size = 4
tv228 = -200						; size = 4
_index$7 = -196						; size = 4
_nppGUI$ = -192						; size = 4
_cp$8 = -188						; size = 4
_index$9 = -184						; size = 4
tv491 = -180						; size = 4
_index$10 = -176					; size = 4
_index$11 = -172					; size = 4
tv71 = -168						; size = 4
tv203 = -164						; size = 4
tv214 = -160						; size = 4
_cmdID$12 = -156					; size = 4
tv390 = -152						; size = 4
tv69 = -148						; size = 4
_enableDlgTheme$13 = -144				; size = 4
_selIndex$14 = -140					; size = 4
tv293 = -136						; size = 4
_pNppParam$ = -132					; size = 4
tv85 = -128						; size = 4
_cmdID$15 = -124					; size = 4
_i$16 = -120						; size = 4
_i$17 = -116						; size = 4
_ID2Check$18 = -112					; size = 4
_ndds$ = -108						; size = 4
$T19 = -104						; size = 32
_str$20 = -72						; size = 28
_str$21 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z PROC		; DefaultNewDocDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 1094
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1095
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 1096
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 1097
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	call	?getNewDocDefaultSettings@NppGUI@@QBEABUNewDocDefaultSettings@@XZ ; NppGUI::getNewDocDefaultSettings
	mov	DWORD PTR _ndds$[ebp], eax
; Line 1099
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	cmp	DWORD PTR tv69[ebp], 272		; 00000110H
	je	SHORT $LN47@run_dlgPro
	cmp	DWORD PTR tv69[ebp], 273		; 00000111H
	je	$LN18@run_dlgPro
	jmp	$LN48@run_dlgPro
$LN47@run_dlgPro:
; Line 1103
	mov	DWORD PTR _ID2Check$18[ebp], 0
; Line 1105
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv71[ebp], edx
	cmp	DWORD PTR tv71[ebp], 1
	je	SHORT $LN44@run_dlgPro
	cmp	DWORD PTR tv71[ebp], 2
	je	SHORT $LN43@run_dlgPro
	jmp	SHORT $LN42@run_dlgPro
$LN44@run_dlgPro:
; Line 1108
	mov	DWORD PTR _ID2Check$18[ebp], 6404	; 00001904H
; Line 1109
	jmp	SHORT $LN45@run_dlgPro
$LN43@run_dlgPro:
; Line 1111
	mov	DWORD PTR _ID2Check$18[ebp], 6403	; 00001903H
; Line 1112
	jmp	SHORT $LN45@run_dlgPro
$LN42@run_dlgPro:
; Line 1115
	mov	DWORD PTR _ID2Check$18[ebp], 6402	; 00001902H
$LN45@run_dlgPro:
; Line 1117
	push	0
	push	1
	push	241					; 000000f1H
	mov	eax, DWORD PTR _ID2Check$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1119
	mov	eax, DWORD PTR _ndds$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv85[ebp], ecx
	mov	edx, DWORD PTR tv85[ebp]
	sub	edx, 1
	mov	DWORD PTR tv85[ebp], edx
	cmp	DWORD PTR tv85[ebp], 3
	ja	SHORT $LN35@run_dlgPro
	mov	eax, DWORD PTR tv85[ebp]
	jmp	DWORD PTR $LN64@run_dlgPro[eax*4]
$LN39@run_dlgPro:
; Line 1122
	mov	DWORD PTR _ID2Check$18[ebp], 6409	; 00001909H
; Line 1123
	jmp	SHORT $LN40@run_dlgPro
$LN38@run_dlgPro:
; Line 1125
	mov	DWORD PTR _ID2Check$18[ebp], 6410	; 0000190aH
; Line 1126
	jmp	SHORT $LN40@run_dlgPro
$LN37@run_dlgPro:
; Line 1128
	mov	DWORD PTR _ID2Check$18[ebp], 6408	; 00001908H
; Line 1129
	jmp	SHORT $LN40@run_dlgPro
$LN36@run_dlgPro:
; Line 1131
	mov	DWORD PTR _ID2Check$18[ebp], 6407	; 00001907H
; Line 1132
	jmp	SHORT $LN40@run_dlgPro
$LN35@run_dlgPro:
; Line 1135
	mov	DWORD PTR _ID2Check$18[ebp], 6406	; 00001906H
$LN40@run_dlgPro:
; Line 1138
	mov	DWORD PTR _selIndex$14[ebp], -1
; Line 1139
	lea	ecx, DWORD PTR _str$20[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1140
	call	?getInstance@EncodingMapper@@SAPAV1@XZ	; EncodingMapper::getInstance
	mov	DWORD PTR _em$3[ebp], eax
; Line 1141
	mov	DWORD PTR _i$16[ebp], 0
	mov	DWORD PTR _encodingArraySize$5[ebp], 46	; 0000002eH
	jmp	SHORT $LN34@run_dlgPro
$LN33@run_dlgPro:
	mov	ecx, DWORD PTR _i$16[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$16[ebp], ecx
$LN34@run_dlgPro:
	mov	edx, DWORD PTR _i$16[ebp]
	cmp	edx, DWORD PTR _encodingArraySize$5[ebp]
	jae	$LN32@run_dlgPro
; Line 1143
	mov	eax, DWORD PTR _i$16[ebp]
	mov	ecx, DWORD PTR ?encodings@@3PAHA[eax*4]
	push	ecx
	mov	ecx, DWORD PTR _em$3[ebp]
	call	?getIndexFromEncoding@EncodingMapper@@QBEHH@Z ; EncodingMapper::getIndexFromEncoding
	mov	DWORD PTR _cmdID$15[ebp], eax
; Line 1144
	cmp	DWORD PTR _cmdID$15[ebp], -1
	je	$LN31@run_dlgPro
; Line 1146
	mov	edx, DWORD PTR _cmdID$15[ebp]
	add	edx, 45020				; 0000afdcH
	mov	DWORD PTR _cmdID$15[ebp], edx
; Line 1147
	lea	eax, DWORD PTR _str$20[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmdID$15[ebp]
	push	ecx
	call	?getNameStrFromCmd@@YAXKAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; getNameStrFromCmd
	add	esp, 8
; Line 1148
	lea	ecx, DWORD PTR _str$20[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	323					; 00000143H
	push	6422					; 00001916H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$10[ebp], eax
; Line 1149
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	edx, DWORD PTR _i$16[ebp]
	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR ?encodings@@3PAHA[edx*4]
	jne	SHORT $LN30@run_dlgPro
; Line 1150
	mov	ecx, DWORD PTR _index$10[ebp]
	mov	DWORD PTR _selIndex$14[ebp], ecx
$LN30@run_dlgPro:
; Line 1151
	mov	edx, DWORD PTR _i$16[ebp]
	mov	eax, DWORD PTR ?encodings@@3PAHA[edx*4]
	push	eax
	mov	ecx, DWORD PTR _index$10[ebp]
	push	ecx
	push	337					; 00000151H
	push	6422					; 00001916H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN31@run_dlgPro:
; Line 1153
	jmp	$LN33@run_dlgPro
$LN32@run_dlgPro:
; Line 1155
	mov	ecx, DWORD PTR _ndds$[ebp]
	cmp	DWORD PTR [ecx+16], -1
	je	SHORT $LN28@run_dlgPro
	cmp	DWORD PTR _selIndex$14[ebp], -1
	jne	SHORT $LN29@run_dlgPro
$LN28@run_dlgPro:
; Line 1157
	push	0
	push	6422					; 00001916H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1159
	jmp	SHORT $LN27@run_dlgPro
$LN29@run_dlgPro:
; Line 1161
	mov	DWORD PTR _ID2Check$18[ebp], 6421	; 00001915H
; Line 1162
	push	0
	mov	ecx, DWORD PTR _selIndex$14[ebp]
	push	ecx
	push	334					; 0000014eH
	push	6422					; 00001916H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN27@run_dlgPro:
; Line 1164
	push	0
	push	1
	push	241					; 000000f1H
	mov	ecx, DWORD PTR _ID2Check$18[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1165
	cmp	DWORD PTR _ID2Check$18[ebp], 6407	; 00001907H
	jne	SHORT $LN52@run_dlgPro
	mov	ecx, DWORD PTR _ndds$[ebp]
	movzx	edx, BYTE PTR [ecx+8]
	test	edx, edx
	je	SHORT $LN52@run_dlgPro
	mov	DWORD PTR tv203[ebp], 1
	jmp	SHORT $LN53@run_dlgPro
$LN52@run_dlgPro:
	mov	DWORD PTR tv203[ebp], 0
$LN53@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv203[ebp]
	push	eax
	push	241					; 000000f1H
	push	6420					; 00001914H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1166
	cmp	DWORD PTR _ID2Check$18[ebp], 6407	; 00001907H
	jne	SHORT $LN54@run_dlgPro
	mov	DWORD PTR tv214[ebp], 1
	jmp	SHORT $LN55@run_dlgPro
$LN54@run_dlgPro:
	mov	DWORD PTR tv214[ebp], 0
$LN55@run_dlgPro:
	mov	eax, DWORD PTR tv214[ebp]
	push	eax
	push	6420					; 00001914H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1168
	mov	DWORD PTR _index$11[ebp], 0
; Line 1169
	mov	DWORD PTR _i$17[ebp], 0
	jmp	SHORT $LN26@run_dlgPro
$LN25@run_dlgPro:
	mov	eax, DWORD PTR _i$17[ebp]
	add	eax, 1
	mov	DWORD PTR _i$17[ebp], eax
$LN26@run_dlgPro:
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	mov	edx, DWORD PTR _i$17[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jge	$LN24@run_dlgPro
; Line 1171
	lea	ecx, DWORD PTR _str$21[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1172
	cmp	DWORD PTR _i$17[ebp], 15		; 0000000fH
	je	$LN23@run_dlgPro
; Line 1174
	mov	eax, DWORD PTR _i$17[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?langTypeToCommandID@NppParameters@@QBEHW4LangType@@@Z ; NppParameters::langTypeToCommandID
	mov	DWORD PTR _cmdID$12[ebp], eax
; Line 1175
	cmp	DWORD PTR _cmdID$12[ebp], -1
	je	$LN23@run_dlgPro
; Line 1177
	lea	ecx, DWORD PTR _str$21[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmdID$12[ebp]
	push	edx
	call	?getNameStrFromCmd@@YAXKAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; getNameStrFromCmd
	add	esp, 8
; Line 1178
	lea	ecx, DWORD PTR _str$21[ebp]
	call	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
	test	eax, eax
	jbe	$LN23@run_dlgPro
; Line 1180
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	eax, DWORD PTR _str$21[ebp]
	push	eax
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR tv228[ebp], eax
	mov	ecx, DWORD PTR tv228[ebp]
	mov	DWORD PTR tv488[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _i$17[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T19[ebp]
	call	??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; LangID_Name::LangID_Name
	mov	DWORD PTR tv489[ebp], eax
	mov	eax, DWORD PTR tv489[ebp]
	mov	DWORD PTR tv491[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv491[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push_back@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEX$$QAULangID_Name@@@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T19[ebp]
	call	??1LangID_Name@@QAE@XZ
; Line 1181
	lea	ecx, DWORD PTR _str$21[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	323					; 00000143H
	push	6412					; 0000190cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1182
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	edx, DWORD PTR _i$17[ebp]
	jne	SHORT $LN23@run_dlgPro
; Line 1183
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size
	sub	eax, 1
	mov	DWORD PTR _index$11[ebp], eax
$LN23@run_dlgPro:
; Line 1187
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _str$21[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	jmp	$LN25@run_dlgPro
$LN24@run_dlgPro:
; Line 1188
	push	0
	mov	eax, DWORD PTR _index$11[ebp]
	push	eax
	push	334					; 0000014eH
	push	6412					; 0000190cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 1193
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$13[ebp], eax
; Line 1194
	cmp	DWORD PTR _enableDlgTheme$13[ebp], 0
	je	SHORT $LN19@run_dlgPro
; Line 1195
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR _enableDlgTheme$13[ebp]
$LN19@run_dlgPro:
; Line 1196
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$20[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN18@run_dlgPro:
; Line 1199
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv293[ebp], edx
	mov	eax, DWORD PTR tv293[ebp]
	sub	eax, 6402				; 00001902H
	mov	DWORD PTR tv293[ebp], eax
	cmp	DWORD PTR tv293[ebp], 19		; 00000013H
	ja	$LN5@run_dlgPro
	mov	ecx, DWORD PTR tv293[ebp]
	movzx	edx, BYTE PTR $LN62@run_dlgPro[ecx]
	jmp	DWORD PTR $LN65@run_dlgPro[edx*4]
$LN15@run_dlgPro:
; Line 1202
	mov	eax, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [eax+4], 2
; Line 1203
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	BYTE PTR [ecx+8], 0
; Line 1204
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z ; DefaultNewDocDlg::makeOpenAnsiAsUtf8
; Line 1205
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [edx+16], -1
; Line 1206
	push	0
	push	6422					; 00001916H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1207
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN14@run_dlgPro:
; Line 1209
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [edx+4], 3
; Line 1210
	mov	eax, DWORD PTR _ndds$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 1211
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z ; DefaultNewDocDlg::makeOpenAnsiAsUtf8
; Line 1212
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [ecx+16], -1
; Line 1213
	push	0
	push	6422					; 00001916H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1214
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN13@run_dlgPro:
; Line 1216
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [ecx+4], 1
; Line 1217
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	BYTE PTR [edx+8], 0
; Line 1218
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z ; DefaultNewDocDlg::makeOpenAnsiAsUtf8
; Line 1219
	mov	eax, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [eax+16], -1
; Line 1220
	push	0
	push	6422					; 00001916H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1221
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN12@run_dlgPro:
; Line 1223
	mov	eax, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [eax+4], 4
; Line 1224
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z ; DefaultNewDocDlg::makeOpenAnsiAsUtf8
; Line 1225
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [ecx+16], -1
; Line 1226
	push	0
	push	6422					; 00001916H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1227
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN11@run_dlgPro:
; Line 1229
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 1230
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	BYTE PTR [edx+8], 0
; Line 1231
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z ; DefaultNewDocDlg::makeOpenAnsiAsUtf8
; Line 1232
	mov	eax, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [eax+16], -1
; Line 1233
	push	0
	push	6422					; 00001916H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1234
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN10@run_dlgPro:
; Line 1237
	push	0
	push	0
	push	240					; 000000f0H
	push	6420					; 00001914H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN56@run_dlgPro
	mov	DWORD PTR tv390[ebp], 1
	jmp	SHORT $LN57@run_dlgPro
$LN56@run_dlgPro:
	mov	DWORD PTR tv390[ebp], 0
$LN57@run_dlgPro:
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	al, BYTE PTR tv390[ebp]
	mov	BYTE PTR [edx+8], al
; Line 1238
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN9@run_dlgPro:
; Line 1242
	push	1
	push	6422					; 00001916H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1243
	push	0
	push	0
	push	327					; 00000147H
	push	6422					; 00001916H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$7[ebp], eax
; Line 1244
	push	0
	mov	edx, DWORD PTR _index$7[ebp]
	push	edx
	push	336					; 00000150H
	push	6422					; 00001916H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _cp$6[ebp], eax
; Line 1245
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	eax, DWORD PTR _cp$6[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 1246
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN8@run_dlgPro:
; Line 1250
	mov	ecx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [ecx], 1
; Line 1251
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN7@run_dlgPro:
; Line 1253
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [edx], 2
; Line 1254
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN6@run_dlgPro:
; Line 1256
	mov	eax, DWORD PTR _ndds$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1257
	mov	eax, 1
	jmp	$LN50@run_dlgPro
$LN5@run_dlgPro:
; Line 1260
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 1
	jne	$LN4@run_dlgPro
; Line 1262
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 6412				; 0000190cH
	jne	SHORT $LN3@run_dlgPro
; Line 1264
	push	0
	push	0
	push	327					; 00000147H
	push	6412					; 0000190cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$4[ebp], eax
; Line 1265
	mov	ecx, DWORD PTR _index$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEAAULangID_Name@@I@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::operator[]
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+12], eax
; Line 1266
	mov	eax, 1
	jmp	SHORT $LN50@run_dlgPro
	jmp	SHORT $LN4@run_dlgPro
$LN3@run_dlgPro:
; Line 1268
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 6422				; 00001916H
	jne	SHORT $LN4@run_dlgPro
; Line 1270
	push	0
	push	0
	push	327					; 00000147H
	push	6422					; 00001916H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$9[ebp], eax
; Line 1271
	push	0
	mov	edx, DWORD PTR _index$9[ebp]
	push	edx
	push	336					; 00000150H
	push	6422					; 00001916H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _cp$8[ebp], eax
; Line 1272
	mov	edx, DWORD PTR _ndds$[ebp]
	mov	eax, DWORD PTR _cp$8[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 1273
	mov	eax, 1
	jmp	SHORT $LN50@run_dlgPro
$LN4@run_dlgPro:
; Line 1276
	xor	eax, eax
	jmp	SHORT $LN50@run_dlgPro
$LN48@run_dlgPro:
; Line 1279
	xor	eax, eax
$LN50@run_dlgPro:
; Line 1280
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN64@run_dlgPro:
	DD	$LN37@run_dlgPro
	DD	$LN39@run_dlgPro
	DD	$LN38@run_dlgPro
	DD	$LN36@run_dlgPro
$LN65@run_dlgPro:
	DD	$LN6@run_dlgPro
	DD	$LN7@run_dlgPro
	DD	$LN8@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN12@run_dlgPro
	DD	$LN13@run_dlgPro
	DD	$LN15@run_dlgPro
	DD	$LN14@run_dlgPro
	DD	$LN10@run_dlgPro
	DD	$LN9@run_dlgPro
	DD	$LN5@run_dlgPro
$LN62@run_dlgPro:
	DB	0
	DB	1
	DB	2
	DB	10					; 0000000aH
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	8
	DB	9
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _str$20[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$1:
	lea	ecx, DWORD PTR _str$21[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$2:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$3:
	lea	ecx, DWORD PTR $T19[ebp]
	jmp	??1LangID_Name@@QAE@XZ
__ehhandler$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z ENDP		; DefaultNewDocDlg::run_dlgProc
; Function compile flags: /Odtp
;	COMDAT ?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_doIt$ = 8						; size = 1
?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z PROC	; DefaultNewDocDlg::makeOpenAnsiAsUtf8, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 102
	movzx	eax, BYTE PTR _doIt$[ebp]
	test	eax, eax
	jne	SHORT $LN1@makeOpenAn
; Line 103
	push	0
	push	0
	push	241					; 000000f1H
	push	6420					; 00001914H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN1@makeOpenAn:
; Line 104
	movzx	eax, BYTE PTR _doIt$[ebp]
	push	eax
	push	6420					; 00001914H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 105
	mov	esp, ebp
	pop	ebp
	ret	4
?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z ENDP	; DefaultNewDocDlg::makeOpenAnsiAsUtf8
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXXZ PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXXZ ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEII@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEPAULangID_Name@@I@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAULangID_Name@@@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEPAULangID_Name@@PAU2@00@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Umove<LangID_Name *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXPAULangID_Name@@0@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 5
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1607
	mov	edx, DWORD PTR __Size$[ebp]
	shl	edx, 5
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBE_NPBULangID_Name@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBE_NPBULangID_Name@@@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBE_NPBULangID_Name@@@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEII@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEII@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXPAULangID_Name@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXPAULangID_Name@@0@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangID_Name> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXPAULangID_Name@@0@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEAAULangID_Name@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEAAULangID_Name@@I@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1KO@COKKPCNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAI?$AAD?$AA_?$AAN?$AAa?$AAm?$AAe?$AA?0?$AAc@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR __Pos$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEAAULangID_Name@@I@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<LangID_Name> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 5
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 5
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 5
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEX$$QAULangID_Name@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEX$$QAULangID_Name@@@Z PROC ; std::vector<LangID_Name,std::allocator<LangID_Name> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 866
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z ; std::addressof<LangID_Name>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBE_NPBULangID_Name@@@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 868
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z ; std::addressof<LangID_Name>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 5
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 869
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 870
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reserve
$LN3@push_back:
; Line 871
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Orphan_range
; Line 873
	mov	eax, DWORD PTR __Idx$1[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	call	??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z ; std::forward<LangID_Name>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
	mov	ecx, eax
	call	??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
; Line 874
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 876
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 878
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 879
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Reserve
$LN1@push_back:
; Line 880
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z ; std::vector<LangID_Name,std::allocator<LangID_Name> >::_Orphan_range
; Line 882
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z ; std::forward<LangID_Name>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
	mov	ecx, eax
	call	??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangID_Name> >::construct<LangID_Name,LangID_Name>
; Line 883
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEX$$QAULangID_Name@@@Z ENDP ; std::vector<LangID_Name,std::allocator<LangID_Name> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<LangID_Name> >::_Wrap_alloc<std::allocator<LangID_Name> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<LangID_Name,std::allocator<LangID_Name> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<LangID_Name> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAIABV?$allocator@ULangID_Name@@@2@@Z ; std::allocator_traits<std::allocator<LangID_Name> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<LangID_Name> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z PROC ; std::_Wrap_alloc<std::allocator<LangID_Name> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@I@Z ; std::allocator<LangID_Name>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<LangID_Name> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEPAULangID_Name@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEPAULangID_Name@@I@Z PROC ; std::_Wrap_alloc<std::allocator<LangID_Name> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@ULangID_Name@@@std@@QAEPAULangID_Name@@I@Z ; std::allocator<LangID_Name>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEPAULangID_Name@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<LangID_Name> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<LangID_Name> >::_Wrap_alloc<std::allocator<LangID_Name> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@ULangID_Name@@@std@@QAE@XZ ; std::allocator<LangID_Name>::allocator<LangID_Name>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<LangID_Name> >::_Wrap_alloc<std::allocator<LangID_Name> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAIABV?$allocator@ULangID_Name@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAIABV?$allocator@ULangID_Name@@@2@@Z PROC ; std::allocator_traits<std::allocator<LangID_Name> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@ULangID_Name@@@std@@QBEIXZ ; std::allocator<LangID_Name>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAIABV?$allocator@ULangID_Name@@@2@@Z ENDP ; std::allocator_traits<std::allocator<LangID_Name> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@ULangID_Name@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@ULangID_Name@@@std@@QBEIXZ PROC	; std::allocator<LangID_Name>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 134217727				; 07ffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@ULangID_Name@@@std@@QBEIXZ ENDP	; std::allocator<LangID_Name>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@ULangID_Name@@@std@@QAEPAULangID_Name@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@ULangID_Name@@@std@@QAEPAULangID_Name@@I@Z PROC ; std::allocator<LangID_Name>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@ULangID_Name@@@std@@YAPAULangID_Name@@IPAU1@@Z ; std::_Allocate<LangID_Name>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@ULangID_Name@@@std@@QAEPAULangID_Name@@I@Z ENDP ; std::allocator<LangID_Name>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@I@Z PROC ; std::allocator<LangID_Name>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@I@Z ENDP ; std::allocator<LangID_Name>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@ULangID_Name@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@ULangID_Name@@@std@@QAE@XZ PROC		; std::allocator<LangID_Name>::allocator<LangID_Name>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@ULangID_Name@@@std@@QAE@XZ ENDP		; std::allocator<LangID_Name>::allocator<LangID_Name>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GLangID_Name@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLangID_Name@@QAEPAXI@Z PROC				; LangID_Name::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LangID_Name@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLangID_Name@@QAEPAXI@Z ENDP				; LangID_Name::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0LangID_Name@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0LangID_Name@@QAE@ABU0@@Z PROC			; LangID_Name::LangID_Name, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0LangID_Name@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0LangID_Name@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0LangID_Name@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0LangID_Name@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0LangID_Name@@QAE@ABU0@@Z ENDP			; LangID_Name::LangID_Name
; Function compile flags: /Odtp
;	COMDAT ??1LangID_Name@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1LangID_Name@@QAE@XZ PROC				; LangID_Name::~LangID_Name, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1LangID_Name@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1LangID_Name@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??1LangID_Name@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1LangID_Name@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1LangID_Name@@QAE@XZ ENDP				; LangID_Name::~LangID_Name
; Function compile flags: /Odtp
;	COMDAT ??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_name$ = 12						; size = 28
??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; LangID_Name::LangID_Name, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.h
; Line 91
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax], ecx
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; LangID_Name::LangID_Name
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pNppParam$ = -40					; size = 4
tv257 = -36						; size = 4
tv244 = -32						; size = 4
tv227 = -28						; size = 4
tv164 = -24						; size = 4
tv150 = -20						; size = 4
_svp$ = -16						; size = 4
_id$ = -12						; size = 4
_this$ = -8						; size = 4
_isEnable$ = -1						; size = 1
?initScintParam@MarginsDlg@@AAEXXZ PROC			; MarginsDlg::initScintParam
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 526
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx
; Line 527
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 528
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ ; NppParameters::getSVP
	mov	DWORD PTR _svp$[ebp], eax
; Line 530
	push	0
	push	0
	push	241					; 000000f1H
	push	6205					; 0000183dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 531
	push	0
	push	0
	push	241					; 000000f1H
	push	6204					; 0000183cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 532
	push	0
	push	0
	push	241					; 000000f1H
	push	6203					; 0000183bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 533
	push	0
	push	0
	push	241					; 000000f1H
	push	6202					; 0000183aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 534
	push	0
	push	0
	push	241					; 000000f1H
	push	6226					; 00001852H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 536
	mov	DWORD PTR _id$[ebp], 0
; Line 537
	mov	ecx, DWORD PTR _svp$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv150[ebp], edx
	mov	eax, DWORD PTR tv150[ebp]
	sub	eax, 2
	mov	DWORD PTR tv150[ebp], eax
	cmp	DWORD PTR tv150[ebp], 3
	ja	SHORT $LN6@initScintP
	mov	ecx, DWORD PTR tv150[ebp]
	jmp	DWORD PTR $LN21@initScintP[ecx*4]
$LN10@initScintP:
; Line 540
	mov	DWORD PTR _id$[ebp], 6226		; 00001852H
; Line 541
	jmp	SHORT $LN11@initScintP
$LN9@initScintP:
; Line 543
	mov	DWORD PTR _id$[ebp], 6205		; 0000183dH
; Line 544
	jmp	SHORT $LN11@initScintP
$LN8@initScintP:
; Line 546
	mov	DWORD PTR _id$[ebp], 6204		; 0000183cH
; Line 547
	jmp	SHORT $LN11@initScintP
$LN7@initScintP:
; Line 549
	mov	DWORD PTR _id$[ebp], 6203		; 0000183bH
; Line 550
	jmp	SHORT $LN11@initScintP
$LN6@initScintP:
; Line 552
	mov	DWORD PTR _id$[ebp], 6202		; 0000183aH
$LN11@initScintP:
; Line 554
	push	0
	push	1
	push	241					; 000000f1H
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 556
	mov	edx, DWORD PTR _svp$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv164[ebp], eax
	cmp	DWORD PTR tv164[ebp], 1
	je	SHORT $LN3@initScintP
	cmp	DWORD PTR tv164[ebp], 2
	je	SHORT $LN2@initScintP
	jmp	SHORT $LN1@initScintP
$LN3@initScintP:
; Line 559
	mov	DWORD PTR _id$[ebp], 6229		; 00001855H
; Line 560
	jmp	SHORT $LN4@initScintP
$LN2@initScintP:
; Line 562
	mov	DWORD PTR _id$[ebp], 6230		; 00001856H
; Line 563
	jmp	SHORT $LN4@initScintP
$LN1@initScintP:
; Line 565
	mov	DWORD PTR _id$[ebp], 6228		; 00001854H
$LN4@initScintP:
; Line 567
	push	0
	push	1
	push	241					; 000000f1H
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 569
	push	0
	mov	ecx, DWORD PTR _svp$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	push	241					; 000000f1H
	push	6206					; 0000183eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 570
	push	0
	mov	edx, DWORD PTR _svp$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	push	eax
	push	241					; 000000f1H
	push	6207					; 0000183fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 571
	push	0
	mov	eax, DWORD PTR _svp$[ebp]
	movzx	ecx, BYTE PTR [eax+14]
	push	ecx
	push	241					; 000000f1H
	push	6214					; 00001846H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 572
	push	0
	mov	ecx, DWORD PTR _svp$[ebp]
	movzx	edx, BYTE PTR [ecx+44]
	push	edx
	push	241					; 000000f1H
	push	6234					; 0000185aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 574
	mov	edx, DWORD PTR _svp$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN15@initScintP
	mov	DWORD PTR tv227[ebp], 1
	jmp	SHORT $LN16@initScintP
$LN15@initScintP:
	mov	DWORD PTR tv227[ebp], 0
$LN16@initScintP:
	mov	al, BYTE PTR tv227[ebp]
	mov	BYTE PTR _isEnable$[ebp], al
; Line 575
	push	0
	movzx	ecx, BYTE PTR _isEnable$[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6208					; 00001840H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 576
	mov	ecx, DWORD PTR _svp$[ebp]
	cmp	DWORD PTR [ecx+20], 1
	jne	SHORT $LN17@initScintP
	mov	DWORD PTR tv244[ebp], 1
	jmp	SHORT $LN18@initScintP
$LN17@initScintP:
	mov	DWORD PTR tv244[ebp], 0
$LN18@initScintP:
	push	0
	mov	edx, DWORD PTR tv244[ebp]
	push	edx
	push	241					; 000000f1H
	push	6212					; 00001844H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 577
	mov	edx, DWORD PTR _svp$[ebp]
	cmp	DWORD PTR [edx+20], 2
	jne	SHORT $LN19@initScintP
	mov	DWORD PTR tv257[ebp], 1
	jmp	SHORT $LN20@initScintP
$LN19@initScintP:
	mov	DWORD PTR tv257[ebp], 0
$LN20@initScintP:
	push	0
	mov	eax, DWORD PTR tv257[ebp]
	push	eax
	push	241					; 000000f1H
	push	6213					; 00001845H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 578
	movzx	eax, BYTE PTR _isEnable$[ebp]
	push	eax
	push	6212					; 00001844H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 579
	movzx	eax, BYTE PTR _isEnable$[ebp]
	push	eax
	push	6213					; 00001845H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 580
	movzx	eax, BYTE PTR _isEnable$[ebp]
	push	eax
	push	6209					; 00001841H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 582
	push	0
	mov	eax, DWORD PTR _svp$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	6210					; 00001842H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 583
	movzx	ecx, BYTE PTR _isEnable$[ebp]
	push	ecx
	push	6210					; 00001842H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN21@initScintP:
	DD	$LN7@initScintP
	DD	$LN8@initScintP
	DD	$LN9@initScintP
	DD	$LN10@initScintP
?initScintParam@MarginsDlg@@AAEXXZ ENDP			; MarginsDlg::initScintParam
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p$2 = -212						; size = 8
tv764 = -204						; size = 4
_svp$3 = -200						; size = 4
$T4 = -196						; size = 4
tv768 = -192						; size = 4
_blinkRate$5 = -188					; size = 4
tv437 = -184						; size = 4
tv461 = -180						; size = 4
tv413 = -176						; size = 4
tv485 = -172						; size = 4
tv248 = -168						; size = 4
_svp$6 = -164						; size = 4
_enableDlgTheme$7 = -160				; size = 4
_borderWidth$8 = -156					; size = 4
_val$9 = -152						; size = 4
_hCaretBlikRateSlider$10 = -148				; size = 4
tv575 = -144						; size = 4
tv500 = -140						; size = 4
_hBorderWidthSlider$11 = -136				; size = 4
tv67 = -132						; size = 4
_blinkRate$12 = -128					; size = 4
_svp$13 = -124						; size = 4
_modeID$14 = -120					; size = 4
tv399 = -116						; size = 4
_pNppParam$ = -112					; size = 4
_nppGUI$ = -108						; size = 4
_iView$15 = -104					; size = 4
_svp$16 = -100						; size = 4
_isChecked$17 = -93					; size = 1
_nbColumnEdgeDlg$18 = -92				; size = 76
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?run_dlgProc@MarginsDlg@@EAGHIIJ@Z PROC			; MarginsDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 589
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 200				; 000000c8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 590
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 591
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 592
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN38@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN31@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 276		; 00000114H
	je	$LN36@run_dlgPro
	jmp	$LN39@run_dlgPro
$LN38@run_dlgPro:
; Line 596
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 597
	push	0
	push	6210					; 00001842H
	push	6210					; 00001842H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?create@URLCtrl@@QAEXPAUHWND__@@H0@Z	; URLCtrl::create
; Line 599
	push	OFFSET $SG144245
	push	0
	push	323					; 00000143H
	push	6218					; 0000184aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 600
	push	OFFSET $SG144247
	push	0
	push	323					; 00000143H
	push	6218					; 0000184aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 601
	push	OFFSET $SG144249
	push	0
	push	323					; 00000143H
	push	6218					; 0000184aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 602
	push	OFFSET $SG144251
	push	0
	push	323					; 00000143H
	push	6218					; 0000184aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 603
	push	OFFSET $SG144253
	push	0
	push	323					; 00000143H
	push	6218					; 0000184aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 606
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	push	ecx
	push	334					; 0000014eH
	push	6218					; 0000184aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 607
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+604]
	push	edx
	push	241					; 000000f1H
	push	6225					; 00001851H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 609
	push	50					; 00000032H
	push	1
	push	1031					; 00000407H
	push	6220					; 0000184cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 610
	push	2500					; 000009c4H
	push	1
	push	1032					; 00000408H
	push	6220					; 0000184cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 611
	push	50					; 00000032H
	push	0
	push	1045					; 00000415H
	push	6220					; 0000184cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 612
	mov	edx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [edx+596], 0
	jne	SHORT $LN43@run_dlgPro
	mov	DWORD PTR tv248[ebp], 2500		; 000009c4H
	jmp	SHORT $LN44@run_dlgPro
$LN43@run_dlgPro:
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	ecx, DWORD PTR [eax+596]
	mov	DWORD PTR tv248[ebp], ecx
$LN44@run_dlgPro:
	mov	edx, DWORD PTR tv248[ebp]
	mov	DWORD PTR _blinkRate$5[ebp], edx
; Line 613
	mov	eax, DWORD PTR _blinkRate$5[ebp]
	push	eax
	push	1
	push	1029					; 00000405H
	push	6220					; 0000184cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 615
	push	0
	push	1
	push	1031					; 00000407H
	push	6233					; 00001859H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 616
	push	30					; 0000001eH
	push	1
	push	1032					; 00000408H
	push	6233					; 00001859H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 617
	push	50					; 00000032H
	push	0
	push	1045					; 00000415H
	push	6233					; 00001859H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 618
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ ; NppParameters::getSVP
	mov	DWORD PTR _svp$6[ebp], eax
; Line 619
	mov	eax, DWORD PTR _svp$6[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	push	1
	push	1029					; 00000405H
	push	6233					; 00001859H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 620
	push	0
	mov	ecx, DWORD PTR _svp$6[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	push	6232					; 00001858H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 622
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initScintParam@MarginsDlg@@AAEXXZ	; MarginsDlg::initScintParam
; Line 624
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$7[ebp], eax
; Line 625
	cmp	DWORD PTR _enableDlgTheme$7[ebp], 0
	je	SHORT $LN37@run_dlgPro
; Line 626
	push	6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR _enableDlgTheme$7[ebp]
$LN37@run_dlgPro:
; Line 627
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN36@run_dlgPro:
; Line 632
	push	6220					; 0000184cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hCaretBlikRateSlider$10[ebp], eax
; Line 633
	push	6233					; 00001859H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	mov	DWORD PTR _hBorderWidthSlider$11[ebp], eax
; Line 634
	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR _hCaretBlikRateSlider$10[ebp]
	jne	SHORT $LN35@run_dlgPro
; Line 636
	push	0
	push	0
	push	1024					; 00000400H
	mov	eax, DWORD PTR _hCaretBlikRateSlider$10[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _blinkRate$12[ebp], eax
; Line 637
	cmp	DWORD PTR _blinkRate$12[ebp], 2500	; 000009c4H
	jne	SHORT $LN34@run_dlgPro
; Line 638
	mov	DWORD PTR _blinkRate$12[ebp], 0
$LN34@run_dlgPro:
; Line 639
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR _blinkRate$12[ebp]
	mov	DWORD PTR [ecx+596], edx
; Line 641
	push	0
	push	0
	push	1043					; 00000413H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN33@run_dlgPro
$LN35@run_dlgPro:
; Line 643
	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR _hBorderWidthSlider$11[ebp]
	jne	SHORT $LN33@run_dlgPro
; Line 645
	push	0
	push	0
	push	1024					; 00000400H
	mov	eax, DWORD PTR _hBorderWidthSlider$11[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _borderWidth$8[ebp], eax
; Line 646
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ ; NppParameters::getSVP
	mov	DWORD PTR _svp$3[ebp], eax
; Line 647
	mov	ecx, DWORD PTR _svp$3[ebp]
	mov	edx, DWORD PTR _borderWidth$8[ebp]
	mov	DWORD PTR [ecx+40], edx
; Line 648
	push	0
	mov	eax, DWORD PTR _borderWidth$8[ebp]
	push	eax
	push	6232					; 00001858H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 649
	push	0
	push	0
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN33@run_dlgPro:
; Line 651
	xor	eax, eax
	jmp	$LN41@run_dlgPro
$LN31@run_dlgPro:
; Line 657
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ ; NppParameters::getSVP
	mov	DWORD PTR _svp$16[ebp], eax
; Line 658
	mov	DWORD PTR _iView$15[ebp], 1
; Line 659
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv399[ebp], edx
	mov	eax, DWORD PTR tv399[ebp]
	sub	eax, 6202				; 0000183aH
	mov	DWORD PTR tv399[ebp], eax
	cmp	DWORD PTR tv399[ebp], 32		; 00000020H
	ja	$LN8@run_dlgPro
	mov	ecx, DWORD PTR tv399[ebp]
	movzx	edx, BYTE PTR $LN58@run_dlgPro[ecx]
	jmp	DWORD PTR $LN60@run_dlgPro[edx*4]
$LN28@run_dlgPro:
; Line 662
	push	0
	push	0
	push	240					; 000000f0H
	push	6206					; 0000183eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN45@run_dlgPro
	mov	DWORD PTR tv413[ebp], 1
	jmp	SHORT $LN46@run_dlgPro
$LN45@run_dlgPro:
	mov	DWORD PTR tv413[ebp], 0
$LN46@run_dlgPro:
	mov	edx, DWORD PTR _svp$16[ebp]
	mov	al, BYTE PTR tv413[ebp]
	mov	BYTE PTR [edx], al
; Line 663
	mov	ecx, DWORD PTR _iView$15[ebp]
	push	ecx
	push	44012					; 0000abecH
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 664
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN27@run_dlgPro:
; Line 667
	push	0
	push	0
	push	240					; 000000f0H
	push	6207					; 0000183fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN47@run_dlgPro
	mov	DWORD PTR tv437[ebp], 1
	jmp	SHORT $LN48@run_dlgPro
$LN47@run_dlgPro:
	mov	DWORD PTR tv437[ebp], 0
$LN48@run_dlgPro:
	mov	eax, DWORD PTR _svp$16[ebp]
	mov	cl, BYTE PTR tv437[ebp]
	mov	BYTE PTR [eax+1], cl
; Line 668
	mov	edx, DWORD PTR _iView$15[ebp]
	push	edx
	push	44013					; 0000abedH
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 669
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN26@run_dlgPro:
; Line 672
	push	0
	push	0
	push	240					; 000000f0H
	push	6214					; 00001846H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN49@run_dlgPro
	mov	DWORD PTR tv461[ebp], 1
	jmp	SHORT $LN50@run_dlgPro
$LN49@run_dlgPro:
	mov	DWORD PTR tv461[ebp], 0
$LN50@run_dlgPro:
	mov	ecx, DWORD PTR _svp$16[ebp]
	mov	dl, BYTE PTR tv461[ebp]
	mov	BYTE PTR [ecx+14], dl
; Line 673
	mov	eax, DWORD PTR _iView$15[ebp]
	push	eax
	push	44021					; 0000abf5H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 674
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN25@run_dlgPro:
; Line 677
	push	0
	push	0
	push	240					; 000000f0H
	push	6234					; 0000185aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN51@run_dlgPro
	mov	DWORD PTR tv485[ebp], 1
	jmp	SHORT $LN52@run_dlgPro
$LN51@run_dlgPro:
	mov	DWORD PTR tv485[ebp], 0
$LN52@run_dlgPro:
	mov	edx, DWORD PTR _svp$16[ebp]
	mov	al, BYTE PTR tv485[ebp]
	mov	BYTE PTR [edx+44], al
; Line 679
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN24@run_dlgPro:
; Line 682
	push	0
	push	0
	push	240					; 000000f0H
	push	6225					; 00001851H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN53@run_dlgPro
	mov	DWORD PTR tv500[ebp], 1
	jmp	SHORT $LN54@run_dlgPro
$LN53@run_dlgPro:
	mov	DWORD PTR tv500[ebp], 0
$LN54@run_dlgPro:
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR tv500[ebp]
	mov	BYTE PTR [eax+604], cl
; Line 683
	push	0
	push	0
	push	1057					; 00000421H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 684
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN23@run_dlgPro:
; Line 687
	mov	ecx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [ecx+4], 1
; Line 688
	mov	edx, DWORD PTR _iView$15[ebp]
	push	edx
	push	44015					; 0000abefH
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 689
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN22@run_dlgPro:
; Line 691
	mov	edx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [edx+4], 2
; Line 692
	mov	eax, DWORD PTR _iView$15[ebp]
	push	eax
	push	44016					; 0000abf0H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 693
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN21@run_dlgPro:
; Line 695
	mov	eax, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [eax+4], 3
; Line 696
	mov	ecx, DWORD PTR _iView$15[ebp]
	push	ecx
	push	44017					; 0000abf1H
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 697
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN20@run_dlgPro:
; Line 699
	mov	ecx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [ecx+4], 4
; Line 700
	mov	edx, DWORD PTR _iView$15[ebp]
	push	edx
	push	44018					; 0000abf2H
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 701
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN19@run_dlgPro:
; Line 704
	mov	edx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [edx+4], 5
; Line 705
	mov	eax, DWORD PTR _iView$15[ebp]
	push	eax
	push	44014					; 0000abeeH
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 706
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN18@run_dlgPro:
; Line 710
	mov	DWORD PTR _modeID$14[ebp], 0
; Line 711
	push	0
	push	0
	push	240					; 000000f0H
	push	6208					; 00001840H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN55@run_dlgPro
	mov	DWORD PTR tv575[ebp], 1
	jmp	SHORT $LN56@run_dlgPro
$LN55@run_dlgPro:
	mov	DWORD PTR tv575[ebp], 0
$LN56@run_dlgPro:
	mov	dl, BYTE PTR tv575[ebp]
	mov	BYTE PTR _isChecked$17[ebp], dl
; Line 712
	movzx	eax, BYTE PTR _isChecked$17[ebp]
	test	eax, eax
	je	SHORT $LN17@run_dlgPro
; Line 714
	push	0
	push	1
	push	241					; 000000f1H
	push	6212					; 00001844H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 715
	mov	eax, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [eax+20], 1
; Line 716
	mov	DWORD PTR _modeID$14[ebp], 44027	; 0000abfbH
; Line 718
	jmp	SHORT $LN16@run_dlgPro
$LN17@run_dlgPro:
; Line 720
	push	0
	push	0
	push	241					; 000000f1H
	push	6212					; 00001844H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 721
	push	0
	push	0
	push	241					; 000000f1H
	push	6213					; 00001845H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 722
	mov	edx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 723
	mov	DWORD PTR _modeID$14[ebp], 44037	; 0000ac05H
$LN16@run_dlgPro:
; Line 725
	movzx	eax, BYTE PTR _isChecked$17[ebp]
	push	eax
	push	6212					; 00001844H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 726
	movzx	eax, BYTE PTR _isChecked$17[ebp]
	push	eax
	push	6213					; 00001845H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 727
	movzx	eax, BYTE PTR _isChecked$17[ebp]
	push	eax
	push	6209					; 00001841H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 728
	movzx	eax, BYTE PTR _isChecked$17[ebp]
	push	eax
	push	6210					; 00001842H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 730
	mov	eax, DWORD PTR _iView$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _modeID$14[ebp]
	push	ecx
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 731
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN15@run_dlgPro:
; Line 734
	mov	ecx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [ecx+20], 1
; Line 735
	mov	edx, DWORD PTR _iView$15[ebp]
	push	edx
	push	44027					; 0000abfbH
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 736
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN14@run_dlgPro:
; Line 739
	mov	edx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [edx+20], 2
; Line 740
	mov	eax, DWORD PTR _iView$15[ebp]
	push	eax
	push	44028					; 0000abfcH
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 741
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN13@run_dlgPro:
; Line 745
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ ; NppParameters::getSVP
	mov	DWORD PTR _svp$13[ebp], eax
; Line 747
	lea	ecx, DWORD PTR _nbColumnEdgeDlg$18[ebp]
	call	??0ValueDlg@@QAE@XZ			; ValueDlg::ValueDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 748
	push	OFFSET $SG144303
	mov	eax, DWORD PTR _svp$13[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	0
	lea	ecx, DWORD PTR _nbColumnEdgeDlg$18[ebp]
	call	?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z ; ValueDlg::init
; Line 749
	push	3
	lea	ecx, DWORD PTR _nbColumnEdgeDlg$18[ebp]
	call	?setNBNumber@ValueDlg@@QAEXH@Z		; ValueDlg::setNBNumber
; Line 752
	lea	ecx, DWORD PTR _p$2[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCursorPos@4
; Line 754
	push	0
	mov	edx, DWORD PTR _p$2[ebp+4]
	push	edx
	mov	eax, DWORD PTR _p$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _nbColumnEdgeDlg$18[ebp]
	call	?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z	; ValueDlg::doDialog
	mov	DWORD PTR _val$9[ebp], eax
; Line 755
	cmp	DWORD PTR _val$9[ebp], -1
	je	SHORT $LN12@run_dlgPro
; Line 757
	mov	ecx, DWORD PTR _svp$13[ebp]
	mov	edx, DWORD PTR _val$9[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 758
	push	0
	mov	eax, DWORD PTR _svp$13[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	6210					; 00001842H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetDlgItemInt@16
; Line 761
	push	0
	push	0
	push	1052					; 0000041cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN12@run_dlgPro:
; Line 763
	mov	DWORD PTR $T4[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _nbColumnEdgeDlg$18[ebp]
	call	??1ValueDlg@@UAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
	jmp	$LN41@run_dlgPro
$LN11@run_dlgPro:
; Line 767
	mov	eax, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 768
	mov	ecx, DWORD PTR _iView$15[ebp]
	push	ecx
	push	44046					; 0000ac0eH
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 769
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN10@run_dlgPro:
; Line 772
	mov	ecx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [ecx+8], 1
; Line 773
	mov	edx, DWORD PTR _iView$15[ebp]
	push	edx
	push	44047					; 0000ac0fH
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 774
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN9@run_dlgPro:
; Line 777
	mov	edx, DWORD PTR _svp$16[ebp]
	mov	DWORD PTR [edx+8], 2
; Line 778
	mov	eax, DWORD PTR _iView$15[ebp]
	push	eax
	push	44048					; 0000ac10H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 779
	mov	eax, 1
	jmp	$LN41@run_dlgPro
$LN8@run_dlgPro:
; Line 782
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR tv764[ebp], ecx
	cmp	DWORD PTR tv764[ebp], 1
	je	SHORT $LN5@run_dlgPro
	jmp	SHORT $LN39@run_dlgPro
$LN5@run_dlgPro:
; Line 786
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR tv768[ebp], eax
	cmp	DWORD PTR tv768[ebp], 6218		; 0000184aH
	je	SHORT $LN2@run_dlgPro
	jmp	SHORT $LN39@run_dlgPro
$LN2@run_dlgPro:
; Line 790
	push	0
	push	0
	push	327					; 00000147H
	push	6218					; 0000184aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	DWORD PTR [ecx+600], eax
; Line 791
	push	0
	push	0
	push	1042					; 00000412H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 792
	mov	eax, 1
	jmp	SHORT $LN41@run_dlgPro
$LN39@run_dlgPro:
; Line 802
	xor	eax, eax
$LN41@run_dlgPro:
; Line 803
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN60@run_dlgPro:
	DD	$LN23@run_dlgPro
	DD	$LN22@run_dlgPro
	DD	$LN21@run_dlgPro
	DD	$LN20@run_dlgPro
	DD	$LN28@run_dlgPro
	DD	$LN27@run_dlgPro
	DD	$LN18@run_dlgPro
	DD	$LN13@run_dlgPro
	DD	$LN15@run_dlgPro
	DD	$LN14@run_dlgPro
	DD	$LN26@run_dlgPro
	DD	$LN24@run_dlgPro
	DD	$LN19@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN10@run_dlgPro
	DD	$LN9@run_dlgPro
	DD	$LN25@run_dlgPro
	DD	$LN8@run_dlgPro
$LN58@run_dlgPro:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	17					; 00000011H
	DB	7
	DB	17					; 00000011H
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	17					; 00000011H
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _nbColumnEdgeDlg$18[ebp]
	jmp	??1ValueDlg@@UAE@XZ
__ehhandler$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-204]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@MarginsDlg@@EAGHIIJ@Z ENDP			; MarginsDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv936 = -944						; size = 4
tv929 = -940						; size = 4
$T2 = -936						; size = 4
$T3 = -932						; size = 4
$T4 = -928						; size = 4
tv939 = -924						; size = 4
tv933 = -920						; size = 4
$T5 = -916						; size = 4
tv930 = -912						; size = 4
tv944 = -908						; size = 4
$T6 = -904						; size = 4
tv943 = -900						; size = 4
tv851 = -896						; size = 4
tv327 = -892						; size = 4
_index$7 = -888						; size = 4
_tbStatus$8 = -884					; size = 4
tv847 = -880						; size = 4
_len$9 = -876						; size = 4
tv946 = -872						; size = 4
tv941 = -868						; size = 4
tv334 = -864						; size = 4
tv278 = -860						; size = 4
tv598 = -856						; size = 4
tv256 = -852						; size = 4
tv452 = -848						; size = 4
tv146 = -844						; size = 4
tv508 = -840						; size = 4
tv73 = -836						; size = 4
tv65 = -832						; size = 4
tv77 = -828						; size = 4
tv568 = -824						; size = 4
_enableDlgTheme$10 = -820				; size = 4
tv480 = -816						; size = 4
_localizationSwitcher$11 = -812				; size = 4
tv629 = -808						; size = 4
tv805 = -804						; size = 4
tv603 = -800						; size = 4
tv800 = -796						; size = 4
tv573 = -792						; size = 4
tv694 = -788						; size = 4
tv545 = -784						; size = 4
tv681 = -780						; size = 4
tv485 = -776						; size = 4
tv668 = -772						; size = 4
tv457 = -768						; size = 4
tv655 = -764						; size = 4
_index$12 = -760					; size = 4
tv642 = -756						; size = 4
tv616 = -752						; size = 4
_i$13 = -748						; size = 4
_ID2Check$14 = -744					; size = 4
tv432 = -740						; size = 4
_localizationSwitcher$15 = -736				; size = 4
_pNppParam$ = -732					; size = 4
_nppGUI$16 = -728					; size = 4
_showTool$17 = -721					; size = 1
_showMenu$18 = -720					; size = 1
_isChecked$19 = -719					; size = 1
_isChecked$20 = -718					; size = 1
_isChecked$21 = -717					; size = 1
_showStatus$22 = -716					; size = 1
_isChecked$23 = -715					; size = 1
_showDocSwitcher$24 = -714				; size = 1
_isChecked$25 = -713					; size = 1
_tabBarStatus$26 = -712					; size = 4
_toBeHidden$27 = -705					; size = 1
_localizationInfo$28 = -704				; size = 56
$T29 = -648						; size = 28
_lang$30 = -620						; size = 28
_fnW$31 = -592						; size = 28
_fn$32 = -564						; size = 28
_langName$33 = -536					; size = 520
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@BarsDlg@@EAGHIIJ@Z PROC			; BarsDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 309
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run_dlgProc@BarsDlg@@EAGHIIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 932				; 000003a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 310
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 312
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 272		; 00000110H
	je	SHORT $LN43@run_dlgPro
	cmp	DWORD PTR tv65[ebp], 273		; 00000111H
	je	$LN31@run_dlgPro
	jmp	$LN44@run_dlgPro
$LN43@run_dlgPro:
; Line 316
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$16[ebp], eax
; Line 317
	mov	ecx, DWORD PTR _nppGUI$16[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _tbStatus$8[ebp], edx
; Line 318
	mov	eax, DWORD PTR _nppGUI$16[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _tabBarStatus$26[ebp], ecx
; Line 319
	mov	edx, DWORD PTR _nppGUI$16[ebp]
	mov	al, BYTE PTR [edx+4]
	mov	BYTE PTR _showTool$17[ebp], al
; Line 320
	mov	ecx, DWORD PTR _nppGUI$16[ebp]
	mov	dl, BYTE PTR [ecx+5]
	mov	BYTE PTR _showStatus$22[ebp], dl
; Line 321
	mov	eax, DWORD PTR _nppGUI$16[ebp]
	mov	cl, BYTE PTR [eax+6]
	mov	BYTE PTR _showMenu$18[ebp], cl
; Line 323
	movzx	edx, BYTE PTR _showTool$17[ebp]
	test	edx, edx
	je	SHORT $LN48@run_dlgPro
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN49@run_dlgPro
$LN48@run_dlgPro:
	mov	DWORD PTR tv77[ebp], 1
$LN49@run_dlgPro:
	push	0
	mov	eax, DWORD PTR tv77[ebp]
	push	eax
	push	241					; 000000f1H
	push	6102					; 000017d6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 324
	mov	DWORD PTR _ID2Check$14[ebp], 0
; Line 325
	mov	eax, DWORD PTR _tbStatus$8[ebp]
	mov	DWORD PTR tv73[ebp], eax
	cmp	DWORD PTR tv73[ebp], 0
	je	SHORT $LN40@run_dlgPro
	cmp	DWORD PTR tv73[ebp], 1
	je	SHORT $LN39@run_dlgPro
	jmp	SHORT $LN38@run_dlgPro
$LN40@run_dlgPro:
; Line 328
	mov	DWORD PTR _ID2Check$14[ebp], 6103	; 000017d7H
; Line 329
	jmp	SHORT $LN41@run_dlgPro
$LN39@run_dlgPro:
; Line 331
	mov	DWORD PTR _ID2Check$14[ebp], 6104	; 000017d8H
; Line 332
	jmp	SHORT $LN41@run_dlgPro
$LN38@run_dlgPro:
; Line 335
	mov	DWORD PTR _ID2Check$14[ebp], 6105	; 000017d9H
$LN41@run_dlgPro:
; Line 337
	push	0
	push	1
	push	241					; 000000f1H
	mov	ecx, DWORD PTR _ID2Check$14[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 339
	push	0
	mov	ecx, DWORD PTR _tabBarStatus$26[ebp]
	and	ecx, 8
	push	ecx
	push	241					; 000000f1H
	push	6107					; 000017dbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 340
	mov	ecx, DWORD PTR _tabBarStatus$26[ebp]
	and	ecx, 4
	jne	SHORT $LN50@run_dlgPro
	mov	DWORD PTR tv146[ebp], 1
	jmp	SHORT $LN51@run_dlgPro
$LN50@run_dlgPro:
	mov	DWORD PTR tv146[ebp], 0
$LN51@run_dlgPro:
	push	0
	mov	edx, DWORD PTR tv146[ebp]
	push	edx
	push	241					; 000000f1H
	push	6108					; 000017dcH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 341
	push	0
	mov	edx, DWORD PTR _tabBarStatus$26[ebp]
	and	edx, 1
	push	edx
	push	241					; 000000f1H
	push	6110					; 000017deH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 342
	push	0
	mov	edx, DWORD PTR _tabBarStatus$26[ebp]
	and	edx, 2
	push	edx
	push	241					; 000000f1H
	push	6109					; 000017ddH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 343
	push	0
	mov	edx, DWORD PTR _tabBarStatus$26[ebp]
	and	edx, 16					; 00000010H
	push	edx
	push	241					; 000000f1H
	push	6112					; 000017e0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 344
	push	0
	mov	edx, DWORD PTR _tabBarStatus$26[ebp]
	and	edx, 32					; 00000020H
	push	edx
	push	241					; 000000f1H
	push	6113					; 000017e1H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 345
	push	0
	mov	edx, DWORD PTR _tabBarStatus$26[ebp]
	and	edx, 64					; 00000040H
	push	edx
	push	241					; 000000f1H
	push	6120					; 000017e8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 346
	push	0
	mov	edx, DWORD PTR _tabBarStatus$26[ebp]
	and	edx, 128				; 00000080H
	push	edx
	push	241					; 000000f1H
	push	6119					; 000017e7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 348
	push	0
	mov	edx, DWORD PTR _tabBarStatus$26[ebp]
	and	edx, 256				; 00000100H
	push	edx
	push	241					; 000000f1H
	push	6118					; 000017e6H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 349
	push	0
	push	6118					; 000017e6H
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 350
	push	0
	movzx	ecx, BYTE PTR _showStatus$22[ebp]
	push	ecx
	push	241					; 000000f1H
	push	6111					; 000017dfH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 351
	movzx	ecx, BYTE PTR _showMenu$18[ebp]
	test	ecx, ecx
	jne	SHORT $LN52@run_dlgPro
	mov	DWORD PTR tv256[ebp], 1
	jmp	SHORT $LN53@run_dlgPro
$LN52@run_dlgPro:
	mov	DWORD PTR tv256[ebp], 0
$LN53@run_dlgPro:
	push	0
	mov	edx, DWORD PTR tv256[ebp]
	push	edx
	push	241					; 000000f1H
	push	6122					; 000017eaH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 353
	push	0
	push	0
	push	2110					; 0000083eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN54@run_dlgPro
	mov	DWORD PTR tv278[ebp], 1
	jmp	SHORT $LN55@run_dlgPro
$LN54@run_dlgPro:
	mov	DWORD PTR tv278[ebp], 0
$LN55@run_dlgPro:
	mov	cl, BYTE PTR tv278[ebp]
	mov	BYTE PTR _showDocSwitcher$24[ebp], cl
; Line 354
	push	0
	movzx	edx, BYTE PTR _showDocSwitcher$24[ebp]
	push	edx
	push	241					; 000000f1H
	push	6126					; 000017eeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 355
	push	0
	mov	edx, DWORD PTR _nppGUI$16[ebp]
	movzx	eax, BYTE PTR [edx+1684]
	push	eax
	push	241					; 000000f1H
	push	6127					; 000017efH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 357
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ ; NppParameters::getLocalizationSwitcher
	mov	DWORD PTR _localizationSwitcher$15[ebp], eax
; Line 359
	mov	DWORD PTR _i$13[ebp], 0
	mov	ecx, DWORD PTR _localizationSwitcher$15[ebp]
	call	?size@LocalizationSwitcher@@QBEIXZ	; LocalizationSwitcher::size
	mov	DWORD PTR _len$9[ebp], eax
	jmp	SHORT $LN37@run_dlgPro
$LN36@run_dlgPro:
	mov	eax, DWORD PTR _i$13[ebp]
	add	eax, 1
	mov	DWORD PTR _i$13[ebp], eax
$LN37@run_dlgPro:
	mov	ecx, DWORD PTR _i$13[ebp]
	cmp	ecx, DWORD PTR _len$9[ebp]
	jae	SHORT $LN35@run_dlgPro
; Line 361
	mov	edx, DWORD PTR _i$13[ebp]
	push	edx
	lea	eax, DWORD PTR _localizationInfo$28[ebp]
	push	eax
	mov	ecx, DWORD PTR _localizationSwitcher$15[ebp]
	call	?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z ; LocalizationSwitcher::getElementFromIndex
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 362
	lea	ecx, DWORD PTR _localizationInfo$28[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	323					; 00000143H
	push	6124					; 000017ecH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 363
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _localizationInfo$28[ebp]
	call	??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ
	jmp	SHORT $LN36@run_dlgPro
$LN35@run_dlgPro:
; Line 364
	push	OFFSET $SG143816
	lea	ecx, DWORD PTR _lang$30[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 365
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNativeLangA@NppParameters@@QBEPAVTiXmlDocumentA@@XZ ; NppParameters::getNativeLangA
	test	eax, eax
	je	$LN34@run_dlgPro
; Line 367
	lea	eax, DWORD PTR _fn$32[ebp]
	push	eax
	mov	ecx, DWORD PTR _localizationSwitcher$15[ebp]
	call	?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; LocalizationSwitcher::getFileName
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 368
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	push	ecx
	lea	ecx, DWORD PTR _fn$32[ebp]
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	DWORD PTR tv334[ebp], eax
	mov	edx, DWORD PTR tv334[ebp]
	mov	DWORD PTR tv929[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T5[ebp], esp
	push	eax
	lea	ecx, DWORD PTR _fn$32[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv327[ebp], eax
	mov	ecx, DWORD PTR tv327[ebp]
	mov	DWORD PTR tv933[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fnW$31[ebp]
	call	??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,void>
	mov	DWORD PTR tv930[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 369
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	edx
	lea	ecx, DWORD PTR _fn$32[ebp]
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	DWORD PTR tv943[ebp], eax
	mov	eax, DWORD PTR tv943[ebp]
	mov	DWORD PTR tv936[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	ecx
	lea	ecx, DWORD PTR _fn$32[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	DWORD PTR tv944[ebp], eax
	mov	edx, DWORD PTR tv944[ebp]
	mov	DWORD PTR tv939[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _fnW$31[ebp]
	call	??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
; Line 370
	lea	ecx, DWORD PTR _fnW$31[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	lea	eax, DWORD PTR $T29[ebp]
	push	eax
	mov	ecx, DWORD PTR _localizationSwitcher$15[ebp]
	call	?getLangFromXmlFileName@LocalizationSwitcher@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PB_W@Z ; LocalizationSwitcher::getLangFromXmlFileName
	mov	DWORD PTR tv946[ebp], eax
	mov	ecx, DWORD PTR tv946[ebp]
	mov	DWORD PTR tv941[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv941[ebp]
	push	edx
	lea	ecx, DWORD PTR _lang$30[ebp]
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T29[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 371
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fnW$31[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fn$32[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN34@run_dlgPro:
; Line 372
	lea	ecx, DWORD PTR _lang$30[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	-1
	push	344					; 00000158H
	push	6124					; 000017ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$12[ebp], eax
; Line 373
	cmp	DWORD PTR _index$12[ebp], -1
	je	SHORT $LN33@run_dlgPro
; Line 374
	push	0
	mov	edx, DWORD PTR _index$12[ebp]
	push	edx
	push	334					; 0000014eH
	push	6124					; 000017ecH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN33@run_dlgPro:
; Line 376
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$10[ebp], eax
; Line 377
	cmp	DWORD PTR _enableDlgTheme$10[ebp], 0
	je	SHORT $LN32@run_dlgPro
; Line 378
	push	6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR _enableDlgTheme$10[ebp]
$LN32@run_dlgPro:
; Line 380
	mov	DWORD PTR $T6[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lang$30[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN46@run_dlgPro
$LN31@run_dlgPro:
; Line 385
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv432[ebp], ecx
	mov	edx, DWORD PTR tv432[ebp]
	sub	edx, 6102				; 000017d6H
	mov	DWORD PTR tv432[ebp], edx
	cmp	DWORD PTR tv432[ebp], 25		; 00000019H
	ja	$LN11@run_dlgPro
	mov	eax, DWORD PTR tv432[ebp]
	jmp	DWORD PTR $LN104@run_dlgPro[eax*4]
$LN28@run_dlgPro:
; Line 389
	push	0
	push	0
	push	240					; 000000f0H
	push	6111					; 000017dfH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN56@run_dlgPro
	mov	DWORD PTR tv452[ebp], 1
	jmp	SHORT $LN57@run_dlgPro
$LN56@run_dlgPro:
	mov	DWORD PTR tv452[ebp], 0
$LN57@run_dlgPro:
	mov	al, BYTE PTR tv452[ebp]
	mov	BYTE PTR _isChecked$23[ebp], al
; Line 390
	movzx	ecx, BYTE PTR _isChecked$23[ebp]
	test	ecx, ecx
	je	SHORT $LN58@run_dlgPro
	mov	DWORD PTR tv457[ebp], 0
	jmp	SHORT $LN59@run_dlgPro
$LN58@run_dlgPro:
	mov	DWORD PTR tv457[ebp], 1
$LN59@run_dlgPro:
	mov	edx, DWORD PTR tv457[ebp]
	push	edx
	push	0
	push	2098					; 00000832H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 392
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN27@run_dlgPro:
; Line 396
	push	0
	push	0
	push	240					; 000000f0H
	push	6122					; 000017eaH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN60@run_dlgPro
	mov	DWORD PTR tv480[ebp], 1
	jmp	SHORT $LN61@run_dlgPro
$LN60@run_dlgPro:
	mov	DWORD PTR tv480[ebp], 0
$LN61@run_dlgPro:
	mov	cl, BYTE PTR tv480[ebp]
	mov	BYTE PTR _isChecked$21[ebp], cl
; Line 397
	movzx	edx, BYTE PTR _isChecked$21[ebp]
	test	edx, edx
	je	SHORT $LN62@run_dlgPro
	mov	DWORD PTR tv485[ebp], 1
	jmp	SHORT $LN63@run_dlgPro
$LN62@run_dlgPro:
	mov	DWORD PTR tv485[ebp], 0
$LN63@run_dlgPro:
	mov	eax, DWORD PTR tv485[ebp]
	push	eax
	push	0
	push	2096					; 00000830H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 399
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN26@run_dlgPro:
; Line 403
	push	0
	push	0
	push	240					; 000000f0H
	push	6126					; 000017eeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN64@run_dlgPro
	mov	DWORD PTR tv508[ebp], 1
	jmp	SHORT $LN65@run_dlgPro
$LN64@run_dlgPro:
	mov	DWORD PTR tv508[ebp], 0
$LN65@run_dlgPro:
	mov	dl, BYTE PTR tv508[ebp]
	mov	BYTE PTR _isChecked$19[ebp], dl
; Line 404
	movzx	eax, BYTE PTR _isChecked$19[ebp]
	test	eax, eax
	je	SHORT $LN66@run_dlgPro
	mov	DWORD PTR tv545[ebp], 1
	jmp	SHORT $LN67@run_dlgPro
$LN66@run_dlgPro:
	mov	DWORD PTR tv545[ebp], 0
$LN67@run_dlgPro:
	mov	ecx, DWORD PTR tv545[ebp]
	push	ecx
	push	0
	push	2109					; 0000083dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 406
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN25@run_dlgPro:
; Line 409
	push	0
	push	0
	push	240					; 000000f0H
	push	6127					; 000017efH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN68@run_dlgPro
	mov	DWORD PTR tv568[ebp], 1
	jmp	SHORT $LN69@run_dlgPro
$LN68@run_dlgPro:
	mov	DWORD PTR tv568[ebp], 0
$LN69@run_dlgPro:
	mov	al, BYTE PTR tv568[ebp]
	mov	BYTE PTR _isChecked$25[ebp], al
; Line 410
	movzx	ecx, BYTE PTR _isChecked$25[ebp]
	test	ecx, ecx
	je	SHORT $LN70@run_dlgPro
	mov	DWORD PTR tv573[ebp], 1
	jmp	SHORT $LN71@run_dlgPro
$LN70@run_dlgPro:
	mov	DWORD PTR tv573[ebp], 0
$LN71@run_dlgPro:
	mov	edx, DWORD PTR tv573[ebp]
	push	edx
	push	0
	push	2113					; 00000841H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 412
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN24@run_dlgPro:
; Line 416
	push	0
	push	0
	push	240					; 000000f0H
	push	6118					; 000017e6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN72@run_dlgPro
	mov	DWORD PTR tv598[ebp], 1
	jmp	SHORT $LN73@run_dlgPro
$LN72@run_dlgPro:
	mov	DWORD PTR tv598[ebp], 0
$LN73@run_dlgPro:
	mov	cl, BYTE PTR tv598[ebp]
	mov	BYTE PTR _toBeHidden$27[ebp], cl
; Line 417
	movzx	edx, BYTE PTR _toBeHidden$27[ebp]
	test	edx, edx
	jne	SHORT $LN74@run_dlgPro
	mov	DWORD PTR tv603[ebp], 1
	jmp	SHORT $LN75@run_dlgPro
$LN74@run_dlgPro:
	mov	DWORD PTR tv603[ebp], 0
$LN75@run_dlgPro:
	mov	eax, DWORD PTR tv603[ebp]
	push	eax
	push	6119					; 000017e7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 418
	movzx	eax, BYTE PTR _toBeHidden$27[ebp]
	test	eax, eax
	jne	SHORT $LN76@run_dlgPro
	mov	DWORD PTR tv616[ebp], 1
	jmp	SHORT $LN77@run_dlgPro
$LN76@run_dlgPro:
	mov	DWORD PTR tv616[ebp], 0
$LN77@run_dlgPro:
	mov	ecx, DWORD PTR tv616[ebp]
	push	ecx
	push	6120					; 000017e8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 419
	movzx	ecx, BYTE PTR _toBeHidden$27[ebp]
	test	ecx, ecx
	jne	SHORT $LN78@run_dlgPro
	mov	DWORD PTR tv629[ebp], 1
	jmp	SHORT $LN79@run_dlgPro
$LN78@run_dlgPro:
	mov	DWORD PTR tv629[ebp], 0
$LN79@run_dlgPro:
	mov	edx, DWORD PTR tv629[ebp]
	push	edx
	push	6107					; 000017dbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 420
	movzx	edx, BYTE PTR _toBeHidden$27[ebp]
	test	edx, edx
	jne	SHORT $LN80@run_dlgPro
	mov	DWORD PTR tv642[ebp], 1
	jmp	SHORT $LN81@run_dlgPro
$LN80@run_dlgPro:
	mov	DWORD PTR tv642[ebp], 0
$LN81@run_dlgPro:
	mov	eax, DWORD PTR tv642[ebp]
	push	eax
	push	6108					; 000017dcH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 421
	movzx	eax, BYTE PTR _toBeHidden$27[ebp]
	test	eax, eax
	jne	SHORT $LN82@run_dlgPro
	mov	DWORD PTR tv655[ebp], 1
	jmp	SHORT $LN83@run_dlgPro
$LN82@run_dlgPro:
	mov	DWORD PTR tv655[ebp], 0
$LN83@run_dlgPro:
	mov	ecx, DWORD PTR tv655[ebp]
	push	ecx
	push	6110					; 000017deH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 422
	movzx	ecx, BYTE PTR _toBeHidden$27[ebp]
	test	ecx, ecx
	jne	SHORT $LN84@run_dlgPro
	mov	DWORD PTR tv668[ebp], 1
	jmp	SHORT $LN85@run_dlgPro
$LN84@run_dlgPro:
	mov	DWORD PTR tv668[ebp], 0
$LN85@run_dlgPro:
	mov	edx, DWORD PTR tv668[ebp]
	push	edx
	push	6109					; 000017ddH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 423
	movzx	edx, BYTE PTR _toBeHidden$27[ebp]
	test	edx, edx
	jne	SHORT $LN86@run_dlgPro
	mov	DWORD PTR tv681[ebp], 1
	jmp	SHORT $LN87@run_dlgPro
$LN86@run_dlgPro:
	mov	DWORD PTR tv681[ebp], 0
$LN87@run_dlgPro:
	mov	eax, DWORD PTR tv681[ebp]
	push	eax
	push	6112					; 000017e0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 424
	movzx	eax, BYTE PTR _toBeHidden$27[ebp]
	test	eax, eax
	jne	SHORT $LN88@run_dlgPro
	mov	DWORD PTR tv694[ebp], 1
	jmp	SHORT $LN89@run_dlgPro
$LN88@run_dlgPro:
	mov	DWORD PTR tv694[ebp], 0
$LN89@run_dlgPro:
	mov	ecx, DWORD PTR tv694[ebp]
	push	ecx
	push	6113					; 000017e1H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 426
	movzx	ecx, BYTE PTR _toBeHidden$27[ebp]
	push	ecx
	push	0
	push	2075					; 0000081bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 427
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN23@run_dlgPro:
; Line 431
	push	0
	push	44043					; 0000ac0bH
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 432
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN22@run_dlgPro:
; Line 435
	push	0
	push	44044					; 0000ac0cH
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 436
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN21@run_dlgPro:
; Line 441
	push	0
	push	44005					; 0000abe5H
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 442
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN20@run_dlgPro:
; Line 445
	push	0
	push	44006					; 0000abe6H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 446
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN19@run_dlgPro:
; Line 449
	push	0
	push	44007					; 0000abe7H
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 450
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN18@run_dlgPro:
; Line 453
	push	0
	push	44008					; 0000abe8H
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 454
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN17@run_dlgPro:
; Line 457
	push	0
	push	44038					; 0000ac06H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 458
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN16@run_dlgPro:
; Line 461
	push	0
	push	44039					; 0000ac07H
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 462
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN15@run_dlgPro:
; Line 466
	push	0
	push	0
	push	240					; 000000f0H
	push	6102					; 000017d6H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	cmp	eax, 1
	jne	SHORT $LN90@run_dlgPro
	mov	DWORD PTR tv800[ebp], 1
	jmp	SHORT $LN91@run_dlgPro
$LN90@run_dlgPro:
	mov	DWORD PTR tv800[ebp], 0
$LN91@run_dlgPro:
	mov	cl, BYTE PTR tv800[ebp]
	mov	BYTE PTR _isChecked$20[ebp], cl
; Line 467
	movzx	edx, BYTE PTR _isChecked$20[ebp]
	test	edx, edx
	je	SHORT $LN92@run_dlgPro
	mov	DWORD PTR tv805[ebp], 1
	jmp	SHORT $LN93@run_dlgPro
$LN92@run_dlgPro:
	mov	DWORD PTR tv805[ebp], 0
$LN93@run_dlgPro:
	mov	eax, DWORD PTR tv805[ebp]
	push	eax
	push	0
	push	2094					; 0000082eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 469
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN14@run_dlgPro:
; Line 472
	push	0
	push	44002					; 0000abe2H
	push	273					; 00000111H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 473
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN13@run_dlgPro:
; Line 476
	push	0
	push	44003					; 0000abe3H
	push	273					; 00000111H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 477
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN12@run_dlgPro:
; Line 480
	push	0
	push	44004					; 0000abe4H
	push	273					; 00000111H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 481
	mov	eax, 1
	jmp	$LN46@run_dlgPro
$LN11@run_dlgPro:
; Line 484
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR tv847[ebp], ecx
	cmp	DWORD PTR tv847[ebp], 1
	je	SHORT $LN8@run_dlgPro
	jmp	$LN44@run_dlgPro
$LN8@run_dlgPro:
; Line 488
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR tv851[ebp], eax
	cmp	DWORD PTR tv851[ebp], 6124		; 000017ecH
	je	SHORT $LN5@run_dlgPro
	jmp	$LN44@run_dlgPro
$LN5@run_dlgPro:
; Line 492
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ ; NppParameters::getLocalizationSwitcher
	mov	DWORD PTR _localizationSwitcher$11[ebp], eax
; Line 493
	push	0
	push	0
	push	327					; 00000147H
	push	6124					; 000017ecH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	mov	DWORD PTR _index$7[ebp], eax
; Line 495
	lea	eax, DWORD PTR _langName$33[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$7[ebp]
	push	ecx
	push	328					; 00000148H
	push	6124					; 000017ecH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 496
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR _langName$33[ebp+edx]
	test	eax, eax
	je	SHORT $LN4@run_dlgPro
; Line 500
	push	OFFSET $SG144198
	mov	ecx, DWORD PTR _localizationSwitcher$11[ebp]
	call	?switchToLang@LocalizationSwitcher@@QBE_NPA_W@Z ; LocalizationSwitcher::switchToLang
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@run_dlgPro
; Line 502
	push	0
	push	0
	push	1049					; 00000419H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN3@run_dlgPro:
; Line 505
	lea	ecx, DWORD PTR _langName$33[ebp]
	push	ecx
	mov	ecx, DWORD PTR _localizationSwitcher$11[ebp]
	call	?switchToLang@LocalizationSwitcher@@QBE_NPA_W@Z ; LocalizationSwitcher::switchToLang
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@run_dlgPro
; Line 507
	push	0
	push	0
	push	1049					; 00000419H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 508
	push	1
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
$LN4@run_dlgPro:
; Line 512
	mov	eax, 1
	jmp	SHORT $LN46@run_dlgPro
$LN44@run_dlgPro:
; Line 521
	xor	eax, eax
$LN46@run_dlgPro:
; Line 522
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN104@run_dlgPro:
	DD	$LN15@run_dlgPro
	DD	$LN14@run_dlgPro
	DD	$LN13@run_dlgPro
	DD	$LN12@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN21@run_dlgPro
	DD	$LN20@run_dlgPro
	DD	$LN18@run_dlgPro
	DD	$LN19@run_dlgPro
	DD	$LN28@run_dlgPro
	DD	$LN17@run_dlgPro
	DD	$LN16@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN24@run_dlgPro
	DD	$LN22@run_dlgPro
	DD	$LN23@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN27@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN11@run_dlgPro
	DD	$LN26@run_dlgPro
	DD	$LN25@run_dlgPro
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$0:
	lea	ecx, DWORD PTR _localizationInfo$28[ebp]
	jmp	??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$1:
	lea	ecx, DWORD PTR _lang$30[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$2:
	lea	ecx, DWORD PTR _fn$32[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$3:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$4:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$5:
	lea	ecx, DWORD PTR _fnW$31[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$6:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$7:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$8:
	lea	ecx, DWORD PTR $T29[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$?run_dlgProc@BarsDlg@@EAGHIIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-936]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run_dlgProc@BarsDlg@@EAGHIIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?run_dlgProc@BarsDlg@@EAGHIIJ@Z ENDP			; BarsDlg::run_dlgProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
_grandParent$1 = -644					; size = 4
_grandParent$2 = -640					; size = 4
_grandParent$3 = -636					; size = 4
_grandParent$4 = -632					; size = 4
_grandParent$5 = -628					; size = 4
tv480 = -624						; size = 4
tv733 = -620						; size = 4
tv753 = -616						; size = 4
tv701 = -612						; size = 4
_pNppParam$ = -608					; size = 4
tv655 = -604						; size = 4
tv261 = -600						; size = 4
tv614 = -596						; size = 4
tv695 = -592						; size = 4
tv829 = -588						; size = 4
tv625 = -584						; size = 4
tv823 = -580						; size = 4
tv67 = -576						; size = 4
tv817 = -572						; size = 4
tv797 = -568						; size = 4
_enableDlgTheme$6 = -564				; size = 4
_linkEnable$7 = -560					; size = 4
_dontUnderlineState$8 = -556				; size = 4
_dontUnderline$9 = -552					; size = 4
_cd$10 = -548						; size = 4
tv495 = -544						; size = 4
_cd$11 = -540						; size = 4
_isChecked$12 = -535					; size = 1
_isSilent$13 = -534					; size = 1
_isGo2End$14 = -533					; size = 1
_isGo2End$15 = -532					; size = 1
_isSilent$16 = -531					; size = 1
_isChecked$17 = -530					; size = 1
_isChecked$18 = -529					; size = 1
_nppGUI$ = -528						; size = 4
_sessionExt$19 = -524					; size = 520
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_Message$ = 12						; size = 4
_wParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?run_dlgProc@SettingsDlg@@EAGHIIJ@Z PROC		; SettingsDlg::run_dlgProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\preference\preferencedlg.cpp
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 644				; 00000284H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 807
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	mov	DWORD PTR _pNppParam$[ebp], eax
; Line 808
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ; NppParameters::getNppGUI
	mov	DWORD PTR _nppGUI$[ebp], eax
; Line 809
	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN58@run_dlgPro
	cmp	DWORD PTR tv67[ebp], 273		; 00000111H
	je	$LN45@run_dlgPro
	jmp	$LN59@run_dlgPro
$LN58@run_dlgPro:
; Line 813
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [ecx+28], 1
	jne	SHORT $LN57@run_dlgPro
; Line 815
	push	0
	push	1
	push	241					; 000000f1H
	push	6307					; 000018a3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	jmp	$LN56@run_dlgPro
$LN57@run_dlgPro:
; Line 817
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [ecx+28], 2
	jne	SHORT $LN55@run_dlgPro
; Line 819
	push	0
	push	1
	push	241					; 000000f1H
	push	6307					; 000018a3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 820
	push	0
	push	1
	push	241					; 000000f1H
	push	6313					; 000018a9H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	jmp	$LN56@run_dlgPro
$LN55@run_dlgPro:
; Line 822
	mov	eax, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [eax+28], 3
	jne	SHORT $LN53@run_dlgPro
; Line 824
	push	0
	push	1
	push	241					; 000000f1H
	push	6307					; 000018a3H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 825
	push	0
	push	1
	push	241					; 000000f1H
	push	6325					; 000018b5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
	jmp	$LN56@run_dlgPro
$LN53@run_dlgPro:
; Line 827
	mov	edx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [edx+28], 4
	jne	SHORT $LN51@run_dlgPro
; Line 829
	push	0
	push	1
	push	241					; 000000f1H
	push	6307					; 000018a3H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 830
	push	0
	push	1
	push	241					; 000000f1H
	push	6313					; 000018a9H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 831
	push	0
	push	1
	push	241					; 000000f1H
	push	6325					; 000018b5H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 833
	jmp	SHORT $LN56@run_dlgPro
$LN51@run_dlgPro:
; Line 835
	push	0
	push	6313					; 000018a9H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 836
	push	0
	push	6325					; 000018b5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
$LN56@run_dlgPro:
; Line 839
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+57]
	push	edx
	push	241					; 000000f1H
	push	6308					; 000018a4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 840
	push	0
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	push	eax
	push	241					; 000000f1H
	push	6334					; 000018beH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 841
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+572]
	push	ecx
	push	241					; 000000f1H
	push	6323					; 000018b3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 842
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+73]
	push	edx
	push	241					; 000000f1H
	push	6335					; 000018bfH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 844
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+592]
	test	eax, eax
	je	SHORT $LN63@run_dlgPro
	mov	DWORD PTR tv261[ebp], 5
	jmp	SHORT $LN64@run_dlgPro
$LN63@run_dlgPro:
	mov	DWORD PTR tv261[ebp], 0
$LN64@run_dlgPro:
	mov	ecx, DWORD PTR tv261[ebp]
	push	ecx
	push	6323					; 000018b3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 846
	mov	DWORD PTR _linkEnable$7[ebp], 0
; Line 847
	mov	DWORD PTR _dontUnderline$9[ebp], 0
; Line 848
	mov	DWORD PTR _dontUnderlineState$8[ebp], 0
; Line 849
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [ecx+76], 1
	jne	SHORT $LN49@run_dlgPro
; Line 851
	mov	DWORD PTR _linkEnable$7[ebp], 1
; Line 852
	mov	DWORD PTR _dontUnderline$9[ebp], 1
; Line 853
	mov	DWORD PTR _dontUnderlineState$8[ebp], 1
	jmp	SHORT $LN48@run_dlgPro
$LN49@run_dlgPro:
; Line 856
	mov	edx, DWORD PTR _nppGUI$[ebp]
	cmp	DWORD PTR [edx+76], 2
	jne	SHORT $LN48@run_dlgPro
; Line 858
	mov	DWORD PTR _linkEnable$7[ebp], 1
; Line 859
	mov	DWORD PTR _dontUnderline$9[ebp], 0
; Line 860
	mov	DWORD PTR _dontUnderlineState$8[ebp], 1
$LN48@run_dlgPro:
; Line 863
	push	0
	mov	eax, DWORD PTR _linkEnable$7[ebp]
	push	eax
	push	241					; 000000f1H
	push	6319					; 000018afH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 864
	push	0
	mov	eax, DWORD PTR _dontUnderline$9[ebp]
	push	eax
	push	241					; 000000f1H
	push	6320					; 000018b0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 865
	mov	eax, DWORD PTR _dontUnderlineState$8[ebp]
	push	eax
	push	6320					; 000018b0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 867
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 544				; 00000220H
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	push	eax
	push	0
	push	12					; 0000000cH
	push	6321					; 000018b1H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 869
	push	0
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	push	eax
	push	241					; 000000f1H
	push	6114					; 000017e2H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 870
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+62]
	push	ecx
	push	241					; 000000f1H
	push	6115					; 000017e3H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 871
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+69]
	push	edx
	push	241					; 000000f1H
	push	6117					; 000017e5H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 872
	push	0
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+63]
	push	eax
	push	241					; 000000f1H
	push	6326					; 000018b6H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 873
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	push	ecx
	push	241					; 000000f1H
	push	6332					; 000018bcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 874
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	push	edx
	push	241					; 000000f1H
	push	6327					; 000018b7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 875
	push	0
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+67]
	push	eax
	push	241					; 000000f1H
	push	6328					; 000018b8H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 876
	push	0
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	push	ecx
	push	241					; 000000f1H
	push	6330					; 000018baH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 878
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+66]
	push	edx
	push	6328					; 000018b8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 879
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	push	eax
	push	6330					; 000018baH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 880
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+63]
	push	ecx
	push	6332					; 000018bcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 882
	push	0
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+605]
	push	edx
	push	241					; 000000f1H
	push	6331					; 000018bbH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 884
	mov	ecx, DWORD PTR _pNppParam$[ebp]
	call	?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ; NppParameters::getEnableThemeDlgTexture
	mov	DWORD PTR _enableDlgTheme$6[ebp], eax
; Line 885
	cmp	DWORD PTR _enableDlgTheme$6[ebp], 0
	je	SHORT $LN46@run_dlgPro
; Line 886
	push	6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR _enableDlgTheme$6[ebp]
$LN46@run_dlgPro:
; Line 888
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN45@run_dlgPro:
; Line 893
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 768				; 00000300H
	jne	SHORT $LN44@run_dlgPro
; Line 895
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR tv480[ebp], ecx
	cmp	DWORD PTR tv480[ebp], 6321		; 000018b1H
	je	SHORT $LN41@run_dlgPro
	jmp	SHORT $LN44@run_dlgPro
$LN41@run_dlgPro:
; Line 900
	lea	edx, DWORD PTR _sessionExt$19[ebp]
	push	edx
	push	260					; 00000104H
	push	13					; 0000000dH
	push	6321					; 000018b1H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 901
	lea	edx, DWORD PTR _sessionExt$19[ebp]
	push	edx
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	add	ecx, 544				; 00000220H
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 902
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN44@run_dlgPro:
; Line 907
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv495[ebp], eax
	mov	ecx, DWORD PTR tv495[ebp]
	sub	ecx, 6114				; 000017e2H
	mov	DWORD PTR tv495[ebp], ecx
	cmp	DWORD PTR tv495[ebp], 221		; 000000ddH
	ja	$LN59@run_dlgPro
	mov	edx, DWORD PTR tv495[ebp]
	movzx	eax, BYTE PTR $LN87@run_dlgPro[edx]
	jmp	DWORD PTR $LN88@run_dlgPro[eax*4]
$LN38@run_dlgPro:
; Line 911
	push	6307					; 000018a3H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isChecked$17[ebp], al
; Line 912
	movzx	ecx, BYTE PTR _isChecked$17[ebp]
	push	ecx
	push	6313					; 000018a9H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 913
	movzx	ecx, BYTE PTR _isChecked$17[ebp]
	push	ecx
	push	6325					; 000018b5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 915
	push	6313					; 000018a9H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isSilent$13[ebp], al
; Line 916
	push	6325					; 000018b5H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isGo2End$14[ebp], al
; Line 920
	movzx	ecx, BYTE PTR _isChecked$17[ebp]
	test	ecx, ecx
	jne	SHORT $LN37@run_dlgPro
; Line 921
	mov	DWORD PTR _cd$11[ebp], 0
	jmp	SHORT $LN36@run_dlgPro
$LN37@run_dlgPro:
; Line 922
	movzx	edx, BYTE PTR _isSilent$13[ebp]
	test	edx, edx
	jne	SHORT $LN35@run_dlgPro
	movzx	eax, BYTE PTR _isGo2End$14[ebp]
	test	eax, eax
	jne	SHORT $LN35@run_dlgPro
; Line 923
	mov	DWORD PTR _cd$11[ebp], 1
	jmp	SHORT $LN36@run_dlgPro
$LN35@run_dlgPro:
; Line 924
	movzx	ecx, BYTE PTR _isSilent$13[ebp]
	test	ecx, ecx
	jne	SHORT $LN33@run_dlgPro
	movzx	edx, BYTE PTR _isGo2End$14[ebp]
	test	edx, edx
	je	SHORT $LN33@run_dlgPro
; Line 925
	mov	DWORD PTR _cd$11[ebp], 3
	jmp	SHORT $LN36@run_dlgPro
$LN33@run_dlgPro:
; Line 926
	movzx	eax, BYTE PTR _isSilent$13[ebp]
	test	eax, eax
	je	SHORT $LN31@run_dlgPro
	movzx	ecx, BYTE PTR _isGo2End$14[ebp]
	test	ecx, ecx
	jne	SHORT $LN31@run_dlgPro
; Line 927
	mov	DWORD PTR _cd$11[ebp], 2
; Line 928
	jmp	SHORT $LN36@run_dlgPro
$LN31@run_dlgPro:
; Line 929
	mov	DWORD PTR _cd$11[ebp], 4
$LN36@run_dlgPro:
; Line 931
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	eax, DWORD PTR _cd$11[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 933
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN29@run_dlgPro:
; Line 938
	push	6313					; 000018a9H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isSilent$16[ebp], al
; Line 939
	push	6325					; 000018b5H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isGo2End$15[ebp], al
; Line 943
	movzx	ecx, BYTE PTR _isSilent$16[ebp]
	test	ecx, ecx
	jne	SHORT $LN28@run_dlgPro
	movzx	edx, BYTE PTR _isGo2End$15[ebp]
	test	edx, edx
	jne	SHORT $LN28@run_dlgPro
; Line 944
	mov	DWORD PTR _cd$10[ebp], 1
	jmp	SHORT $LN27@run_dlgPro
$LN28@run_dlgPro:
; Line 945
	movzx	eax, BYTE PTR _isSilent$16[ebp]
	test	eax, eax
	jne	SHORT $LN26@run_dlgPro
	movzx	ecx, BYTE PTR _isGo2End$15[ebp]
	test	ecx, ecx
	je	SHORT $LN26@run_dlgPro
; Line 946
	mov	DWORD PTR _cd$10[ebp], 3
	jmp	SHORT $LN27@run_dlgPro
$LN26@run_dlgPro:
; Line 947
	movzx	edx, BYTE PTR _isSilent$16[ebp]
	test	edx, edx
	je	SHORT $LN24@run_dlgPro
	movzx	eax, BYTE PTR _isGo2End$15[ebp]
	test	eax, eax
	jne	SHORT $LN24@run_dlgPro
; Line 948
	mov	DWORD PTR _cd$10[ebp], 2
; Line 949
	jmp	SHORT $LN27@run_dlgPro
$LN24@run_dlgPro:
; Line 950
	mov	DWORD PTR _cd$10[ebp], 4
$LN27@run_dlgPro:
; Line 952
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR _cd$10[ebp]
	mov	DWORD PTR [ecx+28], edx
; Line 954
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN22@run_dlgPro:
; Line 958
	push	6319					; 000018afH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isChecked$18[ebp], al
; Line 959
	movzx	eax, BYTE PTR _isChecked$18[ebp]
	test	eax, eax
	jne	SHORT $LN21@run_dlgPro
; Line 960
	push	0
	push	0
	push	241					; 000000f1H
	push	6320					; 000018b0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__SendDlgItemMessageW@20
$LN21@run_dlgPro:
; Line 961
	movzx	eax, BYTE PTR _isChecked$18[ebp]
	push	eax
	push	6320					; 000018b0H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 963
	movzx	eax, BYTE PTR _isChecked$18[ebp]
	test	eax, eax
	je	SHORT $LN65@run_dlgPro
	mov	DWORD PTR tv614[ebp], 2
	jmp	SHORT $LN66@run_dlgPro
$LN65@run_dlgPro:
	mov	DWORD PTR tv614[ebp], 0
$LN66@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR tv614[ebp]
	mov	DWORD PTR [ecx+76], edx
; Line 965
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN20@run_dlgPro:
; Line 969
	push	6320					; 000018b0H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	BYTE PTR _isChecked$12[ebp], al
; Line 970
	movzx	eax, BYTE PTR _isChecked$12[ebp]
	test	eax, eax
	je	SHORT $LN67@run_dlgPro
	mov	DWORD PTR tv625[ebp], 1
	jmp	SHORT $LN68@run_dlgPro
$LN67@run_dlgPro:
	mov	DWORD PTR tv625[ebp], 2
$LN68@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	edx, DWORD PTR tv625[ebp]
	mov	DWORD PTR [ecx+76], edx
; Line 972
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN19@run_dlgPro:
; Line 975
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	BYTE PTR [ecx+572], al
; Line 976
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN18@run_dlgPro:
; Line 979
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	BYTE PTR [ecx+57], al
; Line 980
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN17@run_dlgPro:
; Line 983
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	BYTE PTR [ecx+60], al
; Line 984
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN16@run_dlgPro:
; Line 987
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+61]
	test	eax, eax
	jne	SHORT $LN69@run_dlgPro
	mov	DWORD PTR tv655[ebp], 1
	jmp	SHORT $LN70@run_dlgPro
$LN69@run_dlgPro:
	mov	DWORD PTR tv655[ebp], 0
$LN70@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv655[ebp]
	mov	BYTE PTR [ecx+61], dl
; Line 988
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	test	ecx, ecx
	je	SHORT $LN15@run_dlgPro
; Line 990
	push	1
	push	6117					; 000017e5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 992
	jmp	SHORT $LN14@run_dlgPro
$LN15@run_dlgPro:
; Line 994
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	BYTE PTR [ecx+69], 0
; Line 995
	push	0
	push	0
	push	241					; 000000f1H
	push	6117					; 000017e5H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SendDlgItemMessageW@20
; Line 996
	push	0
	push	6117					; 000017e5H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
$LN14@run_dlgPro:
; Line 998
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN13@run_dlgPro:
; Line 1003
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+62]
	test	ecx, ecx
	jne	SHORT $LN71@run_dlgPro
	mov	DWORD PTR tv695[ebp], 1
	jmp	SHORT $LN72@run_dlgPro
$LN71@run_dlgPro:
	mov	DWORD PTR tv695[ebp], 0
$LN72@run_dlgPro:
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	al, BYTE PTR tv695[ebp]
	mov	BYTE PTR [edx+62], al
; Line 1004
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN12@run_dlgPro:
; Line 1009
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+63]
	test	edx, edx
	jne	SHORT $LN73@run_dlgPro
	mov	DWORD PTR tv701[ebp], 1
	jmp	SHORT $LN74@run_dlgPro
$LN73@run_dlgPro:
	mov	DWORD PTR tv701[ebp], 0
$LN74@run_dlgPro:
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR tv701[ebp]
	mov	BYTE PTR [eax+63], cl
; Line 1010
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+63]
	test	eax, eax
	jne	SHORT $LN11@run_dlgPro
; Line 1012
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _grandParent$1[ebp], eax
; Line 1013
	push	0
	push	0
	push	1039					; 0000040fH
	mov	eax, DWORD PTR _grandParent$1[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN11@run_dlgPro:
; Line 1015
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+63]
	push	edx
	push	6332					; 000018bcH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1016
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN10@run_dlgPro:
; Line 1021
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+64]
	test	eax, eax
	jne	SHORT $LN75@run_dlgPro
	mov	DWORD PTR tv733[ebp], 1
	jmp	SHORT $LN76@run_dlgPro
$LN75@run_dlgPro:
	mov	DWORD PTR tv733[ebp], 0
$LN76@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv733[ebp]
	mov	BYTE PTR [ecx+64], dl
; Line 1022
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+64]
	test	ecx, ecx
	jne	SHORT $LN9@run_dlgPro
; Line 1024
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _grandParent$4[ebp], eax
; Line 1025
	push	0
	push	0
	push	1039					; 0000040fH
	mov	ecx, DWORD PTR _grandParent$4[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN9@run_dlgPro:
; Line 1027
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN8@run_dlgPro:
; Line 1032
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	test	eax, eax
	jne	SHORT $LN77@run_dlgPro
	mov	DWORD PTR tv753[ebp], 1
	jmp	SHORT $LN78@run_dlgPro
$LN77@run_dlgPro:
	mov	DWORD PTR tv753[ebp], 0
$LN78@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv753[ebp]
	mov	BYTE PTR [ecx+66], dl
; Line 1033
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	test	ecx, ecx
	jne	SHORT $LN7@run_dlgPro
; Line 1035
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _grandParent$2[ebp], eax
; Line 1036
	push	0
	push	0
	push	1044					; 00000414H
	mov	ecx, DWORD PTR _grandParent$2[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN7@run_dlgPro:
; Line 1038
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	push	eax
	push	6328					; 000018b8H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1039
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+66]
	push	ecx
	push	6330					; 000018baH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
; Line 1040
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN6@run_dlgPro:
; Line 1045
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+67]
	test	edx, edx
	jne	SHORT $LN79@run_dlgPro
	mov	DWORD PTR tv797[ebp], 1
	jmp	SHORT $LN80@run_dlgPro
$LN79@run_dlgPro:
	mov	DWORD PTR tv797[ebp], 0
$LN80@run_dlgPro:
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR tv797[ebp]
	mov	BYTE PTR [eax+67], cl
; Line 1046
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+67]
	test	eax, eax
	jne	SHORT $LN5@run_dlgPro
; Line 1048
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _grandParent$5[ebp], eax
; Line 1049
	push	0
	push	0
	push	1045					; 00000415H
	mov	eax, DWORD PTR _grandParent$5[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN5@run_dlgPro:
; Line 1051
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN4@run_dlgPro:
; Line 1056
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	movzx	edx, BYTE PTR [ecx+68]
	test	edx, edx
	jne	SHORT $LN81@run_dlgPro
	mov	DWORD PTR tv817[ebp], 1
	jmp	SHORT $LN82@run_dlgPro
$LN81@run_dlgPro:
	mov	DWORD PTR tv817[ebp], 0
$LN82@run_dlgPro:
	mov	eax, DWORD PTR _nppGUI$[ebp]
	mov	cl, BYTE PTR tv817[ebp]
	mov	BYTE PTR [eax+68], cl
; Line 1057
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN3@run_dlgPro:
; Line 1062
	mov	edx, DWORD PTR _nppGUI$[ebp]
	movzx	eax, BYTE PTR [edx+69]
	test	eax, eax
	jne	SHORT $LN83@run_dlgPro
	mov	DWORD PTR tv823[ebp], 1
	jmp	SHORT $LN84@run_dlgPro
$LN83@run_dlgPro:
	mov	DWORD PTR tv823[ebp], 0
$LN84@run_dlgPro:
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	dl, BYTE PTR tv823[ebp]
	mov	BYTE PTR [ecx+69], dl
; Line 1063
	mov	eax, 1
	jmp	$LN61@run_dlgPro
$LN2@run_dlgPro:
; Line 1068
	mov	eax, DWORD PTR _nppGUI$[ebp]
	movzx	ecx, BYTE PTR [eax+605]
	test	ecx, ecx
	jne	SHORT $LN85@run_dlgPro
	mov	DWORD PTR tv829[ebp], 1
	jmp	SHORT $LN86@run_dlgPro
$LN85@run_dlgPro:
	mov	DWORD PTR tv829[ebp], 0
$LN86@run_dlgPro:
	mov	edx, DWORD PTR _nppGUI$[ebp]
	mov	al, BYTE PTR tv829[ebp]
	mov	BYTE PTR [edx+605], al
; Line 1069
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	mov	DWORD PTR _grandParent$3[ebp], eax
; Line 1070
	push	0
	push	0
	push	1047					; 00000417H
	mov	eax, DWORD PTR _grandParent$3[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1071
	mov	eax, 1
	jmp	SHORT $LN61@run_dlgPro
$LN1@run_dlgPro:
; Line 1076
	push	6335					; 000018bfH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCheckedOrNot@StaticDialog@@QBE_NH@Z	; StaticDialog::isCheckedOrNot
	mov	ecx, DWORD PTR _nppGUI$[ebp]
	mov	BYTE PTR [ecx+73], al
; Line 1077
	mov	eax, 1
	jmp	SHORT $LN61@run_dlgPro
$LN59@run_dlgPro:
; Line 1082
	xor	eax, eax
$LN61@run_dlgPro:
; Line 1083
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN88@run_dlgPro:
	DD	$LN16@run_dlgPro
	DD	$LN13@run_dlgPro
	DD	$LN3@run_dlgPro
	DD	$LN38@run_dlgPro
	DD	$LN18@run_dlgPro
	DD	$LN29@run_dlgPro
	DD	$LN22@run_dlgPro
	DD	$LN20@run_dlgPro
	DD	$LN19@run_dlgPro
	DD	$LN12@run_dlgPro
	DD	$LN8@run_dlgPro
	DD	$LN6@run_dlgPro
	DD	$LN4@run_dlgPro
	DD	$LN2@run_dlgPro
	DD	$LN10@run_dlgPro
	DD	$LN17@run_dlgPro
	DD	$LN1@run_dlgPro
	DD	$LN59@run_dlgPro
$LN87@run_dlgPro:
	DB	0
	DB	1
	DB	17					; 00000011H
	DB	2
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	3
	DB	4
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	5
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	6
	DB	7
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	8
	DB	17					; 00000011H
	DB	5
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	17					; 00000011H
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	17					; 00000011H
	DB	15					; 0000000fH
	DB	16					; 00000010H
?run_dlgProc@SettingsDlg@@EAGHIIJ@Z ENDP		; SettingsDlg::run_dlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z PROC ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2488
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2489
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]
; Line 2490
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z ENDP ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@IBEXXZ PROC ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 1760
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@IBEXXZ ENDP ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z PROC ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1175
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at
; Line 1176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@IBEXXZ ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::_Xran
$LN1@at:
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
$LN3@at:
; Line 1178
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z ENDP ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::at
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ PROC ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ ENDP ; std::vector<TiXmlDocument *,std::allocator<TiXmlDocument *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ PROC ; NppParameters::getUserPath, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1496
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1497
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 117468				; 0001cadcH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1498
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@getUserPat
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@getUserPat:
	ret	0
__ehhandler$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ENDP ; NppParameters::getUserPath
; Function compile flags: /Odtp
;	COMDAT ?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ PROC ; NppParameters::getLocalizationSwitcher, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1461
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1462
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 117124				; 0001c984H
; Line 1463
	mov	esp, ebp
	pop	ebp
	ret	0
?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ ENDP ; NppParameters::getLocalizationSwitcher
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ PROC ; NppParameters::getEnableThemeDlgTexture, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1436
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+116988]
	mov	esp, ebp
	pop	ebp
	ret	0
?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ ENDP ; NppParameters::getEnableThemeDlgTexture
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getNativeLangA@NppParameters@@QBEPAVTiXmlDocumentA@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getNativeLangA@NppParameters@@QBEPAVTiXmlDocumentA@@XZ PROC ; NppParameters::getNativeLangA, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1356
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+256]
	mov	esp, ebp
	pop	ebp
	ret	0
?getNativeLangA@NppParameters@@QBEPAVTiXmlDocumentA@@XZ ENDP ; NppParameters::getNativeLangA
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ PROC ; NppParameters::getExternalLexerDoc, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1305
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 264				; 00000108H
	mov	esp, ebp
	pop	ebp
	ret	0
?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ ENDP ; NppParameters::getExternalLexerDoc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getFontList@NppParameters@@QBEABV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getFontList@NppParameters@@QBEABV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@XZ PROC ; NppParameters::getFontList, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1279
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116932				; 0001c8c4H
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontList@NppParameters@@QBEABV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@XZ ENDP ; NppParameters::getFontList
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ PROC ; NppParameters::getSVP, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1241
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1980				; 000007bcH
; Line 1242
	mov	esp, ebp
	pop	ebp
	ret	0
?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ ENDP ; NppParameters::getSVP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getRecentFileCustomLength@NppParameters@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getRecentFileCustomLength@NppParameters@@QBEHXZ PROC	; NppParameters::getRecentFileCustomLength, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1237
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2484]
	mov	esp, ebp
	pop	ebp
	ret	0
?getRecentFileCustomLength@NppParameters@@QBEHXZ ENDP	; NppParameters::getRecentFileCustomLength
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?setRecentFileCustomLength@NppParameters@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_len$ = 8						; size = 4
?setRecentFileCustomLength@NppParameters@@QAEXH@Z PROC	; NppParameters::setRecentFileCustomLength, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1233
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1234
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+2484], ecx
; Line 1235
	mov	esp, ebp
	pop	ebp
	ret	4
?setRecentFileCustomLength@NppParameters@@QAEXH@Z ENDP	; NppParameters::setRecentFileCustomLength
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?putRecentFileInSubMenu@NppParameters@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?putRecentFileInSubMenu@NppParameters@@QBE_NXZ PROC	; NppParameters::putRecentFileInSubMenu, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1231
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2480]
	mov	esp, ebp
	pop	ebp
	ret	0
?putRecentFileInSubMenu@NppParameters@@QBE_NXZ ENDP	; NppParameters::putRecentFileInSubMenu
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?setPutRecentFileInSubMenu@NppParameters@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_doSubmenu$ = 8						; size = 1
?setPutRecentFileInSubMenu@NppParameters@@QAEX_N@Z PROC	; NppParameters::setPutRecentFileInSubMenu, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1228
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _doSubmenu$[ebp]
	mov	BYTE PTR [eax+2480], cl
; Line 1229
	mov	esp, ebp
	pop	ebp
	ret	4
?setPutRecentFileInSubMenu@NppParameters@@QAEX_N@Z ENDP	; NppParameters::setPutRecentFileInSubMenu
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getNbMaxRecentFile@NppParameters@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getNbMaxRecentFile@NppParameters@@QBEHXZ PROC		; NppParameters::getNbMaxRecentFile, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1225
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2476]
	mov	esp, ebp
	pop	ebp
	ret	0
?getNbMaxRecentFile@NppParameters@@QBEHXZ ENDP		; NppParameters::getNbMaxRecentFile
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?setNbMaxRecentFile@NppParameters@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nb$ = 8						; size = 4
?setNbMaxRecentFile@NppParameters@@QAEXH@Z PROC		; NppParameters::setNbMaxRecentFile, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1221
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1222
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nb$[ebp]
	mov	DWORD PTR [eax+2476], ecx
; Line 1223
	mov	esp, ebp
	pop	ebp
	ret	4
?setNbMaxRecentFile@NppParameters@@QAEXH@Z ENDP		; NppParameters::setNbMaxRecentFile
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getNbLang@NppParameters@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getNbLang@NppParameters@@QBEHXZ PROC			; NppParameters::getNbLang, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1193
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2348]
	mov	esp, ebp
	pop	ebp
	ret	0
?getNbLang@NppParameters@@QBEHXZ ENDP			; NppParameters::getNbLang
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z PROC	; NppParameters::getLangFromIndex, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1188
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1189
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+2348]
	jl	SHORT $LN1@getLangFro
	xor	eax, eax
	jmp	SHORT $LN2@getLangFro
$LN1@getLangFro:
; Line 1190
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+2028]
$LN2@getLangFro:
; Line 1191
	mov	esp, ebp
	pop	ebp
	ret	4
?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z ENDP	; NppParameters::getLangFromIndex
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ PROC		; NppParameters::getNppGUI, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1168
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1169
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 280				; 00000118H
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	0
?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ ENDP		; NppParameters::getNppGUI
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getInstance@NppParameters@@SAPAV1@XZ
_TEXT	SEGMENT
?getInstance@NppParameters@@SAPAV1@XZ PROC		; NppParameters::getInstance, COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1155
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?_pSelf@NppParameters@@0PAV1@A ; NppParameters::_pSelf
	pop	ebp
	ret	0
?getInstance@NppParameters@@SAPAV1@XZ ENDP		; NppParameters::getInstance
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><wchar_t const (&)[1],wchar_t const (&)[1],void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 144
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z ; std::forward<wchar_t const (&)[1]>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z ; std::forward<wchar_t const (&)[1]>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><wchar_t const (&)[1],wchar_t const (&)[1],void>
; Function compile flags: /Odtp
;	COMDAT ??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@1@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@1@I@Z PROC ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DLI@PMFFPGKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	imul	eax, DWORD PTR __Pos$[ebp], 56
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@1@I@Z ENDP ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 56					; 00000038H
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; LocalizationSwitcher::getFileName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1079
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1080
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1081
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@getFileNam
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@getFileNam:
	ret	0
__ehhandler$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; LocalizationSwitcher::getFileName
; Function compile flags: /Odtp
;	COMDAT ?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 4
?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z PROC ; LocalizationSwitcher::getElementFromIndex, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1068
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1069
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN1@getElement
; Line 1070
	push	OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
	push	OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z ; std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><wchar_t const (&)[1],wchar_t const (&)[1],void>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@getElement
$LN1@getElement:
; Line 1071
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@1@I@Z ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator[]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@getElement:
; Line 1072
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@getElement
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ
$LN5@getElement:
	ret	0
__ehhandler$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z ENDP ; LocalizationSwitcher::getElementFromIndex
; Function compile flags: /Odtp
;	COMDAT ?size@LocalizationSwitcher@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@LocalizationSwitcher@@QBEIXZ PROC			; LocalizationSwitcher::size, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1064
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1065
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::allocator<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::size
; Line 1066
	mov	esp, ebp
	pop	ebp
	ret	0
?size@LocalizationSwitcher@@QBEIXZ ENDP			; LocalizationSwitcher::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1183
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1185
	push	1185					; 000004a1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1186
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1186					; 000004a2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1186					; 000004a2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1193
	imul	eax, DWORD PTR __Pos$[ebp], 28
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1194
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getTabInfo@Lang@@QBEHXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?getTabInfo@Lang@@QBEHXZ PROC				; Lang::getTabInfo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 891
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 892
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], -1
	jne	SHORT $LN1@getTabInfo
	or	eax, -1
	jmp	SHORT $LN2@getTabInfo
$LN1@getTabInfo:
; Line 893
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+128]
	test	edx, edx
	je	SHORT $LN4@getTabInfo
	mov	DWORD PTR tv69[ebp], 128		; 00000080H
	jmp	SHORT $LN5@getTabInfo
$LN4@getTabInfo:
	mov	DWORD PTR tv69[ebp], 0
$LN5@getTabInfo:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv69[ebp]
	or	ecx, DWORD PTR [eax+132]
	mov	eax, ecx
$LN2@getTabInfo:
; Line 894
	mov	esp, ebp
	pop	ebp
	ret	0
?getTabInfo@Lang@@QBEHXZ ENDP				; Lang::getTabInfo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getLangName@Lang@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getLangName@Lang@@QBEPB_WXZ PROC			; Lang::getLangName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 889
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	mov	esp, ebp
	pop	ebp
	ret	0
?getLangName@Lang@@QBEPB_WXZ ENDP			; Lang::getLangName
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isSnapshotMode@NppGUI@@QBE_NXZ
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
?isSnapshotMode@NppGUI@@QBE_NXZ PROC			; NppGUI::isSnapshotMode, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 780
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1685]
	test	ecx, ecx
	je	SHORT $LN3@isSnapshot
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+58]
	test	eax, eax
	je	SHORT $LN3@isSnapshot
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+59]
	test	edx, edx
	jne	SHORT $LN3@isSnapshot
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@isSnapshot
$LN3@isSnapshot:
	mov	DWORD PTR tv73[ebp], 0
$LN4@isSnapshot:
	mov	al, BYTE PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?isSnapshotMode@NppGUI@@QBE_NXZ ENDP			; NppGUI::isSnapshotMode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 1760
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEII@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEPAULangMenuItem@@I@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEPAULangMenuItem@@PAU2@00@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Umove<LangMenuItem *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	imul	edx, DWORD PTR __Count$[ebp], 36
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	imul	ecx, DWORD PTR __Size$[ebp], 36
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1608
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEII@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEII@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<LangMenuItem> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv182 = -36						; size = 4
tv181 = -32						; size = 4
$T2 = -28						; size = 4
tv188 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1438
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1441
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@erase
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN1@erase
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __Where$[ebp+8]
	ja	SHORT $LN2@erase
$LN1@erase:
; Line 1442
	push	1442					; 000005a2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@erase:
; Line 1443
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	add	ecx, 36					; 00000024H
	push	ecx
	call	??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00@Z ; std::_Move<LangMenuItem *,LangMenuItem *>
	add	esp, 12					; 0000000cH
; Line 1444
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 36					; 00000024H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Destroy
; Line 1445
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range
; Line 1446
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1447
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv188[ebp], eax
	mov	ecx, DWORD PTR tv188[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Make_iter
	mov	DWORD PTR tv182[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	or	eax, 1
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1448
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$1:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$2:
	mov	eax, DWORD PTR $T3[ebp]
	and	eax, 1
	je	$LN8@erase
	and	DWORD PTR $T3[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
$LN8@erase:
	ret	0
__ehhandler$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::erase
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXABULangMenuItem@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXABULangMenuItem@@@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z ; std::addressof<LangMenuItem const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z ; std::addressof<LangMenuItem const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range
; Line 1251
	imul	eax, DWORD PTR __Idx$1[ebp], 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	??$construct@ULangMenuItem@@AAU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem &>
; Line 1252
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range
; Line 1260
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	??$construct@ULangMenuItem@@ABU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem const &>
; Line 1261
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXABULangMenuItem@@@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1LC@JLHHOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAM?$AAe?$AAn?$AAu?$AAI?$AAt?$AAe?$AAm?$AA?0@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	imul	eax, DWORD PTR __Pos$[ebp], 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?at@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1175
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at
; Line 1176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Xran
$LN1@at:
; Line 1177
	imul	eax, DWORD PTR __Pos$[ebp], 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
$LN3@at:
; Line 1178
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::at
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1044
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1045
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1046
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@Make_iter
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
$LN5@Make_iter:
	ret	0
__ehhandler$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<LangMenuItem> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::begin
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEX$$QAULangMenuItem@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEX$$QAULangMenuItem@@@Z PROC ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 866
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z ; std::addressof<LangMenuItem>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 868
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z ; std::addressof<LangMenuItem>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 869
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 870
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reserve
$LN3@push_back:
; Line 871
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range
; Line 873
	imul	eax, DWORD PTR __Idx$1[ebp], 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	call	??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
; Line 874
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 876
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 878
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 879
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Reserve
$LN1@push_back:
; Line 880
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::_Orphan_range
; Line 882
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z ; std::forward<LangMenuItem>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
	mov	ecx, eax
	call	??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::construct<LangMenuItem,LangMenuItem>
; Line 883
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEX$$QAULangMenuItem@@@Z ENDP ; std::vector<LangMenuItem,std::allocator<LangMenuItem> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::_Wrap_alloc<std::allocator<LangMenuItem> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<LangMenuItem,std::allocator<LangMenuItem> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAIABV?$allocator@ULangMenuItem@@@2@@Z ; std::allocator_traits<std::allocator<LangMenuItem> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@I@Z ; std::allocator<LangMenuItem>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEPAULangMenuItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEPAULangMenuItem@@I@Z PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@ULangMenuItem@@@std@@QAEPAULangMenuItem@@I@Z ; std::allocator<LangMenuItem>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEPAULangMenuItem@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::_Wrap_alloc<std::allocator<LangMenuItem> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@ULangMenuItem@@@std@@QAE@XZ ; std::allocator<LangMenuItem>::allocator<LangMenuItem>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<LangMenuItem> >::_Wrap_alloc<std::allocator<LangMenuItem> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAIABV?$allocator@ULangMenuItem@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAIABV?$allocator@ULangMenuItem@@@2@@Z PROC ; std::allocator_traits<std::allocator<LangMenuItem> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@ULangMenuItem@@@std@@QBEIXZ ; std::allocator<LangMenuItem>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAIABV?$allocator@ULangMenuItem@@@2@@Z ENDP ; std::allocator_traits<std::allocator<LangMenuItem> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@ULangMenuItem@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@ULangMenuItem@@@std@@QBEIXZ PROC	; std::allocator<LangMenuItem>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 119304647				; 071c71c7H
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@ULangMenuItem@@@std@@QBEIXZ ENDP	; std::allocator<LangMenuItem>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z PROC ; std::allocator<LangMenuItem>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	36					; 00000024H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0LangMenuItem@@QAE@ABU0@@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 594
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z ENDP ; std::allocator<LangMenuItem>::construct
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@ULangMenuItem@@@std@@QAEPAULangMenuItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@ULangMenuItem@@@std@@QAEPAULangMenuItem@@I@Z PROC ; std::allocator<LangMenuItem>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@ULangMenuItem@@@std@@YAPAULangMenuItem@@IPAU1@@Z ; std::_Allocate<LangMenuItem>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@ULangMenuItem@@@std@@QAEPAULangMenuItem@@I@Z ENDP ; std::allocator<LangMenuItem>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@I@Z PROC ; std::allocator<LangMenuItem>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@I@Z ENDP ; std::allocator<LangMenuItem>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@ULangMenuItem@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@ULangMenuItem@@@std@@QAE@XZ PROC		; std::allocator<LangMenuItem>::allocator<LangMenuItem>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@ULangMenuItem@@@std@@QAE@XZ ENDP		; std::allocator<LangMenuItem>::allocator<LangMenuItem>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getNewDocDefaultSettings@NppGUI@@QBEABUNewDocDefaultSettings@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getNewDocDefaultSettings@NppGUI@@QBEABUNewDocDefaultSettings@@XZ PROC ; NppGUI::getNewDocDefaultSettings, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 739
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	mov	esp, ebp
	pop	ebp
	ret	0
?getNewDocDefaultSettings@NppGUI@@QBEABUNewDocDefaultSettings@@XZ ENDP ; NppGUI::getNewDocDefaultSettings
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEII@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEPAU?$pair@DD@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAU?$pair@DD@std@@@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEPAU?$pair@DD@1@PAU21@00@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Umove<std::pair<char,char> *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBE_NPBU?$pair@DD@2@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBE_NPBU?$pair@DD@2@@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBE_NPBU?$pair@DD@2@@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::pair<char,char> > > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Destroy
; Line 1510
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 1511
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NE@NHMFFEGJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAh?$AAa@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 1
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 1
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 1
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z PROC ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 866
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z ; std::addressof<std::pair<char,char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBE_NPBU?$pair@DD@2@@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 868
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z ; std::addressof<std::pair<char,char> >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 1
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 869
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 870
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reserve
$LN3@push_back:
; Line 871
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Orphan_range
; Line 873
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	push	eax
	call	??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z ; std::forward<std::pair<char,char> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
; Line 874
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 876
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 878
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN1@push_back
; Line 879
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Reserve
$LN1@push_back:
; Line 880
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::_Orphan_range
; Line 882
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z ; std::forward<std::pair<char,char> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
	mov	ecx, eax
	call	??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::construct<std::pair<char,char>,std::pair<char,char> >
; Line 883
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z ENDP ; std::vector<std::pair<char,char>,std::allocator<std::pair<char,char> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::_Wrap_alloc<std::allocator<std::pair<char,char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::pair<char,char>,std::allocator<std::pair<char,char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAIABV?$allocator@U?$pair@DD@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<char,char> > >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@2@I@Z ; std::allocator<std::pair<char,char> >::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEPAU?$pair@DD@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEPAU?$pair@DD@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$pair@DD@std@@@std@@QAEPAU?$pair@DD@2@I@Z ; std::allocator<std::pair<char,char> >::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEPAU?$pair@DD@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::_Wrap_alloc<std::allocator<std::pair<char,char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$pair@DD@std@@@std@@QAE@XZ ; std::allocator<std::pair<char,char> >::allocator<std::pair<char,char> >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::pair<char,char> > >::_Wrap_alloc<std::allocator<std::pair<char,char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAIABV?$allocator@U?$pair@DD@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAIABV?$allocator@U?$pair@DD@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::pair<char,char> > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$pair@DD@std@@@std@@QBEIXZ ; std::allocator<std::pair<char,char> >::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAIABV?$allocator@U?$pair@DD@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<char,char> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@U?$pair@DD@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$pair@DD@std@@@std@@QBEIXZ PROC	; std::allocator<std::pair<char,char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 2147483647				; 7fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$pair@DD@std@@@std@@QBEIXZ ENDP	; std::allocator<std::pair<char,char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U?$pair@DD@std@@@std@@QAEPAU?$pair@DD@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$pair@DD@std@@@std@@QAEPAU?$pair@DD@2@I@Z PROC ; std::allocator<std::pair<char,char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@IPAU10@@Z ; std::_Allocate<std::pair<char,char> >
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$pair@DD@std@@@std@@QAEPAU?$pair@DD@2@I@Z ENDP ; std::allocator<std::pair<char,char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@2@I@Z PROC ; std::allocator<std::pair<char,char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@2@I@Z ENDP ; std::allocator<std::pair<char,char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U?$pair@DD@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@DD@std@@@std@@QAE@XZ PROC	; std::allocator<std::pair<char,char> >::allocator<std::pair<char,char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@DD@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<char,char> >::allocator<std::pair<char,char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GLangMenuItem@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLangMenuItem@@QAEPAXI@Z PROC			; LangMenuItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LangMenuItem@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLangMenuItem@@QAEPAXI@Z ENDP			; LangMenuItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4LangMenuItem@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4LangMenuItem@@QAEAAU0@ABU0@@Z PROC			; LangMenuItem::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4LangMenuItem@@QAEAAU0@ABU0@@Z ENDP			; LangMenuItem::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0LangMenuItem@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0LangMenuItem@@QAE@ABU0@@Z PROC			; LangMenuItem::LangMenuItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0LangMenuItem@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0LangMenuItem@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0LangMenuItem@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0LangMenuItem@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0LangMenuItem@@QAE@ABU0@@Z ENDP			; LangMenuItem::LangMenuItem
; Function compile flags: /Odtp
;	COMDAT ??1LangMenuItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1LangMenuItem@@QAE@XZ PROC				; LangMenuItem::~LangMenuItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1LangMenuItem@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1LangMenuItem@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??1LangMenuItem@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1LangMenuItem@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1LangMenuItem@@QAE@XZ ENDP				; LangMenuItem::~LangMenuItem
; Function compile flags: /Odtp
;	COMDAT ??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lt$ = 8						; size = 4
_cmdID$ = 12						; size = 4
_langName$ = 16						; size = 28
??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; LangMenuItem::LangMenuItem, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 538
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _cmdID$[ebp]
	mov	DWORD PTR [edx+4], eax
	lea	ecx, DWORD PTR _langName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _langName$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _langName$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; LangMenuItem::LangMenuItem
; Function compile flags: /Odtp
;	COMDAT ?scaleY@DPIManager@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?scaleY@DPIManager@@QAEHH@Z PROC			; DPIManager::scaleY, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\dpimanager.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	96					; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	DWORD PTR __imp__MulDiv@12
	mov	esp, ebp
	pop	ebp
	ret	4
?scaleY@DPIManager@@QAEHH@Z ENDP			; DPIManager::scaleY
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?scaleX@DPIManager@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?scaleX@DPIManager@@QAEHH@Z PROC			; DPIManager::scaleX, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\dpimanager.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	96					; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	DWORD PTR __imp__MulDiv@12
	mov	esp, ebp
	pop	ebp
	ret	4
?scaleX@DPIManager@@QAEHH@Z ENDP			; DPIManager::scaleX
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GStaticDialog@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GStaticDialog@@UAEPAXI@Z PROC			; StaticDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StaticDialog@@UAE@XZ			; StaticDialog::~StaticDialog
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStaticDialog@@UAEPAXI@Z ENDP			; StaticDialog::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?destroy@StaticDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?destroy@StaticDialog@@UAEXXZ PROC			; StaticDialog::destroy, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\staticdialog\staticdialog.h
; Line 90
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	1
	push	2036					; 000007f4H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 92
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 93
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy@StaticDialog@@UAEXXZ ENDP			; StaticDialog::destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isCheckedOrNot@StaticDialog@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv78 = -4						; size = 4
_checkControlID$ = 8					; size = 4
?isCheckedOrNot@StaticDialog@@QBE_NH@Z PROC		; StaticDialog::isCheckedOrNot, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\staticdialog\staticdialog.h
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	push	0
	push	0
	push	240					; 000000f0H
	mov	eax, DWORD PTR _checkControlID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	eax, 1
	jne	SHORT $LN3@isCheckedO
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@isCheckedO
$LN3@isCheckedO:
	mov	DWORD PTR tv78[ebp], 0
$LN4@isCheckedO:
	mov	al, BYTE PTR tv78[ebp]
; Line 88
	mov	esp, ebp
	pop	ebp
	ret	4
?isCheckedOrNot@StaticDialog@@QBE_NH@Z ENDP		; StaticDialog::isCheckedOrNot
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
_p$ = -28						; size = 8
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_hwnd$ = 12						; size = 4
_isLeft$ = 16						; size = 1
?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z PROC ; StaticDialog::getTopPoint, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\staticdialog\staticdialog.h
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowRect@8
; Line 77
	movzx	edx, BYTE PTR _isLeft$[ebp]
	test	edx, edx
	je	SHORT $LN2@getTopPoin
; Line 78
	mov	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 79
	jmp	SHORT $LN1@getTopPoin
$LN2@getTopPoin:
; Line 80
	mov	ecx, DWORD PTR _rc$[ebp+8]
	mov	DWORD PTR _p$[ebp], ecx
$LN1@getTopPoin:
; Line 81
	mov	edx, DWORD PTR _rc$[ebp+4]
	mov	DWORD PTR _p$[ebp+4], edx
; Line 82
	lea	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__ScreenToClient@8
; Line 83
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _p$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 84
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z ENDP ; StaticDialog::getTopPoint
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isCreated@StaticDialog@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
?isCreated@StaticDialog@@UBE_NXZ PROC			; StaticDialog::isCreated, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\staticdialog\staticdialog.h
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN3@isCreated
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@isCreated
$LN3@isCreated:
	mov	DWORD PTR tv70[ebp], 0
$LN4@isCreated:
	mov	al, BYTE PTR tv70[ebp]
; Line 67
	mov	esp, ebp
	pop	ebp
	ret	0
?isCreated@StaticDialog@@UBE_NXZ ENDP			; StaticDialog::isCreated
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1StaticDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1StaticDialog@@UAE@XZ PROC				; StaticDialog::~StaticDialog, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\staticdialog\staticdialog.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1StaticDialog@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StaticDialog@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 58
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCreated@StaticDialog@@UBE_NXZ	; StaticDialog::isCreated
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@StaticDial
; Line 59
	push	0
	push	-21					; ffffffebH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__SetWindowLongW@12
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	call	?destroy@StaticDialog@@UAEXXZ		; StaticDialog::destroy
$LN2@StaticDial:
; Line 62
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@UAE@XZ			; Window::~Window
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1StaticDialog@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__ehhandler$??1StaticDialog@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1StaticDialog@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1StaticDialog@@UAE@XZ ENDP				; StaticDialog::~StaticDialog
; Function compile flags: /Odtp
;	COMDAT ??0StaticDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0StaticDialog@@QAE@XZ PROC				; StaticDialog::StaticDialog, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\staticdialog\staticdialog.h
; Line 56
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StaticDialog@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Window@@QAE@XZ			; Window::Window
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StaticDialog@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StaticDialog@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__ehhandler$??0StaticDialog@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StaticDialog@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StaticDialog@@QAE@XZ ENDP				; StaticDialog::StaticDialog
; Function compile flags: /Odtp
;	COMDAT ??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2468
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2469
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]
; Line 2470
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?ToElement@TiXmlNode@@QBEPAVTiXmlElement@@XZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?ToElement@TiXmlNode@@QBEPAVTiXmlElement@@XZ PROC	; TiXmlNode::ToElement, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\tinyxml\tinyxml.h
; Line 506
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@ToElement
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 1
	jne	SHORT $LN3@ToElement
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	jmp	SHORT $LN4@ToElement
$LN3@ToElement:
	mov	DWORD PTR tv67[ebp], 0
$LN4@ToElement:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ToElement@TiXmlNode@@QBEPAVTiXmlElement@@XZ ENDP	; TiXmlNode::ToElement
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GDlgInfo@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDlgInfo@@QAEPAXI@Z PROC				; DlgInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DlgInfo@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDlgInfo@@QAEPAXI@Z ENDP				; DlgInfo::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0DlgInfo@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DlgInfo@@QAE@ABU0@@Z PROC				; DlgInfo::DlgInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DlgInfo@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DlgInfo@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??0DlgInfo@@QAE@ABU0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0DlgInfo@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DlgInfo@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DlgInfo@@QAE@ABU0@@Z ENDP				; DlgInfo::DlgInfo
; Function compile flags: /Odtp
;	COMDAT ??1DlgInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DlgInfo@@QAE@XZ PROC					; DlgInfo::~DlgInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DlgInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DlgInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??1DlgInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??1DlgInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DlgInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DlgInfo@@QAE@XZ ENDP					; DlgInfo::~DlgInfo
; Function compile flags: /Odtp
;	COMDAT ??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z
_TEXT	SEGMENT
tv75 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dlg$ = 8						; size = 4
_name$ = 12						; size = 4
_internalName$ = 16					; size = 4
??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z PROC			; DlgInfo::DlgInfo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\tabbar\controlstab.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dlg$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _internalName$[ebp], 0
	je	SHORT $LN3@DlgInfo
	mov	eax, DWORD PTR _internalName$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@DlgInfo
$LN3@DlgInfo:
	mov	DWORD PTR tv75[ebp], OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
$LN4@DlgInfo:
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__ehhandler$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z ENDP			; DlgInfo::DlgInfo
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2296
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2291
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 8
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 7
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
tv70 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__P2$ = 8						; size = 12
__P1$ = 20						; size = 12
?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2266
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 2267
	cmp	DWORD PTR __P2$[ebp+8], 0
	jne	SHORT $LN3@Pdif
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@Pdif
$LN3@Pdif:
	lea	eax, DWORD PTR __P1$[ebp]
	push	eax
	lea	ecx, DWORD PTR __P2$[ebp]
	call	??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-
	mov	DWORD PTR tv70[ebp], eax
$LN4@Pdif:
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __P2$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __P1$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 2268
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __P1$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __P2$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [eax+edx*2]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -2						; size = 2
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+20], edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Newsize$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ; std::char_traits<wchar_t>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 7
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	edx, DWORD PTR __Oldlen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 2230
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
; Line 2231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 2232
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN11@Copy:
; Line 2233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 2
?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2193
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2194
	cmp	DWORD PTR __Count$[ebp], 1
	jne	SHORT $LN2@Chassign
; Line 2195
	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ; std::char_traits<wchar_t>::assign
	add	esp, 8
; Line 2196
	jmp	SHORT $LN3@Chassign
$LN2@Chassign:
; Line 2197
	movzx	eax, WORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	call	?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z ; std::char_traits<wchar_t>::assign
	add	esp, 12					; 0000000cH
$LN3@Chassign:
; Line 2198
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z
_TEXT	SEGMENT
tv139 = -24						; size = 4
tv138 = -20						; size = 4
tv137 = -16						; size = 4
__Ans$ = -12						; size = 4
tv90 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2170
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 2172
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@compare
; Line 2173
	push	2173					; 0000087dH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN3@compare:
; Line 2176
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN2@compare
; Line 2177
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN2@compare:
; Line 2178
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __N0$[ebp]
	jae	SHORT $LN1@compare
; Line 2179
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __N0$[ebp], eax
$LN1@compare:
; Line 2182
	mov	ecx, DWORD PTR __N0$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN6@compare
	mov	edx, DWORD PTR __N0$[ebp]
	mov	DWORD PTR tv90[ebp], edx
	jmp	SHORT $LN7@compare
$LN6@compare:
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv90[ebp], eax
$LN7@compare:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?compare@?$char_traits@_W@std@@SAHPB_W0I@Z ; std::char_traits<wchar_t>::compare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ans$[ebp], eax
; Line 2184
	cmp	DWORD PTR __Ans$[ebp], 0
	je	SHORT $LN12@compare
	mov	eax, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN13@compare
$LN12@compare:
	mov	ecx, DWORD PTR __N0$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN10@compare
	mov	DWORD PTR tv138[ebp], -1
	jmp	SHORT $LN11@compare
$LN10@compare:
	mov	edx, DWORD PTR __N0$[ebp]
	cmp	edx, DWORD PTR __Count$[ebp]
	jne	SHORT $LN8@compare
	mov	DWORD PTR tv137[ebp], 0
	jmp	SHORT $LN9@compare
$LN8@compare:
	mov	DWORD PTR tv137[ebp], 1
$LN9@compare:
	mov	eax, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv138[ebp], eax
$LN11@compare:
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv139[ebp], ecx
$LN13@compare:
	mov	eax, DWORD PTR tv139[ebp]
$LN5@compare:
; Line 2185
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2157
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2158
	push	2158					; 0000086eH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
; Line 2159
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@_W@std@@SAIPB_W@Z	; std::char_traits<wchar_t>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
; Line 2160
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2135
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2136
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
; Line 2137
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ch$ = 8						; size = 2
__Off$ = 12						; size = 4
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2125
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2126
	push	1
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
; Line 2127
	mov	esp, ebp
	pop	ebp
	ret	8
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z
_TEXT	SEGMENT
tv92 = -12						; size = 4
__Uptr$1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2097
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2099
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN8@find_last_
; Line 2100
	push	2100					; 00000834H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN8@find_last_:
; Line 2103
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	jbe	SHORT $LN7@find_last_
; Line 2106
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	jae	SHORT $LN11@find_last_
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR tv92[ebp], ecx
	jmp	SHORT $LN12@find_last_
$LN11@find_last_:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, 1
	mov	DWORD PTR tv92[ebp], eax
$LN12@find_last_:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR tv92[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR __Uptr$1[ebp], edx
	jmp	SHORT $LN6@find_last_
$LN5@find_last_:
; Line 2107
	mov	eax, DWORD PTR __Uptr$1[ebp]
	sub	eax, 2
	mov	DWORD PTR __Uptr$1[ebp], eax
$LN6@find_last_:
; Line 2108
	mov	ecx, DWORD PTR __Uptr$1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z ; std::char_traits<wchar_t>::find
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@find_last_
; Line 2109
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Uptr$1[ebp]
	sub	ecx, eax
	sar	ecx, 1
	mov	eax, ecx
	jmp	SHORT $LN9@find_last_
	jmp	SHORT $LN2@find_last_
$LN3@find_last_:
; Line 2110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	cmp	DWORD PTR __Uptr$1[ebp], eax
	jne	SHORT $LN2@find_last_
; Line 2111
	jmp	SHORT $LN7@find_last_
$LN2@find_last_:
; Line 2112
	jmp	SHORT $LN5@find_last_
$LN7@find_last_:
; Line 2113
	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
$LN9@find_last_:
; Line 2114
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ch$ = 8						; size = 2
__Off$ = 12						; size = 4
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2085
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2086
	push	1
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
; Line 2087
	mov	esp, ebp
	pop	ebp
	ret	8
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z
_TEXT	SEGMENT
__Vptr$1 = -12						; size = 4
__Uptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2059
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2061
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN6@find_first
; Line 2062
	push	2062					; 0000080eH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN6@find_first:
; Line 2065
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jae	SHORT $LN5@find_first
; Line 2067
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	DWORD PTR __Vptr$1[ebp], eax
; Line 2068
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR __Uptr$2[ebp], edx
; Line 2069
	jmp	SHORT $LN4@find_first
$LN3@find_first:
	mov	eax, DWORD PTR __Uptr$2[ebp]
	add	eax, 2
	mov	DWORD PTR __Uptr$2[ebp], eax
$LN4@find_first:
	mov	ecx, DWORD PTR __Uptr$2[ebp]
	cmp	ecx, DWORD PTR __Vptr$1[ebp]
	jae	SHORT $LN5@find_first
; Line 2070
	mov	edx, DWORD PTR __Uptr$2[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z ; std::char_traits<wchar_t>::find
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@find_first
; Line 2071
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Uptr$2[ebp]
	sub	edx, eax
	sar	edx, 1
	mov	eax, edx
	jmp	SHORT $LN7@find_first
$LN1@find_first:
; Line 2072
	jmp	SHORT $LN3@find_first
$LN5@find_first:
; Line 2073
	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
$LN7@find_first:
; Line 2074
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$1 = -8						; size = 4
_this$ = -4						; size = 4
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1782
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1783
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newcap$[ebp]
	ja	SHORT $LN3@reserve
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	eax, DWORD PTR __Newcap$[ebp]
	je	SHORT $LN3@reserve
; Line 1785
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR __Size$1[ebp], edx
; Line 1786
	push	1
	mov	eax, DWORD PTR __Newcap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@reserve
; Line 1787
	mov	edx, DWORD PTR __Size$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN3@reserve:
; Line 1789
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1748
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1749
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1750
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1739
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
; Line 1740
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1609
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1610
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1611
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1599
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1600
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
; Function compile flags: /Odtp
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z
_TEXT	SEGMENT
$T2 = -172						; size = 12
$T3 = -160						; size = 12
$T4 = -148						; size = 4
$T5 = -144						; size = 4
tv295 = -140						; size = 4
$T6 = -136						; size = 4
$T7 = -132						; size = 4
$T8 = -128						; size = 4
tv291 = -124						; size = 4
tv278 = -120						; size = 4
$T9 = -116						; size = 4
tv274 = -112						; size = 4
tv286 = -108						; size = 4
tv269 = -104						; size = 4
$T10 = -100						; size = 4
tv265 = -96						; size = 4
tv282 = -92						; size = 4
$T11 = -88						; size = 4
tv300 = -84						; size = 4
tv275 = -80						; size = 4
tv292 = -76						; size = 4
tv303 = -72						; size = 4
tv312 = -68						; size = 4
tv304 = -64						; size = 4
tv311 = -60						; size = 4
tv301 = -56						; size = 4
tv288 = -52						; size = 4
tv305 = -48						; size = 4
tv310 = -44						; size = 4
tv271 = -40						; size = 4
tv283 = -36						; size = 4
tv266 = -32						; size = 4
tv308 = -28						; size = 4
tv307 = -24						; size = 4
$T12 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__First2$ = 32						; size = 12
__Last2$ = 44						; size = 12
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1589
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 1590
	lea	eax, DWORD PTR __Last2$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First2$[ebp]
	call	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@replace
; Line 1591
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T11[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv300[ebp], eax
	mov	eax, DWORD PTR tv300[ebp]
	mov	DWORD PTR tv265[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T8[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv301[ebp], eax
	mov	eax, DWORD PTR tv301[ebp]
	mov	DWORD PTR tv269[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv266[ebp], eax
	mov	ecx, DWORD PTR tv266[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv303[ebp], eax
	mov	eax, DWORD PTR tv303[ebp]
	mov	DWORD PTR tv271[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	mov	edx, DWORD PTR tv271[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv304[ebp], eax
	mov	eax, DWORD PTR tv304[ebp]
	mov	DWORD PTR tv274[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv305[ebp], eax
	mov	eax, DWORD PTR tv305[ebp]
	mov	DWORD PTR tv278[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv275[ebp], eax
	mov	ecx, DWORD PTR tv275[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
; Line 1592
	jmp	$LN1@replace
$LN2@replace:
; Line 1594
	lea	edx, DWORD PTR __First2$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last2$[ebp]
	call	??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator-
	push	eax
	lea	ecx, DWORD PTR __First2$[ebp]
	call	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAA_WXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv307[ebp], eax
	mov	ecx, DWORD PTR tv307[ebp]
	mov	DWORD PTR tv282[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T10[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv308[ebp], eax
	mov	eax, DWORD PTR tv308[ebp]
	mov	DWORD PTR tv286[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv283[ebp], eax
	mov	ecx, DWORD PTR tv283[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv310[ebp], eax
	mov	eax, DWORD PTR tv310[ebp]
	mov	DWORD PTR tv288[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T9[ebp], esp
	mov	edx, DWORD PTR tv288[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv311[ebp], eax
	mov	eax, DWORD PTR tv311[ebp]
	mov	DWORD PTR tv291[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv312[ebp], eax
	mov	eax, DWORD PTR tv312[ebp]
	mov	DWORD PTR tv295[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv292[ebp], eax
	mov	ecx, DWORD PTR tv292[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
$LN1@replace:
; Line 1595
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T12[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First2$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last2$[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T12[ebp]
; Line 1596
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$0:
	lea	ecx, DWORD PTR __Last2$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$1:
	lea	ecx, DWORD PTR __First2$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$2:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$3:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$4:
	mov	ecx, DWORD PTR $T11[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$5:
	mov	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$6:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$7:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$8:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$9:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$10:
	mov	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$11:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$12:
	mov	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$13:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
; Function compile flags: /Odtp
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z
_TEXT	SEGMENT
$T2 = -100						; size = 12
tv185 = -88						; size = 4
$T3 = -84						; size = 4
tv181 = -80						; size = 4
$T4 = -76						; size = 4
tv176 = -72						; size = 4
$T5 = -68						; size = 4
tv172 = -64						; size = 4
$T6 = -60						; size = 4
$T7 = -56						; size = 4
tv67 = -52						; size = 4
tv182 = -48						; size = 4
tv193 = -44						; size = 4
tv192 = -40						; size = 4
tv178 = -36						; size = 4
tv191 = -32						; size = 4
tv173 = -28						; size = 4
tv189 = -24						; size = 4
tv188 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Right$ = 32						; size = 4
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1517
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1519
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv188[ebp], eax
	mov	eax, DWORD PTR tv188[ebp]
	mov	DWORD PTR tv172[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv189[ebp], eax
	mov	eax, DWORD PTR tv189[ebp]
	mov	DWORD PTR tv176[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv173[ebp], eax
	mov	ecx, DWORD PTR tv173[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv191[ebp], eax
	mov	eax, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv178[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	edx, DWORD PTR tv178[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	eax, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv181[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv193[ebp], eax
	mov	eax, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv185[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv182[ebp], eax
	mov	ecx, DWORD PTR tv182[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR $T7[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T7[ebp]
; Line 1520
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$2:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$3:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$4:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$5:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$6:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
; Function compile flags: /Odtp
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1483
	push	1483					; 000005cbH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
; Line 1484
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@_W@std@@SAIPB_W@Z	; std::char_traits<wchar_t>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
; Line 1485
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z
_TEXT	SEGMENT
__Num$ = -12						; size = 4
__Nm$ = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1446
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1448
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN9@replace
; Line 1449
	push	1449					; 000005a9H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN9@replace:
; Line 1452
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@replace
; Line 1455
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
	jmp	$LN11@replace
$LN8@replace:
; Line 1456
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR __Off$[ebp]
	jae	SHORT $LN7@replace
; Line 1457
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN7@replace:
; Line 1458
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR __N0$[ebp]
	jae	SHORT $LN6@replace
; Line 1459
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __N0$[ebp], ecx
$LN6@replace:
; Line 1460
	mov	edx, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	sub	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __N0$[ebp]
	cmp	edx, ecx
	ja	SHORT $LN5@replace
; Line 1461
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN5@replace:
; Line 1462
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __N0$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Nm$[ebp], eax
; Line 1464
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, DWORD PTR __N0$[ebp]
	jae	SHORT $LN4@replace
; Line 1467
	mov	edx, DWORD PTR __Nm$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __N0$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
$LN4@replace:
; Line 1470
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN2@replace
	cmp	DWORD PTR __N0$[ebp], 0
	jbe	$LN3@replace
$LN2@replace:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, DWORD PTR __N0$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@replace
; Line 1472
	mov	ecx, DWORD PTR __N0$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@replace
; Line 1474
	mov	edx, DWORD PTR __Nm$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __N0$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
$LN1@replace:
; Line 1475
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 1476
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN3@replace:
; Line 1478
	mov	eax, DWORD PTR _this$[ebp]
$LN11@replace:
; Line 1479
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z
_TEXT	SEGMENT
__Num$ = -16						; size = 4
__Newsize$ = -12					; size = 4
__Nm$ = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Right$ = 16						; size = 4
__Roff$ = 20						; size = 4
__Count$ = 24						; size = 4
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1384
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1385
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jb	SHORT $LN13@replace
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN14@replace
$LN13@replace:
; Line 1386
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN14@replace:
; Line 1387
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	jae	SHORT $LN12@replace
; Line 1388
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __N0$[ebp], edx
$LN12@replace:
; Line 1389
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1390
	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN11@replace
; Line 1391
	mov	ecx, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN11@replace:
; Line 1392
	mov	edx, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	sub	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __N0$[ebp]
	cmp	edx, ecx
	ja	SHORT $LN10@replace
; Line 1393
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN10@replace:
; Line 1395
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __N0$[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Nm$[ebp], eax
; Line 1396
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, DWORD PTR __Count$[ebp]
	sub	edx, DWORD PTR __N0$[ebp]
	mov	DWORD PTR __Newsize$[ebp], edx
; Line 1397
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN9@replace
; Line 1398
	push	0
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
$LN9@replace:
; Line 1400
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN8@replace
; Line 1403
	mov	ecx, DWORD PTR __Nm$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __N0$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1405
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
	jmp	$LN7@replace
$LN8@replace:
; Line 1407
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	ja	SHORT $LN6@replace
; Line 1410
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Roff$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1412
	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __N0$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
	jmp	$LN7@replace
$LN6@replace:
; Line 1414
	mov	eax, DWORD PTR __Roff$[ebp]
	cmp	eax, DWORD PTR __Off$[ebp]
	ja	SHORT $LN4@replace
; Line 1417
	mov	ecx, DWORD PTR __Nm$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __N0$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1419
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
	jmp	$LN7@replace
$LN4@replace:
; Line 1421
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Roff$[ebp]
	ja	SHORT $LN2@replace
; Line 1424
	mov	ecx, DWORD PTR __Nm$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __N0$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1427
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, DWORD PTR __N0$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1429
	jmp	$LN7@replace
$LN2@replace:
; Line 1432
	mov	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1434
	mov	eax, DWORD PTR __Nm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __N0$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1437
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __N0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __N0$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
$LN7@replace:
; Line 1440
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 1441
	mov	eax, DWORD PTR _this$[ebp]
$LN16@replace:
; Line 1442
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Right$ = 16						; size = 4
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1378
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1379
	push	-1
	push	0
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __N0$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
; Line 1380
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T2 = -124						; size = 12
tv234 = -112						; size = 4
$T3 = -108						; size = 4
tv230 = -104						; size = 4
$T4 = -100						; size = 4
tv228 = -96						; size = 4
$T5 = -92						; size = 4
tv224 = -88						; size = 4
$T6 = -84						; size = 4
tv220 = -80						; size = 4
$T7 = -76						; size = 4
tv217 = -72						; size = 4
$T8 = -68						; size = 4
tv231 = -64						; size = 4
tv249 = -60						; size = 4
tv248 = -56						; size = 4
tv225 = -52						; size = 4
tv246 = -48						; size = 4
tv245 = -44						; size = 4
tv222 = -40						; size = 4
tv244 = -36						; size = 4
tv242 = -32						; size = 4
tv241 = -28						; size = 4
$T9 = -24						; size = 4
__Count$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1365
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T9[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1366
	push	1366					; 00000556H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T8[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv241[ebp], eax
	mov	ecx, DWORD PTR tv241[ebp]
	mov	DWORD PTR tv217[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv242[ebp], eax
	mov	eax, DWORD PTR tv242[ebp]
	mov	DWORD PTR tv220[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
	add	esp, 32					; 00000020H
; Line 1367
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv244[ebp], eax
	mov	edx, DWORD PTR tv244[ebp]
	mov	DWORD PTR tv222[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	mov	eax, DWORD PTR tv222[ebp]
	push	eax
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv245[ebp], eax
	mov	ecx, DWORD PTR tv245[ebp]
	mov	DWORD PTR tv224[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv246[ebp], eax
	mov	eax, DWORD PTR tv246[ebp]
	mov	DWORD PTR tv228[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv225[ebp], eax
	mov	ecx, DWORD PTR tv225[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
; Line 1368
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv248[ebp], eax
	mov	eax, DWORD PTR tv248[ebp]
	mov	DWORD PTR tv230[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv249[ebp], eax
	mov	eax, DWORD PTR tv249[ebp]
	mov	DWORD PTR tv234[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Pdif
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv231[ebp], eax
	mov	ecx, DWORD PTR tv231[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
; Line 1369
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
	mov	eax, DWORD PTR $T9[ebp]
	or	eax, 1
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1370
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$2:
	mov	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$3:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$4:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$5:
	mov	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$6:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$7:
	mov	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$8:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$9:
	mov	eax, DWORD PTR $T9[ebp]
	and	eax, 1
	je	$LN13@erase
	and	DWORD PTR $T9[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
$LN13@erase:
	ret	0
__ehhandler$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], edx
; Line 1351
	mov	eax, DWORD PTR __Newsize$1[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Ptr$2[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR __Ptr$2[ebp]
	push	ecx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	edx, DWORD PTR __Newsize$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@_W@std@@SAIPB_W@Z	; std::char_traits<wchar_t>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Roff$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1124
	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 1125
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 2
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1091
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1092
	mov	eax, DWORD PTR _this$[ebp]
	or	ecx, -1
	sub	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append
; Line 1093
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN2@append:
; Line 1096
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append
; Line 1098
	movzx	eax, WORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign
; Line 1099
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@append:
; Line 1101
	mov	eax, DWORD PTR _this$[ebp]
$LN4@append:
; Line 1102
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1085
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1086
	push	1086					; 0000043eH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
; Line 1087
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@_W@std@@SAIPB_W@Z	; std::char_traits<wchar_t>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; Line 1088
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1063
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1065
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN4@append
; Line 1066
	push	1066					; 0000042aH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN4@append:
; Line 1069
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@append
; Line 1071
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
	jmp	SHORT $LN6@append
$LN3@append:
; Line 1072
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	sub	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append
; Line 1073
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN2@append:
; Line 1076
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append
; Line 1078
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 1079
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@append:
; Line 1081
	mov	eax, DWORD PTR _this$[ebp]
$LN6@append:
; Line 1082
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1044
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1045
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN4@append
; Line 1046
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN4@append:
; Line 1047
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1048
	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@append
; Line 1049
	mov	ecx, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN3@append:
; Line 1050
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	sub	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append
; Line 1051
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN2@append:
; Line 1053
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], edx
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@append
; Line 1056
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 1057
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@append:
; Line 1059
	mov	eax, DWORD PTR _this$[ebp]
$LN6@append:
; Line 1060
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1028
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1029
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; Line 1030
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1013
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1014
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 1015
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 997
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 998
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@operator
; Line 1001
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	push	eax
	call	??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@operator
	xor	ecx, ecx
	je	SHORT $LN1@operator
; Line 1003
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 1004
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Change_alloc
$LN1@operator:
; Line 1007
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN2@operator:
; Line 1009
	mov	eax, DWORD PTR _this$[ebp]
; Line 1010
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 935
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 936
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jae	SHORT $LN2@Assign_rv
; Line 938
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 939
	jmp	SHORT $LN1@Assign_rv
$LN2@Assign_rv:
; Line 941
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
; Line 942
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@Assign_rv:
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 945
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 946
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 947
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
tv169 = -44						; size = 4
$T2 = -40						; size = 4
tv166 = -36						; size = 4
$T3 = -32						; size = 4
tv171 = -28						; size = 4
tv170 = -24						; size = 4
_this$ = -20						; size = 4
$T4 = -15						; size = 1
$T5 = -14						; size = 1
$T6 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 902
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 903
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN4@operator
; Line 905
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 908
	xor	ecx, ecx
	je	SHORT $LN3@operator
; Line 909
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Change_alloc
$LN3@operator:
; Line 911
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	push	eax
	call	??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@operator
; Line 912
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T3[ebp], esp
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
	mov	DWORD PTR tv170[ebp], eax
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv166[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
	mov	DWORD PTR tv171[ebp], eax
	mov	eax, DWORD PTR tv171[ebp]
	mov	DWORD PTR tv169[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign<std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > > >
; Line 913
	jmp	SHORT $LN4@operator
$LN2@operator:
; Line 914
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
$LN4@operator:
; Line 916
	mov	eax, DWORD PTR _this$[ebp]
; Line 917
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z$1:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ
__ehhandler$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 738
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 739
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 740
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -14						; size = 1
$T3 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 724
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 725
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 726
	mov	edx, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	push	edx
	push	0
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 727
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Change_alloc, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 654
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 655
	mov	esp, ebp
	pop	ebp
	ret	4
?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Change_alloc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 780
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 740
	push	ebp
	mov	ebp, esp
; Line 741
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ ; std::allocator<wchar_t>::select_on_container_copy_construction
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 742
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@_W@std@@QBEIXZ	; std::allocator<wchar_t>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 2147483647				; 7fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@_W@std@@YAPA_WIPA_W@Z	; std::_Allocate<wchar_t>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@_W@std@@QAE@ABV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 556
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@_W@std@@QAE@ABV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ PROC ; std::allocator<wchar_t>::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 534
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ ENDP ; std::allocator<wchar_t>::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_System_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_System_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 608
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_System_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_System_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_System_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Iostream_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??1_Generic_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 564
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Generic_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??0_Generic_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@_W@std@@YAXPB_W0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z PROC		; std::_Debug_pointer<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z ENDP		; std::_Debug_pointer<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2296
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2291
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	edx, DWORD PTR __Oldlen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 2232
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1609
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1610
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1611
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1599
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1600
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -14						; size = 1
$T3 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 724
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 725
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 726
	mov	edx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	edx
	push	0
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 727
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 780
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 740
	push	ebp
	mov	ebp, esp
; Line 741
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ ; std::allocator<char>::select_on_container_copy_construction
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 742
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 556
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ PROC ; std::allocator<char>::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 534
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ ENDP ; std::allocator<char>::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnext$1 = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 189
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]
; Line 184
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -28						; size = 4
__Lock$3 = -24						; size = 4
__Parent_proxy$4 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$4[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$4[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:
; Line 174
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$3[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:
; Line 127
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator
; Line 128
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 129
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 132
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
; Line 137
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 120
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all
; Line 218
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$3[ebp], edx
; Line 221
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all
; Line 222
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:
; Line 223
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0
; Line 224
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv68[ebp]
; Line 101
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 346
	push	ebp
	mov	ebp, esp
; Line 347
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
; Line 348
	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 2
?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 341
	push	ebp
	mov	ebp, esp
; Line 342
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	movzx	ecx, WORD PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_wmemset
	add	esp, 12					; 0000000cH
; Line 343
	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 336
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_wmemmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 337
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 4
?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z PROC	; std::char_traits<wchar_t>::find, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 327
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 329
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@find
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@find
$LN3@find:
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ch$[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_wmemchr
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@find:
	mov	eax, DWORD PTR tv69[ebp]
; Line 330
	mov	esp, ebp
	pop	ebp
	ret	0
?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z ENDP	; std::char_traits<wchar_t>::find
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 311
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 313
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_wmemcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 314
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@_W@std@@SAIPB_W@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIPB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 306
	mov	eax, DWORD PTR __First$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_wcslen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 307
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@_W@std@@SAIPB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?compare@?$char_traits@_W@std@@SAHPB_W0I@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z PROC		; std::char_traits<wchar_t>::compare, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 298
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 300
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@compare
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@compare
$LN3@compare:
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_wmemcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@compare:
	mov	eax, DWORD PTR tv69[ebp]
; Line 301
	mov	esp, ebp
	pop	ebp
	ret	0
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z ENDP		; std::char_traits<wchar_t>::compare
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _wmemset
_TEXT	SEGMENT
__Su$ = -4						; size = 4
__S$ = 8						; size = 4
__C$ = 12						; size = 2
__N$ = 16						; size = 4
_wmemset PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1296
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1297
	mov	eax, DWORD PTR __S$[ebp]
	mov	DWORD PTR __Su$[ebp], eax
; Line 1298
	jmp	SHORT $LN3@wmemset
$LN2@wmemset:
	mov	ecx, DWORD PTR __Su$[ebp]
	add	ecx, 2
	mov	DWORD PTR __Su$[ebp], ecx
	mov	edx, DWORD PTR __N$[ebp]
	sub	edx, 1
	mov	DWORD PTR __N$[ebp], edx
$LN3@wmemset:
	cmp	DWORD PTR __N$[ebp], 0
	jbe	SHORT $LN1@wmemset
; Line 1300
	mov	eax, DWORD PTR __Su$[ebp]
	mov	cx, WORD PTR __C$[ebp]
	mov	WORD PTR [eax], cx
; Line 1301
	jmp	SHORT $LN2@wmemset
$LN1@wmemset:
; Line 1302
	mov	eax, DWORD PTR __S$[ebp]
; Line 1303
	mov	esp, ebp
	pop	ebp
	ret	0
_wmemset ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1279
	push	ebp
	mov	ebp, esp
; Line 1284
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 1286
	pop	ebp
	ret	0
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1271
	push	ebp
	mov	ebp, esp
; Line 1274
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1276
	pop	ebp
	ret	0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _wmemcmp
_TEXT	SEGMENT
tv74 = -4						; size = 4
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcmp PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1263
	push	ebp
	mov	ebp, esp
	push	ecx
	jmp	SHORT $LN4@wmemcmp
$LN3@wmemcmp:
	mov	eax, DWORD PTR __S1$[ebp]
	add	eax, 2
	mov	DWORD PTR __S1$[ebp], eax
	mov	ecx, DWORD PTR __S2$[ebp]
	add	ecx, 2
	mov	DWORD PTR __S2$[ebp], ecx
	mov	edx, DWORD PTR __N$[ebp]
	sub	edx, 1
	mov	DWORD PTR __N$[ebp], edx
$LN4@wmemcmp:
	cmp	DWORD PTR __N$[ebp], 0
	jbe	SHORT $LN2@wmemcmp
; Line 1264
	mov	eax, DWORD PTR __S1$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR __S2$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	je	SHORT $LN1@wmemcmp
; Line 1265
	mov	ecx, DWORD PTR __S1$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR __S2$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	edx, ecx
	jge	SHORT $LN7@wmemcmp
	mov	DWORD PTR tv74[ebp], -1
	jmp	SHORT $LN8@wmemcmp
$LN7@wmemcmp:
	mov	DWORD PTR tv74[ebp], 1
$LN8@wmemcmp:
	mov	eax, DWORD PTR tv74[ebp]
	jmp	SHORT $LN5@wmemcmp
$LN1@wmemcmp:
; Line 1266
	jmp	SHORT $LN3@wmemcmp
$LN2@wmemcmp:
	xor	eax, eax
$LN5@wmemcmp:
	mov	esp, ebp
	pop	ebp
	ret	0
_wmemcmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _wmemchr
_TEXT	SEGMENT
__S$ = 8						; size = 4
__C$ = 12						; size = 2
__N$ = 16						; size = 4
_wmemchr PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1258
	push	ebp
	mov	ebp, esp
	jmp	SHORT $LN4@wmemchr
$LN3@wmemchr:
	mov	eax, DWORD PTR __S$[ebp]
	add	eax, 2
	mov	DWORD PTR __S$[ebp], eax
	mov	ecx, DWORD PTR __N$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __N$[ebp], ecx
$LN4@wmemchr:
	cmp	DWORD PTR __N$[ebp], 0
	jbe	SHORT $LN2@wmemchr
; Line 1259
	mov	edx, DWORD PTR __S$[ebp]
	movzx	eax, WORD PTR [edx]
	movzx	ecx, WORD PTR __C$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN1@wmemchr
; Line 1260
	mov	eax, DWORD PTR __S$[ebp]
	jmp	SHORT $LN5@wmemchr
$LN1@wmemchr:
; Line 1261
	jmp	SHORT $LN3@wmemchr
$LN2@wmemchr:
	xor	eax, eax
$LN5@wmemchr:
	pop	ebp
	ret	0
_wmemchr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
; Line 557
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	__hypot
	add	esp, 16					; 00000010H
; Line 558
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GWindow@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GWindow@@UAEPAXI@Z PROC				; Window::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@UAE@XZ			; Window::~Window
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GWindow@@UAEPAXI@Z ENDP				; Window::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isVisible@Window@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -1						; size = 1
?isVisible@Window@@UBE_NXZ PROC				; Window::isVisible, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	test	eax, eax
	je	SHORT $LN3@isVisible
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@isVisible
$LN3@isVisible:
	mov	BYTE PTR tv68[ebp], 0
$LN4@isVisible:
	mov	al, BYTE PTR tv68[ebp]
; Line 94
	mov	esp, ebp
	pop	ebp
	ret	0
?isVisible@Window@@UBE_NXZ ENDP				; Window::isVisible
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getHeight@Window@@UBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?getHeight@Window@@UBEHXZ PROC				; Window::getHeight, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	cmp	eax, 1
	jne	SHORT $LN1@getHeight
; Line 88
	mov	eax, DWORD PTR _rc$[ebp+12]
	sub	eax, DWORD PTR _rc$[ebp+4]
	jmp	SHORT $LN2@getHeight
$LN1@getHeight:
; Line 89
	xor	eax, eax
$LN2@getHeight:
; Line 90
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?getHeight@Window@@UBEHXZ ENDP				; Window::getHeight
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getWidth@Window@@UBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?getWidth@Window@@UBEHXZ PROC				; Window::getWidth, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 81
	mov	eax, DWORD PTR _rc$[ebp+8]
	sub	eax, DWORD PTR _rc$[ebp]
; Line 82
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?getWidth@Window@@UBEHXZ ENDP				; Window::getWidth
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z PROC		; Window::getWindowRect, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8
; Line 76
	mov	esp, ebp
	pop	ebp
	ret	4
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z ENDP		; Window::getWindowRect
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getClientRect@Window@@UBEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?getClientRect@Window@@UBEXAAUtagRECT@@@Z PROC		; Window::getClientRect, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 72
	mov	esp, ebp
	pop	ebp
	ret	4
?getClientRect@Window@@UBEXAAUtagRECT@@@Z ENDP		; Window::getClientRect
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?redraw@Window@@UBEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_forceUpdate$ = 8					; size = 1
?redraw@Window@@UBEX_N@Z PROC				; Window::redraw, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 66
	movzx	edx, BYTE PTR _forceUpdate$[ebp]
	test	edx, edx
	je	SHORT $LN2@redraw
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
$LN2@redraw:
; Line 68
	mov	esp, ebp
	pop	ebp
	ret	4
?redraw@Window@@UBEX_N@Z ENDP				; Window::redraw
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z PROC		; Window::reSizeToWH, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	push	1
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__MoveWindow@24
; Line 61
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	4
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z ENDP		; Window::reSizeToWH
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z PROC		; Window::reSizeTo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 54
	push	1
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 55
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
; Line 56
	mov	esp, ebp
	pop	ebp
	ret	4
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z ENDP		; Window::reSizeTo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?display@Window@@UBEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_toShow$ = 8						; size = 1
?display@Window@@UBEX_N@Z PROC				; Window::display, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	movzx	eax, BYTE PTR _toShow$[ebp]
	test	eax, eax
	je	SHORT $LN3@display
	mov	DWORD PTR tv67[ebp], 5
	jmp	SHORT $LN4@display
$LN3@display:
	mov	DWORD PTR tv67[ebp], 0
$LN4@display:
	mov	ecx, DWORD PTR tv67[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 50
	mov	esp, ebp
	pop	ebp
	ret	4
?display@Window@@UBEX_N@Z ENDP				; Window::display
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hInst$ = 8						; size = 4
_parent$ = 12						; size = 4
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z PROC	; Window::init, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hInst$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 43
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _parent$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	8
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z ENDP	; Window::init
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Window@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Window@@UAE@XZ PROC					; Window::~Window, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Window@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1Window@@UAE@XZ ENDP					; Window::~Window
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Window@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Window@@QAE@XZ PROC					; Window::Window, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Window@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Window@@QAE@XZ ENDP					; Window::Window
_TEXT	ENDS
END

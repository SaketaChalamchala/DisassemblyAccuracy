; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\WinControls\Grid\BabyGrid.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?hfontbody@@3PAUHFONT__@@A			; hfontbody
PUBLIC	?hfontheader@@3PAUHFONT__@@A			; hfontheader
PUBLIC	?hfonttitle@@3PAUHFONT__@@A			; hfonttitle
PUBLIC	?holdfont@@3PAUHFONT__@@A			; holdfont
PUBLIC	?BGHS@@3PAU_gridhandlestruct@@A			; BGHS
PUBLIC	?BGcell@@3U_BGCELL@@A				; BGcell
PUBLIC	?LPBGcell@@3PAU_BGCELL@@A			; LPBGcell
PUBLIC	?BG_GridIndex@@3HA				; BG_GridIndex
PUBLIC	?FindResult@@3HA				; FindResult
PUBLIC	?data@@3PA_WA					; data
PUBLIC	?cs@@3UtagCREATESTRUCTW@@A			; cs
PUBLIC	?lpcs@@3PAUtagCREATESTRUCTW@@A			; lpcs
_BSS	SEGMENT
?hfontbody@@3PAUHFONT__@@A DD 01H DUP (?)		; hfontbody
?hfontheader@@3PAUHFONT__@@A DD 01H DUP (?)		; hfontheader
?hfonttitle@@3PAUHFONT__@@A DD 01H DUP (?)		; hfonttitle
?holdfont@@3PAUHFONT__@@A DD 01H DUP (?)		; holdfont
?BGHS@@3PAU_gridhandlestruct@@A DB 0f230H DUP (?)	; BGHS
?BGcell@@3U_BGCELL@@A DQ 01H DUP (?)			; BGcell
?LPBGcell@@3PAU_BGCELL@@A DD 01H DUP (?)		; LPBGcell
?BG_GridIndex@@3HA DD 01H DUP (?)			; BG_GridIndex
?FindResult@@3HA DD 01H DUP (?)				; FindResult
?data@@3PA_WA DW 03e8H DUP (?)				; data
?cs@@3UtagCREATESTRUCTW@@A DB 030H DUP (?)		; cs
?lpcs@@3PAUtagCREATESTRUCTW@@A DD 01H DUP (?)		; lpcs
_BSS	ENDS
CONST	SEGMENT
$SG123934 DB	'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, 'o', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, '(', 00H, '3', 00H, '0', 00H, '0', 00H
	DB	' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 's', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'x', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG123982 DB	'%', 00H, '0', 00H, '5', 00H, 'd', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '3', 00H, 'd', 00H, 00H, 00H
$SG123990 DB	'|', 00H, 00H, 00H
$SG123993 DB	'P', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG123995 DB	'U', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG123996 DB	'|', 00H, 00H, 00H
$SG124003 DB	'P', 00H, 00H, 00H
$SG124005 DB	'U', 00H, 00H, 00H
$SG124026 DB	'%', 00H, '0', 00H, '5', 00H, 'd', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '3', 00H, 'd', 00H, 00H, 00H
$SG124028 DB	'|', 00H, 00H, 00H
$SG124030 DB	'A', 00H, 00H, 00H
$SG124032 DB	'N', 00H, 00H, 00H
$SG124034 DB	'T', 00H, 00H, 00H
$SG124036 DB	'F', 00H, 00H, 00H
$SG124038 DB	'G', 00H, 00H, 00H
$SG124039 DB	'|', 00H, 00H, 00H
$SG124095 DB	'%', 00H, '0', 00H, '5', 00H, 'd', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '3', 00H, 'd', 00H, 00H, 00H
$SG124110 DB	00H, 00H
	ORG $+2
$SG124125 DB	'%', 00H, '0', 00H, '5', 00H, 'd', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '3', 00H, 'd', 00H, 00H, 00H
$SG124157 DB	'%', 00H, '0', 00H, '5', 00H, 'd', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '3', 00H, 'd', 00H, 00H, 00H
$SG124182 DB	'%', 00H, '0', 00H, '5', 00H, 'd', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '3', 00H, 'd', 00H, 00H, 00H
$SG123168 DB	00H, 00H
	ORG $+2
$SG123291 DB	00H, 00H
	ORG $+2
$SG124320 DB	00H, 00H
	ORG $+2
$SG124325 DB	00H, 00H
	ORG $+2
$SG123301 DB	'%', 00H, 'c', 00H, '%', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG123321 DB	00H, 00H
	ORG $+2
$SG123325 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG124382 DB	00H, 00H
	ORG $+2
$SG124385 DB	00H, 00H
	ORG $+2
$SG123384 DB	00H, 00H
	ORG $+2
$SG123424 DB	'r', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'n', 00H
	DB	' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
$SG124479 DB	'U', 00H, 00H, 00H
$SG124570 DB	'M', 00H, 'S', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'e', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'D', 00H, 'l', 00H, 'g', 00H, 00H
	DB	00H
	ORG $+2
$SG124571 DB	'M', 00H, 'S', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'e', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'D', 00H, 'l', 00H, 'g', 00H, 00H
	DB	00H
	ORG $+2
$SG124572 DB	'M', 00H, 'S', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'e', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'D', 00H, 'l', 00H, 'g', 00H, 00H
	DB	00H
	ORG $+2
$SG124575 DB	00H, 00H
	ORG $+2
$SG124576 DB	'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, 'B', 00H, 'O', 00H
	DB	'X', 00H, 00H, 00H
$SG123756 DB	00H, 00H
	ORG $+2
$SG123783 DB	'U', 00H, 00H, 00H
$SG123826 DB	00H, 00H
	ORG $+2
$SG123837 DB	'B', 00H, 'A', 00H, 'B', 00H, 'Y', 00H, 'G', 00H, 'R', 00H
	DB	'I', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG123873 DB	0aH, 00H, 00H, 00H
$SG123878 DB	0aH, 00H, 00H, 00H
CONST	ENDS
PUBLIC	?RegisterGridClass@@YAGPAUHINSTANCE__@@@Z	; RegisterGridClass
PUBLIC	?GridProc@@YGJPAUHWND__@@IIJ@Z			; GridProc
PUBLIC	?SetCell@@YAXPAU_BGCELL@@HH@Z			; SetCell
PUBLIC	_hypot
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?AddGrid@@YAHI@Z				; AddGrid
PUBLIC	?FindGrid@@YAHI@Z				; FindGrid
PUBLIC	?ShowVscroll@@YAXPAUHWND__@@H@Z			; ShowVscroll
PUBLIC	?ShowHscroll@@YAXPAUHWND__@@H@Z			; ShowHscroll
PUBLIC	?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z	; BinarySearchListBox
PUBLIC	?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z	; DisplayEditString
PUBLIC	?CountGrids@@YAHXZ				; CountGrids
PUBLIC	?HomeColumnNthVisible@@YAHH@Z			; HomeColumnNthVisible
PUBLIC	?RefreshGrid@@YAXPAUHWND__@@@Z			; RefreshGrid
PUBLIC	?GetNextColWithWidth@@YAHHHH@Z			; GetNextColWithWidth
PUBLIC	?GetRowOfMouse@@YAHHH@Z				; GetRowOfMouse
PUBLIC	?GetColOfMouse@@YAHHH@Z				; GetColOfMouse
PUBLIC	?OutOfRange@@YAHPAU_BGCELL@@@Z			; OutOfRange
PUBLIC	?CalcVisibleCellBoundaries@@YAXH@Z		; CalcVisibleCellBoundaries
PUBLIC	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z	; GetCellRect
PUBLIC	?DisplayTitle@@YAXPAUHWND__@@HPAUHFONT__@@@Z	; DisplayTitle
PUBLIC	?DisplayColumn@@YAXPAUHWND__@@HHHPAUHFONT__@@1@Z ; DisplayColumn
PUBLIC	?DrawCursor@@YAXPAUHWND__@@H@Z			; DrawCursor
PUBLIC	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z	; SetCurrentCellStatus
PUBLIC	?GetASCII@@YA_WIJ@Z				; GetASCII
PUBLIC	?SetHomeRow@@YAXPAUHWND__@@HHH@Z		; SetHomeRow
PUBLIC	?SetHomeCol@@YAXPAUHWND__@@HHH@Z		; SetHomeCol
PUBLIC	?NotifyRowChanged@@YAXPAUHWND__@@H@Z		; NotifyRowChanged
PUBLIC	?NotifyColChanged@@YAXPAUHWND__@@H@Z		; NotifyColChanged
PUBLIC	?NotifyEndEdit@@YAXPAUHWND__@@H@Z		; NotifyEndEdit
PUBLIC	?NotifyDelete@@YAXPAUHWND__@@H@Z		; NotifyDelete
PUBLIC	?NotifyEditBegin@@YAXPAUHWND__@@H@Z		; NotifyEditBegin
PUBLIC	?NotifyEditEnd@@YAXPAUHWND__@@H@Z		; NotifyEditEnd
PUBLIC	?NotifyCellClicked@@YAXPAUHWND__@@H@Z		; NotifyCellClicked
PUBLIC	?NotifyCellDbClicked@@YAXPAUHWND__@@H@Z		; NotifyCellDbClicked
PUBLIC	?NotifyCellRClicked@@YAXPAUHWND__@@H@Z		; NotifyCellRClicked
PUBLIC	?GetVisibleColumns@@YAXPAUHWND__@@H@Z		; GetVisibleColumns
PUBLIC	?GetNthVisibleColumn@@YAHPAUHWND__@@HH@Z	; GetNthVisibleColumn
PUBLIC	?CloseEdit@@YAXPAUHWND__@@H@Z			; CloseEdit
PUBLIC	?SizeGrid@@YAXPAUHWND__@@H@Z			; SizeGrid
PUBLIC	?FindLongestLine@@YAHPAUHDC__@@PA_WPAUtagSIZE@@@Z ; FindLongestLine
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3ff3333333333333
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_wcstok:PROC
EXTRN	__imp__lstrcmpW@8:PROC
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	__imp__lstrcatW@8:PROC
EXTRN	__imp__lstrlenW@4:PROC
EXTRN	__imp__CreateFontW@56:PROC
EXTRN	__imp__CreatePen@12:PROC
EXTRN	__imp__CreateSolidBrush@4:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	__imp__GetROP2@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__GetTextExtentPoint32W@16:PROC
EXTRN	__imp__Rectangle@20:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__SetBkMode@8:PROC
EXTRN	__imp__SetROP2@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__GetTextMetricsW@8:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	__imp__DrawEdge@16:PROC
EXTRN	__imp__DrawFrameControl@16:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__PostMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__RegisterClassW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__MoveWindow@24:PROC
EXTRN	__imp__GetWindowPlacement@8:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__GetFocus@0:PROC
EXTRN	__imp__GetKeyboardState@4:PROC
EXTRN	__imp__ToAscii@20:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__GetMenu@4:PROC
EXTRN	__imp__DrawTextW@20:PROC
EXTRN	__imp__DrawTextExW@24:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__BeginPaint@8:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__SetScrollPos@16:PROC
EXTRN	__imp__GetScrollPos@8:PROC
EXTRN	__imp__SetScrollRange@20:PROC
EXTRN	__imp__GetScrollRange@16:PROC
EXTRN	__imp__ShowScrollBar@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__MessageBeep@4:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__CreateCaret@16:PROC
EXTRN	__imp__DestroyCaret@0:PROC
EXTRN	__imp__HideCaret@4:PROC
EXTRN	__imp__ShowCaret@4:PROC
EXTRN	__imp__SetCaretPos@8:PROC
EXTRN	__imp__GetParent@4:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__wtoi:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	__hypot:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
_BSS	SEGMENT
?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; `GridProc'::`531'::SI
_BSS	ENDS
;	COMDAT ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
_BSS	SEGMENT
?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; `GridProc'::`531'::cheight
_BSS	ENDS
;	COMDAT ?savewidth@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
_BSS	SEGMENT
?savewidth@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; `GridProc'::`531'::savewidth
_BSS	ENDS
;	COMDAT ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
_BSS	SEGMENT
?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; `GridProc'::`531'::saveheight
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@3ff3333333333333
CONST	SEGMENT
__real@3ff3333333333333 DQ 03ff3333333333333r	; 1.2
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_System_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_System_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_System_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_System_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_System_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_System_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iostream_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iostream_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Iostream_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Iostream_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Generic_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Generic_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Generic_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Generic_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -2024						; size = 4
_lines$ = -2020						; size = 4
_longest$ = -2016					; size = 4
_j$2 = -2012						; size = 4
_p$ = -2008						; size = 4
_temptext$ = -2004					; size = 2000
__$ArrayPad$ = -4					; size = 4
_hdc$ = 8						; size = 4
_text$ = 12						; size = 4
_size$ = 16						; size = 4
?FindLongestLine@@YAHPAUHDC__@@PA_WPAUtagSIZE@@@Z PROC	; FindLongestLine
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1282
	push	ebp
	mov	ebp, esp
	sub	esp, 2024				; 000007e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1286
	mov	DWORD PTR _longest$[ebp], 0
; Line 1287
	mov	DWORD PTR _lines$[ebp], 1
; Line 1289
	mov	DWORD PTR _j$2[ebp], 0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN7@FindLonges
$LN6@FindLonges:
	mov	ecx, DWORD PTR _j$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$2[ebp], ecx
$LN7@FindLonges:
	mov	edx, DWORD PTR _j$2[ebp]
	cmp	edx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN5@FindLonges
; Line 1291
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _text$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 10					; 0000000aH
	jne	SHORT $LN4@FindLonges
; Line 1293
	mov	eax, DWORD PTR _lines$[ebp]
	add	eax, 1
	mov	DWORD PTR _lines$[ebp], eax
$LN4@FindLonges:
; Line 1295
	jmp	SHORT $LN6@FindLonges
$LN5@FindLonges:
; Line 1296
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	lea	edx, DWORD PTR _temptext$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1297
	push	OFFSET $SG123873
	lea	eax, DWORD PTR _temptext$[ebp]
	push	eax
	call	_wcstok
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax
$LN3@FindLonges:
; Line 1298
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@FindLonges
; Line 1300
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetTextExtentPoint32W@16
; Line 1301
	mov	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR _longest$[ebp]
	jle	SHORT $LN1@FindLonges
; Line 1303
	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _longest$[ebp], edx
$LN1@FindLonges:
; Line 1305
	push	OFFSET $SG123878
	push	0
	call	_wcstok
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 1306
	jmp	SHORT $LN3@FindLonges
$LN2@FindLonges:
; Line 1307
	mov	eax, DWORD PTR _longest$[ebp]
; Line 1308
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?FindLongestLine@@YAHPAUHDC__@@PA_WPAUtagSIZE@@@Z ENDP	; FindLongestLine
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?SizeGrid@@YAXPAUHWND__@@H@Z PROC			; SizeGrid
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1275
	push	ebp
	mov	ebp, esp
; Line 1276
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+3096]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+3092]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	push	edx
	push	2
	push	5
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1277
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+3096]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+3092]
	and	eax, 65535				; 0000ffffH
	movzx	edx, ax
	shl	edx, 16					; 00000010H
	or	ecx, edx
	push	ecx
	push	2
	push	5
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1279
	pop	ebp
	ret	0
?SizeGrid@@YAXPAUHWND__@@H@Z ENDP			; SizeGrid
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cell$ = -16						; size = 8
_c$ = -8						; size = 4
_r$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?CloseEdit@@YAXPAUHWND__@@H@Z PROC			; CloseEdit
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1128
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 1131
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	mov	DWORD PTR _r$[ebp], ecx
; Line 1132
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	mov	DWORD PTR _c$[ebp], eax
; Line 1133
	mov	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR _cell$[ebp], ecx
; Line 1134
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _cell$[ebp+4], edx
; Line 1135
	imul	eax, DWORD PTR _SI$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	eax
	lea	ecx, DWORD PTR _cell$[ebp]
	push	ecx
	push	8027					; 00001f5bH
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1136
	push	OFFSET $SG123756
	imul	eax, DWORD PTR _SI$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1137
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1138
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
; Line 1139
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__HideCaret@4
; Line 1140
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyEditEnd@@YAXPAUHWND__@@H@Z	; NotifyEditEnd
	add	esp, 8
; Line 1141
	mov	esp, ebp
	pop	ebp
	ret	0
?CloseEdit@@YAXPAUHWND__@@H@Z ENDP			; CloseEdit
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_value$ = -12						; size = 4
_count$ = -8						; size = 4
_j$ = -4						; size = 4
___formal$ = 8						; size = 4
_SI$ = 12						; size = 4
_n$ = 16						; size = 4
?GetNthVisibleColumn@@YAHPAUHWND__@@HH@Z PROC		; GetNthVisibleColumn
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1105
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 1108
	mov	DWORD PTR _j$[ebp], 1
; Line 1109
	mov	DWORD PTR _count$[ebp], 0
; Line 1110
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	DWORD PTR _value$[ebp], eax
$LN4@GetNthVisi:
; Line 1111
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1848]
	jg	SHORT $LN3@GetNthVisi
; Line 1113
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060], 0
	jle	SHORT $LN2@GetNthVisi
; Line 1115
	mov	edx, DWORD PTR _count$[ebp]
	add	edx, 1
	mov	DWORD PTR _count$[ebp], edx
; Line 1116
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jne	SHORT $LN2@GetNthVisi
; Line 1118
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _value$[ebp], ecx
$LN2@GetNthVisi:
; Line 1121
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
; Line 1122
	jmp	SHORT $LN4@GetNthVisi
$LN3@GetNthVisi:
; Line 1123
	mov	eax, DWORD PTR _value$[ebp]
; Line 1124
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNthVisibleColumn@@YAHPAUHWND__@@HH@Z ENDP		; GetNthVisibleColumn
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_value$ = -8						; size = 4
_j$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?GetVisibleColumns@@YAXPAUHWND__@@H@Z PROC		; GetVisibleColumns
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1089
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1092
	mov	DWORD PTR _value$[ebp], 0
; Line 1093
	mov	DWORD PTR _j$[ebp], 1
	jmp	SHORT $LN4@GetVisible
$LN3@GetVisible:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN4@GetVisible:
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1848]
	jg	SHORT $LN2@GetVisible
; Line 1095
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060], 0
	jle	SHORT $LN1@GetVisible
; Line 1097
	mov	edx, DWORD PTR _value$[ebp]
	add	edx, 1
	mov	DWORD PTR _value$[ebp], edx
$LN1@GetVisible:
; Line 1099
	jmp	SHORT $LN3@GetVisible
$LN2@GetVisible:
; Line 1100
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1904], ecx
; Line 1101
	push	1
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetScrollRange@20
; Line 1102
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVisibleColumns@@YAXPAUHWND__@@H@Z ENDP		; GetVisibleColumns
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyCellRClicked@@YAXPAUHWND__@@H@Z PROC		; NotifyCellRClicked
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1081
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1084
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 1085
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 1769472				; 001b0000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 1086
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1087
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyCellRClicked@@YAXPAUHWND__@@H@Z ENDP		; NotifyCellRClicked
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyCellDbClicked@@YAXPAUHWND__@@H@Z PROC		; NotifyCellDbClicked
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1072
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1075
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 1076
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 1703936				; 001a0000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 1077
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1078
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyCellDbClicked@@YAXPAUHWND__@@H@Z ENDP		; NotifyCellDbClicked
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyCellClicked@@YAXPAUHWND__@@H@Z PROC		; NotifyCellClicked
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1062
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1065
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 1066
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 1638400				; 00190000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 1067
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1069
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyCellClicked@@YAXPAUHWND__@@H@Z ENDP		; NotifyCellClicked
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyEditEnd@@YAXPAUHWND__@@H@Z PROC			; NotifyEditEnd
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 931
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 934
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 935
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 655360				; 000a0000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 936
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 938
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyEditEnd@@YAXPAUHWND__@@H@Z ENDP			; NotifyEditEnd
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyEditBegin@@YAXPAUHWND__@@H@Z PROC		; NotifyEditBegin
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 921
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 924
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 925
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 524288				; 00080000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 926
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 928
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyEditBegin@@YAXPAUHWND__@@H@Z ENDP		; NotifyEditBegin
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyDelete@@YAXPAUHWND__@@H@Z PROC			; NotifyDelete
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 910
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 913
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 914
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 589824				; 00090000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 915
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 917
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyDelete@@YAXPAUHWND__@@H@Z ENDP			; NotifyDelete
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wParam$ = -8						; size = 4
_lParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyEndEdit@@YAXPAUHWND__@@H@Z PROC			; NotifyEndEdit
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 899
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 902
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 903
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 655360				; 000a0000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 904
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 906
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyEndEdit@@YAXPAUHWND__@@H@Z ENDP			; NotifyEndEdit
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_lParam$ = -8						; size = 4
_wParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyColChanged@@YAXPAUHWND__@@H@Z PROC		; NotifyColChanged
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 886
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 889
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 890
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 458752				; 00070000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 891
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 892
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 327680				; 00050000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 893
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyColChanged@@YAXPAUHWND__@@H@Z ENDP		; NotifyColChanged
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_lParam$ = -8						; size = 4
_wParam$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?NotifyRowChanged@@YAXPAUHWND__@@H@Z PROC		; NotifyRowChanged
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 874
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 877
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	and	ecx, 65535				; 0000ffffH
	movzx	eax, cx
	shl	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _lParam$[ebp], edx
; Line 878
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 393216				; 00060000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 879
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 880
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	or	eax, 327680				; 00050000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 881
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 882
	mov	esp, ebp
	pop	ebp
	ret	0
?NotifyRowChanged@@YAXPAUHWND__@@H@Z ENDP		; NotifyRowChanged
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -236						; size = 16
$T2 = -220						; size = 16
$T3 = -204						; size = 16
$T4 = -188						; size = 16
$T5 = -172						; size = 16
$T6 = -156						; size = 16
_k$7 = -140						; size = 4
_LASTCOLVISIBLE$ = -136					; size = 4
_gridrect$ = -132					; size = 16
$T8 = -116						; size = 16
$T9 = -100						; size = 16
$T10 = -84						; size = 16
$T11 = -68						; size = 16
$T12 = -52						; size = 16
$T13 = -36						; size = 16
_cellrect$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
_row$ = 16						; size = 4
_col$ = 20						; size = 4
?SetHomeCol@@YAXPAUHWND__@@HHH@Z PROC			; SetHomeCol
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 752
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 756
	lea	eax, DWORD PTR _gridrect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 758
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T9[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T9[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T9[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T9[ebp+12], edx
	mov	eax, DWORD PTR $T9[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T9[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T9[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T9[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
$LN8@SetHomeCol:
; Line 760
	mov	ecx, DWORD PTR _cellrect$[ebp+8]
	cmp	ecx, DWORD PTR _gridrect$[ebp+8]
	jle	$LN7@SetHomeCol
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _cellrect$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+ecx+2060]
	je	$LN7@SetHomeCol
; Line 763
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	add	edx, 1
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864], edx
; Line 765
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1848]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T11[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T11[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T11[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T11[ebp+12], edx
	mov	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T11[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T11[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T11[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
; Line 766
	mov	ecx, DWORD PTR _cellrect$[ebp+8]
	cmp	ecx, DWORD PTR _gridrect$[ebp+8]
	jg	SHORT $LN6@SetHomeCol
; Line 768
	mov	DWORD PTR _LASTCOLVISIBLE$[ebp], 1
; Line 770
	jmp	SHORT $LN5@SetHomeCol
$LN6@SetHomeCol:
; Line 772
	mov	DWORD PTR _LASTCOLVISIBLE$[ebp], 0
$LN5@SetHomeCol:
; Line 774
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T10[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T10[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T10[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T10[ebp+12], edx
	mov	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T10[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T10[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T10[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
; Line 775
	push	0
	lea	ecx, DWORD PTR _gridrect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 776
	jmp	$LN8@SetHomeCol
$LN7@SetHomeCol:
; Line 777
	mov	eax, DWORD PTR _col$[ebp]
	push	eax
	mov	ecx, DWORD PTR _row$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SI$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T8[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T8[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T8[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR $T8[ebp+12], eax
	mov	ecx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _cellrect$[ebp], ecx
	mov	edx, DWORD PTR $T8[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], edx
	mov	eax, DWORD PTR $T8[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], eax
	mov	ecx, DWORD PTR $T8[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], ecx
$LN4@SetHomeCol:
; Line 778
	imul	edx, DWORD PTR _SI$[ebp], 3100
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864]
	jge	$LN3@SetHomeCol
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1864], 1
	jle	$LN3@SetHomeCol
; Line 782
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864]
	sub	ecx, 1
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1864], ecx
; Line 784
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1848]
	push	ecx
	mov	edx, DWORD PTR _row$[ebp]
	push	edx
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T13[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T13[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T13[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T13[ebp+12], edx
	mov	eax, DWORD PTR $T13[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T13[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T13[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T13[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
; Line 785
	mov	ecx, DWORD PTR _cellrect$[ebp+8]
	cmp	ecx, DWORD PTR _gridrect$[ebp+8]
	jg	SHORT $LN2@SetHomeCol
; Line 787
	mov	DWORD PTR _LASTCOLVISIBLE$[ebp], 1
; Line 789
	jmp	SHORT $LN1@SetHomeCol
$LN2@SetHomeCol:
; Line 791
	mov	DWORD PTR _LASTCOLVISIBLE$[ebp], 0
$LN1@SetHomeCol:
; Line 794
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T12[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T12[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T12[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T12[ebp+12], edx
	mov	eax, DWORD PTR $T12[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T12[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T12[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T12[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
; Line 795
	push	0
	lea	ecx, DWORD PTR _gridrect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 796
	jmp	$LN4@SetHomeCol
$LN3@SetHomeCol:
; Line 799
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	call	?HomeColumnNthVisible@@YAHH@Z		; HomeColumnNthVisible
	add	esp, 4
	mov	DWORD PTR _k$7[ebp], eax
; Line 800
	push	1
	mov	ecx, DWORD PTR _k$7[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 802
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetHomeCol@@YAXPAUHWND__@@HHH@Z ENDP			; SetHomeCol
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -164						; size = 16
$T2 = -148						; size = 16
$T3 = -132						; size = 16
$T4 = -116						; size = 16
$T5 = -100						; size = 16
$T6 = -84						; size = 16
$T7 = -68						; size = 16
$T8 = -52						; size = 16
_gridrect$ = -36					; size = 16
_cellrect$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
_row$ = 16						; size = 4
_col$ = 20						; size = 4
?SetHomeRow@@YAXPAUHWND__@@HHH@Z PROC			; SetHomeRow
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 706
	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 709
	lea	eax, DWORD PTR _gridrect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 711
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T7[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T7[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T7[ebp+12], edx
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T7[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T7[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T7[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
; Line 712
	mov	ecx, DWORD PTR _cellrect$[ebp+12]
	cmp	ecx, DWORD PTR _gridrect$[ebp+12]
	jle	$LN9@SetHomeRow
	mov	edx, DWORD PTR _cellrect$[ebp+12]
	sub	edx, DWORD PTR _cellrect$[ebp+4]
	imul	eax, DWORD PTR _SI$[ebp], 3100
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1888]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1908]
	mov	ecx, DWORD PTR _gridrect$[ebp+12]
	sub	ecx, eax
	cmp	edx, ecx
	jge	$LN9@SetHomeRow
$LN8@SetHomeRow:
; Line 714
	mov	edx, DWORD PTR _cellrect$[ebp+12]
	cmp	edx, DWORD PTR _gridrect$[ebp+12]
	jle	$LN7@SetHomeRow
; Line 716
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860]
	add	ecx, 1
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1860], ecx
; Line 717
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _row$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844]
	jne	SHORT $LN6@SetHomeRow
; Line 719
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _gridrect$[ebp+12]
	sub	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868]
	mov	DWORD PTR _gridrect$[ebp+4], eax
; Line 720
	push	1
	lea	ecx, DWORD PTR _gridrect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 722
	jmp	SHORT $LN5@SetHomeRow
$LN6@SetHomeRow:
; Line 724
	push	0
	lea	eax, DWORD PTR _gridrect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
$LN5@SetHomeRow:
; Line 726
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T6[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T6[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T6[ebp+12], edx
	mov	eax, DWORD PTR $T6[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T6[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T6[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
; Line 727
	jmp	$LN8@SetHomeRow
$LN7@SetHomeRow:
; Line 729
	jmp	SHORT $LN4@SetHomeRow
$LN9@SetHomeRow:
; Line 731
	mov	ecx, DWORD PTR _cellrect$[ebp+12]
	sub	ecx, DWORD PTR _cellrect$[ebp+4]
	imul	edx, DWORD PTR _SI$[ebp], 3100
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1888]
	add	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1908]
	mov	eax, DWORD PTR _gridrect$[ebp+12]
	sub	eax, edx
	cmp	ecx, eax
	jl	SHORT $LN4@SetHomeRow
; Line 733
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860]
	add	edx, 1
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860], edx
$LN4@SetHomeRow:
; Line 736
	mov	ecx, DWORD PTR _col$[ebp]
	push	ecx
	mov	edx, DWORD PTR _row$[ebp]
	push	edx
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T8[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T8[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T8[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T8[ebp+12], edx
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T8[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T8[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T8[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
$LN2@SetHomeRow:
; Line 738
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _row$[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860]
	jge	$LN1@SetHomeRow
; Line 740
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860]
	sub	ecx, 1
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1860], ecx
; Line 741
	push	0
	lea	eax, DWORD PTR _gridrect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 742
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T5[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T5[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T5[ebp+12], edx
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _cellrect$[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp+4]
	mov	DWORD PTR _cellrect$[ebp+4], ecx
	mov	edx, DWORD PTR $T5[ebp+8]
	mov	DWORD PTR _cellrect$[ebp+8], edx
	mov	eax, DWORD PTR $T5[ebp+12]
	mov	DWORD PTR _cellrect$[ebp+12], eax
; Line 743
	jmp	$LN2@SetHomeRow
$LN1@SetHomeRow:
; Line 746
	push	1
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860]
	push	edx
	push	1
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetScrollPos@16
; Line 747
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetHomeRow@@YAXPAUHWND__@@HHH@Z ENDP			; SetHomeRow
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_result$ = -476						; size = 4
tv72 = -472						; size = 4
_dwReturnedValue$ = -468				; size = 2
_returnvalue$ = -464					; size = 4
_mbuffer$ = -460					; size = 200
_keys$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?GetASCII@@YA_WIJ@Z PROC				; GetASCII
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 687
	push	ebp
	mov	ebp, esp
	sub	esp, 476				; 000001dcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 693
	lea	eax, DWORD PTR _keys$[ebp]
	push	eax
	call	DWORD PTR __imp__GetKeyboardState@4
; Line 694
	mov	ecx, DWORD PTR _lParam$[ebp]
	sar	ecx, 16					; 00000010H
	test	ecx, ecx
	je	SHORT $LN5@GetASCII
	mov	edx, 255				; 000000ffH
	test	edx, edx
	je	SHORT $LN5@GetASCII
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN6@GetASCII
$LN5@GetASCII:
	mov	DWORD PTR tv72[ebp], 0
$LN6@GetASCII:
	push	0
	lea	eax, DWORD PTR _dwReturnedValue$[ebp]
	push	eax
	lea	ecx, DWORD PTR _keys$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	call	DWORD PTR __imp__ToAscii@20
	mov	DWORD PTR _result$[ebp], eax
; Line 695
	movzx	ecx, WORD PTR _dwReturnedValue$[ebp]
	mov	DWORD PTR _returnvalue$[ebp], ecx
; Line 696
	cmp	DWORD PTR _returnvalue$[ebp], 0
	jge	SHORT $LN2@GetASCII
	mov	DWORD PTR _returnvalue$[ebp], 0
$LN2@GetASCII:
; Line 697
	mov	edx, DWORD PTR _returnvalue$[ebp]
	push	edx
	push	OFFSET $SG123424
	lea	eax, DWORD PTR _mbuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
; Line 698
	cmp	DWORD PTR _result$[ebp], 1
	je	SHORT $LN1@GetASCII
	mov	DWORD PTR _returnvalue$[ebp], 0
$LN1@GetASCII:
; Line 699
	mov	ax, WORD PTR _returnvalue$[ebp]
; Line 701
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetASCII@@YA_WIJ@Z ENDP				; GetASCII
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_SelfIndex$ = 12					; size = 4
?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z PROC		; SetCurrentCellStatus
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 671
	push	ebp
	mov	ebp, esp
; Line 672
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	call	?SetCell@@YAXPAU_BGCELL@@HH@Z		; SetCell
	add	esp, 12					; 0000000cH
; Line 673
	push	0
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	push	8038					; 00001f66H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	test	eax, eax
	je	SHORT $LN2@SetCurrent
; Line 675
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1952], 1
; Line 677
	jmp	SHORT $LN3@SetCurrent
$LN2@SetCurrent:
; Line 679
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1952], 0
$LN3@SetCurrent:
; Line 682
	pop	ebp
	ret	0
?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ENDP		; SetCurrentCellStatus
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -84						; size = 16
_holdpen$ = -68						; size = 4
_rop$ = -64						; size = 4
_hpen$ = -60						; size = 4
_gdc$ = -56						; size = 4
_rectwhole$ = -52					; size = 16
$T2 = -36						; size = 16
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?DrawCursor@@YAXPAUHWND__@@H@Z PROC			; DrawCursor
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 642
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 647
	imul	eax, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844], 0
	jne	SHORT $LN3@DrawCursor
	jmp	$LN4@DrawCursor
$LN3@DrawCursor:
; Line 648
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 650
	imul	eax, DWORD PTR _SI$[ebp], 3100
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860]
	jge	SHORT $LN2@DrawCursor
	jmp	$LN4@DrawCursor
$LN2@DrawCursor:
; Line 652
	imul	eax, DWORD PTR _SI$[ebp], 3100
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	jge	SHORT $LN1@DrawCursor
	jmp	$LN4@DrawCursor
$LN1@DrawCursor:
; Line 654
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T2[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T2[ebp+12], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _rect$[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR _rect$[ebp+4], ecx
	mov	edx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR _rect$[ebp+8], edx
	mov	eax, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR _rect$[ebp+12], eax
; Line 655
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _rectwhole$[ebp], ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR _rectwhole$[ebp+4], edx
	mov	eax, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR _rectwhole$[ebp+8], eax
	mov	ecx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR _rectwhole$[ebp+12], ecx
; Line 656
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _gdc$[ebp], eax
; Line 657
	imul	eax, DWORD PTR _SI$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+1964
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [eax+12], edx
; Line 658
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__GetROP2@4
	mov	DWORD PTR _rop$[ebp], eax
; Line 659
	push	7
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetROP2@8
; Line 660
	push	5
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
; Line 661
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1916]
	push	ecx
	push	3
	push	0
	call	DWORD PTR __imp__CreatePen@12
	mov	DWORD PTR _hpen$[ebp], eax
; Line 662
	mov	edx, DWORD PTR _hpen$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdpen$[ebp], eax
; Line 663
	mov	ecx, DWORD PTR _rect$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _rect$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__Rectangle@20
; Line 664
	mov	eax, DWORD PTR _holdpen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
; Line 665
	mov	edx, DWORD PTR _hpen$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteObject@4
; Line 666
	mov	eax, DWORD PTR _rop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetROP2@8
; Line 667
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ReleaseDC@8
$LN4@DrawCursor:
; Line 668
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawCursor@@YAXPAUHWND__@@H@Z ENDP			; DrawCursor
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_holdbrush$1 = -2164					; size = 4
_holdpen$2 = -2160					; size = 4
_holdbrush$3 = -2156					; size = 4
_holdbrush$4 = -2152					; size = 4
_wParam$5 = -2148					; size = 4
_holdpen$6 = -2144					; size = 4
_holdpen$7 = -2140					; size = 4
_excess$8 = -2136					; size = 4
_iProtection$ = -2132					; size = 4
_k$9 = -2128						; size = 4
_hpen$10 = -2124					; size = 4
_excess$11 = -2120					; size = 4
_k$12 = -2116						; size = 4
_holdfont$ = -2112					; size = 4
_low$13 = -2108						; size = 4
_high$14 = -2104					; size = 4
_hbrush$15 = -2100					; size = 4
_r$ = -2096						; size = 4
_iDataType$ = -2092					; size = 4
_gdc$ = -2088						; size = 4
_trect$16 = -2084					; size = 16
_trect$17 = -2068					; size = 16
_trect$18 = -2052					; size = 16
_rectsave$ = -2036					; size = 16
_rect$ = -2020						; size = 16
_buffer$ = -2004					; size = 2000
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
_c$ = 16						; size = 4
_offset$ = 20						; size = 4
_hfont$ = 24						; size = 4
_hcolumnheadingfont$ = 28				; size = 4
?DisplayColumn@@YAXPAUHWND__@@HHHPAUHFONT__@@1@Z PROC	; DisplayColumn
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 2164				; 00000874H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 365
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060], 0
	jne	SHORT $LN42@DisplayCol
	jmp	$LN43@DisplayCol
$LN42@DisplayCol:
; Line 367
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _gdc$[ebp], eax
; Line 368
	push	1
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SetBkMode@8
; Line 369
	mov	ecx, DWORD PTR _SI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?ShowHscroll@@YAXPAUHWND__@@H@Z		; ShowHscroll
	add	esp, 8
; Line 370
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?ShowVscroll@@YAXPAUHWND__@@H@Z		; ShowVscroll
	add	esp, 8
; Line 373
	mov	edx, DWORD PTR _hcolumnheadingfont$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdfont$[ebp], eax
; Line 374
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1928]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SetTextColor@8
; Line 376
	mov	DWORD PTR _r$[ebp], 0
; Line 380
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _rect$[ebp], ecx
; Line 381
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	mov	DWORD PTR _rect$[ebp+4], eax
; Line 382
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+edx*4+2060]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _rect$[ebp+8], eax
; Line 383
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1888]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	mov	DWORD PTR _rect$[ebp+12], eax
; Line 385
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2008], 0
	je	SHORT $LN41@DisplayCol
; Line 388
	push	1
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	call	?GetNextColWithWidth@@YAHHHH@Z		; GetNextColWithWidth
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN40@DisplayCol
; Line 392
	lea	ecx, DWORD PTR _trect$16[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 394
	mov	eax, DWORD PTR _trect$16[ebp+8]
	sub	eax, DWORD PTR _rect$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _rect$[ebp+8], eax
$LN40@DisplayCol:
; Line 397
	jmp	$LN39@DisplayCol
$LN41@DisplayCol:
; Line 399
	push	1
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SI$[ebp]
	push	edx
	call	?GetNextColWithWidth@@YAHHHH@Z		; GetNextColWithWidth
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN39@DisplayCol
; Line 405
	lea	eax, DWORD PTR _trect$17[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 406
	mov	edx, DWORD PTR _rect$[ebp+8]
	sub	edx, DWORD PTR _rect$[ebp]
	add	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _trect$17[ebp], edx
; Line 407
	push	2
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdbrush$1[ebp], eax
; Line 408
	push	8
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdpen$2[ebp], eax
; Line 409
	mov	edx, DWORD PTR _trect$17[ebp+12]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _trect$17[ebp+8]
	add	eax, 1
	push	eax
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _trect$17[ebp+4]
	add	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1908]
	push	edx
	mov	eax, DWORD PTR _trect$17[ebp]
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__Rectangle@20
; Line 410
	mov	edx, DWORD PTR _holdbrush$1[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
; Line 411
	mov	ecx, DWORD PTR _holdpen$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
$LN39@DisplayCol:
; Line 416
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	call	?SetCell@@YAXPAU_BGCELL@@HH@Z		; SetCell
	add	esp, 12					; 0000000cH
; Line 417
	push	OFFSET $SG123291
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 418
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	push	8028					; 00001f5cH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 419
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1996], 0
	je	$LN37@DisplayCol
; Line 421
	cmp	DWORD PTR _c$[ebp], 0
	jle	$LN37@DisplayCol
; Line 424
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 1
	cdq
	mov	ecx, 26					; 0000001aH
	idiv	ecx
	mov	DWORD PTR _high$14[ebp], eax
; Line 425
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 26					; 0000001aH
	idiv	ecx
	mov	DWORD PTR _low$13[ebp], edx
; Line 426
	cmp	DWORD PTR _high$14[ebp], 0
	jne	SHORT $LN35@DisplayCol
	mov	DWORD PTR _high$14[ebp], 32		; 00000020H
	jmp	SHORT $LN34@DisplayCol
$LN35@DisplayCol:
	mov	edx, DWORD PTR _high$14[ebp]
	add	edx, 64					; 00000040H
	mov	DWORD PTR _high$14[ebp], edx
$LN34@DisplayCol:
; Line 427
	cmp	DWORD PTR _low$13[ebp], 0
	jne	SHORT $LN33@DisplayCol
	mov	DWORD PTR _low$13[ebp], 26		; 0000001aH
$LN33@DisplayCol:
; Line 428
	mov	eax, DWORD PTR _low$13[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR _low$13[ebp], eax
; Line 429
	mov	ecx, DWORD PTR _low$13[ebp]
	push	ecx
	mov	edx, DWORD PTR _high$14[ebp]
	push	edx
	push	OFFSET $SG123301
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
$LN37@DisplayCol:
; Line 432
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _rectsave$[ebp], ecx
	mov	edx, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR _rectsave$[ebp+4], edx
	mov	eax, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR _rectsave$[ebp+8], eax
	mov	ecx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR _rectsave$[ebp+12], ecx
; Line 433
	push	10255					; 0000280fH
	push	6
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawEdge@16
; Line 434
	push	0
	push	34833					; 00008811H
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	push	-1
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawTextExW@24
; Line 435
	mov	ecx, DWORD PTR _rectsave$[ebp]
	mov	DWORD PTR _rect$[ebp], ecx
	mov	edx, DWORD PTR _rectsave$[ebp+4]
	mov	DWORD PTR _rect$[ebp+4], edx
	mov	eax, DWORD PTR _rectsave$[ebp+8]
	mov	DWORD PTR _rect$[ebp+8], eax
	mov	ecx, DWORD PTR _rectsave$[ebp+12]
	mov	DWORD PTR _rect$[ebp+12], ecx
; Line 437
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1880]
	mov	DWORD PTR _r$[ebp], eax
; Line 439
	mov	ecx, DWORD PTR _hfont$[ebp]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
$LN32@DisplayCol:
; Line 440
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _r$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1884]
	jg	$LN31@DisplayCol
; Line 444
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _r$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	jne	SHORT $LN30@DisplayCol
	cmp	DWORD PTR _c$[ebp], 0
	jle	SHORT $LN30@DisplayCol
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1944], 0
	je	SHORT $LN30@DisplayCol
; Line 446
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1956], 0
	je	SHORT $LN29@DisplayCol
; Line 448
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1940]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SetTextColor@8
; Line 450
	jmp	SHORT $LN28@DisplayCol
$LN29@DisplayCol:
; Line 452
	push	0
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SetTextColor@8
$LN28@DisplayCol:
; Line 455
	jmp	SHORT $LN27@DisplayCol
$LN30@DisplayCol:
; Line 457
	push	0
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8
$LN27@DisplayCol:
; Line 460
	mov	edx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR _rect$[ebp+4], edx
; Line 461
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _rect$[ebp+4]
	add	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1868]
	mov	DWORD PTR _rect$[ebp+12], ecx
; Line 462
	mov	edx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _rectsave$[ebp], edx
	mov	eax, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR _rectsave$[ebp+4], eax
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR _rectsave$[ebp+8], ecx
	mov	edx, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR _rectsave$[ebp+12], edx
; Line 463
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	call	?SetCell@@YAXPAU_BGCELL@@HH@Z		; SetCell
	add	esp, 12					; 0000000cH
; Line 464
	push	OFFSET $SG123321
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 465
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	push	8028					; 00001f5cH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 466
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN26@DisplayCol
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1992], 0
	je	SHORT $LN26@DisplayCol
; Line 468
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	push	OFFSET $SG123325
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
$LN26@DisplayCol:
; Line 470
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN25@DisplayCol
; Line 472
	push	10255					; 0000280fH
	push	6
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawEdge@16
; Line 475
	jmp	$LN24@DisplayCol
$LN25@DisplayCol:
; Line 479
	push	0
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	push	8038					; 00001f66H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iProtection$[ebp], eax
; Line 480
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1944], 0
	je	$LN23@DisplayCol
; Line 482
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _r$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	jne	SHORT $LN22@DisplayCol
; Line 484
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1956], 0
	je	SHORT $LN21@DisplayCol
; Line 486
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1932]
	push	ecx
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _hbrush$15[ebp], eax
; Line 488
	jmp	SHORT $LN20@DisplayCol
$LN21@DisplayCol:
; Line 490
	push	13158600				; 00c8c8c8H
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _hbrush$15[ebp], eax
$LN20@DisplayCol:
; Line 494
	jmp	SHORT $LN19@DisplayCol
$LN22@DisplayCol:
; Line 496
	cmp	DWORD PTR _iProtection$[ebp], 1
	jne	SHORT $LN18@DisplayCol
; Line 498
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1920]
	push	eax
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _hbrush$15[ebp], eax
; Line 500
	jmp	SHORT $LN19@DisplayCol
$LN18@DisplayCol:
; Line 502
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1924]
	push	edx
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _hbrush$15[ebp], eax
$LN19@DisplayCol:
; Line 506
	jmp	SHORT $LN16@DisplayCol
$LN23@DisplayCol:
; Line 508
	cmp	DWORD PTR _iProtection$[ebp], 1
	jne	SHORT $LN15@DisplayCol
; Line 510
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1920]
	push	ecx
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _hbrush$15[ebp], eax
; Line 512
	jmp	SHORT $LN16@DisplayCol
$LN15@DisplayCol:
; Line 514
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1924]
	push	eax
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _hbrush$15[ebp], eax
$LN16@DisplayCol:
; Line 518
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1936]
	push	edx
	push	1
	push	0
	call	DWORD PTR __imp__CreatePen@12
	mov	DWORD PTR _hpen$10[ebp], eax
; Line 519
	mov	eax, DWORD PTR _hbrush$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdbrush$4[ebp], eax
; Line 520
	mov	edx, DWORD PTR _hpen$10[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdpen$6[ebp], eax
; Line 521
	mov	ecx, DWORD PTR _rect$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _rect$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__Rectangle@20
; Line 522
	mov	eax, DWORD PTR _holdbrush$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
; Line 523
	mov	edx, DWORD PTR _holdpen$6[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
; Line 524
	mov	ecx, DWORD PTR _hbrush$15[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
; Line 525
	mov	edx, DWORD PTR _hpen$10[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteObject@4
$LN24@DisplayCol:
; Line 527
	mov	eax, DWORD PTR _rect$[ebp+8]
	sub	eax, 2
	mov	DWORD PTR _rect$[ebp+8], eax
; Line 528
	mov	ecx, DWORD PTR _rect$[ebp]
	add	ecx, 2
	mov	DWORD PTR _rect$[ebp], ecx
; Line 530
	push	0
	push	OFFSET ?BGcell@@3U_BGCELL@@A		; BGcell
	push	8037					; 00001f65H
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _iDataType$[ebp], eax
; Line 531
	cmp	DWORD PTR _iDataType$[ebp], 1
	jl	SHORT $LN12@DisplayCol
	cmp	DWORD PTR _iDataType$[ebp], 5
	jle	SHORT $LN13@DisplayCol
$LN12@DisplayCol:
; Line 533
	mov	DWORD PTR _iDataType$[ebp], 1
$LN13@DisplayCol:
; Line 535
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN11@DisplayCol
	mov	DWORD PTR _iDataType$[ebp], 2
$LN11@DisplayCol:
; Line 537
	cmp	DWORD PTR _iDataType$[ebp], 1
	jne	SHORT $LN10@DisplayCol
; Line 539
	imul	eax, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2028], 0
	je	SHORT $LN9@DisplayCol
; Line 541
	push	0
	push	34852					; 00008824H
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	push	-1
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawTextExW@24
; Line 543
	jmp	SHORT $LN10@DisplayCol
$LN9@DisplayCol:
; Line 545
	push	0
	push	10256					; 00002810H
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	push	-1
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawTextExW@24
$LN10@DisplayCol:
; Line 549
	cmp	DWORD PTR _iDataType$[ebp], 2
	jne	SHORT $LN7@DisplayCol
; Line 551
	push	0
	push	34854					; 00008826H
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	push	-1
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawTextExW@24
$LN7@DisplayCol:
; Line 554
	cmp	DWORD PTR _iDataType$[ebp], 3
	jne	$LN6@DisplayCol
; Line 557
	mov	DWORD PTR _k$12[ebp], 2
; Line 558
	mov	ecx, DWORD PTR _rect$[ebp+4]
	add	ecx, DWORD PTR _k$12[ebp]
	mov	DWORD PTR _rect$[ebp+4], ecx
; Line 559
	mov	edx, DWORD PTR _rect$[ebp+12]
	sub	edx, DWORD PTR _k$12[ebp]
	mov	DWORD PTR _rect$[ebp+12], edx
; Line 560
	mov	eax, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _rect$[ebp], eax
; Line 561
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR _rect$[ebp+8], ecx
; Line 562
	mov	edx, DWORD PTR _rect$[ebp+12]
	sub	edx, DWORD PTR _rect$[ebp+4]
	cmp	edx, 24					; 00000018H
	jle	SHORT $LN5@DisplayCol
; Line 564
	mov	eax, DWORD PTR _rect$[ebp+12]
	sub	eax, DWORD PTR _rect$[ebp+4]
	sub	eax, 16					; 00000010H
	mov	DWORD PTR _excess$11[ebp], eax
; Line 565
	mov	eax, DWORD PTR _excess$11[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR _rect$[ebp+4], eax
; Line 566
	mov	eax, DWORD PTR _excess$11[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _rect$[ebp+12]
	sub	ecx, eax
	mov	DWORD PTR _rect$[ebp+12], ecx
$LN5@DisplayCol:
; Line 568
	push	1024					; 00000400H
	push	4
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawFrameControl@16
$LN6@DisplayCol:
; Line 571
	cmp	DWORD PTR _iDataType$[ebp], 4
	jne	$LN4@DisplayCol
; Line 574
	mov	DWORD PTR _k$9[ebp], 2
; Line 575
	mov	ecx, DWORD PTR _rect$[ebp+4]
	add	ecx, DWORD PTR _k$9[ebp]
	mov	DWORD PTR _rect$[ebp+4], ecx
; Line 576
	mov	edx, DWORD PTR _rect$[ebp+12]
	sub	edx, DWORD PTR _k$9[ebp]
	mov	DWORD PTR _rect$[ebp+12], edx
; Line 577
	mov	eax, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _rect$[ebp], eax
; Line 578
	mov	ecx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR _rect$[ebp+8], ecx
; Line 579
	mov	edx, DWORD PTR _rect$[ebp+12]
	sub	edx, DWORD PTR _rect$[ebp+4]
	cmp	edx, 24					; 00000018H
	jle	SHORT $LN3@DisplayCol
; Line 581
	mov	eax, DWORD PTR _rect$[ebp+12]
	sub	eax, DWORD PTR _rect$[ebp+4]
	sub	eax, 16					; 00000010H
	mov	DWORD PTR _excess$8[ebp], eax
; Line 582
	mov	eax, DWORD PTR _excess$8[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR _rect$[ebp+4], eax
; Line 583
	mov	eax, DWORD PTR _excess$8[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _rect$[ebp+12]
	sub	ecx, eax
	mov	DWORD PTR _rect$[ebp+12], ecx
$LN3@DisplayCol:
; Line 587
	push	0
	push	4
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawFrameControl@16
$LN4@DisplayCol:
; Line 590
	cmp	DWORD PTR _iDataType$[ebp], 5
	jne	SHORT $LN2@DisplayCol
; Line 593
	mov	ecx, 2
	imul	edx, ecx, 0
	mov	eax, 32					; 00000020H
	mov	WORD PTR _buffer$[ebp+edx], ax
; Line 594
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	__wtoi
	add	esp, 4
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1900], eax
; Line 595
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	or	ecx, 262144				; 00040000H
	mov	DWORD PTR _wParam$5[ebp], ecx
; Line 596
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$5[ebp]
	push	eax
	push	273					; 00000111H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN2@DisplayCol:
; Line 599
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
	je	SHORT $LN1@DisplayCol
; Line 601
	push	OFFSET $SG123384
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z ; DisplayEditString
	add	esp, 12					; 0000000cH
$LN1@DisplayCol:
; Line 604
	mov	edx, DWORD PTR _rectsave$[ebp]
	mov	DWORD PTR _rect$[ebp], edx
	mov	eax, DWORD PTR _rectsave$[ebp+4]
	mov	DWORD PTR _rect$[ebp+4], eax
	mov	ecx, DWORD PTR _rectsave$[ebp+8]
	mov	DWORD PTR _rect$[ebp+8], ecx
	mov	edx, DWORD PTR _rectsave$[ebp+12]
	mov	DWORD PTR _rect$[ebp+12], edx
; Line 605
	mov	eax, DWORD PTR _r$[ebp]
	add	eax, 1
	mov	DWORD PTR _r$[ebp], eax
; Line 606
	jmp	$LN32@DisplayCol
$LN31@DisplayCol:
; Line 613
	lea	ecx, DWORD PTR _trect$18[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 614
	mov	eax, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR _trect$18[ebp+4], eax
; Line 615
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _trect$18[ebp], ecx
; Line 616
	mov	edx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR _trect$18[ebp+8], edx
; Line 618
	push	2
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdbrush$3[ebp], eax
; Line 619
	push	8
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdpen$7[ebp], eax
; Line 621
	mov	edx, DWORD PTR _trect$18[ebp+12]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _trect$18[ebp+8]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _trect$18[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _trect$18[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__Rectangle@20
; Line 623
	mov	ecx, DWORD PTR _holdbrush$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
; Line 624
	mov	eax, DWORD PTR _holdpen$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _gdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
; Line 629
	mov	edx, DWORD PTR _holdfont$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
; Line 630
	mov	ecx, DWORD PTR _holdfont$[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
; Line 631
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ReleaseDC@8
$LN43@DisplayCol:
; Line 635
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DisplayColumn@@YAXPAUHWND__@@HHHPAUHFONT__@@1@Z ENDP	; DisplayColumn
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_holdfont$ = -28					; size = 4
_gdc$ = -24						; size = 4
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
_hfont$ = 16						; size = 4
?DisplayTitle@@YAXPAUHWND__@@HPAUHFONT__@@@Z PROC	; DisplayTitle
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 342
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 346
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _gdc$[ebp], eax
; Line 347
	push	1
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__SetBkMode@8
; Line 348
	mov	ecx, DWORD PTR _hfont$[ebp]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdfont$[ebp], eax
; Line 349
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1908]
	mov	DWORD PTR _rect$[ebp+12], ecx
; Line 350
	push	10255					; 0000280fH
	push	6
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawEdge@16
; Line 351
	push	0
	push	34833					; 00008811H
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	push	-1
	imul	edx, DWORD PTR _SI$[ebp], 3100
	add	edx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	edx
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	call	DWORD PTR __imp__DrawTextExW@24
; Line 352
	mov	ecx, DWORD PTR _holdfont$[ebp]
	push	ecx
	mov	edx, DWORD PTR _gdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
; Line 353
	mov	eax, DWORD PTR _gdc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ReleaseDC@8
; Line 354
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DisplayTitle@@YAXPAUHWND__@@HPAUHFONT__@@@Z ENDP	; DisplayTitle
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_temp$1 = -48						; size = 4
_j$ = -44						; size = 4
_offset$ = -40						; size = 4
_trect$2 = -36						; size = 16
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
$T3 = 8							; size = 4
_hWnd$ = 12						; size = 4
_SI$ = 16						; size = 4
_r$ = 20						; size = 4
_c$ = 24						; size = 4
?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z PROC	; GetCellRect
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 299
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+edx+2060]
	mov	DWORD PTR _offset$[ebp], eax
; Line 300
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	mov	DWORD PTR _j$[ebp], edx
	jmp	SHORT $LN9@GetCellRec
$LN8@GetCellRec:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN9@GetCellRec:
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR _c$[ebp]
	jge	SHORT $LN7@GetCellRec
; Line 302
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	add	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+eax*4+2060]
	mov	DWORD PTR _offset$[ebp], ecx
; Line 303
	jmp	SHORT $LN8@GetCellRec
$LN7@GetCellRec:
; Line 304
	mov	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _rect$[ebp], edx
; Line 305
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	add	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060]
	mov	DWORD PTR _rect$[ebp+8], edx
; Line 307
	imul	eax, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2008], 0
	je	SHORT $LN6@GetCellRec
; Line 310
	push	1
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SI$[ebp]
	push	edx
	call	?GetNextColWithWidth@@YAHHHH@Z		; GetNextColWithWidth
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@GetCellRec
; Line 315
	lea	eax, DWORD PTR _trect$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 316
	mov	edx, DWORD PTR _trect$2[ebp+8]
	sub	edx, DWORD PTR _rect$[ebp]
	add	edx, DWORD PTR _offset$[ebp]
	sub	edx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _temp$1[ebp], edx
; Line 317
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR _temp$1[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060]
	jle	SHORT $LN6@GetCellRec
; Line 319
	mov	eax, DWORD PTR _trect$2[ebp+8]
	sub	eax, DWORD PTR _rect$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _rect$[ebp+8], eax
$LN6@GetCellRec:
; Line 325
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1888]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	mov	DWORD PTR _offset$[ebp], eax
; Line 326
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860]
	mov	DWORD PTR _j$[ebp], edx
	jmp	SHORT $LN3@GetCellRec
$LN2@GetCellRec:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN3@GetCellRec:
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR _r$[ebp]
	jge	SHORT $LN1@GetCellRec
; Line 328
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868]
	mov	DWORD PTR _offset$[ebp], eax
; Line 329
	jmp	SHORT $LN2@GetCellRec
$LN1@GetCellRec:
; Line 330
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _rect$[ebp+4], ecx
; Line 331
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868]
	mov	DWORD PTR _rect$[ebp+12], eax
; Line 332
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR _rect$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _rect$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _rect$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _rect$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR $T3[ebp]
; Line 333
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ENDP	; GetCellRect
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_gridy$ = -12						; size = 4
_gridx$ = -8						; size = 4
_j$ = -4						; size = 4
_SelfIndex$ = 8						; size = 4
?CalcVisibleCellBoundaries@@YAXH@Z PROC			; CalcVisibleCellBoundaries
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 253
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1852]
	mov	DWORD PTR _gridx$[ebp], ecx
; Line 254
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1856]
	mov	DWORD PTR _gridy$[ebp], eax
; Line 258
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	mov	DWORD PTR _j$[ebp], edx
; Line 259
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1872], edx
; Line 260
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1880], edx
; Line 263
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _gridx$[ebp]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+edx+2060]
	mov	DWORD PTR _gridx$[ebp], ecx
$LN10@CalcVisibl:
; Line 266
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _gridx$[ebp]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+eax*4+2060]
	mov	DWORD PTR _gridx$[ebp], ecx
; Line 267
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
; Line 268
	cmp	DWORD PTR _gridx$[ebp], 0
	jl	SHORT $LN8@CalcVisibl
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1848]
	jl	SHORT $LN10@CalcVisibl
$LN8@CalcVisibl:
; Line 270
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848]
	jle	SHORT $LN6@CalcVisibl
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1848]
	mov	DWORD PTR _j$[ebp], edx
$LN6@CalcVisibl:
; Line 271
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1876], ecx
; Line 277
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _gridy$[ebp]
	sub	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1888]
	mov	DWORD PTR _gridy$[ebp], eax
; Line 278
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860]
	mov	DWORD PTR _j$[ebp], edx
$LN5@CalcVisibl:
; Line 281
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _gridy$[ebp]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1868]
	mov	DWORD PTR _gridy$[ebp], ecx
; Line 282
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
; Line 283
	cmp	DWORD PTR _gridy$[ebp], 0
	jle	SHORT $LN3@CalcVisibl
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844]
	jl	SHORT $LN5@CalcVisibl
$LN3@CalcVisibl:
; Line 285
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	jle	SHORT $LN1@CalcVisibl
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844]
	mov	DWORD PTR _j$[ebp], edx
$LN1@CalcVisibl:
; Line 286
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1884], ecx
; Line 287
	mov	esp, ebp
	pop	ebp
	ret	0
?CalcVisibleCellBoundaries@@YAXH@Z ENDP			; CalcVisibleCellBoundaries
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cell$ = 8						; size = 4
?OutOfRange@@YAHPAU_BGCELL@@@Z PROC			; OutOfRange
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 236
	push	ebp
	mov	ebp, esp
; Line 237
	mov	eax, DWORD PTR _cell$[ebp]
	cmp	DWORD PTR [eax], 32000			; 00007d00H
	jg	SHORT $LN2@OutOfRange
	mov	ecx, DWORD PTR _cell$[ebp]
	cmp	DWORD PTR [ecx+4], 256			; 00000100H
	jle	SHORT $LN3@OutOfRange
$LN2@OutOfRange:
; Line 238
	mov	eax, 1
	jmp	SHORT $LN4@OutOfRange
; Line 239
	jmp	SHORT $LN4@OutOfRange
$LN3@OutOfRange:
; Line 240
	xor	eax, eax
$LN4@OutOfRange:
; Line 241
	pop	ebp
	ret	0
?OutOfRange@@YAHPAU_BGCELL@@@Z ENDP			; OutOfRange
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ReturnValue$ = -8					; size = 4
_j$ = -4						; size = 4
_SI$ = 8						; size = 4
_x$ = 12						; size = 4
?GetColOfMouse@@YAHHH@Z PROC				; GetColOfMouse
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 208
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _x$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+edx+2060]
	jg	SHORT $LN7@GetColOfMo
; Line 210
	xor	eax, eax
	jmp	$LN8@GetColOfMo
$LN7@GetColOfMo:
; Line 213
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+ecx+2060]
	mov	DWORD PTR _x$[ebp], eax
; Line 215
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	mov	DWORD PTR _j$[ebp], edx
$LN6@GetColOfMo:
; Line 216
	cmp	DWORD PTR _x$[ebp], 0
	jle	SHORT $LN5@GetColOfMo
; Line 218
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060]
	mov	DWORD PTR _x$[ebp], edx
; Line 219
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 220
	jmp	SHORT $LN6@GetColOfMo
$LN5@GetColOfMo:
; Line 221
	mov	ecx, DWORD PTR _j$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
; Line 223
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _ReturnValue$[ebp], edx
; Line 224
	imul	eax, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2008], 0
	je	SHORT $LN4@GetColOfMo
; Line 226
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1848]
	jle	SHORT $LN3@GetColOfMo
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1848]
	mov	DWORD PTR _ReturnValue$[ebp], ecx
$LN3@GetColOfMo:
; Line 228
	jmp	SHORT $LN2@GetColOfMo
$LN4@GetColOfMo:
; Line 230
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848]
	jle	SHORT $LN2@GetColOfMo
	mov	DWORD PTR _ReturnValue$[ebp], -1
$LN2@GetColOfMo:
; Line 232
	mov	eax, DWORD PTR _ReturnValue$[ebp]
$LN8@GetColOfMo:
; Line 233
	mov	esp, ebp
	pop	ebp
	ret	0
?GetColOfMouse@@YAHHH@Z ENDP				; GetColOfMouse
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ReturnValue$ = -4					; size = 4
_SI$ = 8						; size = 4
_y$ = 12						; size = 4
?GetRowOfMouse@@YAHHH@Z PROC				; GetRowOfMouse
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 184
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 186
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _y$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1908]
	jg	SHORT $LN3@GetRowOfMo
; Line 188
	or	eax, -1
	jmp	$LN4@GetRowOfMo
$LN3@GetRowOfMo:
; Line 190
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	jl	SHORT $LN2@GetRowOfMo
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1888]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	cmp	DWORD PTR _y$[ebp], eax
	jg	SHORT $LN2@GetRowOfMo
; Line 192
	xor	eax, eax
	jmp	SHORT $LN4@GetRowOfMo
$LN2@GetRowOfMo:
; Line 196
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1888]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _y$[ebp], ecx
; Line 197
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _y$[ebp]
	cdq
	idiv	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _y$[ebp], eax
; Line 198
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1860]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _ReturnValue$[ebp], eax
; Line 199
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _ReturnValue$[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844]
	jle	SHORT $LN1@GetRowOfMo
	mov	DWORD PTR _ReturnValue$[ebp], -1
$LN1@GetRowOfMo:
; Line 200
	mov	eax, DWORD PTR _ReturnValue$[ebp]
$LN4@GetRowOfMo:
; Line 201
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRowOfMouse@@YAHHH@Z ENDP				; GetRowOfMouse
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ReturnValue$ = -8					; size = 4
_j$ = -4						; size = 4
_SI$ = 8						; size = 4
_startcol$ = 12						; size = 4
_direction$ = 16					; size = 4
?GetNextColWithWidth@@YAHHHH@Z PROC			; GetNextColWithWidth
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 162
	mov	eax, DWORD PTR _startcol$[ebp]
	mov	DWORD PTR _j$[ebp], eax
; Line 163
	cmp	DWORD PTR _direction$[ebp], 1
	jne	SHORT $LN8@GetNextCol
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN8@GetNextCol:
; Line 164
	cmp	DWORD PTR _direction$[ebp], 1
	je	SHORT $LN6@GetNextCol
	mov	edx, DWORD PTR _j$[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN6@GetNextCol:
; Line 166
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060], 0
	jne	SHORT $LN5@GetNextCol
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848]
	jg	SHORT $LN5@GetNextCol
	cmp	DWORD PTR _j$[ebp], 0
	jle	SHORT $LN5@GetNextCol
; Line 168
	cmp	DWORD PTR _direction$[ebp], 1
	jne	SHORT $LN4@GetNextCol
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN4@GetNextCol:
; Line 169
	cmp	DWORD PTR _direction$[ebp], 1
	je	SHORT $LN3@GetNextCol
	mov	edx, DWORD PTR _j$[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN3@GetNextCol:
; Line 170
	jmp	SHORT $LN6@GetNextCol
$LN5@GetNextCol:
; Line 171
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060], 0
	jle	SHORT $LN2@GetNextCol
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848]
	jg	SHORT $LN2@GetNextCol
; Line 173
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _ReturnValue$[ebp], ecx
; Line 175
	jmp	SHORT $LN1@GetNextCol
$LN2@GetNextCol:
; Line 177
	mov	DWORD PTR _ReturnValue$[ebp], 0
$LN1@GetNextCol:
; Line 179
	mov	eax, DWORD PTR _ReturnValue$[ebp]
; Line 180
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextColWithWidth@@YAHHHH@Z ENDP			; GetNextColWithWidth
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_SI$ = -24						; size = 4
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
?RefreshGrid@@YAXPAUHWND__@@@Z PROC			; RefreshGrid
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 146
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 147
	push	0
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 148
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	push	eax
	call	?FindGrid@@YAHI@Z			; FindGrid
	add	esp, 4
	mov	DWORD PTR _SI$[ebp], eax
; Line 149
	imul	edx, DWORD PTR _SI$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
	je	SHORT $LN2@RefreshGri
; Line 151
	push	OFFSET $SG123168
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z ; DisplayEditString
	add	esp, 12					; 0000000cH
$LN2@RefreshGri:
; Line 154
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?RefreshGrid@@YAXPAUHWND__@@@Z ENDP			; RefreshGrid
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hc$ = -12						; size = 4
_count$ = -8						; size = 4
_j$ = -4						; size = 4
_SI$ = 8						; size = 4
?HomeColumnNthVisible@@YAHH@Z PROC			; HomeColumnNthVisible
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 129
	mov	DWORD PTR _count$[ebp], 0
; Line 130
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864]
	mov	DWORD PTR _hc$[ebp], ecx
; Line 131
	mov	DWORD PTR _j$[ebp], 1
	jmp	SHORT $LN4@HomeColumn
$LN3@HomeColumn:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN4@HomeColumn:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _hc$[ebp]
	jg	SHORT $LN2@HomeColumn
; Line 133
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _j$[ebp]
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+edx*4+2060], 0
	jle	SHORT $LN1@HomeColumn
; Line 135
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN1@HomeColumn:
; Line 137
	jmp	SHORT $LN3@HomeColumn
$LN2@HomeColumn:
; Line 138
	mov	eax, DWORD PTR _count$[ebp]
; Line 139
	mov	esp, ebp
	pop	ebp
	ret	0
?HomeColumnNthVisible@@YAHH@Z ENDP			; HomeColumnNthVisible
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_count$ = -8						; size = 4
_j$ = -4						; size = 4
?CountGrids@@YAHXZ PROC					; CountGrids
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 3021
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 3023
	mov	DWORD PTR _count$[ebp], 0
; Line 3024
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN4@CountGrids
$LN3@CountGrids:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN4@CountGrids:
	cmp	DWORD PTR _j$[ebp], 20			; 00000014H
	jge	SHORT $LN2@CountGrids
; Line 3025
	imul	ecx, DWORD PTR _j$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx], 0
	je	SHORT $LN1@CountGrids
; Line 3027
	mov	edx, DWORD PTR _count$[ebp]
	add	edx, 1
	mov	DWORD PTR _count$[ebp], edx
$LN1@CountGrids:
; Line 3028
	jmp	SHORT $LN3@CountGrids
$LN2@CountGrids:
; Line 3029
	mov	eax, DWORD PTR _count$[ebp]
; Line 3030
	mov	esp, ebp
	pop	ebp
	ret	0
?CountGrids@@YAHXZ ENDP					; CountGrids
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -76						; size = 16
_rh$2 = -60						; size = 4
_holdfont$ = -56					; size = 4
_ah$3 = -52						; size = 4
_c$ = -48						; size = 4
_r$ = -44						; size = 4
_cdc$ = -40						; size = 4
$T4 = -36						; size = 16
_rt$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
_tstring$ = 16						; size = 4
?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z PROC		; DisplayEditString
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1144
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1149
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	mov	DWORD PTR _r$[ebp], ecx
; Line 1150
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	mov	DWORD PTR _c$[ebp], eax
; Line 1151
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowCaret@4
; Line 1152
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _r$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1860]
	jl	SHORT $LN3@DisplayEdi
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	jge	SHORT $LN4@DisplayEdi
$LN3@DisplayEdi:
; Line 1154
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__HideCaret@4
; Line 1155
	jmp	$LN5@DisplayEdi
$LN4@DisplayEdi:
; Line 1157
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _SI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T4[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T4[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T4[ebp+12], edx
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _rt$[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR _rt$[ebp+4], ecx
	mov	edx, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR _rt$[ebp+8], edx
	mov	eax, DWORD PTR $T4[ebp+12]
	mov	DWORD PTR _rt$[ebp+12], eax
; Line 1158
	mov	ecx, DWORD PTR _rt$[ebp+4]
	add	ecx, 2
	mov	DWORD PTR _rt$[ebp+4], ecx
; Line 1159
	mov	edx, DWORD PTR _rt$[ebp+12]
	sub	edx, 2
	mov	DWORD PTR _rt$[ebp+12], edx
; Line 1160
	mov	eax, DWORD PTR _rt$[ebp+8]
	sub	eax, 2
	mov	DWORD PTR _rt$[ebp+8], eax
; Line 1161
	mov	ecx, DWORD PTR _rt$[ebp]
	add	ecx, 2
	mov	DWORD PTR _rt$[ebp], ecx
; Line 1163
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _cdc$[ebp], eax
; Line 1164
	mov	eax, DWORD PTR _rt$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _rt$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _rt$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__Rectangle@20
; Line 1165
	mov	edx, DWORD PTR _rt$[ebp+4]
	add	edx, 2
	mov	DWORD PTR _rt$[ebp+4], edx
; Line 1166
	mov	eax, DWORD PTR _rt$[ebp+12]
	sub	eax, 2
	mov	DWORD PTR _rt$[ebp+12], eax
; Line 1167
	mov	ecx, DWORD PTR _rt$[ebp+8]
	sub	ecx, 2
	mov	DWORD PTR _rt$[ebp+8], ecx
; Line 1168
	mov	edx, DWORD PTR _rt$[ebp]
	add	edx, 2
	mov	DWORD PTR _rt$[ebp], edx
; Line 1170
	imul	eax, DWORD PTR _SI$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	cmp	eax, 300				; 0000012cH
	jg	SHORT $LN2@DisplayEdi
; Line 1172
	mov	ecx, DWORD PTR _tstring$[ebp]
	push	ecx
	imul	edx, DWORD PTR _SI$[ebp], 3100
	add	edx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
; Line 1173
	imul	eax, DWORD PTR _SI$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	eax
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+1232
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1175
	jmp	SHORT $LN1@DisplayEdi
$LN2@DisplayEdi:
; Line 1177
	push	0
	call	DWORD PTR __imp__MessageBeep@4
$LN1@DisplayEdi:
; Line 1180
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1980]
	push	eax
	mov	ecx, DWORD PTR _cdc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdfont$[ebp], eax
; Line 1181
	mov	edx, DWORD PTR _rt$[ebp+8]
	sub	edx, 5
	mov	DWORD PTR _rt$[ebp+8], edx
; Line 1182
	push	38					; 00000026H
	lea	eax, DWORD PTR _rt$[ebp]
	push	eax
	push	-1
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+1232
	push	ecx
	mov	edx, DWORD PTR _cdc$[ebp]
	push	edx
	call	DWORD PTR __imp__DrawTextW@20
; Line 1183
	mov	eax, DWORD PTR _rt$[ebp+8]
	add	eax, 5
	mov	DWORD PTR _rt$[ebp+8], eax
; Line 1184
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowCaret@4
; Line 1188
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868]
	mov	DWORD PTR _rh$2[ebp], eax
; Line 1189
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1912]
	mov	DWORD PTR _ah$3[ebp], edx
; Line 1191
	mov	eax, DWORD PTR _rh$2[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _rt$[ebp+4]
	sub	eax, DWORD PTR _ah$3[ebp]
	add	eax, 2
	push	eax
	mov	eax, DWORD PTR _rt$[ebp+8]
	sub	eax, 4
	push	eax
	call	DWORD PTR __imp__SetCaretPos@8
; Line 1195
	mov	ecx, DWORD PTR _holdfont$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cdc$[ebp]
	push	edx
	call	DWORD PTR __imp__SelectObject@8
; Line 1196
	mov	eax, DWORD PTR _cdc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ReleaseDC@8
$LN5@DisplayEdi:
; Line 1197
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z ENDP		; DisplayEditString
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_FindResult$ = -6048					; size = 4
$T1 = -6044						; size = 4
$T2 = -6040						; size = 4
$T3 = -6036						; size = 4
_lbcount$ = -6032					; size = 4
_FOUND$ = -6028						; size = 4
_finger$ = -6024					; size = 4
_tail$ = -6020						; size = 4
_head$ = -6016						; size = 4
_p$ = -6012						; size = 4
_ReturnValue$ = -6008					; size = 4
_tbuffer$ = -6004					; size = 2000
_headtext$ = -4004					; size = 2000
_tailtext$ = -2004					; size = 2000
__$ArrayPad$ = -4					; size = 4
_lbhWnd$ = 8						; size = 4
_searchtext$ = 12					; size = 4
?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z PROC		; BinarySearchListBox
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 3093
	push	ebp
	mov	ebp, esp
	mov	eax, 6048				; 000017a0H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3104
	mov	DWORD PTR _FOUND$[ebp], 0
; Line 3106
	push	0
	push	0
	push	395					; 0000018bH
	mov	eax, DWORD PTR _lbhWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _lbcount$[ebp], eax
; Line 3107
	cmp	DWORD PTR _lbcount$[ebp], 0
	jne	SHORT $LN11@BinarySear
; Line 3109
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 3110
	mov	eax, DWORD PTR _ReturnValue$[ebp]
	jmp	$LN13@BinarySear
$LN11@BinarySear:
; Line 3112
	cmp	DWORD PTR _lbcount$[ebp], 12		; 0000000cH
	jge	SHORT $LN10@BinarySear
; Line 3115
	mov	ecx, DWORD PTR _searchtext$[ebp]
	push	ecx
	push	-1
	push	399					; 0000018fH
	mov	edx, DWORD PTR _lbhWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _FindResult$[ebp], eax
; Line 3116
	mov	eax, DWORD PTR _FindResult$[ebp]
	mov	DWORD PTR _ReturnValue$[ebp], eax
; Line 3117
	mov	eax, DWORD PTR _ReturnValue$[ebp]
	jmp	$LN13@BinarySear
$LN10@BinarySear:
; Line 3121
	mov	DWORD PTR _head$[ebp], 0
; Line 3122
	mov	ecx, DWORD PTR _lbcount$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _tail$[ebp], ecx
; Line 3125
	lea	edx, DWORD PTR _headtext$[ebp]
	push	edx
	mov	eax, DWORD PTR _head$[ebp]
	push	eax
	push	393					; 00000189H
	mov	ecx, DWORD PTR _lbhWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 3126
	mov	edx, 2
	imul	eax, edx, 9
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 2000		; 000007d0H
	jae	SHORT $LN14@BinarySear
	jmp	SHORT $LN15@BinarySear
$LN14@BinarySear:
	call	___report_rangecheckfailure
$LN15@BinarySear:
	xor	ecx, ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	WORD PTR _headtext$[ebp+edx], cx
; Line 3128
	lea	eax, DWORD PTR _headtext$[ebp]
	push	eax
	mov	ecx, DWORD PTR _searchtext$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcmpW@8
	mov	DWORD PTR _p$[ebp], eax
; Line 3129
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN9@BinarySear
; Line 3132
	mov	edx, DWORD PTR _head$[ebp]
	mov	DWORD PTR _ReturnValue$[ebp], edx
; Line 3133
	mov	eax, DWORD PTR _ReturnValue$[ebp]
	jmp	$LN13@BinarySear
$LN9@BinarySear:
; Line 3135
	cmp	DWORD PTR _p$[ebp], 0
	jge	SHORT $LN8@BinarySear
; Line 3138
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 3139
	mov	eax, DWORD PTR _ReturnValue$[ebp]
	jmp	$LN13@BinarySear
$LN8@BinarySear:
; Line 3145
	lea	eax, DWORD PTR _tailtext$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tail$[ebp]
	push	ecx
	push	393					; 00000189H
	mov	edx, DWORD PTR _lbhWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 3146
	mov	eax, 2
	imul	ecx, eax, 9
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 2000		; 000007d0H
	jae	SHORT $LN16@BinarySear
	jmp	SHORT $LN17@BinarySear
$LN16@BinarySear:
	call	___report_rangecheckfailure
$LN17@BinarySear:
	xor	edx, edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	WORD PTR _tailtext$[ebp+eax], dx
; Line 3147
	lea	ecx, DWORD PTR _tailtext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _searchtext$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcmpW@8
	mov	DWORD PTR _p$[ebp], eax
; Line 3148
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN7@BinarySear
; Line 3151
	mov	eax, DWORD PTR _tail$[ebp]
	mov	DWORD PTR _ReturnValue$[ebp], eax
; Line 3152
	mov	eax, DWORD PTR _ReturnValue$[ebp]
	jmp	$LN13@BinarySear
$LN7@BinarySear:
; Line 3154
	cmp	DWORD PTR _p$[ebp], 0
	jle	SHORT $LN6@BinarySear
; Line 3157
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 3158
	mov	eax, DWORD PTR _ReturnValue$[ebp]
	jmp	$LN13@BinarySear
$LN6@BinarySear:
; Line 3162
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 3163
	mov	DWORD PTR _FOUND$[ebp], 0
$LN5@BinarySear:
; Line 3166
	cmp	DWORD PTR _FOUND$[ebp], 0
	jne	$LN4@BinarySear
	mov	ecx, DWORD PTR _tail$[ebp]
	sub	ecx, DWORD PTR _head$[ebp]
	cmp	ecx, 1
	jle	$LN4@BinarySear
; Line 3168
	mov	eax, DWORD PTR _tail$[ebp]
	sub	eax, DWORD PTR _head$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _head$[ebp]
	mov	DWORD PTR _finger$[ebp], eax
; Line 3170
	lea	edx, DWORD PTR _tbuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _finger$[ebp]
	push	eax
	push	393					; 00000189H
	mov	ecx, DWORD PTR _lbhWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 3171
	mov	edx, 2
	imul	eax, edx, 9
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 2000		; 000007d0H
	jae	SHORT $LN18@BinarySear
	jmp	SHORT $LN19@BinarySear
$LN18@BinarySear:
	call	___report_rangecheckfailure
$LN19@BinarySear:
	xor	ecx, ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	WORD PTR _tbuffer$[ebp+edx], cx
; Line 3172
	mov	eax, DWORD PTR _searchtext$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tbuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcmpW@8
	mov	DWORD PTR _p$[ebp], eax
; Line 3173
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN3@BinarySear
; Line 3175
	mov	DWORD PTR _FOUND$[ebp], 1
; Line 3176
	mov	edx, DWORD PTR _finger$[ebp]
	mov	DWORD PTR _ReturnValue$[ebp], edx
$LN3@BinarySear:
; Line 3179
	cmp	DWORD PTR _p$[ebp], 0
	jge	SHORT $LN2@BinarySear
; Line 3182
	mov	eax, DWORD PTR _finger$[ebp]
	mov	DWORD PTR _head$[ebp], eax
$LN2@BinarySear:
; Line 3184
	cmp	DWORD PTR _p$[ebp], 0
	jle	SHORT $LN1@BinarySear
; Line 3187
	mov	ecx, DWORD PTR _finger$[ebp]
	mov	DWORD PTR _tail$[ebp], ecx
$LN1@BinarySear:
; Line 3191
	jmp	$LN5@BinarySear
$LN4@BinarySear:
; Line 3192
	mov	eax, DWORD PTR _ReturnValue$[ebp]
$LN13@BinarySear:
; Line 3193
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z ENDP		; BinarySearchListBox
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_colswithwidth$ = -32					; size = 4
_j$ = -28						; size = 4
_totalpixels$ = -24					; size = 4
_gridrect$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?ShowHscroll@@YAXPAUHWND__@@H@Z PROC			; ShowHscroll
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 836
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 843
	lea	eax, DWORD PTR _gridrect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 844
	mov	edx, DWORD PTR _gridrect$[ebp+8]
	mov	DWORD PTR _totalpixels$[ebp], edx
; Line 845
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _totalpixels$[ebp]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+edx+2060]
	mov	DWORD PTR _totalpixels$[ebp], ecx
; Line 846
	mov	DWORD PTR _colswithwidth$[ebp], 0
; Line 847
	mov	DWORD PTR _j$[ebp], 1
	jmp	SHORT $LN6@ShowHscrol
$LN5@ShowHscrol:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN6@ShowHscrol:
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1848]
	jg	SHORT $LN4@ShowHscrol
; Line 849
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _totalpixels$[ebp]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+eax*4+2060]
	mov	DWORD PTR _totalpixels$[ebp], ecx
; Line 850
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _j$[ebp]
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+eax*4+2060], 0
	jle	SHORT $LN3@ShowHscrol
; Line 852
	mov	ecx, DWORD PTR _colswithwidth$[ebp]
	add	ecx, 1
	mov	DWORD PTR _colswithwidth$[ebp], ecx
$LN3@ShowHscrol:
; Line 854
	jmp	SHORT $LN5@ShowHscrol
$LN4@ShowHscrol:
; Line 855
	cmp	DWORD PTR _totalpixels$[ebp], 0
	jge	SHORT $LN2@ShowHscrol
; Line 858
	push	1
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowScrollBar@12
; Line 859
	push	1
	mov	eax, DWORD PTR _colswithwidth$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetScrollRange@20
; Line 860
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2012], 1
; Line 862
	jmp	SHORT $LN7@ShowHscrol
$LN2@ShowHscrol:
; Line 865
	push	0
	push	0
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowScrollBar@12
; Line 866
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2012], 0
$LN7@ShowHscrol:
; Line 869
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ShowHscroll@@YAXPAUHWND__@@H@Z ENDP			; ShowHscroll
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_rowsvisibleonscreen$ = -28				; size = 4
_totalpixels$ = -24					; size = 4
_gridrect$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_SI$ = 12						; size = 4
?ShowVscroll@@YAXPAUHWND__@@H@Z PROC			; ShowVscroll
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 807
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 813
	lea	eax, DWORD PTR _gridrect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 814
	mov	edx, DWORD PTR _gridrect$[ebp+12]
	mov	DWORD PTR _totalpixels$[ebp], edx
; Line 815
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR _totalpixels$[ebp]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1908]
	mov	DWORD PTR _totalpixels$[ebp], ecx
; Line 816
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR _totalpixels$[ebp]
	sub	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1888]
	mov	DWORD PTR _totalpixels$[ebp], eax
; Line 817
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	imul	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	mov	ecx, DWORD PTR _totalpixels$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _totalpixels$[ebp], ecx
; Line 818
	imul	edx, DWORD PTR _SI$[ebp], 3100
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1888]
	add	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1908]
	mov	eax, DWORD PTR _gridrect$[ebp+12]
	sub	eax, ecx
	imul	ecx, DWORD PTR _SI$[ebp], 3100
	cdq
	idiv	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _rowsvisibleonscreen$[ebp], eax
; Line 819
	cmp	DWORD PTR _totalpixels$[ebp], 0
	jge	SHORT $LN2@ShowVscrol
; Line 822
	push	1
	push	1
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowScrollBar@12
; Line 823
	push	1
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844]
	sub	ecx, DWORD PTR _rowsvisibleonscreen$[ebp]
	add	ecx, 1
	push	ecx
	push	1
	push	1
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetScrollRange@20
; Line 824
	imul	eax, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2016], 1
; Line 826
	jmp	SHORT $LN3@ShowVscrol
$LN2@ShowVscrol:
; Line 829
	push	0
	push	1
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowScrollBar@12
; Line 830
	imul	edx, DWORD PTR _SI$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2016], 0
$LN3@ShowVscrol:
; Line 833
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ShowVscroll@@YAXPAUHWND__@@H@Z ENDP			; ShowVscroll
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_returnvalue$ = -8					; size = 4
_j$ = -4						; size = 4
_menuid$ = 8						; size = 4
?FindGrid@@YAHI@Z PROC					; FindGrid
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 3073
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 3077
	mov	DWORD PTR _returnvalue$[ebp], -1
; Line 3078
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN4@FindGrid
$LN3@FindGrid:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN4@FindGrid:
	cmp	DWORD PTR _j$[ebp], 20			; 00000014H
	jge	SHORT $LN2@FindGrid
; Line 3080
	imul	ecx, DWORD PTR _j$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	cmp	edx, DWORD PTR _menuid$[ebp]
	jne	SHORT $LN1@FindGrid
; Line 3082
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR _returnvalue$[ebp], eax
$LN1@FindGrid:
; Line 3084
	jmp	SHORT $LN3@FindGrid
$LN2@FindGrid:
; Line 3087
	mov	eax, DWORD PTR _returnvalue$[ebp]
; Line 3088
	mov	esp, ebp
	pop	ebp
	ret	0
?FindGrid@@YAHI@Z ENDP					; FindGrid
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_returnvalue$ = -16					; size = 4
_MATCH$ = -12						; size = 4
_empty_space$ = -8					; size = 4
_j$ = -4						; size = 4
_menuid$ = 8						; size = 4
?AddGrid@@YAHI@Z PROC					; AddGrid
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 3034
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 3037
	mov	DWORD PTR _empty_space$[ebp], -1
; Line 3038
	mov	DWORD PTR _returnvalue$[ebp], 0
; Line 3041
	mov	DWORD PTR _MATCH$[ebp], 0
; Line 3042
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN8@AddGrid
$LN7@AddGrid:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN8@AddGrid:
	cmp	DWORD PTR _j$[ebp], 20			; 00000014H
	jge	SHORT $LN6@AddGrid
; Line 3044
	imul	ecx, DWORD PTR _j$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	cmp	edx, DWORD PTR _menuid$[ebp]
	jne	SHORT $LN5@AddGrid
; Line 3046
	mov	DWORD PTR _MATCH$[ebp], 1
; Line 3047
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR _returnvalue$[ebp], eax
$LN5@AddGrid:
; Line 3049
	imul	ecx, DWORD PTR _j$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx], 0
	jne	SHORT $LN4@AddGrid
; Line 3051
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _empty_space$[ebp], edx
$LN4@AddGrid:
; Line 3053
	jmp	SHORT $LN7@AddGrid
$LN6@AddGrid:
; Line 3055
	cmp	DWORD PTR _MATCH$[ebp], 0
	jne	SHORT $LN3@AddGrid
	cmp	DWORD PTR _empty_space$[ebp], 0
	jl	SHORT $LN3@AddGrid
; Line 3057
	imul	eax, DWORD PTR _empty_space$[ebp], 3100
	mov	ecx, DWORD PTR _menuid$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax], ecx
; Line 3058
	mov	edx, DWORD PTR _empty_space$[ebp]
	mov	DWORD PTR _returnvalue$[ebp], edx
$LN3@AddGrid:
; Line 3060
	cmp	DWORD PTR _MATCH$[ebp], 0
	je	SHORT $LN2@AddGrid
; Line 3062
	mov	eax, DWORD PTR _returnvalue$[ebp]
	add	eax, 20					; 00000014H
	jmp	SHORT $LN9@AddGrid
$LN2@AddGrid:
; Line 3064
	cmp	DWORD PTR _MATCH$[ebp], 0
	jne	SHORT $LN1@AddGrid
	cmp	DWORD PTR _empty_space$[ebp], -1
	jne	SHORT $LN1@AddGrid
; Line 3066
	or	eax, -1
	jmp	SHORT $LN9@AddGrid
$LN1@AddGrid:
; Line 3068
	mov	eax, DWORD PTR _returnvalue$[ebp]
$LN9@AddGrid:
; Line 3070
	mov	esp, ebp
	pop	ebp
	ret	0
?AddGrid@@YAHI@Z ENDP					; AddGrid
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_System_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_System_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 608
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_System_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_System_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_System_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Iostream_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??1_Generic_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 564
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Generic_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??0_Generic_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2296
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2291
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	edx, DWORD PTR __Oldlen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 2232
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all
; Line 218
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$3[ebp], edx
; Line 221
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all
; Line 222
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:
; Line 223
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0
; Line 224
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
; Line 557
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	__hypot
	add	esp, 16					; 00000010H
; Line 558
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cell$ = 8						; size = 4
_row$ = 12						; size = 4
_col$ = 16						; size = 4
?SetCell@@YAXPAU_BGCELL@@HH@Z PROC			; SetCell
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 244
	push	ebp
	mov	ebp, esp
; Line 245
	mov	eax, DWORD PTR _cell$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 246
	mov	edx, DWORD PTR _cell$[ebp]
	mov	eax, DWORD PTR _col$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 247
	pop	ebp
	ret	0
?SetCell@@YAXPAU_BGCELL@@HH@Z ENDP			; SetCell
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = -5580						; size = 16
tv89 = -5564						; size = 4
_min$2 = -5560						; size = 4
_wmEvent$ = -5556					; size = 4
_min$3 = -5552						; size = 4
_SelfMenu$ = -5548					; size = 4
_min$4 = -5544						; size = 4
_size$5 = -5540						; size = 8
_min$6 = -5532						; size = 4
_intin$7 = -5528					; size = 4
_hdc$ = -5524						; size = 4
_size$8 = -5520						; size = 8
_min$9 = -5512						; size = 4
_intout$10 = -5508					; size = 4
_t$11 = -5504						; size = 4
_remainder$12 = -5500					; size = 4
_current_width$13 = -5496				; size = 4
_nrows$14 = -5492					; size = 4
_cr$15 = -5488						; size = 4
_max$16 = -5484						; size = 4
_j$17 = -5480						; size = 4
_max$18 = -5476						; size = 4
_t$19 = -5472						; size = 4
_rpp$20 = -5468						; size = 4
_y$21 = -5464						; size = 4
_rpp$22 = -5460						; size = 4
_holdfont$23 = -5456					; size = 4
_max$24 = -5452						; size = 4
_wmId$ = -5448						; size = 4
_np$25 = -5444						; size = 4
_z$26 = -5440						; size = 4
_np$27 = -5436						; size = 4
_r$28 = -5432						; size = 4
_j$29 = -5428						; size = 4
_dx$30 = -5424						; size = 4
_ascii$31 = -5420					; size = 4
_k$32 = -5416						; size = 4
_ascii$33 = -5412					; size = 4
_longestline$34 = -5408					; size = 4
_rpp$35 = -5404						; size = 4
_k$36 = -5400						; size = 4
_rpp$37 = -5396						; size = 4
_hInst$ = -5392						; size = 4
_x$38 = -5388						; size = 4
_y$39 = -5384						; size = 4
_z$40 = -5380						; size = 4
tv954 = -5376						; size = 4
tv2111 = -5372						; size = 4
$T41 = -5368						; size = 4
_k$42 = -5364						; size = 4
_required_width$43 = -5360				; size = 4
$T44 = -5356						; size = 4
_holdfont$45 = -5352					; size = 4
_NRC$46 = -5348						; size = 4
_hdc$47 = -5344						; size = 4
_tstring$48 = -5340					; size = 4
tv2207 = -5336						; size = 4
$T49 = -5332						; size = 4
_cp$50 = -5328						; size = 4
_NCC$51 = -5324						; size = 4
_np$52 = -5320						; size = 4
tv2144 = -5316						; size = 4
_k$53 = -5312						; size = 4
_offset$54 = -5308					; size = 4
_current_height$55 = -5304				; size = 4
_max$56 = -5300						; size = 4
_zDelta$57 = -5296					; size = 2
_max$58 = -5292						; size = 4
_count$59 = -5288					; size = 4
_c$60 = -5284						; size = 4
_linecount$61 = -5280					; size = 4
_nx$62 = -5276						; size = 4
_sbheight$63 = -5272					; size = 4
tv913 = -5268						; size = 4
_cp$64 = -5264						; size = 4
_c$65 = -5260						; size = 4
_k$66 = -5256						; size = 4
_j$67 = -5252						; size = 4
_c$68 = -5248						; size = 4
_j$69 = -5244						; size = 4
_cp$70 = -5240						; size = 4
_gdc$71 = -5236						; size = 4
_x$72 = -5232						; size = 4
_r$73 = -5228						; size = 4
_x$74 = -5224						; size = 4
_j$75 = -5220						; size = 4
_c$76 = -5216						; size = 4
_iDataType$ = -5212					; size = 4
_hdc$77 = -5208						; size = 4
_j$78 = -5204						; size = 4
_sp$79 = -5200						; size = 4
_required_height$80 = -5196				; size = 4
_sp$81 = -5192						; size = 4
_sp$82 = -5188						; size = 4
_sp$83 = -5184						; size = 4
_c$84 = -5180						; size = 4
tv81 = -5176						; size = 4
_ReturnValue$ = -5172					; size = 4
_SelfIndex$ = -5168					; size = 4
_ps$ = -5164						; size = 64
_tm$85 = -5100						; size = 60
_rt$86 = -5040						; size = 16
_grect$87 = -5024					; size = 16
_prect$88 = -5008					; size = 16
_rect$89 = -4992					; size = 16
_gridrect$90 = -4976					; size = 16
_rect$91 = -4960					; size = 16
_gridrect$92 = -4944					; size = 16
_rect$93 = -4928					; size = 16
_rect$94 = -4912					; size = 16
_rect$95 = -4896					; size = 16
_rect$96 = -4880					; size = 16
_rect$97 = -4864					; size = 16
_rect$98 = -4848					; size = 16
_rect$99 = -4832					; size = 16
_rect$100 = -4816					; size = 16
_rect$101 = -4800					; size = 16
_rect$102 = -4784					; size = 16
_rect$103 = -4768					; size = 16
_rect$104 = -4752					; size = 16
_rect$105 = -4736					; size = 16
_rect$106 = -4720					; size = 16
_wp$107 = -4704						; size = 44
_gridrect$108 = -4660					; size = 16
_gridrect$109 = -4644					; size = 16
_gridrect$110 = -4628					; size = 16
_rect$111 = -4612					; size = 16
_rect$112 = -4596					; size = 16
_gridrect$113 = -4580					; size = 16
_gridrect$114 = -4564					; size = 16
$T115 = -4548						; size = 16
_crect$116 = -4532					; size = 16
_tbuffer$117 = -4516					; size = 2000
_tbuffer$118 = -2516					; size = 510
_buffer$ = -2004					; size = 2000
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?GridProc@@YGJPAUHWND__@@IIJ@Z PROC			; GridProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1312
	push	ebp
	mov	ebp, esp
	mov	eax, 5580				; 000015ccH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
; Line 1325
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	push	eax
	call	?FindGrid@@YAHI@Z			; FindGrid
	add	esp, 4
	mov	DWORD PTR _SelfIndex$[ebp], eax
; Line 1326
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx]
	mov	DWORD PTR _SelfMenu$[ebp], edx
; Line 1332
	lea	eax, DWORD PTR _rect$112[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1333
	mov	edx, DWORD PTR _rect$112[ebp+8]
	sub	edx, DWORD PTR _rect$112[ebp]
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1852], edx
; Line 1334
	mov	ecx, DWORD PTR _rect$112[ebp+12]
	sub	ecx, DWORD PTR _rect$112[ebp+4]
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1856], ecx
; Line 1338
	mov	DWORD PTR _ReturnValue$[ebp], 0
; Line 1340
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 256		; 00000100H
	ja	SHORT $LN303@GridProc
	cmp	DWORD PTR tv81[ebp], 256		; 00000100H
	je	$LN103@GridProc
	mov	ecx, DWORD PTR tv81[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv81[ebp], ecx
	cmp	DWORD PTR tv81[ebp], 134		; 00000086H
	ja	$LN1@GridProc
	mov	edx, DWORD PTR tv81[ebp]
	movzx	eax, BYTE PTR $LN305@GridProc[edx]
	jmp	DWORD PTR $LN308@GridProc[eax*4]
$LN303@GridProc:
	cmp	DWORD PTR tv81[ebp], 8025		; 00001f59H
	ja	SHORT $LN304@GridProc
	cmp	DWORD PTR tv81[ebp], 8025		; 00001f59H
	je	$LN252@GridProc
	mov	ecx, DWORD PTR tv81[ebp]
	sub	ecx, 273				; 00000111H
	mov	DWORD PTR tv81[ebp], ecx
	cmp	DWORD PTR tv81[ebp], 249		; 000000f9H
	ja	$LN1@GridProc
	mov	edx, DWORD PTR tv81[ebp]
	movzx	eax, BYTE PTR $LN306@GridProc[edx]
	jmp	DWORD PTR $LN309@GridProc[eax*4]
$LN304@GridProc:
	mov	ecx, DWORD PTR tv81[ebp]
	sub	ecx, 8026				; 00001f5aH
	mov	DWORD PTR tv81[ebp], ecx
	cmp	DWORD PTR tv81[ebp], 42			; 0000002aH
	ja	$LN1@GridProc
	mov	edx, DWORD PTR tv81[ebp]
	jmp	DWORD PTR $LN310@GridProc[edx*4]
$LN286@GridProc:
; Line 1343
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _wmId$[ebp], ecx
; Line 1344
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR _wmEvent$[ebp], eax
; Line 1346
	mov	ecx, DWORD PTR _wmId$[ebp]
	mov	DWORD PTR tv89[ebp], ecx
; Line 1350
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	$LN289@GridProc
; Line 1352
	jmp	$LN287@GridProc
$LN282@GridProc:
; Line 1355
	lea	eax, DWORD PTR _ps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__BeginPaint@8
	mov	DWORD PTR _hdc$[ebp], eax
; Line 1357
	lea	edx, DWORD PTR _rt$86[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 1358
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	call	?CalcVisibleCellBoundaries@@YAXH@Z	; CalcVisibleCellBoundaries
	add	esp, 4
; Line 1360
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1988]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DisplayTitle@@YAXPAUHWND__@@HPAUHFONT__@@@Z ; DisplayTitle
	add	esp, 12					; 0000000cH
; Line 1363
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1984]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1980]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DisplayColumn@@YAXPAUHWND__@@HHHPAUHFONT__@@1@Z ; DisplayColumn
	add	esp, 24					; 00000018H
; Line 1366
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+edx+2060]
	mov	DWORD PTR _offset$54[ebp], eax
; Line 1367
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1872]
	mov	DWORD PTR _j$17[ebp], edx
; Line 1368
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1876]
	mov	DWORD PTR _k$36[ebp], ecx
; Line 1369
	mov	edx, DWORD PTR _j$17[ebp]
	mov	DWORD PTR _c$76[ebp], edx
	jmp	SHORT $LN281@GridProc
$LN280@GridProc:
	mov	eax, DWORD PTR _c$76[ebp]
	add	eax, 1
	mov	DWORD PTR _c$76[ebp], eax
$LN281@GridProc:
	mov	ecx, DWORD PTR _c$76[ebp]
	cmp	ecx, DWORD PTR _k$36[ebp]
	jg	SHORT $LN279@GridProc
; Line 1371
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1984]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1980]
	push	edx
	mov	eax, DWORD PTR _offset$54[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$76[ebp]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DisplayColumn@@YAXPAUHWND__@@HHHPAUHFONT__@@1@Z ; DisplayColumn
	add	esp, 24					; 00000018H
; Line 1372
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _c$76[ebp]
	mov	eax, DWORD PTR _offset$54[ebp]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+edx*4+2060]
	mov	DWORD PTR _offset$54[ebp], eax
; Line 1373
	jmp	$LN280@GridProc
$LN279@GridProc:
; Line 1376
	lea	ecx, DWORD PTR _ps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__EndPaint@8
; Line 1378
	call	DWORD PTR __imp__GetFocus@0
	cmp	eax, DWORD PTR _hWnd$[ebp]
	jne	SHORT $LN278@GridProc
; Line 1380
	push	0
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	push	8039					; 00001f67H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__PostMessageW@16
$LN278@GridProc:
; Line 1384
	jmp	$LN287@GridProc
$LN277@GridProc:
; Line 1390
	lea	edx, DWORD PTR _rect$101[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 1391
	push	1
	lea	ecx, DWORD PTR _rect$101[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1392
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
; Line 1393
	push	0
	call	DWORD PTR __imp__MessageBeep@4
; Line 1395
	jmp	$LN287@GridProc
$LN276@GridProc:
; Line 1402
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	eax, 300				; 0000012cH
	jle	SHORT $LN275@GridProc
; Line 1404
	push	OFFSET $SG123934
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	add	edx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1406
	jmp	SHORT $LN274@GridProc
$LN275@GridProc:
; Line 1408
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
$LN274@GridProc:
; Line 1411
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _gdc$71[ebp], eax
; Line 1413
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	test	eax, eax
	jle	$LN273@GridProc
; Line 1415
	mov	DWORD PTR _linecount$61[ebp], 1
; Line 1416
	mov	DWORD PTR _j$75[ebp], 0
	jmp	SHORT $LN272@GridProc
$LN271@GridProc:
	mov	ecx, DWORD PTR _j$75[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$75[ebp], ecx
$LN272@GridProc:
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	add	edx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	DWORD PTR _j$75[ebp], eax
	jge	SHORT $LN270@GridProc
; Line 1418
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _j$75[ebp]
	movzx	edx, WORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*2+12]
	cmp	edx, 10					; 0000000aH
	jne	SHORT $LN269@GridProc
; Line 1420
	mov	eax, DWORD PTR _linecount$61[ebp]
	add	eax, 1
	mov	DWORD PTR _linecount$61[ebp], eax
$LN269@GridProc:
; Line 1423
	jmp	SHORT $LN271@GridProc
$LN270@GridProc:
; Line 1424
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1988]
	push	edx
	mov	eax, DWORD PTR _gdc$71[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdfont$23[ebp], eax
; Line 1425
	lea	ecx, DWORD PTR _size$5[ebp]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	add	edx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	push	eax
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	eax
	mov	ecx, DWORD PTR _gdc$71[ebp]
	push	ecx
	call	DWORD PTR __imp__GetTextExtentPoint32W@16
; Line 1426
	mov	edx, DWORD PTR _holdfont$23[ebp]
	push	edx
	mov	eax, DWORD PTR _gdc$71[ebp]
	push	eax
	call	DWORD PTR __imp__SelectObject@8
; Line 1427
	cvtsi2sd xmm0, DWORD PTR _size$5[ebp+4]
	mulsd	xmm0, QWORD PTR __real@3ff3333333333333
	cvtsi2sd xmm1, DWORD PTR _linecount$61[ebp]
	mulsd	xmm0, xmm1
	cvttsd2si ecx, xmm0
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908], ecx
; Line 1429
	jmp	SHORT $LN268@GridProc
$LN273@GridProc:
; Line 1432
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1908], 0
$LN268@GridProc:
; Line 1434
	mov	ecx, DWORD PTR _gdc$71[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__ReleaseDC@8
; Line 1437
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1438
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SizeGrid@@YAXPAUHWND__@@H@Z		; SizeGrid
	add	esp, 8
; Line 1441
	jmp	$LN287@GridProc
$LN267@GridProc:
; Line 1443
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844]
	mov	DWORD PTR _ReturnValue$[ebp], ecx
; Line 1444
	jmp	$LN287@GridProc
$LN266@GridProc:
; Line 1447
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848]
	mov	DWORD PTR _ReturnValue$[ebp], eax
; Line 1448
	jmp	$LN287@GridProc
$LN265@GridProc:
; Line 1451
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+edx*4+2060]
	mov	DWORD PTR _ReturnValue$[ebp], eax
; Line 1452
	jmp	$LN287@GridProc
$LN264@GridProc:
; Line 1455
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _ReturnValue$[ebp], edx
; Line 1456
	jmp	$LN287@GridProc
$LN263@GridProc:
; Line 1459
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1888]
	mov	DWORD PTR _ReturnValue$[ebp], ecx
; Line 1460
	jmp	$LN287@GridProc
$LN262@GridProc:
; Line 1463
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1900]
	mov	DWORD PTR _ReturnValue$[ebp], eax
; Line 1464
	jmp	$LN287@GridProc
$LN261@GridProc:
; Line 1467
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1468
	jmp	$LN287@GridProc
$LN260@GridProc:
; Line 1470
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1472
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _wParam$[ebp]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	jg	SHORT $LN259@GridProc
	cmp	DWORD PTR _wParam$[ebp], 0
	jle	SHORT $LN259@GridProc
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1848]
	jg	SHORT $LN259@GridProc
	cmp	DWORD PTR _lParam$[ebp], 0
	jle	SHORT $LN259@GridProc
; Line 1474
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], ecx
; Line 1475
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896], eax
; Line 1477
	jmp	SHORT $LN258@GridProc
$LN259@GridProc:
; Line 1479
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1480
	jmp	$LN287@GridProc
$LN258@GridProc:
; Line 1482
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 1483
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 1484
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1485
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1487
	jmp	$LN287@GridProc
$LN257@GridProc:
; Line 1489
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1944], ecx
; Line 1490
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1491
	jmp	$LN287@GridProc
$LN256@GridProc:
; Line 1493
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2008], ecx
; Line 1494
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1495
	jmp	$LN287@GridProc
$LN255@GridProc:
; Line 1498
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2020], ecx
; Line 1499
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SizeGrid@@YAXPAUHWND__@@H@Z		; SizeGrid
	add	esp, 8
; Line 1500
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1501
	jmp	$LN287@GridProc
$LN254@GridProc:
; Line 1504
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2032], eax
; Line 1505
	jmp	$LN287@GridProc
$LN253@GridProc:
; Line 1508
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2040], edx
; Line 1509
	jmp	$LN287@GridProc
$LN252@GridProc:
; Line 1512
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A, eax ; LPBGcell
; Line 1513
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	push	ecx
	call	?OutOfRange@@YAHPAU_BGCELL@@@Z		; OutOfRange
	add	esp, 4
	test	eax, eax
	je	SHORT $LN251@GridProc
; Line 1515
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	eax, ax
	or	eax, 196608				; 00030000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 1516
	mov	DWORD PTR _lParam$[ebp], 0
; Line 1517
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1518
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 1519
	jmp	$LN287@GridProc
$LN251@GridProc:
; Line 1521
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG123982
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
; Line 1523
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+4]
	push	edx
	call	?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z ; BinarySearchListBox
	add	esp, 8
	mov	DWORD PTR ?FindResult@@3HA, eax		; FindResult
; Line 1524
	cmp	DWORD PTR ?FindResult@@3HA, -1		; FindResult
	je	$LN250@GridProc
; Line 1527
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FindResult@@3HA		; FindResult
	push	ecx
	push	393					; 00000189H
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1528
	cmp	DWORD PTR _lParam$[ebp], 0
	je	SHORT $LN249@GridProc
; Line 1530
	mov	ecx, 2
	imul	edx, ecx, 10
	mov	eax, 80					; 00000050H
	mov	WORD PTR _buffer$[ebp+edx], ax
; Line 1532
	jmp	SHORT $LN248@GridProc
$LN249@GridProc:
; Line 1534
	mov	ecx, 2
	imul	edx, ecx, 10
	mov	eax, 85					; 00000055H
	mov	WORD PTR _buffer$[ebp+edx], ax
$LN248@GridProc:
; Line 1536
	push	0
	mov	ecx, DWORD PTR ?FindResult@@3HA		; FindResult
	push	ecx
	push	386					; 00000182H
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1537
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?FindResult@@3HA		; FindResult
	push	edx
	push	384					; 00000180H
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1539
	jmp	SHORT $LN247@GridProc
$LN250@GridProc:
; Line 1543
	push	OFFSET $SG123990
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
; Line 1544
	cmp	DWORD PTR _lParam$[ebp], 0
	je	SHORT $LN246@GridProc
; Line 1546
	push	OFFSET $SG123993
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
; Line 1548
	jmp	SHORT $LN245@GridProc
$LN246@GridProc:
; Line 1550
	push	OFFSET $SG123995
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcatW@8
$LN245@GridProc:
; Line 1552
	push	OFFSET $SG123996
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
; Line 1553
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?FindResult@@3HA		; FindResult
	push	ecx
	push	384					; 00000180H
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN247@GridProc:
; Line 1556
	jmp	$LN287@GridProc
$LN244@GridProc:
; Line 1558
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
; Line 1559
	jmp	$LN287@GridProc
$LN243@GridProc:
; Line 1561
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyColChanged@@YAXPAUHWND__@@H@Z	; NotifyColChanged
	add	esp, 8
; Line 1562
	jmp	$LN287@GridProc
$LN242@GridProc:
; Line 1564
	cmp	DWORD PTR _wParam$[ebp], 0
	je	SHORT $LN241@GridProc
; Line 1566
	push	OFFSET $SG124003
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	add	edx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+8
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1568
	jmp	SHORT $LN240@GridProc
$LN241@GridProc:
; Line 1570
	push	OFFSET $SG124005
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+8
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
$LN240@GridProc:
; Line 1572
	jmp	$LN287@GridProc
$LN239@GridProc:
; Line 1575
	cmp	DWORD PTR _wParam$[ebp], 0
	je	SHORT $LN238@GridProc
; Line 1577
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1960], 1
; Line 1579
	jmp	SHORT $LN237@GridProc
$LN238@GridProc:
; Line 1581
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1960], 0
$LN237@GridProc:
; Line 1583
	jmp	$LN287@GridProc
$LN236@GridProc:
; Line 1585
	cmp	DWORD PTR _wParam$[ebp], 0
	je	SHORT $LN235@GridProc
; Line 1587
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2000], 1
; Line 1589
	jmp	SHORT $LN234@GridProc
$LN235@GridProc:
; Line 1591
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2000], 0
$LN234@GridProc:
; Line 1593
	jmp	$LN287@GridProc
$LN233@GridProc:
; Line 1596
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A, edx ; LPBGcell
; Line 1597
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	push	eax
	call	?OutOfRange@@YAHPAU_BGCELL@@@Z		; OutOfRange
	add	esp, 4
	test	eax, eax
	je	SHORT $LN232@GridProc
; Line 1599
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	edx, ax
	or	edx, 196608				; 00030000H
	mov	DWORD PTR _wParam$[ebp], edx
; Line 1600
	mov	DWORD PTR _lParam$[ebp], 0
; Line 1601
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	273					; 00000111H
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1602
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 1603
	jmp	$LN287@GridProc
$LN232@GridProc:
; Line 1605
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG124026
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
; Line 1607
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z ; BinarySearchListBox
	add	esp, 8
	mov	DWORD PTR ?FindResult@@3HA, eax		; FindResult
; Line 1608
	cmp	DWORD PTR ?FindResult@@3HA, -1		; FindResult
	je	SHORT $LN231@GridProc
; Line 1611
	push	0
	mov	edx, DWORD PTR ?FindResult@@3HA		; FindResult
	push	edx
	push	386					; 00000182H
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN231@GridProc:
; Line 1614
	push	OFFSET $SG124028
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
; Line 1615
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+8
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcatW@8
; Line 1619
	mov	DWORD PTR _iDataType$[ebp], 1
; Line 1620
	cmp	DWORD PTR _iDataType$[ebp], 1
	jne	SHORT $LN230@GridProc
	push	OFFSET $SG124030
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
$LN230@GridProc:
; Line 1621
	cmp	DWORD PTR _iDataType$[ebp], 2
	jne	SHORT $LN229@GridProc
	push	OFFSET $SG124032
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
$LN229@GridProc:
; Line 1622
	cmp	DWORD PTR _iDataType$[ebp], 3
	jne	SHORT $LN228@GridProc
	push	OFFSET $SG124034
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcatW@8
$LN228@GridProc:
; Line 1623
	cmp	DWORD PTR _iDataType$[ebp], 4
	jne	SHORT $LN227@GridProc
	push	OFFSET $SG124036
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcatW@8
$LN227@GridProc:
; Line 1624
	cmp	DWORD PTR _iDataType$[ebp], 5
	jne	SHORT $LN226@GridProc
	push	OFFSET $SG124038
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
$LN226@GridProc:
; Line 1626
	push	OFFSET $SG124039
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcatW@8
; Line 1627
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcatW@8
; Line 1628
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	0
	push	384					; 00000180H
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR ?FindResult@@3HA, eax		; FindResult
; Line 1630
	cmp	DWORD PTR ?FindResult@@3HA, -1		; FindResult
	jne	SHORT $LN225@GridProc
; Line 1632
	push	0
	call	DWORD PTR __imp__MessageBeep@4
$LN225@GridProc:
; Line 1636
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?GetCellRect@@YA?AUtagRECT@@PAUHWND__@@HHH@Z ; GetCellRect
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T115[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T115[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T115[ebp+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR $T115[ebp+12], eax
	mov	ecx, DWORD PTR $T115[ebp]
	mov	DWORD PTR _rect$111[ebp], ecx
	mov	edx, DWORD PTR $T115[ebp+4]
	mov	DWORD PTR _rect$111[ebp+4], edx
	mov	eax, DWORD PTR $T115[ebp+8]
	mov	DWORD PTR _rect$111[ebp+8], eax
	mov	ecx, DWORD PTR $T115[ebp+12]
	mov	DWORD PTR _rect$111[ebp+12], ecx
; Line 1637
	push	0
	lea	edx, DWORD PTR _rect$111[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1640
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1960], 0
	je	$LN221@GridProc
; Line 1643
	push	0
	push	0
	push	395					; 0000018bH
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _j$78[ebp], eax
; Line 1644
	cmp	DWORD PTR _j$78[ebp], 0
	jle	$LN223@GridProc
; Line 1646
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _j$78[ebp]
	sub	edx, 1
	push	edx
	push	393					; 00000189H
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1647
	mov	edx, 2
	imul	eax, edx, 5
	mov	DWORD PTR $T49[ebp], eax
	cmp	DWORD PTR $T49[ebp], 2000		; 000007d0H
	jae	SHORT $LN291@GridProc
	jmp	SHORT $LN292@GridProc
$LN291@GridProc:
	call	___report_rangecheckfailure
$LN292@GridProc:
	xor	ecx, ecx
	mov	edx, DWORD PTR $T49[ebp]
	mov	WORD PTR _buffer$[ebp+edx], cx
; Line 1648
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	__wtoi
	add	esp, 4
	mov	DWORD PTR _j$78[ebp], eax
; Line 1649
	push	0
	push	0
	push	8047					; 00001f6fH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	DWORD PTR _j$78[ebp], eax
	jle	SHORT $LN222@GridProc
; Line 1651
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848]
	push	eax
	mov	ecx, DWORD PTR _j$78[ebp]
	push	ecx
	push	8030					; 00001f5eH
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN222@GridProc:
; Line 1654
	jmp	SHORT $LN221@GridProc
$LN223@GridProc:
; Line 1657
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1848]
	push	ecx
	mov	edx, DWORD PTR _j$78[ebp]
	push	edx
	push	8030					; 00001f5eH
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN221@GridProc:
; Line 1662
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2032], 0
	jne	SHORT $LN219@GridProc
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	cmp	DWORD PTR [edx], 0
	jne	$LN220@GridProc
$LN219@GridProc:
; Line 1668
	mov	DWORD PTR _required_height$80[ebp], 30	; 0000001eH
; Line 1672
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _hdc$77[ebp], eax
; Line 1673
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN218@GridProc
; Line 1675
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1984]
	push	eax
	mov	ecx, DWORD PTR _hdc$77[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdfont$45[ebp], eax
; Line 1677
	jmp	SHORT $LN217@GridProc
$LN218@GridProc:
; Line 1679
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1980]
	push	eax
	mov	ecx, DWORD PTR _hdc$77[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	mov	DWORD PTR _holdfont$45[ebp], eax
$LN217@GridProc:
; Line 1682
	lea	edx, DWORD PTR _size$8[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$77[ebp]
	push	ecx
	call	?FindLongestLine@@YAHPAUHDC__@@PA_WPAUtagSIZE@@@Z ; FindLongestLine
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _longestline$34[ebp], eax
; Line 1684
	mov	edx, DWORD PTR _longestline$34[ebp]
	add	edx, 15					; 0000000fH
	mov	DWORD PTR _required_width$43[ebp], edx
; Line 1685
	mov	eax, DWORD PTR _size$8[ebp+4]
	mov	DWORD PTR _required_height$80[ebp], eax
; Line 1688
	mov	DWORD PTR _count$59[ebp], 1
; Line 1690
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tbuffer$118[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1691
	mov	DWORD PTR _j$69[ebp], 0
	jmp	SHORT $LN216@GridProc
$LN215@GridProc:
	mov	eax, DWORD PTR _j$69[ebp]
	add	eax, 1
	mov	DWORD PTR _j$69[ebp], eax
$LN216@GridProc:
	lea	ecx, DWORD PTR _tbuffer$118[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	DWORD PTR _j$69[ebp], eax
	jge	SHORT $LN214@GridProc
; Line 1693
	mov	edx, DWORD PTR _j$69[ebp]
	movzx	eax, WORD PTR _tbuffer$118[ebp+edx*2]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN213@GridProc
	mov	ecx, DWORD PTR _count$59[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$59[ebp], ecx
$LN213@GridProc:
; Line 1694
	jmp	SHORT $LN215@GridProc
$LN214@GridProc:
; Line 1695
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2028], 0
	je	SHORT $LN211@GridProc
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN212@GridProc
$LN211@GridProc:
; Line 1697
	mov	ecx, DWORD PTR _required_height$80[ebp]
	imul	ecx, DWORD PTR _count$59[ebp]
	mov	DWORD PTR _required_height$80[ebp], ecx
$LN212@GridProc:
; Line 1699
	mov	edx, DWORD PTR _required_height$80[ebp]
	add	edx, 5
	mov	DWORD PTR _required_height$80[ebp], edx
; Line 1701
	mov	eax, DWORD PTR _holdfont$45[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$77[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
; Line 1702
	mov	edx, DWORD PTR _hdc$77[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ReleaseDC@8
; Line 1703
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+eax*4+2060]
	mov	DWORD PTR _current_width$13[ebp], ecx
; Line 1704
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN210@GridProc
; Line 1706
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1888]
	mov	DWORD PTR _current_height$55[ebp], ecx
; Line 1707
	mov	edx, DWORD PTR _required_height$80[ebp]
	cmp	edx, DWORD PTR _current_height$55[ebp]
	jle	SHORT $LN209@GridProc
; Line 1709
	push	0
	mov	eax, DWORD PTR _required_height$80[ebp]
	push	eax
	push	8036					; 00001f64H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN209@GridProc:
; Line 1712
	jmp	SHORT $LN207@GridProc
$LN210@GridProc:
; Line 1714
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868]
	mov	DWORD PTR _current_height$55[ebp], eax
; Line 1715
	mov	ecx, DWORD PTR _required_height$80[ebp]
	cmp	ecx, DWORD PTR _current_height$55[ebp]
	jle	SHORT $LN207@GridProc
; Line 1717
	push	0
	push	20					; 00000014H
	push	8040					; 00001f68H
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
$LN207@GridProc:
; Line 1721
	mov	eax, DWORD PTR _required_width$43[ebp]
	cmp	eax, DWORD PTR _current_width$13[ebp]
	jle	SHORT $LN206@GridProc
; Line 1723
	mov	ecx, DWORD PTR _required_width$43[ebp]
	push	ecx
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	8035					; 00001f63H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN206@GridProc:
; Line 1725
	mov	edx, DWORD PTR _hdc$77[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__ReleaseDC@8
$LN220@GridProc:
; Line 1728
	jmp	$LN287@GridProc
$LN205@GridProc:
; Line 1731
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A, ecx ; LPBGcell
; Line 1732
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	push	edx
	call	?OutOfRange@@YAHPAU_BGCELL@@@Z		; OutOfRange
	add	esp, 4
	test	eax, eax
	je	SHORT $LN204@GridProc
; Line 1734
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	or	ecx, 196608				; 00030000H
	mov	DWORD PTR _wParam$[ebp], ecx
; Line 1735
	mov	DWORD PTR _lParam$[ebp], 0
; Line 1736
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	push	273					; 00000111H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1737
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 1738
	jmp	$LN287@GridProc
$LN204@GridProc:
; Line 1740
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG124095
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
; Line 1742
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z ; BinarySearchListBox
	add	esp, 8
	mov	DWORD PTR ?FindResult@@3HA, eax		; FindResult
; Line 1743
	cmp	DWORD PTR ?FindResult@@3HA, -1		; FindResult
	je	$LN203@GridProc
; Line 1748
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?FindResult@@3HA		; FindResult
	push	edx
	push	393					; 00000189H
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1749
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	lea	eax, DWORD PTR _tbuffer$117[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1750
	lea	ecx, DWORD PTR _tbuffer$117[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	mov	DWORD PTR _k$32[ebp], eax
; Line 1751
	mov	DWORD PTR _c$65[ebp], 0
; Line 1752
	mov	DWORD PTR _j$67[ebp], 13		; 0000000dH
	jmp	SHORT $LN202@GridProc
$LN201@GridProc:
	mov	edx, DWORD PTR _j$67[ebp]
	add	edx, 1
	mov	DWORD PTR _j$67[ebp], edx
$LN202@GridProc:
	mov	eax, DWORD PTR _j$67[ebp]
	cmp	eax, DWORD PTR _k$32[ebp]
	jge	SHORT $LN200@GridProc
; Line 1754
	mov	ecx, DWORD PTR _c$65[ebp]
	mov	edx, DWORD PTR _j$67[ebp]
	mov	ax, WORD PTR _tbuffer$117[ebp+edx*2]
	mov	WORD PTR _buffer$[ebp+ecx*2], ax
; Line 1755
	mov	ecx, DWORD PTR _c$65[ebp]
	add	ecx, 1
	mov	DWORD PTR _c$65[ebp], ecx
; Line 1756
	jmp	SHORT $LN201@GridProc
$LN200@GridProc:
; Line 1757
	mov	edx, DWORD PTR _c$65[ebp]
	shl	edx, 1
	mov	DWORD PTR $T41[ebp], edx
	cmp	DWORD PTR $T41[ebp], 2000		; 000007d0H
	jae	SHORT $LN293@GridProc
	jmp	SHORT $LN294@GridProc
$LN293@GridProc:
	call	___report_rangecheckfailure
$LN294@GridProc:
	xor	eax, eax
	mov	ecx, DWORD PTR $T41[ebp]
	mov	WORD PTR _buffer$[ebp+ecx], ax
; Line 1758
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1760
	jmp	SHORT $LN199@GridProc
$LN203@GridProc:
; Line 1762
	push	OFFSET $SG124110
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
$LN199@GridProc:
; Line 1764
	jmp	$LN287@GridProc
$LN198@GridProc:
; Line 1767
	push	0
	push	0
	push	388					; 00000184H
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1768
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844], 0
; Line 1769
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], 1
; Line 1770
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860], 1
; Line 1771
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864], 1
; Line 1774
	lea	edx, DWORD PTR _rect$93[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 1775
	push	1
	lea	ecx, DWORD PTR _rect$93[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1777
	jmp	$LN287@GridProc
$LN197@GridProc:
; Line 1780
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A, eax ; LPBGcell
; Line 1781
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	push	ecx
	call	?OutOfRange@@YAHPAU_BGCELL@@@Z		; OutOfRange
	add	esp, 4
	test	eax, eax
	je	SHORT $LN196@GridProc
; Line 1783
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	eax, ax
	or	eax, 196608				; 00030000H
	mov	DWORD PTR _wParam$[ebp], eax
; Line 1784
	mov	DWORD PTR _lParam$[ebp], 0
; Line 1785
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	273					; 00000111H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1786
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 1787
	jmp	$LN287@GridProc
$LN196@GridProc:
; Line 1789
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG124125
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
; Line 1791
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+4]
	push	edx
	call	?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z ; BinarySearchListBox
	add	esp, 8
	mov	DWORD PTR ?FindResult@@3HA, eax		; FindResult
; Line 1792
	cmp	DWORD PTR ?FindResult@@3HA, -1		; FindResult
	je	SHORT $LN195@GridProc
; Line 1795
	push	0
	mov	eax, DWORD PTR ?FindResult@@3HA		; FindResult
	push	eax
	push	386					; 00000182H
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+4]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1796
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyEndEdit@@YAXPAUHWND__@@H@Z	; NotifyEndEdit
	add	esp, 8
$LN195@GridProc:
; Line 1798
	jmp	$LN287@GridProc
$LN194@GridProc:
; Line 1800
	cmp	DWORD PTR _wParam$[ebp], 0
	jb	SHORT $LN193@GridProc
	cmp	DWORD PTR _wParam$[ebp], 32000		; 00007d00H
	ja	SHORT $LN193@GridProc
; Line 1802
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844], eax
; Line 1804
	jmp	SHORT $LN190@GridProc
$LN193@GridProc:
; Line 1806
	cmp	DWORD PTR _wParam$[ebp], 0
	jae	SHORT $LN191@GridProc
; Line 1808
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844], 0
; Line 1810
	jmp	SHORT $LN190@GridProc
$LN191@GridProc:
; Line 1812
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844], 32000 ; 00007d00H
$LN190@GridProc:
; Line 1816
	cmp	DWORD PTR _lParam$[ebp], 0
	jle	SHORT $LN189@GridProc
	cmp	DWORD PTR _lParam$[ebp], 256		; 00000100H
	jg	SHORT $LN189@GridProc
; Line 1818
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1848], ecx
; Line 1820
	jmp	SHORT $LN186@GridProc
$LN189@GridProc:
; Line 1822
	cmp	DWORD PTR _lParam$[ebp], 0
	jg	SHORT $LN187@GridProc
; Line 1824
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848], 1
; Line 1826
	jmp	SHORT $LN186@GridProc
$LN187@GridProc:
; Line 1828
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1848], 256 ; 00000100H
$LN186@GridProc:
; Line 1832
	lea	ecx, DWORD PTR _rect$99[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1833
	push	1
	lea	eax, DWORD PTR _rect$99[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1835
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?GetVisibleColumns@@YAXPAUHWND__@@H@Z	; GetVisibleColumns
	add	esp, 8
; Line 1836
	jmp	$LN287@GridProc
$LN185@GridProc:
; Line 1840
	cmp	DWORD PTR _wParam$[ebp], 256		; 00000100H
	ja	SHORT $LN184@GridProc
	cmp	DWORD PTR _wParam$[ebp], 0
	jb	SHORT $LN184@GridProc
	cmp	DWORD PTR _lParam$[ebp], 0
	jl	SHORT $LN184@GridProc
; Line 1843
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+edx*4+2060], eax
; Line 1844
	lea	ecx, DWORD PTR _rect$91[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1845
	push	0
	lea	eax, DWORD PTR _rect$91[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1846
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?GetVisibleColumns@@YAXPAUHWND__@@H@Z	; GetVisibleColumns
	add	esp, 8
$LN184@GridProc:
; Line 1848
	jmp	$LN287@GridProc
$LN183@GridProc:
; Line 1850
	cmp	DWORD PTR _wParam$[ebp], 0
	jb	SHORT $LN182@GridProc
; Line 1853
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1888], edx
; Line 1854
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SizeGrid@@YAXPAUHWND__@@H@Z		; SizeGrid
	add	esp, 8
; Line 1855
	lea	edx, DWORD PTR _rect$97[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 1856
	push	0
	lea	ecx, DWORD PTR _rect$97[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
$LN182@GridProc:
; Line 1858
	jmp	$LN287@GridProc
$LN181@GridProc:
; Line 1861
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	mov	DWORD PTR _ReturnValue$[ebp], ecx
; Line 1862
	jmp	$LN287@GridProc
$LN180@GridProc:
; Line 1864
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	mov	DWORD PTR _ReturnValue$[ebp], eax
; Line 1865
	jmp	$LN287@GridProc
$LN179@GridProc:
; Line 1868
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A, ecx ; LPBGcell
; Line 1869
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	push	edx
	call	?OutOfRange@@YAHPAU_BGCELL@@@Z		; OutOfRange
	add	esp, 4
	test	eax, eax
	je	SHORT $LN178@GridProc
; Line 1871
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	or	ecx, 196608				; 00030000H
	mov	DWORD PTR _wParam$[ebp], ecx
; Line 1872
	mov	DWORD PTR _lParam$[ebp], 0
; Line 1873
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	push	273					; 00000111H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1874
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 1875
	jmp	$LN287@GridProc
$LN178@GridProc:
; Line 1877
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG124157
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
; Line 1879
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4]
	push	eax
	call	?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z ; BinarySearchListBox
	add	esp, 8
	mov	DWORD PTR ?FindResult@@3HA, eax		; FindResult
; Line 1880
	cmp	DWORD PTR ?FindResult@@3HA, -1		; FindResult
	je	$LN175@GridProc
; Line 1883
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?FindResult@@3HA		; FindResult
	push	edx
	push	393					; 00000189H
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1884
	mov	edx, 2
	imul	eax, edx, 11
	movzx	ecx, WORD PTR _buffer$[ebp+eax]
	mov	DWORD PTR tv913[ebp], ecx
	mov	edx, DWORD PTR tv913[ebp]
	sub	edx, 65					; 00000041H
	mov	DWORD PTR tv913[ebp], edx
	cmp	DWORD PTR tv913[ebp], 19		; 00000013H
	ja	SHORT $LN169@GridProc
	mov	eax, DWORD PTR tv913[ebp]
	movzx	ecx, BYTE PTR $LN307@GridProc[eax]
	jmp	DWORD PTR $LN311@GridProc[ecx*4]
$LN174@GridProc:
; Line 1886
	mov	DWORD PTR _ReturnValue$[ebp], 1
	jmp	SHORT $LN175@GridProc
$LN173@GridProc:
; Line 1887
	mov	DWORD PTR _ReturnValue$[ebp], 2
	jmp	SHORT $LN175@GridProc
$LN172@GridProc:
; Line 1888
	mov	DWORD PTR _ReturnValue$[ebp], 3
	jmp	SHORT $LN175@GridProc
$LN171@GridProc:
; Line 1889
	mov	DWORD PTR _ReturnValue$[ebp], 4
	jmp	SHORT $LN175@GridProc
$LN170@GridProc:
; Line 1890
	mov	DWORD PTR _ReturnValue$[ebp], 5
	jmp	SHORT $LN175@GridProc
$LN169@GridProc:
; Line 1891
	mov	DWORD PTR _ReturnValue$[ebp], 1
$LN175@GridProc:
; Line 1894
	jmp	$LN287@GridProc
$LN168@GridProc:
; Line 1896
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A, edx ; LPBGcell
; Line 1897
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	push	eax
	call	?OutOfRange@@YAHPAU_BGCELL@@@Z		; OutOfRange
	add	esp, 4
	test	eax, eax
	je	SHORT $LN167@GridProc
; Line 1899
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	edx, ax
	or	edx, 196608				; 00030000H
	mov	DWORD PTR _wParam$[ebp], edx
; Line 1900
	mov	DWORD PTR _lParam$[ebp], 0
; Line 1901
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	273					; 00000111H
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 1902
	mov	DWORD PTR _ReturnValue$[ebp], -1
; Line 1903
	jmp	$LN287@GridProc
$LN167@GridProc:
; Line 1905
	mov	eax, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR ?LPBGcell@@3PAU_BGCELL@@A ; LPBGcell
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET $SG124182
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H
; Line 1907
	mov	DWORD PTR _ReturnValue$[ebp], 0
; Line 1908
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	?BinarySearchListBox@@YAHPAUHWND__@@PA_W@Z ; BinarySearchListBox
	add	esp, 8
	mov	DWORD PTR ?FindResult@@3HA, eax		; FindResult
; Line 1909
	cmp	DWORD PTR ?FindResult@@3HA, -1		; FindResult
	je	SHORT $LN164@GridProc
; Line 1912
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR ?FindResult@@3HA		; FindResult
	push	eax
	push	393					; 00000189H
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+4]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 1913
	mov	eax, 2
	imul	ecx, eax, 10
	movzx	edx, WORD PTR _buffer$[ebp+ecx]
	mov	DWORD PTR tv954[ebp], edx
	cmp	DWORD PTR tv954[ebp], 80		; 00000050H
	je	SHORT $LN162@GridProc
	cmp	DWORD PTR tv954[ebp], 85		; 00000055H
	je	SHORT $LN163@GridProc
	jmp	SHORT $LN161@GridProc
$LN163@GridProc:
; Line 1915
	mov	DWORD PTR _ReturnValue$[ebp], 0
	jmp	SHORT $LN164@GridProc
$LN162@GridProc:
; Line 1916
	mov	DWORD PTR _ReturnValue$[ebp], 1
	jmp	SHORT $LN164@GridProc
$LN161@GridProc:
; Line 1917
	mov	DWORD PTR _ReturnValue$[ebp], 0
$LN164@GridProc:
; Line 1921
	jmp	$LN287@GridProc
$LN160@GridProc:
; Line 1923
	cmp	DWORD PTR _wParam$[ebp], 1
	jae	SHORT $LN159@GridProc
	mov	DWORD PTR _wParam$[ebp], 1
$LN159@GridProc:
; Line 1924
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1868], ecx
; Line 1925
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 1926
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 1927
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SizeGrid@@YAXPAUHWND__@@H@Z		; SizeGrid
	add	esp, 8
; Line 1931
	lea	ecx, DWORD PTR _rect$89[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1932
	push	0
	lea	eax, DWORD PTR _rect$89[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1934
	jmp	$LN287@GridProc
$LN158@GridProc:
; Line 1937
	cmp	DWORD PTR _wParam$[ebp], 0
	jae	SHORT $LN157@GridProc
	mov	DWORD PTR _wParam$[ebp], 0
$LN157@GridProc:
; Line 1938
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908], eax
; Line 1939
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 1940
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 1943
	lea	ecx, DWORD PTR _rect$95[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1944
	push	0
	lea	eax, DWORD PTR _rect$95[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1946
	jmp	$LN287@GridProc
$LN156@GridProc:
; Line 1948
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1949
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1936], edx
; Line 1950
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1951
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1952
	jmp	$LN287@GridProc
$LN155@GridProc:
; Line 1955
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1956
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1916], eax
; Line 1957
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 1958
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 1959
	jmp	$LN287@GridProc
$LN154@GridProc:
; Line 1962
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1940], edx
; Line 1965
	lea	eax, DWORD PTR _rect$106[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1966
	push	0
	lea	edx, DWORD PTR _rect$106[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1968
	jmp	$LN287@GridProc
$LN153@GridProc:
; Line 1971
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1932], edx
; Line 1974
	lea	eax, DWORD PTR _rect$103[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1975
	push	0
	lea	edx, DWORD PTR _rect$103[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1977
	jmp	$LN287@GridProc
$LN152@GridProc:
; Line 1981
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1920], edx
; Line 1984
	lea	eax, DWORD PTR _rect$105[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1985
	push	0
	lea	edx, DWORD PTR _rect$105[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1987
	jmp	$LN287@GridProc
$LN151@GridProc:
; Line 1989
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1924], edx
; Line 1992
	lea	eax, DWORD PTR _rect$104[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 1993
	push	0
	lea	edx, DWORD PTR _rect$104[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 1995
	jmp	$LN287@GridProc
$LN150@GridProc:
; Line 1998
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2028], edx
; Line 2001
	lea	eax, DWORD PTR _rect$102[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2002
	push	0
	lea	edx, DWORD PTR _rect$102[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2005
	jmp	$LN287@GridProc
$LN149@GridProc:
; Line 2009
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1988], edx
; Line 2012
	lea	eax, DWORD PTR _rect$100[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2013
	push	0
	lea	edx, DWORD PTR _rect$100[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2016
	jmp	$LN287@GridProc
$LN148@GridProc:
; Line 2019
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1984], edx
; Line 2022
	lea	eax, DWORD PTR _rect$98[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2023
	push	0
	lea	edx, DWORD PTR _rect$98[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2026
	jmp	$LN287@GridProc
$LN147@GridProc:
; Line 2032
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1992], edx
; Line 2035
	lea	eax, DWORD PTR _rect$96[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2036
	push	0
	lea	edx, DWORD PTR _rect$96[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2039
	jmp	$LN287@GridProc
$LN146@GridProc:
; Line 2042
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1996], edx
; Line 2045
	lea	eax, DWORD PTR _rect$94[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2046
	push	0
	lea	edx, DWORD PTR _rect$94[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2049
	jmp	$LN287@GridProc
$LN145@GridProc:
; Line 2052
	cmp	DWORD PTR _wParam$[ebp], 0
	jne	SHORT $LN144@GridProc
; Line 2054
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1928], 7895160 ; 00787878H
; Line 2056
	jmp	SHORT $LN143@GridProc
$LN144@GridProc:
; Line 2058
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1928], 0
$LN143@GridProc:
; Line 2063
	mov	eax, DWORD PTR _lParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _x$72[ebp], ecx
; Line 2064
	mov	edx, DWORD PTR _lParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR _y$21[ebp], eax
; Line 2065
	mov	ecx, DWORD PTR _y$21[ebp]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	call	?GetRowOfMouse@@YAHHH@Z			; GetRowOfMouse
	add	esp, 8
	mov	DWORD PTR _r$28[ebp], eax
; Line 2066
	mov	eax, DWORD PTR _x$72[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	call	?GetColOfMouse@@YAHHH@Z			; GetColOfMouse
	add	esp, 8
	mov	DWORD PTR _c$60[ebp], eax
; Line 2067
	mov	edx, DWORD PTR _x$72[ebp]
	add	edx, 10					; 0000000aH
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	call	?GetColOfMouse@@YAHHH@Z			; GetColOfMouse
	add	esp, 8
	mov	DWORD PTR _t$19[ebp], eax
; Line 2068
	mov	ecx, DWORD PTR _x$72[ebp]
	sub	ecx, 10					; 0000000aH
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	call	?GetColOfMouse@@YAHHH@Z			; GetColOfMouse
	add	esp, 8
	mov	DWORD PTR _z$26[ebp], eax
; Line 2070
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2036], 0
	je	SHORT $LN141@GridProc
; Line 2073
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _x$72[ebp]
	sub	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2052]
	mov	DWORD PTR _dx$30[ebp], edx
; Line 2074
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2048]
	add	ecx, DWORD PTR _dx$30[ebp]
	mov	DWORD PTR _nx$62[ebp], ecx
; Line 2075
	cmp	DWORD PTR _nx$62[ebp], 0
	jg	SHORT $LN140@GridProc
	mov	DWORD PTR _nx$62[ebp], 0
$LN140@GridProc:
; Line 2076
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2044]
	mov	DWORD PTR _cr$15[ebp], eax
; Line 2077
	mov	ecx, DWORD PTR _nx$62[ebp]
	push	ecx
	mov	edx, DWORD PTR _cr$15[ebp]
	push	edx
	push	8035					; 00001f63H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN141@GridProc:
; Line 2080
	cmp	DWORD PTR _r$28[ebp], 0
	jne	$LN139@GridProc
	cmp	DWORD PTR _c$60[ebp], -1
	jl	SHORT $LN139@GridProc
	mov	ecx, DWORD PTR _t$19[ebp]
	cmp	ecx, DWORD PTR _c$60[ebp]
	jne	SHORT $LN138@GridProc
	mov	edx, DWORD PTR _z$26[ebp]
	cmp	edx, DWORD PTR _c$60[ebp]
	je	SHORT $LN139@GridProc
$LN138@GridProc:
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2036], 0
	jne	SHORT $LN139@GridProc
; Line 2082
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2056], 2
	je	SHORT $LN137@GridProc
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2040], 0
	je	SHORT $LN137@GridProc
; Line 2084
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2056], 2
; Line 2085
	push	32644					; 00007f84H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4
$LN137@GridProc:
; Line 2089
	jmp	SHORT $LN135@GridProc
$LN139@GridProc:
; Line 2091
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2056], 1
	je	SHORT $LN135@GridProc
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2036], 0
	jne	SHORT $LN135@GridProc
; Line 2093
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2056], 1
; Line 2094
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4
$LN135@GridProc:
; Line 2097
	jmp	$LN287@GridProc
$LN134@GridProc:
; Line 2100
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2036], 0
	je	SHORT $LN133@GridProc
; Line 2102
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2036], 0
; Line 2103
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	push	eax
	call	DWORD PTR __imp__SetCursor@4
; Line 2104
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2056], 1
; Line 2105
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+3088]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2020], eax
; Line 2106
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SizeGrid@@YAXPAUHWND__@@H@Z		; SizeGrid
	add	esp, 8
$LN133@GridProc:
; Line 2108
	jmp	$LN287@GridProc
$LN132@GridProc:
; Line 2116
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2056], 2
	jne	$LN131@GridProc
; Line 2120
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2036], 0
	jne	SHORT $LN130@GridProc
; Line 2122
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2020]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+3088], ecx
$LN130@GridProc:
; Line 2124
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2036], 1
; Line 2125
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2020], 0
; Line 2126
	mov	ecx, DWORD PTR _lParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR _x$74[ebp], edx
; Line 2127
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _x$74[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2052], ecx
; Line 2128
	mov	edx, DWORD PTR _x$74[ebp]
	add	edx, 10					; 0000000aH
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	call	?GetColOfMouse@@YAHHH@Z			; GetColOfMouse
	add	esp, 8
	mov	DWORD PTR _t$11[ebp], eax
; Line 2129
	mov	ecx, DWORD PTR _x$74[ebp]
	sub	ecx, 10					; 0000000aH
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	call	?GetColOfMouse@@YAHHH@Z			; GetColOfMouse
	add	esp, 8
	mov	DWORD PTR _z$40[ebp], eax
; Line 2130
	mov	eax, DWORD PTR _x$74[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	call	?GetColOfMouse@@YAHHH@Z			; GetColOfMouse
	add	esp, 8
	mov	DWORD PTR _c$84[ebp], eax
; Line 2131
	mov	edx, DWORD PTR _t$11[ebp]
	cmp	edx, DWORD PTR _c$84[ebp]
	je	SHORT $LN129@GridProc
; Line 2134
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _c$84[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2044], ecx
$LN129@GridProc:
; Line 2136
	mov	edx, DWORD PTR _z$40[ebp]
	cmp	edx, DWORD PTR _c$84[ebp]
	je	SHORT $LN128@GridProc
; Line 2139
	cmp	DWORD PTR _c$84[ebp], -1
	jne	SHORT $LN127@GridProc
; Line 2141
	push	0
	push	0
	push	8048					; 00001f70H
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	mov	DWORD PTR _c$84[ebp], eax
; Line 2143
	jmp	SHORT $LN126@GridProc
$LN127@GridProc:
; Line 2145
	mov	ecx, DWORD PTR _c$84[ebp]
	sub	ecx, 1
	mov	DWORD PTR _c$84[ebp], ecx
$LN126@GridProc:
; Line 2147
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _c$84[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2044], eax
$LN128@GridProc:
; Line 2150
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _c$84[ebp]
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+eax*4+2060]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2048], ecx
$LN131@GridProc:
; Line 2153
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
	je	SHORT $LN125@GridProc
; Line 2155
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
; Line 2157
	jmp	SHORT $LN124@GridProc
$LN125@GridProc:
; Line 2160
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetFocus@4
$LN124@GridProc:
; Line 2163
	mov	DWORD PTR _NRC$46[ebp], 0
; Line 2164
	mov	DWORD PTR _NCC$51[ebp], 0
; Line 2166
	call	DWORD PTR __imp__GetFocus@0
	cmp	eax, DWORD PTR _hWnd$[ebp]
	jne	$LN123@GridProc
; Line 2169
	mov	eax, DWORD PTR _lParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _x$38[ebp], ecx
; Line 2170
	mov	edx, DWORD PTR _lParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR _y$39[ebp], eax
; Line 2171
	mov	ecx, DWORD PTR _y$39[ebp]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	call	?GetRowOfMouse@@YAHHH@Z			; GetRowOfMouse
	add	esp, 8
	mov	DWORD PTR _r$73[ebp], eax
; Line 2172
	mov	eax, DWORD PTR _x$38[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	call	?GetColOfMouse@@YAHHH@Z			; GetColOfMouse
	add	esp, 8
	mov	DWORD PTR _c$68[ebp], eax
; Line 2173
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2174
	cmp	DWORD PTR _r$73[ebp], 0
	jle	$LN118@GridProc
	cmp	DWORD PTR _c$68[ebp], 0
	jle	$LN118@GridProc
; Line 2176
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _r$73[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	je	SHORT $LN121@GridProc
; Line 2178
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _r$73[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], ecx
; Line 2179
	mov	DWORD PTR _NRC$46[ebp], 1
; Line 2181
	jmp	SHORT $LN120@GridProc
$LN121@GridProc:
; Line 2183
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _r$73[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], eax
$LN120@GridProc:
; Line 2185
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _c$68[ebp]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	je	SHORT $LN119@GridProc
; Line 2187
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _c$68[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896], ecx
; Line 2188
	mov	DWORD PTR _NCC$51[ebp], 1
; Line 2190
	jmp	SHORT $LN118@GridProc
$LN119@GridProc:
; Line 2192
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _c$68[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896], eax
$LN118@GridProc:
; Line 2196
	cmp	DWORD PTR _NRC$46[ebp], 0
	je	SHORT $LN117@GridProc
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
$LN117@GridProc:
; Line 2197
	cmp	DWORD PTR _NCC$51[ebp], 0
	je	SHORT $LN116@GridProc
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyColChanged@@YAXPAUHWND__@@H@Z	; NotifyColChanged
	add	esp, 8
$LN116@GridProc:
; Line 2199
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2200
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2201
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2202
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2203
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2205
	cmp	DWORD PTR _message$[ebp], 513		; 00000201H
	jne	SHORT $LN115@GridProc
; Line 2206
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyCellClicked@@YAXPAUHWND__@@H@Z	; NotifyCellClicked
	add	esp, 8
	jmp	SHORT $LN112@GridProc
$LN115@GridProc:
; Line 2207
	cmp	DWORD PTR _message$[ebp], 515		; 00000203H
	jne	SHORT $LN113@GridProc
; Line 2208
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyCellDbClicked@@YAXPAUHWND__@@H@Z	; NotifyCellDbClicked
	add	esp, 8
; Line 2209
	jmp	SHORT $LN112@GridProc
$LN113@GridProc:
; Line 2210
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?NotifyCellRClicked@@YAXPAUHWND__@@H@Z	; NotifyCellRClicked
	add	esp, 8
$LN112@GridProc:
; Line 2212
	jmp	SHORT $LN111@GridProc
$LN123@GridProc:
; Line 2214
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
$LN111@GridProc:
; Line 2217
	jmp	$LN287@GridProc
$LN110@GridProc:
; Line 2220
	mov	eax, 1
	jmp	$LN289@GridProc
; Line 2221
	jmp	$LN287@GridProc
$LN109@GridProc:
; Line 2225
	mov	DWORD PTR _ReturnValue$[ebp], 145	; 00000091H
; Line 2226
	cmp	DWORD PTR _wParam$[ebp], 13		; 0000000dH
	jne	$LN108@GridProc
; Line 2228
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?NotifyCellDbClicked@@YAXPAUHWND__@@H@Z	; NotifyCellDbClicked
	add	esp, 8
; Line 2229
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2004], 0
	je	SHORT $LN107@GridProc
; Line 2231
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN107@GridProc:
; Line 2233
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2235
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2236
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2237
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2238
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 0
; Line 2239
	jmp	$LN287@GridProc
$LN108@GridProc:
; Line 2242
	cmp	DWORD PTR _wParam$[ebp], 27		; 0000001bH
	jne	SHORT $LN106@GridProc
; Line 2244
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2004], 0
	je	SHORT $LN105@GridProc
; Line 2246
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
; Line 2247
	push	OFFSET $SG124320
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
; Line 2248
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__HideCaret@4
; Line 2249
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2250
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyEditEnd@@YAXPAUHWND__@@H@Z	; NotifyEditEnd
	add	esp, 8
; Line 2252
	jmp	SHORT $LN104@GridProc
$LN105@GridProc:
; Line 2254
	mov	DWORD PTR _ReturnValue$[ebp], 0
$LN104@GridProc:
; Line 2256
	jmp	$LN287@GridProc
$LN106@GridProc:
; Line 2258
	jmp	$LN287@GridProc
$LN103@GridProc:
; Line 2261
	cmp	DWORD PTR _wParam$[ebp], 27		; 0000001bH
	jne	SHORT $LN102@GridProc
; Line 2263
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
	je	SHORT $LN101@GridProc
; Line 2265
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 0
; Line 2266
	push	OFFSET $SG124325
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 2267
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__HideCaret@4
; Line 2268
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2269
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyEditEnd@@YAXPAUHWND__@@H@Z	; NotifyEditEnd
	add	esp, 8
$LN101@GridProc:
; Line 2271
	jmp	$LN287@GridProc
$LN102@GridProc:
; Line 2336
	cmp	DWORD PTR _wParam$[ebp], 46		; 0000002eH
	jne	SHORT $LN100@GridProc
; Line 2338
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyDelete@@YAXPAUHWND__@@H@Z	; NotifyDelete
	add	esp, 8
; Line 2339
	jmp	$LN287@GridProc
$LN100@GridProc:
; Line 2341
	cmp	DWORD PTR _wParam$[ebp], 9
	jne	SHORT $LN99@GridProc
; Line 2343
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SetFocus@4
; Line 2344
	jmp	$LN287@GridProc
$LN99@GridProc:
; Line 2346
	cmp	DWORD PTR _wParam$[ebp], 34		; 00000022H
	jne	$LN98@GridProc
; Line 2350
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 0
	je	SHORT $LN97@GridProc
; Line 2352
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN97@GridProc:
; Line 2355
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844], 0
	jne	SHORT $LN96@GridProc
	jmp	$LN287@GridProc
$LN96@GridProc:
; Line 2356
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	jne	SHORT $LN95@GridProc
	jmp	$LN287@GridProc
$LN95@GridProc:
; Line 2358
	lea	ecx, DWORD PTR _gridrect$92[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2359
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1888]
	add	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1908]
	mov	eax, DWORD PTR _gridrect$92[ebp+12]
	sub	eax, edx
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cdq
	idiv	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _rpp$37[ebp], eax
; Line 2360
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2361
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	add	edx, DWORD PTR _rpp$37[ebp]
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], edx
; Line 2363
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	jle	SHORT $LN94@GridProc
; Line 2365
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], eax
$LN94@GridProc:
; Line 2367
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
; Line 2368
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2369
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2370
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2371
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2372
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2373
	jmp	$LN287@GridProc
$LN98@GridProc:
; Line 2376
	cmp	DWORD PTR _wParam$[ebp], 33		; 00000021H
	jne	$LN93@GridProc
; Line 2380
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
	je	SHORT $LN92@GridProc
; Line 2382
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN92@GridProc:
; Line 2385
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844], 0
	jne	SHORT $LN91@GridProc
	jmp	$LN287@GridProc
$LN91@GridProc:
; Line 2386
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], 1
	jne	SHORT $LN90@GridProc
	jmp	$LN287@GridProc
$LN90@GridProc:
; Line 2388
	lea	ecx, DWORD PTR _gridrect$90[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2389
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1888]
	add	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1908]
	mov	eax, DWORD PTR _gridrect$90[ebp+12]
	sub	eax, edx
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cdq
	idiv	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _rpp$35[ebp], eax
; Line 2390
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2391
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	sub	edx, DWORD PTR _rpp$35[ebp]
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], edx
; Line 2392
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892], 1
	jge	SHORT $LN89@GridProc
; Line 2394
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], 1
$LN89@GridProc:
; Line 2396
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
; Line 2397
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2398
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2399
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2400
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2401
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2402
	jmp	$LN287@GridProc
$LN93@GridProc:
; Line 2404
	cmp	DWORD PTR _wParam$[ebp], 40		; 00000028H
	jne	$LN88@GridProc
; Line 2406
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2004], 0
	je	SHORT $LN87@GridProc
; Line 2408
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN87@GridProc:
; Line 2411
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844], 0
	jne	SHORT $LN86@GridProc
	jmp	$LN287@GridProc
$LN86@GridProc:
; Line 2412
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844]
	jne	SHORT $LN85@GridProc
	jmp	$LN287@GridProc
$LN85@GridProc:
; Line 2413
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2414
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	add	edx, 1
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], edx
; Line 2415
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	jle	SHORT $LN84@GridProc
; Line 2417
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], eax
; Line 2419
	jmp	SHORT $LN83@GridProc
$LN84@GridProc:
; Line 2421
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
$LN83@GridProc:
; Line 2423
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2424
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2425
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2426
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2427
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2428
	jmp	$LN287@GridProc
$LN88@GridProc:
; Line 2430
	cmp	DWORD PTR _wParam$[ebp], 38		; 00000026H
	jne	$LN82@GridProc
; Line 2432
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2004], 0
	je	SHORT $LN81@GridProc
; Line 2434
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN81@GridProc:
; Line 2437
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844], 0
	jne	SHORT $LN80@GridProc
	jmp	$LN287@GridProc
$LN80@GridProc:
; Line 2438
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], 1
	jne	SHORT $LN79@GridProc
	jmp	$LN287@GridProc
$LN79@GridProc:
; Line 2440
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2441
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	sub	ecx, 1
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], ecx
; Line 2442
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], 1
	jge	SHORT $LN78@GridProc
; Line 2444
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892], 1
; Line 2446
	jmp	SHORT $LN77@GridProc
$LN78@GridProc:
; Line 2448
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
$LN77@GridProc:
; Line 2450
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2451
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2452
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2453
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2454
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2455
	jmp	$LN287@GridProc
$LN82@GridProc:
; Line 2458
	cmp	DWORD PTR _wParam$[ebp], 37		; 00000025H
	jne	$LN76@GridProc
; Line 2461
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 0
	je	SHORT $LN75@GridProc
; Line 2463
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN75@GridProc:
; Line 2466
	push	-1
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	call	?GetNextColWithWidth@@YAHHHH@Z		; GetNextColWithWidth
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN74@GridProc
; Line 2468
	jmp	$LN287@GridProc
$LN74@GridProc:
; Line 2470
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2471
	push	-1
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	call	?GetNextColWithWidth@@YAHHHH@Z		; GetNextColWithWidth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _k$42[ebp], eax
; Line 2472
	cmp	DWORD PTR _k$42[ebp], 0
	je	SHORT $LN73@GridProc
; Line 2474
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _k$42[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896], eax
; Line 2475
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyColChanged@@YAXPAUHWND__@@H@Z	; NotifyColChanged
	add	esp, 8
$LN73@GridProc:
; Line 2477
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2478
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2479
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2480
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2481
	jmp	$LN287@GridProc
$LN76@GridProc:
; Line 2484
	cmp	DWORD PTR _wParam$[ebp], 39		; 00000027H
	jne	$LN72@GridProc
; Line 2487
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2004], 0
	je	SHORT $LN71@GridProc
; Line 2489
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN71@GridProc:
; Line 2491
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2492
	push	1
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	call	?GetNextColWithWidth@@YAHHHH@Z		; GetNextColWithWidth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _k$53[ebp], eax
; Line 2493
	cmp	DWORD PTR _k$53[ebp], 0
	je	SHORT $LN70@GridProc
; Line 2495
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _k$53[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896], ecx
; Line 2496
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?NotifyColChanged@@YAXPAUHWND__@@H@Z	; NotifyColChanged
	add	esp, 8
$LN70@GridProc:
; Line 2498
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2499
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2500
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2501
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2502
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2503
	jmp	$LN287@GridProc
$LN72@GridProc:
; Line 2506
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2510
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1952], 0
	je	$LN69@GridProc
	cmp	DWORD PTR _wParam$[ebp], 13		; 0000000dH
	jne	$LN69@GridProc
; Line 2513
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2514
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	add	eax, 1
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892], eax
; Line 2515
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844]
	jle	SHORT $LN68@GridProc
; Line 2517
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], ecx
; Line 2519
	jmp	SHORT $LN67@GridProc
$LN68@GridProc:
; Line 2521
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
$LN67@GridProc:
; Line 2523
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2524
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2525
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1896]
	push	eax
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2526
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2527
	jmp	$LN287@GridProc
$LN69@GridProc:
; Line 2530
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1952], 0
	je	SHORT $LN66@GridProc
	jmp	$LN287@GridProc
$LN66@GridProc:
; Line 2532
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2000], 0
	jne	$LN64@GridProc
; Line 2535
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	call	?GetASCII@@YA_WIJ@Z			; GetASCII
	add	esp, 8
	movzx	ecx, ax
	mov	DWORD PTR _ascii$33[ebp], ecx
; Line 2536
	cmp	DWORD PTR _ascii$33[ebp], 13		; 0000000dH
	jne	$LN64@GridProc
; Line 2539
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2540
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	add	edx, 1
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892], edx
; Line 2541
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892]
	cmp	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1844]
	jle	SHORT $LN63@GridProc
; Line 2543
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], eax
; Line 2545
	jmp	SHORT $LN62@GridProc
$LN63@GridProc:
; Line 2547
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
$LN62@GridProc:
; Line 2549
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2550
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2551
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2552
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2553
	jmp	$LN287@GridProc
$LN64@GridProc:
; Line 2560
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2000], 0
	je	$LN54@GridProc
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844], 0
	jle	$LN54@GridProc
; Line 2563
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2564
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2565
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2569
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	call	?GetASCII@@YA_WIJ@Z			; GetASCII
	add	esp, 8
	movzx	ecx, ax
	mov	DWORD PTR _ascii$31[ebp], ecx
; Line 2570
	mov	edx, DWORD PTR _ascii$31[ebp]
	mov	DWORD PTR _wParam$[ebp], edx
; Line 2571
	cmp	DWORD PTR _wParam$[ebp], 32		; 00000020H
	jb	$LN60@GridProc
	cmp	DWORD PTR _wParam$[ebp], 125		; 0000007dH
	ja	$LN60@GridProc
; Line 2574
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 0
	jne	SHORT $LN59@GridProc
; Line 2576
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyEditBegin@@YAXPAUHWND__@@H@Z	; NotifyEditBegin
	add	esp, 8
$LN59@GridProc:
; Line 2578
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 1
; Line 2579
	mov	ecx, 2
	imul	edx, ecx, 0
	mov	ax, WORD PTR _wParam$[ebp]
	mov	WORD PTR _tstring$48[ebp+edx], ax
; Line 2580
	mov	DWORD PTR $T44[ebp], 2
	cmp	DWORD PTR $T44[ebp], 4
	jae	SHORT $LN295@GridProc
	jmp	SHORT $LN296@GridProc
$LN295@GridProc:
	call	___report_rangecheckfailure
$LN296@GridProc:
	xor	ecx, ecx
	mov	edx, DWORD PTR $T44[ebp]
	mov	WORD PTR _tstring$48[ebp+edx], cx
; Line 2581
	lea	eax, DWORD PTR _tstring$48[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z ; DisplayEditString
	add	esp, 12					; 0000000cH
; Line 2582
	jmp	$LN287@GridProc
$LN60@GridProc:
; Line 2584
	cmp	DWORD PTR _wParam$[ebp], 8
	jne	$LN58@GridProc
; Line 2586
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 0
	jne	SHORT $LN57@GridProc
; Line 2588
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?NotifyEditBegin@@YAXPAUHWND__@@H@Z	; NotifyEditBegin
	add	esp, 8
$LN57@GridProc:
; Line 2591
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2004], 1
; Line 2592
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	test	eax, eax
	jne	SHORT $LN56@GridProc
; Line 2594
	push	OFFSET $SG124382
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z ; DisplayEditString
	add	esp, 12					; 0000000cH
; Line 2595
	jmp	$LN287@GridProc
; Line 2597
	jmp	SHORT $LN55@GridProc
$LN56@GridProc:
; Line 2600
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	mov	DWORD PTR _j$29[ebp], eax
; Line 2601
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	xor	eax, eax
	mov	ecx, DWORD PTR _j$29[ebp]
	mov	WORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+ecx*2+620], ax
; Line 2602
	push	OFFSET $SG124385
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DisplayEditString@@YAXPAUHWND__@@HPA_W@Z ; DisplayEditString
	add	esp, 12					; 0000000cH
$LN55@GridProc:
; Line 2604
	jmp	$LN287@GridProc
$LN58@GridProc:
; Line 2606
	cmp	DWORD PTR _wParam$[ebp], 13		; 0000000dH
	jne	$LN54@GridProc
; Line 2609
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2004], 0
	je	SHORT $LN53@GridProc
; Line 2611
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?CloseEdit@@YAXPAUHWND__@@H@Z		; CloseEdit
	add	esp, 8
$LN53@GridProc:
; Line 2613
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2614
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	add	ecx, 1
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892], ecx
; Line 2615
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	cmp	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844]
	jle	SHORT $LN52@GridProc
; Line 2617
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892], edx
; Line 2619
	jmp	SHORT $LN51@GridProc
$LN52@GridProc:
; Line 2621
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?NotifyRowChanged@@YAXPAUHWND__@@H@Z	; NotifyRowChanged
	add	esp, 8
$LN51@GridProc:
; Line 2623
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2624
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2625
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896]
	push	ecx
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1892]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2626
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2627
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2004], 0
; Line 2628
	jmp	$LN287@GridProc
$LN54@GridProc:
; Line 2632
	jmp	$LN287@GridProc
$LN50@GridProc:
; Line 2634
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetFocus@4
; Line 2635
	cmp	DWORD PTR _wParam$[ebp], 1
	jne	SHORT $LN297@GridProc
	mov	DWORD PTR tv2111[ebp], 1
	jmp	SHORT $LN298@GridProc
$LN297@GridProc:
	mov	DWORD PTR tv2111[ebp], 0
$LN298@GridProc:
	mov	eax, DWORD PTR tv2111[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN48@GridProc
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 3
	jne	$LN49@GridProc
$LN48@GridProc:
; Line 2638
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _cp$64[ebp], eax
; Line 2639
	push	1
	mov	edx, DWORD PTR _cp$64[ebp]
	add	edx, 1
	push	edx
	push	0
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2640
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _cp$64[ebp], eax
; Line 2641
	mov	edx, DWORD PTR _cp$64[ebp]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?GetNthVisibleColumn@@YAHPAUHWND__@@HH@Z ; GetNthVisibleColumn
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _np$27[ebp], eax
; Line 2642
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _np$27[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1864], eax
; Line 2643
	push	1
	mov	ecx, DWORD PTR _cp$64[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2644
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
$LN49@GridProc:
; Line 2646
	cmp	DWORD PTR _wParam$[ebp], 0
	jne	SHORT $LN299@GridProc
	mov	DWORD PTR tv2144[ebp], 1
	jmp	SHORT $LN300@GridProc
$LN299@GridProc:
	mov	DWORD PTR tv2144[ebp], 0
$LN300@GridProc:
	mov	ecx, DWORD PTR tv2144[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	test	edx, edx
	jne	SHORT $LN46@GridProc
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 2
	jne	$LN47@GridProc
$LN46@GridProc:
; Line 2649
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _cp$70[ebp], eax
; Line 2650
	push	1
	mov	eax, DWORD PTR _cp$70[ebp]
	sub	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2651
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _cp$70[ebp], eax
; Line 2652
	mov	eax, DWORD PTR _cp$70[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?GetNthVisibleColumn@@YAHPAUHWND__@@HH@Z ; GetNthVisibleColumn
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _np$25[ebp], eax
; Line 2653
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _np$25[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864], ecx
; Line 2654
	push	1
	mov	edx, DWORD PTR _cp$70[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2655
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
$LN47@GridProc:
; Line 2657
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 5
	jne	$LN45@GridProc
; Line 2660
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR _cp$50[ebp], edx
; Line 2661
	mov	eax, DWORD PTR _cp$50[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?GetNthVisibleColumn@@YAHPAUHWND__@@HH@Z ; GetNthVisibleColumn
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _np$52[ebp], eax
; Line 2662
	push	1
	mov	eax, DWORD PTR _np$52[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2663
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _np$52[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1864], eax
; Line 2664
	push	1
	mov	ecx, DWORD PTR _cp$50[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2665
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
$LN45@GridProc:
; Line 2669
	jmp	$LN287@GridProc
$LN44@GridProc:
; Line 2673
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	mov	WORD PTR _zDelta$57[ebp], cx
; Line 2674
	movsx	edx, WORD PTR _zDelta$57[ebp]
	test	edx, edx
	jge	SHORT $LN301@GridProc
	mov	DWORD PTR tv2207[ebp], 1
	jmp	SHORT $LN302@GridProc
$LN301@GridProc:
	mov	DWORD PTR tv2207[ebp], 0
$LN302@GridProc:
	push	0
	mov	eax, DWORD PTR tv2207[ebp]
	push	eax
	push	277					; 00000115H
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 2675
	mov	eax, 1
	jmp	$LN289@GridProc
$LN43@GridProc:
; Line 2679
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetFocus@4
; Line 2680
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 5
	jne	$LN40@GridProc
; Line 2684
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860], eax
; Line 2685
	push	1
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	push	eax
	push	1
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2686
	lea	edx, DWORD PTR _gridrect$110[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 2687
	lea	ecx, DWORD PTR _max$24[ebp]
	push	ecx
	lea	edx, DWORD PTR _min$9[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetScrollRange@16
; Line 2688
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, DWORD PTR _max$24[ebp]
	jne	SHORT $LN41@GridProc
; Line 2690
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _gridrect$110[ebp+12]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1868]
	mov	DWORD PTR _gridrect$110[ebp+4], ecx
; Line 2691
	push	1
	lea	edx, DWORD PTR _gridrect$110[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2693
	jmp	SHORT $LN40@GridProc
$LN41@GridProc:
; Line 2695
	push	0
	lea	ecx, DWORD PTR _gridrect$110[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
$LN40@GridProc:
; Line 2699
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 3
	jne	$LN36@GridProc
; Line 2704
	lea	edx, DWORD PTR _gridrect$113[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 2705
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1888]
	add	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	mov	ecx, DWORD PTR _gridrect$113[ebp+12]
	sub	ecx, eax
	imul	esi, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, ecx
	cdq
	idiv	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[esi+1868]
	mov	DWORD PTR _rpp$22[ebp], eax
; Line 2706
	lea	edx, DWORD PTR _max$58[ebp]
	push	edx
	lea	eax, DWORD PTR _min$3[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetScrollRange@16
; Line 2707
	push	1
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _sp$81[ebp], eax
; Line 2708
	mov	eax, DWORD PTR _sp$81[ebp]
	add	eax, DWORD PTR _rpp$22[ebp]
	mov	DWORD PTR _sp$81[ebp], eax
; Line 2709
	mov	ecx, DWORD PTR _sp$81[ebp]
	cmp	ecx, DWORD PTR _max$58[ebp]
	jle	SHORT $LN38@GridProc
	mov	edx, DWORD PTR _max$58[ebp]
	mov	DWORD PTR _sp$81[ebp], edx
$LN38@GridProc:
; Line 2710
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _sp$81[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860], ecx
; Line 2711
	push	1
	mov	edx, DWORD PTR _sp$81[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2712
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	push	edx
	mov	eax, DWORD PTR _sp$81[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2713
	mov	eax, DWORD PTR _sp$81[ebp]
	cmp	eax, DWORD PTR _max$58[ebp]
	jne	SHORT $LN37@GridProc
; Line 2715
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _gridrect$113[ebp+12]
	sub	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _gridrect$113[ebp+4], edx
; Line 2716
	push	1
	lea	eax, DWORD PTR _gridrect$113[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2718
	jmp	SHORT $LN36@GridProc
$LN37@GridProc:
; Line 2720
	push	0
	lea	edx, DWORD PTR _gridrect$113[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
$LN36@GridProc:
; Line 2724
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 1
	jne	$LN32@GridProc
; Line 2729
	lea	eax, DWORD PTR _gridrect$109[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2730
	lea	edx, DWORD PTR _max$56[ebp]
	push	edx
	lea	eax, DWORD PTR _min$2[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetScrollRange@16
; Line 2731
	push	1
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _sp$79[ebp], eax
; Line 2732
	mov	eax, DWORD PTR _sp$79[ebp]
	add	eax, 1
	mov	DWORD PTR _sp$79[ebp], eax
; Line 2733
	mov	ecx, DWORD PTR _sp$79[ebp]
	cmp	ecx, DWORD PTR _max$56[ebp]
	jle	SHORT $LN34@GridProc
	mov	edx, DWORD PTR _max$56[ebp]
	mov	DWORD PTR _sp$79[ebp], edx
$LN34@GridProc:
; Line 2734
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _sp$79[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860], ecx
; Line 2735
	push	1
	mov	edx, DWORD PTR _sp$79[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2736
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864]
	push	edx
	mov	eax, DWORD PTR _sp$79[ebp]
	push	eax
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2737
	mov	eax, DWORD PTR _sp$79[ebp]
	cmp	eax, DWORD PTR _max$56[ebp]
	jne	SHORT $LN33@GridProc
; Line 2739
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _gridrect$109[ebp+12]
	sub	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _gridrect$109[ebp+4], edx
; Line 2740
	push	1
	lea	eax, DWORD PTR _gridrect$109[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2742
	jmp	SHORT $LN32@GridProc
$LN33@GridProc:
; Line 2744
	push	0
	lea	edx, DWORD PTR _gridrect$109[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
$LN32@GridProc:
; Line 2751
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 2
	jne	$LN28@GridProc
; Line 2756
	lea	eax, DWORD PTR _gridrect$114[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2757
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1888]
	add	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1908]
	mov	eax, DWORD PTR _gridrect$114[ebp+12]
	sub	eax, ecx
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	cdq
	idiv	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _rpp$20[ebp], eax
; Line 2758
	lea	edx, DWORD PTR _max$18[ebp]
	push	edx
	lea	eax, DWORD PTR _min$6[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetScrollRange@16
; Line 2759
	push	1
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _sp$82[ebp], eax
; Line 2760
	mov	eax, DWORD PTR _sp$82[ebp]
	sub	eax, DWORD PTR _rpp$20[ebp]
	mov	DWORD PTR _sp$82[ebp], eax
; Line 2761
	cmp	DWORD PTR _sp$82[ebp], 1
	jge	SHORT $LN30@GridProc
	mov	DWORD PTR _sp$82[ebp], 1
$LN30@GridProc:
; Line 2762
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _sp$82[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1860], edx
; Line 2763
	push	1
	mov	eax, DWORD PTR _sp$82[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2764
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1864]
	push	eax
	mov	ecx, DWORD PTR _sp$82[ebp]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2765
	mov	ecx, DWORD PTR _sp$82[ebp]
	cmp	ecx, DWORD PTR _max$18[ebp]
	jne	SHORT $LN29@GridProc
; Line 2767
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _gridrect$114[ebp+12]
	sub	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868]
	mov	DWORD PTR _gridrect$114[ebp+4], eax
; Line 2768
	push	1
	lea	ecx, DWORD PTR _gridrect$114[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2770
	jmp	SHORT $LN28@GridProc
$LN29@GridProc:
; Line 2772
	push	0
	lea	eax, DWORD PTR _gridrect$114[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
$LN28@GridProc:
; Line 2776
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	test	eax, eax
	jne	$LN24@GridProc
; Line 2781
	lea	ecx, DWORD PTR _gridrect$108[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2782
	push	1
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetScrollPos@8
	mov	DWORD PTR _sp$83[ebp], eax
; Line 2783
	lea	ecx, DWORD PTR _max$16[ebp]
	push	ecx
	lea	edx, DWORD PTR _min$4[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetScrollRange@16
; Line 2784
	mov	ecx, DWORD PTR _sp$83[ebp]
	sub	ecx, 1
	mov	DWORD PTR _sp$83[ebp], ecx
; Line 2785
	cmp	DWORD PTR _sp$83[ebp], 1
	jge	SHORT $LN26@GridProc
	mov	DWORD PTR _sp$83[ebp], 1
$LN26@GridProc:
; Line 2786
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _sp$83[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1860], eax
; Line 2787
	push	1
	mov	ecx, DWORD PTR _sp$83[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetScrollPos@16
; Line 2788
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864]
	push	ecx
	mov	edx, DWORD PTR _sp$83[ebp]
	push	edx
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2789
	mov	edx, DWORD PTR _sp$83[ebp]
	cmp	edx, DWORD PTR _max$16[ebp]
	jne	SHORT $LN25@GridProc
; Line 2791
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR _gridrect$108[ebp+12]
	sub	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1868]
	mov	DWORD PTR _gridrect$108[ebp+4], ecx
; Line 2792
	push	1
	lea	edx, DWORD PTR _gridrect$108[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 2794
	jmp	SHORT $LN24@GridProc
$LN25@GridProc:
; Line 2796
	push	0
	lea	ecx, DWORD PTR _gridrect$108[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
$LN24@GridProc:
; Line 2800
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2802
	jmp	$LN287@GridProc
$LN23@GridProc:
; Line 2805
	call	?CountGrids@@YAHXZ			; CountGrids
	test	eax, eax
	jne	SHORT $LN22@GridProc
; Line 2807
	mov	ecx, DWORD PTR ?hfontbody@@3PAUHFONT__@@A ; hfontbody
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
; Line 2808
	mov	edx, DWORD PTR ?hfontheader@@3PAUHFONT__@@A ; hfontheader
	push	edx
	call	DWORD PTR __imp__DeleteObject@4
; Line 2809
	mov	eax, DWORD PTR ?hfonttitle@@3PAUHFONT__@@A ; hfonttitle
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
$LN22@GridProc:
; Line 2811
	push	0
	push	0
	push	388					; 00000184H
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+4]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
; Line 2812
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 2813
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx], 0
; Line 2814
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+4], 0
; Line 2815
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1980], 0
; Line 2816
	push	OFFSET $SG124479
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	add	edx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+8
	push	edx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 2817
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1844], 100 ; 00000064H
; Line 2818
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1848], 255 ; 000000ffH
; Line 2819
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1860], 1
; Line 2820
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1864], 1
; Line 2821
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868], 20 ; 00000014H
; Line 2822
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1888], 20 ; 00000014H
; Line 2823
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1992], 1
; Line 2824
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1996], 1
; Line 2825
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1944], 1
; Line 2827
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896], 1
; Line 2828
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892], 1
; Line 2829
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+ecx+2060], 40 ; 00000028H
; Line 2830
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1948], 1
; Line 2831
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1916], 16777215 ; 00ffffffH
; Line 2832
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1920], 8421504 ; 00808080H
; Line 2833
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1924], 16777215 ; 00ffffffH
; Line 2834
	mov	DWORD PTR _k$66[ebp], 1
	jmp	SHORT $LN21@GridProc
$LN20@GridProc:
	mov	eax, DWORD PTR _k$66[ebp]
	add	eax, 1
	mov	DWORD PTR _k$66[ebp], eax
$LN21@GridProc:
	cmp	DWORD PTR _k$66[ebp], 256		; 00000100H
	jge	SHORT $LN19@GridProc
; Line 2836
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _k$66[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+edx*4+2060], 50 ; 00000032H
; Line 2837
	jmp	SHORT $LN20@GridProc
$LN19@GridProc:
; Line 2839
	jmp	$LN287@GridProc
$LN18@GridProc:
; Line 2841
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2842
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1956], 1
; Line 2843
	mov	eax, DWORD PTR _SelfIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2844
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetCurrentCellStatus@@YAXPAUHWND__@@H@Z ; SetCurrentCellStatus
	add	esp, 8
; Line 2845
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeRow@@YAXPAUHWND__@@HHH@Z	; SetHomeRow
	add	esp, 16					; 00000010H
; Line 2846
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1896]
	push	edx
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1892]
	push	ecx
	mov	edx, DWORD PTR _SelfIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?SetHomeCol@@YAXPAUHWND__@@HHH@Z	; SetHomeCol
	add	esp, 16					; 00000010H
; Line 2848
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	edx, ax
	or	edx, 1507328				; 00170000H
	mov	DWORD PTR _wParam$[ebp], edx
; Line 2849
	mov	DWORD PTR _lParam$[ebp], 0
; Line 2850
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	273					; 00000111H
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 2853
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDC@4
	mov	DWORD PTR _hdc$47[ebp], eax
; Line 2854
	lea	ecx, DWORD PTR _tm$85[ebp]
	push	ecx
	mov	edx, DWORD PTR _hdc$47[ebp]
	push	edx
	call	DWORD PTR __imp__GetTextMetricsW@8
; Line 2855
	mov	eax, DWORD PTR _hdc$47[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ReleaseDC@8
; Line 2856
	imul	edx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	eax, DWORD PTR _tm$85[ebp+4]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1912], eax
; Line 2857
	mov	ecx, DWORD PTR _tm$85[ebp+4]
	push	ecx
	push	3
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateCaret@16
; Line 2859
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2860
	jmp	$LN287@GridProc
$LN17@GridProc:
; Line 2862
	call	DWORD PTR __imp__DestroyCaret@0
; Line 2863
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?DrawCursor@@YAXPAUHWND__@@H@Z		; DrawCursor
	add	esp, 8
; Line 2864
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1956], 0
; Line 2866
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	and	eax, 65535				; 0000ffffH
	movzx	edx, ax
	or	edx, 1572864				; 00180000H
	mov	DWORD PTR _wParam$[ebp], edx
; Line 2867
	mov	DWORD PTR _lParam$[ebp], 0
; Line 2868
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	273					; 00000111H
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 2869
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2872
	jmp	$LN287@GridProc
$LN16@GridProc:
; Line 2874
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1980], edx
; Line 2875
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1984], 0
	jne	SHORT $LN15@GridProc
; Line 2877
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1984], edx
$LN15@GridProc:
; Line 2879
	imul	eax, DWORD PTR _SelfIndex$[ebp], 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1988], 0
	jne	SHORT $LN14@GridProc
; Line 2881
	imul	ecx, DWORD PTR _SelfIndex$[ebp], 3100
	mov	edx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1988], edx
$LN14@GridProc:
; Line 2883
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?RefreshGrid@@YAXPAUHWND__@@@Z		; RefreshGrid
	add	esp, 4
; Line 2884
	jmp	$LN287@GridProc
$LN13@GridProc:
; Line 2890
	mov	ecx, DWORD PTR _SelfIndex$[ebp]
	mov	DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, ecx
; Line 2896
	imul	edx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2024], 0
	je	SHORT $LN12@GridProc
; Line 2898
	imul	eax, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2024], 0
; Line 2899
	jmp	$LN287@GridProc
$LN12@GridProc:
; Line 2901
	mov	ecx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?ShowHscroll@@YAXPAUHWND__@@H@Z		; ShowHscroll
	add	esp, 8
; Line 2902
	mov	eax, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?ShowVscroll@@YAXPAUHWND__@@H@Z		; ShowVscroll
	add	esp, 8
; Line 2904
	imul	edx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2020], 0
	je	$LN6@GridProc
	imul	eax, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2016], 0
	je	$LN6@GridProc
; Line 2906
	mov	ecx, DWORD PTR _lParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, edx
; Line 2907
	mov	eax, DWORD PTR ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	mov	DWORD PTR _intin$7[ebp], eax
; Line 2908
	mov	ecx, DWORD PTR _lParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR ?savewidth@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, edx
; Line 2909
	mov	eax, DWORD PTR _lParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, ecx
; Line 2910
	imul	edx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	eax, DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	sub	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908]
	mov	DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, eax
; Line 2911
	imul	ecx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	edx, DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	sub	edx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1888]
	mov	DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, edx
; Line 2915
	push	3
	call	DWORD PTR __imp__GetSystemMetrics@4
	mov	DWORD PTR _sbheight$63[ebp], eax
; Line 2916
	imul	eax, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2012], 0
	je	SHORT $LN10@GridProc
; Line 2918
	mov	ecx, DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	sub	ecx, DWORD PTR _sbheight$63[ebp]
	mov	DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, ecx
$LN10@GridProc:
; Line 2920
	imul	edx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	cmp	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2016], 0
	je	SHORT $LN8@GridProc
; Line 2923
	lea	eax, DWORD PTR _grect$87[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 2924
	lea	edx, DWORD PTR _prect$88[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetParent@4
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
; Line 2925
	mov	ecx, DWORD PTR _grect$87[ebp+8]
	add	ecx, DWORD PTR _sbheight$63[ebp]
	cmp	ecx, DWORD PTR _prect$88[ebp+8]
	jge	SHORT $LN8@GridProc
; Line 2927
	mov	edx, DWORD PTR ?savewidth@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	add	edx, DWORD PTR _sbheight$63[ebp]
	mov	DWORD PTR ?savewidth@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, edx
$LN8@GridProc:
; Line 2935
	imul	eax, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	ecx, DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	cmp	ecx, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1868]
	jg	SHORT $LN7@GridProc
; Line 2937
	jmp	$LN287@GridProc
; Line 2939
	jmp	$LN6@GridProc
$LN7@GridProc:
; Line 2943
	imul	ecx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	eax, DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	cdq
	idiv	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1868]
	mov	DWORD PTR _nrows$14[ebp], eax
; Line 2944
	imul	edx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	eax, DWORD PTR _nrows$14[ebp]
	imul	eax, DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868]
	mov	ecx, DWORD PTR ?cheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	sub	ecx, eax
	mov	DWORD PTR _remainder$12[ebp], ecx
; Line 2946
	mov	edx, DWORD PTR ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	sub	edx, DWORD PTR _remainder$12[ebp]
	mov	DWORD PTR ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, edx
; Line 2947
	mov	eax, DWORD PTR ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	add	eax, 4
	mov	DWORD PTR ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, eax
; Line 2948
	mov	ecx, DWORD PTR ?saveheight@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	mov	DWORD PTR _intout$10[ebp], ecx
; Line 2951
	mov	DWORD PTR _wp$107[ebp], 44		; 0000002cH
; Line 2952
	lea	edx, DWORD PTR _wp$107[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowPlacement@8
; Line 2953
	mov	ecx, DWORD PTR _wp$107[ebp+28]
	mov	DWORD PTR _crect$116[ebp], ecx
	mov	edx, DWORD PTR _wp$107[ebp+32]
	mov	DWORD PTR _crect$116[ebp+4], edx
	mov	eax, DWORD PTR _wp$107[ebp+36]
	mov	DWORD PTR _crect$116[ebp+8], eax
	mov	ecx, DWORD PTR _wp$107[ebp+40]
	mov	DWORD PTR _crect$116[ebp+12], ecx
; Line 2954
	mov	edx, DWORD PTR _intout$10[ebp]
	mov	DWORD PTR _crect$116[ebp+12], edx
; Line 2956
	mov	eax, DWORD PTR ?savewidth@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA
	mov	DWORD PTR _crect$116[ebp+8], eax
; Line 2957
	imul	ecx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2024], 1
; Line 2959
	mov	edx, DWORD PTR _lParam$[ebp]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	imul	ecx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+3092], eax
; Line 2960
	mov	edx, DWORD PTR _lParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	imul	ecx, DWORD PTR ?SI@?CBD@??GridProc@@YGJPAUHWND__@@IIJ@Z@4HA, 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+3096], eax
; Line 2962
	push	1
	mov	edx, DWORD PTR _crect$116[ebp+12]
	push	edx
	mov	eax, DWORD PTR _crect$116[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _crect$116[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _crect$116[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
$LN6@GridProc:
; Line 2967
	jmp	$LN287@GridProc
$LN5@GridProc:
; Line 2969
	mov	DWORD PTR ?lpcs@@3PAUtagCREATESTRUCTW@@A, OFFSET ?cs@@3UtagCREATESTRUCTW@@A ; lpcs, cs
; Line 2970
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR ?lpcs@@3PAUtagCREATESTRUCTW@@A, ecx ; lpcs
; Line 2972
	mov	edx, DWORD PTR ?lpcs@@3PAUtagCREATESTRUCTW@@A ; lpcs
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _hInst$[ebp], eax
; Line 2975
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetMenu@4
	push	eax
	call	?AddGrid@@YAHI@Z			; AddGrid
	add	esp, 4
	mov	DWORD PTR ?BG_GridIndex@@3HA, eax	; BG_GridIndex
; Line 2977
	call	?CountGrids@@YAHXZ			; CountGrids
	cmp	eax, 1
	jne	$LN4@GridProc
; Line 2987
	push	OFFSET $SG124570
	push	0
	push	0
	push	0
	push	0
	push	1
	push	0
	push	0
	push	0
	push	100					; 00000064H
	push	0
	push	0
	push	0
	push	16					; 00000010H
	call	DWORD PTR __imp__CreateFontW@56
	mov	DWORD PTR ?hfontbody@@3PAUHFONT__@@A, eax ; hfontbody
; Line 2988
	push	OFFSET $SG124571
	push	0
	push	0
	push	0
	push	0
	push	1
	push	0
	push	0
	push	0
	push	900					; 00000384H
	push	0
	push	0
	push	0
	push	18					; 00000012H
	call	DWORD PTR __imp__CreateFontW@56
	mov	DWORD PTR ?hfontheader@@3PAUHFONT__@@A, eax ; hfontheader
; Line 2989
	push	OFFSET $SG124572
	push	0
	push	0
	push	0
	push	0
	push	1
	push	0
	push	0
	push	0
	push	900					; 00000384H
	push	0
	push	0
	push	0
	push	20					; 00000014H
	call	DWORD PTR __imp__CreateFontW@56
	mov	DWORD PTR ?hfonttitle@@3PAUHFONT__@@A, eax ; hfonttitle
$LN4@GridProc:
; Line 2993
	cmp	DWORD PTR ?BG_GridIndex@@3HA, 0		; BG_GridIndex
	jl	$LN3@GridProc
	cmp	DWORD PTR ?BG_GridIndex@@3HA, 20	; BG_GridIndex, 00000014H
	jge	$LN3@GridProc
; Line 2996
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetMenu@4
	imul	ecx, DWORD PTR ?BG_GridIndex@@3HA, 3100	; BG_GridIndex
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx], eax
; Line 2999
	push	0
	mov	edx, DWORD PTR _hInst$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	push	100					; 00000064H
	push	200					; 000000c8H
	push	150					; 00000096H
	push	50					; 00000032H
	push	1084227587				; 40a00003H
	push	OFFSET $SG124575
	push	OFFSET $SG124576
	push	512					; 00000200H
	call	DWORD PTR __imp__CreateWindowExW@48
	imul	ecx, DWORD PTR ?BG_GridIndex@@3HA, 3100	; BG_GridIndex
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+4], eax
; Line 3001
	imul	edx, DWORD PTR ?BG_GridIndex@@3HA, 3100	; BG_GridIndex
	mov	eax, DWORD PTR ?hfontbody@@3PAUHFONT__@@A ; hfontbody
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1980], eax
; Line 3002
	imul	ecx, DWORD PTR ?BG_GridIndex@@3HA, 3100	; BG_GridIndex
	mov	edx, DWORD PTR ?hfonttitle@@3PAUHFONT__@@A ; hfonttitle
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1988], edx
; Line 3003
	imul	eax, DWORD PTR ?BG_GridIndex@@3HA, 3100	; BG_GridIndex
	mov	ecx, DWORD PTR ?hfontheader@@3PAUHFONT__@@A ; hfontheader
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1984], ecx
; Line 3004
	mov	edx, DWORD PTR ?lpcs@@3PAUtagCREATESTRUCTW@@A ; lpcs
	mov	eax, DWORD PTR [edx+36]
	push	eax
	imul	ecx, DWORD PTR ?BG_GridIndex@@3HA, 3100	; BG_GridIndex
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+12
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 3005
	mov	edx, DWORD PTR ?lpcs@@3PAUtagCREATESTRUCTW@@A ; lpcs
	mov	eax, DWORD PTR [edx+36]
	push	eax
	push	0
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN3@GridProc:
; Line 3009
	cmp	DWORD PTR ?BG_GridIndex@@3HA, -1	; BG_GridIndex
	jne	SHORT $LN2@GridProc
; Line 3011
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
$LN2@GridProc:
; Line 3013
	jmp	SHORT $LN287@GridProc
$LN1@GridProc:
; Line 3015
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN289@GridProc
$LN287@GridProc:
; Line 3017
	mov	eax, DWORD PTR _ReturnValue$[ebp]
$LN289@GridProc:
; Line 3018
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN308@GridProc:
	DD	$LN5@GridProc
	DD	$LN23@GridProc
	DD	$LN13@GridProc
	DD	$LN18@GridProc
	DD	$LN17@GridProc
	DD	$LN145@GridProc
	DD	$LN276@GridProc
	DD	$LN282@GridProc
	DD	$LN110@GridProc
	DD	$LN16@GridProc
	DD	$LN109@GridProc
	DD	$LN1@GridProc
$LN305@GridProc:
	DB	0
	DB	1
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	2
	DB	11					; 0000000bH
	DB	3
	DB	4
	DB	11					; 0000000bH
	DB	5
	DB	11					; 0000000bH
	DB	6
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	7
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	8
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	9
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	10					; 0000000aH
	npad	1
$LN309@GridProc:
	DD	$LN286@GridProc
	DD	$LN50@GridProc
	DD	$LN43@GridProc
	DD	$LN143@GridProc
	DD	$LN132@GridProc
	DD	$LN134@GridProc
	DD	$LN44@GridProc
	DD	$LN1@GridProc
$LN306@GridProc:
	DB	0
	DB	7
	DB	7
	DB	1
	DB	2
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	3
	DB	4
	DB	5
	DB	4
	DB	7
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
	npad	2
$LN310@GridProc:
	DD	$LN242@GridProc
	DD	$LN233@GridProc
	DD	$LN205@GridProc
	DD	$LN198@GridProc
	DD	$LN194@GridProc
	DD	$LN197@GridProc
	DD	$LN260@GridProc
	DD	$LN239@GridProc
	DD	$LN262@GridProc
	DD	$LN185@GridProc
	DD	$LN183@GridProc
	DD	$LN179@GridProc
	DD	$LN168@GridProc
	DD	$LN261@GridProc
	DD	$LN160@GridProc
	DD	$LN155@GridProc
	DD	$LN152@GridProc
	DD	$LN151@GridProc
	DD	$LN147@GridProc
	DD	$LN146@GridProc
	DD	$LN257@GridProc
	DD	$LN267@GridProc
	DD	$LN266@GridProc
	DD	$LN244@GridProc
	DD	$LN243@GridProc
	DD	$LN181@GridProc
	DD	$LN180@GridProc
	DD	$LN277@GridProc
	DD	$LN265@GridProc
	DD	$LN264@GridProc
	DD	$LN263@GridProc
	DD	$LN158@GridProc
	DD	$LN153@GridProc
	DD	$LN154@GridProc
	DD	$LN236@GridProc
	DD	$LN156@GridProc
	DD	$LN256@GridProc
	DD	$LN255@GridProc
	DD	$LN150@GridProc
	DD	$LN254@GridProc
	DD	$LN253@GridProc
	DD	$LN149@GridProc
	DD	$LN148@GridProc
$LN311@GridProc:
	DD	$LN174@GridProc
	DD	$LN171@GridProc
	DD	$LN170@GridProc
	DD	$LN173@GridProc
	DD	$LN172@GridProc
	DD	$LN169@GridProc
$LN307@GridProc:
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
?GridProc@@YGJPAUHWND__@@IIJ@Z ENDP			; GridProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wclass$ = -48						; size = 40
_k$1 = -8						; size = 4
_j$2 = -4						; size = 4
_hInstance$ = 8						; size = 4
?RegisterGridClass@@YAGPAUHINSTANCE__@@@Z PROC		; RegisterGridClass
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\grid\babygrid.cpp
; Line 1204
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; Line 1207
	mov	DWORD PTR _j$2[ebp], 0
	jmp	SHORT $LN6@RegisterGr
$LN5@RegisterGr:
	mov	eax, DWORD PTR _j$2[ebp]
	add	eax, 1
	mov	DWORD PTR _j$2[ebp], eax
$LN6@RegisterGr:
	cmp	DWORD PTR _j$2[ebp], 20			; 00000014H
	jge	$LN4@RegisterGr
; Line 1209
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx], 0
; Line 1210
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+4], 0
; Line 1211
	push	OFFSET $SG123783
	imul	eax, DWORD PTR _j$2[ebp], 3100
	add	eax, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+8
	push	eax
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1212
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1844], 100 ; 00000064H
; Line 1213
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1848], 255 ; 000000ffH
; Line 1214
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1860], 1
; Line 1215
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1864], 1
; Line 1216
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1868], 21 ; 00000015H
; Line 1217
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1888], 21 ; 00000015H
; Line 1218
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1992], 1
; Line 1219
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1996], 1
; Line 1220
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2000], 0
; Line 1221
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2004], 0
; Line 1222
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1960], 1
; Line 1223
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1896], 1
; Line 1224
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1892], 1
; Line 1225
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+ecx+2060], 50 ; 00000032H
; Line 1226
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1948], 1
; Line 1227
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1944], 1
; Line 1228
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1916], 16777215 ; 00ffffffH
; Line 1229
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1920], 16777215 ; 00ffffffH
; Line 1230
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1924], 16777215 ; 00ffffffH
; Line 1231
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1932], 8388608 ; 00800000H
; Line 1232
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1936], 14474460 ; 00dcdcdcH
; Line 1233
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1940], 16777215 ; 00ffffffH
; Line 1234
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+1928], 0
; Line 1235
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1908], 0
; Line 1236
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2008], 1
; Line 1237
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2020], 1
; Line 1238
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2024], 0
; Line 1239
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2028], 1
; Line 1240
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2032], 0
; Line 1241
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+2036], 0
; Line 1242
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+2040], 0
; Line 1243
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[ecx+2056], 0
; Line 1244
	imul	edx, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[edx+1984], 0
; Line 1245
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+1988], 0
; Line 1246
	push	OFFSET $SG123826
	imul	ecx, DWORD PTR _j$2[ebp], 3100
	add	ecx, OFFSET ?BGHS@@3PAU_gridhandlestruct@@A+622
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
; Line 1248
	mov	DWORD PTR _k$1[ebp], 0
	jmp	SHORT $LN3@RegisterGr
$LN2@RegisterGr:
	mov	edx, DWORD PTR _k$1[ebp]
	add	edx, 1
	mov	DWORD PTR _k$1[ebp], edx
$LN3@RegisterGr:
	cmp	DWORD PTR _k$1[ebp], 256		; 00000100H
	jge	SHORT $LN1@RegisterGr
; Line 1250
	imul	eax, DWORD PTR _j$2[ebp], 3100
	mov	ecx, DWORD PTR _k$1[ebp]
	mov	DWORD PTR ?BGHS@@3PAU_gridhandlestruct@@A[eax+ecx*4+2060], 50 ; 00000032H
; Line 1251
	jmp	SHORT $LN2@RegisterGr
$LN1@RegisterGr:
; Line 1253
	jmp	$LN5@RegisterGr
$LN4@RegisterGr:
; Line 1258
	mov	DWORD PTR _wclass$[ebp], 11		; 0000000bH
; Line 1259
	mov	DWORD PTR _wclass$[ebp+4], OFFSET ?GridProc@@YGJPAUHWND__@@IIJ@Z ; GridProc
; Line 1260
	mov	DWORD PTR _wclass$[ebp+8], 0
; Line 1261
	mov	DWORD PTR _wclass$[ebp+12], 0
; Line 1262
	mov	edx, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR _wclass$[ebp+16], edx
; Line 1263
	mov	DWORD PTR _wclass$[ebp+20], 0
; Line 1264
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	mov	DWORD PTR _wclass$[ebp+24], eax
; Line 1266
	push	2
	call	DWORD PTR __imp__GetStockObject@4
	mov	DWORD PTR _wclass$[ebp+28], eax
; Line 1267
	mov	DWORD PTR _wclass$[ebp+36], OFFSET $SG123837
; Line 1268
	mov	DWORD PTR _wclass$[ebp+32], 0
; Line 1270
	lea	eax, DWORD PTR _wclass$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassW@4
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	0
?RegisterGridClass@@YAGPAUHINSTANCE__@@@Z ENDP		; RegisterGridClass
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\uchardet\nsEscCharsetProber.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??1nsCharSetProber@@UAE@XZ			; nsCharSetProber::~nsCharSetProber
PUBLIC	??0nsCharSetProber@@QAE@XZ			; nsCharSetProber::nsCharSetProber
PUBLIC	??_GnsCharSetProber@@UAEPAXI@Z			; nsCharSetProber::`scalar deleting destructor'
PUBLIC	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z	; nsCodingStateMachine::nsCodingStateMachine
PUBLIC	?NextState@nsCodingStateMachine@@QAE?AW4nsSMState@@D@Z ; nsCodingStateMachine::NextState
PUBLIC	?Reset@nsCodingStateMachine@@QAEXXZ		; nsCodingStateMachine::Reset
PUBLIC	?GetCodingStateMachine@nsCodingStateMachine@@QAEPBDXZ ; nsCodingStateMachine::GetCodingStateMachine
PUBLIC	??0nsEscCharSetProber@@QAE@I@Z			; nsEscCharSetProber::nsEscCharSetProber
PUBLIC	??1nsEscCharSetProber@@UAE@XZ			; nsEscCharSetProber::~nsEscCharSetProber
PUBLIC	?HandleData@nsEscCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z ; nsEscCharSetProber::HandleData
PUBLIC	?GetCharSetName@nsEscCharSetProber@@UAEPBDXZ	; nsEscCharSetProber::GetCharSetName
PUBLIC	?GetState@nsEscCharSetProber@@UAE?AW4nsProbingState@@XZ ; nsEscCharSetProber::GetState
PUBLIC	?Reset@nsEscCharSetProber@@UAEXXZ		; nsEscCharSetProber::Reset
PUBLIC	?GetConfidence@nsEscCharSetProber@@UAEMXZ	; nsEscCharSetProber::GetConfidence
PUBLIC	?SetOpion@nsEscCharSetProber@@UAEXXZ		; nsEscCharSetProber::SetOpion
PUBLIC	??_GnsEscCharSetProber@@UAEPAXI@Z		; nsEscCharSetProber::`scalar deleting destructor'
PUBLIC	??_7nsCharSetProber@@6B@			; nsCharSetProber::`vftable'
PUBLIC	??_7nsEscCharSetProber@@6B@			; nsEscCharSetProber::`vftable'
PUBLIC	??_R4nsCharSetProber@@6B@			; nsCharSetProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsCharSetProber@@@8			; nsCharSetProber `RTTI Type Descriptor'
PUBLIC	??_R3nsCharSetProber@@8				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsCharSetProber@@8				; nsCharSetProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsCharSetProber@@8		; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4nsEscCharSetProber@@6B@			; nsEscCharSetProber::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVnsEscCharSetProber@@@8			; nsEscCharSetProber `RTTI Type Descriptor'
PUBLIC	??_R3nsEscCharSetProber@@8			; nsEscCharSetProber::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2nsEscCharSetProber@@8			; nsEscCharSetProber::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@nsEscCharSetProber@@8		; nsEscCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f7d70a4
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??_EnsCharSetProber@@UAEPAXI@Z:PROC		; nsCharSetProber::`vector deleting destructor'
EXTRN	??_EnsEscCharSetProber@@UAEPAXI@Z:PROC		; nsEscCharSetProber::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?HZSMModel@@3USMModel@@B:BYTE			; HZSMModel
EXTRN	?ISO2022CNSMModel@@3USMModel@@B:BYTE		; ISO2022CNSMModel
EXTRN	?ISO2022JPSMModel@@3USMModel@@B:BYTE		; ISO2022JPSMModel
EXTRN	?ISO2022KRSMModel@@3USMModel@@B:BYTE		; ISO2022KRSMModel
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@nsEscCharSetProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsEscCharSetProber@@8 DD FLAT:??_R0?AVnsEscCharSetProber@@@8 ; nsEscCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsEscCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsEscCharSetProber@@8
rdata$r	SEGMENT
??_R2nsEscCharSetProber@@8 DD FLAT:??_R1A@?0A@EA@nsEscCharSetProber@@8 ; nsEscCharSetProber::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R3nsEscCharSetProber@@8
rdata$r	SEGMENT
??_R3nsEscCharSetProber@@8 DD 00H			; nsEscCharSetProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2nsEscCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsEscCharSetProber@@@8
data$r	SEGMENT
??_R0?AVnsEscCharSetProber@@@8 DD FLAT:??_7type_info@@6B@ ; nsEscCharSetProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsEscCharSetProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsEscCharSetProber@@6B@
rdata$r	SEGMENT
??_R4nsEscCharSetProber@@6B@ DD 00H			; nsEscCharSetProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsEscCharSetProber@@@8
	DD	FLAT:??_R3nsEscCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@nsCharSetProber@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@nsCharSetProber@@8 DD FLAT:??_R0?AVnsCharSetProber@@@8 ; nsCharSetProber::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R2nsCharSetProber@@8
rdata$r	SEGMENT
??_R2nsCharSetProber@@8 DD FLAT:??_R1A@?0A@EA@nsCharSetProber@@8 ; nsCharSetProber::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3nsCharSetProber@@8
rdata$r	SEGMENT
??_R3nsCharSetProber@@8 DD 00H				; nsCharSetProber::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVnsCharSetProber@@@8
data$r	SEGMENT
??_R0?AVnsCharSetProber@@@8 DD FLAT:??_7type_info@@6B@	; nsCharSetProber `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVnsCharSetProber@@', 00H
data$r	ENDS
;	COMDAT ??_R4nsCharSetProber@@6B@
rdata$r	SEGMENT
??_R4nsCharSetProber@@6B@ DD 00H			; nsCharSetProber::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVnsCharSetProber@@@8
	DD	FLAT:??_R3nsCharSetProber@@8
rdata$r	ENDS
;	COMDAT ??_7nsEscCharSetProber@@6B@
CONST	SEGMENT
??_7nsEscCharSetProber@@6B@ DD FLAT:??_R4nsEscCharSetProber@@6B@ ; nsEscCharSetProber::`vftable'
	DD	FLAT:??_EnsEscCharSetProber@@UAEPAXI@Z
	DD	FLAT:?GetCharSetName@nsEscCharSetProber@@UAEPBDXZ
	DD	FLAT:?HandleData@nsEscCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z
	DD	FLAT:?GetState@nsEscCharSetProber@@UAE?AW4nsProbingState@@XZ
	DD	FLAT:?Reset@nsEscCharSetProber@@UAEXXZ
	DD	FLAT:?GetConfidence@nsEscCharSetProber@@UAEMXZ
	DD	FLAT:?SetOpion@nsEscCharSetProber@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7nsCharSetProber@@6B@
CONST	SEGMENT
??_7nsCharSetProber@@6B@ DD FLAT:??_R4nsCharSetProber@@6B@ ; nsCharSetProber::`vftable'
	DD	FLAT:??_EnsCharSetProber@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??1nsEscCharSetProber@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1nsEscCharSetProber@@UAE@XZ$0
__ehfuncinfo$??1nsEscCharSetProber@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1nsEscCharSetProber@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??0nsEscCharSetProber@@QAE@I@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0nsEscCharSetProber@@QAE@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??0nsEscCharSetProber@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$4
xdata$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GnsEscCharSetProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsEscCharSetProber@@UAEPAXI@Z PROC			; nsEscCharSetProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsEscCharSetProber@@UAE@XZ		; nsEscCharSetProber::~nsEscCharSetProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsEscCharSetProber@@UAEPAXI@Z ENDP			; nsEscCharSetProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetOpion@nsEscCharSetProber@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetOpion@nsEscCharSetProber@@UAEXXZ PROC		; nsEscCharSetProber::SetOpion, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetOpion@nsEscCharSetProber@@UAEXXZ ENDP		; nsEscCharSetProber::SetOpion
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetConfidence@nsEscCharSetProber@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetConfidence@nsEscCharSetProber@@UAEMXZ PROC		; nsEscCharSetProber::GetConfidence, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	DWORD PTR __real@3f7d70a4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetConfidence@nsEscCharSetProber@@UAEMXZ ENDP		; nsEscCharSetProber::GetConfidence
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
?Reset@nsEscCharSetProber@@UAEXXZ PROC			; nsEscCharSetProber::Reset
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.cpp
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 69
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@Reset
$LN3@Reset:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN4@Reset:
	cmp	DWORD PTR _i$1[ebp], 4
	jae	SHORT $LN2@Reset
; Line 70
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4+4], 0
	je	SHORT $LN1@Reset
; Line 71
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+4]
	call	?Reset@nsCodingStateMachine@@QAEXXZ	; nsCodingStateMachine::Reset
$LN1@Reset:
; Line 72
	jmp	SHORT $LN3@Reset
$LN2@Reset:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 4
; Line 73
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0
; Line 74
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@nsEscCharSetProber@@UAEXXZ ENDP			; nsEscCharSetProber::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetState@nsEscCharSetProber@@UAE?AW4nsProbingState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsEscCharSetProber@@UAE?AW4nsProbingState@@XZ PROC ; nsEscCharSetProber::GetState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.h
; Line 52
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsEscCharSetProber@@UAE?AW4nsProbingState@@XZ ENDP ; nsEscCharSetProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetCharSetName@nsEscCharSetProber@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCharSetName@nsEscCharSetProber@@UAEPBDXZ PROC	; nsEscCharSetProber::GetCharSetName, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsEscCharSetProber@@UAEPBDXZ ENDP	; nsEscCharSetProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_codingState$ = -16					; size = 4
_i$ = -12						; size = 4
_j$ = -8						; size = 4
_this$ = -4						; size = 4
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
?HandleData@nsEscCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z PROC ; nsEscCharSetProber::HandleData
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.cpp
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 82
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@HandleData
$LN7@HandleData:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@HandleData:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _aLen$[ebp]
	jae	$LN6@HandleData
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 0
	jne	SHORT $LN6@HandleData
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
	jmp	SHORT $LN5@HandleData
$LN4@HandleData:
	mov	edx, DWORD PTR _j$[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN5@HandleData:
	cmp	DWORD PTR _j$[ebp], 0
	jl	SHORT $LN3@HandleData
; Line 86
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+4], 0
	je	SHORT $LN2@HandleData
; Line 88
	mov	edx, DWORD PTR _aBuf$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+4]
	call	?NextState@nsCodingStateMachine@@QAE?AW4nsSMState@@D@Z ; nsCodingStateMachine::NextState
	mov	DWORD PTR _codingState$[ebp], eax
; Line 89
	cmp	DWORD PTR _codingState$[ebp], 2
	jne	SHORT $LN2@HandleData
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 1
; Line 92
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+4]
	call	?GetCodingStateMachine@nsCodingStateMachine@@QAEPBDXZ ; nsCodingStateMachine::GetCodingStateMachine
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 93
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	jmp	SHORT $LN9@HandleData
$LN2@HandleData:
; Line 96
	jmp	SHORT $LN4@HandleData
$LN3@HandleData:
; Line 97
	jmp	$LN7@HandleData
$LN6@HandleData:
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
$LN9@HandleData:
; Line 100
	mov	esp, ebp
	pop	ebp
	ret	8
?HandleData@nsEscCharSetProber@@UAE?AW4nsProbingState@@PBDI@Z ENDP ; nsEscCharSetProber::HandleData
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -24						; size = 4
_this$ = -20						; size = 4
_i$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1nsEscCharSetProber@@UAE@XZ PROC			; nsEscCharSetProber::~nsEscCharSetProber
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.cpp
; Line 61
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1nsEscCharSetProber@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEscCharSetProber@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 62
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN3@nsEscCharS
$LN2@nsEscCharS:
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
$LN3@nsEscCharS:
	cmp	DWORD PTR _i$3[ebp], 4
	jae	SHORT $LN4@nsEscCharS
; Line 63
	mov	edx, DWORD PTR _i$3[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	jmp	SHORT $LN2@nsEscCharS
$LN4@nsEscCharS:
; Line 64
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1nsEscCharSetProber@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__ehhandler$??1nsEscCharSetProber@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1nsEscCharSetProber@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1nsEscCharSetProber@@UAE@XZ ENDP			; nsEscCharSetProber::~nsEscCharSetProber
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -68						; size = 4
$T3 = -64						; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 4
tv167 = -52						; size = 4
$T6 = -48						; size = 4
tv154 = -44						; size = 4
$T7 = -40						; size = 4
tv141 = -36						; size = 4
$T8 = -32						; size = 4
tv130 = -28						; size = 4
$T9 = -24						; size = 4
_i$10 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aLanguageFilter$ = 8					; size = 4
??0nsEscCharSetProber@@QAE@I@Z PROC			; nsEscCharSetProber::nsEscCharSetProber
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nsesccharsetprober.cpp
; Line 43
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0nsEscCharSetProber@@QAE@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0nsCharSetProber@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsEscCharSetProber@@6B@
; Line 44
	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN6@nsEscCharS
$LN5@nsEscCharS:
	mov	ecx, DWORD PTR _i$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$10[ebp], ecx
$LN6@nsEscCharS:
	cmp	DWORD PTR _i$10[ebp], 4
	jae	SHORT $LN4@nsEscCharS
; Line 45
	mov	edx, DWORD PTR _i$10[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+4], 0
	jmp	SHORT $LN5@nsEscCharS
$LN4@nsEscCharS:
; Line 46
	mov	ecx, DWORD PTR _aLanguageFilter$[ebp]
	and	ecx, 1
	je	$LN3@nsEscCharS
; Line 48
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN9@nsEscCharS
	push	OFFSET ?HZSMModel@@3USMModel@@B		; HZSMModel
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN10@nsEscCharS
$LN9@nsEscCharS:
	mov	DWORD PTR tv130[ebp], 0
$LN10@nsEscCharS:
	mov	edx, DWORD PTR tv130[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR [edx+ecx+4], eax
; Line 49
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN11@nsEscCharS
	push	OFFSET ?ISO2022CNSMModel@@3USMModel@@B	; ISO2022CNSMModel
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN12@nsEscCharS
$LN11@nsEscCharS:
	mov	DWORD PTR tv141[ebp], 0
$LN12@nsEscCharS:
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [eax+edx+4], ecx
$LN3@nsEscCharS:
; Line 51
	mov	edx, DWORD PTR _aLanguageFilter$[ebp]
	and	edx, 4
	je	SHORT $LN2@nsEscCharS
; Line 52
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN13@nsEscCharS
	push	OFFSET ?ISO2022JPSMModel@@3USMModel@@B	; ISO2022JPSMModel
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN14@nsEscCharS
$LN13@nsEscCharS:
	mov	DWORD PTR tv154[ebp], 0
$LN14@nsEscCharS:
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edx+ecx+4], eax
$LN2@nsEscCharS:
; Line 53
	mov	ecx, DWORD PTR _aLanguageFilter$[ebp]
	and	ecx, 8
	je	SHORT $LN1@nsEscCharS
; Line 54
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN15@nsEscCharS
	push	OFFSET ?ISO2022KRSMModel@@3USMModel@@B	; ISO2022KRSMModel
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ; nsCodingStateMachine::nsCodingStateMachine
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN16@nsEscCharS
$LN15@nsEscCharS:
	mov	DWORD PTR tv167[ebp], 0
$LN16@nsEscCharS:
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+ecx+4], eax
$LN1@nsEscCharS:
; Line 55
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 4
; Line 56
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 58
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$1:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$2:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$3:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0nsEscCharSetProber@@QAE@I@Z$4:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0nsEscCharSetProber@@QAE@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0nsEscCharSetProber@@QAE@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0nsEscCharSetProber@@QAE@I@Z ENDP			; nsEscCharSetProber::nsEscCharSetProber
; Function compile flags: /Odtp
;	COMDAT ?GetCodingStateMachine@nsCodingStateMachine@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCodingStateMachine@nsCodingStateMachine@@QAEPBDXZ PROC ; nsCodingStateMachine::GetCodingStateMachine, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscodingstatemachine.h
; Line 82
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCodingStateMachine@nsCodingStateMachine@@QAEPBDXZ ENDP ; nsCodingStateMachine::GetCodingStateMachine
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Reset@nsCodingStateMachine@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@nsCodingStateMachine@@QAEXXZ PROC		; nsCodingStateMachine::Reset, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscodingstatemachine.h
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@nsCodingStateMachine@@QAEXXZ ENDP		; nsCodingStateMachine::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?NextState@nsCodingStateMachine@@QAE?AW4nsSMState@@D@Z
_TEXT	SEGMENT
_byteCls$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
?NextState@nsCodingStateMachine@@QAE?AW4nsSMState@@D@Z PROC ; nsCodingStateMachine::NextState, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscodingstatemachine.h
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	movzx	eax, BYTE PTR _c$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx]
	sar	eax, cl
	mov	edx, DWORD PTR [edx+16]
	movzx	esi, BYTE PTR _c$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	and	esi, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+8]
	shl	esi, cl
	mov	edx, DWORD PTR [edx+eax*4]
	mov	ecx, esi
	shr	edx, cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _byteCls$[ebp], edx
; Line 69
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@NextState
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _byteCls$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx+4], eax
$LN1@NextState:
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	imul	eax, DWORD PTR [ecx+20]
	add	eax, DWORD PTR _byteCls$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+24]
	shr	eax, cl
	mov	edx, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi]
	imul	esi, DWORD PTR [ecx+20]
	add	esi, DWORD PTR _byteCls$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	and	esi, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+32]
	shl	esi, cl
	mov	edx, DWORD PTR [edx+eax*4]
	mov	ecx, esi
	shr	edx, cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 78
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
; Line 79
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?NextState@nsCodingStateMachine@@QAE?AW4nsSMState@@D@Z ENDP ; nsCodingStateMachine::NextState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sm$ = 8						; size = 4
??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z PROC	; nsCodingStateMachine::nsCodingStateMachine, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscodingstatemachine.h
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sm$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0nsCodingStateMachine@@QAE@PBUSMModel@@@Z ENDP	; nsCodingStateMachine::nsCodingStateMachine
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GnsCharSetProber@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GnsCharSetProber@@UAEPAXI@Z PROC			; nsCharSetProber::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1nsCharSetProber@@UAE@XZ		; nsCharSetProber::~nsCharSetProber
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GnsCharSetProber@@UAEPAXI@Z ENDP			; nsCharSetProber::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0nsCharSetProber@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0nsCharSetProber@@QAE@XZ PROC				; nsCharSetProber::nsCharSetProber, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0nsCharSetProber@@QAE@XZ ENDP				; nsCharSetProber::nsCharSetProber
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1nsCharSetProber@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1nsCharSetProber@@UAE@XZ PROC				; nsCharSetProber::~nsCharSetProber, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscharsetprober.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7nsCharSetProber@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1nsCharSetProber@@UAE@XZ ENDP				; nsCharSetProber::~nsCharSetProber
_TEXT	ENDS
END

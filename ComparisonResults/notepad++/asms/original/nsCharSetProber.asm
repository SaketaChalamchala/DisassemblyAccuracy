; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\uchardet\nsCharSetProber.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?FilterWithoutEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z ; nsCharSetProber::FilterWithoutEnglishLetters
PUBLIC	?FilterWithEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z ; nsCharSetProber::FilterWithEnglishLetters
PUBLIC	?PR_Malloc@@YAPAXI@Z				; PR_Malloc
EXTRN	_malloc:PROC
; Function compile flags: /Odtp
;	COMDAT ?PR_Malloc@@YAPAXI@Z
_TEXT	SEGMENT
_len$ = 8						; size = 4
?PR_Malloc@@YAPAXI@Z PROC				; PR_Malloc, COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\prmem.h
; Line 43
	push	ebp
	mov	ebp, esp
; Line 44
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_malloc
	add	esp, 4
; Line 45
	pop	ebp
	ret	0
?PR_Malloc@@YAPAXI@Z ENDP				; PR_Malloc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_newptr$ = -16						; size = 4
_prevPtr$ = -12						; size = 4
_curPtr$ = -8						; size = 4
_isInTag$ = -1						; size = 1
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
_newBuf$ = 16						; size = 4
_newLen$ = 20						; size = 4
?FilterWithEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z PROC ; nsCharSetProber::FilterWithEnglishLetters
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscharsetprober.cpp
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 88
	mov	BYTE PTR _isInTag$[ebp], 0
; Line 90
	mov	eax, DWORD PTR _aLen$[ebp]
	push	eax
	call	?PR_Malloc@@YAPAXI@Z			; PR_Malloc
	add	esp, 4
	mov	ecx, DWORD PTR _newBuf$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _newBuf$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _newptr$[ebp], eax
; Line 91
	cmp	DWORD PTR _newptr$[ebp], 0
	jne	SHORT $LN17@FilterWith
; Line 92
	xor	al, al
	jmp	$LN18@FilterWith
$LN17@FilterWith:
; Line 94
	mov	ecx, DWORD PTR _aBuf$[ebp]
	mov	DWORD PTR _prevPtr$[ebp], ecx
	mov	edx, DWORD PTR _prevPtr$[ebp]
	mov	DWORD PTR _curPtr$[ebp], edx
	jmp	SHORT $LN16@FilterWith
$LN15@FilterWith:
	mov	eax, DWORD PTR _curPtr$[ebp]
	add	eax, 1
	mov	DWORD PTR _curPtr$[ebp], eax
$LN16@FilterWith:
	mov	ecx, DWORD PTR _aBuf$[ebp]
	add	ecx, DWORD PTR _aLen$[ebp]
	cmp	DWORD PTR _curPtr$[ebp], ecx
	jae	$LN14@FilterWith
; Line 96
	mov	edx, DWORD PTR _curPtr$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN13@FilterWith
; Line 97
	mov	BYTE PTR _isInTag$[ebp], 0
	jmp	SHORT $LN12@FilterWith
$LN13@FilterWith:
; Line 98
	mov	ecx, DWORD PTR _curPtr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 60					; 0000003cH
	jne	SHORT $LN12@FilterWith
; Line 99
	mov	BYTE PTR _isInTag$[ebp], 1
$LN12@FilterWith:
; Line 102
	mov	eax, DWORD PTR _curPtr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 128				; 00000080H
	jne	$LN10@FilterWith
	mov	edx, DWORD PTR _curPtr$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN9@FilterWith
	mov	ecx, DWORD PTR _curPtr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 90					; 0000005aH
	jle	SHORT $LN8@FilterWith
	mov	eax, DWORD PTR _curPtr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 97					; 00000061H
	jl	SHORT $LN9@FilterWith
$LN8@FilterWith:
	mov	edx, DWORD PTR _curPtr$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN10@FilterWith
$LN9@FilterWith:
; Line 104
	mov	ecx, DWORD PTR _curPtr$[ebp]
	cmp	ecx, DWORD PTR _prevPtr$[ebp]
	jbe	SHORT $LN7@FilterWith
	movzx	edx, BYTE PTR _isInTag$[ebp]
	test	edx, edx
	jne	SHORT $LN7@FilterWith
$LN6@FilterWith:
; Line 107
	mov	eax, DWORD PTR _prevPtr$[ebp]
	cmp	eax, DWORD PTR _curPtr$[ebp]
	jae	SHORT $LN5@FilterWith
	mov	ecx, DWORD PTR _newptr$[ebp]
	mov	edx, DWORD PTR _prevPtr$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _newptr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _newptr$[ebp], ecx
	mov	edx, DWORD PTR _prevPtr$[ebp]
	add	edx, 1
	mov	DWORD PTR _prevPtr$[ebp], edx
	jmp	SHORT $LN6@FilterWith
$LN5@FilterWith:
; Line 108
	mov	eax, DWORD PTR _prevPtr$[ebp]
	add	eax, 1
	mov	DWORD PTR _prevPtr$[ebp], eax
; Line 109
	mov	ecx, DWORD PTR _newptr$[ebp]
	mov	BYTE PTR [ecx], 32			; 00000020H
	mov	edx, DWORD PTR _newptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _newptr$[ebp], edx
; Line 111
	jmp	SHORT $LN10@FilterWith
$LN7@FilterWith:
; Line 112
	mov	eax, DWORD PTR _curPtr$[ebp]
	add	eax, 1
	mov	DWORD PTR _prevPtr$[ebp], eax
$LN10@FilterWith:
; Line 114
	jmp	$LN15@FilterWith
$LN14@FilterWith:
; Line 118
	movzx	ecx, BYTE PTR _isInTag$[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@FilterWith
$LN2@FilterWith:
; Line 119
	mov	edx, DWORD PTR _prevPtr$[ebp]
	cmp	edx, DWORD PTR _curPtr$[ebp]
	jae	SHORT $LN3@FilterWith
; Line 120
	mov	eax, DWORD PTR _newptr$[ebp]
	mov	ecx, DWORD PTR _prevPtr$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _newptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _newptr$[ebp], eax
	mov	ecx, DWORD PTR _prevPtr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _prevPtr$[ebp], ecx
	jmp	SHORT $LN2@FilterWith
$LN3@FilterWith:
; Line 122
	mov	edx, DWORD PTR _newBuf$[ebp]
	mov	eax, DWORD PTR _newptr$[ebp]
	sub	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 124
	mov	al, 1
$LN18@FilterWith:
; Line 125
	mov	esp, ebp
	pop	ebp
	ret	0
?FilterWithEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z ENDP ; nsCharSetProber::FilterWithEnglishLetters
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_newptr$ = -16						; size = 4
_curPtr$ = -12						; size = 4
_prevPtr$ = -8						; size = 4
_meetMSB$ = -1						; size = 1
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
_newBuf$ = 16						; size = 4
_newLen$ = 20						; size = 4
?FilterWithoutEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z PROC ; nsCharSetProber::FilterWithoutEnglishLetters
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nscharsetprober.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 48
	mov	BYTE PTR _meetMSB$[ebp], 0
; Line 49
	mov	eax, DWORD PTR _aLen$[ebp]
	push	eax
	call	?PR_Malloc@@YAPAXI@Z			; PR_Malloc
	add	esp, 4
	mov	ecx, DWORD PTR _newBuf$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _newBuf$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _newptr$[ebp], eax
; Line 50
	cmp	DWORD PTR _newptr$[ebp], 0
	jne	SHORT $LN16@FilterWith
; Line 51
	xor	al, al
	jmp	$LN17@FilterWith
$LN16@FilterWith:
; Line 53
	mov	ecx, DWORD PTR _aBuf$[ebp]
	mov	DWORD PTR _prevPtr$[ebp], ecx
	mov	edx, DWORD PTR _prevPtr$[ebp]
	mov	DWORD PTR _curPtr$[ebp], edx
	jmp	SHORT $LN15@FilterWith
$LN14@FilterWith:
	mov	eax, DWORD PTR _curPtr$[ebp]
	add	eax, 1
	mov	DWORD PTR _curPtr$[ebp], eax
$LN15@FilterWith:
	mov	ecx, DWORD PTR _aBuf$[ebp]
	add	ecx, DWORD PTR _aLen$[ebp]
	cmp	DWORD PTR _curPtr$[ebp], ecx
	jae	$LN13@FilterWith
; Line 55
	mov	edx, DWORD PTR _curPtr$[ebp]
	movsx	eax, BYTE PTR [edx]
	and	eax, 128				; 00000080H
	je	SHORT $LN12@FilterWith
; Line 57
	mov	BYTE PTR _meetMSB$[ebp], 1
	jmp	$LN11@FilterWith
$LN12@FilterWith:
; Line 59
	mov	ecx, DWORD PTR _curPtr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 65					; 00000041H
	jl	SHORT $LN9@FilterWith
	mov	eax, DWORD PTR _curPtr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 90					; 0000005aH
	jle	SHORT $LN8@FilterWith
	mov	edx, DWORD PTR _curPtr$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN9@FilterWith
$LN8@FilterWith:
	mov	ecx, DWORD PTR _curPtr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 122				; 0000007aH
	jle	SHORT $LN11@FilterWith
$LN9@FilterWith:
; Line 62
	movzx	eax, BYTE PTR _meetMSB$[ebp]
	test	eax, eax
	je	SHORT $LN7@FilterWith
	mov	ecx, DWORD PTR _curPtr$[ebp]
	cmp	ecx, DWORD PTR _prevPtr$[ebp]
	jbe	SHORT $LN7@FilterWith
$LN6@FilterWith:
; Line 65
	mov	edx, DWORD PTR _prevPtr$[ebp]
	cmp	edx, DWORD PTR _curPtr$[ebp]
	jae	SHORT $LN5@FilterWith
	mov	eax, DWORD PTR _newptr$[ebp]
	mov	ecx, DWORD PTR _prevPtr$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _newptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _newptr$[ebp], eax
	mov	ecx, DWORD PTR _prevPtr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _prevPtr$[ebp], ecx
	jmp	SHORT $LN6@FilterWith
$LN5@FilterWith:
; Line 66
	mov	edx, DWORD PTR _prevPtr$[ebp]
	add	edx, 1
	mov	DWORD PTR _prevPtr$[ebp], edx
; Line 67
	mov	eax, DWORD PTR _newptr$[ebp]
	mov	BYTE PTR [eax], 32			; 00000020H
	mov	ecx, DWORD PTR _newptr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _newptr$[ebp], ecx
; Line 68
	mov	BYTE PTR _meetMSB$[ebp], 0
; Line 70
	jmp	SHORT $LN11@FilterWith
$LN7@FilterWith:
; Line 71
	mov	edx, DWORD PTR _curPtr$[ebp]
	add	edx, 1
	mov	DWORD PTR _prevPtr$[ebp], edx
$LN11@FilterWith:
; Line 73
	jmp	$LN14@FilterWith
$LN13@FilterWith:
; Line 74
	movzx	eax, BYTE PTR _meetMSB$[ebp]
	test	eax, eax
	je	SHORT $LN3@FilterWith
	mov	ecx, DWORD PTR _curPtr$[ebp]
	cmp	ecx, DWORD PTR _prevPtr$[ebp]
	jbe	SHORT $LN3@FilterWith
$LN2@FilterWith:
; Line 75
	mov	edx, DWORD PTR _prevPtr$[ebp]
	cmp	edx, DWORD PTR _curPtr$[ebp]
	jae	SHORT $LN3@FilterWith
	mov	eax, DWORD PTR _newptr$[ebp]
	mov	ecx, DWORD PTR _prevPtr$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _newptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _newptr$[ebp], eax
	mov	ecx, DWORD PTR _prevPtr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _prevPtr$[ebp], ecx
	jmp	SHORT $LN2@FilterWith
$LN3@FilterWith:
; Line 77
	mov	edx, DWORD PTR _newBuf$[ebp]
	mov	eax, DWORD PTR _newptr$[ebp]
	sub	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 79
	mov	al, 1
$LN17@FilterWith:
; Line 80
	mov	esp, ebp
	pop	ebp
	ret	0
?FilterWithoutEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z ENDP ; nsCharSetProber::FilterWithoutEnglishLetters
_TEXT	ENDS
END

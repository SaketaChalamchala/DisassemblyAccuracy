; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\uchardet\nsHebrewProber.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG3995	DB	'windows-1255', 00H
	ORG $+3
$SG3997	DB	'ISO-8859-8', 00H
	ORG $+1
$SG4000	DB	'windows-1255', 00H
	ORG $+3
$SG4002	DB	'ISO-8859-8', 00H
	ORG $+1
$SG4004	DB	'ISO-8859-8', 00H
	ORG $+1
$SG4005	DB	'windows-1255', 00H
CONST	ENDS
PUBLIC	?HandleData@nsHebrewProber@@UAE?AW4nsProbingState@@PBDI@Z ; nsHebrewProber::HandleData
PUBLIC	?GetCharSetName@nsHebrewProber@@UAEPBDXZ	; nsHebrewProber::GetCharSetName
PUBLIC	?Reset@nsHebrewProber@@UAEXXZ			; nsHebrewProber::Reset
PUBLIC	?GetState@nsHebrewProber@@UAE?AW4nsProbingState@@XZ ; nsHebrewProber::GetState
PUBLIC	?isFinal@nsHebrewProber@@KA_ND@Z		; nsHebrewProber::isFinal
PUBLIC	?isNonFinal@nsHebrewProber@@KA_ND@Z		; nsHebrewProber::isNonFinal
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@bf847ae147ae147b
EXTRN	__fltused:DWORD
;	COMDAT __real@bf847ae147ae147b
CONST	SEGMENT
__real@bf847ae147ae147b DQ 0bf847ae147ae147br	; -0.01
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv72 = -4						; size = 4
_c$ = 8							; size = 1
?isNonFinal@nsHebrewProber@@KA_ND@Z PROC		; nsHebrewProber::isNonFinal
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.cpp
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 71
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, -21				; ffffffebH
	je	SHORT $LN3@isNonFinal
	movsx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, -18				; ffffffeeH
	je	SHORT $LN3@isNonFinal
	movsx	edx, BYTE PTR _c$[ebp]
	cmp	edx, -16				; fffffff0H
	je	SHORT $LN3@isNonFinal
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, -12				; fffffff4H
	je	SHORT $LN3@isNonFinal
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN4@isNonFinal
$LN3@isNonFinal:
	mov	DWORD PTR tv72[ebp], 1
$LN4@isNonFinal:
	mov	al, BYTE PTR tv72[ebp]
; Line 82
	mov	esp, ebp
	pop	ebp
	ret	0
?isNonFinal@nsHebrewProber@@KA_ND@Z ENDP		; nsHebrewProber::isNonFinal
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv74 = -4						; size = 4
_c$ = 8							; size = 1
?isFinal@nsHebrewProber@@KA_ND@Z PROC			; nsHebrewProber::isFinal
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.cpp
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 66
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, -22				; ffffffeaH
	je	SHORT $LN3@isFinal
	movsx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, -19				; ffffffedH
	je	SHORT $LN3@isFinal
	movsx	edx, BYTE PTR _c$[ebp]
	cmp	edx, -17				; ffffffefH
	je	SHORT $LN3@isFinal
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, -13				; fffffff3H
	je	SHORT $LN3@isFinal
	movsx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, -11				; fffffff5H
	je	SHORT $LN3@isFinal
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN4@isFinal
$LN3@isFinal:
	mov	DWORD PTR tv74[ebp], 1
$LN4@isFinal:
	mov	al, BYTE PTR tv74[ebp]
; Line 67
	mov	esp, ebp
	pop	ebp
	ret	0
?isFinal@nsHebrewProber@@KA_ND@Z ENDP			; nsHebrewProber::isFinal
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@nsHebrewProber@@UAE?AW4nsProbingState@@XZ PROC ; nsHebrewProber::GetState
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.cpp
; Line 182
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	eax, 2
	jne	SHORT $LN1@GetState
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	eax, 2
	jne	SHORT $LN1@GetState
; Line 185
	mov	eax, 2
	jmp	SHORT $LN2@GetState
$LN1@GetState:
; Line 186
	xor	eax, eax
$LN2@GetState:
; Line 187
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@nsHebrewProber@@UAE?AW4nsProbingState@@XZ ENDP ; nsHebrewProber::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@nsHebrewProber@@UAEXXZ PROC			; nsHebrewProber::Reset
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.cpp
; Line 171
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 173
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 177
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+12], 32			; 00000020H
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+13], 32			; 00000020H
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@nsHebrewProber@@UAEXXZ ENDP			; nsHebrewProber::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv144 = -24						; size = 4
tv152 = -20						; size = 4
tv137 = -16						; size = 4
_modelsub$ = -12					; size = 4
_finalsub$ = -8						; size = 4
_this$ = -4						; size = 4
?GetCharSetName@nsHebrewProber@@UAEPBDXZ PROC		; nsHebrewProber::GetCharSetName
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.cpp
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _finalsub$[ebp], edx
; Line 149
	cmp	DWORD PTR _finalsub$[ebp], 5
	jl	SHORT $LN5@GetCharSet
; Line 150
	mov	eax, OFFSET $SG3995
	jmp	$LN6@GetCharSet
$LN5@GetCharSet:
; Line 151
	cmp	DWORD PTR _finalsub$[ebp], -5		; fffffffbH
	jg	SHORT $LN4@GetCharSet
; Line 152
	mov	eax, OFFSET $SG3997
	jmp	$LN6@GetCharSet
$LN4@GetCharSet:
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	fstp	DWORD PTR tv137[ebp]
	movss	xmm0, DWORD PTR tv137[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+20]
	movss	DWORD PTR tv152[ebp], xmm0
	call	edx
	fstp	DWORD PTR tv144[ebp]
	movss	xmm0, DWORD PTR tv152[ebp]
	subss	xmm0, DWORD PTR tv144[ebp]
	movss	DWORD PTR _modelsub$[ebp], xmm0
; Line 156
	cvtss2sd xmm0, DWORD PTR _modelsub$[ebp]
	comisd	xmm0, QWORD PTR __real@3f847ae147ae147b
	jbe	SHORT $LN3@GetCharSet
; Line 157
	mov	eax, OFFSET $SG4000
	jmp	SHORT $LN6@GetCharSet
$LN3@GetCharSet:
; Line 158
	cvtss2sd xmm0, DWORD PTR _modelsub$[ebp]
	movsd	xmm1, QWORD PTR __real@bf847ae147ae147b
	comisd	xmm1, xmm0
	jbe	SHORT $LN2@GetCharSet
; Line 159
	mov	eax, OFFSET $SG4002
	jmp	SHORT $LN6@GetCharSet
$LN2@GetCharSet:
; Line 162
	cmp	DWORD PTR _finalsub$[ebp], 0
	jge	SHORT $LN1@GetCharSet
; Line 163
	mov	eax, OFFSET $SG4004
	jmp	SHORT $LN6@GetCharSet
$LN1@GetCharSet:
; Line 166
	mov	eax, OFFSET $SG4005
$LN6@GetCharSet:
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCharSetName@nsHebrewProber@@UAEPBDXZ ENDP		; nsHebrewProber::GetCharSetName
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_endPtr$ = -16						; size = 4
_curPtr$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -1						; size = 1
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
?HandleData@nsHebrewProber@@UAE?AW4nsProbingState@@PBDI@Z PROC ; nsHebrewProber::HandleData
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nshebrewprober.cpp
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	eax, 2
	jne	SHORT $LN11@HandleData
; Line 113
	mov	eax, 2
	jmp	$LN12@HandleData
$LN11@HandleData:
; Line 115
	mov	ecx, DWORD PTR _aBuf$[ebp]
	add	ecx, DWORD PTR _aLen$[ebp]
	mov	DWORD PTR _endPtr$[ebp], ecx
; Line 118
	mov	edx, DWORD PTR _aBuf$[ebp]
	mov	DWORD PTR _curPtr$[ebp], edx
	jmp	SHORT $LN10@HandleData
$LN9@HandleData:
	mov	eax, DWORD PTR _curPtr$[ebp]
	add	eax, 1
	mov	DWORD PTR _curPtr$[ebp], eax
$LN10@HandleData:
	mov	ecx, DWORD PTR _curPtr$[ebp]
	cmp	ecx, DWORD PTR _endPtr$[ebp]
	jae	$LN8@HandleData
; Line 120
	mov	edx, DWORD PTR _curPtr$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _cur$[ebp], al
; Line 121
	movsx	ecx, BYTE PTR _cur$[ebp]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN7@HandleData
; Line 123
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+13]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN6@HandleData
; Line 125
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+12]
	push	edx
	call	?isFinal@nsHebrewProber@@KA_ND@Z	; nsHebrewProber::isFinal
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@HandleData
; Line 126
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	jmp	SHORT $LN6@HandleData
$LN5@HandleData:
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+12]
	push	edx
	call	?isNonFinal@nsHebrewProber@@KA_ND@Z	; nsHebrewProber::isNonFinal
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@HandleData
; Line 128
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN6@HandleData:
; Line 131
	jmp	SHORT $LN2@HandleData
$LN7@HandleData:
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+13]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN2@HandleData
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	push	ecx
	call	?isFinal@nsHebrewProber@@KA_ND@Z	; nsHebrewProber::isFinal
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@HandleData
	movsx	eax, BYTE PTR _cur$[ebp]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN2@HandleData
; Line 134
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN2@HandleData:
; Line 136
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+12]
	mov	BYTE PTR [ecx+13], al
; Line 137
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _cur$[ebp]
	mov	BYTE PTR [ecx+12], dl
; Line 138
	jmp	$LN9@HandleData
$LN8@HandleData:
; Line 141
	xor	eax, eax
$LN12@HandleData:
; Line 142
	mov	esp, ebp
	pop	ebp
	ret	8
?HandleData@nsHebrewProber@@UAE?AW4nsProbingState@@PBDI@Z ENDP ; nsHebrewProber::HandleData
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\EncodingMapper.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?encodings@@3PAUEncodingUnit@@A			; encodings
CONST	SEGMENT
$SG3526	DB	'windows-1250', 00H
$SG3544	DB	00H
$SG3545	DB	00H
$SG3549	DB	00H
$SG3527	DB	'windows-1251', 00H
	ORG $+3
$SG3528	DB	'windows-1252', 00H
	ORG $+3
$SG3529	DB	'windows-1253', 00H
	ORG $+3
$SG3530	DB	'windows-1254', 00H
	ORG $+3
$SG3531	DB	'windows-1255', 00H
	ORG $+3
$SG3532	DB	'windows-1256', 00H
	ORG $+3
$SG3533	DB	'windows-1257', 00H
	ORG $+3
$SG3534	DB	'windows-1258', 00H
	ORG $+3
$SG3535	DB	'latin1 ISO_8859-1 ISO-8859-1 CP819 IBM819 csISOLatin1 is'
	DB	'o-ir-100 l1', 00H
$SG3536	DB	'latin2 ISO_8859-2 ISO-8859-2 csISOLatin2 iso-ir-101 l2', 00H
	ORG $+1
$SG3537	DB	'latin3 ISO_8859-3 ISO-8859-3 csISOLatin3 iso-ir-109 l3', 00H
	ORG $+1
$SG3538	DB	'latin4 ISO_8859-4 ISO-8859-4 csISOLatin4 iso-ir-110 l4', 00H
	ORG $+1
$SG3539	DB	'cyrillic ISO_8859-5 ISO-8859-5 csISOLatinCyrillic iso-ir'
	DB	'-144', 00H
	ORG $+3
$SG3542	DB	'hebrew ISO_8859-8 ISO-8859-8 csISOLatinHebrew iso-ir-138'
	DB	00H
	ORG $+3
$SG3540	DB	'arabic ISO_8859-6 ISO-8859-6 csISOLatinArabic iso-ir-127'
	DB	' ASMO-708 ECMA-114', 00H
	ORG $+5
$SG3541	DB	'greek ISO_8859-7 ISO-8859-7 csISOLatinGreek greek8 iso-i'
	DB	'r-126 ELOT_928 ECMA-118', 00H
$SG3543	DB	'latin5 ISO_8859-9 ISO-8859-9 csISOLatin5 iso-ir-148 l5', 00H
	ORG $+1
$SG3546	DB	'ISO_8859-13 ISO-8859-13', 00H
$SG3547	DB	'iso-celtic latin8 ISO_8859-14 ISO-8859-14 18 iso-ir-199', 00H
$SG3548	DB	'Latin-9 ISO_8859-15 ISO-8859-15', 00H
$SG3550	DB	'IBM437 cp437 437 csPC8CodePage437', 00H
	ORG $+2
$SG3551	DB	'IBM720 cp720 oem720 720', 00H
$SG3552	DB	'IBM737 cp737 oem737 737', 00H
$SG3553	DB	'IBM775 cp775 oem775 775', 00H
$SG3554	DB	'IBM850 cp850 oem850 850', 00H
$SG3555	DB	'IBM852 cp852 oem852 852', 00H
$SG3556	DB	'IBM855 cp855 oem855 855 csIBM855', 00H
	ORG $+3
$SG3557	DB	'IBM857 cp857 oem857 857', 00H
$SG3558	DB	'IBM858 cp858 oem858 858', 00H
$SG3559	DB	'IBM860 cp860 oem860 860', 00H
$SG3560	DB	'IBM861 cp861 oem861 861', 00H
$SG3561	DB	'IBM862 cp862 oem862 862', 00H
$SG3562	DB	'IBM863 cp863 oem863 863', 00H
$SG3563	DB	'IBM865 cp865 oem865 865', 00H
$SG3564	DB	'IBM866 cp866 oem866 866', 00H
$SG3565	DB	'IBM869 cp869 oem869 869', 00H
$SG3566	DB	'big5 csBig5', 00H
$SG3567	DB	'gb2312 gbk csGB2312 gb18030', 00H
$SG3568	DB	'Shift_JIS MS_Kanji csShiftJIS csWindows31J', 00H
	ORG $+1
$SG3569	DB	'windows-949 korean', 00H
	ORG $+1
$SG3570	DB	'euc-kr csEUCKR', 00H
	ORG $+1
$SG3571	DB	'tis-620', 00H
$SG3572	DB	'x-mac-cyrillic xmaccyrillic', 00H
$SG3573	DB	'koi8_u', 00H
	ORG $+1
$SG3574	DB	'koi8_r csKOI8R', 00H
	ORG $+1
$SG3651	DB	'utf-8 utf8', 00H
CONST	ENDS
_DATA	SEGMENT
?encodings@@3PAUEncodingUnit@@A DD 04e2H		; encodings
	DD	FLAT:$SG3526
	DD	04e3H
	DD	FLAT:$SG3527
	DD	04e4H
	DD	FLAT:$SG3528
	DD	04e5H
	DD	FLAT:$SG3529
	DD	04e6H
	DD	FLAT:$SG3530
	DD	04e7H
	DD	FLAT:$SG3531
	DD	04e8H
	DD	FLAT:$SG3532
	DD	04e9H
	DD	FLAT:$SG3533
	DD	04eaH
	DD	FLAT:$SG3534
	DD	06fafH
	DD	FLAT:$SG3535
	DD	06fb0H
	DD	FLAT:$SG3536
	DD	06fb1H
	DD	FLAT:$SG3537
	DD	06fb2H
	DD	FLAT:$SG3538
	DD	06fb3H
	DD	FLAT:$SG3539
	DD	06fb4H
	DD	FLAT:$SG3540
	DD	06fb5H
	DD	FLAT:$SG3541
	DD	06fb6H
	DD	FLAT:$SG3542
	DD	06fb7H
	DD	FLAT:$SG3543
	DD	06fb8H
	DD	FLAT:$SG3544
	DD	06fb9H
	DD	FLAT:$SG3545
	DD	06fbbH
	DD	FLAT:$SG3546
	DD	06fbcH
	DD	FLAT:$SG3547
	DD	06fbdH
	DD	FLAT:$SG3548
	DD	06fbeH
	DD	FLAT:$SG3549
	DD	01b5H
	DD	FLAT:$SG3550
	DD	02d0H
	DD	FLAT:$SG3551
	DD	02e1H
	DD	FLAT:$SG3552
	DD	0307H
	DD	FLAT:$SG3553
	DD	0352H
	DD	FLAT:$SG3554
	DD	0354H
	DD	FLAT:$SG3555
	DD	0357H
	DD	FLAT:$SG3556
	DD	0359H
	DD	FLAT:$SG3557
	DD	035aH
	DD	FLAT:$SG3558
	DD	035cH
	DD	FLAT:$SG3559
	DD	035dH
	DD	FLAT:$SG3560
	DD	035eH
	DD	FLAT:$SG3561
	DD	035fH
	DD	FLAT:$SG3562
	DD	0361H
	DD	FLAT:$SG3563
	DD	0362H
	DD	FLAT:$SG3564
	DD	0365H
	DD	FLAT:$SG3565
	DD	03b6H
	DD	FLAT:$SG3566
	DD	03a8H
	DD	FLAT:$SG3567
	DD	03a4H
	DD	FLAT:$SG3568
	DD	03b5H
	DD	FLAT:$SG3569
	DD	0caedH
	DD	FLAT:$SG3570
	DD	036aH
	DD	FLAT:$SG3571
	DD	02717H
	DD	FLAT:$SG3572
	DD	0556aH
	DD	FLAT:$SG3573
	DD	05182H
	DD	FLAT:$SG3574
_DATA	ENDS
PUBLIC	?getEncodingFromIndex@EncodingMapper@@QBEHH@Z	; EncodingMapper::getEncodingFromIndex
PUBLIC	?getIndexFromEncoding@EncodingMapper@@QBEHH@Z	; EncodingMapper::getIndexFromEncoding
PUBLIC	?getEncodingFromString@EncodingMapper@@QBEHPBD@Z ; EncodingMapper::getEncodingFromString
PUBLIC	??0EncodingMapper@@AAE@XZ			; EncodingMapper::EncodingMapper
PUBLIC	?isInListA@@YA_NPBD0@Z				; isInListA
PUBLIC	?_pSelf@EncodingMapper@@0PAV1@A			; EncodingMapper::_pSelf
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_strlen:PROC
EXTRN	_stricmp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?_pSelf@EncodingMapper@@0PAV1@A DD 01H DUP (?)		; EncodingMapper::_pSelf
_BSS	ENDS
CRT$XCU	SEGMENT
?_pSelf$initializer$@EncodingMapper@@0P6AXXZA DD FLAT:??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ ; EncodingMapper::_pSelf$initializer$
CRT$XCU	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ$0
__ehfuncinfo$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -84						; size = 4
$T2 = -80						; size = 4
_i$ = -76						; size = 4
_j$ = -72						; size = 4
_word$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_token$ = 8						; size = 4
_list$ = 12						; size = 4
?isInListA@@YA_NPBD0@Z PROC				; isInListA
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\encodingmapper.cpp
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 89
	cmp	DWORD PTR _token$[ebp], 0
	je	SHORT $LN9@isInListA
	cmp	DWORD PTR _list$[ebp], 0
	jne	SHORT $LN10@isInListA
$LN9@isInListA:
; Line 90
	xor	al, al
	jmp	$LN12@isInListA
$LN10@isInListA:
; Line 92
	mov	DWORD PTR _i$[ebp], 0
; Line 93
	mov	DWORD PTR _j$[ebp], 0
; Line 94
	mov	eax, DWORD PTR _list$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN8@isInListA
$LN7@isInListA:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN8@isInListA:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _len$1[ebp]
	ja	SHORT $LN6@isInListA
; Line 96
	mov	eax, DWORD PTR _list$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN4@isInListA
	mov	edx, DWORD PTR _list$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN5@isInListA
$LN4@isInListA:
; Line 98
	cmp	DWORD PTR _j$[ebp], 0
	je	SHORT $LN3@isInListA
; Line 100
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 64			; 00000040H
	jae	SHORT $LN13@isInListA
	jmp	SHORT $LN14@isInListA
$LN13@isInListA:
	call	___report_rangecheckfailure
$LN14@isInListA:
	mov	edx, DWORD PTR $T2[ebp]
	mov	BYTE PTR _word$[ebp+edx], 0
; Line 101
	mov	DWORD PTR _j$[ebp], 0
; Line 103
	lea	eax, DWORD PTR _word$[ebp]
	push	eax
	mov	ecx, DWORD PTR _token$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@isInListA
; Line 104
	mov	al, 1
	jmp	SHORT $LN12@isInListA
$LN3@isInListA:
; Line 107
	jmp	SHORT $LN1@isInListA
$LN5@isInListA:
; Line 109
	mov	edx, DWORD PTR _list$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _j$[ebp]
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR _word$[ebp+eax], cl
; Line 110
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN1@isInListA:
; Line 112
	jmp	$LN7@isInListA
$LN6@isInListA:
; Line 113
	xor	al, al
$LN12@isInListA:
; Line 114
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?isInListA@@YA_NPBD0@Z ENDP				; isInListA
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ
text$di	SEGMENT
$T2 = -24						; size = 4
tv71 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ PROC	; `dynamic initializer for 'EncodingMapper::_pSelf'', COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\encodingmapper.cpp
; Line 86
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@pSelf
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0EncodingMapper@@AAE@XZ		; EncodingMapper::EncodingMapper
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@pSelf
$LN3@pSelf:
	mov	DWORD PTR tv71[ebp], 0
$LN4@pSelf:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?_pSelf@EncodingMapper@@0PAV1@A, ecx ; EncodingMapper::_pSelf
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
text$di	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__E?_pSelf@EncodingMapper@@0PAV1@A@@YAXXZ ENDP	; `dynamic initializer for 'EncodingMapper::_pSelf''
; Function compile flags: /Odtp
;	COMDAT ??0EncodingMapper@@AAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0EncodingMapper@@AAE@XZ PROC				; EncodingMapper::EncodingMapper, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\encodingmapper.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0EncodingMapper@@AAE@XZ ENDP				; EncodingMapper::EncodingMapper
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_nbItem$ = -12						; size = 4
_enc$ = -8						; size = 4
_i$1 = -4						; size = 4
_encodingAlias$ = 8					; size = 4
?getEncodingFromString@EncodingMapper@@QBEHPBD@Z PROC	; EncodingMapper::getEncodingFromString
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\encodingmapper.cpp
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	push	OFFSET $SG3651
	mov	eax, DWORD PTR _encodingAlias$[ebp]
	push	eax
	call	?isInListA@@YA_NPBD0@Z			; isInListA
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@getEncodin
; Line 143
	mov	eax, 65001				; 0000fde9H
	jmp	SHORT $LN6@getEncodin
$LN5@getEncodin:
; Line 145
	mov	DWORD PTR _nbItem$[ebp], 49		; 00000031H
; Line 146
	mov	DWORD PTR _enc$[ebp], -1
; Line 147
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@getEncodin
$LN3@getEncodin:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@getEncodin:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _nbItem$[ebp]
	jae	SHORT $LN2@getEncodin
; Line 149
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR ?encodings@@3PAUEncodingUnit@@A[ecx*8+4]
	push	edx
	mov	eax, DWORD PTR _encodingAlias$[ebp]
	push	eax
	call	?isInListA@@YA_NPBD0@Z			; isInListA
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@getEncodin
; Line 151
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR ?encodings@@3PAUEncodingUnit@@A[edx*8]
	mov	DWORD PTR _enc$[ebp], eax
; Line 152
	jmp	SHORT $LN2@getEncodin
$LN1@getEncodin:
; Line 154
	jmp	SHORT $LN3@getEncodin
$LN2@getEncodin:
; Line 155
	mov	eax, DWORD PTR _enc$[ebp]
$LN6@getEncodin:
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	4
?getEncodingFromString@EncodingMapper@@QBEHPBD@Z ENDP	; EncodingMapper::getEncodingFromString
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -20						; size = 4
_nbItem$ = -16						; size = 4
tv72 = -12						; size = 4
_i$ = -8						; size = 4
_found$ = -1						; size = 1
_encoding$ = 8						; size = 4
?getIndexFromEncoding@EncodingMapper@@QBEHH@Z PROC	; EncodingMapper::getIndexFromEncoding
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\encodingmapper.cpp
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 126
	mov	BYTE PTR _found$[ebp], 0
; Line 127
	mov	DWORD PTR _nbItem$[ebp], 49		; 00000031H
; Line 128
	mov	DWORD PTR _i$[ebp], 0
; Line 129
	jmp	SHORT $LN4@getIndexFr
$LN3@getIndexFr:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@getIndexFr:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nbItem$[ebp]
	jae	SHORT $LN2@getIndexFr
; Line 131
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?encodings@@3PAUEncodingUnit@@A[edx*8]
	cmp	eax, DWORD PTR _encoding$[ebp]
	jne	SHORT $LN1@getIndexFr
; Line 133
	mov	BYTE PTR _found$[ebp], 1
; Line 134
	jmp	SHORT $LN2@getIndexFr
$LN1@getIndexFr:
; Line 136
	jmp	SHORT $LN3@getIndexFr
$LN2@getIndexFr:
; Line 137
	movzx	ecx, BYTE PTR _found$[ebp]
	test	ecx, ecx
	je	SHORT $LN7@getIndexFr
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv72[ebp], edx
	jmp	SHORT $LN8@getIndexFr
$LN7@getIndexFr:
	mov	DWORD PTR tv72[ebp], -1
$LN8@getIndexFr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 138
	mov	esp, ebp
	pop	ebp
	ret	4
?getIndexFromEncoding@EncodingMapper@@QBEHH@Z ENDP	; EncodingMapper::getIndexFromEncoding
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nbItem$ = -4						; size = 4
_index$ = 8						; size = 4
?getEncodingFromIndex@EncodingMapper@@QBEHH@Z PROC	; EncodingMapper::getEncodingFromIndex
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\encodingmapper.cpp
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 118
	mov	DWORD PTR _nbItem$[ebp], 49		; 00000031H
; Line 119
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@getEncodin
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _nbItem$[ebp]
	jb	SHORT $LN2@getEncodin
$LN1@getEncodin:
; Line 120
	or	eax, -1
	jmp	SHORT $LN3@getEncodin
$LN2@getEncodin:
; Line 121
	mov	ecx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR ?encodings@@3PAUEncodingUnit@@A[ecx*8]
$LN3@getEncodin:
; Line 122
	mov	esp, ebp
	pop	ebp
	ret	4
?getEncodingFromIndex@EncodingMapper@@QBEHH@Z ENDP	; EncodingMapper::getEncodingFromIndex
_TEXT	ENDS
END

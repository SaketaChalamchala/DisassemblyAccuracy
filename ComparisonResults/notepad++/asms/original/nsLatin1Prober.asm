; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\uchardet\nsLatin1Prober.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_Latin1_CharToClass DB 01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	07H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	05H
	DB	01H
	DB	05H
	DB	00H
	DB	05H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	07H
	DB	01H
	DB	07H
	DB	00H
	DB	07H
	DB	05H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	01H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	05H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	07H
	DB	07H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	07H
	DB	07H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	01H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	06H
	DB	07H
	DB	07H
	DB	07H
_Latin1ClassModel DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	01H
	DB	01H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	01H
	DB	02H
	DB	01H
	DB	02H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	01H
	DB	03H
	DB	01H
	DB	01H
	DB	01H
	DB	03H
	DB	00H
	DB	03H
	DB	01H
	DB	03H
	DB	01H
	DB	01H
	DB	03H
	DB	03H
CONST	ENDS
PUBLIC	?HandleData@nsLatin1Prober@@UAE?AW4nsProbingState@@PBDI@Z ; nsLatin1Prober::HandleData
PUBLIC	?Reset@nsLatin1Prober@@UAEXXZ			; nsLatin1Prober::Reset
PUBLIC	?GetConfidence@nsLatin1Prober@@UAEMXZ		; nsLatin1Prober::GetConfidence
PUBLIC	__real@00000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@41a00000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	?FilterWithEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z:PROC ; nsCharSetProber::FilterWithEnglishLetters
EXTRN	_free:PROC
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv165 = -64						; size = 8
tv156 = -56						; size = 8
tv145 = -48						; size = 8
tv136 = -40						; size = 8
tv161 = -32						; size = 4
tv152 = -28						; size = 4
tv141 = -24						; size = 4
tv132 = -20						; size = 4
_this$ = -16						; size = 4
_i$1 = -12						; size = 4
_total$ = -8						; size = 4
_confidence$ = -4					; size = 4
?GetConfidence@nsLatin1Prober@@UAEMXZ PROC		; nsLatin1Prober::GetConfidence
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.cpp
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 2
	jne	SHORT $LN7@GetConfide
; Line 150
	fld	DWORD PTR __real@3c23d70a
	jmp	$LN8@GetConfide
$LN7@GetConfide:
; Line 153
	mov	DWORD PTR _total$[ebp], 0
; Line 154
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN6@GetConfide
$LN5@GetConfide:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN6@GetConfide:
	cmp	DWORD PTR _i$1[ebp], 4
	jge	SHORT $LN4@GetConfide
; Line 155
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _total$[ebp]
	add	ecx, DWORD PTR [eax+edx*4+12]
	mov	DWORD PTR _total$[ebp], ecx
	jmp	SHORT $LN5@GetConfide
$LN4@GetConfide:
; Line 157
	cmp	DWORD PTR _total$[ebp], 0
	jne	SHORT $LN3@GetConfide
; Line 158
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _confidence$[ebp], xmm0
; Line 159
	jmp	$LN2@GetConfide
$LN3@GetConfide:
; Line 161
	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+12]
	mov	DWORD PTR tv132[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR tv132[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv136[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv136[ebp]
	mulss	xmm0, DWORD PTR __real@3f800000
	mov	ecx, DWORD PTR _total$[ebp]
	mov	DWORD PTR tv141[ebp], ecx
	cvtsi2sd xmm1, DWORD PTR tv141[ebp]
	mov	edx, DWORD PTR tv141[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv145[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv145[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _confidence$[ebp], xmm0
; Line 162
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+12]
	mov	DWORD PTR tv152[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv152[ebp]
	mov	eax, DWORD PTR tv152[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv156[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv156[ebp]
	mulss	xmm0, DWORD PTR __real@41a00000
	mov	ecx, DWORD PTR _total$[ebp]
	mov	DWORD PTR tv161[ebp], ecx
	cvtsi2sd xmm1, DWORD PTR tv161[ebp]
	mov	edx, DWORD PTR tv161[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv165[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv165[ebp]
	divss	xmm0, xmm1
	movss	xmm1, DWORD PTR _confidence$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _confidence$[ebp], xmm1
$LN2@GetConfide:
; Line 165
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _confidence$[ebp]
	jbe	SHORT $LN1@GetConfide
; Line 166
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _confidence$[ebp], xmm0
$LN1@GetConfide:
; Line 170
	movss	xmm0, DWORD PTR _confidence$[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _confidence$[ebp], xmm0
; Line 172
	fld	DWORD PTR _confidence$[ebp]
$LN8@GetConfide:
; Line 173
	mov	esp, ebp
	pop	ebp
	ret	0
?GetConfidence@nsLatin1Prober@@UAEMXZ ENDP		; nsLatin1Prober::GetConfidence
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
?Reset@nsLatin1Prober@@UAEXXZ PROC			; nsLatin1Prober::Reset
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.cpp
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 111
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 1
; Line 112
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@Reset
$LN2@Reset:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN3@Reset:
	cmp	DWORD PTR _i$1[ebp], 4
	jge	SHORT $LN4@Reset
; Line 113
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+12], 0
	jmp	SHORT $LN2@Reset
$LN4@Reset:
; Line 114
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@nsLatin1Prober@@UAEXXZ ENDP			; nsLatin1Prober::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_newLen1$ = -20						; size = 4
_i$1 = -16						; size = 4
_this$ = -12						; size = 4
_newBuf1$ = -8						; size = 4
_charClass$ = -2					; size = 1
_freq$ = -1						; size = 1
_aBuf$ = 8						; size = 4
_aLen$ = 12						; size = 4
?HandleData@nsLatin1Prober@@UAE?AW4nsProbingState@@PBDI@Z PROC ; nsLatin1Prober::HandleData
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\uchardet\nslatin1prober.cpp
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	DWORD PTR _newBuf1$[ebp], 0
; Line 120
	mov	DWORD PTR _newLen1$[ebp], 0
; Line 122
	lea	eax, DWORD PTR _newLen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newBuf1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _aBuf$[ebp]
	push	eax
	call	?FilterWithEnglishLetters@nsCharSetProber@@SA_NPBDIPAPADAAI@Z ; nsCharSetProber::FilterWithEnglishLetters
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@HandleData
; Line 123
	mov	edx, DWORD PTR _aBuf$[ebp]
	mov	DWORD PTR _newBuf1$[ebp], edx
; Line 124
	mov	eax, DWORD PTR _aLen$[ebp]
	mov	DWORD PTR _newLen1$[ebp], eax
$LN7@HandleData:
; Line 129
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN6@HandleData
$LN5@HandleData:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN6@HandleData:
	mov	edx, DWORD PTR _i$1[ebp]
	cmp	edx, DWORD PTR _newLen1$[ebp]
	jae	SHORT $LN4@HandleData
; Line 131
	mov	eax, DWORD PTR _newBuf1$[ebp]
	add	eax, DWORD PTR _i$1[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	dl, BYTE PTR _Latin1_CharToClass[ecx]
	mov	BYTE PTR _charClass$[ebp], dl
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	movzx	edx, BYTE PTR _charClass$[ebp]
	mov	al, BYTE PTR _Latin1ClassModel[edx+ecx*8]
	mov	BYTE PTR _freq$[ebp], al
; Line 133
	movzx	ecx, BYTE PTR _freq$[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@HandleData
; Line 134
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 2
; Line 135
	jmp	SHORT $LN4@HandleData
$LN3@HandleData:
; Line 137
	movzx	eax, BYTE PTR _freq$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+12]
	add	edx, 1
	movzx	eax, BYTE PTR _freq$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+12], edx
; Line 138
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _charClass$[ebp]
	mov	BYTE PTR [edx+8], al
; Line 139
	jmp	SHORT $LN5@HandleData
$LN4@HandleData:
; Line 141
	mov	ecx, DWORD PTR _newBuf1$[ebp]
	cmp	ecx, DWORD PTR _aBuf$[ebp]
	je	SHORT $LN2@HandleData
; Line 142
	cmp	DWORD PTR _newBuf1$[ebp], 0
	je	SHORT $LN2@HandleData
	mov	edx, DWORD PTR _newBuf1$[ebp]
	push	edx
	call	_free
	add	esp, 4
$LN2@HandleData:
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 145
	mov	esp, ebp
	pop	ebp
	ret	8
?HandleData@nsLatin1Prober@@UAE?AW4nsProbingState@@PBDI@Z ENDP ; nsLatin1Prober::HandleData
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\workspace\notepad-plus-plus-6.7.9.2\PowerEditor\src\WinControls\DockingWnd\DockingManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?_isRegistered@DockingManager@@0HA		; DockingManager::_isRegistered
_BSS	SEGMENT
_hWndServer DD	01H DUP (?)
_gWinCallHook DD 01H DUP (?)
?_isRegistered@DockingManager@@0HA DD 01H DUP (?)	; DockingManager::_isRegistered
_BSS	ENDS
CONST	SEGMENT
$SG126048 DB	'd', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'M', 00H, 'a', 00H, 'n', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG126052 DB	'DockingManager::init : RegisterClass() function failed', 00H
	ORG $+1
$SG126058 DB	00H, 00H
	ORG $+2
$SG126059 DB	'd', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'M', 00H, 'a', 00H, 'n', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG126063 DB	'DockingManager::init : CreateWindowEx() function return '
	DB	'null', 00H
	ORG $+3
$SG126076 DB	'DockingManager::init : SetWindowsHookEx() function retur'
	DB	'n null', 00H
CONST	ENDS
PUBLIC	_hypot
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0Window@@QAE@XZ				; Window::Window
PUBLIC	??1Window@@UAE@XZ				; Window::~Window
PUBLIC	?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z	; Window::init
PUBLIC	?display@Window@@UBEX_N@Z			; Window::display
PUBLIC	?reSizeTo@Window@@UAEXAAUtagRECT@@@Z		; Window::reSizeTo
PUBLIC	?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z		; Window::reSizeToWH
PUBLIC	?redraw@Window@@UBEX_N@Z			; Window::redraw
PUBLIC	?getClientRect@Window@@UBEXAAUtagRECT@@@Z	; Window::getClientRect
PUBLIC	?getWindowRect@Window@@UBEXAAUtagRECT@@@Z	; Window::getWindowRect
PUBLIC	?getWidth@Window@@UBEHXZ			; Window::getWidth
PUBLIC	?getHeight@Window@@UBEHXZ			; Window::getHeight
PUBLIC	?isVisible@Window@@UBE_NXZ			; Window::isVisible
PUBLIC	?getHSelf@Window@@QBEPAUHWND__@@XZ		; Window::getHSelf
PUBLIC	??_GWindow@@UAEPAXI@Z				; Window::`scalar deleting destructor'
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?updateInfo@DockingCont@@QAEHPAUHWND__@@@Z	; DockingCont::updateInfo
PUBLIC	?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ ; DockingCont::getDataOfAllTb
PUBLIC	?isFloating@DockingCont@@QAE_NXZ		; DockingCont::isFloating
PUBLIC	?SetActive@DockingCont@@QAEXH@Z			; DockingCont::SetActive
PUBLIC	?select_on_container_copy_construction@?$allocator@PAUtTbData@@@std@@QBE?AV12@XZ ; std::allocator<tTbData *>::select_on_container_copy_construction
PUBLIC	??0?$allocator@PAUtTbData@@@std@@QAE@XZ		; std::allocator<tTbData *>::allocator<tTbData *>
PUBLIC	??0?$allocator@PAUtTbData@@@std@@QAE@ABV01@@Z	; std::allocator<tTbData *>::allocator<tTbData *>
PUBLIC	?deallocate@?$allocator@PAUtTbData@@@std@@QAEXPAPAUtTbData@@I@Z ; std::allocator<tTbData *>::deallocate
PUBLIC	?allocate@?$allocator@PAUtTbData@@@std@@QAEPAPAUtTbData@@I@Z ; std::allocator<tTbData *>::allocate
PUBLIC	?max_size@?$allocator@PAUtTbData@@@std@@QBEIXZ	; std::allocator<tTbData *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SAIABV?$allocator@PAUtTbData@@@2@@Z ; std::allocator_traits<std::allocator<tTbData *> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SA?AV?$allocator@PAUtTbData@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<tTbData *> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<tTbData *> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEPAPAUtTbData@@I@Z ; std::_Wrap_alloc<std::allocator<tTbData *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEXPAPAUtTbData@@I@Z ; std::_Wrap_alloc<std::allocator<tTbData *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<tTbData *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<tTbData *> >::_Vector_val<std::_Simple_types<tTbData *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<tTbData *> >::~_Vector_val<std::_Simple_types<tTbData *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::~_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
PUBLIC	??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::vector<tTbData *,std::allocator<tTbData *> >
PUBLIC	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
PUBLIC	?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::begin
PUBLIC	?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::end
PUBLIC	?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::size
PUBLIC	?max_size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::max_size
PUBLIC	??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::operator[]
PUBLIC	?_Buy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAE_NI@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::_Buy
PUBLIC	?_Destroy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXPAPAUtTbData@@0@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::_Destroy
PUBLIC	?_Tidy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IBEXXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::_Xlen
PUBLIC	??0DockingManager@@QAE@XZ			; DockingManager::DockingManager
PUBLIC	??1DockingManager@@UAE@XZ			; DockingManager::~DockingManager
PUBLIC	?init@DockingManager@@QAEXPAUHINSTANCE__@@PAUHWND__@@PAPAVWindow@@@Z ; DockingManager::init
PUBLIC	?reSizeTo@DockingManager@@UAEXAAUtagRECT@@@Z	; DockingManager::reSizeTo
PUBLIC	?setClientWnd@DockingManager@@QAEXPAPAVWindow@@@Z ; DockingManager::setClientWnd
PUBLIC	?showContainer@DockingManager@@QAEXPAUHWND__@@H@Z ; DockingManager::showContainer
PUBLIC	?showContainer@DockingManager@@QAEXIH@Z		; DockingManager::showContainer
PUBLIC	?updateContainerInfo@DockingManager@@QAEXPAUHWND__@@@Z ; DockingManager::updateContainerInfo
PUBLIC	?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z ; DockingManager::createDockableDlg
PUBLIC	?setActiveTab@DockingManager@@QAEXHH@Z		; DockingManager::setActiveTab
PUBLIC	?showDockableDlg@DockingManager@@QAEXPAUHWND__@@H@Z ; DockingManager::showDockableDlg
PUBLIC	?showDockableDlg@DockingManager@@QAEXPA_WH@Z	; DockingManager::showDockableDlg
PUBLIC	?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z ; DockingManager::toggleActiveTb
PUBLIC	?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z ; DockingManager::toggleVisTb
PUBLIC	?toggleActiveTb@DockingManager@@QAEXPAVDockingCont@@0@Z ; DockingManager::toggleActiveTb
PUBLIC	?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z ; DockingManager::toggleVisTb
PUBLIC	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
PUBLIC	?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ; DockingManager::getContainerInfo
PUBLIC	?getDockedContSize@DockingManager@@QAEHH@Z	; DockingManager::getDockedContSize
PUBLIC	?setDockedContSize@DockingManager@@QAEXHH@Z	; DockingManager::setDockedContSize
PUBLIC	?destroy@DockingManager@@UAEXXZ			; DockingManager::destroy
PUBLIC	?staticWinProc@DockingManager@@CGJPAUHWND__@@IIJ@Z ; DockingManager::staticWinProc
PUBLIC	?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z	; DockingManager::runProc
PUBLIC	?onSize@DockingManager@@AAEXXZ			; DockingManager::onSize
PUBLIC	?toggleTb@DockingManager@@AAEXPAVDockingCont@@0UtTbData@@@Z ; DockingManager::toggleTb
PUBLIC	?ContExists@DockingManager@@AAEHI@Z		; DockingManager::ContExists
PUBLIC	?FindEmptyContainer@DockingManager@@AAEHXZ	; DockingManager::FindEmptyContainer
PUBLIC	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z	; DockingManager::SendNotify
PUBLIC	??0?$allocator@PAUHWND__@@@std@@QAE@XZ		; std::allocator<HWND__ *>::allocator<HWND__ *>
PUBLIC	?deallocate@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@I@Z ; std::allocator<HWND__ *>::deallocate
PUBLIC	?allocate@?$allocator@PAUHWND__@@@std@@QAEPAPAUHWND__@@I@Z ; std::allocator<HWND__ *>::allocate
PUBLIC	?construct@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@ABQAU3@@Z ; std::allocator<HWND__ *>::construct
PUBLIC	?max_size@?$allocator@PAUHWND__@@@std@@QBEIXZ	; std::allocator<HWND__ *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAIABV?$allocator@PAUHWND__@@@2@@Z ; std::allocator_traits<std::allocator<HWND__ *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<HWND__ *> >::_Wrap_alloc<std::allocator<HWND__ *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAPAUHWND__@@I@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@I@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<HWND__ *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<HWND__ *> >::_Vector_val<std::_Simple_types<HWND__ *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<HWND__ *> >::~_Vector_val<std::_Simple_types<HWND__ *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
PUBLIC	??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::vector<HWND__ *,std::allocator<HWND__ *> >
PUBLIC	??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::~vector<HWND__ *,std::allocator<HWND__ *> >
PUBLIC	?capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Unused_capacity
PUBLIC	?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size
PUBLIC	?max_size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::max_size
PUBLIC	??A?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@I@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::operator[]
PUBLIC	?push_back@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXABQAUHWND__@@@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::push_back
PUBLIC	?_Destroy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXPAPAUHWND__@@0@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEII@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBE_NPBQAUHWND__@@@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Orphan_range
PUBLIC	??0?$allocator@PAVDockingCont@@@std@@QAE@XZ	; std::allocator<DockingCont *>::allocator<DockingCont *>
PUBLIC	?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::deallocate
PUBLIC	?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::allocate
PUBLIC	?construct@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@ABQAV3@@Z ; std::allocator<DockingCont *>::construct
PUBLIC	?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ ; std::allocator<DockingCont *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingCont *> >::~_Vector_val<std::_Simple_types<DockingCont *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
PUBLIC	??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
PUBLIC	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
PUBLIC	?capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Unused_capacity
PUBLIC	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
PUBLIC	?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size
PUBLIC	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
PUBLIC	?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
PUBLIC	?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEII@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBE_NPBQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Orphan_range
PUBLIC	??0?$allocator@PAVDockingSplitter@@@std@@QAE@XZ	; std::allocator<DockingSplitter *>::allocator<DockingSplitter *>
PUBLIC	?deallocate@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@I@Z ; std::allocator<DockingSplitter *>::deallocate
PUBLIC	?allocate@?$allocator@PAVDockingSplitter@@@std@@QAEPAPAVDockingSplitter@@I@Z ; std::allocator<DockingSplitter *>::allocate
PUBLIC	?construct@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@ABQAV3@@Z ; std::allocator<DockingSplitter *>::construct
PUBLIC	?max_size@?$allocator@PAVDockingSplitter@@@std@@QBEIXZ ; std::allocator<DockingSplitter *>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAIABV?$allocator@PAVDockingSplitter@@@2@@Z ; std::allocator_traits<std::allocator<DockingSplitter *> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::_Wrap_alloc<std::allocator<DockingSplitter *> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEPAPAVDockingSplitter@@I@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@I@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingSplitter *> >::_Vector_val<std::_Simple_types<DockingSplitter *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingSplitter *> >::~_Vector_val<std::_Simple_types<DockingSplitter *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
PUBLIC	??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::vector<DockingSplitter *,std::allocator<DockingSplitter *> >
PUBLIC	??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::~vector<DockingSplitter *,std::allocator<DockingSplitter *> >
PUBLIC	?capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::capacity
PUBLIC	?_Unused_capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Unused_capacity
PUBLIC	?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::size
PUBLIC	?max_size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::max_size
PUBLIC	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
PUBLIC	?push_back@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXABQAVDockingSplitter@@@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::push_back
PUBLIC	?_Destroy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXPAPAVDockingSplitter@@0@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEII@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Grow_to
PUBLIC	?_Inside@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBE_NPBQAVDockingSplitter@@@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Inside
PUBLIC	?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reallocate
PUBLIC	?_Reserve@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Tidy
PUBLIC	?_Xlen@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Orphan_range
PUBLIC	??_GDockingManager@@UAEPAXI@Z			; DockingManager::`scalar deleting destructor'
PUBLIC	??0DockingSplitter@@QAE@XZ			; DockingSplitter::DockingSplitter
PUBLIC	??1DockingSplitter@@UAE@XZ			; DockingSplitter::~DockingSplitter
PUBLIC	?destroy@DockingSplitter@@UAEXXZ		; DockingSplitter::destroy
PUBLIC	??_GDockingSplitter@@UAEPAXI@Z			; DockingSplitter::`scalar deleting destructor'
PUBLIC	?init@Gripper@@QAEXPAUHINSTANCE__@@PAUHWND__@@@Z ; Gripper::init
PUBLIC	?scaleY@DPIManager@@QAEHH@Z			; DPIManager::scaleY
PUBLIC	?getInstance@NppParameters@@SAPAV1@XZ		; NppParameters::getInstance
PUBLIC	?FocusWndProc@@YGJHIJ@Z				; FocusWndProc
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QBEPBQAUtTbData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Unchecked
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > > >
PUBLIC	??$addressof@QAUHWND__@@@std@@YAPBQAUHWND__@@ABQAU1@@Z ; std::addressof<HWND__ * const>
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$construct@PAUHWND__@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>
PUBLIC	??$addressof@QAVDockingCont@@@std@@YAPBQAVDockingCont@@ABQAV1@@Z ; std::addressof<DockingCont * const>
PUBLIC	??$construct@PAVDockingCont@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>
PUBLIC	??$construct@PAVDockingCont@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>
PUBLIC	??$addressof@QAVDockingSplitter@@@std@@YAPBQAVDockingSplitter@@ABQAV1@@Z ; std::addressof<DockingSplitter * const>
PUBLIC	??$construct@PAVDockingSplitter@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>
PUBLIC	??$construct@PAVDockingSplitter@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >
PUBLIC	??$_Umove@PAPAUHWND__@@@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEPAPAUHWND__@@PAPAU2@00@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Umove<HWND__ * *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$_Umove@PAPAVDockingCont@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@PAPAV2@00@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Umove<DockingCont * *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
PUBLIC	??$_Umove@PAPAVDockingSplitter@@@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEPAPAVDockingSplitter@@PAPAV2@00@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Umove<DockingSplitter * *>
PUBLIC	??$_Allocate@PAUtTbData@@@std@@YAPAPAUtTbData@@IPAPAU1@@Z ; std::_Allocate<tTbData *>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@PAUHWND__@@@std@@YAPAPAUHWND__@@IPAPAU1@@Z ; std::_Allocate<HWND__ *>
PUBLIC	??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z ; std::_Allocate<DockingCont *>
PUBLIC	??$_Allocate@PAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@IPAPAV1@@Z ; std::_Allocate<DockingSplitter *>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >
PUBLIC	??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ; std::forward<HWND__ * &>
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@AAPAU3@@Z ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>
PUBLIC	??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z ; std::forward<HWND__ * const &>
PUBLIC	??$construct@PAUHWND__@@ABQAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@ABQAU3@@Z ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>
PUBLIC	??$forward@AAPAVDockingCont@@@std@@YAAAPAVDockingCont@@AAPAV1@@Z ; std::forward<DockingCont * &>
PUBLIC	??$construct@PAVDockingCont@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@AAPAV3@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>
PUBLIC	??$forward@ABQAVDockingCont@@@std@@YAABQAVDockingCont@@ABQAV1@@Z ; std::forward<DockingCont * const &>
PUBLIC	??$construct@PAVDockingCont@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@ABQAV3@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>
PUBLIC	??$forward@AAPAVDockingSplitter@@@std@@YAAAPAVDockingSplitter@@AAPAV1@@Z ; std::forward<DockingSplitter * &>
PUBLIC	??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@AAPAV3@@Z ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>
PUBLIC	??$forward@ABQAVDockingSplitter@@@std@@YAABQAVDockingSplitter@@ABQAV1@@Z ; std::forward<DockingSplitter * const &>
PUBLIC	??$construct@PAVDockingSplitter@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@ABQAV3@@Z ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAUtTbData@@PAPAU2@@Z ; std::_Ptr_cat<tTbData *,tTbData *>
PUBLIC	??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtTbData@@0@Z ; std::_Ptr_cat<tTbData *,tTbData *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@PAUHWND__@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUHWND__@@0@Z ; std::_Ptr_cat<HWND__ *,HWND__ *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >
PUBLIC	??$_Uninitialized_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ; std::_Uninitialized_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >
PUBLIC	??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z ; std::_Ptr_cat<DockingCont *,DockingCont *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$_Uninitialized_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninitialized_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$_Ptr_cat@PAVDockingSplitter@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingSplitter@@0@Z ; std::_Ptr_cat<DockingSplitter *,DockingSplitter *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
PUBLIC	??$_Uninitialized_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ; std::_Uninitialized_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<tTbData *> > >
PUBLIC	??$_Unchecked@PAPAUtTbData@@@std@@YAPAPAUtTbData@@PAPAU1@@Z ; std::_Unchecked<tTbData * *>
PUBLIC	??$_Uninit_copy@PBQAUtTbData@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ; std::_Uninit_copy<tTbData * const *,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >
PUBLIC	??$_Rechecked@PAPAUtTbData@@PAPAU1@@std@@YAAAPAPAUtTbData@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<tTbData * *,tTbData * *>
PUBLIC	??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::allocator<HWND__ *>::construct<HWND__ *,HWND__ * &>
PUBLIC	??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z ; std::allocator<DockingCont *>::construct<DockingCont *,DockingCont * &>
PUBLIC	??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z ; std::allocator<DockingSplitter *>::construct<DockingSplitter *,DockingSplitter * &>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$_Unchecked@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ; std::_Unchecked<HWND__ * *>
PUBLIC	??$_Uninit_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ; std::_Uninit_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >
PUBLIC	??$_Rechecked@PAPAUHWND__@@PAPAU1@@std@@YAAAPAPAUHWND__@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<HWND__ * *,HWND__ * *>
PUBLIC	??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Unchecked<DockingCont * *>
PUBLIC	??$_Uninit_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninit_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
PUBLIC	??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<DockingCont * *,DockingCont * *>
PUBLIC	??$_Unchecked@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ; std::_Unchecked<DockingSplitter * *>
PUBLIC	??$_Uninit_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ; std::_Uninit_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
PUBLIC	??$_Rechecked@PAPAVDockingSplitter@@PAPAV1@@std@@YAAAPAPAVDockingSplitter@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<DockingSplitter * *,DockingSplitter * *>
PUBLIC	??$_Uninit_copy@QAUtTbData@@PAU1@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tTbData * const,tTbData *>
PUBLIC	??$_Val_type@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ; std::_Val_type<HWND__ * *>
PUBLIC	??$_Uninit_move@PAUHWND__@@PAU1@PAU1@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<HWND__ *,HWND__ *,HWND__ *>
PUBLIC	??$_Val_type@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Val_type<DockingCont * *>
PUBLIC	??$_Uninit_move@PAVDockingCont@@PAV1@PAV1@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DockingCont *,DockingCont *,DockingCont *>
PUBLIC	??$_Val_type@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ; std::_Val_type<DockingSplitter * *>
PUBLIC	??$_Uninit_move@PAVDockingSplitter@@PAV1@PAV1@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DockingSplitter *,DockingSplitter *,DockingSplitter *>
PUBLIC	??$_Debug_range@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WI@Z ; std::_Debug_range<tTbData * const *>
PUBLIC	??$_Debug_pointer@PAUtTbData@@@std@@YAXPAPAUtTbData@@PB_WI@Z ; std::_Debug_pointer<tTbData *>
PUBLIC	??$_Debug_pointer@PAUtTbData@@@std@@YAXPBQAUtTbData@@PB_WI@Z ; std::_Debug_pointer<tTbData *>
PUBLIC	??$_Debug_range@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WI@Z ; std::_Debug_range<HWND__ * *>
PUBLIC	??$_Debug_pointer@PAUHWND__@@@std@@YAXPAPAUHWND__@@PB_WI@Z ; std::_Debug_pointer<HWND__ *>
PUBLIC	??$_Debug_range@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WI@Z ; std::_Debug_range<DockingCont * *>
PUBLIC	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
PUBLIC	??$_Debug_range@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WI@Z ; std::_Debug_range<DockingSplitter * *>
PUBLIC	??$_Debug_pointer@PAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@PB_WI@Z ; std::_Debug_pointer<DockingSplitter *>
PUBLIC	??$_Iter_cat@PBQAUtTbData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAUtTbData@@@Z ; std::_Iter_cat<tTbData * const *>
PUBLIC	??$_Debug_range2@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<tTbData * const *>
PUBLIC	??$_Iter_cat@PAPAUHWND__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHWND__@@@Z ; std::_Iter_cat<HWND__ * *>
PUBLIC	??$_Debug_range2@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<HWND__ * *>
PUBLIC	??$_Iter_cat@PAPAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingCont@@@Z ; std::_Iter_cat<DockingCont * *>
PUBLIC	??$_Debug_range2@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DockingCont * *>
PUBLIC	??$_Iter_cat@PAPAVDockingSplitter@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingSplitter@@@Z ; std::_Iter_cat<DockingSplitter * *>
PUBLIC	??$_Debug_range2@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DockingSplitter * *>
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7Window@@6B@					; Window::`vftable'
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7DockingManager@@6B@				; DockingManager::`vftable'
PUBLIC	??_7DockingSplitter@@6B@			; DockingSplitter::`vftable'
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1KG@EEBFNKPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAt?$AAT?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1KC@CCKJJADN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAH?$AAW?$AAN?$AAD?$AA_?$AA_?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@ ; `string'
PUBLIC	??_C@_1MC@HLIHCBPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAS?$AAp?$AAl?$AAi?$AAt?$AAt?$AAe@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Window@@6B@				; Window::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVWindow@@@8				; Window `RTTI Type Descriptor'
PUBLIC	??_R3Window@@8					; Window::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Window@@8					; Window::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Window@@8				; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DockingSplitter@@6B@			; DockingSplitter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDockingSplitter@@@8			; DockingSplitter `RTTI Type Descriptor'
PUBLIC	??_R3DockingSplitter@@8				; DockingSplitter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DockingSplitter@@8				; DockingSplitter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DockingSplitter@@8		; DockingSplitter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DockingManager@@6B@			; DockingManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDockingManager@@@8			; DockingManager `RTTI Type Descriptor'
PUBLIC	??_R3DockingManager@@8				; DockingManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DockingManager@@8				; DockingManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DockingManager@@8			; DockingManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	__hypot:PROC
EXTRN	_memmove:PROC
EXTRN	_memcpy:PROC
EXTRN	_memcmp:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__CrtDbgReportW:PROC
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__MulDiv@12:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__PostMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__RegisterClassW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__IsChild@8:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__MoveWindow@24:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__IsWindowVisible@4:PROC
EXTRN	__imp__GetDlgCtrlID@4:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__GetFocus@0:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__SetParent@8:PROC
EXTRN	__imp__SetWindowsHookExW@16:PROC
EXTRN	__imp__UnhookWindowsHookEx@4:PROC
EXTRN	__imp__CallNextHookEx@16:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__CoUninitialize@0:PROC
EXTRN	__imp__CoInitialize@4:PROC
EXTRN	__imp__ImageList_Create@20:PROC
EXTRN	__imp__ImageList_Destroy@4:PROC
EXTRN	__imp__ImageList_ReplaceIcon@12:PROC
EXTRN	??_EWindow@@UAEPAXI@Z:PROC			; Window::`vector deleting destructor'
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	??0DockingCont@@QAE@XZ:PROC			; DockingCont::DockingCont
EXTRN	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z:PROC ; DockingCont::createToolbar
EXTRN	?removeToolbar@DockingCont@@QAEXUtTbData@@@Z:PROC ; DockingCont::removeToolbar
EXTRN	?findToolbarByWnd@DockingCont@@QAEPAUtTbData@@PAUHWND__@@@Z:PROC ; DockingCont::findToolbarByWnd
EXTRN	?findToolbarByName@DockingCont@@QAEPAUtTbData@@PA_W@Z:PROC ; DockingCont::findToolbarByName
EXTRN	?showToolbar@DockingCont@@QAEXPAUtTbData@@H@Z:PROC ; DockingCont::showToolbar
EXTRN	?setActiveTb@DockingCont@@QAEXPAUtTbData@@@Z:PROC ; DockingCont::setActiveTb
EXTRN	?setActiveTb@DockingCont@@QAEXH@Z:PROC		; DockingCont::setActiveTb
EXTRN	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ:PROC ; DockingCont::getDataOfActiveTb
EXTRN	?getDataOfVisTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ:PROC ; DockingCont::getDataOfVisTb
EXTRN	?doDialog@DockingCont@@QAEX_N0@Z:PROC		; DockingCont::doDialog
EXTRN	?updateCaption@DockingCont@@IAE_NXZ:PROC	; DockingCont::updateCaption
EXTRN	??_EDockingManager@@UAEPAXI@Z:PROC		; DockingManager::`vector deleting destructor'
EXTRN	?init@DockingSplitter@@QAEXPAUHINSTANCE__@@PAUHWND__@@1I@Z:PROC ; DockingSplitter::init
EXTRN	??_EDockingSplitter@@UAEPAXI@Z:PROC		; DockingSplitter::`vector deleting destructor'
EXTRN	??0Gripper@@QAE@XZ:PROC				; Gripper::Gripper
EXTRN	?startGrip@Gripper@@QAEXPAVDockingCont@@PAVDockingManager@@@Z:PROC ; Gripper::startGrip
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?_pSelf@NppParameters@@0PAV1@A:DWORD		; NppParameters::_pSelf
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@DockingManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DockingManager@@8 DD FLAT:??_R0?AVDockingManager@@@8 ; DockingManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DockingManager@@8
rdata$r	ENDS
;	COMDAT ??_R2DockingManager@@8
rdata$r	SEGMENT
??_R2DockingManager@@8 DD FLAT:??_R1A@?0A@EA@DockingManager@@8 ; DockingManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Window@@8
rdata$r	ENDS
;	COMDAT ??_R3DockingManager@@8
rdata$r	SEGMENT
??_R3DockingManager@@8 DD 00H				; DockingManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DockingManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDockingManager@@@8
data$r	SEGMENT
??_R0?AVDockingManager@@@8 DD FLAT:??_7type_info@@6B@	; DockingManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDockingManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4DockingManager@@6B@
rdata$r	SEGMENT
??_R4DockingManager@@6B@ DD 00H				; DockingManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDockingManager@@@8
	DD	FLAT:??_R3DockingManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DockingSplitter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DockingSplitter@@8 DD FLAT:??_R0?AVDockingSplitter@@@8 ; DockingSplitter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DockingSplitter@@8
rdata$r	ENDS
;	COMDAT ??_R2DockingSplitter@@8
rdata$r	SEGMENT
??_R2DockingSplitter@@8 DD FLAT:??_R1A@?0A@EA@DockingSplitter@@8 ; DockingSplitter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Window@@8
rdata$r	ENDS
;	COMDAT ??_R3DockingSplitter@@8
rdata$r	SEGMENT
??_R3DockingSplitter@@8 DD 00H				; DockingSplitter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DockingSplitter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDockingSplitter@@@8
data$r	SEGMENT
??_R0?AVDockingSplitter@@@8 DD FLAT:??_7type_info@@6B@	; DockingSplitter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDockingSplitter@@', 00H
data$r	ENDS
;	COMDAT ??_R4DockingSplitter@@6B@
rdata$r	SEGMENT
??_R4DockingSplitter@@6B@ DD 00H			; DockingSplitter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDockingSplitter@@@8
	DD	FLAT:??_R3DockingSplitter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Window@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Window@@8 DD FLAT:??_R0?AVWindow@@@8	; Window::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Window@@8
rdata$r	ENDS
;	COMDAT ??_R2Window@@8
rdata$r	SEGMENT
??_R2Window@@8 DD FLAT:??_R1A@?0A@EA@Window@@8		; Window::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Window@@8
rdata$r	SEGMENT
??_R3Window@@8 DD 00H					; Window::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Window@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVWindow@@@8
data$r	SEGMENT
??_R0?AVWindow@@@8 DD FLAT:??_7type_info@@6B@		; Window `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVWindow@@', 00H
data$r	ENDS
;	COMDAT ??_R4Window@@6B@
rdata$r	SEGMENT
??_R4Window@@6B@ DD 00H					; Window::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVWindow@@@8
	DD	FLAT:??_R3Window@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@HLIHCBPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAS?$AAp?$AAl?$AAi?$AAt?$AAt?$AAe@
CONST	SEGMENT
??_C@_1MC@HLIHCBPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAS?$AAp?$AAl?$AAi?$AAt?$AAt?$AAe@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'D', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'S', 00H, 'p'
	DB	00H, 'l', 00H, 'i', 00H, 't', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'D', 00H, 'o', 00H, 'c'
	DB	00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'S', 00H, 'p', 00H
	DB	'l', 00H, 'i', 00H, 't', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@
CONST	SEGMENT
??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'D', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'C', 00H, 'o'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	'D', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KC@CCKJJADN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAH?$AAW?$AAN?$AAD?$AA_?$AA_?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1KC@CCKJJADN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAH?$AAW?$AAN?$AAD?$AA_?$AA_?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'H', 00H
	DB	'W', 00H, 'N', 00H, 'D', 00H, '_', 00H, '_', 00H, ' ', 00H, '*'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 'H', 00H, 'W', 00H, 'N', 00H
	DB	'D', 00H, '_', 00H, '_', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '['
	DB	00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1KG@EEBFNKPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAt?$AAT?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1KG@EEBFNKPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAt?$AAT?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H
	DB	'T', 00H, 'b', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' '
	DB	00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H, 'T', 00H
	DB	'b', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7DockingSplitter@@6B@
CONST	SEGMENT
??_7DockingSplitter@@6B@ DD FLAT:??_R4DockingSplitter@@6B@ ; DockingSplitter::`vftable'
	DD	FLAT:??_EDockingSplitter@@UAEPAXI@Z
	DD	FLAT:?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:?destroy@DockingSplitter@@UAEXXZ
	DD	FLAT:?display@Window@@UBEX_N@Z
	DD	FLAT:?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7DockingManager@@6B@
CONST	SEGMENT
??_7DockingManager@@6B@ DD FLAT:??_R4DockingManager@@6B@ ; DockingManager::`vftable'
	DD	FLAT:??_EDockingManager@@UAEPAXI@Z
	DD	FLAT:?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:?destroy@DockingManager@@UAEXXZ
	DD	FLAT:?display@Window@@UBEX_N@Z
	DD	FLAT:?reSizeTo@DockingManager@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_7Window@@6B@
CONST	SEGMENT
??_7Window@@6B@ DD FLAT:??_R4Window@@6B@		; Window::`vftable'
	DD	FLAT:??_EWindow@@UAEPAXI@Z
	DD	FLAT:?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?display@Window@@UBEX_N@Z
	DD	FLAT:?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
	DD	FLAT:?redraw@Window@@UBEX_N@Z
	DD	FLAT:?getClientRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
	DD	FLAT:?getWidth@Window@@UBEHXZ
	DD	FLAT:?getHeight@Window@@UBEHXZ
	DD	FLAT:?isVisible@Window@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z$0
__ehfuncinfo$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z$0
__ehfuncinfo$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z$0
__ehfuncinfo$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$3
__ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$3
__ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DockingSplitter@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DockingSplitter@@UAE@XZ$0
__ehfuncinfo$??1DockingSplitter@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DockingSplitter@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DockingSplitter@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DockingSplitter@@QAE@XZ$0
__ehfuncinfo$??0DockingSplitter@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DockingSplitter@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?FindEmptyContainer@DockingManager@@AAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindEmptyContainer@DockingManager@@AAEHXZ$0
__unwindtable$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z$0
__unwindtable$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z$0
__unwindtable$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z$0
__unwindtable$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z$1
__unwindtable$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z$2
__unwindtable$??1DockingManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DockingManager@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DockingManager@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DockingManager@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DockingManager@@UAE@XZ$3
__ehfuncinfo$?FindEmptyContainer@DockingManager@@AAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindEmptyContainer@DockingManager@@AAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??1DockingManager@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1DockingManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$??0DockingManager@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0DockingManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??0DockingManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DockingManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DockingManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DockingManager@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DockingManager@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0DockingManager@@QAE@XZ$4
	DD	03H
	DD	FLAT:__unwindfunclet$??0DockingManager@@QAE@XZ$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ$0
__ehfuncinfo$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$4
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ$0
__ehfuncinfo$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_System_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_System_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_System_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_System_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_System_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_System_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iostream_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iostream_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Iostream_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Iostream_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Generic_error_category@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0
__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Generic_error_category@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0
__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_Generic_error_category@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0
__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Generic_error_category@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0runtime_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0runtime_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1runtime_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1runtime_error@std@@UAE@XZ$0
__ehfuncinfo$??1runtime_error@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1runtime_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0runtime_error@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0
__ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0runtime_error@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_all@_Container_base12@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DockingSplitter * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@PB_WI@Z ; std::_Debug_pointer<DockingSplitter *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@PB_WI@Z ; std::_Debug_pointer<DockingSplitter *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DockingSplitter * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAPAVDockingSplitter@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingSplitter@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVDockingSplitter@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingSplitter@@@Z PROC ; std::_Iter_cat<DockingSplitter * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAPAVDockingSplitter@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingSplitter@@@Z ENDP ; std::_Iter_cat<DockingSplitter * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAPAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingCont@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingCont@@@Z PROC ; std::_Iter_cat<DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAPAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingCont@@@Z ENDP ; std::_Iter_cat<DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<HWND__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PAUHWND__@@@std@@YAXPAPAUHWND__@@PB_WI@Z ; std::_Debug_pointer<HWND__ *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PAUHWND__@@@std@@YAXPAPAUHWND__@@PB_WI@Z ; std::_Debug_pointer<HWND__ *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PAPAUHWND__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHWND__@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAUHWND__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHWND__@@@Z PROC ; std::_Iter_cat<HWND__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAPAUHWND__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHWND__@@@Z ENDP ; std::_Iter_cat<HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range2@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<tTbData * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@PAUtTbData@@@std@@YAXPBQAUtTbData@@PB_WI@Z ; std::_Debug_pointer<tTbData *>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@PAUtTbData@@@std@@YAXPBQAUtTbData@@PB_WI@Z ; std::_Debug_pointer<tTbData *>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@Debug_rang:
; Line 578
	pop	ebp
	ret	0
??$_Debug_range2@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<tTbData * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@PBQAUtTbData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAUtTbData@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PBQAUtTbData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAUtTbData@@@Z PROC ; std::_Iter_cat<tTbData * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PBQAUtTbData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAUtTbData@@@Z ENDP ; std::_Iter_cat<tTbData * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@PB_WI@Z PROC ; std::_Debug_pointer<DockingSplitter *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@PAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@PB_WI@Z ENDP ; std::_Debug_pointer<DockingSplitter *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WI@Z PROC ; std::_Debug_range<DockingSplitter * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAPAVDockingSplitter@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingSplitter@@@Z ; std::_Iter_cat<DockingSplitter * *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DockingSplitter * *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WI@Z ENDP ; std::_Debug_range<DockingSplitter * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z PROC ; std::_Debug_pointer<DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ENDP ; std::_Debug_pointer<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WI@Z PROC ; std::_Debug_range<DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAPAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVDockingCont@@@Z ; std::_Iter_cat<DockingCont * *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DockingCont * *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WI@Z ENDP ; std::_Debug_range<DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAUHWND__@@@std@@YAXPAPAUHWND__@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUHWND__@@@std@@YAXPAPAUHWND__@@PB_WI@Z PROC ; std::_Debug_pointer<HWND__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@PAUHWND__@@@std@@YAXPAPAUHWND__@@PB_WI@Z ENDP ; std::_Debug_pointer<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WI@Z PROC ; std::_Debug_range<HWND__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAPAUHWND__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHWND__@@@Z ; std::_Iter_cat<HWND__ * *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<HWND__ * *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WI@Z ENDP ; std::_Debug_range<HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAUtTbData@@@std@@YAXPBQAUtTbData@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUtTbData@@@std@@YAXPBQAUtTbData@@PB_WI@Z PROC ; std::_Debug_pointer<tTbData *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@PAUtTbData@@@std@@YAXPBQAUtTbData@@PB_WI@Z ENDP ; std::_Debug_pointer<tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@PAUtTbData@@@std@@YAXPAPAUtTbData@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAUtTbData@@@std@@YAXPAPAUtTbData@@PB_WI@Z PROC ; std::_Debug_pointer<tTbData *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 555
	pop	ebp
	ret	0
??$_Debug_pointer@PAUtTbData@@@std@@YAXPAPAUtTbData@@PB_WI@Z ENDP ; std::_Debug_pointer<tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_range@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WI@Z PROC ; std::_Debug_range<tTbData * const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PBQAUtTbData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAUtTbData@@@Z ; std::_Iter_cat<tTbData * const *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<tTbData * const *>
	add	esp, 20					; 00000014H
; Line 585
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WI@Z ENDP ; std::_Debug_range<tTbData * const *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAVDockingSplitter@@PAV1@PAV1@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVDockingSplitter@@PAV1@PAV1@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DockingSplitter *,DockingSplitter *,DockingSplitter *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 470
	push	470					; 000001d6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAPAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@0PB_WI@Z ; std::_Debug_range<DockingSplitter * *>
	add	esp, 16					; 00000010H
; Line 471
	push	471					; 000001d7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVDockingSplitter@@@std@@YAXPAPAVDockingSplitter@@PB_WI@Z ; std::_Debug_pointer<DockingSplitter *>
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 474
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 475
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAVDockingSplitter@@PAV1@PAV1@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DockingSplitter *,DockingSplitter *,DockingSplitter *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z PROC ; std::_Val_type<DockingSplitter * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ENDP ; std::_Val_type<DockingSplitter * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAVDockingCont@@PAV1@PAV1@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVDockingCont@@PAV1@PAV1@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DockingCont *,DockingCont *,DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 470
	push	470					; 000001d6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAPAVDockingCont@@@std@@YAXPAPAVDockingCont@@0PB_WI@Z ; std::_Debug_range<DockingCont * *>
	add	esp, 16					; 00000010H
; Line 471
	push	471					; 000001d7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z ; std::_Debug_pointer<DockingCont *>
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 474
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 475
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAVDockingCont@@PAV1@PAV1@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DockingCont *,DockingCont *,DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z PROC ; std::_Val_type<DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ENDP ; std::_Val_type<DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAUHWND__@@PAU1@PAU1@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUHWND__@@PAU1@PAU1@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<HWND__ *,HWND__ *,HWND__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 470
	push	470					; 000001d6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAPAUHWND__@@@std@@YAXPAPAUHWND__@@0PB_WI@Z ; std::_Debug_range<HWND__ * *>
	add	esp, 16					; 00000010H
; Line 471
	push	471					; 000001d7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PAUHWND__@@@std@@YAXPAPAUHWND__@@PB_WI@Z ; std::_Debug_pointer<HWND__ *>
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 474
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 475
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUHWND__@@PAU1@PAU1@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<HWND__ *,HWND__ *,HWND__ *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z PROC ; std::_Val_type<HWND__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ENDP ; std::_Val_type<HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@QAUtTbData@@PAU1@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@QAUtTbData@@PAU1@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<tTbData * const,tTbData *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 401
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 402
	push	402					; 00000192H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PBQAUtTbData@@@std@@YAXPBQAUtTbData@@0PB_WI@Z ; std::_Debug_range<tTbData * const *>
	add	esp, 16					; 00000010H
; Line 403
	push	403					; 00000193H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@PAUtTbData@@@std@@YAXPAPAUtTbData@@PB_WI@Z ; std::_Debug_pointer<tTbData *>
	add	esp, 12					; 0000000cH
; Line 404
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 406
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 407
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@QAUtTbData@@PAU1@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<tTbData * const,tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAPAVDockingSplitter@@PAPAV1@@std@@YAAAPAPAVDockingSplitter@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVDockingSplitter@@PAPAV1@@std@@YAAAPAPAVDockingSplitter@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<DockingSplitter * *,DockingSplitter * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAPAVDockingSplitter@@PAPAV1@@std@@YAAAPAPAVDockingSplitter@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<DockingSplitter * *,DockingSplitter * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z PROC ; std::_Uninit_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVDockingSplitter@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingSplitter@@0@Z ; std::_Ptr_cat<DockingSplitter *,DockingSplitter *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ; std::_Val_type<DockingSplitter * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAVDockingSplitter@@PAV1@PAV1@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DockingSplitter *,DockingSplitter *,DockingSplitter *>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ENDP ; std::_Uninit_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z PROC ; std::_Unchecked<DockingSplitter * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ENDP ; std::_Unchecked<DockingSplitter * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<DockingCont * *,DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<DockingCont * *,DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z PROC ; std::_Uninit_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z ; std::_Ptr_cat<DockingCont *,DockingCont *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Val_type<DockingCont * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAVDockingCont@@PAV1@PAV1@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DockingCont *,DockingCont *,DockingCont *>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ENDP ; std::_Uninit_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z PROC ; std::_Unchecked<DockingCont * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ENDP ; std::_Unchecked<DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAPAUHWND__@@PAPAU1@@std@@YAAAPAPAUHWND__@@AAPAPAU1@PAPAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAUHWND__@@PAPAU1@@std@@YAAAPAPAUHWND__@@AAPAPAU1@PAPAU1@@Z PROC ; std::_Rechecked<HWND__ * *,HWND__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAPAUHWND__@@PAPAU1@@std@@YAAAPAPAUHWND__@@AAPAPAU1@PAPAU1@@Z ENDP ; std::_Rechecked<HWND__ * *,HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z PROC ; std::_Uninit_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAUHWND__@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUHWND__@@0@Z ; std::_Ptr_cat<HWND__ *,HWND__ *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ; std::_Val_type<HWND__ * *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUHWND__@@PAU1@PAU1@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<HWND__ *,HWND__ *,HWND__ *>
	add	esp, 24					; 00000018H
; Line 485
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ENDP ; std::_Uninit_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z PROC ; std::_Unchecked<HWND__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ENDP ; std::_Unchecked<HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z PROC ; std::allocator<DockingSplitter *>::construct<DockingSplitter *,DockingSplitter * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAVDockingSplitter@@@std@@YAAAPAVDockingSplitter@@AAPAV1@@Z ; std::forward<DockingSplitter * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z ENDP ; std::allocator<DockingSplitter *>::construct<DockingSplitter *,DockingSplitter * &>
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z PROC ; std::allocator<DockingCont *>::construct<DockingCont *,DockingCont * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAVDockingCont@@@std@@YAAAPAVDockingCont@@AAPAV1@@Z ; std::forward<DockingCont * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z ENDP ; std::allocator<DockingCont *>::construct<DockingCont *,DockingCont * &>
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z PROC ; std::allocator<HWND__ *>::construct<HWND__ *,HWND__ * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ; std::forward<HWND__ * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ENDP ; std::allocator<HWND__ *>::construct<HWND__ *,HWND__ * &>
; Function compile flags: /Odtp
;	COMDAT ??$_Rechecked@PAPAUtTbData@@PAPAU1@@std@@YAAAPAPAUtTbData@@AAPAPAU1@PAPAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAUtTbData@@PAPAU1@@std@@YAAAPAPAUtTbData@@AAPAPAU1@PAPAU1@@Z PROC ; std::_Rechecked<tTbData * *,tTbData * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAPAUtTbData@@PAPAU1@@std@@YAAAPAPAUtTbData@@AAPAPAU1@PAPAU1@@Z ENDP ; std::_Rechecked<tTbData * *,tTbData * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_copy@PBQAUtTbData@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PBQAUtTbData@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z PROC ; std::_Uninit_copy<tTbData * const *,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 414
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 416
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAUtTbData@@PAPAU2@@Z ; std::_Ptr_cat<tTbData *,tTbData *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@QAUtTbData@@PAU1@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tTbData * const,tTbData *>
	add	esp, 20					; 00000014H
; Line 417
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PBQAUtTbData@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ENDP ; std::_Uninit_copy<tTbData * const *,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@PAPAUtTbData@@@std@@YAPAPAUtTbData@@PAPAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAUtTbData@@@std@@YAPAPAUtTbData@@PAPAU1@@Z PROC ; std::_Unchecked<tTbData * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAPAUtTbData@@@std@@YAPAPAUtTbData@@PAPAU1@@Z ENDP ; std::_Unchecked<tTbData * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<tTbData *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 264
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 265
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QBEPBQAUtTbData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Unchecked
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 266
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Iter$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<tTbData *> > >
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ; std::_Unchecked<DockingSplitter * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ; std::_Unchecked<DockingSplitter * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@PAPAV1@@Z ; std::_Unchecked<DockingSplitter * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ; std::_Uninit_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPAVDockingSplitter@@PAPAV1@@std@@YAAAPAPAVDockingSplitter@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<DockingSplitter * *,DockingSplitter * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAVDockingSplitter@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingSplitter@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVDockingSplitter@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingSplitter@@0@Z PROC ; std::_Ptr_cat<DockingSplitter *,DockingSplitter *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVDockingSplitter@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingSplitter@@0@Z ENDP ; std::_Ptr_cat<DockingSplitter *,DockingSplitter *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Unchecked<DockingCont * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Unchecked<DockingCont * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z ; std::_Unchecked<DockingCont * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninit_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<DockingCont * *,DockingCont * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z PROC ; std::_Ptr_cat<DockingCont *,DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z ENDP ; std::_Ptr_cat<DockingCont *,DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z PROC ; std::_Uninitialized_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ; std::_Unchecked<HWND__ * *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ; std::_Unchecked<HWND__ * *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAPAUHWND__@@@std@@YAPAPAUHWND__@@PAPAU1@@Z ; std::_Unchecked<HWND__ * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ; std::_Uninit_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAPAUHWND__@@PAPAU1@@std@@YAAAPAPAUHWND__@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<HWND__ * *,HWND__ * *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAUHWND__@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUHWND__@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUHWND__@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUHWND__@@0@Z PROC ; std::_Ptr_cat<HWND__ *,HWND__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAUHWND__@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUHWND__@@0@Z ENDP ; std::_Ptr_cat<HWND__ *,HWND__ *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtTbData@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtTbData@@0@Z PROC ; std::_Ptr_cat<tTbData *,tTbData *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtTbData@@0@Z ENDP ; std::_Ptr_cat<tTbData *,tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAUtTbData@@PAPAU2@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAUtTbData@@PAPAU2@@Z PROC ; std::_Ptr_cat<tTbData *,tTbData *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 453
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 455
	mov	al, BYTE PTR __Cat$[ebp]
; Line 456
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAUtTbData@@PAPAU2@@Z ENDP ; std::_Ptr_cat<tTbData *,tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingSplitter@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVDockingSplitter@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAVDockingSplitter@@@std@@YAABQAVDockingSplitter@@ABQAV1@@Z ; std::forward<DockingSplitter * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@ABQAV3@@Z ; std::allocator<DockingSplitter *>::construct
; Line 724
	pop	ebp
	ret	0
??$construct@PAVDockingSplitter@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABQAVDockingSplitter@@@std@@YAABQAVDockingSplitter@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVDockingSplitter@@@std@@YAABQAVDockingSplitter@@ABQAV1@@Z PROC ; std::forward<DockingSplitter * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABQAVDockingSplitter@@@std@@YAABQAVDockingSplitter@@ABQAV1@@Z ENDP ; std::forward<DockingSplitter * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@AAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@AAPAV3@@Z PROC ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAVDockingSplitter@@@std@@YAAAPAVDockingSplitter@@AAPAV1@@Z ; std::forward<DockingSplitter * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z ; std::allocator<DockingSplitter *>::construct<DockingSplitter *,DockingSplitter * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@AAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAVDockingSplitter@@@std@@YAAAPAVDockingSplitter@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVDockingSplitter@@@std@@YAAAPAVDockingSplitter@@AAPAV1@@Z PROC ; std::forward<DockingSplitter * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAVDockingSplitter@@@std@@YAAAPAVDockingSplitter@@AAPAV1@@Z ENDP ; std::forward<DockingSplitter * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingCont@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVDockingCont@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAVDockingCont@@@std@@YAABQAVDockingCont@@ABQAV1@@Z ; std::forward<DockingCont * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@ABQAV3@@Z ; std::allocator<DockingCont *>::construct
; Line 724
	pop	ebp
	ret	0
??$construct@PAVDockingCont@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABQAVDockingCont@@@std@@YAABQAVDockingCont@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVDockingCont@@@std@@YAABQAVDockingCont@@ABQAV1@@Z PROC ; std::forward<DockingCont * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABQAVDockingCont@@@std@@YAABQAVDockingCont@@ABQAV1@@Z ENDP ; std::forward<DockingCont * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingCont@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@AAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVDockingCont@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@AAPAV3@@Z PROC ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAVDockingCont@@@std@@YAAAPAVDockingCont@@AAPAV1@@Z ; std::forward<DockingCont * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAVDockingCont@@AAPAV1@@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z ; std::allocator<DockingCont *>::construct<DockingCont *,DockingCont * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PAVDockingCont@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@AAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAVDockingCont@@@std@@YAAAPAVDockingCont@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVDockingCont@@@std@@YAAAPAVDockingCont@@AAPAV1@@Z PROC ; std::forward<DockingCont * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAVDockingCont@@@std@@YAAAPAVDockingCont@@AAPAV1@@Z ENDP ; std::forward<DockingCont * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAUHWND__@@ABQAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@ABQAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUHWND__@@ABQAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@ABQAU3@@Z PROC ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z ; std::forward<HWND__ * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@ABQAU3@@Z ; std::allocator<HWND__ *>::construct
; Line 724
	pop	ebp
	ret	0
??$construct@PAUHWND__@@ABQAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@ABQAU3@@Z ENDP ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z PROC ; std::forward<HWND__ * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z ENDP ; std::forward<HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@AAPAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@AAPAU3@@Z PROC ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ; std::forward<HWND__ * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAUHWND__@@AAPAU1@@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::allocator<HWND__ *>::construct<HWND__ *,HWND__ * &>
; Line 724
	pop	ebp
	ret	0
??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@AAPAU3@@Z ENDP ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z PROC ; std::forward<HWND__ * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ENDP ; std::forward<HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z
_TEXT	SEGMENT
tv147 = -52						; size = 4
$T2 = -48						; size = 4
tv143 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv67 = -32						; size = 4
tv148 = -28						; size = 4
tv153 = -24						; size = 4
tv144 = -20						; size = 4
tv151 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Dest$ = 32						; size = 4
__Al$ = 36						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 427
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAPAUtTbData@@@std@@YAPAPAUtTbData@@PAPAU1@@Z ; std::_Unchecked<tTbData * *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv151[ebp], eax
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<tTbData *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], eax
	mov	ecx, DWORD PTR tv144[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv153[ebp], eax
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR tv147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@YAPBQAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<tTbData *> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	push	ecx
	call	??$_Uninit_copy@PBQAUtTbData@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAPAPAUtTbData@@PBQAU1@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ; std::_Uninit_copy<tTbData * const *,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR tv67[ebp]
	push	edx
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Rechecked@PAPAUtTbData@@PAPAU1@@std@@YAAAPAPAUtTbData@@AAPAPAU1@PAPAU1@@Z ; std::_Rechecked<tTbData * *,tTbData * *>
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 428
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 160
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@PAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@IPAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@IPAPAV1@@Z PROC ; std::_Allocate<DockingSplitter *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@IPAPAV1@@Z ENDP ; std::_Allocate<DockingSplitter *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z PROC ; std::_Allocate<DockingCont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z ENDP ; std::_Allocate<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@PAUHWND__@@@std@@YAPAPAUHWND__@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUHWND__@@@std@@YAPAPAUHWND__@@IPAPAU1@@Z PROC ; std::_Allocate<HWND__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAUHWND__@@@std@@YAPAPAUHWND__@@IPAPAU1@@Z ENDP ; std::_Allocate<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@PAUtTbData@@@std@@YAPAPAUtTbData@@IPAPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUtTbData@@@std@@YAPAPAUtTbData@@IPAPAU1@@Z PROC ; std::_Allocate<tTbData *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAUtTbData@@@std@@YAPAPAUtTbData@@IPAPAU1@@Z ENDP ; std::_Allocate<tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAPAVDockingSplitter@@@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEPAPAVDockingSplitter@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVDockingSplitter@@@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEPAPAVDockingSplitter@@PAPAV2@00@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Umove<DockingSplitter * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAPAVDockingSplitter@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAPAPAVDockingSplitter@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ; std::_Uninitialized_move<DockingSplitter * *,DockingSplitter * *,std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVDockingSplitter@@@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEPAPAVDockingSplitter@@PAPAV2@00@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Umove<DockingSplitter * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVDockingSplitter@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingSplitter@@0@Z ; std::_Ptr_cat<DockingSplitter *,DockingSplitter *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAPAVDockingCont@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVDockingCont@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@PAPAV2@00@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Umove<DockingCont * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAPAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Uninitialized_move<DockingCont * *,DockingCont * *,std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVDockingCont@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@PAPAV2@00@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Umove<DockingCont * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z ; std::_Ptr_cat<DockingCont *,DockingCont *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAPAUHWND__@@@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEPAPAUHWND__@@PAPAU2@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUHWND__@@@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEPAPAUHWND__@@PAPAU2@00@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Umove<HWND__ * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAPAUHWND__@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAPAPAUHWND__@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ; std::_Uninitialized_move<HWND__ * *,HWND__ * *,std::_Wrap_alloc<std::allocator<HWND__ *> > >
	add	esp, 16					; 00000010H
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAUHWND__@@@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEPAPAUHWND__@@PAPAU2@00@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Umove<HWND__ * *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAUHWND__@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUHWND__@@0@Z ; std::_Ptr_cat<HWND__ *,HWND__ *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAUtTbData@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtTbData@@0@Z ; std::_Ptr_cat<tTbData *,tTbData *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >
	add	esp, 16					; 00000010H
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingSplitter@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVDockingSplitter@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAVDockingSplitter@@@std@@YAABQAVDockingSplitter@@ABQAV1@@Z ; std::forward<DockingSplitter * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAVDockingSplitter@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@ABQAV3@@Z ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAVDockingSplitter@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingSplitter@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVDockingSplitter@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAVDockingSplitter@@@std@@YAAAPAVDockingSplitter@@AAPAV1@@Z ; std::forward<DockingSplitter * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAVDockingSplitter@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAXAAV?$allocator@PAVDockingSplitter@@@1@PAPAVDockingSplitter@@AAPAV3@@Z ; std::allocator_traits<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAVDockingSplitter@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@QAVDockingSplitter@@@std@@YAPBQAVDockingSplitter@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVDockingSplitter@@@std@@YAPBQAVDockingSplitter@@ABQAV1@@Z PROC ; std::addressof<DockingSplitter * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@QAVDockingSplitter@@@std@@YAPBQAVDockingSplitter@@ABQAV1@@Z ENDP ; std::addressof<DockingSplitter * const>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingCont@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVDockingCont@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAVDockingCont@@@std@@YAABQAVDockingCont@@ABQAV1@@Z ; std::forward<DockingCont * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAVDockingCont@@ABQAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@ABQAV3@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAVDockingCont@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAVDockingCont@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVDockingCont@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAVDockingCont@@@std@@YAAAPAVDockingCont@@AAPAV1@@Z ; std::forward<DockingCont * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAVDockingCont@@AAPAV1@@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAXAAV?$allocator@PAVDockingCont@@@1@PAPAVDockingCont@@AAPAV3@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAVDockingCont@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@QAVDockingCont@@@std@@YAPBQAVDockingCont@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVDockingCont@@@std@@YAPBQAVDockingCont@@ABQAV1@@Z PROC ; std::addressof<DockingCont * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@QAVDockingCont@@@std@@YAPBQAVDockingCont@@ABQAV1@@Z ENDP ; std::addressof<DockingCont * const>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAUHWND__@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@ABQAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUHWND__@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@ABQAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABQAUHWND__@@@std@@YAABQAUHWND__@@ABQAU1@@Z ; std::forward<HWND__ * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAUHWND__@@ABQAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@ABQAU3@@Z ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAUHWND__@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@ABQAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAUHWND__@@@std@@YAAAPAUHWND__@@AAPAU1@@Z ; std::forward<HWND__ * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAUHWND__@@AAPAU1@@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAXAAV?$allocator@PAUHWND__@@@1@PAPAUHWND__@@AAPAU3@@Z ; std::allocator_traits<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>
	add	esp, 12					; 0000000cH
; Line 873
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@QAUHWND__@@@std@@YAPBQAUHWND__@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAUHWND__@@@std@@YAPBQAUHWND__@@ABQAU1@@Z PROC ; std::addressof<HWND__ * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@QAUHWND__@@@std@@YAPBQAUHWND__@@ABQAU1@@Z ENDP ; std::addressof<HWND__ * const>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z
_TEXT	SEGMENT
tv142 = -52						; size = 4
$T2 = -48						; size = 4
tv139 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv71 = -32						; size = 4
tv146 = -28						; size = 4
tv145 = -24						; size = 4
_this$ = -20						; size = 4
__Alval$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Ptr$ = 32						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1636
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1638
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
; Line 1640
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv139[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv146[ebp], eax
	mov	eax, DWORD PTR tv146[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@PAPAUtTbData@@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@@std@@YAPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@0@0PAPAU1@AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >,tTbData * *,std::_Wrap_alloc<std::allocator<tTbData *> > >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 1641
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z$3:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
; Function compile flags: /Odtp
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QBEPBQAUtTbData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QBEPBQAUtTbData@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Unchecked, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 60
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QBEPBQAUtTbData@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAUtTbData@@HPBQAU3@ABQAU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,tTbData *,int,tTbData * const *,tTbData * const &,std::_Iterator_base12>
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pDockingManager$1 = -20				; size = 4
_vcontainer$2 = -16					; size = 4
_pCwp$3 = -12						; size = 4
_i$4 = -8						; size = 4
_i$5 = -4						; size = 4
_nCode$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?FocusWndProc@@YGJHIJ@Z PROC				; FocusWndProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 49
	cmp	DWORD PTR _nCode$[ebp], 0
	jne	$LN11@FocusWndPr
	cmp	DWORD PTR _hWndServer, 0
	je	$LN11@FocusWndPr
; Line 51
	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hWndServer
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _pDockingManager$1[ebp], eax
; Line 52
	cmp	DWORD PTR _pDockingManager$1[ebp], 0
	je	$LN11@FocusWndPr
; Line 54
	mov	ecx, DWORD PTR _pDockingManager$1[ebp]
	call	?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ; DockingManager::getContainerInfo
	mov	DWORD PTR _vcontainer$2[ebp], eax
; Line 55
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _pCwp$3[ebp], ecx
; Line 56
	mov	edx, DWORD PTR _pCwp$3[ebp]
	cmp	DWORD PTR [edx+8], 8
	jne	SHORT $LN9@FocusWndPr
; Line 58
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN8@FocusWndPr
$LN7@FocusWndPr:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN8@FocusWndPr:
	cmp	DWORD PTR _i$4[ebp], 4
	jge	SHORT $LN6@FocusWndPr
; Line 60
	push	0
	mov	ecx, DWORD PTR _i$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vcontainer$2[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?SetActive@DockingCont@@QAEXH@Z		; DockingCont::SetActive
; Line 61
	jmp	SHORT $LN7@FocusWndPr
$LN6@FocusWndPr:
; Line 63
	jmp	SHORT $LN11@FocusWndPr
$LN9@FocusWndPr:
	mov	edx, DWORD PTR _pCwp$3[ebp]
	cmp	DWORD PTR [edx+8], 7
	jne	SHORT $LN11@FocusWndPr
; Line 65
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN3@FocusWndPr
$LN2@FocusWndPr:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN3@FocusWndPr:
	cmp	DWORD PTR _i$5[ebp], 4
	jge	SHORT $LN11@FocusWndPr
; Line 67
	mov	ecx, DWORD PTR _pCwp$3[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _i$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _vcontainer$2[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__IsChild@8
	push	eax
	mov	ecx, DWORD PTR _i$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vcontainer$2[ebp]
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?SetActive@DockingCont@@QAEXH@Z		; DockingCont::SetActive
; Line 68
	jmp	SHORT $LN2@FocusWndPr
$LN11@FocusWndPr:
; Line 72
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _gWinCallHook
	push	edx
	call	DWORD PTR __imp__CallNextHookEx@16
; Line 73
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?FocusWndProc@@YGJHIJ@Z ENDP				; FocusWndProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getInstance@NppParameters@@SAPAV1@XZ
_TEXT	SEGMENT
?getInstance@NppParameters@@SAPAV1@XZ PROC		; NppParameters::getInstance, COMDAT
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\parameters.h
; Line 1155
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?_pSelf@NppParameters@@0PAV1@A ; NppParameters::_pSelf
	pop	ebp
	ret	0
?getInstance@NppParameters@@SAPAV1@XZ ENDP		; NppParameters::getInstance
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?scaleY@DPIManager@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?scaleY@DPIManager@@QAEHH@Z PROC			; DPIManager::scaleY, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\dpimanager.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	96					; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	DWORD PTR __imp__MulDiv@12
	mov	esp, ebp
	pop	ebp
	ret	4
?scaleY@DPIManager@@QAEHH@Z ENDP			; DPIManager::scaleY
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?init@Gripper@@QAEXPAUHINSTANCE__@@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hInst$ = 8						; size = 4
_hParent$ = 12						; size = 4
?init@Gripper@@QAEXPAUHINSTANCE__@@PAUHWND__@@@Z PROC	; Gripper::init, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\gripper.h
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hInst$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 69
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _hParent$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 70
	mov	esp, ebp
	pop	ebp
	ret	8
?init@Gripper@@QAEXPAUHINSTANCE__@@PAUHWND__@@@Z ENDP	; Gripper::init
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GDockingSplitter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDockingSplitter@@UAEPAXI@Z PROC			; DockingSplitter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DockingSplitter@@UAE@XZ		; DockingSplitter::~DockingSplitter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDockingSplitter@@UAEPAXI@Z ENDP			; DockingSplitter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?destroy@DockingSplitter@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?destroy@DockingSplitter@@UAEXXZ PROC			; DockingSplitter::destroy, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingsplitter.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy@DockingSplitter@@UAEXXZ ENDP			; DockingSplitter::destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1DockingSplitter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DockingSplitter@@UAE@XZ PROC				; DockingSplitter::~DockingSplitter, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingsplitter.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DockingSplitter@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DockingSplitter@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@UAE@XZ			; Window::~Window
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DockingSplitter@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__ehhandler$??1DockingSplitter@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DockingSplitter@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DockingSplitter@@UAE@XZ ENDP				; DockingSplitter::~DockingSplitter
; Function compile flags: /Odtp
;	COMDAT ??0DockingSplitter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0DockingSplitter@@QAE@XZ PROC				; DockingSplitter::DockingSplitter, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingsplitter.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DockingSplitter@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Window@@QAE@XZ			; Window::Window
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DockingSplitter@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DockingSplitter@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__ehhandler$??0DockingSplitter@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DockingSplitter@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DockingSplitter@@QAE@XZ ENDP				; DockingSplitter::DockingSplitter
; Function compile flags: /Odtp
;	COMDAT ??_GDockingManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDockingManager@@UAEPAXI@Z PROC			; DockingManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DockingManager@@UAE@XZ		; DockingManager::~DockingManager
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDockingManager@@UAEPAXI@Z ENDP			; DockingManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXXZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXXZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXXZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXPAPAVDockingSplitter@@0@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@I@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXXZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEII@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEPAPAVDockingSplitter@@I@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAVDockingSplitter@@@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEPAPAVDockingSplitter@@PAPAV2@00@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Umove<DockingSplitter * *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@I@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXPAPAVDockingSplitter@@0@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@I@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBE_NPBQAVDockingSplitter@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBE_NPBQAVDockingSplitter@@@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBE_NPBQAVDockingSplitter@@@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEII@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEII@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXPAPAVDockingSplitter@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXPAPAVDockingSplitter@@0@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@YAXPAPAVDockingSplitter@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingSplitter *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXPAPAVDockingSplitter@@0@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXABQAVDockingSplitter@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXABQAVDockingSplitter@@@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAVDockingSplitter@@@std@@YAPBQAVDockingSplitter@@ABQAV1@@Z ; std::addressof<DockingSplitter * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBE_NPBQAVDockingSplitter@@@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@QAVDockingSplitter@@@std@@YAPBQAVDockingSplitter@@ABQAV1@@Z ; std::addressof<DockingSplitter * const>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Orphan_range
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAVDockingSplitter@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * &>
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXI@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IBEXPAPAVDockingSplitter@@0@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Orphan_range
; Line 1260
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAVDockingSplitter@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::construct<DockingSplitter *,DockingSplitter * const &>
; Line 1261
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXABQAVDockingSplitter@@@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MC@HLIHCBPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAS?$AAp?$AAl?$AAi?$AAt?$AAt?$AAe@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::~vector<DockingSplitter *,std::allocator<DockingSplitter *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@IAEXXZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
__ehhandler$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::~vector<DockingSplitter *,std::allocator<DockingSplitter *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ PROC ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::vector<DockingSplitter *,std::allocator<DockingSplitter *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@PAVDockingSplitter@@@std@@QAE@XZ ; std::allocator<DockingSplitter *>::allocator<DockingSplitter *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 681
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
__ehhandler$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ENDP ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::vector<DockingSplitter *,std::allocator<DockingSplitter *> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::_Wrap_alloc<std::allocator<DockingSplitter *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingSplitter *> >::_Vector_val<std::_Simple_types<DockingSplitter *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingSplitter@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingSplitter *,std::allocator<DockingSplitter *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DockingSplitter *> >::~_Vector_val<std::_Simple_types<DockingSplitter *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DockingSplitter *> >::~_Vector_val<std::_Simple_types<DockingSplitter *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DockingSplitter *> >::_Vector_val<std::_Simple_types<DockingSplitter *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@PAVDockingSplitter@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DockingSplitter *> >::_Vector_val<std::_Simple_types<DockingSplitter *> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAIABV?$allocator@PAVDockingSplitter@@@2@@Z ; std::allocator_traits<std::allocator<DockingSplitter *> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@I@Z ; std::allocator<DockingSplitter *>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXPAPAVDockingSplitter@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEPAPAVDockingSplitter@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEPAPAVDockingSplitter@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAVDockingSplitter@@@std@@QAEPAPAVDockingSplitter@@I@Z ; std::allocator<DockingSplitter *>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEPAPAVDockingSplitter@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::_Wrap_alloc<std::allocator<DockingSplitter *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAVDockingSplitter@@@std@@QAE@XZ ; std::allocator<DockingSplitter *>::allocator<DockingSplitter *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DockingSplitter *> >::_Wrap_alloc<std::allocator<DockingSplitter *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAIABV?$allocator@PAVDockingSplitter@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAIABV?$allocator@PAVDockingSplitter@@@2@@Z PROC ; std::allocator_traits<std::allocator<DockingSplitter *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAVDockingSplitter@@@std@@QBEIXZ ; std::allocator<DockingSplitter *>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAVDockingSplitter@@@std@@@std@@SAIABV?$allocator@PAVDockingSplitter@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DockingSplitter *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@PAVDockingSplitter@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVDockingSplitter@@@std@@QBEIXZ PROC ; std::allocator<DockingSplitter *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVDockingSplitter@@@std@@QBEIXZ ENDP ; std::allocator<DockingSplitter *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv68 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@ABQAV3@@Z PROC ; std::allocator<DockingSplitter *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@ABQAV3@@Z ENDP ; std::allocator<DockingSplitter *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAVDockingSplitter@@@std@@QAEPAPAVDockingSplitter@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVDockingSplitter@@@std@@QAEPAPAVDockingSplitter@@I@Z PROC ; std::allocator<DockingSplitter *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVDockingSplitter@@@std@@YAPAPAVDockingSplitter@@IPAPAV1@@Z ; std::_Allocate<DockingSplitter *>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVDockingSplitter@@@std@@QAEPAPAVDockingSplitter@@I@Z ENDP ; std::allocator<DockingSplitter *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@I@Z PROC ; std::allocator<DockingSplitter *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVDockingSplitter@@@std@@QAEXPAPAVDockingSplitter@@I@Z ENDP ; std::allocator<DockingSplitter *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAVDockingSplitter@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVDockingSplitter@@@std@@QAE@XZ PROC	; std::allocator<DockingSplitter *>::allocator<DockingSplitter *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVDockingSplitter@@@std@@QAE@XZ ENDP	; std::allocator<DockingSplitter *>::allocator<DockingSplitter *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEII@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAVDockingCont@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@PAPAV2@00@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Umove<DockingCont * *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBE_NPBQAVDockingCont@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBE_NPBQAVDockingCont@@@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBE_NPBQAVDockingCont@@@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEII@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEII@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DockingCont *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAVDockingCont@@@std@@YAPBQAVDockingCont@@ABQAV1@@Z ; std::addressof<DockingCont * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBE_NPBQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@QAVDockingCont@@@std@@YAPBQAVDockingCont@@ABQAV1@@Z ; std::addressof<DockingCont * const>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Orphan_range
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAVDockingCont@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * &>
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXI@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXPAPAVDockingCont@@0@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Orphan_range
; Line 1260
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAVDockingCont@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<DockingCont *> >::construct<DockingCont *,DockingCont * const &>
; Line 1261
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
__ehhandler$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@PAVDockingCont@@@std@@QAE@XZ ; std::allocator<DockingCont *>::allocator<DockingCont *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 681
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
__ehhandler$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::~_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >::_Vector_alloc<0,std::_Vec_base_types<DockingCont *,std::allocator<DockingCont *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DockingCont *> >::~_Vector_val<std::_Simple_types<DockingCont *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DockingCont *> >::~_Vector_val<std::_Simple_types<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DockingCont *> >::_Vector_val<std::_Simple_types<DockingCont *> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z ; std::allocator_traits<std::allocator<DockingCont *> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z ; std::allocator<DockingCont *>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAVDockingCont@@@std@@QAE@XZ ; std::allocator<DockingCont *>::allocator<DockingCont *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DockingCont *> >::_Wrap_alloc<std::allocator<DockingCont *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z PROC ; std::allocator_traits<std::allocator<DockingCont *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ ; std::allocator<DockingCont *>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DockingCont *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ PROC	; std::allocator<DockingCont *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ ENDP	; std::allocator<DockingCont *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv68 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@ABQAV3@@Z PROC ; std::allocator<DockingCont *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@ABQAV3@@Z ENDP ; std::allocator<DockingCont *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z PROC ; std::allocator<DockingCont *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z ; std::_Allocate<DockingCont *>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z ENDP ; std::allocator<DockingCont *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z PROC ; std::allocator<DockingCont *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z ENDP ; std::allocator<DockingCont *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAVDockingCont@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVDockingCont@@@std@@QAE@XZ PROC	; std::allocator<DockingCont *>::allocator<DockingCont *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVDockingCont@@@std@@QAE@XZ ENDP	; std::allocator<DockingCont *>::allocator<DockingCont *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Orphan_range
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXXZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXXZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXXZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXPAPAUHWND__@@0@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@I@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXXZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEII@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -32						; size = 4
__Ptr$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAPAUHWND__@@I@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAUHWND__@@@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEPAPAUHWND__@@PAPAU2@00@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Umove<HWND__ * *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@I@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXPAPAUHWND__@@0@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@I@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reallocate
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBE_NPBQAUHWND__@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBE_NPBQAUHWND__@@@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBE_NPBQAUHWND__@@@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow_to@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEII@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEII@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXPAPAUHWND__@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXPAPAUHWND__@@0@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@@std@@YAXPAPAUHWND__@@0AAU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<HWND__ *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXPAPAUHWND__@@0@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXABQAUHWND__@@@Z
_TEXT	SEGMENT
__Idx$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXABQAUHWND__@@@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@QAUHWND__@@@std@@YAPBQAUHWND__@@ABQAU1@@Z ; std::addressof<HWND__ * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBE_NPBQAUHWND__@@@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@QAUHWND__@@@std@@YAPBQAUHWND__@@ABQAU1@@Z ; std::addressof<HWND__ * const>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
	mov	DWORD PTR __Idx$1[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Orphan_range
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Idx$1[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAUHWND__@@AAPAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@AAPAU2@@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * &>
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXI@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IBEXPAPAUHWND__@@0@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Orphan_range
; Line 1260
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
	mov	ecx, eax
	call	??$construct@PAUHWND__@@ABQAU1@@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@ABQAU2@@Z ; std::_Wrap_alloc<std::allocator<HWND__ *> >::construct<HWND__ *,HWND__ * const &>
; Line 1261
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXABQAUHWND__@@@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@I@Z PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1KC@CCKJJADN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAH?$AAW?$AAN?$AAD?$AA_?$AA_?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@I@Z ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<HWND__ *> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unused_capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::~vector<HWND__ *,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@IAEXXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
__ehhandler$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::~vector<HWND__ *,std::allocator<HWND__ *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::vector<HWND__ *,std::allocator<HWND__ *> >::vector<HWND__ *,std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@PAUHWND__@@@std@@QAE@XZ	; std::allocator<HWND__ *>::allocator<HWND__ *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 681
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
__ehhandler$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::vector<HWND__ *,std::allocator<HWND__ *> >::vector<HWND__ *,std::allocator<HWND__ *> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<HWND__ *> >::_Wrap_alloc<std::allocator<HWND__ *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::~_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<HWND__ *> >::_Vector_val<std::_Simple_types<HWND__ *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUHWND__@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >::_Vector_alloc<0,std::_Vec_base_types<HWND__ *,std::allocator<HWND__ *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<HWND__ *> >::~_Vector_val<std::_Simple_types<HWND__ *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<HWND__ *> >::~_Vector_val<std::_Simple_types<HWND__ *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<HWND__ *> >::_Vector_val<std::_Simple_types<HWND__ *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<HWND__ *> >::_Vector_val<std::_Simple_types<HWND__ *> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<HWND__ *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAIABV?$allocator@PAUHWND__@@@2@@Z ; std::allocator_traits<std::allocator<HWND__ *> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<HWND__ *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@I@Z PROC ; std::_Wrap_alloc<std::allocator<HWND__ *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@I@Z ; std::allocator<HWND__ *>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEXPAPAUHWND__@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<HWND__ *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAPAUHWND__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAPAUHWND__@@I@Z PROC ; std::_Wrap_alloc<std::allocator<HWND__ *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAUHWND__@@@std@@QAEPAPAUHWND__@@I@Z ; std::allocator<HWND__ *>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAEPAPAUHWND__@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<HWND__ *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<HWND__ *> >::_Wrap_alloc<std::allocator<HWND__ *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAUHWND__@@@std@@QAE@XZ	; std::allocator<HWND__ *>::allocator<HWND__ *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<HWND__ *> >::_Wrap_alloc<std::allocator<HWND__ *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAIABV?$allocator@PAUHWND__@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAIABV?$allocator@PAUHWND__@@@2@@Z PROC ; std::allocator_traits<std::allocator<HWND__ *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAUHWND__@@@std@@QBEIXZ ; std::allocator<HWND__ *>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAUHWND__@@@std@@@std@@SAIABV?$allocator@PAUHWND__@@@2@@Z ENDP ; std::allocator_traits<std::allocator<HWND__ *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@PAUHWND__@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUHWND__@@@std@@QBEIXZ PROC	; std::allocator<HWND__ *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAUHWND__@@@std@@QBEIXZ ENDP	; std::allocator<HWND__ *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@ABQAU3@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv68 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@ABQAU3@@Z PROC ; std::allocator<HWND__ *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@ABQAU3@@Z ENDP ; std::allocator<HWND__ *>::construct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAUHWND__@@@std@@QAEPAPAUHWND__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUHWND__@@@std@@QAEPAPAUHWND__@@I@Z PROC ; std::allocator<HWND__ *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAUHWND__@@@std@@YAPAPAUHWND__@@IPAPAU1@@Z ; std::_Allocate<HWND__ *>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAUHWND__@@@std@@QAEPAPAUHWND__@@I@Z ENDP ; std::allocator<HWND__ *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@I@Z PROC ; std::allocator<HWND__ *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAUHWND__@@@std@@QAEXPAPAUHWND__@@I@Z ENDP ; std::allocator<HWND__ *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAUHWND__@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUHWND__@@@std@@QAE@XZ PROC		; std::allocator<HWND__ *>::allocator<HWND__ *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAUHWND__@@@std@@QAE@XZ ENDP		; std::allocator<HWND__ *>::allocator<HWND__ *>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_nmhdr$ = -16						; size = 12
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z PROC	; DockingManager::SendNotify
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 714
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR _nmhdr$[ebp+8], eax
; Line 717
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _nmhdr$[ebp], edx
; Line 718
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__GetDlgCtrlID@4
	mov	DWORD PTR _nmhdr$[ebp+4], eax
; Line 719
	lea	edx, DWORD PTR _nmhdr$[ebp]
	push	edx
	mov	eax, DWORD PTR _nmhdr$[ebp+4]
	push	eax
	push	78					; 0000004eH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 720
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongW@8
; Line 721
	mov	esp, ebp
	pop	ebp
	ret	8
?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ENDP	; DockingManager::SendNotify
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_vTbData$2 = -84					; size = 16
$T3 = -68						; size = 4
_len$4 = -64						; size = 4
_len$5 = -60						; size = 4
_len$6 = -56						; size = 4
$T7 = -52						; size = 4
_iRetCont$ = -48					; size = 4
tv155 = -44						; size = 4
_pArrayPos$ = -40					; size = 4
_pPrevDockList$ = -36					; size = 4
_iTb$8 = -32						; size = 4
_iCont$9 = -28						; size = 4
_iCont$10 = -24						; size = 4
_this$ = -20						; size = 4
_iCont$11 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?FindEmptyContainer@DockingManager@@AAEHXZ PROC		; DockingManager::FindEmptyContainer
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 946
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindEmptyContainer@DockingManager@@AAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 947
	mov	DWORD PTR _iRetCont$[ebp], -1
; Line 948
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	add	eax, 1
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR _pPrevDockList$[ebp], eax
; Line 949
	mov	ecx, 4
	shl	ecx, 0
	add	ecx, DWORD PTR _pPrevDockList$[ebp]
	mov	DWORD PTR _pArrayPos$[ebp], ecx
; Line 952
	mov	DWORD PTR _iCont$10[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	add	eax, 1
	mov	DWORD PTR _len$6[ebp], eax
	jmp	SHORT $LN14@FindEmptyC
$LN13@FindEmptyC:
	mov	edx, DWORD PTR _iCont$10[ebp]
	add	edx, 1
	mov	DWORD PTR _iCont$10[ebp], edx
$LN14@FindEmptyC:
	mov	eax, DWORD PTR _iCont$10[ebp]
	cmp	eax, DWORD PTR _len$6[ebp]
	jae	SHORT $LN12@FindEmptyC
; Line 954
	mov	ecx, DWORD PTR _iCont$10[ebp]
	mov	edx, DWORD PTR _pPrevDockList$[ebp]
	mov	DWORD PTR [edx+ecx*4], 0
; Line 955
	jmp	SHORT $LN13@FindEmptyC
$LN12@FindEmptyC:
; Line 958
	mov	DWORD PTR _iCont$9[ebp], 0
	jmp	SHORT $LN11@FindEmptyC
$LN10@FindEmptyC:
	mov	eax, DWORD PTR _iCont$9[ebp]
	add	eax, 1
	mov	DWORD PTR _iCont$9[ebp], eax
$LN11@FindEmptyC:
	cmp	DWORD PTR _iCont$9[ebp], 4
	jae	SHORT $LN9@FindEmptyC
; Line 960
	lea	ecx, DWORD PTR _vTbData$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _iCont$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ ; DockingCont::getDataOfAllTb
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 962
	mov	DWORD PTR _iTb$8[ebp], 0
	lea	ecx, DWORD PTR _vTbData$2[ebp]
	call	?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::size
	mov	DWORD PTR _len$5[ebp], eax
	jmp	SHORT $LN8@FindEmptyC
$LN7@FindEmptyC:
	mov	eax, DWORD PTR _iTb$8[ebp]
	add	eax, 1
	mov	DWORD PTR _iTb$8[ebp], eax
$LN8@FindEmptyC:
	mov	ecx, DWORD PTR _iTb$8[ebp]
	cmp	ecx, DWORD PTR _len$5[ebp]
	jae	SHORT $LN6@FindEmptyC
; Line 964
	mov	edx, DWORD PTR _iTb$8[ebp]
	push	edx
	lea	ecx, DWORD PTR _vTbData$2[ebp]
	call	??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _pArrayPos$[ebp]
	mov	DWORD PTR [edx+ecx*4], 1
; Line 965
	jmp	SHORT $LN7@FindEmptyC
$LN6@FindEmptyC:
; Line 966
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vTbData$2[ebp]
	call	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
	jmp	$LN10@FindEmptyC
$LN9@FindEmptyC:
; Line 969
	mov	DWORD PTR _iCont$11[ebp], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$4[ebp], eax
	jmp	SHORT $LN5@FindEmptyC
$LN4@FindEmptyC:
	mov	eax, DWORD PTR _iCont$11[ebp]
	add	eax, 1
	mov	DWORD PTR _iCont$11[ebp], eax
$LN5@FindEmptyC:
	mov	ecx, DWORD PTR _iCont$11[ebp]
	cmp	ecx, DWORD PTR _len$4[ebp]
	jae	SHORT $LN3@FindEmptyC
; Line 971
	mov	edx, DWORD PTR _iCont$11[ebp]
	mov	eax, DWORD PTR _pArrayPos$[ebp]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	SHORT $LN2@FindEmptyC
; Line 974
	mov	ecx, DWORD PTR _iCont$11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv155[ebp], edx
	mov	eax, DWORD PTR tv155[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv155[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@FindEmptyC
; Line 976
	mov	edx, DWORD PTR _iCont$11[ebp]
	mov	DWORD PTR _iRetCont$[ebp], edx
; Line 977
	jmp	SHORT $LN3@FindEmptyC
$LN2@FindEmptyC:
; Line 980
	jmp	SHORT $LN4@FindEmptyC
$LN3@FindEmptyC:
; Line 982
	mov	eax, DWORD PTR _pPrevDockList$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 985
	mov	eax, DWORD PTR _iRetCont$[ebp]
; Line 986
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindEmptyContainer@DockingManager@@AAEHXZ$0:
	lea	ecx, DWORD PTR _vTbData$2[ebp]
	jmp	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
__ehhandler$?FindEmptyContainer@DockingManager@@AAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindEmptyContainer@DockingManager@@AAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindEmptyContainer@DockingManager@@AAEHXZ ENDP		; DockingManager::FindEmptyContainer
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bRet$ = -4						; size = 4
_iCont$ = 8						; size = 4
?ContExists@DockingManager@@AAEHI@Z PROC		; DockingManager::ContExists
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 919
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 920
	mov	DWORD PTR _bRet$[ebp], 0
; Line 922
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	cmp	DWORD PTR _iCont$[ebp], eax
	jae	SHORT $LN1@ContExists
; Line 924
	mov	DWORD PTR _bRet$[ebp], 1
$LN1@ContExists:
; Line 927
	mov	eax, DWORD PTR _bRet$[ebp]
; Line 928
	mov	esp, ebp
	pop	ebp
	ret	4
?ContExists@DockingManager@@AAEHI@Z ENDP		; DockingManager::ContExists
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iContSrc$ = -12					; size = 4
_this$ = -8						; size = 4
_iContTgt$ = -4						; size = 4
_pContSrc$ = 8						; size = 4
_pContTgt$ = 12						; size = 4
_TbData$ = 16						; size = 48
?toggleTb@DockingManager@@AAEXPAVDockingCont@@0UtTbData@@@Z PROC ; DockingManager::toggleTb
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 893
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _pContSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
	mov	DWORD PTR _iContSrc$[ebp], eax
; Line 895
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
	mov	DWORD PTR _iContTgt$[ebp], eax
; Line 899
	cmp	DWORD PTR _iContSrc$[ebp], 4
	jge	SHORT $LN3@toggleTb
	cmp	DWORD PTR _iContTgt$[ebp], 4
	jge	SHORT $LN4@toggleTb
$LN3@toggleTb:
	cmp	DWORD PTR _iContSrc$[ebp], 4
	jl	SHORT $LN5@toggleTb
	cmp	DWORD PTR _iContTgt$[ebp], 4
	jge	SHORT $LN5@toggleTb
$LN4@toggleTb:
; Line 902
	mov	edx, DWORD PTR _iContSrc$[ebp]
	mov	DWORD PTR _TbData$[ebp+40], edx
$LN5@toggleTb:
; Line 906
	cmp	DWORD PTR _iContTgt$[ebp], 4
	jge	SHORT $LN2@toggleTb
; Line 907
	mov	eax, DWORD PTR _iContTgt$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	shl	ecx, 16					; 00000010H
	or	ecx, 1052				; 0000041cH
	push	ecx
	mov	edx, DWORD PTR _TbData$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ; DockingManager::SendNotify
; Line 908
	jmp	SHORT $LN1@toggleTb
$LN2@toggleTb:
; Line 909
	mov	eax, DWORD PTR _iContTgt$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	shl	ecx, 16					; 00000010H
	or	ecx, 1053				; 0000041dH
	push	ecx
	mov	edx, DWORD PTR _TbData$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ; DockingManager::SendNotify
$LN1@toggleTb:
; Line 912
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z ; DockingCont::createToolbar
; Line 915
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$[ebp]
	mov	edi, esp
	rep movsd
	mov	eax, DWORD PTR _iContSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?removeToolbar@DockingCont@@QAEXUtTbData@@@Z ; DockingCont::removeToolbar
; Line 916
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
?toggleTb@DockingManager@@AAEXPAVDockingCont@@0UtTbData@@@Z ENDP ; DockingManager::toggleTb
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?onSize@DockingManager@@AAEXXZ PROC			; DockingManager::onSize
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 401
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 402
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
; Line 403
	mov	esp, ebp
	pop	ebp
	ret	0
?onSize@DockingManager@@AAEXXZ ENDP			; DockingManager::onSize
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -144						; size = 4
tv167 = -140						; size = 4
_len$3 = -136						; size = 4
$T4 = -132						; size = 4
_len$5 = -128						; size = 4
tv204 = -124						; size = 4
_pGripper$6 = -120					; size = 4
_res$7 = -116						; size = 4
tv149 = -112						; size = 4
tv233 = -108						; size = 4
$T8 = -104						; size = 4
$T9 = -100						; size = 4
_iCont$10 = -96						; size = 4
_uImageCnt$11 = -92					; size = 4
_i$12 = -88						; size = 4
_i$13 = -84						; size = 4
tv64 = -80						; size = 4
_offset$14 = -76					; size = 4
_iCont$15 = -72						; size = 4
_this$ = -68						; size = 4
_TbData$16 = -64					; size = 48
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z PROC	; DockingManager::runProc
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 225
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 226
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 20481		; 00005001H
	ja	SHORT $LN58@runProc
	cmp	DWORD PTR tv64[ebp], 20481		; 00005001H
	je	$LN11@runProc
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 132		; 00000084H
	ja	$LN50@runProc
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN60@runProc[edx]
	jmp	DWORD PTR $LN62@runProc[eax*4]
$LN58@runProc:
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 20482				; 00005002H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 11			; 0000000bH
	ja	$LN50@runProc
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN63@runProc[edx*4]
$LN49@runProc:
; Line 231
	mov	DWORD PTR _iCont$10[ebp], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$5[ebp], eax
	jmp	SHORT $LN48@runProc
$LN47@runProc:
	mov	eax, DWORD PTR _iCont$10[ebp]
	add	eax, 1
	mov	DWORD PTR _iCont$10[ebp], eax
$LN48@runProc:
	mov	ecx, DWORD PTR _iCont$10[ebp]
	cmp	ecx, DWORD PTR _len$5[ebp]
	jae	SHORT $LN46@runProc
; Line 233
	push	-1
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	push	134					; 00000086H
	mov	eax, DWORD PTR _iCont$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
; Line 234
	jmp	SHORT $LN47@runProc
$LN46@runProc:
; Line 236
	cmp	DWORD PTR _lParam$[ebp], -1
	je	SHORT $LN45@runProc
; Line 238
	push	-1
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	134					; 00000086H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
$LN45@runProc:
; Line 240
	jmp	$LN50@runProc
$LN44@runProc:
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onSize@DockingManager@@AAEXXZ		; DockingManager::onSize
; Line 246
	jmp	$LN50@runProc
$LN43@runProc:
; Line 251
	mov	ecx, DWORD PTR _hWndServer
	cmp	ecx, DWORD PTR _hwnd$[ebp]
	jne	SHORT $LN42@runProc
; Line 252
	mov	edx, DWORD PTR _gWinCallHook
	push	edx
	call	DWORD PTR __imp__UnhookWindowsHookEx@4
; Line 253
	mov	DWORD PTR _gWinCallHook, 0
; Line 254
	mov	DWORD PTR _hWndServer, 0
$LN42@runProc:
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN41@runProc
; Line 260
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	call	DWORD PTR __imp__ImageList_Destroy@4
$LN41@runProc:
; Line 264
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _i$13[ebp], eax
	jmp	SHORT $LN40@runProc
$LN39@runProc:
	mov	eax, DWORD PTR _i$13[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$13[ebp], eax
$LN40@runProc:
	cmp	DWORD PTR _i$13[ebp], 0
	jle	SHORT $LN38@runProc
; Line 266
	mov	ecx, DWORD PTR _i$13[ebp]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv149[ebp], edx
	mov	eax, DWORD PTR tv149[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv149[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 267
	mov	ecx, DWORD PTR _i$13[ebp]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T9[ebp], eax
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN54@runProc
	push	1
	mov	ecx, DWORD PTR $T9[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T9[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv167[ebp], eax
	jmp	SHORT $LN55@runProc
$LN54@runProc:
	mov	DWORD PTR tv167[ebp], 0
$LN55@runProc:
; Line 268
	jmp	SHORT $LN39@runProc
$LN38@runProc:
; Line 269
	call	DWORD PTR __imp__CoUninitialize@0
; Line 270
	jmp	$LN50@runProc
$LN37@runProc:
; Line 274
	call	DWORD PTR __imp__GetActiveWindow@0
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+8]
	je	SHORT $LN36@runProc
; Line 275
	jmp	$LN50@runProc
$LN36@runProc:
; Line 278
	mov	DWORD PTR _i$12[ebp], 0
	jmp	SHORT $LN35@runProc
$LN34@runProc:
	mov	edx, DWORD PTR _i$12[ebp]
	add	edx, 1
	mov	DWORD PTR _i$12[ebp], edx
$LN35@runProc:
	cmp	DWORD PTR _i$12[ebp], 4
	jge	SHORT $LN33@runProc
; Line 280
	call	DWORD PTR __imp__GetFocus@0
	push	eax
	mov	eax, DWORD PTR _i$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__IsChild@8
	push	eax
	mov	ecx, DWORD PTR _i$12[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?SetActive@DockingCont@@QAEXH@Z		; DockingCont::SetActive
; Line 281
	jmp	SHORT $LN34@runProc
$LN33@runProc:
; Line 282
	mov	eax, 1
	jmp	$LN52@runProc
$LN32@runProc:
; Line 287
	push	196					; 000000c4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN56@runProc
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0Gripper@@QAE@XZ			; Gripper::Gripper
	mov	DWORD PTR tv204[ebp], eax
	jmp	SHORT $LN57@runProc
$LN56@runProc:
	mov	DWORD PTR tv204[ebp], 0
$LN57@runProc:
	mov	edx, DWORD PTR tv204[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _pGripper$6[ebp], eax
; Line 288
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pGripper$6[ebp]
	call	?init@Gripper@@QAEXPAUHINSTANCE__@@PAUHWND__@@@Z ; Gripper::init
; Line 289
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pGripper$6[ebp]
	call	?startGrip@Gripper@@QAEXPAVDockingCont@@PAVDockingManager@@@Z ; Gripper::startGrip
; Line 290
	jmp	$LN50@runProc
$LN31@runProc:
; Line 295
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR _offset$14[ebp], ecx
; Line 297
	mov	DWORD PTR _iCont$15[ebp], 0
	jmp	SHORT $LN30@runProc
$LN29@runProc:
	mov	edx, DWORD PTR _iCont$15[ebp]
	add	edx, 1
	mov	DWORD PTR _iCont$15[ebp], edx
$LN30@runProc:
	cmp	DWORD PTR _iCont$15[ebp], 4
	jge	$LN28@runProc
; Line 299
	mov	eax, DWORD PTR _iCont$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	cmp	eax, DWORD PTR _lParam$[ebp]
	jne	$LN27@runProc
; Line 301
	mov	ecx, DWORD PTR _iCont$15[ebp]
	mov	DWORD PTR tv233[ebp], ecx
	cmp	DWORD PTR tv233[ebp], 3
	ja	$LN25@runProc
	mov	edx, DWORD PTR tv233[ebp]
	jmp	DWORD PTR $LN64@runProc[edx*4]
$LN24@runProc:
; Line 304
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+108]
	sub	edx, DWORD PTR _offset$14[ebp]
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+108], edx
; Line 305
	mov	edx, DWORD PTR _iCont$15[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+108], 0
	jge	SHORT $LN23@runProc
; Line 307
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+108], 0
$LN23@runProc:
; Line 309
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], -4			; fffffffcH
	jge	SHORT $LN22@runProc
	cmp	DWORD PTR _offset$14[ebp], 0
	jge	SHORT $LN22@runProc
; Line 311
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+108]
	add	eax, DWORD PTR _offset$14[ebp]
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+108], eax
$LN22@runProc:
; Line 313
	jmp	$LN25@runProc
$LN21@runProc:
; Line 315
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+108]
	add	edx, DWORD PTR _offset$14[ebp]
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+108], edx
; Line 316
	mov	edx, DWORD PTR _iCont$15[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+108], 0
	jge	SHORT $LN20@runProc
; Line 318
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+108], 0
$LN20@runProc:
; Line 320
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], -4			; fffffffcH
	jge	SHORT $LN19@runProc
	cmp	DWORD PTR _offset$14[ebp], 0
	jle	SHORT $LN19@runProc
; Line 322
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+108]
	sub	eax, DWORD PTR _offset$14[ebp]
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+108], eax
$LN19@runProc:
; Line 324
	jmp	$LN25@runProc
$LN18@runProc:
; Line 326
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+104]
	sub	edx, DWORD PTR _offset$14[ebp]
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+104], edx
; Line 327
	mov	edx, DWORD PTR _iCont$15[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+104], 0
	jge	SHORT $LN17@runProc
; Line 329
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+104], 0
$LN17@runProc:
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 4
	jge	SHORT $LN16@runProc
	cmp	DWORD PTR _offset$14[ebp], 0
	jge	SHORT $LN16@runProc
; Line 333
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+104]
	add	eax, DWORD PTR _offset$14[ebp]
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+104], eax
$LN16@runProc:
; Line 335
	jmp	SHORT $LN25@runProc
$LN15@runProc:
; Line 337
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+104]
	add	edx, DWORD PTR _offset$14[ebp]
	mov	eax, DWORD PTR _iCont$15[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+104], edx
; Line 338
	mov	edx, DWORD PTR _iCont$15[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+104], 0
	jge	SHORT $LN14@runProc
; Line 340
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+104], 0
$LN14@runProc:
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 4
	jge	SHORT $LN25@runProc
	cmp	DWORD PTR _offset$14[ebp], 0
	jle	SHORT $LN25@runProc
; Line 344
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+104]
	sub	eax, DWORD PTR _offset$14[ebp]
	mov	ecx, DWORD PTR _iCont$15[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+104], eax
$LN25@runProc:
; Line 348
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onSize@DockingManager@@AAEXXZ		; DockingManager::onSize
; Line 349
	jmp	SHORT $LN28@runProc
$LN27@runProc:
; Line 351
	jmp	$LN29@runProc
$LN28@runProc:
; Line 352
	jmp	$LN50@runProc
$LN12@runProc:
; Line 357
	push	0
	push	0
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z ; DockingManager::toggleActiveTb
; Line 358
	xor	eax, eax
	jmp	$LN52@runProc
$LN11@runProc:
; Line 362
	mov	ecx, DWORD PTR _lParam$[ebp]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	mov	ecx, 12					; 0000000cH
	mov	esi, eax
	lea	edi, DWORD PTR _TbData$16[ebp]
	rep movsd
; Line 363
	push	1051					; 0000041bH
	mov	edx, DWORD PTR _TbData$16[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ; DockingManager::SendNotify
	mov	DWORD PTR _res$7[ebp], eax
; Line 364
	cmp	DWORD PTR _res$7[ebp], 0
	jne	SHORT $LN10@runProc
; Line 365
	push	0
	push	1
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__PostMessageW@16
$LN10@runProc:
; Line 366
	mov	eax, DWORD PTR _res$7[ebp]
	jmp	$LN52@runProc
$LN9@runProc:
; Line 370
	push	0
	push	20483					; 00005003H
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z ; DockingManager::toggleVisTb
; Line 371
	xor	eax, eax
	jmp	$LN52@runProc
$LN8@runProc:
; Line 375
	push	0
	push	20482					; 00005002H
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z ; DockingManager::toggleVisTb
; Line 376
	xor	eax, eax
	jmp	SHORT $LN52@runProc
$LN7@runProc:
; Line 380
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+72]
	jmp	SHORT $LN52@runProc
$LN6@runProc:
; Line 384
	mov	DWORD PTR _uImageCnt$11[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?size@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QBEIXZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::size
	mov	DWORD PTR _len$3[ebp], eax
	jmp	SHORT $LN5@runProc
$LN4@runProc:
	mov	edx, DWORD PTR _uImageCnt$11[ebp]
	add	edx, 1
	mov	DWORD PTR _uImageCnt$11[ebp], edx
$LN5@runProc:
	mov	eax, DWORD PTR _uImageCnt$11[ebp]
	cmp	eax, DWORD PTR _len$3[ebp]
	jae	SHORT $LN3@runProc
; Line 386
	mov	ecx, DWORD PTR _uImageCnt$11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??A?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEAAPAUHWND__@@I@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::operator[]
	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN2@runProc
; Line 388
	mov	eax, DWORD PTR _uImageCnt$11[ebp]
	jmp	SHORT $LN52@runProc
$LN2@runProc:
; Line 390
	jmp	SHORT $LN4@runProc
$LN3@runProc:
; Line 391
	or	eax, -1
	jmp	SHORT $LN52@runProc
$LN50@runProc:
; Line 397
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcW@16
$LN52@runProc:
; Line 398
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN62@runProc:
	DD	$LN43@runProc
	DD	$LN44@runProc
	DD	$LN49@runProc
	DD	$LN50@runProc
$LN60@runProc:
	DB	0
	DB	1
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	npad	3
$LN63@runProc:
	DD	$LN12@runProc
	DD	$LN12@runProc
	DD	$LN8@runProc
	DD	$LN9@runProc
	DD	$LN32@runProc
	DD	$LN50@runProc
	DD	$LN7@runProc
	DD	$LN6@runProc
	DD	$LN50@runProc
	DD	$LN31@runProc
	DD	$LN50@runProc
	DD	$LN37@runProc
$LN64@runProc:
	DD	$LN18@runProc
	DD	$LN15@runProc
	DD	$LN24@runProc
	DD	$LN21@runProc
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z$0:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z ENDP	; DockingManager::runProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = -8						; size = 4
_pDockingManager$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?staticWinProc@DockingManager@@CGJPAUHWND__@@IIJ@Z PROC	; DockingManager::staticWinProc
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 187
	mov	DWORD PTR _pDockingManager$[ebp], 0
; Line 188
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 129		; 00000081H
	je	SHORT $LN3@staticWinP
	jmp	SHORT $LN2@staticWinP
$LN3@staticWinP:
; Line 191
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pDockingManager$[ebp], edx
; Line 192
	mov	eax, DWORD PTR _pDockingManager$[ebp]
	mov	ecx, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 193
	mov	edx, DWORD PTR _pDockingManager$[ebp]
	push	edx
	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongW@12
; Line 194
	mov	eax, 1
	jmp	SHORT $LN6@staticWinP
$LN2@staticWinP:
; Line 197
	push	-21					; ffffffebH
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongW@8
	mov	DWORD PTR _pDockingManager$[ebp], eax
; Line 198
	cmp	DWORD PTR _pDockingManager$[ebp], 0
	jne	SHORT $LN1@staticWinP
; Line 199
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN6@staticWinP
$LN1@staticWinP:
; Line 200
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDockingManager$[ebp]
	call	?runProc@DockingManager@@AAEJPAUHWND__@@IIJ@Z ; DockingManager::runProc
$LN6@staticWinP:
; Line 202
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?staticWinProc@DockingManager@@CGJPAUHWND__@@IIJ@Z ENDP	; DockingManager::staticWinProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?destroy@DockingManager@@UAEXXZ PROC			; DockingManager::destroy
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy@DockingManager@@UAEXXZ ENDP			; DockingManager::destroy
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iCont$ = 8						; size = 4
_iSize$ = 12						; size = 4
?setDockedContSize@DockingManager@@QAEXHH@Z PROC	; DockingManager::setDockedContSize
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 724
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 725
	cmp	DWORD PTR _iCont$[ebp], 2
	je	SHORT $LN5@setDockedC
	cmp	DWORD PTR _iCont$[ebp], 3
	jne	SHORT $LN6@setDockedC
$LN5@setDockedC:
; Line 726
	mov	eax, DWORD PTR _iCont$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iSize$[ebp]
	mov	DWORD PTR [ecx+eax+108], edx
	jmp	SHORT $LN4@setDockedC
$LN6@setDockedC:
; Line 727
	cmp	DWORD PTR _iCont$[ebp], 0
	je	SHORT $LN2@setDockedC
	cmp	DWORD PTR _iCont$[ebp], 1
	jne	SHORT $LN3@setDockedC
$LN2@setDockedC:
; Line 728
	mov	eax, DWORD PTR _iCont$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iSize$[ebp]
	mov	DWORD PTR [ecx+eax+104], edx
; Line 729
	jmp	SHORT $LN4@setDockedC
$LN3@setDockedC:
; Line 730
	jmp	SHORT $LN7@setDockedC
$LN4@setDockedC:
; Line 731
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onSize@DockingManager@@AAEXXZ		; DockingManager::onSize
$LN7@setDockedC:
; Line 732
	mov	esp, ebp
	pop	ebp
	ret	8
?setDockedContSize@DockingManager@@QAEXHH@Z ENDP	; DockingManager::setDockedContSize
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iCont$ = 8						; size = 4
?getDockedContSize@DockingManager@@QAEHH@Z PROC		; DockingManager::getDockedContSize
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 735
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 736
	cmp	DWORD PTR _iCont$[ebp], 2
	je	SHORT $LN5@getDockedC
	cmp	DWORD PTR _iCont$[ebp], 3
	jne	SHORT $LN6@getDockedC
$LN5@getDockedC:
; Line 737
	mov	eax, DWORD PTR _iCont$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+108]
	jmp	SHORT $LN7@getDockedC
	jmp	SHORT $LN7@getDockedC
$LN6@getDockedC:
; Line 738
	cmp	DWORD PTR _iCont$[ebp], 0
	je	SHORT $LN2@getDockedC
	cmp	DWORD PTR _iCont$[ebp], 1
	jne	SHORT $LN3@getDockedC
$LN2@getDockedC:
; Line 739
	mov	edx, DWORD PTR _iCont$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx+104]
	jmp	SHORT $LN7@getDockedC
; Line 740
	jmp	SHORT $LN7@getDockedC
$LN3@getDockedC:
; Line 741
	or	eax, -1
$LN7@getDockedC:
; Line 742
	mov	esp, ebp
	pop	ebp
	ret	4
?getDockedContSize@DockingManager@@QAEHH@Z ENDP		; DockingManager::getDockedContSize
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ PROC ; DockingManager::getContainerInfo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.h
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
; Line 90
	mov	esp, ebp
	pop	ebp
	ret	0
?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ ENDP ; DockingManager::getContainerInfo
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -16						; size = 4
_iRet$ = -12						; size = 4
_this$ = -8						; size = 4
_iCont$2 = -4						; size = 4
_pCont$ = 8						; size = 4
?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z PROC ; DockingManager::GetContainer
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 931
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 932
	mov	DWORD PTR _iRet$[ebp], -1
; Line 933
	mov	DWORD PTR _iCont$2[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN4@GetContain
$LN3@GetContain:
	mov	eax, DWORD PTR _iCont$2[ebp]
	add	eax, 1
	mov	DWORD PTR _iCont$2[ebp], eax
$LN4@GetContain:
	mov	ecx, DWORD PTR _iCont$2[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN2@GetContain
; Line 935
	mov	edx, DWORD PTR _iCont$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _pCont$[ebp]
	jne	SHORT $LN1@GetContain
; Line 937
	mov	ecx, DWORD PTR _iCont$2[ebp]
	mov	DWORD PTR _iRet$[ebp], ecx
; Line 938
	jmp	SHORT $LN2@GetContain
$LN1@GetContain:
; Line 940
	jmp	SHORT $LN3@GetContain
$LN2@GetContain:
; Line 942
	mov	eax, DWORD PTR _iRet$[ebp]
; Line 943
	mov	esp, ebp
	pop	ebp
	ret	4
?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ENDP ; DockingManager::GetContainer
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_vTbData$ = -96						; size = 16
_pTbData$ = -80						; size = 4
_len$2 = -76						; size = 4
_this$ = -72						; size = 4
_iTb$3 = -68						; size = 4
_TbData$4 = -64						; size = 48
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pContSrc$ = 8						; size = 4
_pContTgt$ = 12						; size = 4
?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z PROC ; DockingManager::toggleVisTb
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 875
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 876
	lea	eax, DWORD PTR _vTbData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?getDataOfVisTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ ; DockingCont::getDataOfVisTb
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 877
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	mov	DWORD PTR _pTbData$[ebp], eax
; Line 880
	push	0
	push	0
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 881
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onSize@DockingManager@@AAEXXZ		; DockingManager::onSize
; Line 883
	mov	DWORD PTR _iTb$3[ebp], 0
	lea	ecx, DWORD PTR _vTbData$[ebp]
	call	?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::size
	mov	DWORD PTR _len$2[ebp], eax
	jmp	SHORT $LN3@toggleVisT
$LN2@toggleVisT:
	mov	ecx, DWORD PTR _iTb$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _iTb$3[ebp], ecx
$LN3@toggleVisT:
	mov	edx, DWORD PTR _iTb$3[ebp]
	cmp	edx, DWORD PTR _len$2[ebp]
	jae	SHORT $LN1@toggleVisT
; Line 886
	mov	eax, DWORD PTR _iTb$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _vTbData$[ebp]
	call	??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::operator[]
	mov	esi, DWORD PTR [eax]
	mov	ecx, 12					; 0000000cH
	lea	edi, DWORD PTR _TbData$4[ebp]
	rep movsd
; Line 887
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$4[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContSrc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toggleTb@DockingManager@@AAEXPAVDockingCont@@0UtTbData@@@Z ; DockingManager::toggleTb
; Line 888
	jmp	SHORT $LN2@toggleVisT
$LN1@toggleVisT:
; Line 889
	mov	eax, DWORD PTR _pTbData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?setActiveTb@DockingCont@@QAEXPAUtTbData@@@Z ; DockingCont::setActiveTb
; Line 890
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vTbData$[ebp]
	call	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z$0:
	lea	ecx, DWORD PTR _vTbData$[ebp]
	jmp	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
__ehhandler$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z ENDP ; DockingManager::toggleVisTb
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -56						; size = 4
_TbData$ = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
_pContSrc$ = 8						; size = 4
_pContTgt$ = 12						; size = 4
?toggleActiveTb@DockingManager@@QAEXPAVDockingCont@@0@Z PROC ; DockingManager::toggleActiveTb
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 868
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
; Line 869
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	mov	ecx, 12					; 0000000cH
	mov	esi, eax
	lea	edi, DWORD PTR _TbData$[ebp]
	rep movsd
; Line 871
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$[ebp]
	mov	edi, esp
	rep movsd
	mov	eax, DWORD PTR _pContTgt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toggleTb@DockingManager@@AAEXPAVDockingCont@@0UtTbData@@@Z ; DockingManager::toggleTb
; Line 872
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?toggleActiveTb@DockingManager@@QAEXPAVDockingCont@@0@Z ENDP ; DockingManager::toggleActiveTb
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_vTbData$ = -132					; size = 16
$T2 = -116						; size = 4
$T3 = -112						; size = 4
_len$4 = -108						; size = 4
$T5 = -104						; size = 4
tv132 = -100						; size = 4
_pTbData$ = -96						; size = 4
tv171 = -92						; size = 4
_isCont$ = -88						; size = 4
_iContSrc$ = -84					; size = 4
_iContPrev$ = -80					; size = 4
_iTb$6 = -76						; size = 4
_pContTgt$ = -72					; size = 4
_this$ = -68						; size = 4
_TbData$7 = -64						; size = 48
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pContSrc$ = 8						; size = 4
_message$ = 12						; size = 4
_prcFloat$ = 16						; size = 4
?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z PROC ; DockingManager::toggleVisTb
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 809
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 810
	lea	eax, DWORD PTR _vTbData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?getDataOfVisTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ ; DockingCont::getDataOfVisTb
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 811
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	mov	DWORD PTR _pTbData$[ebp], eax
; Line 813
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
	mov	DWORD PTR _iContSrc$[ebp], eax
; Line 814
	mov	edx, DWORD PTR _pTbData$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _iContPrev$[ebp], eax
; Line 815
	mov	ecx, DWORD PTR _iContPrev$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ContExists@DockingManager@@AAEHI@Z	; DockingManager::ContExists
	mov	DWORD PTR _isCont$[ebp], eax
; Line 816
	mov	DWORD PTR _pContTgt$[ebp], 0
; Line 819
	push	0
	push	0
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 820
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onSize@DockingManager@@AAEXXZ		; DockingManager::onSize
; Line 822
	mov	DWORD PTR _iTb$6[ebp], 0
	lea	ecx, DWORD PTR _vTbData$[ebp]
	call	?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::size
	mov	DWORD PTR _len$4[ebp], eax
	jmp	SHORT $LN6@toggleVisT
$LN5@toggleVisT:
	mov	edx, DWORD PTR _iTb$6[ebp]
	add	edx, 1
	mov	DWORD PTR _iTb$6[ebp], edx
$LN6@toggleVisT:
	mov	eax, DWORD PTR _iTb$6[ebp]
	cmp	eax, DWORD PTR _len$4[ebp]
	jae	$LN4@toggleVisT
; Line 825
	mov	ecx, DWORD PTR _iTb$6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vTbData$[ebp]
	call	??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::operator[]
	mov	esi, DWORD PTR [eax]
	mov	ecx, 12					; 0000000cH
	lea	edi, DWORD PTR _TbData$7[ebp]
	rep movsd
; Line 828
	cmp	DWORD PTR _prcFloat$[ebp], 0
	je	SHORT $LN3@toggleVisT
; Line 830
	mov	edx, DWORD PTR _prcFloat$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _TbData$7[ebp+24], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _TbData$7[ebp+28], ecx
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _TbData$7[ebp+32], eax
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR _TbData$7[ebp+36], ecx
$LN3@toggleVisT:
; Line 833
	cmp	DWORD PTR _isCont$[ebp], 0
	jne	$LN2@toggleVisT
; Line 836
	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN9@toggleVisT
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0DockingCont@@QAE@XZ			; DockingCont::DockingCont
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN10@toggleVisT
$LN9@toggleVisT:
	mov	DWORD PTR tv132[ebp], 0
$LN10@toggleVisT:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _pContTgt$[ebp], eax
; Line 837
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pContTgt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 838
	push	1
	push	1
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 840
	mov	eax, DWORD PTR _iContSrc$[ebp]
	mov	DWORD PTR _TbData$7[ebp+40], eax
; Line 841
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$7[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z ; DockingCont::createToolbar
; Line 842
	lea	ecx, DWORD PTR _pContTgt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
; Line 845
	mov	DWORD PTR _isCont$[ebp], 1
; Line 846
	mov	edx, DWORD PTR _pContTgt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
	mov	DWORD PTR _iContPrev$[ebp], eax
; Line 848
	jmp	SHORT $LN1@toggleVisT
$LN2@toggleVisT:
; Line 851
	mov	eax, DWORD PTR _iContPrev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pContTgt$[ebp], ecx
; Line 853
	mov	edx, DWORD PTR _iContSrc$[ebp]
	mov	DWORD PTR _TbData$7[ebp+40], edx
; Line 854
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$7[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z ; DockingCont::createToolbar
$LN1@toggleVisT:
; Line 857
	cmp	DWORD PTR _message$[ebp], 20482		; 00005002H
	jne	SHORT $LN11@toggleVisT
	mov	DWORD PTR tv171[ebp], 1052		; 0000041cH
	jmp	SHORT $LN12@toggleVisT
$LN11@toggleVisT:
	mov	DWORD PTR tv171[ebp], 1053		; 0000041dH
$LN12@toggleVisT:
	mov	eax, DWORD PTR tv171[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	esi, ax
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
	and	eax, 65535				; 0000ffffH
	movzx	edx, ax
	shl	edx, 16					; 00000010H
	or	esi, edx
	push	esi
	mov	eax, DWORD PTR _TbData$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ; DockingManager::SendNotify
; Line 860
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$7[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _iContSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?removeToolbar@DockingCont@@QAEXUtTbData@@@Z ; DockingCont::removeToolbar
; Line 861
	jmp	$LN5@toggleVisT
$LN4@toggleVisT:
; Line 863
	mov	edx, DWORD PTR _pTbData$[ebp]
	push	edx
	mov	eax, DWORD PTR _iContPrev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?setActiveTb@DockingCont@@QAEXPAUtTbData@@@Z ; DockingCont::setActiveTb
; Line 864
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vTbData$[ebp]
	call	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
	mov	eax, DWORD PTR $T2[ebp]
; Line 865
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z$0:
	lea	ecx, DWORD PTR _vTbData$[ebp]
	jmp	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
__unwindfunclet$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z$1:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z ENDP ; DockingManager::toggleVisTb
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -104						; size = 4
_isCont$ = -100						; size = 4
_iContPrev$ = -96					; size = 4
tv87 = -92						; size = 4
$T3 = -88						; size = 4
tv173 = -84						; size = 4
_iContNew$4 = -80					; size = 4
_iContSrc$ = -76					; size = 4
_this$ = -72						; size = 4
_pContTgt$ = -68					; size = 4
_TbData$ = -64						; size = 48
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pContSrc$ = 8						; size = 4
_message$ = 12						; size = 4
_bNew$ = 16						; size = 4
_prcFloat$ = 20						; size = 4
?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z PROC ; DockingManager::toggleActiveTb
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 745
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 746
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ ; DockingCont::getDataOfActiveTb
	mov	ecx, 12					; 0000000cH
	mov	esi, eax
	lea	edi, DWORD PTR _TbData$[ebp]
	rep movsd
; Line 747
	mov	eax, DWORD PTR _pContSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
	mov	DWORD PTR _iContSrc$[ebp], eax
; Line 748
	mov	ecx, DWORD PTR _TbData$[ebp+40]
	mov	DWORD PTR _iContPrev$[ebp], ecx
; Line 749
	mov	edx, DWORD PTR _iContPrev$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ContExists@DockingManager@@AAEHI@Z	; DockingManager::ContExists
	mov	DWORD PTR _isCont$[ebp], eax
; Line 750
	mov	DWORD PTR _pContTgt$[ebp], 0
; Line 753
	cmp	DWORD PTR _prcFloat$[ebp], 0
	je	SHORT $LN9@toggleActi
; Line 755
	mov	eax, DWORD PTR _prcFloat$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _TbData$[ebp+24], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _TbData$[ebp+28], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _TbData$[ebp+32], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _TbData$[ebp+36], edx
$LN9@toggleActi:
; Line 758
	cmp	DWORD PTR _isCont$[ebp], 0
	je	SHORT $LN7@toggleActi
	cmp	DWORD PTR _bNew$[ebp], 1
	jne	$LN8@toggleActi
$LN7@toggleActi:
; Line 761
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindEmptyContainer@DockingManager@@AAEHXZ ; DockingManager::FindEmptyContainer
	mov	DWORD PTR _iContNew$4[ebp], eax
; Line 763
	cmp	DWORD PTR _iContNew$4[ebp], -1
	jne	$LN6@toggleActi
; Line 766
	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN12@toggleActi
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0DockingCont@@QAE@XZ			; DockingCont::DockingCont
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN13@toggleActi
$LN12@toggleActi:
	mov	DWORD PTR tv87[ebp], 0
$LN13@toggleActi:
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pContTgt$[ebp], ecx
; Line 767
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pContTgt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
; Line 768
	push	1
	push	1
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 771
	cmp	DWORD PTR _bNew$[ebp], 0
	je	SHORT $LN4@toggleActi
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@toggleActi
$LN4@toggleActi:
; Line 772
	mov	edx, DWORD PTR _iContSrc$[ebp]
	mov	DWORD PTR _TbData$[ebp+40], edx
$LN5@toggleActi:
; Line 774
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z ; DockingCont::createToolbar
; Line 775
	lea	eax, DWORD PTR _pContTgt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
; Line 777
	jmp	SHORT $LN3@toggleActi
$LN6@toggleActi:
; Line 780
	mov	ecx, DWORD PTR _iContNew$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _pContTgt$[ebp], edx
; Line 783
	mov	ecx, DWORD PTR _pContSrc$[ebp]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	esi, al
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?isFloating@DockingCont@@QAE_NXZ	; DockingCont::isFloating
	movzx	eax, al
	cmp	esi, eax
	je	SHORT $LN2@toggleActi
; Line 784
	mov	ecx, DWORD PTR _iContSrc$[ebp]
	mov	DWORD PTR _TbData$[ebp+40], ecx
$LN2@toggleActi:
; Line 786
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z ; DockingCont::createToolbar
$LN3@toggleActi:
; Line 789
	jmp	SHORT $LN1@toggleActi
$LN8@toggleActi:
; Line 792
	mov	edx, DWORD PTR _iContPrev$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _pContTgt$[ebp], eax
; Line 795
	mov	ecx, DWORD PTR _iContSrc$[ebp]
	mov	DWORD PTR _TbData$[ebp+40], ecx
; Line 796
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _pContTgt$[ebp]
	call	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z ; DockingCont::createToolbar
$LN1@toggleActi:
; Line 800
	cmp	DWORD PTR _message$[ebp], 20482		; 00005002H
	jne	SHORT $LN14@toggleActi
	mov	DWORD PTR tv173[ebp], 1052		; 0000041cH
	jmp	SHORT $LN15@toggleActi
$LN14@toggleActi:
	mov	DWORD PTR tv173[ebp], 1053		; 0000041dH
$LN15@toggleActi:
	mov	edx, DWORD PTR tv173[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	esi, dx
	mov	eax, DWORD PTR _pContTgt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetContainer@DockingManager@@QAEHPAVDockingCont@@@Z ; DockingManager::GetContainer
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	shl	ecx, 16					; 00000010H
	or	esi, ecx
	push	esi
	mov	edx, DWORD PTR _TbData$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ; DockingManager::SendNotify
; Line 803
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _TbData$[ebp]
	mov	edi, esp
	rep movsd
	mov	eax, DWORD PTR _iContSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?removeToolbar@DockingCont@@QAEXUtTbData@@@Z ; DockingCont::removeToolbar
; Line 805
	mov	eax, DWORD PTR _pContTgt$[ebp]
; Line 806
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z ENDP ; DockingManager::toggleActiveTb
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -16						; size = 4
_this$ = -12						; size = 4
_pTbData$ = -8						; size = 4
_i$2 = -4						; size = 4
_pszName$ = 8						; size = 4
_view$ = 12						; size = 4
?showDockableDlg@DockingManager@@QAEXPA_WH@Z PROC	; DockingManager::showDockableDlg
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 701
	mov	DWORD PTR _pTbData$[ebp], 0
; Line 702
	mov	DWORD PTR _i$2[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN4@showDockab
$LN3@showDockab:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN4@showDockab:
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN5@showDockab
; Line 704
	mov	edx, DWORD PTR _pszName$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?findToolbarByName@DockingCont@@QAEPAUtTbData@@PA_W@Z ; DockingCont::findToolbarByName
	mov	DWORD PTR _pTbData$[ebp], eax
; Line 705
	cmp	DWORD PTR _pTbData$[ebp], 0
	je	SHORT $LN1@showDockab
; Line 707
	mov	ecx, DWORD PTR _view$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTbData$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?showToolbar@DockingCont@@QAEXPAUtTbData@@H@Z ; DockingCont::showToolbar
; Line 708
	jmp	SHORT $LN5@showDockab
$LN1@showDockab:
; Line 710
	jmp	SHORT $LN3@showDockab
$LN5@showDockab:
; Line 711
	mov	esp, ebp
	pop	ebp
	ret	8
?showDockableDlg@DockingManager@@QAEXPA_WH@Z ENDP	; DockingManager::showDockableDlg
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -16						; size = 4
_pTbData$2 = -12					; size = 4
_this$ = -8						; size = 4
_i$3 = -4						; size = 4
_hDlg$ = 8						; size = 4
_view$ = 12						; size = 4
?showDockableDlg@DockingManager@@QAEXPAUHWND__@@H@Z PROC ; DockingManager::showDockableDlg
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 687
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 688
	mov	DWORD PTR _i$3[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN4@showDockab
$LN3@showDockab:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@showDockab:
	mov	ecx, DWORD PTR _i$3[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN5@showDockab
; Line 690
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?findToolbarByWnd@DockingCont@@QAEPAUtTbData@@PAUHWND__@@@Z ; DockingCont::findToolbarByWnd
	mov	DWORD PTR _pTbData$2[ebp], eax
; Line 691
	cmp	DWORD PTR _pTbData$2[ebp], 0
	je	SHORT $LN1@showDockab
; Line 693
	mov	ecx, DWORD PTR _view$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTbData$2[ebp]
	push	edx
	mov	eax, DWORD PTR _i$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?showToolbar@DockingCont@@QAEXPAUtTbData@@H@Z ; DockingCont::showToolbar
; Line 694
	jmp	SHORT $LN5@showDockab
$LN1@showDockab:
; Line 696
	jmp	SHORT $LN3@showDockab
$LN5@showDockab:
; Line 697
	mov	esp, ebp
	pop	ebp
	ret	8
?showDockableDlg@DockingManager@@QAEXPAUHWND__@@H@Z ENDP ; DockingManager::showDockableDlg
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iCont$ = 8						; size = 4
_iItem$ = 12						; size = 4
?setActiveTab@DockingManager@@QAEXHH@Z PROC		; DockingManager::setActiveTab
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 679
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 680
	cmp	DWORD PTR _iCont$[ebp], -1
	je	SHORT $LN1@setActiveT
	mov	eax, DWORD PTR _iCont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+164], -1
	jne	SHORT $LN2@setActiveT
$LN1@setActiveT:
; Line 681
	jmp	SHORT $LN3@setActiveT
$LN2@setActiveT:
; Line 683
	mov	edx, DWORD PTR _iItem$[ebp]
	push	edx
	mov	eax, DWORD PTR _iCont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+164]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?setActiveTb@DockingCont@@QAEXH@Z	; DockingCont::setActiveTb
$LN3@setActiveT:
; Line 684
	mov	esp, ebp
	pop	ebp
	ret	8
?setActiveTab@DockingManager@@QAEXHH@Z ENDP		; DockingManager::setActiveTab
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -84						; size = 4
$T3 = -80						; size = 4
$T4 = -76						; size = 4
tv189 = -72						; size = 4
tv131 = -68						; size = 4
_iconDpiDynamicalSize$5 = -64				; size = 4
$T6 = -60						; size = 4
tv142 = -56						; size = 4
tv235 = -52						; size = 4
$T7 = -48						; size = 4
$T8 = -44						; size = 4
_pCont$ = -40						; size = 4
_this$ = -36						; size = 4
_rc$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 48
_iCont$ = 56						; size = 4
_isVisible$ = 60					; size = 1
?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z PROC ; DockingManager::createDockableDlg
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 567
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 569
	mov	eax, DWORD PTR _data$[ebp+12]
	and	eax, 1
	je	SHORT $LN16@createDock
	cmp	DWORD PTR _data$[ebp+16], 0
	je	SHORT $LN16@createDock
; Line 572
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+72], 0
	jne	SHORT $LN15@createDock
; Line 574
	push	14					; 0000000eH
	call	?getInstance@NppParameters@@SAPAV1@XZ	; NppParameters::getInstance
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	?scaleY@DPIManager@@QAEHH@Z		; DPIManager::scaleY
	mov	DWORD PTR _iconDpiDynamicalSize$5[ebp], eax
; Line 575
	push	0
	push	0
	push	8
	mov	edx, DWORD PTR _iconDpiDynamicalSize$5[ebp]
	push	edx
	mov	eax, DWORD PTR _iconDpiDynamicalSize$5[ebp]
	push	eax
	call	DWORD PTR __imp__ImageList_Create@20
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], eax
$LN15@createDock:
; Line 579
	mov	edx, DWORD PTR _data$[ebp+16]
	push	edx
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	DWORD PTR __imp__ImageList_ReplaceIcon@12
; Line 582
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?push_back@?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAEXABQAUHWND__@@@Z ; std::vector<HWND__ *,std::allocator<HWND__ *> >::push_back
$LN16@createDock:
; Line 586
	mov	DWORD PTR _rc$[ebp], 0
	mov	DWORD PTR _rc$[ebp+4], 0
	mov	DWORD PTR _rc$[ebp+8], 0
	mov	DWORD PTR _rc$[ebp+12], 0
; Line 587
	mov	DWORD PTR _pCont$[ebp], 0
; Line 590
	push	16					; 00000010H
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp+24]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN14@createDock
; Line 593
	lea	edx, DWORD PTR _data$[ebp+24]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
; Line 596
	cmp	DWORD PTR _iCont$[ebp], -1
	jne	$LN13@createDock
; Line 599
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	cmp	eax, 1
	jne	SHORT $LN19@createDock
	mov	DWORD PTR tv131[ebp], 1
	jmp	SHORT $LN20@createDock
$LN19@createDock:
	mov	DWORD PTR tv131[ebp], 0
$LN20@createDock:
	mov	dl, BYTE PTR tv131[ebp]
	mov	BYTE PTR _isVisible$[ebp], dl
; Line 601
	mov	eax, DWORD PTR _data$[ebp+12]
	and	eax, -2147483648			; 80000000H
	je	$LN12@createDock
; Line 604
	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN21@createDock
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0DockingCont@@QAE@XZ			; DockingCont::DockingCont
	mov	DWORD PTR tv142[ebp], eax
	jmp	SHORT $LN22@createDock
$LN21@createDock:
	mov	DWORD PTR tv142[ebp], 0
$LN22@createDock:
	mov	ecx, DWORD PTR tv142[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _pCont$[ebp], edx
; Line 605
	lea	eax, DWORD PTR _pCont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pCont$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pCont$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 609
	push	1
	movzx	eax, BYTE PTR _isVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCont$[ebp]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 612
	mov	ecx, DWORD PTR _data$[ebp+12]
	and	ecx, 805306368				; 30000000H
	shr	ecx, 28					; 0000001cH
	mov	DWORD PTR _data$[ebp+40], ecx
; Line 613
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	sub	eax, 1
	mov	DWORD PTR _iCont$[ebp], eax
; Line 615
	jmp	SHORT $LN13@createDock
$LN12@createDock:
; Line 618
	mov	edx, DWORD PTR _data$[ebp+12]
	and	edx, 805306368				; 30000000H
	shr	edx, 28					; 0000001cH
	mov	DWORD PTR _iCont$[ebp], edx
; Line 621
	mov	DWORD PTR _data$[ebp+40], -1
$LN13@createDock:
; Line 624
	jmp	$LN10@createDock
$LN14@createDock:
; Line 626
	cmp	DWORD PTR _iCont$[ebp], 4
	jge	SHORT $LN8@createDock
	cmp	DWORD PTR _data$[ebp+40], 4
	jl	$LN10@createDock
$LN8@createDock:
; Line 629
	cmp	DWORD PTR _iCont$[ebp], 4
	jl	$LN7@createDock
; Line 632
	mov	eax, DWORD PTR _iCont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+164], -1
	jne	$LN6@createDock
; Line 635
	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN23@createDock
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0DockingCont@@QAE@XZ			; DockingCont::DockingCont
	mov	DWORD PTR tv189[ebp], eax
	jmp	SHORT $LN24@createDock
$LN23@createDock:
	mov	DWORD PTR tv189[ebp], 0
$LN24@createDock:
	mov	edx, DWORD PTR tv189[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pCont$[ebp], eax
; Line 636
	lea	ecx, DWORD PTR _pCont$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
; Line 639
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pCont$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCont$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
; Line 640
	push	1
	movzx	ecx, BYTE PTR _isVisible$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCont$[ebp]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 641
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	sub	eax, 1
	mov	edx, DWORD PTR _iCont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx*4+164], eax
$LN6@createDock:
; Line 645
	mov	edx, DWORD PTR _iCont$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+164]
	mov	DWORD PTR _iCont$[ebp], ecx
; Line 648
	jmp	$LN10@createDock
$LN7@createDock:
; Line 651
	mov	edx, DWORD PTR _data$[ebp+40]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4+164], -1
	jne	$LN4@createDock
; Line 654
	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN25@createDock
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0DockingCont@@QAE@XZ			; DockingCont::DockingCont
	mov	DWORD PTR tv235[ebp], eax
	jmp	SHORT $LN26@createDock
$LN25@createDock:
	mov	DWORD PTR tv235[ebp], 0
$LN26@createDock:
	mov	ecx, DWORD PTR tv235[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _pCont$[ebp], edx
; Line 655
	lea	eax, DWORD PTR _pCont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
; Line 658
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pCont$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pCont$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 659
	push	1
	push	0
	mov	ecx, DWORD PTR _pCont$[ebp]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 660
	lea	eax, DWORD PTR _data$[ebp+24]
	push	eax
	mov	ecx, DWORD PTR _pCont$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCont$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
; Line 661
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	sub	eax, 1
	mov	ecx, DWORD PTR _data$[ebp+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+164], eax
$LN4@createDock:
; Line 663
	mov	eax, DWORD PTR _data$[ebp+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+164]
	mov	DWORD PTR _data$[ebp+40], edx
$LN10@createDock:
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	cmp	eax, DWORD PTR _iCont$[ebp]
	jbe	SHORT $LN3@createDock
	mov	eax, DWORD PTR _iCont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@createDock
; Line 669
	sub	esp, 48					; 00000030H
	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _data$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _iCont$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?createToolbar@DockingCont@@QAEPAUtTbData@@U2@@Z ; DockingCont::createToolbar
$LN3@createDock:
; Line 672
	cmp	DWORD PTR _iCont$[ebp], 4
	jge	SHORT $LN2@createDock
; Line 673
	mov	edx, DWORD PTR _iCont$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	shl	eax, 16					; 00000010H
	or	eax, 1052				; 0000041cH
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ; DockingManager::SendNotify
; Line 674
	jmp	SHORT $LN17@createDock
$LN2@createDock:
; Line 675
	mov	edx, DWORD PTR _iCont$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	shl	eax, 16					; 00000010H
	or	eax, 1053				; 0000041dH
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendNotify@DockingManager@@AAEJPAUHWND__@@I@Z ; DockingManager::SendNotify
$LN17@createDock:
; Line 676
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z$1:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z$2:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createDockableDlg@DockingManager@@QAEXUtTbData@@H_N@Z ENDP ; DockingManager::createDockableDlg
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -12						; size = 4
_this$ = -8						; size = 4
_iCont$2 = -4						; size = 4
_hClient$ = 8						; size = 4
?updateContainerInfo@DockingManager@@QAEXPAUHWND__@@@Z PROC ; DockingManager::updateContainerInfo
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	DWORD PTR _iCont$2[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN4@updateCont
$LN3@updateCont:
	mov	eax, DWORD PTR _iCont$2[ebp]
	add	eax, 1
	mov	DWORD PTR _iCont$2[ebp], eax
$LN4@updateCont:
	mov	ecx, DWORD PTR _iCont$2[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN5@updateCont
; Line 208
	mov	edx, DWORD PTR _hClient$[ebp]
	push	edx
	mov	eax, DWORD PTR _iCont$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?updateInfo@DockingCont@@QAEHPAUHWND__@@@Z ; DockingCont::updateInfo
	cmp	eax, 1
	jne	SHORT $LN1@updateCont
; Line 210
	jmp	SHORT $LN5@updateCont
$LN1@updateCont:
; Line 212
	jmp	SHORT $LN3@updateCont
$LN5@updateCont:
; Line 213
	mov	esp, ebp
	pop	ebp
	ret	4
?updateContainerInfo@DockingManager@@QAEXPAUHWND__@@@Z ENDP ; DockingManager::updateContainerInfo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?showContainer@DockingManager@@QAEXIH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv71 = -1						; size = 1
_uCont$ = 8						; size = 4
_view$ = 12						; size = 4
?showContainer@DockingManager@@QAEXIH@Z PROC		; DockingManager::showContainer, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.h
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 69
	cmp	DWORD PTR _view$[ebp], 1
	jne	SHORT $LN3@showContai
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@showContai
$LN3@showContai:
	mov	BYTE PTR tv71[ebp], 0
$LN4@showContai:
	push	0
	movzx	eax, BYTE PTR tv71[ebp]
	push	eax
	mov	ecx, DWORD PTR _uCont$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?onSize@DockingManager@@AAEXXZ		; DockingManager::onSize
; Line 71
	mov	esp, ebp
	pop	ebp
	ret	8
?showContainer@DockingManager@@QAEXIH@Z ENDP		; DockingManager::showContainer
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$1 = -12						; size = 4
_this$ = -8						; size = 4
_iCont$2 = -4						; size = 4
_hCont$ = 8						; size = 4
_view$ = 12						; size = 4
?showContainer@DockingManager@@QAEXPAUHWND__@@H@Z PROC	; DockingManager::showContainer
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 217
	mov	DWORD PTR _iCont$2[ebp], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::size
	mov	DWORD PTR _len$1[ebp], eax
	jmp	SHORT $LN4@showContai
$LN3@showContai:
	mov	eax, DWORD PTR _iCont$2[ebp]
	add	eax, 1
	mov	DWORD PTR _iCont$2[ebp], eax
$LN4@showContai:
	mov	ecx, DWORD PTR _iCont$2[ebp]
	cmp	ecx, DWORD PTR _len$1[ebp]
	jae	SHORT $LN5@showContai
; Line 219
	mov	edx, DWORD PTR _iCont$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	cmp	eax, DWORD PTR _hCont$[ebp]
	jne	SHORT $LN1@showContai
; Line 220
	mov	eax, DWORD PTR _view$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCont$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?showContainer@DockingManager@@QAEXIH@Z	; DockingManager::showContainer
$LN1@showContai:
; Line 221
	jmp	SHORT $LN3@showContai
$LN5@showContai:
; Line 222
	mov	esp, ebp
	pop	ebp
	ret	8
?showContainer@DockingManager@@QAEXPAUHWND__@@H@Z ENDP	; DockingManager::showContainer
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?setClientWnd@DockingManager@@QAEXPAPAVWindow@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppWin$ = 8						; size = 4
?setClientWnd@DockingManager@@QAEXPAPAVWindow@@@Z PROC	; DockingManager::setClientWnd, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.h
; Line 61
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ppWin$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 63
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _ppWin$[ebp]
	mov	DWORD PTR [edx+52], eax
; Line 64
	mov	esp, ebp
	pop	ebp
	ret	4
?setClientWnd@DockingManager@@QAEXPAPAVWindow@@@Z ENDP	; DockingManager::setClientWnd
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv356 = -184						; size = 4
tv455 = -180						; size = 4
tv322 = -176						; size = 4
tv132 = -172						; size = 4
tv266 = -168						; size = 4
tv616 = -164						; size = 4
tv252 = -160						; size = 4
tv514 = -156						; size = 4
tv205 = -152						; size = 4
tv669 = -148						; size = 4
tv146 = -144						; size = 4
tv602 = -140						; size = 4
tv783 = -136						; size = 4
tv555 = -132						; size = 4
tv730 = -128						; size = 4
tv500 = -124						; size = 4
tv716 = -120						; size = 4
tv370 = -116						; size = 4
tv683 = -112						; size = 4
tv569 = -108						; size = 4
_this$ = -104						; size = 4
_rc$1 = -100						; size = 16
_rc$2 = -84						; size = 16
_rc$3 = -68						; size = 16
_rc$4 = -52						; size = 16
_rcRight$ = -36						; size = 16
_rcBottom$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_rc$ = 8						; size = 4
?reSizeTo@DockingManager@@UAEXAAUtagRECT@@@Z PROC	; DockingManager::reSizeTo
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 408
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
; Line 411
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 20					; 00000014H
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
; Line 413
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+160], 0
	jne	SHORT $LN12@reSizeTo
; Line 414
	jmp	$LN13@reSizeTo
$LN12@reSizeTo:
; Line 417
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx+96], ecx
; Line 418
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx+100], ecx
; Line 419
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+104], ecx
; Line 421
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv132[ebp], ecx
	push	0
	mov	edx, DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv132[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
; Line 423
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR tv146[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv146[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN11@reSizeTo
; Line 425
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	lea	ecx, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 426
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+108]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, edx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx
; Line 432
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+96]
	mov	DWORD PTR _rc$4[ebp], edx
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx+108]
	mov	DWORD PTR _rc$4[ebp+4], eax
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+104]
	mov	DWORD PTR _rc$4[ebp+8], edx
	mov	DWORD PTR _rc$4[ebp+12], 4
; Line 433
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv205[ebp], eax
	lea	ecx, DWORD PTR _rc$4[ebp]
	push	ecx
	mov	edx, DWORD PTR tv205[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv205[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN11@reSizeTo:
; Line 437
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+ecx+96], eax
; Line 438
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _rc$[ebp]
	add	edx, DWORD PTR [eax+12]
	mov	ecx, 16					; 00000010H
	imul	eax, ecx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	sub	edx, DWORD PTR [ecx+eax+108]
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+ecx+100], edx
; Line 439
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx+104], eax
; Line 442
	mov	edx, 16					; 00000010H
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _rcBottom$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _rcBottom$[ebp+4], ecx
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _rcBottom$[ebp+8], eax
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR _rcBottom$[ebp+12], ecx
; Line 444
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv252[ebp], edx
	push	0
	mov	eax, DWORD PTR tv252[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv252[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
; Line 446
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv266[ebp], ecx
	mov	edx, DWORD PTR tv266[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv266[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	$LN10@reSizeTo
; Line 448
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+108]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	sub	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 451
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN9@reSizeTo
; Line 453
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx+4]
	mov	DWORD PTR _rcBottom$[ebp+4], eax
; Line 454
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	sub	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _rcBottom$[ebp+12]
	mov	DWORD PTR _rcBottom$[ebp+12], eax
; Line 455
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+32], eax
$LN9@reSizeTo:
; Line 457
	mov	ecx, DWORD PTR _rcBottom$[ebp+12]
	add	ecx, 4
	jns	SHORT $LN8@reSizeTo
; Line 459
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+edx+108]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
$LN8@reSizeTo:
; Line 466
	mov	edx, DWORD PTR _rcBottom$[ebp]
	mov	DWORD PTR _rc$1[ebp], edx
	mov	eax, DWORD PTR _rcBottom$[ebp+4]
	sub	eax, 4
	mov	DWORD PTR _rc$1[ebp+4], eax
	mov	ecx, DWORD PTR _rcBottom$[ebp+8]
	mov	DWORD PTR _rc$1[ebp+8], ecx
	mov	DWORD PTR _rc$1[ebp+12], 4
; Line 467
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv322[ebp], edx
	lea	eax, DWORD PTR _rc$1[ebp]
	push	eax
	mov	ecx, DWORD PTR tv322[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv322[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN10@reSizeTo:
; Line 471
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx+96], ecx
; Line 472
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+eax+100], edx
; Line 473
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	DWORD PTR [edx+ecx+108], eax
; Line 475
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv356[ebp], ecx
	push	0
	mov	edx, DWORD PTR tv356[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv356[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
; Line 477
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv370[ebp], eax
	mov	ecx, DWORD PTR tv370[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv370[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@reSizeTo
; Line 479
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+104]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	lea	edx, DWORD PTR [edx+ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], edx
; Line 480
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+104]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	sub	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 486
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+104]
	mov	DWORD PTR _rc$2[ebp], edx
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+100]
	mov	DWORD PTR _rc$2[ebp+4], eax
	mov	DWORD PTR _rc$2[ebp+8], 4
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+108]
	mov	DWORD PTR _rc$2[ebp+12], ecx
; Line 487
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv455[ebp], edx
	lea	eax, DWORD PTR _rc$2[ebp]
	push	eax
	mov	ecx, DWORD PTR tv455[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv455[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN7@reSizeTo:
; Line 491
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+8]
	sub	edx, DWORD PTR [eax+ecx+104]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+96], edx
; Line 492
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+edx+100], ecx
; Line 493
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+edx+108], ecx
; Line 496
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _rcRight$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _rcRight$[ebp+4], eax
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _rcRight$[ebp+8], edx
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _rcRight$[ebp+12], eax
; Line 498
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv500[ebp], ecx
	push	0
	mov	edx, DWORD PTR tv500[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv500[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
; Line 499
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv514[ebp], eax
	mov	ecx, DWORD PTR tv514[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv514[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@reSizeTo
; Line 501
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+104]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	sub	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 504
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28], 15			; 0000000fH
	jge	SHORT $LN5@reSizeTo
; Line 506
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 19					; 00000013H
	mov	DWORD PTR _rcRight$[ebp], ecx
; Line 507
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR _rcRight$[ebp+8]
	lea	edx, DWORD PTR [ecx+eax-15]
	mov	DWORD PTR _rcRight$[ebp+8], edx
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 15			; 0000000fH
$LN5@reSizeTo:
; Line 515
	mov	ecx, DWORD PTR _rcRight$[ebp]
	sub	ecx, 4
	mov	DWORD PTR _rc$3[ebp], ecx
	mov	edx, DWORD PTR _rcRight$[ebp+4]
	mov	DWORD PTR _rc$3[ebp+4], edx
	mov	DWORD PTR _rc$3[ebp+8], 4
	mov	eax, DWORD PTR _rcRight$[ebp+12]
	mov	DWORD PTR _rc$3[ebp+12], eax
; Line 516
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv555[ebp], ecx
	lea	edx, DWORD PTR _rc$3[ebp]
	push	edx
	mov	eax, DWORD PTR tv555[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv555[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN6@reSizeTo:
; Line 520
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv569[ebp], ecx
	mov	edx, DWORD PTR tv569[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv569[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@reSizeTo
; Line 527
	push	4
	mov	ecx, DWORD PTR _rcBottom$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _rcBottom$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _rcBottom$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rcBottom$[ebp]
	push	ecx
	push	0
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
; Line 528
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv602[ebp], edx
	push	1
	mov	eax, DWORD PTR tv602[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv602[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN4@reSizeTo:
; Line 531
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv616[ebp], ecx
	mov	edx, DWORD PTR tv616[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv616[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	$LN3@reSizeTo
; Line 538
	push	4
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+108]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+104]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+100]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+96]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
; Line 539
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv669[ebp], ecx
	push	1
	mov	edx, DWORD PTR tv669[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv669[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
$LN3@reSizeTo:
; Line 542
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv683[ebp], eax
	mov	ecx, DWORD PTR tv683[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv683[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@reSizeTo
; Line 549
	push	4
	mov	edx, DWORD PTR _rcRight$[ebp+12]
	push	edx
	mov	eax, DWORD PTR _rcRight$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _rcRight$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _rcRight$[ebp]
	push	edx
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
; Line 550
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv716[ebp], eax
	push	1
	mov	ecx, DWORD PTR tv716[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv716[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN2@reSizeTo:
; Line 553
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv730[ebp], ecx
	mov	edx, DWORD PTR tv730[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv730[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	$LN1@reSizeTo
; Line 560
	push	4
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+108]
	push	ecx
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+104]
	push	edx
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+100]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+96]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SetWindowPos@28
; Line 561
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv783[ebp], edx
	push	1
	mov	eax, DWORD PTR tv783[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv783[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN1@reSizeTo:
; Line 563
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN13@reSizeTo:
; Line 564
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?reSizeTo@DockingManager@@UAEXAAUtagRECT@@@Z ENDP	; DockingManager::reSizeTo
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_clz$1 = -88						; size = 40
$T2 = -48						; size = 12
$T3 = -36						; size = 12
$T4 = -24						; size = 12
tv172 = -12						; size = 4
_iCont$5 = -8						; size = 4
_this$ = -4						; size = 4
_hInst$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_ppWin$ = 16						; size = 4
?init@DockingManager@@QAEXPAUHINSTANCE__@@PAUHWND__@@PAPAVWindow@@@Z PROC ; DockingManager::init
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInst$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z ; Window::init
; Line 110
	cmp	DWORD PTR ?_isRegistered@DockingManager@@0HA, 0 ; DockingManager::_isRegistered
	jne	$LN12@init
; Line 114
	mov	DWORD PTR _clz$1[ebp], 0
; Line 115
	mov	DWORD PTR _clz$1[ebp+4], OFFSET ?staticWinProc@DockingManager@@CGJPAUHWND__@@IIJ@Z ; DockingManager::staticWinProc
; Line 116
	mov	DWORD PTR _clz$1[ebp+8], 0
; Line 117
	mov	DWORD PTR _clz$1[ebp+12], 0
; Line 118
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _clz$1[ebp+16], eax
; Line 119
	mov	DWORD PTR _clz$1[ebp+20], 0
; Line 120
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	mov	DWORD PTR _clz$1[ebp+24], eax
; Line 121
	mov	DWORD PTR _clz$1[ebp+28], 0
; Line 122
	mov	DWORD PTR _clz$1[ebp+32], 0
; Line 123
	mov	DWORD PTR _clz$1[ebp+36], OFFSET $SG126048
; Line 125
	lea	ecx, DWORD PTR _clz$1[ebp]
	push	ecx
	call	DWORD PTR __imp__RegisterClassW@4
	movzx	edx, ax
	test	edx, edx
	jne	SHORT $LN11@init
; Line 127
	push	OFFSET $SG126052
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	__CxxThrowException@8
$LN11@init:
; Line 129
	mov	DWORD PTR ?_isRegistered@DockingManager@@0HA, 1 ; DockingManager::_isRegistered
$LN12@init:
; Line 142
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	1107296256				; 42000000H
	push	OFFSET $SG126058
	push	OFFSET $SG126059
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 144
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN10@init
; Line 146
	push	OFFSET $SG126063
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	__CxxThrowException@8
$LN10@init:
; Line 149
	mov	ecx, DWORD PTR _ppWin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setClientWnd@DockingManager@@QAEXPAPAVWindow@@@Z ; DockingManager::setClientWnd
; Line 152
	mov	DWORD PTR _iCont$5[ebp], 0
	jmp	SHORT $LN9@init
$LN8@init:
	mov	edx, DWORD PTR _iCont$5[ebp]
	add	edx, 1
	mov	DWORD PTR _iCont$5[ebp], edx
$LN9@init:
	cmp	DWORD PTR _iCont$5[ebp], 4
	jge	$LN7@init
; Line 154
	mov	eax, DWORD PTR _iCont$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv172[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR tv172[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv172[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
; Line 155
	push	0
	push	0
	mov	ecx, DWORD PTR _iCont$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?doDialog@DockingCont@@QAEX_N0@Z	; DockingCont::doDialog
; Line 156
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _iCont$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?getHSelf@Window@@QBEPAUHWND__@@XZ	; Window::getHSelf
	push	eax
	call	DWORD PTR __imp__SetParent@8
; Line 158
	cmp	DWORD PTR _iCont$5[ebp], 2
	je	SHORT $LN5@init
	cmp	DWORD PTR _iCont$5[ebp], 3
	jne	SHORT $LN6@init
$LN5@init:
; Line 159
	push	2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _iCont$5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?init@DockingSplitter@@QAEXPAUHINSTANCE__@@PAUHWND__@@1I@Z ; DockingSplitter::init
; Line 160
	jmp	SHORT $LN4@init
$LN6@init:
; Line 161
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _iCont$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?init@DockingSplitter@@QAEXPAUHINSTANCE__@@PAUHWND__@@1I@Z ; DockingSplitter::init
$LN4@init:
; Line 162
	jmp	$LN8@init
$LN7@init:
; Line 164
	cmp	DWORD PTR _hWndServer, 0
	jne	SHORT $LN3@init
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _hWndServer, edx
$LN3@init:
; Line 166
	push	0
	call	DWORD PTR __imp__CoInitialize@4
; Line 167
	cmp	DWORD PTR _gWinCallHook, 0
	jne	SHORT $LN2@init
; Line 168
	call	DWORD PTR __imp__GetCurrentThreadId@0
	push	eax
	mov	eax, DWORD PTR _hInst$[ebp]
	push	eax
	push	OFFSET ?FocusWndProc@@YGJHIJ@Z		; FocusWndProc
	push	4
	call	DWORD PTR __imp__SetWindowsHookExW@16
	mov	DWORD PTR _gWinCallHook, eax
$LN2@init:
; Line 170
	cmp	DWORD PTR _gWinCallHook, 0
	jne	SHORT $LN1@init
; Line 172
	push	OFFSET $SG126076
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN1@init:
; Line 175
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+92], ecx
; Line 177
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], 1
$LN14@init:
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?init@DockingManager@@QAEXPAUHINSTANCE__@@PAUHWND__@@PAPAVWindow@@@Z ENDP ; DockingManager::init
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv128 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
_i$4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DockingManager@@UAE@XZ PROC				; DockingManager::~DockingManager
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 98
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DockingManager@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DockingManager@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 100
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN3@DockingMan
$LN2@DockingMan:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN3@DockingMan:
	cmp	DWORD PTR _i$4[ebp], 4
	jge	SHORT $LN4@DockingMan
; Line 102
	mov	edx, DWORD PTR _i$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??A?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEAAPAVDockingSplitter@@I@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@DockingMan
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN7@DockingMan
$LN6@DockingMan:
	mov	DWORD PTR tv128[ebp], 0
$LN7@DockingMan:
; Line 103
	jmp	SHORT $LN2@DockingMan
$LN4@DockingMan:
; Line 104
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::~vector<DockingSplitter *,std::allocator<DockingSplitter *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::~vector<HWND__ *,std::allocator<HWND__ *> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@UAE@XZ			; Window::~Window
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1DockingManager@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__unwindfunclet$??1DockingManager@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::~vector<HWND__ *,std::allocator<HWND__ *> >
__unwindfunclet$??1DockingManager@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	jmp	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
__unwindfunclet$??1DockingManager@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::~vector<DockingSplitter *,std::allocator<DockingSplitter *> >
__ehhandler$??1DockingManager@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DockingManager@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DockingManager@@UAE@XZ ENDP				; DockingManager::~DockingManager
; Function compile flags: /Odtp
_TEXT	SEGMENT
__pSplitter$2 = -52					; size = 4
$T3 = -48						; size = 4
__pDockCont$4 = -44					; size = 4
$T5 = -40						; size = 4
tv164 = -36						; size = 4
$T6 = -32						; size = 4
tv154 = -28						; size = 4
$T7 = -24						; size = 4
_i$8 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0DockingManager@@QAE@XZ PROC				; DockingManager::DockingManager
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingmanager.cpp
; Line 76
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DockingManager@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Window@@QAE@XZ			; Window::Window
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DockingManager@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::vector<HWND__ *,std::allocator<HWND__ *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::vector<DockingCont *,std::allocator<DockingCont *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::vector<DockingSplitter *,std::allocator<DockingSplitter *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+160], 0
; Line 78
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 0
; Line 79
	push	200					; 000000c8H
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 81
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+164], 0
; Line 82
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+164], 1
; Line 83
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+164], 2
; Line 84
	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+164], 3
; Line 87
	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN3@DockingMan
$LN2@DockingMan:
	mov	edx, DWORD PTR _i$8[ebp]
	add	edx, 1
	mov	DWORD PTR _i$8[ebp], edx
$LN3@DockingMan:
	cmp	DWORD PTR _i$8[ebp], 4
	jge	$LN4@DockingMan
; Line 89
	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN6@DockingMan
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0DockingCont@@QAE@XZ			; DockingCont::DockingCont
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN7@DockingMan
$LN6@DockingMan:
	mov	DWORD PTR tv154[ebp], 0
$LN7@DockingMan:
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR __pDockCont$4[ebp], ecx
; Line 90
	lea	edx, DWORD PTR __pDockCont$4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?push_back@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXABQAVDockingCont@@@Z ; std::vector<DockingCont *,std::allocator<DockingCont *> >::push_back
; Line 92
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN8@DockingMan
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0DockingSplitter@@QAE@XZ		; DockingSplitter::DockingSplitter
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN9@DockingMan
$LN8@DockingMan:
	mov	DWORD PTR tv164[ebp], 0
$LN9@DockingMan:
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR __pSplitter$2[ebp], ecx
; Line 93
	lea	edx, DWORD PTR __pSplitter$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?push_back@?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAEXABQAVDockingSplitter@@@Z ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::push_back
; Line 94
	jmp	$LN2@DockingMan
$LN4@DockingMan:
; Line 95
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0DockingManager@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Window@@UAE@XZ			; Window::~Window
__unwindfunclet$??0DockingManager@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1?$vector@PAUHWND__@@V?$allocator@PAUHWND__@@@std@@@std@@QAE@XZ ; std::vector<HWND__ *,std::allocator<HWND__ *> >::~vector<HWND__ *,std::allocator<HWND__ *> >
__unwindfunclet$??0DockingManager@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	jmp	??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ ; std::vector<DockingCont *,std::allocator<DockingCont *> >::~vector<DockingCont *,std::allocator<DockingCont *> >
__unwindfunclet$??0DockingManager@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$vector@PAVDockingSplitter@@V?$allocator@PAVDockingSplitter@@@std@@@std@@QAE@XZ ; std::vector<DockingSplitter *,std::allocator<DockingSplitter *> >::~vector<DockingSplitter *,std::allocator<DockingSplitter *> >
__unwindfunclet$??0DockingManager@@QAE@XZ$4:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0DockingManager@@QAE@XZ$5:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0DockingManager@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DockingManager@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DockingManager@@QAE@XZ ENDP				; DockingManager::DockingManager
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IBEXXZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IBEXXZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXXZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXPAPAUtTbData@@0@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEXPAPAUtTbData@@I@Z ; std::_Wrap_alloc<std::allocator<tTbData *> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXXZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXPAPAUtTbData@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alval$ = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXPAPAUtTbData@@0@Z PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@@std@@YAXPAPAUtTbData@@0AAU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<tTbData *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXPAPAUtTbData@@0@Z ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAE_NI@Z PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::_Buy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1546
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1548
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 1549
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 1551
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1552
	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1553
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1554
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IBEXXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::_Xlen
; Line 1555
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1557
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEPAPAUtTbData@@I@Z ; std::_Wrap_alloc<std::allocator<tTbData *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1558
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 1559
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN3@Buy:
; Line 1561
	mov	al, 1
$LN6@Buy:
; Line 1562
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@operator
; Line 1201
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1KG@EEBFNKPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAt?$AAT?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CK?$AA?0?$AAc?$AAl?$AAa@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<tTbData *> >::max_size
; Line 1154
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@end
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
$LN4@end:
	ret	0
__ehhandler$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::end
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 1030
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@PAPAUtTbData@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@begin
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
$LN4@begin:
	ret	0
__ehhandler$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::begin
; Function compile flags: /Odtp
;	COMDAT ??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy
; Line 946
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::~_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::~_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
__ehhandler$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv178 = -52						; size = 4
$T2 = -48						; size = 4
tv175 = -44						; size = 4
$T3 = -40						; size = 4
tv135 = -36						; size = 4
tv180 = -32						; size = 4
tv69 = -28						; size = 4
_this$ = -24						; size = 4
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<tTbData *,std::allocator<tTbData *> >::vector<tTbData *,std::allocator<tTbData *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 721
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<tTbData *> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 722
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAE_NI@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	$LN3@vector
; Line 723
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 725
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv175[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@2@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::begin
	mov	DWORD PTR tv180[ebp], eax
	mov	edx, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEPAPAUtTbData@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@1@0PAPAU2@@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tTbData *> > > >
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN5@vector
__catch$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$0:
; Line 727
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@IAEXXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::_Tidy
; Line 728
	push	0
	push	0
	call	__CxxThrowException@8
; Line 729
	mov	eax, $LN11@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN3@vector
$LN11@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector:
; Line 730
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::~_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
__unwindfunclet$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$3:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z$4:
	mov	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<tTbData *,std::allocator<tTbData *> >::vector<tTbData *,std::allocator<tTbData *> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::~_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Free_proxy
; Line 609
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::~_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<tTbData *> >::_Vector_val<std::_Simple_types<tTbData *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >::_Vector_alloc<0,std::_Vec_base_types<tTbData *,std::allocator<tTbData *> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<tTbData *> >::~_Vector_val<std::_Simple_types<tTbData *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<tTbData *> >::~_Vector_val<std::_Simple_types<tTbData *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<tTbData *> >::_Vector_val<std::_Simple_types<tTbData *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@U?$_Simple_types@PAUtTbData@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<tTbData *> >::_Vector_val<std::_Simple_types<tTbData *> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<tTbData *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SAIABV?$allocator@PAUtTbData@@@2@@Z ; std::allocator_traits<std::allocator<tTbData *> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<tTbData *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEXPAPAUtTbData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEXPAPAUtTbData@@I@Z PROC ; std::_Wrap_alloc<std::allocator<tTbData *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAUtTbData@@@std@@QAEXPAPAUtTbData@@I@Z ; std::allocator<tTbData *>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEXPAPAUtTbData@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<tTbData *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEPAPAUtTbData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEPAPAUtTbData@@I@Z PROC ; std::_Wrap_alloc<std::allocator<tTbData *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@PAUtTbData@@@std@@QAEPAPAUtTbData@@I@Z ; std::allocator<tTbData *>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAEPAPAUtTbData@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<tTbData *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAUtTbData@@@std@@QAE@ABV01@@Z ; std::allocator<tTbData *>::allocator<tTbData *>
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAUtTbData@@@std@@QAE@XZ	; std::allocator<tTbData *>::allocator<tTbData *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<tTbData *> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SA?AV?$allocator@PAUtTbData@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<tTbData *> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV?$allocator@PAUtTbData@@@1@@Z ; std::_Wrap_alloc<std::allocator<tTbData *> >::_Wrap_alloc<std::allocator<tTbData *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 780
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAUtTbData@@@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<tTbData *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SA?AV?$allocator@PAUtTbData@@@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SA?AV?$allocator@PAUtTbData@@@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<tTbData *> >::select_on_container_copy_construction, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 740
	push	ebp
	mov	ebp, esp
; Line 741
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?select_on_container_copy_construction@?$allocator@PAUtTbData@@@std@@QBE?AV12@XZ ; std::allocator<tTbData *>::select_on_container_copy_construction
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 742
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SA?AV?$allocator@PAUtTbData@@@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<tTbData *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SAIABV?$allocator@PAUtTbData@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SAIABV?$allocator@PAUtTbData@@@2@@Z PROC ; std::allocator_traits<std::allocator<tTbData *> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@PAUtTbData@@@std@@QBEIXZ ; std::allocator<tTbData *>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@PAUtTbData@@@std@@@std@@SAIABV?$allocator@PAUtTbData@@@2@@Z ENDP ; std::allocator_traits<std::allocator<tTbData *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@PAUtTbData@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAUtTbData@@@std@@QBEIXZ PROC	; std::allocator<tTbData *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAUtTbData@@@std@@QBEIXZ ENDP	; std::allocator<tTbData *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAUtTbData@@@std@@QAEPAPAUtTbData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUtTbData@@@std@@QAEPAPAUtTbData@@I@Z PROC ; std::allocator<tTbData *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAUtTbData@@@std@@YAPAPAUtTbData@@IPAPAU1@@Z ; std::_Allocate<tTbData *>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAUtTbData@@@std@@QAEPAPAUtTbData@@I@Z ENDP ; std::allocator<tTbData *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PAUtTbData@@@std@@QAEXPAPAUtTbData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUtTbData@@@std@@QAEXPAPAUtTbData@@I@Z PROC ; std::allocator<tTbData *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAUtTbData@@@std@@QAEXPAPAUtTbData@@I@Z ENDP ; std::allocator<tTbData *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAUtTbData@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAUtTbData@@@std@@QAE@ABV01@@Z PROC	; std::allocator<tTbData *>::allocator<tTbData *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 556
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAUtTbData@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<tTbData *>::allocator<tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAUtTbData@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUtTbData@@@std@@QAE@XZ PROC		; std::allocator<tTbData *>::allocator<tTbData *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAUtTbData@@@std@@QAE@XZ ENDP		; std::allocator<tTbData *>::allocator<tTbData *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?select_on_container_copy_construction@?$allocator@PAUtTbData@@@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@PAUtTbData@@@std@@QBE?AV12@XZ PROC ; std::allocator<tTbData *>::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@PAUtTbData@@@std@@QAE@ABV01@@Z ; std::allocator<tTbData *>::allocator<tTbData *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 534
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$allocator@PAUtTbData@@@std@@QBE?AV12@XZ ENDP ; std::allocator<tTbData *>::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetActive@DockingCont@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bState$ = 8						; size = 4
?SetActive@DockingCont@@QAEXH@Z PROC			; DockingCont::SetActive, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 134
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bState$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 136
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateCaption@DockingCont@@IAE_NXZ	; DockingCont::updateCaption
; Line 137
	mov	esp, ebp
	pop	ebp
	ret	4
?SetActive@DockingCont@@QAEXH@Z ENDP			; DockingCont::SetActive
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isFloating@DockingCont@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isFloating@DockingCont@@QAE_NXZ PROC			; DockingCont::isFloating, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 112
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+36]
; Line 114
	mov	esp, ebp
	pop	ebp
	ret	0
?isFloating@DockingCont@@QAE_NXZ ENDP			; DockingCont::isFloating
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ PROC ; DockingCont::getDataOfAllTb, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 104
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@ABV01@@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::vector<tTbData *,std::allocator<tTbData *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 106
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN4@getDataOfA
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAE@XZ ; std::vector<tTbData *,std::allocator<tTbData *> >::~vector<tTbData *,std::allocator<tTbData *> >
$LN4@getDataOfA:
	ret	0
__ehhandler$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getDataOfAllTb@DockingCont@@QAE?AV?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@XZ ENDP ; DockingCont::getDataOfAllTb
; Function compile flags: /Odtp
;	COMDAT ?updateInfo@DockingCont@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iTb$1 = -4						; size = 4
_hClient$ = 8						; size = 4
?updateInfo@DockingCont@@QAEHPAUHWND__@@@Z PROC		; DockingCont::updateInfo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\dockingwnd\dockingcont.h
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	DWORD PTR _iTb$1[ebp], 0
	jmp	SHORT $LN4@updateInfo
$LN3@updateInfo:
	mov	eax, DWORD PTR _iTb$1[ebp]
	add	eax, 1
	mov	DWORD PTR _iTb$1[ebp], eax
$LN4@updateInfo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	?size@?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QBEIXZ ; std::vector<tTbData *,std::allocator<tTbData *> >::size
	cmp	DWORD PTR _iTb$1[ebp], eax
	jae	SHORT $LN2@updateInfo
; Line 91
	mov	ecx, DWORD PTR _iTb$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??A?$vector@PAUtTbData@@V?$allocator@PAUtTbData@@@std@@@std@@QAEAAPAUtTbData@@I@Z ; std::vector<tTbData *,std::allocator<tTbData *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR _hClient$[ebp]
	jne	SHORT $LN1@updateInfo
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateCaption@DockingCont@@IAE_NXZ	; DockingCont::updateCaption
; Line 94
	mov	eax, 1
	jmp	SHORT $LN5@updateInfo
$LN1@updateInfo:
; Line 96
	jmp	SHORT $LN3@updateInfo
$LN2@updateInfo:
; Line 97
	xor	eax, eax
$LN5@updateInfo:
; Line 98
	mov	esp, ebp
	pop	ebp
	ret	4
?updateInfo@DockingCont@@QAEHPAUHWND__@@@Z ENDP		; DockingCont::updateInfo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_System_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_System_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 608
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_System_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_System_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_System_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Iostream_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Generic_error_category@std@@UAE@XZ
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??1_Generic_error_category@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv69 = -20						; size = 4
__Name$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 564
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN6@message
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@message:
	ret	0
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
; Function compile flags: /Odtp
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Generic_error_category@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
__ehhandler$??0_Generic_error_category@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
; Function compile flags: /Odtp
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:
; Line 548
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GWindow@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GWindow@@UAEPAXI@Z PROC				; Window::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@UAE@XZ			; Window::~Window
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GWindow@@UAEPAXI@Z ENDP				; Window::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getHSelf@Window@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getHSelf@Window@@QBEPAUHWND__@@XZ PROC			; Window::getHSelf, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 96
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 99
	mov	esp, ebp
	pop	ebp
	ret	0
?getHSelf@Window@@QBEPAUHWND__@@XZ ENDP			; Window::getHSelf
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?isVisible@Window@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -1						; size = 1
?isVisible@Window@@UBE_NXZ PROC				; Window::isVisible, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	test	eax, eax
	je	SHORT $LN3@isVisible
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@isVisible
$LN3@isVisible:
	mov	BYTE PTR tv68[ebp], 0
$LN4@isVisible:
	mov	al, BYTE PTR tv68[ebp]
; Line 94
	mov	esp, ebp
	pop	ebp
	ret	0
?isVisible@Window@@UBE_NXZ ENDP				; Window::isVisible
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getHeight@Window@@UBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?getHeight@Window@@UBEHXZ PROC				; Window::getHeight, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__IsWindowVisible@4
	cmp	eax, 1
	jne	SHORT $LN1@getHeight
; Line 88
	mov	eax, DWORD PTR _rc$[ebp+12]
	sub	eax, DWORD PTR _rc$[ebp+4]
	jmp	SHORT $LN2@getHeight
$LN1@getHeight:
; Line 89
	xor	eax, eax
$LN2@getHeight:
; Line 90
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?getHeight@Window@@UBEHXZ ENDP				; Window::getHeight
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getWidth@Window@@UBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_rc$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?getWidth@Window@@UBEHXZ PROC				; Window::getWidth, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 81
	mov	eax, DWORD PTR _rc$[ebp+8]
	sub	eax, DWORD PTR _rc$[ebp]
; Line 82
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?getWidth@Window@@UBEHXZ ENDP				; Window::getWidth
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getWindowRect@Window@@UBEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z PROC		; Window::getWindowRect, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetWindowRect@8
; Line 76
	mov	esp, ebp
	pop	ebp
	ret	4
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z ENDP		; Window::getWindowRect
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?getClientRect@Window@@UBEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?getClientRect@Window@@UBEXAAUtagRECT@@@Z PROC		; Window::getClientRect, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _rc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 72
	mov	esp, ebp
	pop	ebp
	ret	4
?getClientRect@Window@@UBEXAAUtagRECT@@@Z ENDP		; Window::getClientRect
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?redraw@Window@@UBEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_forceUpdate$ = 8					; size = 1
?redraw@Window@@UBEX_N@Z PROC				; Window::redraw, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 66
	movzx	edx, BYTE PTR _forceUpdate$[ebp]
	test	edx, edx
	je	SHORT $LN2@redraw
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
$LN2@redraw:
; Line 68
	mov	esp, ebp
	pop	ebp
	ret	4
?redraw@Window@@UBEX_N@Z ENDP				; Window::redraw
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z PROC		; Window::reSizeToWH, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	push	1
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR __imp__MoveWindow@24
; Line 61
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	4
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z ENDP		; Window::reSizeToWH
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?reSizeTo@Window@@UAEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z PROC		; Window::reSizeTo, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 54
	push	1
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _rc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _rc$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__MoveWindow@24
; Line 55
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
; Line 56
	mov	esp, ebp
	pop	ebp
	ret	4
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z ENDP		; Window::reSizeTo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?display@Window@@UBEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_toShow$ = 8						; size = 1
?display@Window@@UBEX_N@Z PROC				; Window::display, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	movzx	eax, BYTE PTR _toShow$[ebp]
	test	eax, eax
	je	SHORT $LN3@display
	mov	DWORD PTR tv67[ebp], 5
	jmp	SHORT $LN4@display
$LN3@display:
	mov	DWORD PTR tv67[ebp], 0
$LN4@display:
	mov	ecx, DWORD PTR tv67[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
; Line 50
	mov	esp, ebp
	pop	ebp
	ret	4
?display@Window@@UBEX_N@Z ENDP				; Window::display
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hInst$ = 8						; size = 4
_parent$ = 12						; size = 4
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z PROC	; Window::init, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hInst$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 43
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _parent$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	8
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z ENDP	; Window::init
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Window@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Window@@UAE@XZ PROC					; Window::~Window, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Window@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1Window@@UAE@XZ ENDP					; Window::~Window
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Window@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Window@@QAE@XZ PROC					; Window::Window, COMDAT
; _this$ = ecx
; File c:\workspace\notepad-plus-plus-6.7.9.2\powereditor\src\wincontrols\window.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Window@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Window@@QAE@XZ ENDP					; Window::Window
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Odtp
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1runtime_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
__ehhandler$??1runtime_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1runtime_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
; Function compile flags: /Odtp
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\stdexcept
; Line 178
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0runtime_error@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
; Line 179
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
__ehhandler$??0runtime_error@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Odtp
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:
; Line 2296
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:
; Line 2291
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	edx, DWORD PTR __Oldlen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 2232
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	mov	esp, ebp
	pop	ebp
	ret	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
__Alproxy$ = -1						; size = 1
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	mov	esp, ebp
	pop	ebp
	ret	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnext$1 = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 189
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -28						; size = 4
__Lock$3 = -24						; size = 4
__Parent_proxy$4 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$4[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$4[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:
; Line 174
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$3[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:
; Line 127
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator
; Line 128
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 129
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 132
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
; Line 137
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 120
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -20						; size = 4
__Pnext$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all
; Line 218
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$3[ebp], edx
; Line 221
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all
; Line 222
	mov	edx, DWORD PTR __Pnext$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:
; Line 223
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0
; Line 224
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0:
	lea	ecx, DWORD PTR __Lock$2[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv68[ebp]
; Line 101
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
; Line 557
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	__hypot
	add	esp, 16					; 00000010H
; Line 558
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
END
